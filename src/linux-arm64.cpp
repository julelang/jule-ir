// Auto generated by JuleC.
// JuleC version: jule0.1.1 @master
// Date: 1/10/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include <arpa/inet.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <pthread.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _2280956ec_acceptRange;
struct _2280d92ce_LittleEndian;
struct _228103bab_u128;
struct _1b7ed3e09_group;
struct _1b802e6b3_group;
struct _1b7ed1ab6__Map;
struct _1b802c5c3__Map;
struct _1b7edd342_mapIterator;
struct _1b8036b1b_mapIterator;
struct _20d8b29d4_foldPair;
struct _20d8b2ece_CaseRange;
struct _20d8b3485_Range16;
struct _20d8b39b3_Range32;
struct _20d8b3e36_RangeTable;
struct _20d8ca601_Builder;
struct _227d327b9_lazyBuff;
struct _20c648c55_DirEntry;
struct _20c648edb_Directory;
struct _20c64a729_File;
struct _20c64c85d_Status;
struct _20dbb7558_cmdAttrs;
struct _20daa5e91_Log;
struct _1cab113c5_floatInfo;
struct _1cab11eec_decimalSlice;
struct _1cab24075_leftCheat;
struct _1cab24a8c_decimal;
struct _20dbe9a96_AnsiEscape;
struct _1cab2a224_Logger;
struct _1b2ac7eba_Token;
struct _1b2acd872_Fileset;
struct _1b2ad0874_kindPair;
struct _1b2ad6858_lex;
struct _1b2adb52d_AST;
struct _1b2adc3db_Node;
struct _1b2adc809_Directive;
struct _1b2add3dc_TypeDecl;
struct _1b2add9e7_IdentTypeDecl;
struct _1b2addcb1_SubIdentTypeDecl;
struct _1b2ade18a_NamespaceTypeDecl;
struct _1b2ade487_SptrTypeDecl;
struct _1b2ade81c_SlcTypeDecl;
struct _1b2adeb19_TupleTypeDecl;
struct _1b2adee16_PtrTypeDecl;
struct _1b2ae06a8_ArrTypeDecl;
struct _1b2ae0e06_MapTypeDecl;
struct _1b2ae12d0_RetTypeDecl;
struct _1b2ae2721_Expr;
struct _1b2ae29da_RangeExpr;
struct _1b2ae30e5_UseExpr;
struct _1b2ae3315_TupleExpr;
struct _1b2ae36ab_LitExpr;
struct _1b2ae3a85_UnsafeExpr;
struct _1b2ae403b_IdentExpr;
struct _1b2ae47cd_UnaryExpr;
struct _1b2ae4ba7_VariadicExpr;
struct _1b2ae5081_CastExpr;
struct _1b2ae545a_NamespaceExpr;
struct _1b2ae5834_SubIdentExpr;
struct _1b2ae5cda_BinaryExpr;
struct _1b2ae644a_FnCallExpr;
struct _1b2ae6e40_FieldExprPair;
struct _1b2ae776a_StructLit;
struct _1b2ae7c21_BraceLit;
struct _1b2ae854b_KeyValPair;
struct _1b2ae8c77_SliceExpr;
struct _1b2ae96d4_IndexingExpr;
struct _1b2ae9d44_SlicingExpr;
struct _1b2aea141_Constraint;
struct _1b2aea5e7_GenericDecl;
struct _1b2aea9c1_LabelSt;
struct _1b2aead9a_GotoSt;
struct _1b2aeb197_FallSt;
struct _1b2aeb807_AssignLeft;
struct _1b2aebd8a_AssignSt;
struct _1b2aecc9d_Stmt;
struct _1b2aed40d_ScopeTree;
struct _1b2aedb4a_ParamDecl;
struct _1b2b0009c_FnDecl;
struct _1b2b01257_VarDecl;
struct _1b2b01631_RetSt;
struct _1b2b01da1_Iter;
struct _1b2b026cb_WhileKind;
struct _1b2b030d3_RangeKind;
struct _1b2b034ac_BreakSt;
struct _1b2b03886_ContSt;
struct _1b2b03d3c_If;
struct _1b2b04216_Else;
struct _1b2b046bc_Conditional;
struct _1b2b04e09_TypeAliasDecl;
struct _1b2b053b0_Case;
struct _1b2b05bc9_MatchCase;
struct _1b2b0625c_UseDecl;
struct _1b2b06713_EnumItemDecl;
struct _1b2b072c4_EnumDecl;
struct _1b2b07aee_TypeEnumItemDecl;
struct _1b2b0825e_TypeEnumDecl;
struct _1b2b08528_FieldDecl;
struct _1b2b08e1e_StructDecl;
struct _1b2b0965b_TraitDecl;
struct _1b2b09cbb_Impl;
struct _1b2b6c23a_Const;
struct _1b2b0ac78_Field;
struct _1b2b0cc58_Operators;
struct _1b2b0db6b_Struct;
struct _1b2b10e26_FieldIns;
struct _1b2b119c6_StructIns;
struct _1b2bcd125_OperandExprModel;
struct _1b2bcd620_BinaryExprModel;
struct _1b2bcd9e9_UnaryExprModel;
struct _1b2bce027_StructArgExprModel;
struct _1b2bce3bd_StructLitExprModel;
struct _1b2bce6ba_AllocStructLitExprModel;
struct _1b2bcec4d_CastingExprModel;
struct _1b2bd0600_FnCallExprModel;
struct _1b2bd09c9_SliceExprModel;
struct _1b2bd0e80_IndexingExprModel;
struct _1b2bd1436_AnonFnExprModel;
struct _1b2bd1810_KeyValPairExprModel;
struct _1b2bd1bd9_MapExprModel;
struct _1b2bd226c_SlicingExprModel;
struct _1b2bd2800_TraitSubIdentExprModel;
struct _1b2bd3191_StructSubIdentExprModel;
struct _1b2bd3537_StructStaticIdentExprModel;
struct _1b2bd3911_ArrayExprModel;
struct _1b2bd3c0d_TupleExprModel;
struct _1b2bd40d7_BuiltinOutCallExprModel;
struct _1b2bd44b1_BuiltinOutlnCallExprModel;
struct _1b2bd488a_BuiltinNewCallExprModel;
struct _1b2bd4c64_BuiltinPanicCallExprModel;
struct _1b2bd521a_BuiltinMakeCallExprModel;
struct _1b2bd55e4_BuiltinAppendCallExprModel;
struct _1b2bd58e1_BuiltinLenCallExprModel;
struct _1b2bd5bdd_BuiltinCapCallExprModel;
struct _1b2bd60b7_BuiltinDeleteCallExprModel;
struct _1b2bd6491_BuiltinCopyCallExprModel;
struct _1b2bd686a_BuiltinErrorCallExprModel;
struct _1b2bd6b67_SizeofExprModel;
struct _1b2bd731b_AlignofExprModel;
struct _1b2bd7508_RuneExprModel;
struct _1b2bd787c_BackendEmitExprModel;
struct _1b2bd7b79_FreeExprModel;
struct _1b2bd876d_RetType;
struct _1b2bd8edd_Param;
struct _1b2bda9b2_Fn;
struct _1b2bdc91a_ParamIns;
struct _1b2bdda70_FnIns;
struct _1b2be1cb5_SymTab;
struct _1b2be61c6_Trait;
struct _1b2be7d32_EnumItem;
struct _1b2be887c_Enum;
struct _1b2be99b0_TypeEnumItem;
struct _1b2bea087_TypeEnum;
struct _1b2c76ba2_comptimeRange;
struct _1b2c7770d_comptimeStructField;
struct _1b2c78ea1_comptimeStructFields;
struct _1b2c7a931_comptimeStatic;
struct _1b2c7c1d5_comptimeStatics;
struct _1b2c7db54_comptimeEnumField;
struct _1b2c7ee63_comptimeEnumFields;
struct _1b2c8196a_comptimeParam;
struct _1b2c837c4_comptimeParams;
struct _1b2c85133_comptimeTypeInfos;
struct _1b2c86aa2_comptimeTypeInfo;
struct _1b2c8cba7_comptimeValue;
struct _1b2c90913_comptimeFiles;
struct _1b2c92382_comptimeFile;
struct _1b2c93eaa_comptimeDecls;
struct _1b2c96298_comptimeDecl;
struct _1b2c9cb84_constraintChecker;
struct _1b2c9ee83_Impl;
struct _1b2ca4592_Scope;
struct _1b2ca49b0_If;
struct _1b2ca4cac_Else;
struct _1b2ca51ca_Conditional;
struct _1b2ca54c7_InfIter;
struct _1b2ca597d_WhileIter;
struct _1b2ca63c9_RangeIter;
struct _1b2ca675e_ContSt;
struct _1b2ca6b38_BreakSt;
struct _1b2ca70de_Label;
struct _1b2ca774e_GotoSt;
struct _1b2ca7b28_Postfix;
struct _1b2ca80ce_Assign;
struct _1b2ca8585_MultiAssign;
struct _1b2ca8cc2_Match;
struct _1b2ca97ea_Case;
struct _1b2ca9ee3_FallSt;
struct _1b2caa389_RetSt;
struct _1b2caa840_scopeLabel;
struct _1b2cab830_scopeChecker;
struct _1b2cc06bd_directiveChecker;
struct _1b2cc3094_ReferenceStack;
struct _1b2cc4408_Pass;
struct _1b2cc8dad_symBuilder;
struct _1b2cd4e1e_ImportInfo;
struct _1b2cd7691_Package;
struct _1b2d02469_commonSemaMeta;
struct _1b2d03091_sema;
struct _1b2d232c0_missingRetChecker;
struct _1b2d26ca7_Var;
struct _1b2d27b32_FuncPattern;
struct _1b2d653de_typeCompatibilityChecker;
struct _1b2d6c0c7_assignTypeChecker;
struct _1b2d6d99c_dynamicTypeAnnotation;
struct _1b2d73809_fnCallArgChecker;
struct _1b2d76741_structLitChecker;
struct _1b2d78523_rangeChecker;
struct _1b2d7ac84_retTypeChecker;
struct _1b2d7dc21_Data;
struct _1b2d7ed98_Value;
struct _1b2d80948_eval;
struct _1b2d9ec42_unaryEval;
struct _1b2da1bcd_binaryEval;
struct _1b2daee72_InsGeneric;
struct _1b2db0835_TypeAlias;
struct _1b2db1627_TypeKind;
struct _1b2db8d38_TypeSymbol;
struct _1b2db9740_Prim;
struct _1b2dbd26b_Sptr;
struct _1b2dbdc3e_Slc;
struct _1b2dbe833_Tuple;
struct _1b2dc03d3_Map;
struct _1b2dc1060_Arr;
struct _1b2dc1a33_Ptr;
struct _1b2dc2a34_referencer;
struct _1b2dc3a24_typeChecker;
struct _1b2dcbad7_identTypeLookup;
struct _1b37ca35e_FileInfo;
struct _1b382d8e0_stmt;
struct _1b382e281_scopeParser;
struct _1b383bbb7_exprBuilder;
struct _1b384929b_assignInfo;
struct _1b384c47a_parser;
struct _1b385d634_typeBuilder;
struct _1b30508c6_CompileInfo;
struct _1b3051ca1_directiveEval;
struct _1b3862627_Importer;
struct _1b3868e8b_ExprInspector;
struct _1b3870129_OrderedDefines;
struct _1b4826dc1_specialCaseDefines;
struct _1b482a820_liveTable;
struct _1b482acc6_ObjectDeadCode;
struct _1b482ed41_scopeDeadCode;
struct _1b48343c8_exprDeadCode;
struct _1b46d471d_ExceptionalForwardingExprModel;
struct _1b46d4993_SwapExprModel;
struct _1b46d4d6c_EmptyCompareExprModel;
struct _1b46d51e1_RefExprModel;
struct _1b46d5664_StrCompExprModel;
struct _1b46d5be7_MutSlicingExprModel;
struct _1b46d5ee4_UnsafeBinaryExprModel;
struct _1b46d6379_UnsafeIndexingExprModel;
struct _1b46d6753_PushToSliceExprModel;
struct _1b46d6b2c_AppendToSliceExprModel;
struct _1b46d7006_StrRuneIter;
struct _1b46d7303_UnsafeDerefExprModel;
struct _1b46d7600_UnsafeCastingExprModel;
struct _1b46dd0b7_nilVar;
struct _1b46dd3c5_nils;
struct _1b46e1043_scopeOptimizer;
struct _1b46e76dc_exprOptimizer;
struct _1b46ec99a_dynamicVar;
struct _1b46eccdb_dynamic;
struct _1b4700915_data;
struct _1b4701dab_boundaryVar;
struct _1b47021ec_boundary;
struct _1b48354ea_Optimizer;
struct _1b4910d01_AbsTime;
struct _1b49114c7_Time;
struct _1b4839202_scopeCoder;
struct _1b484a1e1_exprCoder;
struct _1b485c6ba_TestCoder;
struct _1b4860349_identCoder;
struct _1b491aed7_SerializationInfo;
struct _1b491b405_traitCast;
struct _1b491b7ce_anonHash;
struct _1b491bb53_metadata;
struct _1b491d2d6_ObjectCoder;
struct _1b492c449_customType;
struct _1b492d03d_typeCoder;
struct _1b4935b28_resultCoder;
struct _1b86da4de_Flag;
struct _1b86ddd0b_Flag;
struct _1b86e2518_Flag;
struct _1b86e5c69_Flag;
struct _1b86e9476_Flag;
struct _1b49a6209_FlagSet;
struct _1b49a8bbd_argParser;
struct _20db5dbd6_Cmd;
struct _1b3865075_IR;
struct _1b470041a_dataCheckpoint;
struct _2280956ec_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
	

};
inline jule::Bool _2280956ec_acceptRange_eq(_2280956ec_acceptRange *_self_, _2280956ec_acceptRange _other_);


struct _2280d92ce_LittleEndian {
	

};
inline jule::Bool _2280d92ce_LittleEndian_eq(_2280d92ce_LittleEndian *_self_, _2280d92ce_LittleEndian _other_);


struct _228103bab_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
	

};
inline jule::Bool _228103bab_u128_eq(_228103bab_u128 *_self_, _228103bab_u128 _other_);


struct _1b7ed3e09_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
	

};
inline jule::Bool _1b7ed3e09_group_eq(_1b7ed3e09_group *_self_, _1b7ed3e09_group _other_);

struct _1b802e6b3_group {
	jule::Array<jule::Ptr<_1b2bdda70_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
	

};
struct _1b7ed1ab6__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1b7ed3e09_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};struct _1b802c5c3__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1b802e6b3_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};
struct _1b7edd342_mapIterator {
	jule::Ptr<_1b7ed1ab6__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1b7ed3e09_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};struct _1b8036b1b_mapIterator {
	jule::Ptr<_1b802c5c3__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1b802e6b3_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};
struct _20d8b29d4_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
	

};
inline jule::Bool _20d8b29d4_foldPair_eq(_20d8b29d4_foldPair *_self_, _20d8b29d4_foldPair _other_);


struct _20d8b2ece_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
	

};
inline jule::Bool _20d8b2ece_CaseRange_eq(_20d8b2ece_CaseRange *_self_, _20d8b2ece_CaseRange _other_);


struct _20d8b3485_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
	

};
inline jule::Bool _20d8b3485_Range16_eq(_20d8b3485_Range16 *_self_, _20d8b3485_Range16 _other_);


struct _20d8b39b3_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
	

};
inline jule::Bool _20d8b39b3_Range32_eq(_20d8b39b3_Range32 *_self_, _20d8b39b3_Range32 _other_);


struct _20d8b3e36_RangeTable {
	jule::Slice<_20d8b3485_Range16> _field_R16;
	jule::Slice<_20d8b39b3_Range32> _field_R32;
	jule::I64 _field_LatinOffset;
	

};
struct _20d8ca601_Builder {
	jule::Slice<jule::U8> _field_buf;
	

};
struct _227d327b9_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen;
	

};
struct _20c648c55_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_20c64c85d_Status> _field_Stat;
	

};
inline jule::Bool _20c648c55_DirEntry_eq(_20c648c55_DirEntry *_self_, _20c648c55_DirEntry _other_);


struct _20c648edb_Directory {
	

};
inline jule::Bool _20c648edb_Directory_eq(_20c648edb_Directory *_self_, _20c648edb_Directory _other_);


struct _20c64a729_File {
	jule::Uintptr _field_handle;
	

};
inline jule::Bool _20c64a729_File_eq(_20c64a729_File *_self_, _20c64a729_File _other_);


struct _20c64c85d_Status {
	jule::I64 _field_mode;
	jule::U64 _field_size;
	

};
inline jule::Bool _20c64c85d_Status_eq(_20c64c85d_Status *_self_, _20c64c85d_Status _other_);


struct _20dbb7558_cmdAttrs {
	jule::I64 _field_pid;
	

};
inline jule::Bool _20dbb7558_cmdAttrs_eq(_20dbb7558_cmdAttrs *_self_, _20dbb7558_cmdAttrs _other_);


struct _20daa5e91_Log {
	jule::I64 _field_Kind;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

};
inline jule::Bool _20daa5e91_Log_eq(_20daa5e91_Log *_self_, _20daa5e91_Log _other_);


struct _1cab113c5_floatInfo {
	jule::U64 _field_mantbits;
	jule::U64 _field_expbits;
	jule::I64 _field_bias;
	

};
inline jule::Bool _1cab113c5_floatInfo_eq(_1cab113c5_floatInfo *_self_, _1cab113c5_floatInfo _other_);


struct _1cab11eec_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	

};
struct _1cab24075_leftCheat {
	jule::I64 _field_delta;
	jule::Str _field_cutoff;
	

};
inline jule::Bool _1cab24075_leftCheat_eq(_1cab24075_leftCheat *_self_, _1cab24075_leftCheat _other_);


struct _1cab24a8c_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
	

};
inline jule::Bool _1cab24a8c_decimal_eq(_1cab24a8c_decimal *_self_, _1cab24a8c_decimal _other_);


struct _20dbe9a96_AnsiEscape {
	

};
inline jule::Bool _20dbe9a96_AnsiEscape_eq(_20dbe9a96_AnsiEscape *_self_, _20dbe9a96_AnsiEscape _other_);


struct _1cab2a224_Logger {
	

};
inline jule::Bool _1cab2a224_Logger_eq(_1cab2a224_Logger *_self_, _1cab2a224_Logger _other_);


struct _1b2ac7eba_Token {
	jule::Ptr<_1b2acd872_Fileset> _field_File;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Kind;
	jule::U64 _field_Id;
	

};
inline jule::Bool _1b2ac7eba_Token_eq(_1b2ac7eba_Token *_self_, _1b2ac7eba_Token _other_);


struct _1b2acd872_Fileset {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _field_Tokens;
	

};
struct _1b2ad0874_kindPair {
	jule::Str _field_kind;
	jule::U64 _field_id;
	

};
inline jule::Bool _1b2ad0874_kindPair_eq(_1b2ad0874_kindPair *_self_, _1b2ad0874_kindPair _other_);


struct _1b2ad6858_lex {
	jule::I64 _field_mode;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _field_tokens;
	jule::Ptr<_1b2acd872_Fileset> _field_file;
	jule::I64 _field_pos;
	jule::I64 _field_column;
	jule::I64 _field_row;
	jule::Slice<_20daa5e91_Log> _field_errors;
	

};
struct _1b2adb52d_AST {
	jule::Ptr<_1b2acd872_Fileset> _field_File;
	jule::Slice<jule::Ptr<_1b2adc809_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1b2b0625c_UseDecl>> _field_UseDecls;
	jule::Slice<_1b2adc3db_Node> _field_Nodes;
	

};
struct _1b2adc3db_Node {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1b2adc3db_Node_eq(_1b2adc3db_Node *_self_, _1b2adc3db_Node _other_);


struct _1b2adc809_Directive {
	jule::Ptr<_1b2ac7eba_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _field_Args;
	

};
struct _1b2add3dc_TypeDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1b2add3dc_TypeDecl_eq(_1b2add3dc_TypeDecl *_self_, _1b2add3dc_TypeDecl _other_);


struct _1b2add9e7_IdentTypeDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> _field_Generics;
	

};
struct _1b2addcb1_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1b2add9e7_IdentTypeDecl>> _field_Idents;
	

};
struct _1b2ade18a_NamespaceTypeDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Namespace;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1b2ade18a_NamespaceTypeDecl_eq(_1b2ade18a_NamespaceTypeDecl *_self_, _1b2ade18a_NamespaceTypeDecl _other_);


struct _1b2ade487_SptrTypeDecl {
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1b2ade487_SptrTypeDecl_eq(_1b2ade487_SptrTypeDecl *_self_, _1b2ade487_SptrTypeDecl _other_);


struct _1b2ade81c_SlcTypeDecl {
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1b2ade81c_SlcTypeDecl_eq(_1b2ade81c_SlcTypeDecl *_self_, _1b2ade81c_SlcTypeDecl _other_);


struct _1b2adeb19_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> _field_Types;
	

};
struct _1b2adee16_PtrTypeDecl {
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1b2adee16_PtrTypeDecl_eq(_1b2adee16_PtrTypeDecl *_self_, _1b2adee16_PtrTypeDecl _other_);


struct _1b2ae06a8_ArrTypeDecl {
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Elem;
	jule::Ptr<_1b2ae2721_Expr> _field_Size;
	

};
inline jule::Bool _1b2ae06a8_ArrTypeDecl_eq(_1b2ae06a8_ArrTypeDecl *_self_, _1b2ae06a8_ArrTypeDecl _other_);


struct _1b2ae0e06_MapTypeDecl {
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Key;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Val;
	

};
inline jule::Bool _1b2ae0e06_MapTypeDecl_eq(_1b2ae0e06_MapTypeDecl *_self_, _1b2ae0e06_MapTypeDecl _other_);


struct _1b2ae12d0_RetTypeDecl {
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _field_Idents;
	

};
struct _1b2ae2721_Expr {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1b2ae2721_Expr_eq(_1b2ae2721_Expr *_self_, _1b2ae2721_Expr _other_);


struct _1b2ae29da_RangeExpr {
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	

};
inline jule::Bool _1b2ae29da_RangeExpr_eq(_1b2ae29da_RangeExpr *_self_, _1b2ae29da_RangeExpr _other_);


struct _1b2ae30e5_UseExpr {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	

};
inline jule::Bool _1b2ae30e5_UseExpr_eq(_1b2ae30e5_UseExpr *_self_, _1b2ae30e5_UseExpr _other_);


struct _1b2ae3315_TupleExpr {
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _field_Expr;
	

};
struct _1b2ae36ab_LitExpr {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Value;
	

};
inline jule::Bool _1b2ae36ab_LitExpr_eq(_1b2ae36ab_LitExpr *_self_, _1b2ae36ab_LitExpr _other_);


struct _1b2ae3a85_UnsafeExpr {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	

};
inline jule::Bool _1b2ae3a85_UnsafeExpr_eq(_1b2ae3a85_UnsafeExpr *_self_, _1b2ae3a85_UnsafeExpr _other_);


struct _1b2ae403b_IdentExpr {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	

};
inline jule::Bool _1b2ae403b_IdentExpr_eq(_1b2ae403b_IdentExpr *_self_, _1b2ae403b_IdentExpr _other_);


struct _1b2ae47cd_UnaryExpr {
	jule::Ptr<_1b2ac7eba_Token> _field_Op;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	

};
inline jule::Bool _1b2ae47cd_UnaryExpr_eq(_1b2ae47cd_UnaryExpr *_self_, _1b2ae47cd_UnaryExpr _other_);


struct _1b2ae4ba7_VariadicExpr {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	

};
inline jule::Bool _1b2ae4ba7_VariadicExpr_eq(_1b2ae4ba7_VariadicExpr *_self_, _1b2ae4ba7_VariadicExpr _other_);


struct _1b2ae5081_CastExpr {
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Kind;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	

};
inline jule::Bool _1b2ae5081_CastExpr_eq(_1b2ae5081_CastExpr *_self_, _1b2ae5081_CastExpr _other_);


struct _1b2ae545a_NamespaceExpr {
	jule::Ptr<_1b2ac7eba_Token> _field_Namespace;
	jule::Ptr<_1b2ac7eba_Token> _field_Ident;
	

};
inline jule::Bool _1b2ae545a_NamespaceExpr_eq(_1b2ae545a_NamespaceExpr *_self_, _1b2ae545a_NamespaceExpr _other_);


struct _1b2ae5834_SubIdentExpr {
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	jule::Ptr<_1b2ac7eba_Token> _field_Ident;
	

};
inline jule::Bool _1b2ae5834_SubIdentExpr_eq(_1b2ae5834_SubIdentExpr *_self_, _1b2ae5834_SubIdentExpr _other_);


struct _1b2ae5cda_BinaryExpr {
	jule::Ptr<_1b2ae2721_Expr> _field_Left;
	jule::Ptr<_1b2ae2721_Expr> _field_Right;
	jule::Ptr<_1b2ac7eba_Token> _field_Op;
	

};
inline jule::Bool _1b2ae5cda_BinaryExpr_eq(_1b2ae5cda_BinaryExpr *_self_, _1b2ae5cda_BinaryExpr _other_);


struct _1b2ae644a_FnCallExpr {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _field_Args;
	jule::Ptr<_1b2aed40d_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
	

};
struct _1b2ae6e40_FieldExprPair {
	jule::Ptr<_1b2ac7eba_Token> _field_Field;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	

};
inline jule::Bool _1b2ae6e40_FieldExprPair_eq(_1b2ae6e40_FieldExprPair *_self_, _1b2ae6e40_FieldExprPair _other_);


struct _1b2ae776a_StructLit {
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _field_Exprs;
	

};
struct _1b2ae7c21_BraceLit {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _field_Exprs;
	

};
struct _1b2ae854b_KeyValPair {
	jule::Ptr<_1b2ae2721_Expr> _field_Key;
	jule::Ptr<_1b2ae2721_Expr> _field_Val;
	jule::Ptr<_1b2ac7eba_Token> _field_Colon;
	

};
inline jule::Bool _1b2ae854b_KeyValPair_eq(_1b2ae854b_KeyValPair *_self_, _1b2ae854b_KeyValPair _other_);


struct _1b2ae8c77_SliceExpr {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _field_Exprs;
	

};
struct _1b2ae96d4_IndexingExpr {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	jule::Ptr<_1b2ae2721_Expr> _field_Index;
	

};
inline jule::Bool _1b2ae96d4_IndexingExpr_eq(_1b2ae96d4_IndexingExpr *_self_, _1b2ae96d4_IndexingExpr _other_);


struct _1b2ae9d44_SlicingExpr {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	jule::Ptr<_1b2ae2721_Expr> _field_Start;
	jule::Ptr<_1b2ae2721_Expr> _field_To;
	

};
inline jule::Bool _1b2ae9d44_SlicingExpr_eq(_1b2ae9d44_SlicingExpr *_self_, _1b2ae9d44_SlicingExpr _other_);


struct _1b2aea141_Constraint {
	jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> _field_Mask;
	

};
struct _1b2aea5e7_GenericDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b2aea141_Constraint> _field_Constraint;
	

};
inline jule::Bool _1b2aea5e7_GenericDecl_eq(_1b2aea5e7_GenericDecl *_self_, _1b2aea5e7_GenericDecl _other_);


struct _1b2aea9c1_LabelSt {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1b2aea9c1_LabelSt_eq(_1b2aea9c1_LabelSt *_self_, _1b2aea9c1_LabelSt _other_);


struct _1b2aead9a_GotoSt {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_Label;
	

};
inline jule::Bool _1b2aead9a_GotoSt_eq(_1b2aead9a_GotoSt *_self_, _1b2aead9a_GotoSt _other_);


struct _1b2aeb197_FallSt {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	

};
inline jule::Bool _1b2aeb197_FallSt_eq(_1b2aeb197_FallSt *_self_, _1b2aeb197_FallSt _other_);


struct _1b2aeb807_AssignLeft {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	

};
inline jule::Bool _1b2aeb807_AssignLeft_eq(_1b2aeb807_AssignLeft *_self_, _1b2aeb807_AssignLeft _other_);


struct _1b2aebd8a_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1b2ac7eba_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1b2aeb807_AssignLeft>> _field_Left;
	jule::Ptr<_1b2ae2721_Expr> _field_Right;
	

};
struct _1b2aecc9d_Stmt {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1b2aecc9d_Stmt_eq(_1b2aecc9d_Stmt *_self_, _1b2aecc9d_Stmt _other_);


struct _1b2aed40d_ScopeTree {
	jule::Ptr<_1b2aed40d_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1b2aecc9d_Stmt> _field_Stmts;
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	

};
struct _1b2aedb4a_ParamDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1b2aedb4a_ParamDecl_eq(_1b2aedb4a_ParamDecl *_self_, _1b2aedb4a_ParamDecl _other_);


struct _1b2b0009c_FnDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2adc809_Directive>> _field_Directives;
	jule::Ptr<_1b2aed40d_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> _field_Generics;
	jule::Ptr<_1b2ae12d0_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1b2aedb4a_ParamDecl>> _field_Params;
	

};
struct _1b2b01257_VarDecl {
	jule::Ptr<_1b2aed40d_ScopeTree> _field_Scope;
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1b2adc809_Directive>> _field_Directives;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Kind;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	

};
struct _1b2b01631_RetSt {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	

};
inline jule::Bool _1b2b01631_RetSt_eq(_1b2b01631_RetSt *_self_, _1b2b01631_RetSt _other_);


struct _1b2b01da1_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1b2aed40d_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1b2b01da1_Iter_eq(_1b2b01da1_Iter *_self_, _1b2b01da1_Iter _other_);


struct _1b2b026cb_WhileKind {
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1b2ac7eba_Token> _field_NextToken;
	

};
inline jule::Bool _1b2b026cb_WhileKind_eq(_1b2b026cb_WhileKind *_self_, _1b2b026cb_WhileKind _other_);


struct _1b2b030d3_RangeKind {
	jule::Ptr<_1b2ac7eba_Token> _field_InToken;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	jule::Ptr<_1b2b01257_VarDecl> _field_KeyA;
	jule::Ptr<_1b2b01257_VarDecl> _field_KeyB;
	

};
inline jule::Bool _1b2b030d3_RangeKind_eq(_1b2b030d3_RangeKind *_self_, _1b2b030d3_RangeKind _other_);


struct _1b2b034ac_BreakSt {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_Label;
	

};
inline jule::Bool _1b2b034ac_BreakSt_eq(_1b2b034ac_BreakSt *_self_, _1b2b034ac_BreakSt _other_);


struct _1b2b03886_ContSt {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_Label;
	

};
inline jule::Bool _1b2b03886_ContSt_eq(_1b2b03886_ContSt *_self_, _1b2b03886_ContSt _other_);


struct _1b2b03d3c_If {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	jule::Ptr<_1b2aed40d_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1b2b03d3c_If_eq(_1b2b03d3c_If *_self_, _1b2b03d3c_If _other_);


struct _1b2b04216_Else {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2aed40d_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1b2b04216_Else_eq(_1b2b04216_Else *_self_, _1b2b04216_Else _other_);


struct _1b2b046bc_Conditional {
	jule::Ptr<_1b2b03d3c_If> _field_Head;
	jule::Slice<jule::Ptr<_1b2b03d3c_If>> _field_Tail;
	jule::Ptr<_1b2b04216_Else> _field_Default;
	

};
struct _1b2b04e09_TypeAliasDecl {
	jule::Ptr<_1b2aed40d_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1b2b04e09_TypeAliasDecl_eq(_1b2b04e09_TypeAliasDecl *_self_, _1b2b04e09_TypeAliasDecl _other_);


struct _1b2b053b0_Case {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2aed40d_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _field_Exprs;
	

};
struct _1b2b05bc9_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1b2b053b0_Case>> _field_Cases;
	jule::Ptr<_1b2b04216_Else> _field_Default;
	

};
struct _1b2b0625c_UseDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_Path;
	jule::Ptr<_1b2ac7eba_Token> _field_Alias;
	jule::Bool _field_Binded;
	

};
inline jule::Bool _1b2b0625c_UseDecl_eq(_1b2b0625c_UseDecl *_self_, _1b2b0625c_UseDecl _other_);


struct _1b2b06713_EnumItemDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	

};
inline jule::Bool _1b2b06713_EnumItemDecl_eq(_1b2b06713_EnumItemDecl *_self_, _1b2b06713_EnumItemDecl _other_);


struct _1b2b072c4_EnumDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b2b06713_EnumItemDecl>> _field_Items;
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	

};
struct _1b2b07aee_TypeEnumItemDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1b2b07aee_TypeEnumItemDecl_eq(_1b2b07aee_TypeEnumItemDecl *_self_, _1b2b07aee_TypeEnumItemDecl _other_);


struct _1b2b0825e_TypeEnumDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2b07aee_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	

};
struct _1b2b08528_FieldDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Kind;
	jule::Ptr<_1b2ae2721_Expr> _field_Default;
	

};
inline jule::Bool _1b2b08528_FieldDecl_eq(_1b2b08528_FieldDecl *_self_, _1b2b08528_FieldDecl _other_);


struct _1b2b08e1e_StructDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2b08528_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1b2adc809_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> _field_Generics;
	

};
struct _1b2b0965b_TraitDecl {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1b2b0009c_FnDecl>> _field_Methods;
	

};
struct _1b2b09cbb_Impl {
	jule::Ptr<_1b2ac7eba_Token> _field_End;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Base;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1b2b0009c_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1b2b01257_VarDecl>> _field_Statics;
	

};
inline jule::Bool _1b2bc786c_Eq(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _25814_x);
inline jule::Bool _1b2bc7bad_Lt(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _28514_x);
inline jule::Bool _1b2bc7eee_LtEq(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _30816_x);
inline jule::Bool _1b2bc8340_Gt(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _33114_x);
inline jule::Bool _1b2bc8681_GtEq(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _35416_x);
struct _1b2b6c23a_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

};
struct _1b2b0ac78_Field {
	jule::Ptr<_1b2b0db6b_Struct> _field_Owner;
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1b2db8d38_TypeSymbol> _field_Kind;
	jule::Ptr<_1b2ae2721_Expr> _field_Default;
	

};
inline jule::Bool _1b2b0ac78_Field_eq(_1b2b0ac78_Field *_self_, _1b2b0ac78_Field _other_);


struct _1b2b0cc58_Operators {
	jule::Ptr<_1b2bdda70_FnIns> _field_Eq;
	jule::Ptr<_1b2bdda70_FnIns> _field_Gt;
	jule::Ptr<_1b2bdda70_FnIns> _field_GtEq;
	jule::Ptr<_1b2bdda70_FnIns> _field_Lt;
	jule::Ptr<_1b2bdda70_FnIns> _field_LtEq;
	jule::Ptr<_1b2bdda70_FnIns> _field_Shl;
	jule::Ptr<_1b2bdda70_FnIns> _field_Shr;
	jule::Ptr<_1b2bdda70_FnIns> _field_Add;
	jule::Ptr<_1b2bdda70_FnIns> _field_Sub;
	jule::Ptr<_1b2bdda70_FnIns> _field_Div;
	jule::Ptr<_1b2bdda70_FnIns> _field_Mul;
	jule::Ptr<_1b2bdda70_FnIns> _field_Mod;
	jule::Ptr<_1b2bdda70_FnIns> _field_BitAnd;
	jule::Ptr<_1b2bdda70_FnIns> _field_BitOr;
	jule::Ptr<_1b2bdda70_FnIns> _field_BitXor;
	jule::Ptr<_1b2bdda70_FnIns> _field_Neg;
	jule::Ptr<_1b2bdda70_FnIns> _field_Pos;
	jule::Ptr<_1b2bdda70_FnIns> _field_BitNot;
	jule::Ptr<_1b2bdda70_FnIns> _field_AddAssign;
	jule::Ptr<_1b2bdda70_FnIns> _field_SubAssign;
	jule::Ptr<_1b2bdda70_FnIns> _field_DivAssign;
	jule::Ptr<_1b2bdda70_FnIns> _field_MulAssign;
	jule::Ptr<_1b2bdda70_FnIns> _field_ModAssign;
	jule::Ptr<_1b2bdda70_FnIns> _field_ShlAssign;
	jule::Ptr<_1b2bdda70_FnIns> _field_ShrAssign;
	jule::Ptr<_1b2bdda70_FnIns> _field_BitOrAssign;
	jule::Ptr<_1b2bdda70_FnIns> _field_BitAndAssign;
	jule::Ptr<_1b2bdda70_FnIns> _field_BitXorAssign;
	

};
inline jule::Bool _1b2b0cc58_Operators_eq(_1b2b0cc58_Operators *_self_, _1b2b0cc58_Operators _other_);


struct _1b2b0db6b_Struct {
	jule::Ptr<_1b2d03091_sema> _field_sema;
	jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _field_Uses;
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2b0ac78_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1b2bda9b2_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1b2adc809_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1b2be61c6_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1b2b119c6_StructIns>> _field_Instances;
	

};
struct _1b2b10e26_FieldIns {
	jule::Ptr<_1b2b119c6_StructIns> _field_Owner;
	jule::Ptr<_1b2b0ac78_Field> _field_Decl;
	jule::Ptr<_1b2db1627_TypeKind> _field_Kind;
	jule::Ptr<_1b2d7dc21_Data> _field_Default;
	

};
inline jule::Bool _1b2b10e26_FieldIns_eq(_1b2b10e26_FieldIns *_self_, _1b2b10e26_FieldIns _other_);


struct _1b2b119c6_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1b2b0db6b_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1b2b10e26_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1b2bda9b2_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1b2cc3094_ReferenceStack> _field_Refers;
	_1b2b0cc58_Operators _field_Operators;
	

};
struct _1b2bcd125_OperandExprModel {
	jule::Ptr<_1b2db1627_TypeKind> _field_Kind;
	jule::Any _field_Model;
	

};
inline jule::Bool _1b2bcd125_OperandExprModel_eq(_1b2bcd125_OperandExprModel *_self_, _1b2bcd125_OperandExprModel _other_);


struct _1b2bcd620_BinaryExprModel {
	jule::Ptr<_1b2bcd125_OperandExprModel> _field_Left;
	jule::Ptr<_1b2bcd125_OperandExprModel> _field_Right;
	jule::Ptr<_1b2ac7eba_Token> _field_Op;
	

};
inline jule::Bool _1b2bcd620_BinaryExprModel_eq(_1b2bcd620_BinaryExprModel *_self_, _1b2bcd620_BinaryExprModel _other_);


struct _1b2bcd9e9_UnaryExprModel {
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	jule::Ptr<_1b2ac7eba_Token> _field_Op;
	

};
inline jule::Bool _1b2bcd9e9_UnaryExprModel_eq(_1b2bcd9e9_UnaryExprModel *_self_, _1b2bcd9e9_UnaryExprModel _other_);


struct _1b2bce027_StructArgExprModel {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2b10e26_FieldIns> _field_Field;
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	

};
inline jule::Bool _1b2bce027_StructArgExprModel_eq(_1b2bce027_StructArgExprModel *_self_, _1b2bce027_StructArgExprModel _other_);


struct _1b2bce3bd_StructLitExprModel {
	jule::Ptr<_1b2b119c6_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1b2bce027_StructArgExprModel>> _field_Args;
	

};
struct _1b2bce6ba_AllocStructLitExprModel {
	jule::Ptr<_1b2bce3bd_StructLitExprModel> _field_Lit;
	

};
inline jule::Bool _1b2bce6ba_AllocStructLitExprModel_eq(_1b2bce6ba_AllocStructLitExprModel *_self_, _1b2bce6ba_AllocStructLitExprModel _other_);


struct _1b2bcec4d_CastingExprModel {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	jule::Ptr<_1b2db1627_TypeKind> _field_Kind;
	jule::Ptr<_1b2db1627_TypeKind> _field_ExprKind;
	

};
inline jule::Bool _1b2bcec4d_CastingExprModel_eq(_1b2bcec4d_CastingExprModel *_self_, _1b2bcec4d_CastingExprModel _other_);


struct _1b2bd0600_FnCallExprModel {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2bdda70_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1b2ca4592_Scope> _field_Except;
	jule::Bool _field_Assigned;
	

};
struct _1b2bd09c9_SliceExprModel {
	jule::Ptr<_1b2db1627_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1b2bd0e80_IndexingExprModel {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	jule::Ptr<_1b2d7dc21_Data> _field_Index;
	

};
inline jule::Bool _1b2bd0e80_IndexingExprModel_eq(_1b2bd0e80_IndexingExprModel *_self_, _1b2bd0e80_IndexingExprModel _other_);


struct _1b2bd1436_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _field_Captured;
	jule::Ptr<_1b2bdda70_FnIns> _field_Func;
	jule::Bool _field_Global;
	

};
struct _1b2bd1810_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
	

};
inline jule::Bool _1b2bd1810_KeyValPairExprModel_eq(_1b2bd1810_KeyValPairExprModel *_self_, _1b2bd1810_KeyValPairExprModel _other_);


struct _1b2bd1bd9_MapExprModel {
	jule::Ptr<_1b2dc03d3_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1b2bd1810_KeyValPairExprModel>> _field_Entries;
	

};
struct _1b2bd226c_SlicingExprModel {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1b2bd226c_SlicingExprModel_eq(_1b2bd226c_SlicingExprModel *_self_, _1b2bd226c_SlicingExprModel _other_);


struct _1b2bd2800_TraitSubIdentExprModel {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1b2bda9b2_Fn> _field_Method;
	jule::Ptr<_1b2be61c6_Trait> _field_Trt;
	

};
inline jule::Bool _1b2bd2800_TraitSubIdentExprModel_eq(_1b2bd2800_TraitSubIdentExprModel *_self_, _1b2bd2800_TraitSubIdentExprModel _other_);


struct _1b2bd3191_StructSubIdentExprModel {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	jule::Ptr<_1b2bdda70_FnIns> _field_Method;
	jule::Ptr<_1b2b10e26_FieldIns> _field_Field;
	jule::Ptr<_1b2b119c6_StructIns> _field_Owner;
	

};
inline jule::Bool _1b2bd3191_StructSubIdentExprModel_eq(_1b2bd3191_StructSubIdentExprModel *_self_, _1b2bd3191_StructSubIdentExprModel _other_);


struct _1b2bd3537_StructStaticIdentExprModel {
	jule::Ptr<_1b2b119c6_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1b2bdda70_FnIns> _field_Method;
	

};
inline jule::Bool _1b2bd3537_StructStaticIdentExprModel_eq(_1b2bd3537_StructStaticIdentExprModel *_self_, _1b2bd3537_StructStaticIdentExprModel _other_);


struct _1b2bd3911_ArrayExprModel {
	jule::Ptr<_1b2dc1060_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1b2bd3c0d_TupleExprModel {
	jule::Slice<jule::Ptr<_1b2d7dc21_Data>> _field_Datas;
	

};
struct _1b2bd40d7_BuiltinOutCallExprModel {
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1b2bd40d7_BuiltinOutCallExprModel_eq(_1b2bd40d7_BuiltinOutCallExprModel *_self_, _1b2bd40d7_BuiltinOutCallExprModel _other_);


struct _1b2bd44b1_BuiltinOutlnCallExprModel {
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1b2bd44b1_BuiltinOutlnCallExprModel_eq(_1b2bd44b1_BuiltinOutlnCallExprModel *_self_, _1b2bd44b1_BuiltinOutlnCallExprModel _other_);


struct _1b2bd488a_BuiltinNewCallExprModel {
	jule::Ptr<_1b2db1627_TypeKind> _field_Kind;
	jule::Any _field_Init;
	

};
inline jule::Bool _1b2bd488a_BuiltinNewCallExprModel_eq(_1b2bd488a_BuiltinNewCallExprModel *_self_, _1b2bd488a_BuiltinNewCallExprModel _other_);


struct _1b2bd4c64_BuiltinPanicCallExprModel {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1b2bd4c64_BuiltinPanicCallExprModel_eq(_1b2bd4c64_BuiltinPanicCallExprModel *_self_, _1b2bd4c64_BuiltinPanicCallExprModel _other_);


struct _1b2bd521a_BuiltinMakeCallExprModel {
	jule::Ptr<_1b2db1627_TypeKind> _field_Kind;
	jule::Any _field_Len;
	jule::Any _field_Cap;
	

};
inline jule::Bool _1b2bd521a_BuiltinMakeCallExprModel_eq(_1b2bd521a_BuiltinMakeCallExprModel *_self_, _1b2bd521a_BuiltinMakeCallExprModel _other_);


struct _1b2bd55e4_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
	

};
inline jule::Bool _1b2bd55e4_BuiltinAppendCallExprModel_eq(_1b2bd55e4_BuiltinAppendCallExprModel *_self_, _1b2bd55e4_BuiltinAppendCallExprModel _other_);


struct _1b2bd58e1_BuiltinLenCallExprModel {
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	

};
inline jule::Bool _1b2bd58e1_BuiltinLenCallExprModel_eq(_1b2bd58e1_BuiltinLenCallExprModel *_self_, _1b2bd58e1_BuiltinLenCallExprModel _other_);


struct _1b2bd5bdd_BuiltinCapCallExprModel {
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	

};
inline jule::Bool _1b2bd5bdd_BuiltinCapCallExprModel_eq(_1b2bd5bdd_BuiltinCapCallExprModel *_self_, _1b2bd5bdd_BuiltinCapCallExprModel _other_);


struct _1b2bd60b7_BuiltinDeleteCallExprModel {
	jule::Ptr<_1b2d7dc21_Data> _field_Dest;
	jule::Ptr<_1b2d7dc21_Data> _field_Key;
	

};
inline jule::Bool _1b2bd60b7_BuiltinDeleteCallExprModel_eq(_1b2bd60b7_BuiltinDeleteCallExprModel *_self_, _1b2bd60b7_BuiltinDeleteCallExprModel _other_);


struct _1b2bd6491_BuiltinCopyCallExprModel {
	jule::Ptr<_1b2d7dc21_Data> _field_Dest;
	jule::Ptr<_1b2d7dc21_Data> _field_Src;
	

};
inline jule::Bool _1b2bd6491_BuiltinCopyCallExprModel_eq(_1b2bd6491_BuiltinCopyCallExprModel *_self_, _1b2bd6491_BuiltinCopyCallExprModel _other_);


struct _1b2bd686a_BuiltinErrorCallExprModel {
	jule::Ptr<_1b2bdda70_FnIns> _field_Func;
	jule::Ptr<_1b2d7dc21_Data> _field_Err;
	

};
inline jule::Bool _1b2bd686a_BuiltinErrorCallExprModel_eq(_1b2bd686a_BuiltinErrorCallExprModel *_self_, _1b2bd686a_BuiltinErrorCallExprModel _other_);


struct _1b2bd6b67_SizeofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1b2bd6b67_SizeofExprModel_eq(_1b2bd6b67_SizeofExprModel *_self_, _1b2bd6b67_SizeofExprModel _other_);


struct _1b2bd731b_AlignofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1b2bd731b_AlignofExprModel_eq(_1b2bd731b_AlignofExprModel *_self_, _1b2bd731b_AlignofExprModel _other_);


struct _1b2bd7508_RuneExprModel {
	jule::I32 _field_Code;
	

};
inline jule::Bool _1b2bd7508_RuneExprModel_eq(_1b2bd7508_RuneExprModel *_self_, _1b2bd7508_RuneExprModel _other_);


struct _1b2bd787c_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

};
struct _1b2bd7b79_FreeExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1b2bd7b79_FreeExprModel_eq(_1b2bd7b79_FreeExprModel *_self_, _1b2bd7b79_FreeExprModel _other_);


struct _1b2bd876d_RetType {
	jule::Ptr<_1b2db8d38_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _field_Idents;
	

};
struct _1b2bd8edd_Param {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1b2db8d38_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1b2bd8edd_Param_eq(_1b2bd8edd_Param *_self_, _1b2bd8edd_Param _other_);


struct _1b2bda9b2_Fn {
	jule::Ptr<_1b2d03091_sema> _field_sema;
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2adc809_Directive>> _field_Directives;
	jule::Ptr<_1b2aed40d_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> _field_Generics;
	jule::Ptr<_1b2bd876d_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1b2bd8edd_Param>> _field_Params;
	jule::Ptr<_1b2b0db6b_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1b2bdda70_FnIns>> _field_Instances;
	

};
struct _1b2bdc91a_ParamIns {
	jule::Ptr<_1b2bd8edd_Param> _field_Decl;
	jule::Ptr<_1b2db1627_TypeKind> _field_Kind;
	

};
inline jule::Bool _1b2bdc91a_ParamIns_eq(_1b2bdc91a_ParamIns *_self_, _1b2bdc91a_ParamIns _other_);


struct _1b2bdda70_FnIns {
	jule::Ptr<_1b2b119c6_StructIns> _field_Owner;
	jule::Ptr<_1b2bda9b2_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>> _field_Params;
	jule::Ptr<_1b2db1627_TypeKind> _field_Result;
	jule::Ptr<_1b2ca4592_Scope> _field_Scope;
	jule::Ptr<_1b2cc3094_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*> _field_caller;
	jule::Bool _field_reloaded;
	

};
struct _1b2be1cb5_SymTab {
	jule::Ptr<_1b2acd872_Fileset> _field_File;
	jule::Slice<_1b2cc4408_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1b2bda9b2_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1b2be61c6_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1b2be887c_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1b2bea087_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1b2c9ee83_Impl>> _field_Impls;
	

};
struct _1b2be61c6_Trait {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1b2db8d38_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1b2bda9b2_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _field_Implemented;
	

};
struct _1b2be7d32_EnumItem {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b2d7ed98_Value> _field_Value;
	

};
inline jule::Bool _1b2be7d32_EnumItem_eq(_1b2be7d32_EnumItem *_self_, _1b2be7d32_EnumItem _other_);


struct _1b2be887c_Enum {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1b2db8d38_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1b2be7d32_EnumItem>> _field_Items;
	

};
struct _1b2be99b0_TypeEnumItem {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b2db8d38_TypeSymbol> _field_Kind;
	

};
inline jule::Bool _1b2be99b0_TypeEnumItem_eq(_1b2be99b0_TypeEnumItem *_self_, _1b2be99b0_TypeEnumItem _other_);


struct _1b2bea087_TypeEnum {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b2be99b0_TypeEnumItem>> _field_Items;
	

};
struct _1b2c76ba2_comptimeRange {
	jule::Trait _field_kind;
	

};
inline jule::Bool _1b2c76ba2_comptimeRange_eq(_1b2c76ba2_comptimeRange *_self_, _1b2c76ba2_comptimeRange _other_);


struct _1b2c7770d_comptimeStructField {
	jule::Ptr<_1b2b10e26_FieldIns> _field_field;
	

};
inline jule::Bool _1b2c7770d_comptimeStructField_eq(_1b2c7770d_comptimeStructField *_self_, _1b2c7770d_comptimeStructField _other_);


struct _1b2c78ea1_comptimeStructFields {
	jule::Slice<jule::Ptr<_1b2b10e26_FieldIns>> _field_fields;
	

};
struct _1b2c7a931_comptimeStatic {
	jule::Ptr<_1b2d26ca7_Var> _field_field;
	

};
inline jule::Bool _1b2c7a931_comptimeStatic_eq(_1b2c7a931_comptimeStatic *_self_, _1b2c7a931_comptimeStatic _other_);


struct _1b2c7c1d5_comptimeStatics {
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _field_fields;
	

};
struct _1b2c7db54_comptimeEnumField {
	jule::Ptr<_1b2be7d32_EnumItem> _field_field;
	

};
inline jule::Bool _1b2c7db54_comptimeEnumField_eq(_1b2c7db54_comptimeEnumField *_self_, _1b2c7db54_comptimeEnumField _other_);


struct _1b2c7ee63_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1b2be7d32_EnumItem>> _field_fields;
	

};
struct _1b2c8196a_comptimeParam {
	jule::Ptr<_1b2bdc91a_ParamIns> _field_param;
	

};
inline jule::Bool _1b2c8196a_comptimeParam_eq(_1b2c8196a_comptimeParam *_self_, _1b2c8196a_comptimeParam _other_);


struct _1b2c837c4_comptimeParams {
	jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>> _field_params;
	

};
struct _1b2c85133_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1b2c86aa2_comptimeTypeInfo>> _field_types;
	

};
struct _1b2c86aa2_comptimeTypeInfo {
	jule::Ptr<_1b2db1627_TypeKind> _field_base;
	

};
inline jule::Bool _1b2c86aa2_comptimeTypeInfo_eq(_1b2c86aa2_comptimeTypeInfo *_self_, _1b2c86aa2_comptimeTypeInfo _other_);


struct _1b2c8cba7_comptimeValue {
	jule::Ptr<_1b2d7dc21_Data> _field_data;
	

};
inline jule::Bool _1b2c8cba7_comptimeValue_eq(_1b2c8cba7_comptimeValue *_self_, _1b2c8cba7_comptimeValue _other_);


struct _1b2c90913_comptimeFiles {
	jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>> _field_files;
	

};
struct _1b2c92382_comptimeFile {
	jule::Ptr<_1b2be1cb5_SymTab> _field_file;
	

};
inline jule::Bool _1b2c92382_comptimeFile_eq(_1b2c92382_comptimeFile *_self_, _1b2c92382_comptimeFile _other_);


struct _1b2c93eaa_comptimeDecls {
	jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>> _field_decls;
	

};
struct _1b2c96298_comptimeDecl {
	jule::Any _field_decl;
	

};
inline jule::Bool _1b2c96298_comptimeDecl_eq(_1b2c96298_comptimeDecl *_self_, _1b2c96298_comptimeDecl _other_);


struct _1b2c9cb84_constraintChecker {
	jule::Ptr<_1b2d03091_sema> _field_s;
	jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _field_genericsA;
	jule::Ptr<_1b2bdda70_FnIns> _field_fi;
	jule::Ptr<_1b2b119c6_StructIns> _field_si;
	jule::Ptr<_1b2ac7eba_Token> _field_et;
	jule::Bool _field_uniq;
	

};
struct _1b2c9ee83_Impl {
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Base;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1b2bda9b2_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _field_Statics;
	

};
struct _1b2ca4592_Scope {
	jule::Ptr<_1b2ca4592_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I64 _field_ChildIndex;
	jule::I64 _field_StmtIndex;
	

};
struct _1b2ca49b0_If {
	jule::Any _field_Expr;
	jule::Ptr<_1b2ca4592_Scope> _field_Scope;
	

};
inline jule::Bool _1b2ca49b0_If_eq(_1b2ca49b0_If *_self_, _1b2ca49b0_If _other_);


struct _1b2ca4cac_Else {
	jule::Ptr<_1b2ca4592_Scope> _field_Scope;
	

};
inline jule::Bool _1b2ca4cac_Else_eq(_1b2ca4cac_Else *_self_, _1b2ca4cac_Else _other_);


struct _1b2ca51ca_Conditional {
	jule::Slice<jule::Ptr<_1b2ca49b0_If>> _field_Elifs;
	jule::Ptr<_1b2ca4cac_Else> _field_Default;
	

};
struct _1b2ca54c7_InfIter {
	jule::Ptr<_1b2ca4592_Scope> _field_Scope;
	

};
inline jule::Bool _1b2ca54c7_InfIter_eq(_1b2ca54c7_InfIter *_self_, _1b2ca54c7_InfIter _other_);


struct _1b2ca597d_WhileIter {
	jule::Ptr<_1b2ca4592_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
	

};
inline jule::Bool _1b2ca597d_WhileIter_eq(_1b2ca597d_WhileIter *_self_, _1b2ca597d_WhileIter _other_);


struct _1b2ca63c9_RangeIter {
	jule::Ptr<_1b2ca4592_Scope> _field_Scope;
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	jule::Ptr<_1b2d26ca7_Var> _field_KeyA;
	jule::Ptr<_1b2d26ca7_Var> _field_KeyB;
	

};
inline jule::Bool _1b2ca63c9_RangeIter_eq(_1b2ca63c9_RangeIter *_self_, _1b2ca63c9_RangeIter _other_);


struct _1b2ca675e_ContSt {
	jule::Uintptr _field_It;
	

};
inline jule::Bool _1b2ca675e_ContSt_eq(_1b2ca675e_ContSt *_self_, _1b2ca675e_ContSt _other_);


struct _1b2ca6b38_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
	

};
inline jule::Bool _1b2ca6b38_BreakSt_eq(_1b2ca6b38_BreakSt *_self_, _1b2ca6b38_BreakSt _other_);


struct _1b2ca70de_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1b2ca4592_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1b2ca70de_Label_eq(_1b2ca70de_Label *_self_, _1b2ca70de_Label _other_);


struct _1b2ca774e_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Ptr<_1b2ca70de_Label> _field_Label;
	jule::Ptr<_1b2ca4592_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1b2ca774e_GotoSt_eq(_1b2ca774e_GotoSt *_self_, _1b2ca774e_GotoSt _other_);


struct _1b2ca7b28_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
	

};
inline jule::Bool _1b2ca7b28_Postfix_eq(_1b2ca7b28_Postfix *_self_, _1b2ca7b28_Postfix _other_);


struct _1b2ca80ce_Assign {
	jule::Ptr<_1b2bcd125_OperandExprModel> _field_Left;
	jule::Ptr<_1b2bcd125_OperandExprModel> _field_Right;
	jule::Ptr<_1b2ac7eba_Token> _field_Op;
	

};
inline jule::Bool _1b2ca80ce_Assign_eq(_1b2ca80ce_Assign *_self_, _1b2ca80ce_Assign _other_);


struct _1b2ca8585_MultiAssign {
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1b2d7dc21_Data>> _field_Left;
	jule::Any _field_Right;
	

};
struct _1b2ca8cc2_Match {
	jule::Ptr<_1b2ca4592_Scope> _field_Scope;
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1b2ca97ea_Case>> _field_Cases;
	jule::Ptr<_1b2ca97ea_Case> _field_Default;
	

};
struct _1b2ca97ea_Case {
	jule::Ptr<_1b2ca8cc2_Match> _field_Owner;
	jule::Ptr<_1b2ca4592_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1b2d7dc21_Data>> _field_Exprs;
	jule::Ptr<_1b2ca97ea_Case> _field_Next;
	

};
struct _1b2ca9ee3_FallSt {
	jule::Uintptr _field_DestCase;
	

};
inline jule::Bool _1b2ca9ee3_FallSt_eq(_1b2ca9ee3_FallSt *_self_, _1b2ca9ee3_FallSt _other_);


struct _1b2caa389_RetSt {
	jule::Ptr<_1b2bdda70_FnIns> _field_Func;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1b2caa389_RetSt_eq(_1b2caa389_RetSt *_self_, _1b2caa389_RetSt _other_);


struct _1b2caa840_scopeLabel {
	jule::Ptr<_1b2ac7eba_Token> _field_token;
	jule::Ptr<_1b2ca70de_Label> _field_node;
	jule::Bool _field_used;
	

};
inline jule::Bool _1b2caa840_scopeLabel_eq(_1b2caa840_scopeLabel *_self_, _1b2caa840_scopeLabel _other_);


struct _1b2cab830_scopeChecker {
	jule::Ptr<_1b2ac7eba_Token> _field_calledFrom;
	jule::Ptr<_1b2d03091_sema> _field_s;
	jule::Ptr<_1b2bdda70_FnIns> _field_owner;
	jule::Ptr<_1b2cab830_scopeChecker> _field_parent;
	jule::I64 _field_childIndex;
	jule::Ptr<_1b2be1cb5_SymTab> _field_table;
	jule::Ptr<_1b2ca4592_Scope> _field_scope;
	jule::Ptr<_1b2aed40d_ScopeTree> _field_tree;
	jule::Ptr<_1b2bdda70_FnIns> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1b2d26ca7_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1b2caa840_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1b2ca774e_GotoSt>>> _field_gotos;
	jule::I64 _field_i;
	

};
inline jule::Bool _1b2cab830_scopeChecker_eq(_1b2cab830_scopeChecker *_self_, _1b2cab830_scopeChecker _other_);


struct _1b2cc06bd_directiveChecker {
	jule::Ptr<_1b2d03091_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1b2adc809_Directive>>> _field_d;
	jule::Any _field_o;
	

};
inline jule::Bool _1b2cc06bd_directiveChecker_eq(_1b2cc06bd_directiveChecker *_self_, _1b2cc06bd_directiveChecker _other_);


struct _1b2cc3094_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

};
struct _1b2cc4408_Pass {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Text;
	

};
inline jule::Bool _1b2cc4408_Pass_eq(_1b2cc4408_Pass *_self_, _1b2cc4408_Pass _other_);


struct _1b2cc8dad_symBuilder {
	jule::Ptr<_1b2cc8dad_symBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_20daa5e91_Log> _field_errors;
	jule::Ptr<_1b2adb52d_AST> _field_ast;
	jule::Ptr<_1b2be1cb5_SymTab> _field_table;
	

};
struct _1b2cd4e1e_ImportInfo {
	jule::Ptr<_1b2b0625c_UseDecl> _field_Decl;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Ptr<_1b2cd7691_Package> _field_Package;
	jule::I64 _field_ModId;
	

};
inline jule::Bool _1b2cd4e1e_ImportInfo_eq(_1b2cd4e1e_ImportInfo *_self_, _1b2cd4e1e_ImportInfo _other_);


struct _1b2cd7691_Package {
	jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>> _field_Files;
	

};
struct _1b2d02469_commonSemaMeta {
	jule::Slice<jule::Ptr<_1b2c86aa2_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1b2cd4e1e_ImportInfo> _field_runtime;
	

};
struct _1b2d03091_sema {
	jule::Slice<_20daa5e91_Log> _field_errors;
	jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>> _field_files;
	jule::Ptr<_1b2be1cb5_SymTab> _field_file;
	jule::I64 _field_flags;
	jule::Ptr<_1b2d02469_commonSemaMeta> _field_meta;
	

};
struct _1b2d232c0_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
	

};
struct _1b2d26ca7_Var {
	jule::Ptr<_1b2ca4592_Scope> _field_Scope;
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1b2db8d38_TypeSymbol> _field_Kind;
	jule::Ptr<_1b2d7ed98_Value> _field_Value;
	jule::Ptr<_1b2cc3094_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1b2adc809_Directive>> _field_Directives;
	jule::I64 _field_RetOrder;
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _field_Depends;
	

};
struct _1b2d27b32_FuncPattern {
	

};
struct _1b2d653de_typeCompatibilityChecker {
	jule::Ptr<_1b2d03091_sema> _field_s;
	jule::Ptr<_1b2db1627_TypeKind> _field_dest;
	jule::Ptr<_1b2db1627_TypeKind> _field_src;
	jule::Ptr<_1b2ac7eba_Token> _field_errorToken;
	

};
inline jule::Bool _1b2d653de_typeCompatibilityChecker_eq(_1b2d653de_typeCompatibilityChecker *_self_, _1b2d653de_typeCompatibilityChecker _other_);


struct _1b2d6c0c7_assignTypeChecker {
	jule::Ptr<_1b2d03091_sema> _field_s;
	jule::Ptr<_1b2db1627_TypeKind> _field_dest;
	jule::Ptr<_1b2d7dc21_Data> _field_d;
	jule::Ptr<_1b2ac7eba_Token> _field_errorToken;
	jule::Ptr<_1b2cc3094_ReferenceStack> _field_refers;
	

};
inline jule::Bool _1b2d6c0c7_assignTypeChecker_eq(_1b2d6c0c7_assignTypeChecker *_self_, _1b2d6c0c7_assignTypeChecker _other_);


struct _1b2d6d99c_dynamicTypeAnnotation {
	jule::Ptr<_1b2d80948_eval> _field_e;
	jule::Ptr<_1b2bdda70_FnIns> _field_f;
	jule::Ptr<_1b2bdc91a_ParamIns> _field_p;
	jule::Ptr<_1b2d7dc21_Data> _field_a;
	jule::Ptr<_1b2ac7eba_Token> _field_errorToken;
	jule::Ptr<_1b2db1627_TypeKind>* _field_k;
	jule::Ptr<_1b2add3dc_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _field_ignored;
	

};
struct _1b2d73809_fnCallArgChecker {
	jule::Ptr<_1b2d80948_eval> _field_e;
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _field_args;
	jule::Ptr<_1b2ac7eba_Token> _field_errorToken;
	jule::Ptr<_1b2bdda70_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _field_ignored;
	

};
struct _1b2d76741_structLitChecker {
	jule::Ptr<_1b2d80948_eval> _field_e;
	jule::Ptr<_1b2ac7eba_Token> _field_errorToken;
	jule::Ptr<_1b2b119c6_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1b2bce027_StructArgExprModel>> _field_args;
	

};
struct _1b2d78523_rangeChecker {
	jule::Ptr<_1b2cab830_scopeChecker> _field_sc;
	jule::Ptr<_1b2b030d3_RangeKind> _field_rang;
	jule::Ptr<_1b2ca63c9_RangeIter> _field_Kind;
	jule::Ptr<_1b2d7dc21_Data> _field_d;
	

};
inline jule::Bool _1b2d78523_rangeChecker_eq(_1b2d78523_rangeChecker *_self_, _1b2d78523_rangeChecker _other_);


struct _1b2d7ac84_retTypeChecker {
	jule::Ptr<_1b2cab830_scopeChecker> _field_sc;
	jule::Ptr<_1b2bdda70_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _field_exprs;
	jule::Ptr<_1b2ac7eba_Token> _field_errorToken;
	jule::Any _field_model;
	

};
struct _1b2d7dc21_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1b2db1627_TypeKind> _field_Kind;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1b2b6c23a_Const> _field_Constant;
	

};
inline jule::Bool _1b2d7dc21_Data_eq(_1b2d7dc21_Data *_self_, _1b2d7dc21_Data _other_);


struct _1b2d7ed98_Value {
	jule::Ptr<_1b2ae2721_Expr> _field_Expr;
	jule::Ptr<_1b2d7dc21_Data> _field_Data;
	

};
inline jule::Bool _1b2d7ed98_Value_eq(_1b2d7ed98_Value *_self_, _1b2d7ed98_Value _other_);


struct _1b2d80948_eval {
	jule::Ptr<_1b2d03091_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1b2db1627_TypeKind> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_immutable;
	jule::Bool _field_ignored;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1b2d26ca7_Var> _field_owner;
	jule::Ptr<_1b2b10e26_FieldIns> _field_field;
	jule::Bool _field_arg;
	

};
inline jule::Bool _1b2d80948_eval_eq(_1b2d80948_eval *_self_, _1b2d80948_eval _other_);


struct _1b2d9ec42_unaryEval {
	jule::Ptr<_1b2d80948_eval> _field_e;
	jule::Ptr<_1b2d7dc21_Data> _field_d;
	jule::Ptr<_1b2ae47cd_UnaryExpr> _field_u;
	

};
inline jule::Bool _1b2d9ec42_unaryEval_eq(_1b2d9ec42_unaryEval *_self_, _1b2d9ec42_unaryEval _other_);


struct _1b2da1bcd_binaryEval {
	jule::Ptr<_1b2d80948_eval> _field_e;
	jule::Ptr<_1b2d7dc21_Data> _field_l;
	jule::Ptr<_1b2d7dc21_Data> _field_r;
	jule::Ptr<_1b2ac7eba_Token> _field_op;
	

};
inline jule::Bool _1b2da1bcd_binaryEval_eq(_1b2da1bcd_binaryEval *_self_, _1b2da1bcd_binaryEval _other_);


struct _1b2daee72_InsGeneric {
	jule::Ptr<_1b2db1627_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _field_Constraint;
	

};
struct _1b2db0835_TypeAlias {
	jule::Ptr<_1b2aed40d_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b2db8d38_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _field_Generics;
	

};
struct _1b2db1627_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
	

};
inline jule::Bool _1b2db1627_TypeKind_eq(_1b2db1627_TypeKind *_self_, _1b2db1627_TypeKind _other_);


struct _1b2db8d38_TypeSymbol {
	jule::Ptr<_1b2add3dc_TypeDecl> _field_Decl;
	jule::Ptr<_1b2db1627_TypeKind> _field_Kind;
	

};
inline jule::Bool _1b2db8d38_TypeSymbol_eq(_1b2db8d38_TypeSymbol *_self_, _1b2db8d38_TypeSymbol _other_);


struct _1b2db9740_Prim {
	jule::Str _field_Kind;
	

};
inline jule::Bool _1b2db9740_Prim_eq(_1b2db9740_Prim *_self_, _1b2db9740_Prim _other_);


struct _1b2dbd26b_Sptr {
	jule::Ptr<_1b2db1627_TypeKind> _field_Elem;
	

};
inline jule::Bool _1b2dbd26b_Sptr_eq(_1b2dbd26b_Sptr *_self_, _1b2dbd26b_Sptr _other_);


struct _1b2dbdc3e_Slc {
	jule::Ptr<_1b2db1627_TypeKind> _field_Elem;
	

};
inline jule::Bool _1b2dbdc3e_Slc_eq(_1b2dbdc3e_Slc *_self_, _1b2dbdc3e_Slc _other_);


struct _1b2dbe833_Tuple {
	jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _field_Types;
	

};
struct _1b2dc03d3_Map {
	jule::Ptr<_1b2db1627_TypeKind> _field_Key;
	jule::Ptr<_1b2db1627_TypeKind> _field_Val;
	

};
inline jule::Bool _1b2dc03d3_Map_eq(_1b2dc03d3_Map *_self_, _1b2dc03d3_Map _other_);


struct _1b2dc1060_Arr {
	jule::Bool _field_Auto;
	jule::I64 _field_N;
	jule::Ptr<_1b2db1627_TypeKind> _field_Elem;
	

};
inline jule::Bool _1b2dc1060_Arr_eq(_1b2dc1060_Arr *_self_, _1b2dc1060_Arr _other_);


struct _1b2dc1a33_Ptr {
	jule::Ptr<_1b2db1627_TypeKind> _field_Elem;
	

};
inline jule::Bool _1b2dc1a33_Ptr_eq(_1b2dc1a33_Ptr *_self_, _1b2dc1a33_Ptr _other_);


struct _1b2dc2a34_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
	

};
inline jule::Bool _1b2dc2a34_referencer_eq(_1b2dc2a34_referencer *_self_, _1b2dc2a34_referencer _other_);


struct _1b2dc3a24_typeChecker {
	jule::Ptr<_1b2d03091_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1b2dc2a34_referencer> _field_referencer;
	jule::Ptr<_1b2cc3094_ReferenceStack> _field_refers;
	jule::Ptr<_1b2ac7eba_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1b2db0835_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
	

};
struct _1b2dcbad7_identTypeLookup {
	

};
inline jule::Bool _1b2dcbad7_identTypeLookup_eq(_1b2dcbad7_identTypeLookup *_self_, _1b2dcbad7_identTypeLookup _other_);


struct _1b37ca35e_FileInfo {
	jule::Ptr<_1b2adb52d_AST> _field_Ast;
	jule::Slice<_20daa5e91_Log> _field_Errors;
	

};
struct _1b382d8e0_stmt {
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _field_tokens;
	jule::Bool _field_terminated;
	

};
struct _1b382e281_scopeParser {
	jule::Ptr<_1b384c47a_parser> _field_p;
	jule::Ptr<_1b2aed40d_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1b382d8e0_stmt>> _field_stmts;
	jule::I64 _field_pos;
	

};
struct _1b383bbb7_exprBuilder {
	jule::Ptr<_1b384c47a_parser> _field_p;
	

};
inline jule::Bool _1b383bbb7_exprBuilder_eq(_1b383bbb7_exprBuilder *_self_, _1b383bbb7_exprBuilder _other_);


struct _1b384929b_assignInfo {
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _field_l;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _field_r;
	jule::Ptr<_1b2ac7eba_Token> _field_setter;
	jule::Bool _field_ok;
	

};
struct _1b384c47a_parser {
	jule::Ptr<_1b2adb52d_AST> _field_ast;
	jule::Slice<jule::Ptr<_1b2adc809_Directive>> _field_directives;
	jule::Slice<_20daa5e91_Log> _field_errors;
	jule::Ptr<_1b383bbb7_exprBuilder> _field_ep;
	

};
struct _1b385d634_typeBuilder {
	jule::Ptr<_1b384c47a_parser> _field_p;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _field_tokens;
	jule::I64* _field_i;
	jule::Bool _field_err;
	

};
struct _1b30508c6_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
	

};
inline jule::Bool _1b30508c6_CompileInfo_eq(_1b30508c6_CompileInfo *_self_, _1b30508c6_CompileInfo _other_);


struct _1b3051ca1_directiveEval {
	jule::Slice<_20daa5e91_Log> _field_logs;
	jule::Ptr<_1b2adc809_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1b3862627_Importer {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1b3868e8b_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
	

};
struct _1b3870129_OrderedDefines {
	jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _field_Globals;
	

};
struct _1b4826dc1_specialCaseDefines {
	jule::Ptr<_1b2b0db6b_Struct> _field_runtime_Map;
	jule::Ptr<_1b2b0db6b_Struct> _field_runtime_mapIterator;
	

};
inline jule::Bool _1b4826dc1_specialCaseDefines_eq(_1b4826dc1_specialCaseDefines *_self_, _1b4826dc1_specialCaseDefines _other_);


struct _1b482a820_liveTable {
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1b2bdda70_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1b2b119c6_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1b2be61c6_Trait>> _field_traits;
	

};
struct _1b482acc6_ObjectDeadCode {
	_1b482a820_liveTable _field_live;
	jule::Ptr<_1b3865075_IR> _field_ir;
	_1b4826dc1_specialCaseDefines _field_scd;
	

};
struct _1b482ed41_scopeDeadCode {
	jule::Ptr<_1b482ed41_scopeDeadCode> _field_parent;
	jule::Ptr<_1b2ca4592_Scope> _field_s;
	jule::I64 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1b2ca70de_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1b2ca774e_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
	

};
inline jule::Bool _1b482ed41_scopeDeadCode_eq(_1b482ed41_scopeDeadCode *_self_, _1b482ed41_scopeDeadCode _other_);


struct _1b48343c8_exprDeadCode {
	jule::Ptr<_1b482ed41_scopeDeadCode> _field_s;
	

};
inline jule::Bool _1b48343c8_exprDeadCode_eq(_1b48343c8_exprDeadCode *_self_, _1b48343c8_exprDeadCode _other_);


struct _1b46d471d_ExceptionalForwardingExprModel {
	jule::Ptr<_1b2bd0600_FnCallExprModel> _field_Expr;
	

};
inline jule::Bool _1b46d471d_ExceptionalForwardingExprModel_eq(_1b46d471d_ExceptionalForwardingExprModel *_self_, _1b46d471d_ExceptionalForwardingExprModel _other_);


struct _1b46d4993_SwapExprModel {
	jule::Ptr<_1b2d7dc21_Data> _field_Left;
	jule::Ptr<_1b2d7dc21_Data> _field_Right;
	

};
inline jule::Bool _1b46d4993_SwapExprModel_eq(_1b46d4993_SwapExprModel *_self_, _1b46d4993_SwapExprModel _other_);


struct _1b46d4d6c_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
	

};
inline jule::Bool _1b46d4d6c_EmptyCompareExprModel_eq(_1b46d4d6c_EmptyCompareExprModel *_self_, _1b46d4d6c_EmptyCompareExprModel _other_);


struct _1b46d51e1_RefExprModel {
	jule::Ptr<_1b2d26ca7_Var> _field_Var;
	

};
inline jule::Bool _1b46d51e1_RefExprModel_eq(_1b46d51e1_RefExprModel *_self_, _1b46d51e1_RefExprModel _other_);


struct _1b46d5664_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1b2b6c23a_Const> _field_Right;
	jule::Bool _field_NotEq;
	

};
inline jule::Bool _1b46d5664_StrCompExprModel_eq(_1b46d5664_StrCompExprModel *_self_, _1b46d5664_StrCompExprModel _other_);


struct _1b46d5be7_MutSlicingExprModel {
	jule::Ptr<_1b2ac7eba_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1b46d5be7_MutSlicingExprModel_eq(_1b46d5be7_MutSlicingExprModel *_self_, _1b46d5be7_MutSlicingExprModel _other_);


struct _1b46d5ee4_UnsafeBinaryExprModel {
	jule::Ptr<_1b2bcd620_BinaryExprModel> _field_Node;
	

};
inline jule::Bool _1b46d5ee4_UnsafeBinaryExprModel_eq(_1b46d5ee4_UnsafeBinaryExprModel *_self_, _1b46d5ee4_UnsafeBinaryExprModel _other_);


struct _1b46d6379_UnsafeIndexingExprModel {
	jule::Ptr<_1b2bd0e80_IndexingExprModel> _field_Node;
	

};
inline jule::Bool _1b46d6379_UnsafeIndexingExprModel_eq(_1b46d6379_UnsafeIndexingExprModel *_self_, _1b46d6379_UnsafeIndexingExprModel _other_);


struct _1b46d6753_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1b2bd09c9_SliceExprModel> _field_Elems;
	

};
inline jule::Bool _1b46d6753_PushToSliceExprModel_eq(_1b46d6753_PushToSliceExprModel *_self_, _1b46d6753_PushToSliceExprModel _other_);


struct _1b46d6b2c_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
	

};
inline jule::Bool _1b46d6b2c_AppendToSliceExprModel_eq(_1b46d6b2c_AppendToSliceExprModel *_self_, _1b46d6b2c_AppendToSliceExprModel _other_);


struct _1b46d7006_StrRuneIter {
	jule::Ptr<_1b2d7dc21_Data> _field_Expr;
	jule::Ptr<_1b2ca63c9_RangeIter> _field_Base;
	

};
inline jule::Bool _1b46d7006_StrRuneIter_eq(_1b46d7006_StrRuneIter *_self_, _1b46d7006_StrRuneIter _other_);


struct _1b46d7303_UnsafeDerefExprModel {
	jule::Ptr<_1b2bcd9e9_UnaryExprModel> _field_Base;
	

};
inline jule::Bool _1b46d7303_UnsafeDerefExprModel_eq(_1b46d7303_UnsafeDerefExprModel *_self_, _1b46d7303_UnsafeDerefExprModel _other_);


struct _1b46d7600_UnsafeCastingExprModel {
	jule::Ptr<_1b2bcec4d_CastingExprModel> _field_Base;
	

};
inline jule::Bool _1b46d7600_UnsafeCastingExprModel_eq(_1b46d7600_UnsafeCastingExprModel *_self_, _1b46d7600_UnsafeCastingExprModel _other_);


struct _1b46dd0b7_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
	

};
inline jule::Bool _1b46dd0b7_nilVar_eq(_1b46dd0b7_nilVar *_self_, _1b46dd0b7_nilVar _other_);


struct _1b46dd3c5_nils {
	jule::Slice<_1b46dd0b7_nilVar> _field_vars;
	

};
struct _1b46e1043_scopeOptimizer {
	jule::Ptr<_1b46e1043_scopeOptimizer> _field_parent;
	jule::I64 _field_i;
	jule::Ptr<_1b2ca4592_Scope> _field_scope;
	jule::Ptr<_1b4700915_data> _field_data;
	

};
inline jule::Bool _1b46e1043_scopeOptimizer_eq(_1b46e1043_scopeOptimizer *_self_, _1b46e1043_scopeOptimizer _other_);


struct _1b46e76dc_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1b4700915_data> _field_data;
	jule::Ptr<_1b3868e8b_ExprInspector> _field_inspector;
	

};
inline jule::Bool _1b46e76dc_exprOptimizer_eq(_1b46e76dc_exprOptimizer *_self_, _1b46e76dc_exprOptimizer _other_);


struct _1b46ec99a_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1b2db1627_TypeKind> _field_kind;
	

};
inline jule::Bool _1b46ec99a_dynamicVar_eq(_1b46ec99a_dynamicVar *_self_, _1b46ec99a_dynamicVar _other_);


struct _1b46eccdb_dynamic {
	jule::Slice<_1b46ec99a_dynamicVar> _field_vars;
	

};
struct _1b4700915_data {
	jule::Ptr<_1b47021ec_boundary> _field_boundary;
	jule::Ptr<_1b46dd3c5_nils> _field_nils;
	jule::Ptr<_1b46eccdb_dynamic> _field_dynamic;
	

};
inline jule::Bool _1b4700915_data_eq(_1b4700915_data *_self_, _1b4700915_data _other_);


struct _1b4701dab_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
	

};
struct _1b47021ec_boundary {
	jule::Slice<_1b4701dab_boundaryVar> _field_vars;
	

};
struct _1b48354ea_Optimizer {
	jule::Ptr<_1b3865075_IR> _field_ir;
	

};
inline jule::Bool _1b48354ea_Optimizer_eq(_1b48354ea_Optimizer *_self_, _1b48354ea_Optimizer _other_);


struct _1b4910d01_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
	

};
inline jule::Bool _1b4910d01_AbsTime_eq(_1b4910d01_AbsTime *_self_, _1b4910d01_AbsTime _other_);


struct _1b49114c7_Time {
	jule::U64 _field_sec;
	

};
inline jule::Bool _1b49114c7_Time_eq(_1b49114c7_Time *_self_, _1b49114c7_Time _other_);


struct _1b4839202_scopeCoder {
	jule::Ptr<_1b491d2d6_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1b4839202_scopeCoder_eq(_1b4839202_scopeCoder *_self_, _1b4839202_scopeCoder _other_);


struct _1b484a1e1_exprCoder {
	jule::Ptr<_1b491d2d6_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1b2d26ca7_Var>>> _field_varPrefixes;
	

};
struct _1b485c6ba_TestCoder {
	jule::Ptr<_1b2b119c6_StructIns> _field_t;
	jule::Ptr<_1b2bda9b2_Fn> _field_tmReset;
	jule::Ptr<_1b2bda9b2_Fn> _field_tmFailed;
	jule::Ptr<_1b2bda9b2_Fn> _field_tmSkipped;
	jule::Ptr<_1b491d2d6_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1b485c6ba_TestCoder_eq(_1b485c6ba_TestCoder *_self_, _1b485c6ba_TestCoder _other_);


struct _1b4860349_identCoder {
	

};
inline jule::Bool _1b4860349_identCoder_eq(_1b4860349_identCoder *_self_, _1b4860349_identCoder _other_);


struct _1b491aed7_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

};
inline jule::Bool _1b491aed7_SerializationInfo_eq(_1b491aed7_SerializationInfo *_self_, _1b491aed7_SerializationInfo _other_);


struct _1b491b405_traitCast {
	jule::Ptr<_1b2be61c6_Trait> _field_t1;
	jule::Ptr<_1b2be61c6_Trait> _field_t2;
	

};
inline jule::Bool _1b491b405_traitCast_eq(_1b491b405_traitCast *_self_, _1b491b405_traitCast _other_);


struct _1b491b7ce_anonHash {
	jule::Ptr<_1b2bd1436_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

};
inline jule::Bool _1b491b7ce_anonHash_eq(_1b491b7ce_anonHash *_self_, _1b491b7ce_anonHash _other_);


struct _1b491bb53_metadata {
	jule::Bool _field_concurrent;
	

};
inline jule::Bool _1b491bb53_metadata_eq(_1b491bb53_metadata *_self_, _1b491bb53_metadata _other_);


struct _1b491d2d6_ObjectCoder {
	_20d8ca601_Builder _field_Buf;
	_20d8ca601_Builder _field_resultDecls;
	_20d8ca601_Builder _field_anyObj;
	_20d8ca601_Builder _field_anonObj;
	_20d8ca601_Builder _field_deallocObj;
	_20d8ca601_Builder _field_coSpawnObj;
	jule::Ptr<_1b3865075_IR> _field_ir;
	_1b491aed7_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1b491b7ce_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1b7ed1ab6__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1b491b405_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_1b2bdda70_FnIns>> _field_coSpawnMap;
	jule::Ptr<_1b802c5c3__Map> _field_traitMetMap;
	jule::Ptr<_1b484a1e1_exprCoder> _field_ec;
	jule::Ptr<_1b4839202_scopeCoder> _field_sc;
	jule::Ptr<_1b492d03d_typeCoder> _field_tc;
	jule::I64 _field_headPos;
	jule::I64 _field_declPos;
	jule::I64 _field_wrapPos;
	_1b491bb53_metadata _field_meta;
	

};
struct _1b492c449_customType {
	jule::Str _field_kind;
	

};
inline jule::Bool _1b492c449_customType_eq(_1b492c449_customType *_self_, _1b492c449_customType _other_);


struct _1b492d03d_typeCoder {
	jule::Ptr<_1b491d2d6_ObjectCoder> _field_oc;
	jule::Ptr<_1b4935b28_resultCoder> _field_rc;
	

};
inline jule::Bool _1b492d03d_typeCoder_eq(_1b492d03d_typeCoder *_self_, _1b492d03d_typeCoder _other_);


struct _1b4935b28_resultCoder {
	jule::Ptr<_1b492d03d_typeCoder> _field_tc;
	

};
inline jule::Bool _1b4935b28_resultCoder_eq(_1b4935b28_resultCoder *_self_, _1b4935b28_resultCoder _other_);


struct _1b86da4de_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

};
inline jule::Bool _1b86da4de_Flag_eq(_1b86da4de_Flag *_self_, _1b86da4de_Flag _other_);

struct _1b86ddd0b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

};
inline jule::Bool _1b86ddd0b_Flag_eq(_1b86ddd0b_Flag *_self_, _1b86ddd0b_Flag _other_);

struct _1b86e2518_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

};
inline jule::Bool _1b86e2518_Flag_eq(_1b86e2518_Flag *_self_, _1b86e2518_Flag _other_);

struct _1b86e5c69_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

};
inline jule::Bool _1b86e5c69_Flag_eq(_1b86e5c69_Flag *_self_, _1b86e5c69_Flag _other_);

struct _1b86e9476_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

};
inline jule::Bool _1b86e9476_Flag_eq(_1b86e9476_Flag *_self_, _1b86e9476_Flag _other_);


struct _1b49a6209_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	

};
struct _1b49a8bbd_argParser {
	_1b49a6209_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i;
	

};
struct _20db5dbd6_Cmd {
	_20dbb7558_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

};
struct _1b3865075_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1b2cd7691_Package> _field_Main;
	jule::Ptr<_1b2cd4e1e_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>> _field_Used;
	_1b3870129_OrderedDefines _field_Ordered;
	

};
struct _1b470041a_dataCheckpoint {
	_1b47021ec_boundary _field_boundary;
	_1b46dd3c5_nils _field_nils;
	_1b46eccdb_dynamic _field_dynamic;
	

};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1b2bdda70_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1b2bdda70_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_str {
	jule::Bool __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b2d7dc21_Data__jule_tuple_x_1b2d7dc21_Data {
	jule::Ptr<_1b2d7dc21_Data> __jule_result_arg0;
	jule::Ptr<_1b2d7dc21_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1b2d7dc21_Data__jule_tuple_bool {
	jule::Ptr<_1b2d7dc21_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b2ae2721_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b2b053b0_Case__jule_tuple_bool {
	jule::Ptr<_1b2b053b0_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b2b053b0_Case__jule_tuple_x_1b2b04216_Else {
	jule::Slice<jule::Ptr<_1b2b053b0_Case>> __jule_result_arg0;
	jule::Ptr<_1b2b04216_Else> __jule_result_arg1;
};
struct __jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b2aebd8a_AssignSt__jule_tuple_bool {
	jule::Ptr<_1b2aebd8a_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1b2add3dc_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b2ae12d0_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1b2ae12d0_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log {
	jule::Slice<jule::Ptr<_1b2adb52d_AST>> __jule_result_arg0;
	jule::Slice<_20daa5e91_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_20daa5e91_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_20daa5e91_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1b2bdda70_FnIns__jule_tuple_bool {
	jule::Ptr<_1b2bdda70_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b3865075_IR__jule_tuple_s_20daa5e91_Log {
	jule::Ptr<_1b3865075_IR> __jule_result_arg0;
	jule::Slice<_20daa5e91_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__20d722dc7_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__20d722dc7_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__20d722dc7_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__20d722dc7_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b2be1cb5_SymTab__jule_tuple_s_20daa5e91_Log {
	jule::Ptr<_1b2be1cb5_SymTab> __jule_result_arg0;
	jule::Slice<_20daa5e91_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1b2cd7691_Package__jule_tuple_s_20daa5e91_Log {
	jule::Ptr<_1b2cd7691_Package> __jule_result_arg0;
	jule::Slice<_20daa5e91_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log {
	jule::Ptr<_1b2adb52d_AST> __jule_result_arg0;
	jule::Slice<_20daa5e91_Log> __jule_result_arg1;
};
struct __jule_tuple_sx_1b2ac7eba_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b2ac7eba_Token__jule_tuple_sx_1b2ac7eba_Token {
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1b2ac7eba_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> __jule_result_arg0;
	jule::Slice<_20daa5e91_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__2280eeb52_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__22810057b_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1b7ed1ab6__Map> static__1b7ed217c_make(void);
inline void _1b7ed22d1_initData(_1b7ed1ab6__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1b7ed2435_hash(_1b7ed1ab6__Map* _self_, jule::Str _14616_k);
inline void _1b7ed2589_rehash(_1b7ed1ab6__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1b7ed26dd_nextSize(_1b7ed1ab6__Map* _self_);
inline void _1b7ed2842_lookup(jule::Ptr<_1b7ed1ab6__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1b7ed2996_get(jule::Ptr<_1b7ed1ab6__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1b7ed2aea_set(_1b7ed1ab6__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1b7ed2c4e_del(jule::Ptr<_1b7ed1ab6__Map> _self_, jule::Str _27624_k);
inline void _1b7ed2da3_clear(jule::Ptr<_1b7ed1ab6__Map> _self_);
inline jule::I64 _1b7ed3007_len(jule::Ptr<_1b7ed1ab6__Map> _self_);
inline jule::I64 _1b7ed315b_cap(_1b7ed1ab6__Map* _self_);
inline _1b7edd342_mapIterator _1b7ed32b0_iterator(jule::Ptr<_1b7ed1ab6__Map> _self_);
inline jule::Ptr<_1b802c5c3__Map> static__1b802cae0_make(void);
inline void _1b802cc44_initData(_1b802c5c3__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1b802cd98_hash(_1b802c5c3__Map* _self_, jule::Ptr<_1b2bdda70_FnIns> _14616_k);
inline void _1b802ceec_rehash(_1b802c5c3__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1b802d151_nextSize(_1b802c5c3__Map* _self_);
inline void _1b802d2a5_lookup(jule::Ptr<_1b802c5c3__Map> _self_, jule::Ptr<_1b2bdda70_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1b802d409_get(jule::Ptr<_1b802c5c3__Map> _self_, jule::Ptr<_1b2bdda70_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1b802d55d_set(_1b802c5c3__Map* _self_, jule::Ptr<_1b2bdda70_FnIns> _24123_k);
inline jule::Bool _1b802d6b2_del(jule::Ptr<_1b802c5c3__Map> _self_, jule::Ptr<_1b2bdda70_FnIns> _27624_k);
inline void _1b802d816_clear(jule::Ptr<_1b802c5c3__Map> _self_);
inline jule::I64 _1b802d96a_len(jule::Ptr<_1b802c5c3__Map> _self_);
inline jule::I64 _1b802dabe_cap(_1b802c5c3__Map* _self_);
inline _1b8036b1b_mapIterator _1b802dc23_iterator(jule::Ptr<_1b802c5c3__Map> _self_);
inline void _1b7edd8c5_init(_1b7edd342_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1b7edda29_next(_1b7edd342_mapIterator* _self_);
inline void _1b803719e_init(_1b8036b1b_mapIterator* _self_);
inline __jule_tuple_px_1b2bdda70_FnIns__jule_tuple_psuintptr _1b8037303_next(_1b8036b1b_mapIterator* _self_);
inline _20d8ca601_Builder static__20d8cb1c3_New(jule::I64 _1516_cap);
inline void _20d8d4819_Write(_20d8ca601_Builder* _self_, jule::Slice<jule::U8> _2521_b);
inline void _20d8d4ac2_WriteStr(_20d8ca601_Builder* _self_, jule::Str _3024_s);
inline void _20d8d4d7a_WriteByte(_20d8ca601_Builder* _self_, jule::U8 _3525_b);
inline jule::Str _20d8d53b9_Str(_20d8ca601_Builder* _self_);
inline void _20d8d55b7_Clear(_20d8ca601_Builder* _self_);
inline jule::I64 _20d8d584d_Len(_20d8ca601_Builder* _self_);
inline jule::Slice<jule::U8> _20d8d5d6a_Buf(_20d8ca601_Builder* _self_);
inline void _20d8d6123_SetBuf(_20d8ca601_Builder* _self_, jule::Slice<jule::U8> _7733_buf);
inline jule::U8 _227d32c81_index(_227d327b9_lazyBuff* _self_, jule::I64 _5521_i);
inline void _227d33039_append(_227d327b9_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _227d332c0_string(_227d327b9_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_20c648c55_DirEntry>>> static__227d37071_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__227d372a2_Create(jule::Str _4019_path);
inline jule::VoidExceptional static__227d374d3_Remove(jule::Str _5319_path);
inline jule::Exceptional<jule::Ptr<_20c64a729_File>> static__20c647baa_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode);
inline jule::VoidExceptional static__20c647ddb_Remove(jule::Str _3319_path);
inline jule::Exceptional<jule::I64> _20c648370_Write(_20c64a729_File* _self_, jule::Slice<jule::U8> _4821_buf);
inline jule::Exceptional<jule::I64> _20c6486b1_Read(_20c64a729_File* _self_, jule::Slice<jule::U8> _6924_buf);
inline jule::Ptr<_20c64a729_File> static__20c64ab7a_New(jule::Uintptr _4516_handle);
inline jule::Exceptional<jule::Ptr<_20c64a729_File>> static__20c64ae44_Create(jule::Str _5519_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__20c64b20d_Read(jule::Str _6717_path);
inline jule::VoidExceptional static__20c64b5a4_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm);
inline jule::VoidExceptional _20c64bce1_Close(_20c64a729_File* _self_);
inline jule::Exceptional<jule::Ptr<_20c64c85d_Status>> static__20c649827_Of(jule::Str _1215_path);
inline jule::Bool _20c64cc6a_IsDir(_20c64c85d_Status* _self_);
inline jule::Bool _20c64d001_IsReg(_20c64c85d_Status* _self_);
inline jule::U64 _20c64d287_Size(_20c64c85d_Status* _self_);
inline jule::Bool _1cab1b556_set(_1cab24a8c_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1cab1b897_floatBits(_1cab24a8c_decimal* _self_, _1cab113c5_floatInfo* _33226_flt);
inline void _1cab24e77_assign(_1cab24a8c_decimal* _self_, jule::U64 _15126_v);
inline void _1cab25230_shift(_1cab24a8c_decimal* _self_, jule::I64 _17625_k);
inline void _1cab254d8_roundDown(_1cab24a8c_decimal* _self_, jule::I64 _19625_nd);
inline void _1cab25791_roundUp(_1cab24a8c_decimal* _self_, jule::I64 _20523_nd);
inline void _1cab25a49_round(_1cab24a8c_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1cab25cd0_roundedInteger(_1cab24a8c_decimal* _self_);
inline void static__20dbe8a0c_Reset(void);
inline void static__20dbe9c83_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1cab2a4dd_LogFlat(_20daa5e91_Log* _1421_l);
inline void static__1cab2a6ec_LogError(_20daa5e91_Log* _1922_l);
inline void static__1cab2a92d_Log(_20daa5e91_Log* _6417_l);
inline void static__1cab2ab5e_PrintLogs(jule::Slice<_20daa5e91_Log>* _7423_logs);
inline jule::U8 _1b2ac8372_Prec(_1b2ac7eba_Token* _self_);
inline jule::Ptr<_1b2acd872_Fileset> static__1b2acdcd4_New(jule::Str _1616_path);
inline void _1b2ace08c_Fill(_1b2acd872_Fileset* _self_, jule::Slice<jule::U8> _2324_data);
inline jule::Str _1b2ace323_Dir(_1b2acd872_Fileset* _self_);
inline jule::Str _1b2ace5a9_Name(_1b2acd872_Fileset* _self_);
inline jule::Str _1b2aceb81_GetRow(_1b2acd872_Fileset* _self_, jule::I64 _4418_row);
inline void _1b2ad6e1e_pushErr(_1b2ad6858_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44743_args);
inline void _1b2ad7480_lex(_1b2ad6858_lex* _self_);
inline jule::Str _1b2ad77c1_id(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _47119_ln);
inline jule::Slice<jule::U8> _1b2ad7a57_resume(_1b2ad6858_lex* _self_);
inline void _1b2ad7d10_lexLineComment(_1b2ad6858_lex* _self_, jule::Ptr<_1b2ac7eba_Token>* _52135_token);
inline void _1b2ad80b8_lexRangeComment(_1b2ad6858_lex* _self_, jule::Ptr<_1b2ac7eba_Token>* _53636_token);
inline jule::Str _1b2ad8409_num(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _56420_txt);
inline jule::Str _1b2ad874a_escapeSeq(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _58626_txt);
inline jule::Str _1b2ad8b46_getRune(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw);
inline jule::Str _1b2ad8e87_lexRune(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _62524_txt);
inline jule::Str _1b2ad921d_lexStr(_1b2ad6858_lex* _self_);
inline void _1b2ad96a2_newLine(_1b2ad6858_lex* _self_);
inline jule::Bool _1b2ad9c13_isOp(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1b2ac7eba_Token>* _70758_t);
inline jule::Bool _1b2ada10e_lexBasicOps(_1b2ad6858_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1b2ac7eba_Token>* _71745_tok);
inline jule::Bool _1b2ada50a_lexId(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1b2ac7eba_Token>* _72640_t);
inline jule::Bool _1b2ada906_lexNum(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1b2ac7eba_Token>* _73641_t);
inline jule::Ptr<_1b2ac7eba_Token> _1b2adab8c_token(_1b2ad6858_lex* _self_);
inline jule::Bool _1b2ae02ac_IsUnsafe(_1b2adee16_PtrTypeDecl* _self_);
inline jule::Bool _1b2ae0a4e_AutoSized(_1b2ae06a8_ArrTypeDecl* _self_);
inline jule::Bool _1b2ae6802_Unhandled(_1b2ae644a_FnCallExpr* _self_);
inline jule::Bool _1b2ae6a88_Ignored(_1b2ae644a_FnCallExpr* _self_);
inline jule::Bool _1b2aee002_IsSelf(_1b2aedb4a_ParamDecl* _self_);
inline jule::Bool _1b2b00443_IsAnon(_1b2b0009c_FnDecl* _self_);
inline jule::Bool _1b2b02247_IsInf(_1b2b01da1_Iter* _self_);
inline jule::Bool _1b2b02a72_IsWhileNext(_1b2b026cb_WhileKind* _self_);
inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc22e5_NewI64(jule::I64 _1419_x);
inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc24c1_NewU64(jule::U64 _1719_x);
inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc278a_NewBool(jule::Bool _2020_x);
inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc2a54_NewStr(jule::Str _2319_x);
inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc2d1d_NewF64(jule::F64 _2619_x);
inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc302c_NewNil(void);
inline jule::I64 _1b2bc368c_ReadI64(_1b2b6c23a_Const* _self_);
inline jule::U64 _1b2bc3923_ReadU64(_1b2b6c23a_Const* _self_);
inline jule::Bool _1b2bc3ba9_ReadBool(_1b2b6c23a_Const* _self_);
inline jule::Str _1b2bc3e40_ReadStr(_1b2b6c23a_Const* _self_);
inline jule::F64 _1b2bc41c6_ReadF64(_1b2b6c23a_Const* _self_);
inline jule::I64 _1b2bc445c_AsI64(_1b2b6c23a_Const* _self_);
inline jule::U64 _1b2bc46e3_AsU64(_1b2b6c23a_Const* _self_);
inline jule::F64 _1b2bc4979_AsF64(_1b2b6c23a_Const* _self_);
inline void _1b2bc4c32_SetI64(_1b2b6c23a_Const* _self_, jule::I64 _13622_x);
inline void _1b2bc4eda_SetU64(_1b2b6c23a_Const* _self_, jule::U64 _13922_x);
inline void _1b2bc5293_SetBool(_1b2b6c23a_Const* _self_, jule::Bool _14223_x);
inline void _1b2bc554b_SetStr(_1b2b6c23a_Const* _self_, jule::Str _14522_x);
inline void _1b2bc5804_SetF64(_1b2b6c23a_Const* _self_, jule::F64 _14822_x);
inline jule::Bool _1b2bc5c88_IsI64(_1b2b6c23a_Const* _self_);
inline jule::Bool _1b2bc601e_IsU64(_1b2b6c23a_Const* _self_);
inline jule::Bool _1b2bc62a5_IsBool(_1b2b6c23a_Const* _self_);
inline jule::Bool _1b2bc653b_IsStr(_1b2b6c23a_Const* _self_);
inline jule::Bool _1b2bc67c2_IsF64(_1b2b6c23a_Const* _self_);
inline jule::Bool _1b2bc6a58_IsNil(_1b2b6c23a_Const* _self_);
inline jule::Bool _1b2bc71da_And(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _23615_x);
inline jule::Bool _1b2bc752b_Or(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _24714_x);
inline jule::Bool _1b2bc89c2_Add(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _37519_x);
inline jule::Bool _1b2bc8d13_Sub(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _40419_x);
inline jule::Bool _1b2bc9154_Mul(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _42819_x);
inline jule::Bool _1b2bc9495_Div(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _45619_x);
inline jule::Bool _1b2bc97d6_Mod(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _48519_x);
inline jule::Bool _1b2bc9b27_BitwiseAnd(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _50726_x);
inline jule::Bool _1b2bc9e68_BitwiseOr(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _52125_x);
inline jule::Bool _1b2bca2a9_Xor(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _53519_x);
inline jule::Bool _1b2bca5ea_Lshift(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _54922_x);
inline jule::Bool _1b2bca93b_Rshift(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _56922_x);
inline jule::Ptr<_1b2b10e26_FieldIns> _1b2b0b130_instance(jule::Ptr<_1b2b0ac78_Field> _self_);
inline jule::Ptr<_1b2b119c6_StructIns> _1b2b0e111_instance(jule::Ptr<_1b2b0db6b_Struct> _self_);
inline jule::Ptr<_1b2b119c6_StructIns> _1b2b0e41e_appendInstance(_1b2b0db6b_Struct* _self_, jule::Ptr<_1b2b119c6_StructIns>* _13535_ins);
inline jule::Ptr<_1b2bda9b2_Fn> _1b2b0e81a_FindMethod(_1b2b0db6b_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically);
inline jule::Ptr<_1b2d26ca7_Var> _1b2b0eb5b_FindStatic(_1b2b0db6b_Struct* _self_, jule::Str _16426_ident);
inline jule::Ptr<_1b2b0ac78_Field> _1b2b0ee9c_FindField(_1b2b0db6b_Struct* _self_, jule::Str _17525_ident);
inline jule::Bool _1b2b102dd_IsImplements(_1b2b0db6b_Struct* _self_, jule::Ptr<_1b2be61c6_Trait> _18524_t);
inline jule::Bool _1b2b1062e_IsUses(_1b2b0db6b_Struct* _self_, jule::Ptr<_1b2b0db6b_Struct> _19518_s);
inline jule::Str _1b2b11d7d_Str(_1b2b119c6_StructIns* _self_);
inline jule::Bool _1b2b121be_Equal(jule::Ptr<_1b2b119c6_StructIns> _self_, jule::Ptr<_1b2db1627_TypeKind> _25718_other);
inline jule::Bool _1b2b12675_Same(_1b2b119c6_StructIns* _self_, jule::Ptr<_1b2b119c6_StructIns> _28516_s);
inline jule::Ptr<_1b2bda9b2_Fn> _1b2b12a71_FindMethod(_1b2b119c6_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically);
inline jule::Ptr<_1b2b10e26_FieldIns> _1b2b12db2_FindField(_1b2b119c6_StructIns* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1b2d26ca7_Var> _1b2b13203_FindStatic(_1b2b119c6_StructIns* _self_, jule::Str _32226_ident);
inline jule::Ptr<_1b2bdc91a_ParamIns> _1b2bd93a6_instance(jule::Ptr<_1b2bd8edd_Param> _self_);
inline jule::Bool _1b2bd963c_IsSelf(_1b2bd8edd_Param* _self_);
inline jule::Bool _1b2bd98c3_IsRef(_1b2bd8edd_Param* _self_);
inline jule::Bool _1b2bdae68_IsVoid(_1b2bda9b2_Fn* _self_);
inline jule::Bool _1b2bdb1ee_IsMethod(_1b2bda9b2_Fn* _self_);
inline jule::Bool _1b2bdb485_IsEntryPoint(_1b2bda9b2_Fn* _self_);
inline jule::Bool _1b2bdb71b_IsInit(_1b2bda9b2_Fn* _self_);
inline jule::Bool _1b2bdb9a2_IsAnon(_1b2bda9b2_Fn* _self_);
inline jule::Bool _1b2bdbc38_AnyVar(_1b2bda9b2_Fn* _self_);
inline jule::Ptr<_1b2bdda70_FnIns> _1b2bdbebe_instanceForce(jule::Ptr<_1b2bda9b2_Fn> _self_);
inline jule::Ptr<_1b2bdda70_FnIns> _1b2bdc255_instance(jule::Ptr<_1b2bda9b2_Fn> _self_);
inline jule::Ptr<_1b2bdda70_FnIns> _1b2bdc563_appendInstance(_1b2bda9b2_Fn* _self_, jule::Ptr<_1b2bdda70_FnIns>* _13835_ins);
inline jule::Str _1b2bdccb1_Str(_1b2bdc91a_ParamIns* _self_);
inline jule::Str _1b2bddde4_Str(_1b2bdda70_FnIns* _self_);
inline jule::Bool _1b2bde235_Equal(jule::Ptr<_1b2bdda70_FnIns> _self_, jule::Ptr<_1b2db1627_TypeKind> _22918_other);
inline jule::Bool _1b2bde6ca_EqualFn(jule::Ptr<_1b2bdda70_FnIns> _self_, jule::Ptr<_1b2bdda70_FnIns>* _24021_f);
inline jule::Bool _1b2bdea1b_equalTrait(jule::Ptr<_1b2bdda70_FnIns> _self_, jule::Ptr<_1b2bdda70_FnIns>* _29924_other);
inline jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _1b2bdeca2_Types(_1b2bdda70_FnIns* _self_);
inline jule::Bool _1b2be0038_IsBuiltin(_1b2bdda70_FnIns* _self_);
inline jule::Bool _1b2be02be_IsAnon(_1b2bdda70_FnIns* _self_);
inline jule::Bool _1b2be0610_Same(_1b2bdda70_FnIns* _self_, jule::Ptr<_1b2bdda70_FnIns> _34216_f);
inline jule::Str _1b2be0951_GetKindStr(_1b2bdda70_FnIns* _self_, jule::Bool _35922_ident);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2be22d2_SelectPackage(_1b2be1cb5_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _2729_selector);
inline jule::Ptr<_1b2d26ca7_Var> _1b2be26cd_FindVar(_1b2be1cb5_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1b2db0835_TypeAlias> _1b2be2ac9_FindTypeAlias(_1b2be1cb5_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1b2b0db6b_Struct> _1b2be2ec5_FindStruct(_1b2be1cb5_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1b2bda9b2_Fn> _1b2be33c1_FindFn(_1b2be1cb5_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1b2be61c6_Trait> _1b2be3712_FindTrait(_1b2be1cb5_SymTab* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1b2be887c_Enum> _1b2be3a53_FindEnum(_1b2be1cb5_SymTab* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1b2bea087_TypeEnum> _1b2be3d94_FindTypeEnum(_1b2be1cb5_SymTab* _self_, jule::Str _9728_ident);
inline jule::I64 _1b2be435b_findVar1(_1b2be1cb5_SymTab* _self_, jule::Ptr<_1b2d26ca7_Var>* _10825_v);
inline jule::Ptr<_1b2d26ca7_Var> _1b2be4812_findVar(_1b2be1cb5_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1b2db0835_TypeAlias> _1b2be4cb8_findTypeAlias(_1b2be1cb5_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1b2be51b4_defByIdent(_1b2be1cb5_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1b2be566a_isDuplicatedIdent(_1b2be1cb5_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Str _1b2be65c2_Str(_1b2be61c6_Trait* _self_);
inline jule::Bool _1b2be6913_Equal(jule::Ptr<_1b2be61c6_Trait> _self_, jule::Ptr<_1b2db1627_TypeKind> _2518_other);
inline jule::Ptr<_1b2bda9b2_Fn> _1b2be6da8_FindMethod(_1b2be61c6_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1b2bda9b2_Fn> _1b2be753a_findMethodInherit(_1b2be61c6_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1b2be81ea_AutoExpr(_1b2be7d32_EnumItem* _self_);
inline jule::Str _1b2be8c34_Str(_1b2be887c_Enum* _self_);
inline jule::Bool _1b2be9075_Equal(jule::Ptr<_1b2be887c_Enum> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other);
inline jule::Ptr<_1b2be7d32_EnumItem> _1b2be94a4_FindItem(_1b2be887c_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1b2bea40b_Str(_1b2bea087_TypeEnum* _self_);
inline jule::Bool _1b2bea74c_Equal(jule::Ptr<_1b2bea087_TypeEnum> _self_, jule::Ptr<_1b2db1627_TypeKind> _8018_other);
inline jule::Ptr<_1b2be99b0_TypeEnumItem> _1b2beab7b_FindItem(_1b2bea087_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1b2c7709d_Str(_1b2c76ba2_comptimeRange* _self_);
inline jule::Bool _1b2c773de_Equal(jule::Ptr<_1b2c76ba2_comptimeRange> _self_, jule::Ptr<_1b2db1627_TypeKind> _2718_other);
inline jule::Str _1b2c77ab5_Str(_1b2c7770d_comptimeStructField* _self_);
inline jule::Bool _1b2c77e06_Equal(jule::Ptr<_1b2c7770d_comptimeStructField> _self_, jule::Ptr<_1b2db1627_TypeKind> _3718_other);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c78412__Decl(jule::Ptr<_1b2c7770d_comptimeStructField> _self_, jule::Ptr<_1b2d80948_eval>* _4127_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c7880d__Type(jule::Ptr<_1b2c7770d_comptimeStructField> _self_, jule::Ptr<_1b2d80948_eval>* _5327_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c78b4e_subIdent(jule::Ptr<_1b2c7770d_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1b2c79369_Str(_1b2c78ea1_comptimeStructFields* _self_);
inline jule::Bool _1b2c796aa_Equal(jule::Ptr<_1b2c78ea1_comptimeStructFields> _self_, jule::Ptr<_1b2db1627_TypeKind> _9018_other);
inline void _1b2c79b3e_ready(_1b2c78ea1_comptimeStructFields* _self_, jule::Ptr<_1b2d26ca7_Var>* _9426_keyA, jule::Ptr<_1b2d26ca7_Var>* _9443_keyB);
inline void _1b2c79ea2_index(_1b2c78ea1_comptimeStructFields* _self_, jule::Ptr<_1b2d7dc21_Data>* _11526_d, jule::I64 _11536_i);
inline void _1b2c7a3c0_step(_1b2c78ea1_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1b2d26ca7_Var>* _12633_keyA, jule::Ptr<_1b2d26ca7_Var>* _12650_keyB);
inline jule::I64 _1b2c7a656_len(_1b2c78ea1_comptimeStructFields* _self_);
inline jule::Str _1b2c7acd8_Str(_1b2c7a931_comptimeStatic* _self_);
inline jule::Bool _1b2c7b129_Equal(jule::Ptr<_1b2c7a931_comptimeStatic> _self_, jule::Ptr<_1b2db1627_TypeKind> _15018_other);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c7b635__Decl(jule::Ptr<_1b2c7a931_comptimeStatic> _self_, jule::Ptr<_1b2d80948_eval>* _15427_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c7ba31__Type(jule::Ptr<_1b2c7a931_comptimeStatic> _self_, jule::Ptr<_1b2d80948_eval>* _16627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c7bd72_subIdent(jule::Ptr<_1b2c7a931_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1b2c7c58c_Str(_1b2c7c1d5_comptimeStatics* _self_);
inline jule::Bool _1b2c7c8cd_Equal(jule::Ptr<_1b2c7c1d5_comptimeStatics> _self_, jule::Ptr<_1b2db1627_TypeKind> _20318_other);
inline void _1b2c7cd62_ready(_1b2c7c1d5_comptimeStatics* _self_, jule::Ptr<_1b2d26ca7_Var>* _20726_keyA, jule::Ptr<_1b2d26ca7_Var>* _20743_keyB);
inline void _1b2c7d1c5_index(_1b2c7c1d5_comptimeStatics* _self_, jule::Ptr<_1b2d7dc21_Data>* _22826_d, jule::I64 _22836_i);
inline void _1b2c7d5e3_step(_1b2c7c1d5_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1b2d26ca7_Var>* _23933_keyA, jule::Ptr<_1b2d26ca7_Var>* _23950_keyB);
inline jule::I64 _1b2c7d879_len(_1b2c7c1d5_comptimeStatics* _self_);
inline jule::Str _1b2c7e00b_Str(_1b2c7db54_comptimeEnumField* _self_);
inline jule::Bool _1b2c7e34c_Equal(jule::Ptr<_1b2c7db54_comptimeEnumField> _self_, jule::Ptr<_1b2db1627_TypeKind> _26318_other);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c7e847__Decl(jule::Ptr<_1b2c7db54_comptimeEnumField> _self_, jule::Ptr<_1b2d80948_eval>* _26727_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c7eb88_subIdent(jule::Ptr<_1b2c7db54_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1b2c8042a_Str(_1b2c7ee63_comptimeEnumFields* _self_);
inline jule::Bool _1b2c8076b_Equal(jule::Ptr<_1b2c7ee63_comptimeEnumFields> _self_, jule::Ptr<_1b2db1627_TypeKind> _30118_other);
inline void _1b2c80b78_ready(_1b2c7ee63_comptimeEnumFields* _self_, jule::Ptr<_1b2d26ca7_Var>* _30526_keyA, jule::Ptr<_1b2d26ca7_Var>* _30543_keyB);
inline void _1b2c80edb_index(_1b2c7ee63_comptimeEnumFields* _self_, jule::Ptr<_1b2d7dc21_Data>* _32626_d, jule::I64 _32636_i);
inline void _1b2c81409_step(_1b2c7ee63_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1b2d26ca7_Var>* _33733_keyA, jule::Ptr<_1b2d26ca7_Var>* _33750_keyB);
inline jule::I64 _1b2c81690_len(_1b2c7ee63_comptimeEnumFields* _self_);
inline jule::Str _1b2c81d22_Str(_1b2c8196a_comptimeParam* _self_);
inline jule::Bool _1b2c82163_Equal(jule::Ptr<_1b2c8196a_comptimeParam> _self_, jule::Ptr<_1b2db1627_TypeKind> _36118_other);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c82680__Decl(jule::Ptr<_1b2c8196a_comptimeParam> _self_, jule::Ptr<_1b2d80948_eval>* _36527_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c82a7b__Type(jule::Ptr<_1b2c8196a_comptimeParam> _self_, jule::Ptr<_1b2d80948_eval>* _37727_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c82e77__Recv(jule::Ptr<_1b2c8196a_comptimeParam> _self_, jule::Ptr<_1b2d80948_eval>* _38527_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c832b8_subIdent(jule::Ptr<_1b2c8196a_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1b2c83a6b_Str(_1b2c837c4_comptimeParams* _self_);
inline jule::Bool _1b2c83dac_Equal(jule::Ptr<_1b2c837c4_comptimeParams> _self_, jule::Ptr<_1b2db1627_TypeKind> _43418_other);
inline void _1b2c84341_ready(_1b2c837c4_comptimeParams* _self_, jule::Ptr<_1b2d26ca7_Var>* _43826_keyA, jule::Ptr<_1b2d26ca7_Var>* _43843_keyB);
inline void _1b2c846a4_index(_1b2c837c4_comptimeParams* _self_, jule::Ptr<_1b2d7dc21_Data>* _45926_d, jule::I64 _45936_i);
inline void _1b2c84ac2_step(_1b2c837c4_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1b2d26ca7_Var>* _47033_keyA, jule::Ptr<_1b2d26ca7_Var>* _47050_keyB);
inline jule::I64 _1b2c84d58_len(_1b2c837c4_comptimeParams* _self_);
inline jule::Str _1b2c854da_Str(_1b2c85133_comptimeTypeInfos* _self_);
inline jule::Bool _1b2c8582b_Equal(jule::Ptr<_1b2c85133_comptimeTypeInfos> _self_, jule::Ptr<_1b2db1627_TypeKind> _49418_other);
inline void _1b2c85cb0_ready(_1b2c85133_comptimeTypeInfos* _self_, jule::Ptr<_1b2d26ca7_Var>* _49826_keyA, jule::Ptr<_1b2d26ca7_Var>* _49843_keyB);
inline void _1b2c86123_index(_1b2c85133_comptimeTypeInfos* _self_, jule::Ptr<_1b2d7dc21_Data>* _51926_d, jule::I64 _51936_i);
inline void _1b2c86541_step(_1b2c85133_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1b2d26ca7_Var>* _52833_keyA, jule::Ptr<_1b2d26ca7_Var>* _52850_keyB);
inline jule::I64 _1b2c867c7_len(_1b2c85133_comptimeTypeInfos* _self_);
inline jule::Str _1b2c86e59_Str(_1b2c86aa2_comptimeTypeInfo* _self_);
inline jule::Bool _1b2c8729a_Equal(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2db1627_TypeKind> _55218_other);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c878d8__Decl(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _55627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c87cd4__Str(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _59322_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c881d0__Kind(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _60627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c885cb__Bits(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _68627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c889c7__Elem(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _71027_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c88dc3__Size(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _74327_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c892be__Key(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _76226_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c896ba__Value(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _77528_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c89ab6__Fields(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _78829_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c89eb2__Statics(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _81730_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8a3ad__Binded(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _83629_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8a7a9__Ordered(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _84926_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8aba5__Comparable(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _86229_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8b0a1__Mutable(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _87526_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8b49c__Types(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _88828_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8b898__CanNil(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _91129_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8bc94__GC(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _92425_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8c190__Result(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _93729_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8c58b__Params(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _95329_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8c8cc_subIdent(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1b2c8d05e_Str(_1b2c8cba7_comptimeValue* _self_);
inline jule::Bool _1b2c8d3a0_Equal(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2db1627_TypeKind> _111818_other);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8d911__Unwrap(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _112229_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8dd0c__Type(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _113027_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8e208__Lvalue(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _113829_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8e604__Mutable(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _115130_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8ea00__Const(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _116428_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c8edeb__Field(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _117728_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c902e7__Method(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _121229_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c90638_subIdent(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _1b2c90cba_Str(_1b2c90913_comptimeFiles* _self_);
inline jule::Bool _1b2c9110b_Equal(jule::Ptr<_1b2c90913_comptimeFiles> _self_, jule::Ptr<_1b2db1627_TypeKind> _132218_other);
inline void _1b2c91590_ready(_1b2c90913_comptimeFiles* _self_, jule::Ptr<_1b2d26ca7_Var>* _132626_keyA, jule::Ptr<_1b2d26ca7_Var>* _132643_keyB);
inline void _1b2c91903_index(_1b2c90913_comptimeFiles* _self_, jule::Ptr<_1b2d7dc21_Data>* _134726_d, jule::I64 _134736_i);
inline void _1b2c91d21_step(_1b2c90913_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1b2d26ca7_Var>* _135833_keyA, jule::Ptr<_1b2d26ca7_Var>* _135850_keyB);
inline jule::I64 _1b2c920a7_len(_1b2c90913_comptimeFiles* _self_);
inline jule::Str _1b2c92739_Str(_1b2c92382_comptimeFile* _self_);
inline jule::Bool _1b2c92a7a_Equal(jule::Ptr<_1b2c92382_comptimeFile> _self_, jule::Ptr<_1b2db1627_TypeKind> _138218_other);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c93097__Path(jule::Ptr<_1b2c92382_comptimeFile> _self_, jule::Ptr<_1b2d80948_eval>* _138627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _138642_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c93493__Name(jule::Ptr<_1b2c92382_comptimeFile> _self_, jule::Ptr<_1b2d80948_eval>* _139927_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _139942_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c9388e__Dir(jule::Ptr<_1b2c92382_comptimeFile> _self_, jule::Ptr<_1b2d80948_eval>* _141226_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _141241_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c93bd0_subIdent(jule::Ptr<_1b2c92382_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _1b2c94593_Str(_1b2c93eaa_comptimeDecls* _self_);
inline jule::Bool _1b2c948d4_Equal(jule::Ptr<_1b2c93eaa_comptimeDecls> _self_, jule::Ptr<_1b2db1627_TypeKind> _146118_other);
inline void _1b2c94c58_ready(_1b2c93eaa_comptimeDecls* _self_, jule::Ptr<_1b2d26ca7_Var>* _146526_keyA, jule::Ptr<_1b2d26ca7_Var>* _146543_keyB);
inline void _1b2c950bb_index(_1b2c93eaa_comptimeDecls* _self_, jule::Ptr<_1b2d7dc21_Data>* _148626_d, jule::I64 _148636_i);
inline void _1b2c954d9_step(_1b2c93eaa_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1b2d26ca7_Var>* _149533_keyA, jule::Ptr<_1b2d26ca7_Var>* _149550_keyB);
inline jule::I64 _1b2c95770_len(_1b2c93eaa_comptimeDecls* _self_);
inline jule::Str _1b2c96650_Str(_1b2c96298_comptimeDecl* _self_);
inline jule::Bool _1b2c96991_Equal(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2db1627_TypeKind> _153418_other);
inline jule::Str _1b2c96de2_declAsStr(_1b2c96298_comptimeDecl* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c972dd__Name(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _156527_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _156542_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c976d9__Public(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _160329_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _160344_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c97ad5__Binded(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _164129_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _164144_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c97ed1__Exceptional(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _167534_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _167549_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c983cc__Mutable(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _169630_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _169645_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c987c8__Variadic(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _172931_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _172946_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c98bc4__Reference(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _176032_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _176047_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c990c0__Params(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _179229_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _179244_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c994bb__Fields(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _182729_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _182744_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c998b7__Statics(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _186830_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _186845_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c99cb3__Methods(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _190430_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _190445_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c9a104_subIdent(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1b2d03091_sema>*,jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>*> _1b2c9d0b3_readyFn(jule::Ptr<_1b2c9cb84_constraintChecker> _self_);
inline jule::Bool _1b2c9d349_readyFi(jule::Ptr<_1b2c9cb84_constraintChecker> _self_);
inline jule::Bool _1b2c9d5d0_readySi(jule::Ptr<_1b2c9cb84_constraintChecker> _self_);
inline jule::Bool _1b2c9d866_ready(jule::Ptr<_1b2c9cb84_constraintChecker> _self_);
inline jule::Bool _1b2c9daec_check(jule::Ptr<_1b2c9cb84_constraintChecker> _self_);
inline jule::Bool _1b2ca037e_IsTraitImpl(_1b2c9ee83_Impl* _self_);
inline jule::Bool _1b2ca0615_IsStructImpl(_1b2c9ee83_Impl* _self_);
inline jule::Bool _1b2ca5d24_IsWhileNext(_1b2ca597d_WhileIter* _self_);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2cabd08_SelectPackage(_1b2cab830_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _34829_selector);
inline jule::Ptr<_1b2d26ca7_Var> _1b2cac204_FindVar(_1b2cab830_scopeChecker* _self_, jule::Str _35923_ident, jule::Bool _35935_binded);
inline jule::Ptr<_1b2db0835_TypeAlias> _1b2cac600_FindTypeAlias(_1b2cab830_scopeChecker* _self_, jule::Str _37629_ident, jule::Bool _37641_binded);
inline jule::Ptr<_1b2b0db6b_Struct> _1b2cac9eb_FindStruct(_1b2cab830_scopeChecker* _self_, jule::Str _40126_ident, jule::Bool _40138_binded);
inline jule::Ptr<_1b2bda9b2_Fn> _1b2cacde7_FindFn(_1b2cab830_scopeChecker* _self_, jule::Str _41022_ident, jule::Bool _41034_binded);
inline jule::Ptr<_1b2be61c6_Trait> _1b2cad238_FindTrait(_1b2cab830_scopeChecker* _self_, jule::Str _41925_ident);
inline jule::Ptr<_1b2be887c_Enum> _1b2cad579_FindEnum(_1b2cab830_scopeChecker* _self_, jule::Str _42824_ident);
inline jule::Ptr<_1b2bea087_TypeEnum> _1b2cad8ba_FindTypeEnum(_1b2cab830_scopeChecker* _self_, jule::Str _43728_ident);
inline jule::Bool _1b2cadc1c_isUnsafe(jule::Ptr<_1b2cab830_scopeChecker> _self_);
inline jule::Bool _1b2cadea3_isRoot(_1b2cab830_scopeChecker* _self_);
inline void _1b2cae1a1_stop(_1b2cab830_scopeChecker* _self_);
inline jule::Bool _1b2cae437_stopped(_1b2cab830_scopeChecker* _self_);
inline jule::Bool _1b2cae6bd_isDeferred(jule::Ptr<_1b2cab830_scopeChecker> _self_);
inline void _1b2cae976_pushCaptured(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2d26ca7_Var>* _49934_v);
inline jule::Ptr<_1b2cab830_scopeChecker> _1b2caec0c_getRoot(jule::Ptr<_1b2cab830_scopeChecker> _self_);
inline jule::Ptr<_1b2cab830_scopeChecker> _1b2caee93_getHardRoot(jule::Ptr<_1b2cab830_scopeChecker> _self_);
inline jule::Ptr<_1b2cc3094_ReferenceStack> _1b2cb0229_getOwnerRefers(jule::Ptr<_1b2cab830_scopeChecker> _self_);
inline jule::Ptr<_1b2d26ca7_Var> _1b2cb056a_findVar(_1b2cab830_scopeChecker* _self_, jule::Str _54623_ident);
inline jule::Ptr<_1b2ca70de_Label> _1b2cb08ab_findLabel(_1b2cab830_scopeChecker* _self_, jule::Str* _56726_ident);
inline jule::Ptr<_1b2caa840_scopeLabel> _1b2cb0bec_findLabelScope(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Str* _58332_ident);
inline jule::Ptr<_1b2caa840_scopeLabel> _1b2cb103d_findLabelAll(_1b2cab830_scopeChecker* _self_, jule::Str* _59429_ident);
inline jule::Bool _1b2cb1439_isDuplicatedIdent(_1b2cab830_scopeChecker* _self_, jule::Uintptr _60633_itself, jule::Str* _60651_ident);
inline void _1b2cb16e2_checkVarDecl(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01257_VarDecl> _62633_decl);
inline void _1b2cb199a_checkTypeAlias(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2db0835_TypeAlias>* _65736_ta);
inline void _1b2cb1c53_checkTypeAliasDecl(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b04e09_TypeAliasDecl> _67339_decl);
inline jule::Ptr<_1b2ca4592_Scope> _1b2cb1ed9_getChild(_1b2cab830_scopeChecker* _self_);
inline void _1b2cb2407_checkChildSsc(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aed40d_ScopeTree>* _68435_tree, jule::Ptr<_1b2ca4592_Scope>* _68463_s, jule::Ptr<_1b2cab830_scopeChecker>* _68479_ssc);
inline jule::Ptr<_1b2ca4592_Scope> _1b2cb2803_checkChildSc(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aed40d_ScopeTree>* _69134_tree, jule::Ptr<_1b2cab830_scopeChecker>* _69162_ssc);
inline jule::Ptr<_1b2ca4592_Scope> _1b2cb2b44_checkChild(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aed40d_ScopeTree>* _69732_tree);
inline void _1b2cb2dec_checkAnonScope(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aed40d_ScopeTree> _70235_tree);
inline void _1b2cb3260_processErrorCall(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2bd686a_BuiltinErrorCallExprModel>* _70738_m, jule::Ptr<_1b2ac7eba_Token> _70769_err);
inline void _1b2cb3518_checkExpr(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ae2721_Expr> _72030_expr);
inline jule::Ptr<_1b2ca49b0_If> _1b2cb3859_checkIf(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b03d3c_If> _75028_i);
inline jule::Ptr<_1b2ca4cac_Else> _1b2cb3b9a_checkElse(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b04216_Else> _77030_e);
inline void _1b2cb3e53_checkConditional(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b046bc_Conditional> _77637_conditional);
inline void _1b2cb442b_checkIterScopeSsc(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Uintptr _79234_it, jule::Ptr<_1b2aed40d_ScopeTree> _79251_tree, jule::Ptr<_1b2ca4592_Scope>* _79279_s, jule::Ptr<_1b2cab830_scopeChecker> _79294_ssc);
inline jule::Ptr<_1b2ca4592_Scope> _1b2cb48d2_checkIterScopeSc(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Uintptr _79733_it, jule::Ptr<_1b2aed40d_ScopeTree> _79750_tree, jule::Ptr<_1b2cab830_scopeChecker> _79777_ssc);
inline jule::Ptr<_1b2ca4592_Scope> _1b2cb4ccd_checkIterScope(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Uintptr _80331_it, jule::Ptr<_1b2aed40d_ScopeTree>* _80349_tree);
inline void _1b2cb5086_checkInfIter(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01da1_Iter>* _80834_it);
inline void _1b2cb533e_checkWhileIter(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01da1_Iter>* _81436_it);
inline void _1b2cb575c_checkComptimeRangeIter(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01da1_Iter>* _86444_it, jule::Ptr<_1b2ca63c9_RangeIter>* _86465_kind, jule::Ptr<_1b2d7dc21_Data>* _86488_d);
inline void _1b2cb5a15_checkRangeIter(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01da1_Iter>* _92136_it);
inline void _1b2cb5cbd_checkIter(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01da1_Iter> _98130_it);
inline jule::Bool _1b2cb610e_checkValidContLabel(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Uintptr _100536_it);
inline jule::Bool _1b2cb6450_checkValidBreakLabel(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Uintptr _102137_ptr);
inline jule::Ptr<_1b2ca675e_ContSt> _1b2cb6791_checkContValidScope(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b03886_ContSt> _104436_c);
inline void _1b2cb6a49_checkCont(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b03886_ContSt> _106826_c);
inline void _1b2cb6d02_checkLabel(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aea9c1_LabelSt> _111531_l);
inline void _1b2cb70aa_pushGoto(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aead9a_GotoSt> _113429_gt);
inline void _1b2cb7363_checkPostfix(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aebd8a_AssignSt> _114533_a);
inline jule::Bool _1b2cb76a4_isNewAssignIdent(_1b2cab830_scopeChecker* _self_, jule::Str _117832_ident);
inline void _1b2cb795c_removeInteriorMutRisk(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2d7dc21_Data>* _119143_d);
inline jule::Bool _1b2cb7e13_checkStructureAssignOp(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b119c6_StructIns>* _120544_s, jule::Ptr<_1b2aebd8a_AssignSt>* _120564_a, jule::Ptr<_1b2d7dc21_Data>* _120588_r);
inline void _1b2cb81bb_checkSingleAssign(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aebd8a_AssignSt>* _124439_a);
inline void _1b2cb8809_processEndPartOfMultiAssign(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ca8585_MultiAssign>* _132649_st, jule::Ptr<_1b2aebd8a_AssignSt>* _132672_a, jule::Ptr<_1b2aeb807_AssignLeft>* _13278_lexpr, jule::Ptr<_1b2d7dc21_Data>* _132738_l, jule::Ptr<_1b2d7dc21_Data>* _132753_r, jule::Bool _132763_strict);
inline void _1b2cb8ab2_checkMultiAssign(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aebd8a_AssignSt>* _140238_a);
inline void _1b2cb8d6a_checkAssignSt(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aebd8a_AssignSt> _146934_a);
inline jule::Ptr<_1b2ca4592_Scope> _1b2cb9266_checkCaseScope(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ca97ea_Case>* _148032_c, jule::Ptr<_1b2aed40d_ScopeTree>* _148047_tree);
inline jule::Ptr<_1b2ca97ea_Case> _1b2cb97c7_checkCase(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ca8cc2_Match> _148630_m, jule::I64 _148641_i, jule::Ptr<_1b2b053b0_Case> _148653_c, jule::Ptr<_1b2d7dc21_Data> _148672_expr);
inline void _1b2cb9be5_checkCases(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b05bc9_MatchCase>* _156332_m, jule::Ptr<_1b2ca8cc2_Match> _156356_rm, jule::Ptr<_1b2d7dc21_Data> _156372_expr);
inline jule::Ptr<_1b2ca97ea_Case> _1b2cba0e1_checkDefault(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ca8cc2_Match> _158433_m, jule::Ptr<_1b2b04216_Else> _158448_d);
inline void _1b2cba454_checkComptimePanic(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ac7eba_Token> _159239_callToken, jule::Ptr<_1b2ca4592_Scope>* _159266_s);
inline void _1b2cba7b7_processConstMatch(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ca8cc2_Match>* _162439_tm, jule::Ptr<_1b2b05bc9_MatchCase>* _162456_m);
inline void _1b2cbaa70_checkTypeMatch(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b05bc9_MatchCase>* _165336_m);
inline void _1b2cbad28_checkCommonMatch(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b05bc9_MatchCase>* _169638_m);
inline void _1b2cbb0d1_checkMatch(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b05bc9_MatchCase> _174731_m);
inline void _1b2cbb389_checkFall(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aeb197_FallSt> _175526_f);
inline jule::Ptr<_1b2ca6b38_BreakSt> _1b2cbb6ca_checkBreakWithLabel(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b034ac_BreakSt> _177836_b);
inline jule::Ptr<_1b2ca6b38_BreakSt> _1b2cbba1b_checkPlainBreak(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b034ac_BreakSt> _183632_b);
inline void _1b2cbbcc4_checkBreak(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b034ac_BreakSt> _185827_b);
inline void _1b2cbc07c_checkRet(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01631_RetSt> _186929_r);
inline void _1b2cbc335_checkUseExpr(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ae30e5_UseExpr> _189429_ue);
inline void _1b2cbc5dd_checkNode(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Any* _191031_node);
inline void _1b2cbc7db_checkResult(jule::Ptr<_1b2cab830_scopeChecker> _self_);
inline void _1b2cbc9d9_checkTree(jule::Ptr<_1b2cab830_scopeChecker> _self_);
inline void _1b2cbcd4c_checkGoto(_1b2cab830_scopeChecker* _self_, jule::Ptr<_1b2ca774e_GotoSt>* _201230_gt, jule::Ptr<_1b2caa840_scopeLabel>* _201248_label);
inline void _1b2cbd04a_checkGotos(_1b2cab830_scopeChecker* _self_);
inline void _1b2cbd248_checkLabels(_1b2cab830_scopeChecker* _self_);
inline void _1b2cbd446_checkVars(_1b2cab830_scopeChecker* _self_);
inline void _1b2cbd644_checkAliases(_1b2cab830_scopeChecker* _self_);
inline void _1b2cbd9a7_check(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aed40d_ScopeTree>* _210727_tree, jule::Ptr<_1b2ca4592_Scope>* _210755_s);
inline jule::Ptr<_1b2cab830_scopeChecker> _1b2cbdc3d_newChildChecker(jule::Ptr<_1b2cab830_scopeChecker> _self_);
inline void _1b2cc0b0d_checkCdef(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _1626_d);
inline void _1b2cc0db6_checkTypedef(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _3229_d);
inline void _1b2cc116e_checkNamespace(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _4835_d);
inline void _1b2cc1427_checkDeprecated(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _10036_d);
inline void _1b2cc16d0_checkTest(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _14126_d);
inline void _1b2cc1988_checkExport(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _16232_d);
inline void _1b2cc1c41_checkDirective(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _20035_d);
inline void _1b2cc1e3e_check(_1b2cc06bd_directiveChecker* _self_);
inline jule::Ptr<_1b2cc3094_ReferenceStack> static__1b2cc3281_new(void);
inline jule::I64 _1b2cc3616_Len(_1b2cc3094_ReferenceStack* _self_);
inline jule::Any _1b2cc3957_At(_1b2cc3094_ReferenceStack* _self_, jule::I64 _4218_i);
inline void _1b2cc3c10_Push(_1b2cc3094_ReferenceStack* _self_, jule::Any _4724_ref);
inline jule::Bool _1b707321e_Exist(_1b2cc3094_ReferenceStack* _self_, jule::Ptr<_1b2bdda70_FnIns> _5220_t);
inline jule::Bool _1b708e9cc_Exist(_1b2cc3094_ReferenceStack* _self_, jule::Ptr<_1b2d26ca7_Var> _5220_t);
inline jule::Bool _1b717562e_Exist(_1b2cc3094_ReferenceStack* _self_, jule::Ptr<_1b2b119c6_StructIns> _5220_t);
inline jule::Bool _1b75137ad_Exist(_1b2cc3094_ReferenceStack* _self_, jule::Ptr<_1b2be61c6_Trait> _5220_t);
inline void _1b2cc98b4_pushErr(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2ac7eba_Token>* _30624_token, jule::Str _30646_fmt, jule::Slice<jule::Any> _30666_args);
inline void _1b2cca145_pushSuggestion(_1b2cc8dad_symBuilder* _self_, jule::Str _31530_fmt, jule::Slice<jule::Any> _31550_args);
inline jule::Bool _1b2cca541_checkCppUseDeclPath(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2b0625c_UseDecl>* _31936_decl, jule::Str* _31958_path);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2cca84e_buildCppHeaderImport(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2b0625c_UseDecl>* _33941_decl);
inline jule::Str _1b2ccac4a_checkAbsPath(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Str _36933_filepath, jule::Ptr<_1b2b0625c_UseDecl>* _36953_decl);
inline jule::Str _1b2ccb146_checkStdAbsPath(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Str _39836_filepath, jule::Ptr<_1b2b0625c_UseDecl>* _39856_decl);
inline __jule_tuple_bool__jule_tuple_str _1b2ccb487_checkImpPath(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2b0625c_UseDecl>* _42134_decl);
inline void _1b2ccb740_assignAlias(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _45133_imp);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2ccba81_buildImport(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2b0625c_UseDecl>* _45833_decl);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2ccbdc2_findUseDecl(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _48528_pkg);
inline jule::Bool _1b2ccc213_checkDuplicateUseDecl(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _49342_pkg);
inline jule::Str _1b2ccc554_getAsLinkPath(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Str _50334_path);
inline void _1b2ccc972_pushCycleError(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2cc8dad_symBuilder>* _52432_sb, jule::Str _52449_path, _20d8ca601_Builder* _52465_message);
inline void _1b2cccd90_pushCrossCycleError(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2cc8dad_symBuilder>* _53737_target, jule::Ptr<_1b2cd4e1e_ImportInfo>* _53759_imp, jule::Ptr<_1b2ac7eba_Token>* _53778_errorToken);
inline jule::Bool _1b2ccd28b_checkImportCycles(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2cd4e1e_ImportInfo> _56034_imp, jule::Ptr<_1b2b0625c_UseDecl>* _56053_decl);
inline void _1b2ccd6a9_checkPackageAccessibility(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2b0625c_UseDecl>* _59142_decl, jule::Str* _59164_mod, jule::Str* _59175_path);
inline jule::Bool _1b2ccdaa5_importPackage(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _62135_imp, jule::Ptr<_1b2b0625c_UseDecl>* _62158_decl);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2ccdde6_importUseDecl(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2b0625c_UseDecl>* _66735_decl);
inline void _1b2cce0e4_importUseDecls(jule::Ptr<_1b2cc8dad_symBuilder> _self_);
inline void _1b2cce39c_appendNode(_1b2cc8dad_symBuilder* _self_, _1b2adc3db_Node* _69631_node);
inline void _1b2cce59a_appendNodes(_1b2cc8dad_symBuilder* _self_);
inline void _1b2cce853_pushDirectivePass(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2adc809_Directive>* _73238_d);
inline void _1b2ccea51_appendTopDirectives(_1b2cc8dad_symBuilder* _self_);
inline void _1b2ccec4e_build(jule::Ptr<_1b2cc8dad_symBuilder> _self_);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2cd543b_SelectPackage(_1b2cd4e1e_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> );
inline jule::Ptr<_1b2d26ca7_Var> _1b2cd5837_FindVar(_1b2cd4e1e_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1b2db0835_TypeAlias> _1b2cd5c33_FindTypeAlias(_1b2cd4e1e_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1b2b0db6b_Struct> _1b2cd612e_FindStruct(_1b2cd4e1e_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1b2bda9b2_Fn> _1b2cd652a_FindFn(_1b2cd4e1e_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1b2be61c6_Trait> _1b2cd686b_FindTrait(_1b2cd4e1e_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1b2be887c_Enum> _1b2cd6bac_FindEnum(_1b2cd4e1e_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1b2bea087_TypeEnum> _1b2cd6eed_FindTypeEnum(_1b2cd4e1e_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1b2cd73b6_isLookupable(_1b2cd4e1e_ImportInfo* _self_);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2cd7b69_SelectPackage(_1b2cd7691_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> );
inline jule::Ptr<_1b2d26ca7_Var> _1b2cd8065_FindVar(_1b2cd7691_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded);
inline jule::Ptr<_1b2db0835_TypeAlias> _1b2cd8461_FindTypeAlias(_1b2cd7691_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded);
inline jule::Ptr<_1b2b0db6b_Struct> _1b2cd885c_FindStruct(_1b2cd7691_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded);
inline jule::Ptr<_1b2bda9b2_Fn> _1b2cd8c58_FindFn(_1b2cd7691_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded);
inline jule::Ptr<_1b2be61c6_Trait> _1b2cd9099_FindTrait(_1b2cd7691_Package* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1b2be887c_Enum> _1b2cd93da_FindEnum(_1b2cd7691_Package* _self_, jule::Str _31724_ident);
inline jule::Ptr<_1b2bea087_TypeEnum> _1b2cd972b_FindTypeEnum(_1b2cd7691_Package* _self_, jule::Str _32328_ident);
inline jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _1b2d0290e_pushComptimeTypeInfo(_1b2d02469_commonSemaMeta* _self_, jule::Ptr<_1b2db1627_TypeKind>* _21241_t);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2d03569_SelectPackage(_1b2d03091_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _24129_selector);
inline jule::Ptr<_1b2d26ca7_Var> _1b2d03965_FindVar(_1b2d03091_sema* _self_, jule::Str _25123_ident, jule::Bool _25135_binded);
inline jule::Ptr<_1b2db0835_TypeAlias> _1b2d03d61_FindTypeAlias(_1b2d03091_sema* _self_, jule::Str _26629_ident, jule::Bool _26641_binded);
inline jule::Ptr<_1b2b0db6b_Struct> _1b2d0425c_FindStruct(_1b2d03091_sema* _self_, jule::Str _28126_ident, jule::Bool _28138_binded);
inline jule::Ptr<_1b2bda9b2_Fn> _1b2d04658_FindFn(_1b2d03091_sema* _self_, jule::Str _29622_ident, jule::Bool _29634_binded);
inline jule::Ptr<_1b2be61c6_Trait> _1b2d04999_FindTrait(_1b2d03091_sema* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1b2be887c_Enum> _1b2d04cda_FindEnum(_1b2d03091_sema* _self_, jule::Str _32624_ident);
inline jule::Ptr<_1b2bea087_TypeEnum> _1b2d0512b_FindTypeEnum(_1b2d03091_sema* _self_, jule::Str _34128_ident);
inline jule::Bool _1b2d05538_isFlag(_1b2d03091_sema* _self_, jule::I64 _35318_flags);
inline jule::Ptr<_1b2be1cb5_SymTab> _1b2d057be_getCurrentFile(_1b2d03091_sema* _self_);
inline void _1b2d05a77_setCurrentFile(_1b2d03091_sema* _self_, jule::Ptr<_1b2be1cb5_SymTab> _35634_f);
inline void _1b2d05e95_pushErr(_1b2d03091_sema* _self_, jule::Ptr<_1b2ac7eba_Token> _35823_token, jule::Str _35845_fmt, jule::Slice<jule::Any> _35865_args);
inline void _1b2d06308_pushSuggestion(_1b2d03091_sema* _self_, jule::Str _36330_fmt, jule::Slice<jule::Any> _36350_args);
inline jule::Bool _1b2d06704_isAccessibleDefine(_1b2d03091_sema* _self_, jule::Bool _36930_public, jule::Ptr<_1b2ac7eba_Token> _36944_token);
inline jule::Bool _1b2d06baa_isDuplicatedIdent(_1b2d03091_sema* _self_, jule::Uintptr _39229_itself, jule::Str* _39247_ident, jule::Bool _39259_binded);
inline void _1b2d0701d_checkDirectives(jule::Ptr<_1b2d03091_sema> _self_, jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _40137_d, jule::Any _40163_o);
inline jule::Bool _1b2d074c4_checkGenericQuantity(_1b2d03091_sema* _self_, jule::I64 _41036_required, jule::I64 _41051_given, jule::Ptr<_1b2ac7eba_Token> _41063_token);
inline jule::Bool _1b2d08508_isUseAliasDuplication(_1b2d03091_sema* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _46838_imp);
inline jule::Bool _1b2d08849_checkAutoAlias(_1b2d03091_sema* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _48035_imp);
inline jule::Bool _1b2d08b8a_checkImport(_1b2d03091_sema* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _49832_imp);
inline void _1b2d08d88_checkImports(_1b2d03091_sema* _self_);
inline void _1b2d09086_implFileImpls(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d09284_implImpls(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d09482_checkEnums(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d09680_checkFileInherits(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d0987d_checkInherits(jule::Ptr<_1b2d03091_sema> _self_);
inline _1b2dc3a24_typeChecker _1b2d09d34_typeChecker(jule::Ptr<_1b2d03091_sema> _self_, jule::Trait _59132_l, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _59147_generics, jule::Ptr<_1b2dc2a34_referencer> _5927_referencer);
inline jule::Ptr<_1b2db1627_TypeKind> _1b2d0a395_buildTypeWithRefers(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _61841_t, jule::Trait _61864_l, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _6197_generics, jule::Ptr<_1b2dc2a34_referencer> _61935_referencer);
inline jule::Bool _1b2d0a906_checkTypeWithRefers(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db8d38_TypeSymbol>* _62541_t, jule::Trait _62561_l, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _6267_generics, jule::Ptr<_1b2dc2a34_referencer> _62635_referencer);
inline jule::Ptr<_1b2c9cb84_constraintChecker> _1b2d0ab8c_constraintChecker(jule::Ptr<_1b2d03091_sema> _self_);
inline jule::Bool _1b2d0b088_checkType(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db8d38_TypeSymbol>* _64031_t, jule::Trait _64051_l);
inline jule::Ptr<_1b2db1627_TypeKind> _1b2d0b53e_checkTypeRefers(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _64537_t, jule::Trait _64560_l, jule::Ptr<_1b2cc3094_ReferenceStack> _64575_refers);
inline jule::Ptr<_1b2db1627_TypeKind> _1b2d0b9e5_buildTypeWithGenerics(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _65743_t, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _6587_generics, jule::Ptr<_1b2cc3094_ReferenceStack> _65835_refers);
inline jule::Ptr<_1b2db1627_TypeKind> _1b2d0c177_selectType(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _67532_t);
inline jule::Ptr<_1b2d80948_eval> _1b2d0c62d_evalpd(jule::Ptr<_1b2d03091_sema> _self_, jule::Trait _68727_l, jule::Ptr<_1b2db1627_TypeKind> _68742_p, jule::Ptr<_1b2d26ca7_Var> _68760_owner);
inline jule::Ptr<_1b2d80948_eval> _1b2d0ca29_evalp(jule::Ptr<_1b2d03091_sema> _self_, jule::Trait _70226_l, jule::Ptr<_1b2db1627_TypeKind> _70241_p);
inline jule::Ptr<_1b2d80948_eval> _1b2d0cd6a_eval(jule::Ptr<_1b2d03091_sema> _self_, jule::Trait _70725_l);
inline jule::Bool _1b2d0d486_checkAssignType(jule::Ptr<_1b2d03091_sema> _self_, jule::Bool _71132_destIsRef, jule::Ptr<_1b2db1627_TypeKind>* _71154_dest, jule::Ptr<_1b2d7dc21_Data>* _7128_d, jule::Ptr<_1b2ac7eba_Token> _71222_errorToken, jule::Ptr<_1b2cc3094_ReferenceStack> _71253_refers);
inline jule::Bool _1b2d0d93c__checkTypeCompatibility(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db1627_TypeKind>* _75445_dest, jule::Ptr<_1b2db1627_TypeKind>* _75467_src, jule::Ptr<_1b2ac7eba_Token> _7557_errorToken);
inline jule::Bool _1b2d0dde3_checkTypeCompatibility(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db1627_TypeKind>* _77244_dest, jule::Ptr<_1b2db1627_TypeKind>* _7738_src, jule::Ptr<_1b2ac7eba_Token>* _77329_errorToken);
inline void _1b2d0e311_pushCompatiblityError(_1b2d03091_sema* _self_, jule::Ptr<_1b2db1627_TypeKind>* _78142_dest, jule::Ptr<_1b2d7dc21_Data>* _78164_src, jule::Ptr<_1b2ac7eba_Token>* _7828_errorToken);
inline jule::Bool _1b2d0e7b7_checkTypeCompatibility1(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db1627_TypeKind>* _79945_dest, jule::Ptr<_1b2d7dc21_Data>* _79967_src, jule::Ptr<_1b2ac7eba_Token>* _8008_errorToken);
inline jule::Ptr<_1b2db1627_TypeKind> _1b2d0ec6d_buildNonGenericTypeKind(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _81445_ast, jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>* _8158_generics, jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>* _81544_ignored);
inline jule::Bool _1b2d10169_buildFnNonGenericTypeKinds(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns> _82647_f, jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>* _82663_ignored);
inline jule::Ptr<_1b2bdda70_FnIns> _1b2d104aa_getTraitCheckFnKind(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _84941_f);
inline jule::Bool _1b2d10961_checkConstraintsFn(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _87840_f, jule::Ptr<_1b2ac7eba_Token>* _87856_et, jule::Ptr<_1b2bdda70_FnIns> _87879_exist);
inline jule::Bool _1b2d10e17_checkConstraintsStruct(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _89244_s, jule::Ptr<_1b2ac7eba_Token>* _89264_et, jule::Ptr<_1b2b119c6_StructIns> _89287_exist);
inline jule::Bool _1b2d11313_basicFnEnvironment(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _90940_f, jule::Fn<jule::Bool,jule::Ptr<_1b2d03091_sema>*> _90951_algo);
inline jule::Bool _1b2d1170e_fnEnvironment(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _92935_f, jule::Fn<jule::Bool,jule::Ptr<_1b2d03091_sema>*,jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>*> _92946_algo);
inline void _1b2d119b7_checkFnParamKind(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdc91a_ParamIns>* _94138_p);
inline jule::Bool _1b2d11d08_reloadFnInsTypes(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns> _94837_f);
inline jule::Bool _1b2d122ae_checkRefValidityForInitExpr(jule::Ptr<_1b2d03091_sema> _self_, jule::Bool _98844_leftMut, jule::Ptr<_1b2d7dc21_Data>* _98864_d, jule::Ptr<_1b2ac7eba_Token>* _98879_errorToken);
inline jule::Bool _1b2d12600_isMutRiskyStruct(_1b2d03091_sema* _self_, jule::Ptr<_1b2b119c6_StructIns>* _100529_s);
inline jule::Bool _1b2d12c1b_checkValidityForInitExpr(jule::Ptr<_1b2d03091_sema> _self_, jule::Bool _103241_leftMut, jule::Bool _103256_leftRef, jule::Ptr<_1b2db1627_TypeKind>* _10334_leftKind, jule::Ptr<_1b2d7dc21_Data>* _103330_d, jule::Ptr<_1b2ac7eba_Token>* _103345_errorToken);
inline jule::Bool _1b2d13117_checkTypeAliasDeclKind(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db0835_TypeAlias>* _106044_ta, jule::Trait _106064_l);
inline void _1b2d1347a_checkTypeAliasDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db0835_TypeAlias>* _108340_ta, jule::Trait _108360_l);
inline void _1b2d13733_checkTypeAliasDeclDup(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db0835_TypeAlias>* _109143_ta);
inline jule::Bool _1b2d139b9_checkTypeAliasDecls(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b6bd0057_checkEnumItemsDup(_1b2d03091_sema* _self_, jule::Slice<jule::Ptr<_1b2be7d32_EnumItem>> _111536_items);
inline void _1b6bdd098_checkEnumItemsDup(_1b2d03091_sema* _self_, jule::Slice<jule::Ptr<_1b2be99b0_TypeEnumItem>> _111536_items);
inline void _1b2d1402a_checkEnumItemsStr(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be887c_Enum>* _113539_e);
inline void _1b6bae036_checkEnumItemInt(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d80948_eval>* _116243_eval, jule::Ptr<_1b2be887c_Enum>* _116261_e, jule::Ptr<_1b2db9740_Prim>* _116272_prim, jule::Ptr<_1b2be7d32_EnumItem>* _116290_item, jule::U64* _1162112_n);
inline void _1b6bbea91_checkEnumItemInt(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d80948_eval>* _116243_eval, jule::Ptr<_1b2be887c_Enum>* _116261_e, jule::Ptr<_1b2db9740_Prim>* _116272_prim, jule::Ptr<_1b2be7d32_EnumItem>* _116290_item, jule::I64* _1162112_n);
inline void _1b6baa1b9_checkEnumItemsInt1(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db9740_Prim>* _119841_prim, jule::Ptr<_1b2be887c_Enum>* _119859_e);
inline void _1b6baa4a5_checkEnumItemsInt1(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db9740_Prim>* _119841_prim, jule::Ptr<_1b2be887c_Enum>* _119859_e);
inline void _1b2d14bc9_checkEnumItemsInt(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be887c_Enum>* _123339_e);
inline void _1b2d14e82_checkEnumDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be887c_Enum>* _124335_e);
inline void _1b2d1523a_checkTypeEnumDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bea087_TypeEnum>* _128439_e);
inline jule::Bool _1b2d154c1_checkEnumDecls(jule::Ptr<_1b2d03091_sema> _self_);
inline jule::Bool _1b2d15757_checkTypeEnumDecls(jule::Ptr<_1b2d03091_sema> _self_);
inline jule::Bool _1b2d15a98_checkDeclGenerics(_1b2d03091_sema* _self_, jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>* _134734_generics);
inline jule::Bool _1b2d15dd9_checkFnDeclParamsDup(_1b2d03091_sema* _self_, jule::Ptr<_1b2bda9b2_Fn>* _137437_f);
inline jule::Bool _1b2d1622a_checkFnDeclResultDup(_1b2d03091_sema* _self_, jule::Ptr<_1b2bda9b2_Fn>* _141137_f);
inline jule::Bool _1b2d1656b_checkFnVariadicParam(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _145642_f);
inline void _1b2d16824_checkFnDeclPrototype(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _146942_f);
inline jule::Bool _1b2d16cca_catchTraitInheritCycle(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be61c6_Trait> _149139_t1, jule::Ptr<_1b2be61c6_Trait> _149155_t2, _20d8ca601_Builder* _149172_message);
inline jule::Bool _1b2d1711b__checkTraitDeclInherits(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be61c6_Trait>* _151045_t);
inline void _1b2d173c4_checkTraitDeclInherits(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be61c6_Trait>* _155144_t);
inline void _1b2d1767c_checkTraitDeclMethod(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _157642_f);
inline void _1b2d17935_checkTraitDeclMethods(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be61c6_Trait>* _159043_t);
inline void _1b2d17bdd_checkTraitDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be61c6_Trait>* _162636_t);
inline jule::Bool _1b2d17e74_checkTraitDecls(jule::Ptr<_1b2d03091_sema> _self_);
inline jule::Bool _1b2d18370_checkTraitImplMethods(_1b2d03091_sema* _self_, jule::Ptr<_1b2be61c6_Trait>* _165042_base, jule::Ptr<_1b2c9ee83_Impl>* _165057_ipl);
inline jule::Bool _1b2d1876b_implToStruct(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _166134_dest, jule::Ptr<_1b2c9ee83_Impl>* _166154_ipl);
inline void _1b2d18a24_implTrait(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2c9ee83_Impl>* _170331_decl);
inline void _1b2d18ccc_implStruct(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2c9ee83_Impl>* _174632_decl);
inline void _1b2d19085_implImpl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2c9ee83_Impl>* _177030_decl);
inline void _1b2d193e8_checkVarDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d26ca7_Var>* _178134_decl, jule::Trait _178150_l);
inline void _1b2d196a1_checkGlobalVarDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d26ca7_Var>* _182740_decl);
inline jule::Bool _1b2d19937_checkGlobalDecls(jule::Ptr<_1b2d03091_sema> _self_);
inline jule::Bool _1b2d19d33_checkStructTraitImpl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _185542_strct, jule::Ptr<_1b2be61c6_Trait>* _185563_trt);
inline jule::Bool _1b2d1a174_checkStructImpls(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _188138_s);
inline jule::Bool _1b2d1a4b5_checkStructFields(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _188939_st);
inline void _1b2d1a76d_checkStructDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _190637_s);
inline jule::Bool _1b2d1aa04_checkStructDecls(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d1acac_checkAnonFuncDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _193639_f);
inline void _1b2d1b065_checkFuncDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _194135_f);
inline jule::Bool _1b2d1b3a6_checkFuncDeclsBy(jule::Ptr<_1b2d03091_sema> _self_, jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>* _196338_funcs);
inline jule::Bool _1b2d1b63c_checkFuncDecls(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d1ba5a_pushCycleError(_1b2d03091_sema* _self_, jule::Str* _197927_st1, jule::Str* _197938_st2, _20d8ca601_Builder* _197953_message);
inline void _1b2d1c20e_checkPackageDecls(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d1c572_checkDataForTypeInference(_1b2d03091_sema* _self_, jule::Ptr<_1b2d7dc21_Data>* _203942_d, jule::Ptr<_1b2ac7eba_Token>* _203953_errToken);
inline void _1b2d1c82a_checkVarValue(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d26ca7_Var>* _205135_v);
inline void _1b2d1cb8d_evalVarValue(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d26ca7_Var>* _210434_decl, jule::Trait _210450_l);
inline void _1b2d1d001_checkVar(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d26ca7_Var>* _212130_decl, jule::Trait _212146_l);
inline void _1b2d1d1ee_checkGlobals(jule::Ptr<_1b2d03091_sema> _self_);
inline jule::Ptr<_1b2bdda70_FnIns> _1b2d1d5ea_readyToCheckFn(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _214536_s, jule::Ptr<_1b2bda9b2_Fn>* _214556_f);
inline __jule_tuple_bool__jule_tuple_bool _1b2d1d9e6_checkGenericFn(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _216136_f, jule::Ptr<_1b2ac7eba_Token>* _216152_et);
inline void _1b2d1dd59_checkTypeMethod(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _218437_s, jule::Ptr<_1b2bda9b2_Fn>* _218457_f);
inline jule::Ptr<_1b2bdda70_FnIns> _1b2d1e310_checkStructInsOp(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _219738_s, jule::Ptr<_1b2bda9b2_Fn>* _219758_f, jule::Fn<jule::Bool,jule::Ptr<_1b2bda9b2_Fn>> _219766_p);
inline jule::Bool _1b2d1e70b_checkStructEnv(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _220736_s, jule::Ptr<_1b2ac7eba_Token> _220755_errorToken);
inline jule::Bool _1b2d1eb07_precheckStructIns(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _230439_s, jule::Ptr<_1b2ac7eba_Token> _230458_errorToken);
inline void _1b2d1edb0_checkStructIns(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _234136_s);
inline void _1b2d20168_checkTypeStruct(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _234737_s);
inline void _1b2d20366_checkStructTypes(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d2061e_checkStructInsOperators(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns> _237144_s);
inline void _1b2d208c7_precheckStructType(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _243540_s);
inline void _1b2d20ac5_precheckStructTypes(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d20d7d_checkRets(_1b2d03091_sema* _self_, jule::Ptr<_1b2bdda70_FnIns>* _246130_f);
inline void _1b2d211e1_checkFnInsSc(_1b2d03091_sema* _self_, jule::Ptr<_1b2bdda70_FnIns>* _247233_f, jule::Ptr<_1b2cab830_scopeChecker>* _247249_sc);
inline void _1b2d21554_checkFnInsCaller(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _248538_f, jule::Ptr<_1b2ac7eba_Token> _248553_caller);
inline void _1b2d2180c_checkFnIns(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _250732_f);
inline void _1b2d21ab5_checkFunc(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _251131_f);
inline void _1b2d21d6d_checkTestFn(_1b2d03091_sema* _self_, jule::Ptr<_1b2bdda70_FnIns>* _252632_f);
inline void _1b2d22126_precheckFunc(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _255934_f);
inline void _1b2d22324_precheckFuncs(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d22522_checkFuncs(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d22720_checkPackageTypes(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d2291d_setFileSemaFields(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d22b1b_setSemaFields(jule::Ptr<_1b2d03091_sema> _self_);
inline void _1b2d22dc4_check(jule::Ptr<_1b2d03091_sema> _self_, jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _263727_files);
inline _1b2d232c0_missingRetChecker static__1b2d236bb_new(void);
inline jule::Bool _1b2d239c9_checkConditional(_1b2d232c0_missingRetChecker* _self_, jule::Ptr<_1b2ca51ca_Conditional> _268532_c);
inline jule::Bool _1b2d23d1a_checkMatch(_1b2d232c0_missingRetChecker* _self_, jule::Ptr<_1b2ca8cc2_Match> _269726_m);
inline jule::Bool _1b2d24216_checkInfIter(_1b2d232c0_missingRetChecker* _self_, jule::Uintptr _272324_it, jule::Ptr<_1b2ca4592_Scope>* _272342_s);
inline jule::Bool _1b2d24557_checkScope(_1b2d232c0_missingRetChecker* _self_, jule::Ptr<_1b2ca4592_Scope> _274126_s);
inline jule::Bool _1b2d24898_check(_1b2d232c0_missingRetChecker* _self_, jule::Ptr<_1b2ca4592_Scope> _279621_s);
inline jule::Bool _1b2d271b4_IsInitialized(_1b2d26ca7_Var* _self_);
inline jule::Bool _1b2d2744a_IsTypeInferred(_1b2d26ca7_Var* _self_);
inline jule::Bool _1b2d276d1_untypedConstant(_1b2d26ca7_Var* _self_);
inline jule::Bool static__1b2d28281_Dispose(jule::Ptr<_1b2bda9b2_Fn> _1020_f);
inline jule::Bool static__1b2d2854a_Str(jule::Ptr<_1b2bda9b2_Fn> _2416_f);
inline jule::Bool static__1b2d288be_logical(jule::Ptr<_1b2bda9b2_Fn>* _4621_f, jule::Str _4629_ident);
inline jule::Bool static__1b2d28b88_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _7215_f);
inline jule::Bool static__1b2d28e52_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _7715_f);
inline jule::Bool static__1b2d2921b_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _8217_f);
inline jule::Bool static__1b2d294d5_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _8715_f);
inline jule::Bool static__1b2d2979e_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _9217_f);
inline jule::Bool static__1b2d29b23_result(jule::Ptr<_1b2bda9b2_Fn>* _9620_f, jule::Str _9628_ident);
inline jule::Bool static__1b2d29ddc_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _11816_f);
inline jule::Bool static__1b2d2a1a6_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _12316_f);
inline jule::Bool static__1b2d2a470_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _12816_f);
inline jule::Bool static__1b2d2a739_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _13316_f);
inline jule::Bool static__1b2d2aa03_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _13816_f);
inline jule::Bool static__1b2d2acbc_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _14316_f);
inline jule::Bool static__1b2d2b086_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _14816_f);
inline jule::Bool static__1b2d2b350_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _15319_f);
inline jule::Bool static__1b2d2b619_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _15818_f);
inline jule::Bool static__1b2d2b8d3_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _16319_f);
inline jule::Bool static__1b2d2bc57_unary(jule::Ptr<_1b2bda9b2_Fn>* _16719_f, jule::Str _16727_ident);
inline jule::Bool static__1b2d2c021_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _18716_f);
inline jule::Bool static__1b2d2c2da_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _19216_f);
inline jule::Bool static__1b2d2c5a4_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _19719_f);
inline jule::Bool static__1b2d2c928_assign(jule::Ptr<_1b2bda9b2_Fn>* _20120_f, jule::Str _20128_ident);
inline jule::Bool static__1b2d2cbe2_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _22122_f);
inline jule::Bool static__1b2d2ceab_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _22622_f);
inline jule::Bool static__1b2d2d275_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _23122_f);
inline jule::Bool static__1b2d2d53e_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _23622_f);
inline jule::Bool static__1b2d2d808_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _24122_f);
inline jule::Bool static__1b2d2dac2_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _24622_f);
inline jule::Bool static__1b2d2dd8b_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _25122_f);
inline jule::Bool static__1b2d2e155_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _25624_f);
inline jule::Bool static__1b2d2e41e_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _26125_f);
inline jule::Bool static__1b2d2e6d8_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _26625_f);
inline void _1b2d6591c_pushErr(_1b2d653de_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args);
inline jule::Bool _1b2d65ba3_checkTrait(_1b2d653de_typeCompatibilityChecker* _self_);
inline jule::Bool _1b2d65e39_checkPtr(_1b2d653de_typeCompatibilityChecker* _self_);
inline jule::Bool _1b2d661c0_checkPrim(_1b2d653de_typeCompatibilityChecker* _self_);
inline jule::Bool _1b2d6b505_typeEnum(_1b2d653de_typeCompatibilityChecker* _self_, jule::Ptr<_1b2bea087_TypeEnum>* _18725_e, jule::Ptr<_1b2db1627_TypeKind>* _18744_t2);
inline jule::Bool _1b2d6b6ae_checkTypeEnum(_1b2d653de_typeCompatibilityChecker* _self_);
inline jule::Bool _1b2d6b945_check(_1b2d653de_typeCompatibilityChecker* _self_);
inline void _1b2d6c58e_pushErr(_1b2d6c0c7_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args);
inline jule::Bool _1b2d6c825_checkValidity(_1b2d6c0c7_assignTypeChecker* _self_);
inline jule::Bool _1b2d6caab_checkConst(_1b2d6c0c7_assignTypeChecker* _self_);
inline jule::Bool _1b2d6cd42_checkCompatibility(_1b2d6c0c7_assignTypeChecker* _self_);
inline jule::Bool _1b2d6d0c8_check(_1b2d6c0c7_assignTypeChecker* _self_);
inline jule::Bool _1b6dc875b_annotateConstraintElem(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _34646_k);
inline jule::Bool _1b6dc8a03_annotateConstraintElem(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _34646_k);
inline jule::Bool _1b6dd082e_annotateConstraintElem(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _34646_k);
inline jule::Bool _1b6dd4910_annotateConstraintElem(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _34646_k);
inline jule::Bool _1b2d6e3c6_annotateConstraintMap(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _36642_k);
inline jule::Bool _1b2d6e717_annotateConstraintTup(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _38142_k);
inline jule::Bool _1b2d6ea58_annotateConstraintFn(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _39841_k);
inline jule::Bool _1b2d6ed99_annotateConstraintIdent(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _41944_k);
inline jule::Bool _1b2d701da_annotateConstraint(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _44839_k);
inline void _1b2d7054d_pushGeneric(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _47332_k, jule::I64 _47346_i);
inline jule::Bool _1b2d7088e_annotatePrim(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _48840_k);
inline jule::Bool _1b2d70bd0_annotateArr(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _49239_k);
inline jule::Bool _1b2d71021_annotateSlc(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _50239_k);
inline jule::Bool _1b2d7141c_checkMapKey(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _51238_k, jule::Ptr<_1b2db1627_TypeKind>* _51258_ck);
inline jule::Bool _1b2d7175d_annotateMap(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _52039_k);
inline jule::Bool _1b2d71a9e_annotateFn(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _53038_k);
inline jule::Bool _1b2d71de0_annotatePtr(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _55939_k);
inline jule::Bool _1b2d72231_annotateSptr(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _56940_k);
inline jule::Bool _1b2d72572_annotateStruct(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _57942_k);
inline jule::Bool _1b2d728b3_annotateAny(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _60139_k);
inline jule::Bool _1b2d72c04_annotateKind(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _62240_k);
inline jule::Bool _1b2d72e8a_annotate(_1b2d6d99c_dynamicTypeAnnotation* _self_);
inline void _1b2d73d9d_pushErrToken(_1b2d73809_fnCallArgChecker* _self_, jule::Ptr<_1b2ac7eba_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args);
inline void _1b2d74211_pushErr(_1b2d73809_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args);
inline jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>> _1b2d74497_getParams(_1b2d73809_fnCallArgChecker* _self_);
inline jule::Bool _1b2d747d8_checkCounts(_1b2d73809_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>* _68428_params);
inline jule::Bool _1b2d74c8e_checkArg(_1b2d73809_fnCallArgChecker* _self_, jule::Ptr<_1b2bdc91a_ParamIns>* _71629_p, jule::Ptr<_1b2d7dc21_Data>* _71648_arg, jule::Ptr<_1b2ac7eba_Token>* _71665_errorToken);
inline jule::Bool _1b2d7518a_push(_1b2d73809_fnCallArgChecker* _self_, jule::Ptr<_1b2bdc91a_ParamIns>* _74525_p, jule::Ptr<_1b2ae2721_Expr> _74543_arg);
inline jule::Bool _1b2d75586_pushVariadic(_1b2d73809_fnCallArgChecker* _self_, jule::Ptr<_1b2bdc91a_ParamIns>* _76933_p, jule::I64 _76951_i);
inline jule::Bool _1b2d758c7_checkArgs(_1b2d73809_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>* _85030_params);
inline jule::Bool _1b2d75b5d_checkDynamicTypeAnnotation(_1b2d73809_fnCallArgChecker* _self_);
inline jule::Bool _1b2d75de4_check(_1b2d73809_fnCallArgChecker* _self_);
inline void _1b2d76cc4_pushErr(_1b2d76741_structLitChecker* _self_, jule::Ptr<_1b2ac7eba_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args);
inline void _1b2d77137_pushSuggestion(_1b2d76741_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args);
inline void _1b2d77555_pushMatch(_1b2d76741_structLitChecker* _self_, jule::Ptr<_1b2b10e26_FieldIns>* _93930_f, jule::Ptr<_1b2d7dc21_Data>* _93949_d, jule::Ptr<_1b2ac7eba_Token>* _93964_errorToken);
inline void _1b2d778b8_checkPair(_1b2d76741_structLitChecker* _self_, jule::Ptr<_1b2ae6e40_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1b2ae2721_Expr>>* _95862_exprs);
inline jule::Bool _1b2d77c09_readyExprs(_1b2d76741_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b2ae2721_Expr>>* _99731_exprs);
inline void _1b2d77eb2_check(_1b2d76741_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b2ae2721_Expr>>* _102126_exprs);
inline jule::Ptr<_1b2d26ca7_Var> _1b2d78a40_buildVar(_1b2d78523_rangeChecker* _self_, jule::Ptr<_1b2b01257_VarDecl>* _109725_decl);
inline void _1b2d78c3d_setSizeKey(_1b2d78523_rangeChecker* _self_);
inline void _1b2d7915b_checkRangeExprValidity(_1b2d78523_rangeChecker* _self_, jule::Ptr<_1b2d7dc21_Data>* _111643_d, jule::Ptr<_1b2d26ca7_Var>* _111654_key, jule::Ptr<_1b2db1627_TypeKind>* _111670_k);
inline void _1b2d79359_checkSlice(_1b2d78523_rangeChecker* _self_);
inline void _1b2d79557_checkArray(_1b2d78523_rangeChecker* _self_);
inline void _1b2d79755_checkMapKeyA(_1b2d78523_rangeChecker* _self_);
inline void _1b2d79953_checkMapKeyB(_1b2d78523_rangeChecker* _self_);
inline void _1b2d79b51_checkMap(_1b2d78523_rangeChecker* _self_);
inline void _1b2d79d4e_checkStr(_1b2d78523_rangeChecker* _self_);
inline void _1b2d7a04c_checkComptime(_1b2d78523_rangeChecker* _self_);
inline jule::Bool _1b2d7a2d3_checkComptimeRange(_1b2d78523_rangeChecker* _self_);
inline jule::Bool _1b2d7a569_check(_1b2d78523_rangeChecker* _self_);
inline void _1b2d7b1e6_prepareTypes(_1b2d7ac84_retTypeChecker* _self_);
inline void _1b2d7b49e_prepareExprs(_1b2d7ac84_retTypeChecker* _self_, jule::Ptr<_1b2ae2721_Expr>* _127533_e);
inline void _1b2d7b69c_checkExprs(_1b2d7ac84_retTypeChecker* _self_);
inline jule::Bool _1b2d7b933_tryFuncMultiRetForward(_1b2d7ac84_retTypeChecker* _self_);
inline jule::Bool _1b2d7bc74_check(_1b2d7ac84_retTypeChecker* _self_, jule::Ptr<_1b2ae2721_Expr>* _137726_e);
inline jule::Bool _1b2d7e13e_IsNil(_1b2d7dc21_Data* _self_);
inline jule::Bool _1b2d7e3c5_IsVoid(_1b2d7dc21_Data* _self_);
inline jule::Bool _1b2d7e65b_IsConst(_1b2d7dc21_Data* _self_);
inline jule::Bool _1b2d7e99c_GoodOperand(_1b2d7dc21_Data* _self_, jule::Ptr<_1b2d7dc21_Data>* _6128_other);
inline void _1b2d80ecb_pushErr(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _9223_token, jule::Str _9245_fmt, jule::Slice<jule::Any> _9265_args);
inline void _1b2d8133e_pushSuggestion(_1b2d80948_eval* _self_, jule::Str _9730_fmt, jule::Slice<jule::Any> _9750_args);
inline void _1b2d8153c_allowBuiltin(_1b2d80948_eval* _self_);
inline void _1b2d8173a_disallowBuiltin(_1b2d80948_eval* _self_);
inline jule::Bool _1b2d819c1_isUnsafe(_1b2d80948_eval* _self_);
inline jule::Bool _1b2d81c57_isGlobal(_1b2d80948_eval* _self_);
inline jule::Bool _1b2d82065_applyNumericPrefix(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _12439_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d823a6_litStr(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr>* _15919_l);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d826e7_litRune(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr>* _17620_l);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d82a38_litFloat(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr>* _19521_l);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d82d79_litInt(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr>* _20723_l);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d831ba_litNum(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr>* _26223_l);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d8350b_evalLit(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr> _27123_lit);
inline jule::Any _1b2d8384c_findBuiltins(_1b2d80948_eval* _self_, jule::Str* _28429_ident);
inline jule::Any _1b2d83c48_getDef(_1b2d80948_eval* _self_, jule::Str* _31123_ident, jule::Bool _31135_binded);
inline jule::Ptr<_1b2cc3094_ReferenceStack> _1b2d83ece_getOwnerRefers(_1b2d80948_eval* _self_);
inline void _1b7070c77_pushReference(_1b2d80948_eval* _self_, jule::Ptr<_1b2bdda70_FnIns>* _36937_ref);
inline void _1b708c6ab_pushReference(_1b2d80948_eval* _self_, jule::Ptr<_1b2d26ca7_Var>* _36937_ref);
inline void _1b7173165_pushReference(_1b2d80948_eval* _self_, jule::Ptr<_1b2b119c6_StructIns>* _36937_ref);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d845c8__evalEnum(_1b2d80948_eval* _self_, jule::Ptr<_1b2be887c_Enum> _37625_enm);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d849c4_evalEnum(_1b2d80948_eval* _self_, jule::Ptr<_1b2be887c_Enum> _38528_enm, jule::Ptr<_1b2ac7eba_Token> _38540_errorToken);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d84d15__evalTypeEnum(_1b2d80948_eval* _self_, jule::Ptr<_1b2bea087_TypeEnum> _39429_enm);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d85211_evalTypeEnum(_1b2d80948_eval* _self_, jule::Ptr<_1b2bea087_TypeEnum> _40332_enm, jule::Ptr<_1b2ac7eba_Token> _40348_errorToken);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d85552__evalStruct(_1b2d80948_eval* _self_, jule::Ptr<_1b2b119c6_StructIns> _41227_s);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d8594d_evalStruct(_1b2d80948_eval* _self_, jule::Ptr<_1b2b0db6b_Struct> _42630_s, jule::Ptr<_1b2ac7eba_Token> _42646_errorToken);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d85c8e_evalFnIns(_1b2d80948_eval* _self_, jule::Ptr<_1b2bdda70_FnIns> _45525_f);
inline void _1b2d86102_checkDeprecated(_1b2d80948_eval* _self_, jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _46436_directives, jule::Ptr<_1b2ac7eba_Token> _46467_tok);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d864ed_evalFn(_1b2d80948_eval* _self_, jule::Ptr<_1b2bda9b2_Fn> _48026_f, jule::Ptr<_1b2ac7eba_Token> _48034_errorToken);
inline void _1b2d8691b_pushIllegalCycleError(_1b2d80948_eval* _self_, jule::Ptr<_1b2d26ca7_Var>* _50538_v1, jule::Ptr<_1b2d26ca7_Var>* _50549_v2, _20d8ca601_Builder* _50564_message);
inline jule::Bool _1b2d86d17_checkCrossCycle(_1b2d80948_eval* _self_, jule::Ptr<_1b2d26ca7_Var>* _51532_v, _20d8ca601_Builder* _51546_message);
inline jule::Bool _1b2d87213_checkIllegalCycles(_1b2d80948_eval* _self_, jule::Ptr<_1b2d26ca7_Var>* _53239_v, jule::Ptr<_1b2ac7eba_Token> _53248_declToken);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d8760e_evalVar(_1b2d80948_eval* _self_, jule::Ptr<_1b2d26ca7_Var> _56027_v, jule::Ptr<_1b2ac7eba_Token> _56036_errorToken);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d87a0a_evalTypeAlias(_1b2d80948_eval* _self_, jule::Ptr<_1b2db0835_TypeAlias> _68333_ta, jule::Ptr<_1b2ac7eba_Token> _68349_errorToken);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d87e06_evalDef(_1b2d80948_eval* _self_, jule::Any* _72228_def, jule::Ptr<_1b2ac7eba_Token> _72242_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d88247_evalIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae403b_IdentExpr> _74629_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d88588_evalUnary(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae47cd_UnaryExpr> _75130_u);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d888c9_evalVariadic(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae4ba7_VariadicExpr> _75633_v);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d88c1a_evalUnsafe(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae3a85_UnsafeExpr> _77831_u);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d8905b_evalArr(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae8c77_SliceExpr> _78628_s);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d89512_evalExpSlc(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae8c77_SliceExpr> _86331_s, jule::Ptr<_1b2db1627_TypeKind> _86355_t, jule::Any _86373_first);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d89853_evalSliceExpr(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae8c77_SliceExpr> _90134_s);
inline jule::Bool _1b2d89c4e_checkIntegerIndexingByData(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _93747_d, jule::Ptr<_1b2ac7eba_Token> _93761_token);
inline void _1b2d8a16c_indexingPtr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _95032_d, jule::Ptr<_1b2d7dc21_Data>* _95047_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _95066_i);
inline void _1b2d8a58a_indexingArr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _96632_d, jule::Ptr<_1b2d7dc21_Data>* _96647_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _96666_i);
inline void _1b2d8a9a8_indexingSlc(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _97632_d, jule::Ptr<_1b2d7dc21_Data>* _97647_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _97666_i);
inline void _1b2d8adc6_indexingMap(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _99932_d, jule::Ptr<_1b2d7dc21_Data>* _99947_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _99966_i);
inline void _1b2d8b2e4_indexingStr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _101632_d, jule::Ptr<_1b2d7dc21_Data>* _101647_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _101666_i);
inline void _1b2d8b712_comptimeRange(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _104434_d, jule::Ptr<_1b2d7dc21_Data>* _104449_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _104468_i);
inline void _1b2d8bb30_toIndexing(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _106931_d, jule::Ptr<_1b2d7dc21_Data>* _106946_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _106965_i);
inline jule::Bool _1b2d8c0d6_pushGenericsFromExprSubIdent(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae5834_SubIdentExpr>* _109750_sexpr, jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>* _10988_generics, jule::Ptr<_1b2ae2721_Expr>* _109841_expr);
inline jule::Bool _1b2d8c4d2_pushGenericsFromData(jule::Ptr<_1b2d80948_eval> _self_, jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>* _110842_generics, jule::Ptr<_1b2ae2721_Expr>* _110875_expr);
inline void _1b2d8c845_evalIdentDeclFromIndexing(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2d7dc21_Data>* _117847_d, jule::Ptr<_1b2ae96d4_IndexingExpr>* _117862_i);
inline __jule_tuple_bool__jule_tuple_bool _1b2d8cceb_checkGenericFn(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2bdda70_FnIns>* _122136_f, jule::Ptr<_1b2ac7eba_Token>* _122152_et, jule::Any* _122176_model);
inline void _1b2d8d15e_evalFnGenericFromIndexing(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2d7dc21_Data>* _123747_d, jule::Ptr<_1b2ae96d4_IndexingExpr>* _123762_i);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d8d4a0_evalIndexing(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae96d4_IndexingExpr> _127733_i);
inline __jule_tuple_x_1b2d7dc21_Data__jule_tuple_x_1b2d7dc21_Data _1b2d8d7e1_evalSlicingExprs(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae9d44_SlicingExpr>* _133738_s);
inline void _1b2d8da99_slicingArr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _137327_d);
inline void _1b2d8deb7_slicingStr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _138827_d, jule::Ptr<_1b2d7dc21_Data>* _138838_l, jule::Ptr<_1b2d7dc21_Data>* _138849_r);
inline void _1b2d8e490_checkSlicing(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _142633_d, jule::Ptr<_1b2d7dc21_Data>* _142644_l, jule::Ptr<_1b2d7dc21_Data>* _142655_r, jule::Ptr<_1b2ae9d44_SlicingExpr>* _142666_s);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d8e7d1_evalSlicing(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae9d44_SlicingExpr> _144532_s);
inline void _1b2d8ebee_castPtr(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _148227_t, jule::Ptr<_1b2d7dc21_Data> _148245_d, jule::Ptr<_1b2ac7eba_Token> _148255_errorToken);
inline void _1b2d9011c_castStruct(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _150430_t, jule::Ptr<_1b2d7dc21_Data> _150448_d, jule::Ptr<_1b2ac7eba_Token> _150458_errorToken);
inline void _1b2d9053a_castRef(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _152127_t, jule::Ptr<_1b2d7dc21_Data> _152145_d, jule::Ptr<_1b2ac7eba_Token> _152155_errorToken);
inline void _1b2d90958_castSlc(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _154427_t, jule::Ptr<_1b2d7dc21_Data> _154445_d, jule::Ptr<_1b2ac7eba_Token> _154455_errorToken);
inline void _1b2d90cbb_castStr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data> _159927_d, jule::Ptr<_1b2ac7eba_Token> _159937_errorToken);
inline void _1b2d911d9_castInt(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _164627_t, jule::Ptr<_1b2d7dc21_Data> _164645_d, jule::Ptr<_1b2ac7eba_Token> _164655_errorToken);
inline void _1b2d91607_castNum(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _169227_t, jule::Ptr<_1b2d7dc21_Data> _169245_d, jule::Ptr<_1b2ac7eba_Token> _169255_errorToken);
inline void _1b2d91a25_castPrim(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _172328_t, jule::Ptr<_1b2d7dc21_Data> _172346_d, jule::Ptr<_1b2ac7eba_Token> _172356_errorToken);
inline void _1b2d91d88_castConstant(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind>* _173933_t, jule::Ptr<_1b2d7dc21_Data>* _173952_d);
inline void _1b2d922a6_castTypeEnum(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind>* _174833_t, jule::Ptr<_1b2d7dc21_Data>* _174852_d, jule::Ptr<_1b2ac7eba_Token>* _174867_errorToken);
inline void _1b2d926c4_castTypeEnumT(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind>* _175834_t, jule::Ptr<_1b2d7dc21_Data>* _175853_d, jule::Ptr<_1b2ac7eba_Token>* _175868_errorToken);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d92b7a_evalCastByTypeNData(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _176839_t, jule::Ptr<_1b2d7dc21_Data> _176857_d, jule::Ptr<_1b2ac7eba_Token> _176871_errorToken);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d93131_evalCastT(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2db1627_TypeKind>* _184531_t, jule::Ptr<_1b2ae2721_Expr>* _184550_e, jule::Ptr<_1b2ac7eba_Token>* _184570_et);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d93472_evalCast(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae5081_CastExpr> _186229_c);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d937b3_evalNamespace(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae545a_NamespaceExpr> _187133_s);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d93c69_evalStructLitExplicit(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2b119c6_StructIns> _189342_s, jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _18947_exprs, jule::Ptr<_1b2ac7eba_Token> _189432_errorToken);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d940aa_evalStructLit(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae776a_StructLit> _193134_lit);
inline _1b2dc3a24_typeChecker _1b2d94341_typeChecker(_1b2d80948_eval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d94682_evalType(_1b2d80948_eval* _self_, jule::Ptr<_1b2add3dc_TypeDecl> _196328_t);
inline void _1b2d949e5_callTypeFn(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae644a_FnCallExpr>* _197632_fc, jule::Ptr<_1b2d7dc21_Data>* _197659_d);
inline void _1b2d94d58_callBuiltinFn(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae644a_FnCallExpr>* _200235_fc, jule::Ptr<_1b2d7dc21_Data>* _200262_d);
inline void _1b2d951bb_checkFnOfConcurrentCall(_1b2d80948_eval* _self_, jule::Ptr<_1b2bdda70_FnIns>* _201440_f, jule::Ptr<_1b2ac7eba_Token> _201451_errorToken);
inline void _1b2d955d9_processExceptionalHandler(_1b2d80948_eval* _self_, jule::Ptr<_1b2bdda70_FnIns>* _203346_f, jule::Ptr<_1b2ae644a_FnCallExpr>* _203362_fc, jule::Ptr<_1b2d7dc21_Data>* _203389_d);
inline void _1b2d9594c_callFn(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae644a_FnCallExpr>* _206028_fc, jule::Ptr<_1b2d7dc21_Data>* _206055_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d95c8d_evalFnCall(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae644a_FnCallExpr> _220931_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d96189_evalEnumStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2be887c_Enum> _224234_enm, jule::Ptr<_1b2ac7eba_Token> _224250_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d96585_evalTypeEnumStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2bea087_TypeEnum> _225038_enm, jule::Ptr<_1b2ac7eba_Token> _225054_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d96981_evalStructStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2b119c6_StructIns> _227336_s, jule::Ptr<_1b2ac7eba_Token> _227351_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d96e37_evalTraitSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data> _230837_d, jule::Ptr<_1b2be61c6_Trait> _230851_trt, jule::Ptr<_1b2ac7eba_Token> _230868_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d97498_evalStructSubIdentField(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _233044_d, jule::Ptr<_1b2b119c6_StructIns>* _233059_s, jule::Ptr<_1b2ac7eba_Token>* _233079_tok, jule::Ptr<_1b2b10e26_FieldIns>* _2330104_f);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d97ab4_evalStructSubIdentMethod(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _235545_d, jule::Ptr<_1b2b119c6_StructIns>* _235560_s, jule::Ptr<_1b2ac7eba_Token>* _235580_tok, jule::Ptr<_1b2bda9b2_Fn>* _2355105_m, jule::Bool _2355113_ref);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d98125_evalStructSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data> _237638_d, jule::Ptr<_1b2b119c6_StructIns> _237652_s, jule::Ptr<_1b2ae5834_SubIdentExpr> _237671_si, jule::Bool _237695_ref);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d98466_evalIntTypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _240033_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d987a7_evalUintTypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _242734_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d98ae8_evalI8TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _244532_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d98e39_evalI16TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _247433_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9927a_evalI32TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _250333_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d995bb_evalI64TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _253233_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9990c_evalU8TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _256132_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d99c4d_evalU16TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _258033_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9a08e_evalU32TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _259933_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9a3d0_evalU64TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _261833_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9a721_evalF32TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _263733_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9aa62_evalF64TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _267633_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9ae5d_evalPrimStatic(_1b2d80948_eval* _self_, jule::Str _271530_kind, jule::Ptr<_1b2ac7eba_Token> _271541_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9b359_evalTypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data> _274734_d, jule::Ptr<_1b2ae5834_SubIdentExpr> _274748_si);
inline jule::Ptr<_1b2d7dc21_Data> _1b72ac25a_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c86aa2_comptimeTypeInfo>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1b2d7dc21_Data> _1b72b1a23_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c7770d_comptimeStructField>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1b2d7dc21_Data> _1b72b6297_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c7db54_comptimeEnumField>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1b2d7dc21_Data> _1b72baa60_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c8196a_comptimeParam>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1b2d7dc21_Data> _1b72c0427_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c7a931_comptimeStatic>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1b2d7dc21_Data> _1b72c4b9b_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c8cba7_comptimeValue>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1b2d7dc21_Data> _1b72c9420_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c92382_comptimeFile>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1b2d7dc21_Data> _1b72cdc2c_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c96298_comptimeDecl>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si);
inline __jule_tuple_x_1b2d7dc21_Data__jule_tuple_bool _1b2d9bc0b_tryComptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _277143_d, jule::Ptr<_1b2ae5834_SubIdentExpr> _277157_si);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9c107_evalObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data> _280235_d, jule::Ptr<_1b2ae5834_SubIdentExpr> _280249_si);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9c448_evalSubIdent(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae5834_SubIdentExpr> _284633_si);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9c789_evalTuple(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae3315_TupleExpr> _286030_tup);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9cb85_evalMap(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2dc03d3_Map> _288928_m, jule::Ptr<_1b2ae7c21_BraceLit> _288941_lit);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9cec6_evalBraceLit(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae7c21_BraceLit> _293733_lit);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9d317_evalAnonFunc(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2b0009c_FnDecl> _295233_decl);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9d658_evalBinary(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae5cda_BinaryExpr> _299031_op);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9d999_evalExprKind(jule::Ptr<_1b2d80948_eval> _self_, jule::Any _300533_kind);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9dcda_eval1(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae2721_Expr> _305326_expr);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9e12b_eval(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae2721_Expr> _309825_expr);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9e46c_evalExpr1(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae2721_Expr> _311330_expr);
inline jule::Ptr<_1b2d7dc21_Data> _1b2d9e7ad_evalExpr(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae2721_Expr> _312929_expr);
inline _1b2d9ec42_unaryEval static__1b2da01b5_new(jule::Ptr<_1b2d80948_eval> _315020_e);
inline void _1b2da03b3_minus(_1b2d9ec42_unaryEval* _self_);
inline void _1b2da05b1_plus(_1b2d9ec42_unaryEval* _self_);
inline void _1b2da07ae_caret(_1b2d9ec42_unaryEval* _self_);
inline void _1b2da09ac_excl(_1b2d9ec42_unaryEval* _self_);
inline void _1b2da0baa_star(_1b2d9ec42_unaryEval* _self_);
inline void _1b2da0da8_amper(_1b2d9ec42_unaryEval* _self_);
inline void _1b2da10a6_typeDecl(_1b2d9ec42_unaryEval* _self_);
inline void _1b2da12a4_evalData(_1b2d9ec42_unaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da15e5_eval(_1b2d9ec42_unaryEval* _self_, jule::Ptr<_1b2ae47cd_UnaryExpr> _341024_u);
inline _1b2da1bcd_binaryEval static__1b2da22b6_newPlain(jule::Ptr<_1b2d80948_eval> _345825_e);
inline _1b2da1bcd_binaryEval static__1b2da263a_new(jule::Ptr<_1b2d80948_eval> _346420_e, jule::Ptr<_1b2ac7eba_Token> _346434_op);
inline jule::Bool _1b2da28c1_checkTypeCompatibility(_1b2da1bcd_binaryEval* _self_);
inline jule::Bool _1b2da2b57_checkStructCommonOperatorCompatibility(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da2ddd_evalComptimeTypeInfo(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da3174_evalNil(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da340a_evalEnum(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da3691_evalTypeEnum(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da3927_evalSptr(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da3bad_evalPtr(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da3e44_evalArr(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da41ca_evalStruct(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da4461_evalTrait(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da46e7_evalAny(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da497d_evalBool(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da4c14_evalStr(_1b2da1bcd_binaryEval* _self_);
inline void _1b2da4e12_setTypeToGreater(_1b2da1bcd_binaryEval* _self_);
inline void _1b2da51ba_checkModData(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _386333_d);
inline void _1b2da53b8_mod(_1b2da1bcd_binaryEval* _self_);
inline jule::Bool _1b2da57b4_numbersAreCompatibile(_1b2da1bcd_binaryEval* _self_, jule::Str* _388534_lk, jule::Str* _388544_rk);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da5a4a_shift(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da5cd1_evalFloat(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da6067_evalInt(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da62ed_evalPrim(_1b2da1bcd_binaryEval* _self_);
inline jule::Bool _1b2da6584_checkSpecialCases(_1b2da1bcd_binaryEval* _self_);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da681a_evalOp(_1b2da1bcd_binaryEval* _self_);
inline void _1b2da6ac3_evalConst(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _417530_d);
inline void _1b2da6d7b_checkData(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _425330_d);
inline void _1b2da7079_checkDatas(_1b2da1bcd_binaryEval* _self_);
inline void _1b2da7332_setModel(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _426529_d);
inline void _1b2da75da_postEval(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _429429_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da79d6_solveExplicit(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _429934_l, jule::Ptr<_1b2d7dc21_Data>* _429949_r);
inline jule::Ptr<_1b2d7dc21_Data> _1b2da7d27_eval(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2ae5cda_BinaryExpr>* _431925_op);
inline jule::Str _1b2db1a23_Str(_1b2db1627_TypeKind* _self_);
inline jule::Bool _1b2db1d64_Equal(jule::Ptr<_1b2db1627_TypeKind> _self_, jule::Ptr<_1b2db1627_TypeKind> _7218_other);
inline jule::Bool _1b2db24c4_Binded(_1b2db1627_TypeKind* _self_);
inline jule::Bool _1b2db275a_IsNil(_1b2db1627_TypeKind* _self_);
inline jule::Bool _1b2db29e1_Void(_1b2db1627_TypeKind* _self_);
inline jule::Bool _1b2db2c77_Comparable(_1b2db1627_TypeKind* _self_);
inline jule::Bool _1b2db300d_Mutable(_1b2db1627_TypeKind* _self_);
inline jule::Bool _1b2db3294_Ordered(_1b2db1627_TypeKind* _self_);
inline jule::Bool _1b2db352a_NilCompatible(_1b2db1627_TypeKind* _self_);
inline jule::Bool _1b2db37b1_GC(_1b2db1627_TypeKind* _self_);
inline jule::Bool _1b2db3a47_Variadicable(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2db9740_Prim> _1b2db3ccd_Prim(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2dbd26b_Sptr> _1b2db4064_Sptr(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2dc1a33_Ptr> _1b2db42ea_Ptr(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2be887c_Enum> _1b2db4581_Enum(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2bea087_TypeEnum> _1b2db4817_TypeEnum(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2dc1060_Arr> _1b2db4a9d_Arr(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2dbdc3e_Slc> _1b2db4d34_Slc(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2bdda70_FnIns> _1b2db50ba_Fn(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2b119c6_StructIns> _1b2db5351_Struct(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2be61c6_Trait> _1b2db55d7_Trait(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2dc03d3_Map> _1b2db586d_Map(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2dbe833_Tuple> _1b2db5b04_Tup(_1b2db1627_TypeKind* _self_);
inline jule::Bool _1b2db5d8a_comptime(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c78ea1_comptimeStructFields> _1b2db6121_comptimeStructFields(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c7770d_comptimeStructField> _1b2db63a7_comptimeStructField(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c7ee63_comptimeEnumFields> _1b2db663d_comptimeEnumFields(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c7db54_comptimeEnumField> _1b2db68c4_comptimeEnumField(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c837c4_comptimeParams> _1b2db6b5a_comptimeParams(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c8196a_comptimeParam> _1b2db6de1_comptimeParam(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c76ba2_comptimeRange> _1b2db7177_comptimeRange(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c85133_comptimeTypeInfos> _1b2db740d_comptimeTypeInfos(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _1b2db7694_comptimeTypeInfo(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c7c1d5_comptimeStatics> _1b2db792a_comptimeStatics(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c7a931_comptimeStatic> _1b2db7bb1_comptimeStatic(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c8cba7_comptimeValue> _1b2db7e47_comptimeValue(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c96298_comptimeDecl> _1b2db81cd_comptimeDecl(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c93eaa_comptimeDecls> _1b2db8464_comptimeDecls(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c92382_comptimeFile> _1b2db86ea_comptimeFile(_1b2db1627_TypeKind* _self_);
inline jule::Ptr<_1b2c90913_comptimeFiles> _1b2db8981_comptimeFiles(_1b2db1627_TypeKind* _self_);
inline jule::Bool _1b2db91e0_checked(_1b2db8d38_TypeSymbol* _self_);
inline jule::Str _1b2db9ab4_Str(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2db9e05_Equal(jule::Ptr<_1b2db9740_Prim> _self_, jule::Ptr<_1b2db1627_TypeKind> _51418_other);
inline jule::Bool _1b2dba39a_IsConstraint(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dba631_IsI8(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dba8b7_IsI16(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbab4d_IsI32(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbadd4_IsI64(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbb16a_IsU8(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbb401_IsU16(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbb687_IsU32(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbb91d_IsU64(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbbba4_IsF32(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbbe3a_IsF64(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbc1c1_IsInt(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbc457_IsUint(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbc6dd_IsUintptr(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbc974_IsBool(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbcc0a_IsStr(_1b2db9740_Prim* _self_);
inline jule::Bool _1b2dbce91_IsAny(_1b2db9740_Prim* _self_);
inline jule::Str _1b2dbd623_Str(_1b2dbd26b_Sptr* _self_);
inline jule::Bool _1b2dbd964_Equal(jule::Ptr<_1b2dbd26b_Sptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _59118_other);
inline jule::Str _1b2dbe206_Str(_1b2dbdc3e_Slc* _self_);
inline jule::Bool _1b2dbe547_Equal(jule::Ptr<_1b2dbdc3e_Slc> _self_, jule::Ptr<_1b2db1627_TypeKind> _61018_other);
inline jule::Str _1b2dbebda_Str(_1b2dbe833_Tuple* _self_);
inline jule::Bool _1b2dc002b_Equal(jule::Ptr<_1b2dbe833_Tuple> _self_, jule::Ptr<_1b2db1627_TypeKind> _63918_other);
inline jule::Str _1b2dc078a_Str(_1b2dc03d3_Map* _self_);
inline jule::Bool _1b2dc0acb_Equal(jule::Ptr<_1b2dc03d3_Map> _self_, jule::Ptr<_1b2db1627_TypeKind> _67618_other);
inline jule::Str _1b2dc1417_Str(_1b2dc1060_Arr* _self_);
inline jule::Bool _1b2dc1758_Equal(jule::Ptr<_1b2dc1060_Arr> _self_, jule::Ptr<_1b2db1627_TypeKind> _70418_other);
inline jule::Str _1b2dc1dda_Str(_1b2dc1a33_Ptr* _self_);
inline jule::Bool _1b2dc222b_Equal(jule::Ptr<_1b2dc1a33_Ptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _72818_other);
inline jule::Bool _1b2dc25a0_IsUnsafe(_1b2dc1a33_Ptr* _self_);
inline void _1b2dc42a5_pushErr(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ac7eba_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args);
inline void _1b2dc44a3_allowBuiltin(_1b2dc3a24_typeChecker* _self_);
inline void _1b2dc46a1_disallowBuiltin(_1b2dc3a24_typeChecker* _self_);
inline void _1b750e0d3_pushReference(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2b119c6_StructIns>* _83237_t);
inline void _1b7511aa8_pushReference(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2be61c6_Trait>* _83237_t);
inline void _1b2dc4c12_pushReferenceByKind(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2db1627_TypeKind>* _84240_k);
inline void _1b2dc5130_pushCycleError(_1b2dc3a24_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _20d8ca601_Builder* _85353_message);
inline jule::Bool _1b2dc552b_checkCrossCycle(_1b2dc3a24_typeChecker* _self_, jule::Any _87527_decl, _20d8ca601_Builder* _87543_message);
inline jule::Bool _1b2dc5927_checkIllegalCycles(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl);
inline jule::Trait _1b2dc5d23_fromTypeAlias(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _95930_decl, jule::Ptr<_1b2db0835_TypeAlias>* _95962_ta);
inline jule::Ptr<_1b2be887c_Enum> _1b2dc621e_fromEnum(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _103625_decl, jule::Ptr<_1b2be887c_Enum>* _103657_e);
inline jule::Ptr<_1b2bea087_TypeEnum> _1b2dc661a_fromTypeEnum(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _104829_decl, jule::Ptr<_1b2bea087_TypeEnum>* _104861_e);
inline jule::Ptr<_1b2be61c6_Trait> _1b2dc6a16_fromTrait(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _106026_decl, jule::Ptr<_1b2be61c6_Trait>* _106058_t);
inline jule::Bool _1b2dc6e12_checkStructIns(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2b119c6_StructIns>* _107335_ins, jule::Ptr<_1b2ac7eba_Token>* _107357_errorToken);
inline void _1b2dc71ba_appendUsedStructReference(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2b0db6b_Struct>* _109446_s);
inline jule::Ptr<_1b2b119c6_StructIns> _1b2dc75b6_buildStructInstance(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _110740_decl, jule::Ptr<_1b2b0db6b_Struct>* _110772_s);
inline jule::Ptr<_1b2b119c6_StructIns> _1b2dc79b2_fromStructIns(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2b119c6_StructIns>* _115534_ins, jule::Ptr<_1b2ac7eba_Token> _115555_token);
inline jule::Ptr<_1b2b119c6_StructIns> _1b2dc7dad_fromStruct(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _117331_decl, jule::Ptr<_1b2b0db6b_Struct>* _117363_s);
inline jule::Trait _1b2dc81ee_getDef(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _121727_decl);
inline jule::Trait _1b2dc8540_buildIdent(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl> _127830_decl);
inline jule::Trait _1b2dc8881_buildSubIdent(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2addcb1_SubIdentTypeDecl> _128233_decl);
inline jule::Ptr<_1b2dbd26b_Sptr> _1b2dc8bc2_buildSptrFromType(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2db1627_TypeKind>* _131638_elem);
inline jule::Ptr<_1b2dbd26b_Sptr> _1b2dc9013_buildSptr(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ade487_SptrTypeDecl> _133629_decl);
inline jule::Ptr<_1b2dc1a33_Ptr> _1b2dc9354_buildPtrFromType(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2db1627_TypeKind>* _134537_elem);
inline jule::Ptr<_1b2dc1a33_Ptr> _1b2dc9695_buildPtr(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2adee16_PtrTypeDecl> _136028_decl);
inline jule::Ptr<_1b2dbdc3e_Slc> _1b2dc99d6_buildSlc(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ade81c_SlcTypeDecl> _137728_decl);
inline jule::Ptr<_1b2dc1060_Arr> _1b2dc9d27_buildArr(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ae06a8_ArrTypeDecl> _139828_decl);
inline jule::Ptr<_1b2dc03d3_Map> _1b2dca168_buildMap(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ae0e06_MapTypeDecl> _144728_decl);
inline jule::Ptr<_1b2dbe833_Tuple> _1b2dca4a9_buildTuple(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2adeb19_TupleTypeDecl> _147930_decl);
inline jule::Bool _1b2dca7ea_checkFuncTypes(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2bdda70_FnIns>* _149235_f);
inline jule::Ptr<_1b2bdda70_FnIns> _1b2dcab3b_buildFunc(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2b0009c_FnDecl> _151029_decl);
inline jule::Trait _1b2dcae7c_buildNamespace(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ade18a_NamespaceTypeDecl> _154034_ns);
inline jule::Ptr<_1b2db1627_TypeKind> _1b2dcb2bd_build(_1b2dc3a24_typeChecker* _self_, jule::Any* _155926_declKind);
inline jule::Ptr<_1b2db1627_TypeKind> _1b2dcb60e_checkDecl(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _164730_decl);
inline jule::Bool static__1b2dcc05a_prim(jule::Str* _167418_ident, jule::Ptr<_1b2db9740_Prim> _167430_t);
inline jule::Bool static__1b2dcc3ce_exist(jule::Str* _167819_ident, jule::Ptr<_1b2db1627_TypeKind>* _167836_k);
inline void _1b382e935_stop(_1b382e281_scopeParser* _self_);
inline jule::Bool _1b382ebbb_stopped(_1b382e281_scopeParser* _self_);
inline jule::Bool _1b382ee52_finished(_1b382e281_scopeParser* _self_);
inline jule::Bool _1b38301d8_isLastSt(_1b382e281_scopeParser* _self_);
inline void _1b383054b_pushErr(_1b382e281_scopeParser* _self_, jule::Ptr<_1b2ac7eba_Token> _15323_token, jule::Str _15345_fmt);
inline void _1b38308ae_pushSuggestion(_1b382e281_scopeParser* _self_, jule::Str _15830_fmt, jule::Slice<jule::Any> _15850_args);
inline void _1b3830b67_insertAsNext(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _16233_tokens);
inline jule::Ptr<_1b382d8e0_stmt> _1b3830ded_next(_1b382e281_scopeParser* _self_);
inline jule::Ptr<_1b2aed40d_ScopeTree> _1b38312e9_buildScope(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _17231_tokens, jule::Ptr<_1b2ac7eba_Token> _17260_end);
inline jule::Ptr<_1b2b01257_VarDecl> _1b383163a_buildVarSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _18331_tokens);
inline jule::Ptr<_1b2b01631_RetSt> _1b383197b_buildRetSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _19130_tokens);
inline jule::Ptr<_1b2b01da1_Iter> _1b3831cbc_buildWhileNextIter(_1b382e281_scopeParser* _self_, jule::Ptr<_1b382d8e0_stmt>* _20239_s);
inline jule::Ptr<_1b2b026cb_WhileKind> _1b383210d_buildWhileIterKind(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _24739_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1b383244e_getRangeKindKeysTokens(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _25343_toks);
inline jule::Ptr<_1b2b01257_VarDecl> _1b3832790_buildRangeKindKey(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _25938_tokens);
inline jule::Slice<jule::Ptr<_1b2b01257_VarDecl>> _1b3832ad1_buildRangeKindKeys(_1b382e281_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>>* _28539_parts);
inline void _1b3832e44_setupRangeKindKeysPlain(_1b382e281_scopeParser* _self_, jule::Ptr<_1b2b030d3_RangeKind>* _29344_rng, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _29371_tokens);
inline void _1b38332a7_setupRangeKindKeysExplicit(_1b382e281_scopeParser* _self_, jule::Ptr<_1b2b030d3_RangeKind>* _30847_rng, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _30874_tokens);
inline void _1b383361a_setupRangeKindKeys(_1b382e281_scopeParser* _self_, jule::Ptr<_1b2b030d3_RangeKind>* _31739_rng, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _31766_tokens);
inline jule::Ptr<_1b2b030d3_RangeKind> _1b3833ac1_buildRangeIterKind(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _32539_varTokens, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _3268_exprTokens, jule::Ptr<_1b2ac7eba_Token>* _32642_inToken);
inline jule::Any _1b3833ebc_buildCommonIterKind(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _34140_tokens, jule::Ptr<_1b2ac7eba_Token>* _34166_errTok);
inline jule::Ptr<_1b2b01da1_Iter> _1b383430d_buildCommonIter(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _36835_tokens);
inline jule::Ptr<_1b2b01da1_Iter> _1b383464e_buildIterSt(_1b382e281_scopeParser* _self_, jule::Ptr<_1b382d8e0_stmt>* _39832_st);
inline jule::Ptr<_1b2b034ac_BreakSt> _1b3834990_buildBreakSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _40533_tokens);
inline jule::Ptr<_1b2b03886_ContSt> _1b3834cd1_buildContSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _42332_tokens);
inline jule::Ptr<_1b2b03d3c_If> _1b3835122_buildIf(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _44128_tokens);
inline jule::Ptr<_1b2b04216_Else> _1b3835463_buildElse(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _47430_tokens);
inline jule::Ptr<_1b2b046bc_Conditional> _1b38357a4_buildIfElseChain(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _49836_tokens);
inline jule::Ptr<_1b2ae2721_Expr> _1b3835ae5_buildCoCallSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _52133_tokens);
inline jule::Ptr<_1b2aead9a_GotoSt> _1b3835e36_buildGotoSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _53732_tokens);
inline jule::Ptr<_1b2aeb197_FallSt> _1b3836277_buildFallSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _55732_tokens);
inline jule::Ptr<_1b2b04e09_TypeAliasDecl> _1b38365b8_buildTypeAliasSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _56737_tokens);
inline void _1b3836a91_pushCaseExpr(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _57332_tokens, jule::Ptr<_1b2ac7eba_Token> _57361_token, jule::Bool _5743_typeMatch, jule::Slice<jule::Ptr<_1b2ae2721_Expr>>* _57425_exprs);
inline __jule_tuple_sx_1b2ae2721_Expr__jule_tuple_bool _1b3837047_buildCaseExprs(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _59635_tokens, jule::Ptr<_1b2ac7eba_Token>* _59665_colon, jule::Bool _59687_typeMatch);
inline jule::Ptr<_1b2aed40d_ScopeTree> _1b3837388_buildCaseScope(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _63835_tokens);
inline __jule_tuple_x_1b2b053b0_Case__jule_tuple_bool _1b3837784_buildCase(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _66530_tokens, jule::Bool _66555_typeMatch);
inline __jule_tuple_sx_1b2b053b0_Case__jule_tuple_x_1b2b04216_Else _1b3837b80_buildCases(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _68430_tokens, jule::Bool _68455_typeMatch);
inline jule::Ptr<_1b2b05bc9_MatchCase> _1b3837ec1_buildMatchCase(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _71834_tokens);
inline jule::Ptr<_1b2aed40d_ScopeTree> _1b3838312_buildScopeSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _75132_tokens);
inline jule::Ptr<_1b2aea9c1_LabelSt> _1b3838653_buildLabelSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _79433_tokens);
inline __jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool _1b3838994_buildIdSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _80930_tokens);
inline jule::Ptr<_1b384929b_assignInfo> _1b3838cd5_buildAssignInfo(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _82336_tokens);
inline jule::Ptr<_1b2aeb807_AssignLeft> _1b3839126_buildAssignL(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _86833_tokens);
inline jule::Slice<jule::Ptr<_1b2aeb807_AssignLeft>> _1b3839467_buildAssignLs(_1b382e281_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>>* _87934_parts);
inline __jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool _1b38397a8_buildPlainAssign(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _88837_tokens);
inline jule::Bool _1b3839ba4_buildDeclAssign1(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _94237_lefts, jule::Ptr<_1b2aebd8a_AssignSt>* _94266_assign);
inline __jule_tuple_x_1b2aebd8a_AssignSt__jule_tuple_bool _1b3839ee5_buildDeclAssign(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _99035_tokens);
inline __jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool _1b383a336_buildAssignSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _102434_tokens);
inline jule::Ptr<_1b2ae30e5_UseExpr> _1b383a677_buildUseExpr(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _103733_tokens);
inline jule::Any _1b383a9b8_buildConstSt(_1b382e281_scopeParser* _self_, jule::Ptr<_1b382d8e0_stmt>* _105033_st);
inline jule::Any _1b383ad09_buildSt(_1b382e281_scopeParser* _self_, jule::Ptr<_1b382d8e0_stmt>* _107528_st);
inline void _1b383b16c_build(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _113926_tokens, jule::Ptr<_1b2aed40d_ScopeTree>* _113956_s);
inline void _1b383c3b0_pushErr(_1b383bbb7_exprBuilder* _self_, jule::Ptr<_1b2ac7eba_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args);
inline void _1b383c723_pushSuggestion(_1b383bbb7_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args);
inline jule::Ptr<_1b2ae3315_TupleExpr> _1b383ca64_buildTuple(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>>* _2331_parts);
inline jule::Ptr<_1b2ae36ab_LitExpr> _1b383cda5_buildLit(_1b383bbb7_exprBuilder* _self_, jule::Ptr<_1b2ac7eba_Token> _3324_token);
inline jule::Any _1b383d537_buildSingle(_1b383bbb7_exprBuilder* _self_, jule::Ptr<_1b2ac7eba_Token> _4431_token);
inline jule::Ptr<_1b2ae403b_IdentExpr> _1b383d878_buildBindIdent(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _6135_tokens);
inline jule::Ptr<_1b2ae47cd_UnaryExpr> _1b383dbb9_buildUnary(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _8030_tokens);
inline jule::Ptr<_1b2ae5834_SubIdentExpr> _1b383e00a_buildObjSubIdent(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _10136_tokens);
inline jule::Ptr<_1b2ae545a_NamespaceExpr> _1b383e34b_buildNamespace(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _11635_tokens);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b383e68c_buildType(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _15030_tokens);
inline jule::Any _1b383e9cd_buildSubIdent(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _16434_tokens);
inline jule::Ptr<_1b2ae4ba7_VariadicExpr> _1b383ed1e_buildVariadic(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _18633_tokens);
inline jule::Ptr<_1b2ae29da_RangeExpr> _1b3840160_buildBetweenParentheses(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _19543_tokens);
inline jule::Ptr<_1b2ae5081_CastExpr> _1b38404a1_tryBuildCast(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _20733_tokens);
inline void _1b38408be_pushArg(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ae2721_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _28152_tokens, jule::Ptr<_1b2ac7eba_Token> _28177_errToken);
inline jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _1b3840c10_buildArgs(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _29029_tokens);
inline jule::Ptr<_1b2ae644a_FnCallExpr> _1b3841507_buildFnCall(_1b383bbb7_exprBuilder* _self_, jule::Ptr<_1b2ac7eba_Token>* _35632_token, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _35687_args);
inline jule::Any _1b3841848_buildParenthesesRange(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _36442_tokens);
inline jule::Ptr<_1b2ae3a85_UnsafeExpr> _1b3841b89_buildUnsafeExpr(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _38635_tokens);
inline jule::Ptr<_1b2b0009c_FnDecl> _1b3841eca_buildAnonFn(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _40132_tokens);
inline jule::Any _1b384231b_buildUnsafe(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _41032_tokens);
inline void _1b3842739_pushRangeLitPart(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _42036_part, jule::Ptr<_1b2ac7eba_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>>* _42135_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1b3842a7a_getBraceRangeLitExprParts(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _43145_tokens);
inline jule::Ptr<_1b2ae6e40_FieldExprPair> _1b3842dbb_buildFieldExprPair(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _47338_tokens);
inline jule::Ptr<_1b2ae2721_Expr> _1b384320c_buildStructLitExpr(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _48639_tokens);
inline jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _1b384354d_buildStructLitExprs(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _50140_tokens);
inline jule::Ptr<_1b2ae776a_StructLit> _1b384388e_buildTypedStructLiteral(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _51443_tokens);
inline jule::Ptr<_1b2ae2721_Expr> _1b3843bd0_buildBraceLitPart(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _53838_tokens);
inline jule::Ptr<_1b2ae7c21_BraceLit> _1b3844021_buildBraceLit(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _55534_tokens);
inline jule::Any _1b3844362_buildBraceRange(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _57436_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1b38446a3_getEnumerableParts(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _62638_tokens);
inline jule::Ptr<_1b2ae8c77_SliceExpr> _1b38449e4_buildSlice(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _63330_tokens);
inline jule::Ptr<_1b2ae96d4_IndexingExpr> _1b3844e9a_buildIndexing(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _6567_tokens, jule::Ptr<_1b2ac7eba_Token> _65636_errorToken);
inline jule::Ptr<_1b2ae9d44_SlicingExpr> _1b38455b6_buildSlicing(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _67967_start, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _6808_to, jule::Ptr<_1b2ac7eba_Token>* _68034_errorToken, jule::Ptr<_1b2ac7eba_Token> _68065_end);
inline jule::Any _1b3845907_buildBracketRange(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _69537_tokens);
inline jule::Any _1b3845c48_buildExclRight(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _72035_tokens);
inline jule::Any _1b3846089_buildData(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _73830_tokens);
inline jule::Any _1b3846485_buildBinary(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _80732_tokens, jule::I64 _80757_i);
inline jule::Any _1b38467c6_build(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _83226_tokens);
inline jule::Any _1b3846b17_buildKind(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _84330_tokens);
inline jule::Ptr<_1b2ae2721_Expr> _1b3846e58_buildFromTokens(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _85435_tokens);
inline void _1b384c7aa_stop(_1b384c47a_parser* _self_);
inline jule::Bool _1b384ca41_stopped(_1b384c47a_parser* _self_);
inline void _1b384ce5e_pushErr(_1b384c47a_parser* _self_, jule::Ptr<_1b2ac7eba_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args);
inline void _1b384d2c2_pushSuggestion(_1b384c47a_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args);
inline jule::Ptr<_1b2ae2721_Expr> _1b384d613_buildExpr(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _17831_tokens);
inline jule::Ptr<_1b2adc809_Directive> _1b384d954_buildDirective(_1b384c47a_parser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _18234_tokens);
inline void _1b384dc0c_pushDirective(_1b384c47a_parser* _self_, jule::Ptr<_1b2adc809_Directive> _19733_d);
inline jule::Ptr<_1b2aed40d_ScopeTree> _1b384e108_buildScope(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _21032_tokens, jule::Ptr<_1b2ac7eba_Token> _21061_end);
inline __jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool _1b384e5ae__buildType(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _22039_tokens, jule::I64* _2217_i, jule::Bool _22116_err);
inline __jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool _1b384ea65_buildType(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _23238_tokens, jule::I64* _2337_i, jule::Bool _23316_err);
inline jule::Ptr<_1b2b04e09_TypeAliasDecl> _1b384eda6_buildTypeAliasDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _24240_tokens);
inline void _1b3850219_buildVarTypeAndExpr(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2b01257_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _28264_tokens);
inline void _1b385057c_buildVarCommon(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2b01257_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _31558_tokens);
inline void _1b38508e0_buildVarBegin(_1b384c47a_parser* _self_, jule::Ptr<_1b2b01257_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _33157_tokens);
inline jule::Ptr<_1b2b01257_VarDecl> _1b3850c31_buildVar(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _35929_tokens);
inline jule::Ptr<_1b2aea5e7_GenericDecl> _1b3851072_buildGeneric(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _37834_tokens);
inline jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> _1b385146d_buildGenerics(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _41535_tokens, jule::Ptr<_1b2ac7eba_Token>* _41561_errorToken);
inline jule::Ptr<_1b2aedb4a_ParamDecl> _1b38517ae_buildSelfParam(_1b384c47a_parser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _43534_tokens);
inline void _1b3851bcc_paramTypeBegin(_1b384c47a_parser* _self_, jule::Ptr<_1b2aedb4a_ParamDecl>* _47535_param, jule::I64* _47564_i, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _47573_tokens);
inline void _1b3852040_buildParamType(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2aedb4a_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _49065_tokens);
inline void _1b38523a3_buildParamBody(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2aedb4a_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _50364_tokens);
inline jule::Ptr<_1b2aedb4a_ParamDecl> _1b38526e4_buildParam(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _52331_tokens);
inline void _1b385299c_checkParams(_1b384c47a_parser* _self_, jule::Slice<jule::Ptr<_1b2aedb4a_ParamDecl>>* _56632_params);
inline jule::Slice<jule::Ptr<_1b2aedb4a_ParamDecl>> _1b3852d98_buildParams(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _58633_tokens, jule::Bool _58658_method);
inline __jule_tuple_x_1b2ae12d0_RetTypeDecl__jule_tuple_bool _1b3853294_buildMultiRetType(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _61639_tokens, jule::I64* _61669_i);
inline __jule_tuple_x_1b2ae12d0_RetTypeDecl__jule_tuple_bool _1b3853690_buildRetType(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _68734_tokens, jule::I64* _68764_i);
inline jule::Ptr<_1b2b0009c_FnDecl> _1b3853b46_buildFnPrototype(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _72638_tokens, jule::I64* _72668_i, jule::Bool _72676_method);
inline jule::Ptr<_1b2b0009c_FnDecl> _1b38540ec_buildFn(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype);
inline void _1b3854460_buildBindUseDecl(_1b384c47a_parser* _self_, jule::Ptr<_1b2b0625c_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _83763_tokens);
inline void _1b38547c3_parseUseDecl(_1b384c47a_parser* _self_, jule::Ptr<_1b2b0625c_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _85058_tokens);
inline jule::Ptr<_1b2b0625c_UseDecl> _1b3854bbe_buildUseDecl(_1b384c47a_parser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _87932_tokens, jule::Bool _87957_binded);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b38550ba_buildTypeEnumItemKind(jule::Ptr<_1b384c47a_parser> _self_, jule::I64* _89343_i, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _89356_tokens);
inline jule::Slice<jule::Ptr<_1b2b07aee_TypeEnumItemDecl>> _1b385540b_buildTypeEnumItems(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _93040_tokens);
inline jule::Ptr<_1b2b0825e_TypeEnumDecl> _1b385574c_buildTypeEnumDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _95439_tokens);
inline jule::Ptr<_1b2ae2721_Expr> _1b3855b48_buildEnumItemExpr(jule::Ptr<_1b384c47a_parser> _self_, jule::I64* _98139_i, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _98152_tokens);
inline jule::Slice<jule::Ptr<_1b2b06713_EnumItemDecl>> _1b3855e89_buildEnumItems(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _101336_tokens);
inline jule::Ptr<_1b2b072c4_EnumDecl> _1b38562ca_buildEnumDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _105035_tokens);
inline jule::Any _1b385661b_buildNodeEnumDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _109539_tokens);
inline jule::Ptr<_1b2b08528_FieldDecl> _1b385695c_buildField(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _110431_tokens);
inline jule::Slice<jule::Ptr<_1b2b08528_FieldDecl>> _1b3856c9d_buildStructDeclFields(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _115342_tokens);
inline jule::Ptr<_1b2b08e1e_StructDecl> _1b38570de_buildStructDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _116437_tokens);
inline void _1b3857397_checkMethodReceiver(_1b384c47a_parser* _self_, jule::Ptr<_1b2b0009c_FnDecl>* _121236_f);
inline void _1b385770a_buildTraitBody(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2b0965b_TraitDecl>* _123136_t, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _123160_tokens);
inline jule::Ptr<_1b2b0965b_TraitDecl> _1b3857a4b_buildTraitDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _126336_tokens);
inline jule::Ptr<_1b2b0009c_FnDecl> _1b3857d8c_buildBindFn(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _129332_tokens);
inline jule::Ptr<_1b2b01257_VarDecl> _1b38581cd_buildBindVar(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _130333_tokens);
inline jule::Ptr<_1b2b08e1e_StructDecl> _1b385851e_buildBindStruct(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _131636_tokens);
inline jule::Ptr<_1b2b04e09_TypeAliasDecl> _1b3858860_buildBindTypeAlias(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _133039_tokens);
inline jule::Ptr<_1b2b0625c_UseDecl> _1b3858ba1_buildBindUse(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _134033_tokens);
inline jule::Any _1b3858ee2_buildBind(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _135131_tokens);
inline jule::Ptr<_1b2b0009c_FnDecl> _1b3859333_getMethod(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _137531_tokens);
inline void _1b3859696_parseImplBody(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2b09cbb_Impl>* _140435_ipl, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _140457_tokens);
inline jule::Ptr<_1b2b09cbb_Impl> _1b38599d7_buildImpl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _143730_tokens);
inline jule::Any _1b3859d28_buildNodeData(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _150835_tokens);
inline void _1b385a0d1_applyFnMeta(_1b384c47a_parser* _self_, jule::Ptr<_1b2b0009c_FnDecl>* _154132_f);
inline void _1b385a389_applyMeta(_1b384c47a_parser* _self_, _1b2adc3db_Node* _154630_node);
inline void _1b385a642_pushUseDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2b0625c_UseDecl>* _157133_decl);
inline jule::Bool _1b385a983_pushMetaNodes(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _157935_tokens);
inline _1b2adc3db_Node _1b385acc4_parseNode(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _159931_st);
inline void _1b385b07c_appendNode(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _162332_st);
inline void _1b385b555_removeRange(_1b384c47a_parser* _self_, jule::I64 _163327_i, jule::U64 _163335_id, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _163351_tokens, jule::Slice<jule::I64>* _163381_ranges);
inline void _1b385b973_pushWrongOrderCloseErr(_1b384c47a_parser* _self_, jule::Ptr<_1b2ac7eba_Token>* _164539_t, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _164558_tokens, jule::Slice<jule::I64>* _164584_ranges);
inline void _1b385be4b_pushRangeClose(_1b384c47a_parser* _self_, jule::Ptr<_1b2ac7eba_Token> _165630_t, jule::U64 _165648_left, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _165666_tokens, jule::Slice<jule::I64>* _165696_ranges);
inline void _1b385c204_checkRanges(_1b384c47a_parser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _167428_tokens);
inline void _1b385c4ac_parse(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2acd872_Fileset>* _170527_f);
inline void _1b385dc0b_pushErr(_1b385d634_typeBuilder* _self_, jule::Ptr<_1b2ac7eba_Token> _3123_token, jule::Str _3145_fmt);
inline void _1b385e06e_pushSuggestion(_1b385d634_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b385e305_buildNamespace(_1b385d634_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> _1b385e58b_buildGenerics(_1b385d634_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1b385e822_identGenerics(_1b385d634_typeBuilder* _self_);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b385eaa8_buildIdent(_1b385d634_typeBuilder* _self_);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b385ed3e_buildCppLink(_1b385d634_typeBuilder* _self_);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b38600c5_buildFn(_1b385d634_typeBuilder* _self_);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b386035b_buildPtr(_1b385d634_typeBuilder* _self_);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b38605e2_buildSptr(_1b385d634_typeBuilder* _self_);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b3860878_buildSlc(_1b385d634_typeBuilder* _self_);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b3860b0e_buildArr(_1b385d634_typeBuilder* _self_);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b3860d95_buildMap(_1b385d634_typeBuilder* _self_);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b386112b_buildEnumerable(_1b385d634_typeBuilder* _self_);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b38613b2_step(_1b385d634_typeBuilder* _self_);
inline __jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool _1b3861648_build(_1b385d634_typeBuilder* _self_);
inline void _1b3052323_pushErr(_1b3051ca1_directiveEval* _self_, jule::Ptr<_1b2ac7eba_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1b305271e_splitOperans(_1b3051ca1_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _3348_tokens);
inline jule::Bool _1b3052a60_evalDirectiveIdent(_1b3051ca1_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1b3052da1_evalDirectivePart(_1b3051ca1_directiveEval* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _7837_part);
inline jule::Bool _1b3053137_eval(_1b3051ca1_directiveEval* _self_);
inline jule::Ptr<_1b3862627_Importer> static__1b3862a56_New(_1b30508c6_CompileInfo _4516_info);
inline jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>> _1b3862cdc_AllPackages(_1b3862627_Importer* _self_);
inline void _1b386322c_SetModPath(_1b3862627_Importer* _self_, jule::Str _6226_path);
inline jule::Str _1b38634b3_GetModPath(_1b3862627_Importer* _self_);
inline jule::Str _1b3863804_ModById(_1b3862627_Importer* _self_, jule::I64 _7019_id);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b3863b45_GetImport(_1b3862627_Importer* _self_, jule::Str _7425_path);
inline __jule_tuple_sx_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log _1b3864041_ImportPackage(_1b3862627_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod);
inline void _1b38642e9_Imported(_1b3862627_Importer* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo> _14128_imp);
inline __jule_tuple_bool__jule_tuple_s_20daa5e91_Log _1b3864728_isPassBuildDirectives(_1b3862627_Importer* _self_, jule::Ptr<_1b2adb52d_AST>* _16842_file);
inline jule::Ptr<_1b3868e8b_ExprInspector> static__1b38692aa_New(void);
inline void _1b3869563_args(_1b3868e8b_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args);
inline void _1b386981b_inspect(_1b3868e8b_ExprInspector* _self_, jule::Any* _2828_m);
inline void _1b3869b7e_Inspect(_1b3868e8b_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f);
inline jule::Bool _1b482a26a_isAllMethodsLive(_1b4826dc1_specialCaseDefines* _self_, jule::Ptr<_1b2b0db6b_Struct> _1928_s);
inline jule::Ptr<_1b482acc6_ObjectDeadCode> static__1b482b348_new(jule::Ptr<_1b3865075_IR>* _3921_ir);
inline jule::Bool _1b7be3157_isLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2b119c6_StructIns>* _4527_t);
inline jule::Bool _1b7bea04e_isLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2bdda70_FnIns>* _4527_t);
inline jule::Bool _1b7c21b7a_isLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2be61c6_Trait>* _4527_t);
inline jule::Bool _1b7c2bda5_isLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2d26ca7_Var>* _4527_t);
inline void _1b7be3ad6_pushLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2b119c6_StructIns> _6532_t);
inline void _1b7bed739_pushLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2bdda70_FnIns> _6532_t);
inline void _1b7c22609_pushLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2be61c6_Trait> _6532_t);
inline void _1b7c3031a_pushLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2d26ca7_Var> _6532_t);
inline void _1b482bbb7_pushStructAsLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2b119c6_StructIns>* _7838_s);
inline void _1b482be70_setReferencesAsLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2cc3094_ReferenceStack>* _14141_rs);
inline void _1b482c228_inits(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2cd7691_Package>* _19127_pkg);
inline void _1b482c4d1_collectLivePackage(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2cd7691_Package>* _20540_pkg);
inline void _1b482c6ce_collectLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_);
inline void _1b482c987_removeDeadGlobals(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2d26ca7_Var>>* _28139_vars);
inline void _1b482cc40_removeDeadFns(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>* _29335_funcs);
inline void _1b482cee8_removeDeadStructs(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>* _31439_structs);
inline void _1b482d2a1_removeDeadTraits(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2be61c6_Trait>>* _33638_traits);
inline void _1b482d559_removeDeadsFile(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2be1cb5_SymTab>* _35737_file);
inline void _1b482d812_removeDeadsPackage(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2cd7691_Package>* _36440_pkg);
inline void _1b482da10_removeDeads(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_);
inline void _1b482dc0d_collectSpecialCaseDefines(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_);
inline void _1b482de0b_elimanate(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_);
inline void _1b483035d_optimizeChild(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca4592_Scope>* _1935_s);
inline void _1b4830616_optimizeBodyChildExceptional(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca4592_Scope>* _2950_s);
inline void _1b48308be_optimizeBodyChild(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca4592_Scope>* _3939_s);
inline void _1b4830b77_optimizeExprModel(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Any* _4839_model);
inline void _1b4830d75_eliminateFollowed(_1b482ed41_scopeDeadCode* _self_);
inline void _1b483112d_pushGoto(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca774e_GotoSt> _6929_gt);
inline void _1b48313d6_pushLabel(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca70de_Label> _7930_l);
inline void _1b483168e_optimizeRangeIter(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca63c9_RangeIter> _9238_it);
inline void _1b4831947_optimizeWhileIter(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca597d_WhileIter> _9738_it);
inline void _1b4831c00_optimizeInfIter(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca54c7_InfIter> _10536_it);
inline void _1b4831ea8_optimizeConditional(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca51ca_Conditional> _10940_c);
inline void _1b4832261_optimizeMatch(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca8cc2_Match> _12734_m);
inline void _1b4832519_optimizeAssign(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca80ce_Assign> _14535_assign);
inline void _1b48327c2_optimizeMultiAssign(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca8585_MultiAssign> _15040_assign);
inline void _1b4832a7a_optimizeStmt(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Any _15933_st);
inline void _1b4832c78_optimizeStmts(jule::Ptr<_1b482ed41_scopeDeadCode> _self_);
inline _1b48343c8_exprDeadCode static__1b48347e6_new(jule::Ptr<_1b482ed41_scopeDeadCode>* _1421_s);
inline void _1b4834a9e_optimize(_1b48343c8_exprDeadCode* _self_, jule::Any* _2025_model);
inline void _1b46dd86a_pushVar(_1b46dd3c5_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe);
inline jule::Bool _1b46ddbab_removeVar(_1b46dd3c5_nils* _self_, jule::Uintptr _4625_var);
inline jule::Bool _1b46ddeec_isSafe(_1b46dd3c5_nils* _self_, jule::Uintptr _6022_var);
inline jule::Ptr<_1b46e1043_scopeOptimizer> static__1b46e1593_new(jule::Ptr<_1b2ca4592_Scope> _2320_scope);
inline void _1b46e184b_setCurrentStmt(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Any _3535_stmt);
inline void _1b46e1a49_removeCurrent(jule::Ptr<_1b46e1043_scopeOptimizer> _self_);
inline jule::Bool _1b46e1cd0_isLastStmt(jule::Ptr<_1b46e1043_scopeOptimizer> _self_);
inline jule::Bool _1b46e2066_isIter(jule::Ptr<_1b46e1043_scopeOptimizer> _self_);
inline void _1b46e231e_optimizeData(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2d7dc21_Data> _6733_d);
inline void _1b46e25c7_optimizeVar(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2d26ca7_Var> _9332_v);
inline void _1b46e2880_optimizeConditional(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca51ca_Conditional> _11440_c);
inline void _1b46e2c9d_buildDefaultConstantTrueCase(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca97ea_Case> _18849_case, jule::I64* _18873_i, jule::Ptr<_1b2ca8cc2_Match>* _18886_m);
inline void _1b46e3056_optimizeMatch(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca8cc2_Match> _21434_m);
inline void _1b46e330e_optimizeRangeIter(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca63c9_RangeIter> _29638_it);
inline void _1b46e35b7_optimizeWhileIter(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca597d_WhileIter> _34138_it);
inline jule::Bool _1b46e3908_substr(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca80ce_Assign> _34727_a);
inline jule::Bool _1b46e3c49_strAssign(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca80ce_Assign> _36730_a);
inline jule::Bool _1b46e408a_sliceAssign(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca80ce_Assign> _37832_a);
inline void _1b46e4343_optimizePostfix(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca7b28_Postfix> _38636_postfix);
inline void _1b46e45eb_optimizeAssign(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca80ce_Assign> _39335_assign);
inline jule::Bool _1b46e493c_tryOptimizeSwap(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca8585_MultiAssign>* _50737_assign);
inline void _1b46e4be5_optimizeMultiAssign(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca8585_MultiAssign> _54440_assign);
inline void _1b46e4e9d_optimizeRet(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2caa389_RetSt> _59032_r);
inline void _1b46e5256_optimizeStmt(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Any _61433_stmt);
inline void _1b46e550e_optimizeChild(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca4592_Scope> _64334_child);
inline void _1b46e570c_optimize(jule::Ptr<_1b46e1043_scopeOptimizer> _self_);
inline void static__1b46e7b93_optimize(jule::Any* _2126_model);
inline void static__1b46e7e7e_optimizeData(jule::Any* _2530_model, jule::Ptr<_1b4700915_data>* _2559_d);
inline jule::Bool _1b46e82c0_selfCmpCond(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _3728_m);
inline jule::Bool _1b46e8611_boolCond(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _6125_m);
inline jule::Bool _1b46e8952_strCond(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel> _11423_m);
inline jule::Bool _1b46e8e08_tryNeutralElement1(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _17135_m, jule::Ptr<_1b2b6c23a_Const> _17166_c, jule::Ptr<_1b2bcd125_OperandExprModel>* _17188_nc);
inline jule::Bool _1b46e9249_tryNeutralElement(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _21534_m);
inline void _1b46e9502_checkBinaryForBoundary(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _23039_m);
inline void _1b46e97aa_checkBinaryForNil(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _28234_m);
inline void _1b46e9a63_binary(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel> _31422_m);
inline void _1b46e9d1b_unary(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd9e9_UnaryExprModel> _41221_m);
inline void _1b46ea0c4_structureLit(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bce3bd_StructLitExprModel> _45528_m);
inline void _1b46ea37c_casting(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcec4d_CastingExprModel> _47123_m);
inline void _1b46ea6e0_args(_1b46e76dc_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>> _48520_params, jule::Slice<jule::Any>* _48552_args);
inline void _1b46ea998_scope(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2ca4592_Scope>* _50722_s);
inline void _1b46eac51_funcCall(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bd0600_FnCallExprModel> _51324_m);
inline void _1b46eb009_indexing(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bd0e80_IndexingExprModel> _52024_m);
inline void _1b46eb2b2_anonFunc(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel> _54424_m);
inline void _1b46eb4b0_do(_1b46e76dc_exprOptimizer* _self_);
inline void _1b46ed281_pushVar(jule::Ptr<_1b46eccdb_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1b2db1627_TypeKind> _2442_kind);
inline jule::Bool _1b46ed5c2_removeVar(_1b46eccdb_dynamic* _self_, jule::Uintptr _4725_var);
inline jule::Bool _1b46ed9bd_isFits(_1b46eccdb_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1b2db1627_TypeKind> _6136_kind);
inline _1b470041a_dataCheckpoint _1b4700cbc_getCheckpoint(_1b4700915_data* _self_);
inline void _1b4701075_loadCheckpoint(_1b4700915_data* _self_, _1b470041a_dataCheckpoint* _3535_c);
inline void _1b4702692_pushVar(_1b47021ec_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1b4702dce_fitsMaxSize(_1b47021ec_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1b48354ea_Optimizer> static__1b48359a1_New(jule::Ptr<_1b3865075_IR>* _2121_ir);
inline void _1b4835c59_optimizeGlobal(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2d26ca7_Var>* _2735_v);
inline void _1b4836012_optimizeFunction(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2bda9b2_Fn>* _3337_func);
inline void _1b48362ba_optimizeStruct(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2b0db6b_Struct>* _4335_s);
inline void _1b4836573_optimizeGlobals(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2cd7691_Package>* _5936_p);
inline void _1b483682b_optimizeFunctions(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2cd7691_Package>* _6738_p);
inline void _1b4836ad4_optimizeStructs(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2cd7691_Package>* _7536_p);
inline void _1b4836d8c_optimizePackage(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2cd7691_Package>* _8336_p);
inline void _1b483708a_Optimize(_1b48354ea_Optimizer* _self_);
inline _1b49114c7_Time static__1b49118b2_Unix(jule::U64 _9117_sec);
inline _1b49114c7_Time static__1b4911ac1_Now(void);
inline _1b4910d01_AbsTime _1b49132a9_Abs(_1b49114c7_Time* _self_);
inline jule::Ptr<_1b4839202_scopeCoder> static__1b48398ea_new(jule::Ptr<_1b491d2d6_ObjectCoder>* _3721_oc);
inline void _1b8107b32_iterHead(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca63c9_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin);
inline void _1b483a0c1_rangeIndexIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca63c9_RangeIter>* _9336_it);
inline void _1b483a379_rangeHashmapIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca63c9_RangeIter>* _16038_it);
inline void _1b483a632_strRuneIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b46d7006_StrRuneIter> _24332_it);
inline void _1b483a8da_ifCase(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca49b0_If> _35527_i);
inline void _1b483ab93_conditional(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca51ca_Conditional> _36432_c);
inline void _1b483ae4b_infIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca54c7_InfIter> _38428_it);
inline void _1b483b204_whileIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca597d_WhileIter> _40130_it);
inline void _1b483b4ac_rangeIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca63c9_RangeIter> _44030_it);
inline void _1b483b765_cont(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca675e_ContSt> _45321_c);
inline void _1b483ba1d_label(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca70de_Label> _45822_l);
inline void _1b483bcc6_gotoSt(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca774e_GotoSt> _46323_gt);
inline void _1b483c07e_postfix(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca7b28_Postfix> _46828_p);
inline void _1b483c337_assignLeft(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Any* _47532_model);
inline void _1b483c5e0_shl(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca80ce_Assign> _50724_a);
inline void _1b483c898_shr(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca80ce_Assign> _51324_a);
inline void _1b483cb51_divByZeroAssign(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca80ce_Assign> _51936_a);
inline void _1b483d129_operatorOverloadingAssign(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _52547_s, jule::Ptr<_1b2bcd125_OperandExprModel>* _52573_l, jule::Ptr<_1b2bcd125_OperandExprModel>* _5268_r, jule::U64 _52636_op);
inline void _1b483d3d2_assign(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca80ce_Assign> _54027_a);
inline void _1b483d68a_mapLookupAssign(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8585_MultiAssign>* _57337_a);
inline void _1b483d943_multiAssignTup(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8585_MultiAssign>* _60636_a);
inline void _1b483dbeb_multiAssignFn(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8585_MultiAssign>* _65535_a);
inline void _1b483dea4_multiAssign(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8585_MultiAssign> _71432_a);
inline jule::Fn<void> _1b483e2e5_matchExpr(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8cc2_Match> _74030_m);
inline void _1b483e658_case(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8cc2_Match> _75025_m, jule::Ptr<_1b2ca97ea_Case> _75046_c);
inline void _1b483e911_matchSt(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8cc2_Match> _82028_m);
inline void _1b483ebb9_fallSt(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca9ee3_FallSt> _87523_f);
inline void _1b483ee72_breakSt(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca6b38_BreakSt> _88024_b);
inline void _1b484022a_setResult(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2caa389_RetSt> _88930_r);
inline void _1b48404d3_retSt(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2caa389_RetSt> _91726_r);
inline void _1b484078b_var(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2d26ca7_Var> _95324_v);
inline void _1b4840a44_mutSlicing(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b46d5be7_MutSlicingExprModel> _95931_m);
inline void _1b4840cec_swap(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b46d4993_SwapExprModel> _97625_m);
inline void _1b48410a5_exceptionalForwarding(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b46d471d_ExceptionalForwardingExprModel> _98442_m);
inline void _1b484135d_st(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Any _99023_st);
inline void _1b4841616_scopeStmts(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca4592_Scope>* _104632_s);
inline void _1b48418be_scope(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca4592_Scope> _105526_s);
inline void _1b4841b77_commonFuncScope(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2bdda70_FnIns>* _107037_f);
inline void _1b4841eda_anonFuncScope(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel> _111034_m, jule::Str _111061_ident);
inline void _1b4842293_funcScope(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _114230_f);
inline jule::Ptr<_1b484a1e1_exprCoder> static__1b484a5dc_new(jule::Ptr<_1b491d2d6_ObjectCoder>* _4621_oc);
inline void _1b484a895_string(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b6c23a_Const>* _5224_c);
inline void _1b484ab4d_boolean(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Bool _6724_b);
inline void _1b484ad4b_nilLit(jule::Ptr<_1b484a1e1_exprCoder> _self_);
inline jule::Bool _1b484b18c_ftoaSpecialCases(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::F64* _7934_x);
inline void _1b484b445_float32(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b6c23a_Const>* _9325_c);
inline void _1b484b6ed_float64(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b6c23a_Const>* _11225_c);
inline void _1b484b9a6_constant(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b6c23a_Const> _13029_c);
inline void _1b484bdc4_operatorOverloadingUnary(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _15446_s, jule::U64 _15467_op, jule::Any _15486_e);
inline void _1b484c2e2_divByZeroBinary(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2ac7eba_Token>* _16633_op, jule::Ptr<_1b2bcd125_OperandExprModel>* _16657_l, jule::Ptr<_1b2bcd125_OperandExprModel>* _16690_r);
inline void _1b484c9da__unsafeBinary(jule::Ptr<_1b484a1e1_exprCoder> _self_, _20d8ca601_Builder* _20535_buf, jule::Str* _20559_l, jule::Str* _20568_r, jule::Ptr<_1b2db1627_TypeKind>* _2068_lk, jule::Ptr<_1b2db1627_TypeKind>* _20634_rk, jule::U64 _20655_op, jule::Str _20670_kind);
inline void _1b484cc93_unsafeBinary(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcd620_BinaryExprModel> _27633_m);
inline void _1b484d106_shl(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcd125_OperandExprModel>* _28825_l, jule::Ptr<_1b2bcd125_OperandExprModel>* _28858_r);
inline void _1b484d469_shr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcd125_OperandExprModel>* _31625_l, jule::Ptr<_1b2bcd125_OperandExprModel>* _31658_r);
inline void _1b484d722_binary(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcd620_BinaryExprModel> _34427_m);
inline void _1b484d9ca_var(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2d26ca7_Var> _36824_m);
inline void _1b484dc83_structureIns(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b119c6_StructIns> _38433_m);
inline void _1b484e03b_unary(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcd9e9_UnaryExprModel> _38826_m);
inline void _1b484e2e4_structureLit(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bce3bd_StructLitExprModel> _41933_m);
inline void _1b484e59c_allocStructure(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bce6ba_AllocStructLitExprModel> _46235_m);
inline void _1b484e855_possibleRefExpr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Any _47032_expr);
inline void _1b484ec73_castTraitFromTrait(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcec4d_CastingExprModel>* _48440_m, jule::Ptr<_1b2be61c6_Trait> _48472_t1, jule::Ptr<_1b2be61c6_Trait> _48494_t2);
inline void _1b485002b_casting(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcec4d_CastingExprModel> _49728_m);
inline void _1b48502d4_args(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel>* _64426_m);
inline void _1b485058c_modelForCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Any _67533_expr);
inline void _1b4850845_pushCallInf(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel>* _69029_m);
inline jule::Bool _1b4850b86_isWrapped(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel>* _71331_m);
inline jule::Bool _1b4850ec7_writeReceiver(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Any _73734_m);
inline void _1b4851280_pureFuncCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel>* _75034_m);
inline void _1b4851538_coFuncCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel>* _84032_m);
inline void _1b485189b_writeUseExpr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bdda70_FnIns>* _91834_f, jule::Ptr<_1b2d7dc21_Data> _91855_d);
inline void _1b4851b54_funcCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel> _93929_m);
inline void _1b4851e0c_slice(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd09c9_SliceExprModel> _101226_m);
inline void _1b48521b5_indexing(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0e80_IndexingExprModel> _104129_m);
inline void _1b485246d_unsafeIndexing(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d6379_UnsafeIndexingExprModel> _109335_m);
inline void _1b4852726_anonFunc(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel> _111029_m);
inline void _1b48529ce_mapExpr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd1bd9_MapExprModel> _114128_m);
inline void _1b4852c87_slicing(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd226c_SlicingExprModel> _117728_m);
inline void _1b4853040_traitSub(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd2800_TraitSubIdentExprModel> _119329_m);
inline void _1b48532e8_structureSub(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _120933_m);
inline void _1b48535a1_array(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd3911_ArrayExprModel> _121826_m);
inline void _1b4853859_funcInsCommon(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _126834_m);
inline void _1b4853b12_funcIns(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _127528_m);
inline void _1b4853dba_tuple(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd3c0d_TupleExprModel> _128626_m);
inline void _1b4854173_newCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd488a_BuiltinNewCallExprModel> _129728_m);
inline void _1b485442b_outCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd40d7_BuiltinOutCallExprModel> _130928_m);
inline void _1b48546d4_outlnCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd44b1_BuiltinOutlnCallExprModel> _132230_m);
inline void _1b485498c_panicCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd4c64_BuiltinPanicCallExprModel> _133530_m);
inline void _1b4854c45_errorCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd686a_BuiltinErrorCallExprModel> _134330_m);
inline void _1b4854eed_copyCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd6491_BuiltinCopyCallExprModel> _137529_m);
inline void _1b48552a6_lenCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd58e1_BuiltinLenCallExprModel> _138328_m);
inline void _1b485555e_capCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd5bdd_BuiltinCapCallExprModel> _140028_m);
inline void _1b4855817_deleteCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd60b7_BuiltinDeleteCallExprModel> _140531_m);
inline void _1b4855ac0_makeCallSlice(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd521a_BuiltinMakeCallExprModel>* _143035_m);
inline void _1b4855d78_makeCallStr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd521a_BuiltinMakeCallExprModel>* _145433_m);
inline void _1b4856131_makeCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd521a_BuiltinMakeCallExprModel> _146529_m);
inline void _1b48563d9_pushToSlice(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d6753_PushToSliceExprModel> _147332_m);
inline void _1b4856692_appendToSlice(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d6b2c_AppendToSliceExprModel> _153334_m);
inline void _1b485694a_appendCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd55e4_BuiltinAppendCallExprModel> _154131_m);
inline void _1b4856c03_sizeof(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd6b67_SizeofExprModel> _154927_m);
inline void _1b4856eab_alignof(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd731b_AlignofExprModel> _155528_m);
inline void _1b4857264_runeLit(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd7508_RuneExprModel> _156124_m);
inline void _1b485751c_structureStatic(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd3537_StructStaticIdentExprModel> _157536_m);
inline void _1b48577c5_backendEmit(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd787c_BackendEmitExprModel> _157932_m);
inline void _1b4857a7d_free(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd7b79_FreeExprModel> _159525_m);
inline void _1b4857d36_strComp(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d5664_StrCompExprModel> _160428_m);
inline void _1b48580de_emptyCompare(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d4d6c_EmptyCompareExprModel> _162033_m);
inline void _1b4858397_unsafeDeref(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d7303_UnsafeDerefExprModel> _162932_m);
inline void _1b4858650_unsafeCasting(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d7600_UnsafeCastingExprModel> _164034_m);
inline void _1b4858908_model(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Any _165726_m);
inline jule::Bool _1b4858c49_handleFieldByDefault(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b10e26_FieldIns>* _175742_f);
inline void _1b4859002_initStructLit(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _177835_s);
inline void _1b48592aa_fillCollectionByDefault(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2db1627_TypeKind>* _180045_elem);
inline void _1b4859563_initCollection(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2db1627_TypeKind>* _181536_elem);
inline void _1b485981b_initArray(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2dc1060_Arr>* _182931_arr);
inline void _1b4859ac4_initExpr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2db1627_TypeKind> _184329_t);
inline jule::Ptr<_1b485c6ba_TestCoder> static__1b485cb71_New(jule::Ptr<_1b491d2d6_ObjectCoder>* _2021_oc);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b485ce07_findTestingPackage(jule::Ptr<_1b485c6ba_TestCoder> _self_);
inline void _1b485d1b0_appendTest(jule::Ptr<_1b485c6ba_TestCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _3531_f);
inline void _1b485d468_appendPackageTests(jule::Ptr<_1b485c6ba_TestCoder> _self_, jule::Ptr<_1b2cd7691_Package>* _5040_p);
inline jule::Bool _1b485d6ee_readyTestingPackage(jule::Ptr<_1b485c6ba_TestCoder> _self_);
inline void _1b485d8ec_callTmReset(jule::Ptr<_1b485c6ba_TestCoder> _self_);
inline void _1b485daea_callTmFailed(jule::Ptr<_1b485c6ba_TestCoder> _self_);
inline void _1b485dce8_callTmSkipped(jule::Ptr<_1b485c6ba_TestCoder> _self_);
inline void _1b485dee6_Serialize(jule::Ptr<_1b485c6ba_TestCoder> _self_);
inline void static__1b4860855_writeIdentTo(_20d8ca601_Builder* _2630_buf, jule::Str* _2654_ident);
inline void static__1b4860beb_toOut(_20d8ca601_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr);
inline void static__1b486114c_toLocal(_20d8ca601_Builder* _6925_buf, jule::I64 _6948_row, jule::I64 _6958_col, jule::Str* _6969_ident);
inline void static__1b4861438_func(_20d8ca601_Builder* _7722_buf, jule::Ptr<_1b2bda9b2_Fn>* _7750_f);
inline void static__1b4861724_funcIns(_20d8ca601_Builder* _9825_buf, jule::Ptr<_1b2bdda70_FnIns>* _9853_f);
inline void static__1b4861a10_traitDecl(_20d8ca601_Builder* _11327_buf, jule::Ptr<_1b2be61c6_Trait> _11350_t);
inline void static__1b4861ceb_param(_20d8ca601_Builder* _11723_buf, jule::Ptr<_1b2bd8edd_Param>* _11747_p);
inline void static__1b48620d7_structure(_20d8ca601_Builder* _13227_buf, jule::Ptr<_1b2b0db6b_Struct>* _13251_s);
inline void static__1b48623c3_structureIns(_20d8ca601_Builder* _14330_buf, jule::Ptr<_1b2b119c6_StructIns>* _14354_s);
inline void static__1b48626ae_field(_20d8ca601_Builder* _15123_buf, jule::Ptr<_1b2b0ac78_Field>* _15147_f);
inline void static__1b486299a_var(_20d8ca601_Builder* _16121_buf, jule::Ptr<_1b2d26ca7_Var> _16148_v);
inline void static__1b4862c86_iterBegin(_20d8ca601_Builder* _18827_buf, jule::Uintptr _18850_it);
inline void static__1b4863072_iterEnd(_20d8ca601_Builder* _19325_buf, jule::Uintptr _19348_it);
inline void static__1b486335d_iterNext(_20d8ca601_Builder* _19826_buf, jule::Uintptr _19849_it);
inline void static__1b4863649_label(_20d8ca601_Builder* _20323_buf, jule::Uintptr _20346_u);
inline void static__1b4863935_matchEnd(_20d8ca601_Builder* _20826_buf, jule::Uintptr _20849_m);
inline void static__1b4863c21_caseBegin(_20d8ca601_Builder* _21327_buf, jule::Uintptr _21350_c);
inline jule::Ptr<_1b491d2d6_ObjectCoder> static__1b491d748_New(jule::Ptr<_1b3865075_IR>* _11321_ir, _1b491aed7_SerializationInfo _11335_info);
inline void _1b491da01_write(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Str _12622_s);
inline void _1b491dca9_writeBytes(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Slice<jule::U8> _13027_b);
inline void _1b491dea7_addIndent(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b491e1a5_doneIndent(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b491e3a3_indent(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline jule::I64 _1b491e6e4_findAnyType(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2db1627_TypeKind>* _14933_t);
inline jule::I64 _1b491ea35_pushCoSpawn(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _15832_f);
inline jule::I64 _1b491ed76_pushDealloc(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2db1627_TypeKind> _26132_t);
inline jule::Str _1b49201b7_pushAnonFn(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel>* _27732_m);
inline jule::I64 _1b4920508_pushAnyType(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2db1627_TypeKind> _31932_t);
inline void _1b49207b1_pushResultIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bdda70_FnIns>* _42435_f);
inline void _1b4920a69_pushResult(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bda9b2_Fn>* _44532_f);
inline void _1b4920dcc_pushAndWriteMaskMapper(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2be61c6_Trait> _45843_t1, jule::Ptr<_1b2be61c6_Trait> _45865_t2);
inline void _1b4921185_locInfo(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2ac7eba_Token>* _50925_t);
inline void _1b4921383_head(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b492163b_links(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Bool _57622_std);
inline void _1b49218e4_prepareStructure(_1b491d2d6_ObjectCoder* _self_, jule::Ptr<_1b2b0db6b_Struct>* _59937_s);
inline void _1b4921ae2_prepareStructures(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4921d9a_structurePlainDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b0db6b_Struct>* _63040_s);
inline void _1b4922098_structurePlainDecls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4922351_fieldDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b10e26_FieldIns>* _64631_f);
inline void _1b4922609_structureDestructor(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _65341_s);
inline void _1b4922a27_structureOperatorEq(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Str _66936_ident, jule::Ptr<_1b2b119c6_StructIns>* _66953_s, jule::Bool _66974_decl);
inline void _1b4922d8a_structureOperators(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _73740_s, jule::Bool _73761_decl);
inline void _1b4923143_structureInsDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _74638_s);
inline void _1b49233eb_structureDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b0db6b_Struct>* _77635_s);
inline void _1b49235e9_structureDecls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b49237e7_structureMethodDecls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4923cc0_funcHead(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, _20d8ca601_Builder* _81030_buf, jule::Ptr<_1b2bdda70_FnIns>* _81058_f, jule::Bool _81075_ptr, jule::Str _81086_ident);
inline void _1b4924133_funcDeclIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bdda70_FnIns>* _82933_f, jule::Bool _82950_ptr);
inline void _1b4924496_funcDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bda9b2_Fn>* _83730_f, jule::Bool _83744_ptr);
inline void _1b492474e_funcDeclTrait(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bda9b2_Fn>* _84335_f);
inline void _1b492494c_funcDecls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4924c05_traitDataTypeMethods(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2be61c6_Trait>* _86542_t);
inline void _1b4924e03_traitDataTypes(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4925266_paramIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, _20d8ca601_Builder* _90130_buf, jule::Ptr<_1b2bdc91a_ParamIns>* _90158_p);
inline void _1b49255c9_paramsIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, _20d8ca601_Builder* _90731_buf, jule::Ptr<_1b2bdda70_FnIns>* _90759_f);
inline void _1b492593c_varInitExpr(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2d26ca7_Var>* _92833_v, jule::Fn<void> _92848_init);
inline void _1b4925be5_var(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2d26ca7_Var> _94624_v);
inline void _1b4926058_anonFuncInsDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel>* _97737_m, jule::Str _97764_ident);
inline void _1b49263bb_anonFuncIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel>* _98333_m, jule::Str _98360_ident);
inline void _1b492672e_funcIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _99328_f, jule::Str _99345_ident);
inline void _1b49269d7_func(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bda9b2_Fn>* _100326_f);
inline void _1b4926d4a_funcTrait(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _100927_s, jule::Ptr<_1b2bdda70_FnIns>* _100953_f);
inline __jule_tuple_x_1b2bdda70_FnIns__jule_tuple_bool _1b492718b_findTraitMetMap(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bda9b2_Fn>* _102437_m);
inline void _1b49274ee_traitWrapper(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2be61c6_Trait>* _103634_t, jule::Ptr<_1b2bda9b2_Fn>* _103656_m);
inline void _1b49276ec_traitWrappers(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4927a60_traitDataMethods(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2be61c6_Trait>* _110338_t, jule::Ptr<_1b2b119c6_StructIns> _110355_s);
inline void _1b4927e7d_traitData(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2be61c6_Trait>* _112031_t, jule::I64 _112048_i, jule::Ptr<_1b2b119c6_StructIns>* _112061_s);
inline void _1b492817b_traitDatas(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4928379_globalDecls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4928577_decls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4928830_structureMethods(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _118338_s);
inline void _1b4928ad8_structureIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _119034_s);
inline void _1b4928d91_structure(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b0db6b_Struct>* _119631_s);
inline void _1b492908e_structures(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b492928c_funcs(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4929545_pushInit(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2cd7691_Package>* _123530_pkg);
inline void _1b4929743_anonHashes(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4929941_initGlobals(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4929b3e_initCaller(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b4929d3c_end(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b492a1a0_insertBuf(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, _20d8ca601_Builder* _130631_buf, jule::I64 _130654_pos);
inline void _1b492a39d_implementRC(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b492a59b_serializeHead(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline void _1b492a799_Serialize(jule::Ptr<_1b491d2d6_ObjectCoder> _self_);
inline jule::Str _1b492c801_Str(_1b492c449_customType* _self_);
inline jule::Bool _1b492cb42_Equal(jule::Ptr<_1b492c449_customType> _self_, jule::Ptr<_1b2db1627_TypeKind> _2518_k);
inline jule::Ptr<_1b492d03d_typeCoder> static__1b492d58d_new(jule::Ptr<_1b491d2d6_ObjectCoder>* _5021_oc);
inline void _1b492d901_toType(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _5727_buf, jule::Str _5754_id);
inline void _1b492dc64_prim(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _7125_buf, jule::Ptr<_1b2db9740_Prim> _7148_p);
inline void _1b492e0c7_tuple(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _7626_buf, jule::Ptr<_1b2dbe833_Tuple> _7653_t);
inline void _1b492e43a_asSptr(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem);
inline void _1b492e79d_sptr(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _9525_buf, jule::Ptr<_1b2dbd26b_Sptr> _9552_sptr);
inline void _1b492eb11_ptr(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _10224_buf, jule::Ptr<_1b2dc1a33_Ptr> _10251_p);
inline void _1b492ee74_enumDecl(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _11329_buf, jule::Ptr<_1b2be887c_Enum> _11356_e);
inline void _1b49302d7_typeEnumDecl(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _11833_buf, jule::Ptr<_1b2bea087_TypeEnum> _11860_e);
inline void _1b493064a_asSlice(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _12228_buf, jule::Ptr<_1b2db1627_TypeKind> _12255_elem);
inline void _1b49309ad_slice(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _12926_buf, jule::Ptr<_1b2dbdc3e_Slc> _12953_s);
inline void _1b4930d21_mapType(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _13428_buf, jule::Ptr<_1b2dc03d3_Map> _13455_m);
inline void _1b49314e7_structureIns(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _14833_buf, jule::Ptr<_1b2b119c6_StructIns> _14860_s);
inline void _1b493185a_array(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _17226_buf, jule::Ptr<_1b2dc1060_Arr> _17253_a);
inline void _1b4932031_paramIns(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _19529_buf, jule::Ptr<_1b2bdc91a_ParamIns>* _19557_p);
inline void _1b4932707_funcInsResult(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _22734_s, jule::Ptr<_1b2bdda70_FnIns>* _22760_f);
inline void _1b4932a6a_anonFunc(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _24529_buf, jule::Ptr<_1b2bdda70_FnIns> _24556_f);
inline void _1b4932dcd_func(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _26625_buf, jule::Ptr<_1b2bdda70_FnIns> _26652_f);
inline void _1b4933241_kind(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _27325_buf, jule::Ptr<_1b2db1627_TypeKind> _27352_k);
inline jule::Ptr<_1b4935b28_resultCoder> static__1b4936134_new(jule::Ptr<_1b492d03d_typeCoder>* _34121_tc);
inline void _1b4936497_ptr(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _34524_s, jule::Ptr<_1b2dc1a33_Ptr> _34549_p);
inline void _1b493680a_sptr(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _35025_s, jule::Ptr<_1b2dbd26b_Sptr> _35050_p);
inline void _1b4936b6d_mapType(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _35528_s, jule::Ptr<_1b2dc03d3_Map> _35553_p);
inline void _1b4936ed1_slice(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _36126_s, jule::Ptr<_1b2dbdc3e_Slc> _36151_slc);
inline void _1b4937344_arr(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _36624_s, jule::Ptr<_1b2dc1060_Arr> _36649_arr);
inline void _1b49376a7_func(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _37225_s, jule::Ptr<_1b2bdda70_FnIns> _37250_f);
inline void _1b4937a1a_tup(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _38524_s, jule::Ptr<_1b2dbe833_Tuple> _38549_tup);
inline void _1b4937d7d_codeMut(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _39228_s, jule::Ptr<_1b2db1627_TypeKind>* _39254_t);
inline void _1b49381e1_codeMut1(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _43229_s, jule::Ptr<_1b2db1627_TypeKind>* _43255_t);
inline jule::Slice<jule::U8> _1b49384ee_code(_1b4935b28_resultCoder* _self_, jule::Ptr<_1b2db1627_TypeKind>* _44125_t);
inline jule::Str _1b86da346_Name(_1b86da4de_Flag* _self_);
inline jule::Str _1b86da7ca_What(_1b86da4de_Flag* _self_);
inline void _1b86da91d_Reset(_1b86da4de_Flag* _self_);
inline jule::I32 _1b86daa61_Short(_1b86da4de_Flag* _self_);
inline jule::Str _1b86dd987_Name(_1b86ddd0b_Flag* _self_);
inline jule::Str _1b86de0e7_What(_1b86ddd0b_Flag* _self_);
inline void _1b86de23a_Reset(_1b86ddd0b_Flag* _self_);
inline jule::I32 _1b86de37d_Short(_1b86ddd0b_Flag* _self_);
inline jule::Str _1b86e2194_Name(_1b86e2518_Flag* _self_);
inline jule::Str _1b86e2804_What(_1b86e2518_Flag* _self_);
inline void _1b86e2947_Reset(_1b86e2518_Flag* _self_);
inline jule::I32 _1b86e2a8a_Short(_1b86e2518_Flag* _self_);
inline jule::Str _1b86e58e5_Name(_1b86e5c69_Flag* _self_);
inline jule::Str _1b86e6055_What(_1b86e5c69_Flag* _self_);
inline void _1b86e6198_Reset(_1b86e5c69_Flag* _self_);
inline jule::I32 _1b86e62db_Short(_1b86e5c69_Flag* _self_);
inline jule::Str _1b86e9102_Name(_1b86e9476_Flag* _self_);
inline jule::Str _1b86e9762_What(_1b86e9476_Flag* _self_);
inline void _1b86e98a5_Reset(_1b86e9476_Flag* _self_);
inline jule::I32 _1b86e99e8_Short(_1b86e9476_Flag* _self_);
inline jule::Ptr<_1b49a6209_FlagSet> static__1b49a6528_New(void);
inline jule::Trait _1b49a69ce_FindFlag(_1b49a6209_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1b49a6d20_FindFlagShort(_1b49a6209_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1b49a73e7_Parse(_1b49a6209_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1b86e9476_Flag> _1b877614b_addFlagCommon(_1b49a6209_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1b86e5c69_Flag> _1b8780221_addFlagCommon(_1b49a6209_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1b877392e_AddVar(_1b49a6209_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1b877ca37_AddVar(_1b49a6209_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1b870c247_parseInteger(_1b49a8bbd_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1b8714d21_parseInteger(_1b49a8bbd_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1b49a951a_getData(_1b49a8bbd_argParser* _self_);
inline jule::VoidExceptional _1b49a9790_processFlag(_1b49a8bbd_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1b49a9a48_singleDash(_1b49a8bbd_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1b49a9d01_doubleDash(_1b49a8bbd_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1b49a9eee_tryArg(_1b49a8bbd_argParser* _self_);
inline jule::VoidExceptional _1b49aa1ec_parse(_1b49a8bbd_argParser* _self_);
inline jule::Ptr<_20db5dbd6_Cmd> static__20db5e126_New(jule::Str _2616_path);
inline jule::VoidExceptional _20db5e324_Spawn(_20db5dbd6_Cmd* _self_);
inline jule::Exceptional<jule::I64> _20db5e7a8_Wait(_20db5dbd6_Cmd* _self_);
inline jule::VoidExceptional _20dbb8306_spawn(_20db5dbd6_Cmd* _self_);
inline jule::Exceptional<jule::I64> _20dbb878a_wait(_20db5dbd6_Cmd* _self_);
inline __jule_tuple_x_1b3865075_IR__jule_tuple_s_20daa5e91_Log static__1b386554d_Build(jule::Str _3018_path, jule::I64 _3029_flags);
inline void _1b3865a37_appendStructs(_1b3865075_IR* _self_, jule::Ptr<_1b2cd7691_Package>* _6830_p, jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>* _6854_buffer);
inline jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _1b3865cbd_GetAllStructures(_1b3865075_IR* _self_);
inline void _1b3866131_appendGlobals(_1b3865075_IR* _self_, jule::Ptr<_1b2cd7691_Package>* _9130_p, jule::Slice<jule::Ptr<_1b2d26ca7_Var>>* _9154_buffer);
inline jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _1b38663b7_GetAllGlobals(_1b3865075_IR* _self_);
inline void _1b38665b5_Order(_1b3865075_IR* _self_);
inline void _227de204e_Free(void* _4520_ptr);
inline jule::Str _227e22832_BytePtrToStr(jule::U8* _6524_s);
inline jule::Slice<jule::U8> _227e22ab8_StrToBytes(jule::Str _9015_s);
inline jule::I64 _227d87ea1_GetLastErrno(void);
inline jule::I64 _227e32028_Fcntl(jule::I64 _5510_handle, jule::I64 _5523_cmd, jule::I64 _5533_arg);
inline jule::I64 _227e3239c_Stat(jule::U8* _6016_path, struct stat* _6033_stat);
inline jule::I64 _227e327cb_Open(jule::U8* _6516_path, jule::I64 _6529_flag, jule::I64 _6540_mode);
inline jule::U8* _227e32b50_Getcwd(jule::U8* _7118_buff, jule::U64 _7131_bufflen);
inline DIR* _227e3314a_Opendir(jule::U8* _7619_path);
inline struct dirent* _227e33326_Readdir(DIR* _7923_dir);
inline jule::I64 _227e335bd_Closedir(DIR* _8224_dir);
inline jule::I64 _227e33ec5_Mkdir(jule::U8* _9117_path, jule::I64 _9130_mode);
inline jule::I64 _227e3428e_Rmdir(jule::U8* _9617_path);
inline jule::I64 _227e34558_Unlink(jule::U8* _9918_path);
inline jule::I64 _227e39ae1_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _227e39eba_Close(jule::I64 _2510_handle);
inline jule::I64 _227e3a372_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _227e3a5a3_Exit(jule::I64 _339_code);
inline jule::Str _227e71562_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1b4a3a2d2_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap);
inline jule::Slice<jule::U8> _227e7c3d6_StrBytes(jule::Str _4013_s);
inline jule::Str _227e7c66c_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _227e7c936_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline __jule_tuple_i32__jule_tuple_int _2280963ce_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _228096720_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _228096c70_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::Slice<jule::U8> _2280977ba_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _228097b3e_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _2280981c2_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _22809848b_RuneStart(jule::U8 _51714_b);
inline jule::I64 _20c54d3eb_LeadingZeros64(jule::U64 _6119_x);
inline jule::I64 _20c54e342_TrailingZeros(jule::U64 _8318_x);
inline jule::I64 _20c54ec27_TrailingZeros32(jule::U32 _10520_x);
inline jule::I64 _20c54eee1_TrailingZeros64(jule::U64 _11420_x);
inline jule::I64 _20c5559b9_Len32(jule::U32 _35214_x);
inline jule::I64 _20c555c83_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _20c556a20_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _20c558329_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::I64 _225e8c827_randInt(jule::U64 _716_seed, jule::I64 _727_max);
inline jule::Bool _1b4c26da3_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1b4c7a2be_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1b5cc8d11_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1b7ed4646_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void _227e63b5e__handleRW(jule::Slice<jule::U8>* _1615_b);
inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2520_buf);
inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3620_buf);
inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf);
inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n);
inline jule::U64 _1b4b76b16_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo);
inline jule::U64 _1b4b76cd1_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo);
inline jule::Str _227e84564_executable(void);
inline jule::U64* __jule_RCNew(void);
inline jule::U64 __jule_RCLoad(jule::U64* _4019_p);
inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p);
inline void __jule_RCAdd(jule::U64* _5722_p);
inline void __jule_RCAddAtomic(jule::U64* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U64* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p);
inline void __jule_RCFree(jule::U64* _9219_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I64 _227e8d66c_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1b8745736_arrToStr(jule::Slice<jule::U8> _13316_x);
inline jule::Str _1b873a5c7_structToStr(_20d8ca601_Builder _16619_x);
inline jule::Str _1b4bda1b8_toStr(jule::Any _20713_x);
inline jule::Str _1b4bdc396_toStr(jule::Str _20713_x);
inline jule::Str _1b4bdcae4_toStr(jule::I64 _20713_x);
inline jule::Str _1b4be2852_toStr(jule::I8 _20713_x);
inline jule::Str _1b4be0586_toStr(jule::I16 _20713_x);
inline jule::Str _1b4be7c64_toStr(jule::I32 _20713_x);
inline jule::Str _1b4bea74a_toStr(jule::I64 _20713_x);
inline jule::Str _1b4bed297_toStr(jule::U64 _20713_x);
inline jule::Str _1b4beacab_toStr(jule::Uintptr _20713_x);
inline jule::Str _1b4c00e7b_toStr(jule::U8 _20713_x);
inline jule::Str _1b4c033bd_toStr(jule::U16 _20713_x);
inline jule::Str _1b4c05810_toStr(jule::U32 _20713_x);
inline jule::Str _1b4c07c52_toStr(jule::U64 _20713_x);
inline jule::Str _1b4c0b12e_toStr(jule::F32 _20713_x);
inline jule::Str _1b4c0a1d8_toStr(jule::F64 _20713_x);
inline jule::Str _1b4be813d_toStr(jule::Bool _20713_x);
inline jule::Str _1b4bdaa59_toStr(jule::I64 _20713_x);
inline jule::Str _1b59c10be_toStr(jule::I64 _20713_x);
inline jule::Str _1b5a0e67e_toStr(jule::I64 _20713_x);
inline jule::Str _1b5d68279_toStr(jule::I64 _20713_x);
inline jule::Str _1b650db3e_toStr(jule::Ptr<_1b2d26ca7_Var> _20713_x);
inline jule::Str _1b6510d0b_toStr(jule::Ptr<_1b2db0835_TypeAlias> _20713_x);
inline jule::Str _1b651479e_toStr(jule::Ptr<_1b2b0db6b_Struct> _20713_x);
inline jule::Str _1b6518066_toStr(jule::Ptr<_1b2bda9b2_Fn> _20713_x);
inline jule::Str _1b651bb08_toStr(jule::Ptr<_1b2be61c6_Trait> _20713_x);
inline jule::Str _1b651bde4_toStr(jule::Ptr<_1b2be887c_Enum> _20713_x);
inline jule::Str _1b6524acd_toStr(jule::Ptr<_1b2bea087_TypeEnum> _20713_x);
inline jule::Str _1b6542238_toStr(jule::Ptr<_1b2b0ac78_Field> _20713_x);
inline jule::Str _1b6554327_toStr(jule::Ptr<_1b2b6c23a_Const> _20713_x);
inline jule::Str _1b656d52d_toStr(jule::Ptr<_1b2be7d32_EnumItem> _20713_x);
inline jule::Str _1b657eb27_toStr(jule::Ptr<_1b2bd8edd_Param> _20713_x);
inline jule::Str _1b66695d5_toStr(jule::Str _20713_x);
inline jule::Str _1b6741206_toStr(jule::Ptr<_1b2add9e7_IdentTypeDecl> _20713_x);
inline jule::Str _1b675d234_toStr(jule::Ptr<_1b2bd3c0d_TupleExprModel> _20713_x);
inline jule::Str _1b67606dc_toStr(jule::Ptr<_1b2ae3315_TupleExpr> _20713_x);
inline jule::Str _1b6770576_toStr(jule::Ptr<_1b2aebd8a_AssignSt> _20713_x);
inline jule::Str _1b677305c_toStr(jule::Ptr<_1b2ae2721_Expr> _20713_x);
inline jule::Str _1b6776082_toStr(jule::Ptr<_1b2ca7b28_Postfix> _20713_x);
inline jule::Str _1b67798d2_toStr(jule::Ptr<_1b2ca80ce_Assign> _20713_x);
inline jule::Str _1b6779ad0_toStr(jule::Ptr<_1b2ca8585_MultiAssign> _20713_x);
inline jule::Str _1b6780234_toStr(jule::Ptr<_1b2d7dc21_Data> _20713_x);
inline jule::Str _1b6782b1b_toStr(jule::Ptr<_1b2bd0600_FnCallExprModel> _20713_x);
inline jule::Str _1b67b3ce5_toStr(jule::Ptr<_1b2ca70de_Label> _20713_x);
inline jule::Str _1b67d25b6_toStr(jule::Ptr<_1b2ca4592_Scope> _20713_x);
inline jule::Str _1b67dba32_toStr(jule::Ptr<_1b2bd686a_BuiltinErrorCallExprModel> _20713_x);
inline jule::Str _1b67e1196_toStr(jule::Ptr<_1b2bd787c_BackendEmitExprModel> _20713_x);
inline jule::Str _1b67e186c_toStr(jule::Ptr<_1b2bd55e4_BuiltinAppendCallExprModel> _20713_x);
inline jule::Str _1b67e4221_toStr(jule::Ptr<_1b2bd40d7_BuiltinOutCallExprModel> _20713_x);
inline jule::Str _1b67e97ba_toStr(jule::Ptr<_1b2bd44b1_BuiltinOutlnCallExprModel> _20713_x);
inline jule::Str _1b67ec36c_toStr(jule::Ptr<_1b2bd4c64_BuiltinPanicCallExprModel> _20713_x);
inline jule::Str _1b67eee1e_toStr(jule::Ptr<_1b2bd6491_BuiltinCopyCallExprModel> _20713_x);
inline jule::Str _1b68029c1_toStr(jule::Ptr<_1b2bd60b7_BuiltinDeleteCallExprModel> _20713_x);
inline jule::Str _1b6805573_toStr(jule::Ptr<_1b2bd7b79_FreeExprModel> _20713_x);
inline jule::Str _1b680e945_toStr(jule::Ptr<_1b2ca51ca_Conditional> _20713_x);
inline jule::Str _1b681a324_toStr(jule::Ptr<_1b2ca54c7_InfIter> _20713_x);
inline jule::Str _1b6821160_toStr(jule::Ptr<_1b2ca597d_WhileIter> _20713_x);
inline jule::Str _1b6847890_toStr(jule::Ptr<_1b2ca63c9_RangeIter> _20713_x);
inline jule::Str _1b68574a4_toStr(jule::Ptr<_1b2b026cb_WhileKind> _20713_x);
inline jule::Str _1b6859c37_toStr(jule::Ptr<_1b2b030d3_RangeKind> _20713_x);
inline jule::Str _1b687669e_toStr(jule::Ptr<_1b2ca675e_ContSt> _20713_x);
inline jule::Str _1b6880510_toStr(jule::Ptr<_1b2ca774e_GotoSt> _20713_x);
inline jule::Str _1b68bb02e_toStr(jule::Ptr<_1b2ae403b_IdentExpr> _20713_x);
inline jule::Str _1b68d09a0_toStr(jule::Ptr<_1b2bd0e80_IndexingExprModel> _20713_x);
inline jule::Str _1b6928234_toStr(jule::Ptr<_1b2ca8cc2_Match> _20713_x);
inline jule::Str _1b693c29d_toStr(jule::Ptr<_1b2ca9ee3_FallSt> _20713_x);
inline jule::Str _1b695831e_toStr(jule::Ptr<_1b2ca6b38_BreakSt> _20713_x);
inline jule::Str _1b695e996_toStr(jule::Ptr<_1b2caa389_RetSt> _20713_x);
inline jule::Str _1b696941d_toStr(jule::Ptr<_1b2aed40d_ScopeTree> _20713_x);
inline jule::Str _1b696c50e_toStr(jule::Ptr<_1b2b01257_VarDecl> _20713_x);
inline jule::Str _1b696b574_toStr(jule::Ptr<_1b2b04e09_TypeAliasDecl> _20713_x);
inline jule::Str _1b6972c1d_toStr(jule::Ptr<_1b2b046bc_Conditional> _20713_x);
inline jule::Str _1b697743c_toStr(jule::Ptr<_1b2b01da1_Iter> _20713_x);
inline jule::Str _1b69764a2_toStr(jule::Ptr<_1b2b03886_ContSt> _20713_x);
inline jule::Str _1b697d366_toStr(jule::Ptr<_1b2aea9c1_LabelSt> _20713_x);
inline jule::Str _1b69810a0_toStr(jule::Ptr<_1b2aead9a_GotoSt> _20713_x);
inline jule::Str _1b6983b1e_toStr(jule::Ptr<_1b2b05bc9_MatchCase> _20713_x);
inline jule::Str _1b6987cdd_toStr(jule::Ptr<_1b2aeb197_FallSt> _20713_x);
inline jule::Str _1b69873b4_toStr(jule::Ptr<_1b2b034ac_BreakSt> _20713_x);
inline jule::Str _1b698e278_toStr(jule::Ptr<_1b2b01631_RetSt> _20713_x);
inline jule::Str _1b698d750_toStr(jule::Ptr<_1b2ae30e5_UseExpr> _20713_x);
inline jule::Str _1b6a7e302_toStr(jule::Ptr<_1b2b09cbb_Impl> _20713_x);
inline jule::Str _1b6a83db7_toStr(jule::Ptr<_1b2b08e1e_StructDecl> _20713_x);
inline jule::Str _1b6a8642a_toStr(jule::Ptr<_1b2b0009c_FnDecl> _20713_x);
inline jule::Str _1b6a8a022_toStr(jule::Ptr<_1b2b0965b_TraitDecl> _20713_x);
inline jule::Str _1b6a9149b_toStr(jule::Ptr<_1b2b072c4_EnumDecl> _20713_x);
inline jule::Str _1b6a93657_toStr(jule::Ptr<_1b2b0825e_TypeEnumDecl> _20713_x);
inline jule::Str _1b6abbb25_toStr(jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _20713_x);
inline jule::Str _1b6abc3a6_toStr(jule::Ptr<_1b2bcd9e9_UnaryExprModel> _20713_x);
inline jule::Str _1b6b00120_toStr(jule::Ptr<_1b2bdda70_FnIns> _20713_x);
inline jule::Str _1b6db1667_toStr(jule::Ptr<_1b2ae0e06_MapTypeDecl> _20713_x);
inline jule::Str _1b6db6eca_toStr(jule::Ptr<_1b2adeb19_TupleTypeDecl> _20713_x);
inline jule::Str _1b6dca351_toStr(jule::Ptr<_1b2ae06a8_ArrTypeDecl> _20713_x);
inline jule::Str _1b6dd1775_toStr(jule::Ptr<_1b2ade81c_SlcTypeDecl> _20713_x);
inline jule::Str _1b6dd7b99_toStr(jule::Ptr<_1b2adee16_PtrTypeDecl> _20713_x);
inline jule::Str _1b6dddc9e_toStr(jule::Ptr<_1b2ade487_SptrTypeDecl> _20713_x);
inline jule::Str _1b6e3deca_toStr(jule::Ptr<_1b2ae4ba7_VariadicExpr> _20713_x);
inline jule::Str _1b6e44c17_toStr(jule::Ptr<_1b2bd09c9_SliceExprModel> _20713_x);
inline jule::Str _1b6e5e913_toStr(jule::Ptr<_1b2ae6e40_FieldExprPair> _20713_x);
inline jule::Str _1b6e682ce_toStr(jule::Ptr<_1b2ae854b_KeyValPair> _20713_x);
inline jule::Str _1b6ebe489_toStr(jule::Ptr<_1b2ae644a_FnCallExpr> _20713_x);
inline jule::Str _1b6ed2029_toStr(jule::Ptr<_1b2bce6ba_AllocStructLitExprModel> _20713_x);
inline jule::Str _1b6ee5092_toStr(jule::Ptr<_1b2bcec4d_CastingExprModel> _20713_x);
inline jule::Str _1b700c164_toStr(jule::Ptr<_1b2bd3537_StructStaticIdentExprModel> _20713_x);
inline jule::Str _1b700e94c_toStr(jule::Ptr<_1b2ae5834_SubIdentExpr> _20713_x);
inline jule::Str _1b701ba58_toStr(jule::Ptr<_1b2bce3bd_StructLitExprModel> _20713_x);
inline jule::Str _1b703c051_toStr(jule::Ptr<_1b2bd7508_RuneExprModel> _20713_x);
inline jule::Str _1b705ecdd_toStr(jule::Ptr<_1b2b119c6_StructIns> _20713_x);
inline jule::Str _1b70a4d11_toStr(jule::Ptr<_1b2db1627_TypeKind> _20713_x);
inline jule::Str _1b70c6d55_toStr(jule::Ptr<_1b2bd3911_ArrayExprModel> _20713_x);
inline jule::Str _1b7110cc3_toStr(jule::Ptr<_1b2addcb1_SubIdentTypeDecl> _20713_x);
inline jule::Str _1b71153d2_toStr(jule::Ptr<_1b2ae47cd_UnaryExpr> _20713_x);
inline jule::Str _1b711e562_toStr(jule::Ptr<_1b2add3dc_TypeDecl> _20713_x);
inline jule::Str _1b7123eb2_toStr(jule::Ptr<_1b2ae545a_NamespaceExpr> _20713_x);
inline jule::Str _1b712a99c_toStr(jule::Ptr<_1b2ade18a_NamespaceTypeDecl> _20713_x);
inline jule::Str _1b716607b_toStr(jule::Ptr<_1b2bd226c_SlicingExprModel> _20713_x);
inline jule::Str _1b71d3c31_toStr(jule::Ptr<_1b2ae8c77_SliceExpr> _20713_x);
inline jule::Str _1b7255511_toStr(jule::Ptr<_1b2bd2800_TraitSubIdentExprModel> _20713_x);
inline jule::Str _1b72ee9b7_toStr(jule::Ptr<_1b2bd1bd9_MapExprModel> _20713_x);
inline jule::Str _1b730ed4b_toStr(jule::Ptr<_1b2bd1436_AnonFnExprModel> _20713_x);
inline jule::Str _1b7316ddb_toStr(jule::Ptr<_1b2ae29da_RangeExpr> _20713_x);
inline jule::Str _1b731a010_toStr(jule::Ptr<_1b2ae36ab_LitExpr> _20713_x);
inline jule::Str _1b731d068_toStr(jule::Ptr<_1b2ae3a85_UnsafeExpr> _20713_x);
inline jule::Str _1b7322e91_toStr(jule::Ptr<_1b2ae96d4_IndexingExpr> _20713_x);
inline jule::Str _1b7326a99_toStr(jule::Ptr<_1b2ae9d44_SlicingExpr> _20713_x);
inline jule::Str _1b7325b0e_toStr(jule::Ptr<_1b2ae5081_CastExpr> _20713_x);
inline jule::Str _1b732c97e_toStr(jule::Ptr<_1b2ae776a_StructLit> _20713_x);
inline jule::Str _1b7330c18_toStr(jule::Ptr<_1b2ae7c21_BraceLit> _20713_x);
inline jule::Str _1b73362a1_toStr(jule::Ptr<_1b2ae5cda_BinaryExpr> _20713_x);
inline jule::Str _1b747e8d3_toStr(jule::Ptr<_1b2bcd620_BinaryExprModel> _20713_x);
inline jule::Str _1b7625606_toStr(jule::Ptr<_1b2bd488a_BuiltinNewCallExprModel> _20713_x);
inline jule::Str _1b763aece_toStr(jule::Ptr<_1b2bd521a_BuiltinMakeCallExprModel> _20713_x);
inline jule::Str _1b76709e7_toStr(jule::Ptr<_1b2bd58e1_BuiltinLenCallExprModel> _20713_x);
inline jule::Str _1b768a66b_toStr(jule::Ptr<_1b2bd5bdd_BuiltinCapCallExprModel> _20713_x);
inline jule::Str _1b76d1b79_toStr(jule::Ptr<_1b2bd6b67_SizeofExprModel> _20713_x);
inline jule::Str _1b76daa2e_toStr(jule::Ptr<_1b2bd731b_AlignofExprModel> _20713_x);
inline jule::Str _1b7b472ba_toStr(jule::Str _20713_x);
inline jule::Str _1b7d0e8d3_toStr(jule::Ptr<_1b46d471d_ExceptionalForwardingExprModel> _20713_x);
inline jule::Str _1b7d468c6_toStr(jule::Ptr<_1b46d7006_StrRuneIter> _20713_x);
inline jule::Str _1b7d4e318_toStr(jule::Ptr<_1b46d5be7_MutSlicingExprModel> _20713_x);
inline jule::Str _1b7d743d7_toStr(jule::Ptr<_1b46d6b2c_AppendToSliceExprModel> _20713_x);
inline jule::Str _1b7d76818_toStr(jule::Ptr<_1b46d6753_PushToSliceExprModel> _20713_x);
inline jule::Str _1b7d847e3_toStr(jule::Ptr<_1b46d4993_SwapExprModel> _20713_x);
inline jule::Str _1b7dc2369_toStr(jule::Ptr<_1b46d4d6c_EmptyCompareExprModel> _20713_x);
inline jule::Str _1b7dc4beb_toStr(jule::Ptr<_1b46d5664_StrCompExprModel> _20713_x);
inline jule::Str _1b7e0d1da_toStr(jule::Ptr<_1b46d5ee4_UnsafeBinaryExprModel> _20713_x);
inline jule::Str _1b7e16589_toStr(jule::Ptr<_1b46d7303_UnsafeDerefExprModel> _20713_x);
inline jule::Str _1b7e1cded_toStr(jule::Ptr<_1b46d51e1_RefExprModel> _20713_x);
inline jule::Str _1b7e22496_toStr(jule::Ptr<_1b2bce027_StructArgExprModel> _20713_x);
inline jule::Str _1b7e28c61_toStr(jule::Ptr<_1b46d7600_UnsafeCastingExprModel> _20713_x);
inline jule::Str _1b7e37ac7_toStr(jule::Ptr<_1b46d6379_UnsafeIndexingExprModel> _20713_x);
inline jule::Str _1b84a1508_toStr(jule::Ptr<jule::Str> _20713_x);
inline jule::Str _1b8735616_toStr(_20d8ca601_Builder _20713_x);
inline jule::Str _1b8741e5d_toStr(jule::Slice<jule::U8> _20713_x);
inline jule::Str _1b873973b_toStr(jule::Str _20713_x);
inline jule::Str _1b8748e87_toStr(jule::Str _20713_x);
inline void _227e8e816_rev(jule::Slice<jule::U8> _26012_b);
inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen);
inline void _22809ae50_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Slice<jule::Str> _22809b428_args(void);
inline jule::I64 _22809b9de_strlen(jule::U8* _3122_p);
inline jule::Bool _22809cd0e__coSpawn(void* _1520_func, void* _1535_args);
inline jule::U64 _228104063_hash128to64(_228103bab_u128 _4316_sum);
inline jule::U64 _228104371_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _22810463a_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _22810497b_shiftMix(jule::U64 _5513_z);
inline jule::U64 _228104cbc_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _228105141_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _228105570_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _228105a04_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n);
inline _228103bab_u128 _228105dab_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _228103bab_u128 _10342_seed);
inline _228103bab_u128 _22810650a_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _228103bab_u128 _228106939_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _228103bab_u128 _228106d68_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _228103bab_u128 _16048_seed);
inline jule::U64 _228107132_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _20c55c99e_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _20c55ccac_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _20c55d076_nextMatch(jule::U64* _6419_b);
inline jule::U64 _20c55d3b7_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _20c55d64d_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I64 _20c55d917_numGroups(jule::I64 _7914_n);
inline jule::Array<jule::I8,8> _20c55db26_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _20c55e000_splitHash(jule::U64 _9414_h);
inline jule::U32 _20c55e2ec_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups);
inline jule::U32 _20c55e671_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline jule::I64 _20c586d2a_getLastOsError(void);
inline jule::Slice<jule::Str> _20c58ac74_Args(void);
inline jule::Exceptional<jule::Str> _20c58b26e_WorkingDir(void);
inline jule::Exceptional<jule::Str> _20c58bbcb_getwd(void);
inline jule::I64 _20c7d1cab_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _20c7d23d8_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _20c7d275c_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Bool _20d84e60d_IsLetter(jule::I32 _7613_r);
inline jule::Bool _20d8b5223_is16(jule::Slice<_20d8b3485_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _20d8b5597_is32(jule::Slice<_20d8b39b3_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _20d8b5da0_isExcludingLatin(jule::Ptr<_20d8b3e36_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _20d8b60e2_IsUpper(jule::I32 _29512_r);
inline jule::I32 _20d8b67da_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_20d8b2ece_CaseRange> _31336_cr);
inline jule::Ptr<_20d8b2ece_CaseRange> _20d8b6b5e_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_20d8b2ece_CaseRange> _33329_caseRange);
inline jule::I32 _20d8b6e28_SimpleFold(jule::I32 _37015_r);
inline jule::Str _20d8b7302_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _20d8b7665_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _20d8b79d9_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _20d8b7e90_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _20d8b82d1_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _20d8b8710_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _20d8b8a84_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _20d8ba36b_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _20d8ba6e0_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _20d8bb119_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _20d8bb7ac_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Bool _20d8bbb31_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _20d8bc69d_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I64 _20d8bca22_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _20d8bd00b_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n);
inline jule::Str _20d8bdc87_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _20d8be10b_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _20d8be480_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Str _20d8be804_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep);
inline jule::Bool _227d31ed3_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Str _227d33655_Clean(jule::Str _10914_path);
inline jule::Str _227d33c2c_FromSlash(jule::Str _21214_path);
inline jule::Str _227d3406d_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _227d34304_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _227d345bd_Abs(jule::Str _2468_path);
inline jule::Str _227d34887_Base(jule::Str _25213_path);
inline jule::Str _227d34c61_Dir(jule::Str _2838_path);
inline jule::Str _227d34ea3_VolumeName(jule::Str _30115_path);
inline jule::Bool _227d35d3e_IsPathSep(jule::U8 _4814_c);
inline jule::Bool _227d3614c_IsAbs(jule::Str _5310_path);
inline jule::I64 _227d36416_volumeNameLen(jule::Str _5918_path);
inline __jule_tuple_str__jule_tuple_bool _227d36757_abs(jule::Str _638_path);
inline jule::Str _227d369dd_join(jule::Slice<jule::Str> _739_elem);
inline jule::I64 _20c6470d8_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _20dbaa2a4_AtoiBp(jule::U8* _722_b, jule::I64 _736_n);
inline jule::Str _20dbb37eb_Itoa(jule::I64 _89_x);
inline jule::Str _20dbb3b09_Utoa(jule::U64 _1613_x);
inline void _20dbb3d3a_rev(jule::Slice<jule::U8>* _3513_b);
inline jule::Slice<char*> _20dbb79ba_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs);
inline jule::I64 _20dbb7d3e_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv);
inline jule::VoidExceptional _20dbb8070_setenv(jule::Slice<jule::Str>* _5712_envv);
inline jule::I64 _20dbb9071_processErrorFromCode(jule::I64 _725_code);
inline jule::I64 _20dbb91e7_getLastProcessError(void);
inline void _20dbb98ac_Exit(jule::I64 _109_code);
inline jule::Str _20dbb9b21_Executable(void);
inline jule::Bool _20da98846_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _20da98b21_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _20da98dda_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _20daa6403_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args);
inline jule::Str _20daa6711_argToStr(jule::Any _32813_arg);
inline jule::I64 _20daa69ca_findNextFmt(jule::Str _34116_fmt);
inline jule::Str _20daa6d93_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args);
inline jule::Bool _20daa7c95_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _20daa91b4_IsWindows(jule::Str _3714_os);
inline jule::Bool _20daa94c2_IsDarwin(jule::Str _4013_os);
inline jule::Bool _20daa978b_IsLinux(jule::Str _4312_os);
inline jule::Bool _20daa9acc_IsI386(jule::Str _4611_arch);
inline jule::Bool _20daa9d63_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _20daaa12c_IsArm64(jule::Str _5212_arch);
inline jule::Bool _20daaa3e6_IsUnix(jule::Str _5511_os);
inline jule::Bool _20daaa7c0_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _20daaaa12_Is64Bit(jule::Str _6112_arch);
inline void _20dbbaced_init(void);
inline jule::U32 _1ca964756_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1ca964a64_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1ca964d2d_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1ca96516e_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1ca9676d2_Frexp(jule::F64 _4714_f);
inline jule::F64 _1ca96cb49_NaN(void);
inline jule::Bool _1ca96ce57_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1ca96d221_Inf(jule::I64 _618_sign);
inline jule::Bool _1ca96d5d9_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1ca96d8a3_normalize(jule::F64 _8214_x);
inline jule::F64 _1ca970377_Log(jule::F64 _1118_x);
inline jule::F64 _1ca970c5c_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1caad818d_Modf(jule::F64 _449_f);
inline jule::F64 _1caad8996_Log2(jule::F64 _449_x);
inline jule::Str _1cab12580_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1cab12b68_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1cab13372_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1cab113c5_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1cab13a48_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1cab11eec_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1cab13e66_roundShortest(_1cab24a8c_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1cab113c5_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1cab1450a_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1cab11eec_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1cab149e4_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1cab11eec_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1cab15198_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1cab113c5_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1cab1582a_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1cab113c5_floatInfo* _51232_flt);
inline jule::I64 _1cab15b9e_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1cab16023_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1cab16bb1_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__20d722dc7_ConvError _1cab17134_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1cab17563_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1cab17a19_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1cab186c9_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1cab18a92_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1cab1a7b9_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1cab1aac7_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1cab1ad91_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1cab1c8dc_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1cab1cd1b_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__20d722dc7_ConvError _1cab1d3b0_atofHex(_1cab113c5_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__20d722dc7_ConvError _1cab1d789_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20d722dc7_ConvError _1cab1d9cb_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20d722dc7_ConvError _1cab1dd50_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1cab1e1c4_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1cab1e9ee_ryuFtoaFixed32(_1cab11eec_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1cab1ee94_ryuFtoaFixed64(_1cab11eec_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1cab207d0_formatDecimal(_1cab11eec_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1cab20ca8_ryuFtoaShortest(_1cab11eec_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1cab113c5_floatInfo* _26168_flt);
inline jule::I64 _1cab2103e_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1cab21308_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1cab21737_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1cab113c5_floatInfo* _3963_flt);
inline void _1cab21d86_ryuDigits(_1cab11eec_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1cab22507_ryuDigits32(_1cab11eec_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1cab22936_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1cab22d65_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1cab231d9_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1cab234a3_divmod1e9(jule::U64 _60214_x);
inline void _1cab263da_trim(_1cab24a8c_decimal* _27414_a);
inline void _1cab266c6_rightShift(_1cab24a8c_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1cab26b7c_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1cab26e35_leftShift(_1cab24a8c_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1cab272a9_shouldRoundUp(_1cab24a8c_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1cab28981_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1cab28d49_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1cab29113_Itoa(jule::I64 _819_i);
inline jule::Str _1cab29454_small(jule::I64 _8610_i);
inline jule::Bool _1cab296da_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1cab29c7e_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline void _1cab2b632_Throw(jule::Str _910_msg);
inline jule::Bool _1b2ac8707_IsUnaryOp(jule::U64 _33314_id);
inline jule::Bool _1b2ac8a15_IsBinOp(jule::U64 _34312_id);
inline jule::Bool _1b2ac9120_IsStr(jule::Str _36310_k);
inline jule::Bool _1b2ac93a6_IsRawStr(jule::Str _36613_k);
inline jule::Bool _1b2ac9670_IsRune(jule::Str _37011_k);
inline jule::Bool _1b2aca055_IsFloat(jule::Str _37912_k);
inline jule::Bool _1b2aca31e_IsNum(jule::Str _38710_k);
inline jule::Bool _1b2aca8a2_IsIgnoreIdent(jule::Str _40218_ident);
inline jule::Bool _1b2acab6b_IsAnonIdent(jule::Str _40516_ident);
inline jule::Bool _1b2acb1ee_IsSpace(jule::I32 _41812_r);
inline jule::Bool _1b2acb6e9_IsLetter(jule::I32 _42813_r);
inline jule::Bool _1b2acbb6c_IsKeyword(jule::Str _44814_s);
inline jule::Bool _1b2acbe36_IsDecimal(jule::U8 _45814_b);
inline jule::Bool _1b2acc200_IsBinary(jule::U8 _46113_b);
inline jule::Bool _1b2acc4b9_IsOctal(jule::U8 _46412_b);
inline jule::Bool _1b2acc783_IsHex(jule::U8 _46710_b);
inline jule::Bool _1b2acca4c_IsAssign(jule::U64 _48213_id);
inline jule::Bool _1b2accd16_IsPostfixOp(jule::U64 _49416_id);
inline jule::Bool _1b2acd0d0_IsAssignOp(jule::U64 _50415_id);
inline _20daa5e91_Log _1b2ad1622_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1b2acd872_Fileset>* _10033_f, jule::Str _10046_fmt, jule::Slice<jule::Any> _10066_args);
inline jule::Bool _1b2ad19da_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1b2ad1d5e_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i);
inline jule::Str _1b2ad2227_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i);
inline jule::Str _1b2ad259b_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i);
inline jule::Str _1b2ad2920_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i);
inline jule::Str _1b2ad2c94_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i);
inline jule::Str _1b2ad3228_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i);
inline jule::Str _1b2ad346a_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1b2ad3734_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1b2ad3aa8_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i);
inline jule::Bool _1b2ad3e2c_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i);
inline jule::Bool _1b2ad42a1_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i);
inline jule::Bool _1b2ad4625_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i);
inline jule::Bool _1b2ad4999_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i);
inline jule::Str _1b2ad4e94_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1b2ad5170_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1b2ad54c2_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n);
inline jule::Str _1b2ad578b_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1b2ad5a55_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1b2ad5d1e_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1b2ad60d8_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_20daa5e91_Log> _1b2adb0cc_Lex(jule::Ptr<_1b2acd872_Fileset> _80612_f, jule::I64 _80625_mode);
inline void _1b2bcac9e_lshiftUnsig(_1b2b6c23a_Const* _58821_c, _1b2b6c23a_Const* _58832_x);
inline void _1b2bcb0ce_rshiftUnsig(_1b2b6c23a_Const* _59421_c, _1b2b6c23a_Const* _59432_x);
inline jule::Str _1b2c6bd1d_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1b2c6c0d7_BitSizeOf(jule::Str _5914_k);
inline jule::Str _1b2c6c428_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1b2c6c6ae_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1b2c6c978_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1b2c6d57d_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1b2c6d847_BitSizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1b2c6db11_BitSizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1b2c6ddca_BitSizeOfUint(jule::U64 _19718_x);
inline void _1b2c6e073_UpdateTarget(void);
inline void _1b2c6e1e9_init(void);
inline jule::I64 _1b2c72cad_MinI(jule::Str _6113_k);
inline jule::I64 _1b2c730bb_MaxI(jule::Str _7913_k);
inline jule::U64 _1b2c73385_MaxU(jule::Str _9713_k);
inline jule::F64 _1b2c736c6_Min(jule::Str _11512_k);
inline jule::F64 _1b2c7395c_Max(jule::Str _13312_k);
inline jule::Bool _1b2c74a7e_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1b2c74d8c_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1b2c75156_IsInt(jule::Str _4610_k);
inline jule::Bool _1b2c75497_IsFloat(jule::Str _5112_k);
inline jule::Bool _1b2c7572d_IsNum(jule::Str _5610_k);
inline jule::Bool _1b2c759e7_IsSigNum(jule::Str _6113_k);
inline jule::Bool _1b2cee422_FindModuleFile(jule::Slice<jule::Ptr<_20c648c55_DirEntry>>* _1320_dirents);
inline jule::Str _1b2cee730_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_20daa5e91_Log> _1b2cee9e9_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1b2d0029c_IsPub(jule::Str _910_ident);
inline jule::Bool _1b2d60c03_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1b2d47e3d_ToRune(jule::Str _2015_lit);
inline jule::Str _1b2d62a3a_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1b2d62d7b_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1b2d63112_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1b2d63486_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1b2d6382c_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1b2e2b8b2_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i);
inline jule::Slice<jule::U8> _1b2e32ed4_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1b2e332c0_FmtByDefault(_20d8ca601_Builder* _4822_buf, jule::Any* _4846_arg);
inline void _1b2e336dd_applyFmtByDefault(_20d8ca601_Builder* _8727_buf, jule::I64* _8755_j, jule::Slice<jule::Any> _8763_args);
inline void _1b2e33b0b_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _20d8ca601_Builder* _9536_buf, jule::I64* _9564_j, jule::Slice<jule::Any> _9572_args);
inline jule::Slice<jule::U8> _1b2e33e80_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1b2e90c12_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1b2bda9b2_Fn> _1b27811e5_runtimeFindFn(jule::Ptr<_1b2cd4e1e_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1b2b0db6b_Struct> _1b2781745_runtimeFindStruct(jule::Ptr<_1b2cd4e1e_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1b2be0d4c_parameterUsesGenerics(jule::Ptr<_1b2bdc91a_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>* _39546_generics);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c9a786_buildAsComptimeMethodData(jule::Ptr<_1b2bdda70_FnIns>* _203035_f);
inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2c9a995_findComptimePackage(jule::Ptr<_1b2d03091_sema>* _203829_s);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c9ad19_buildComptimeTypeInfoData(jule::Ptr<_1b2d03091_sema>* _204435_s, jule::Ptr<_1b2db1627_TypeKind>* _204450_t);
inline jule::Ptr<_1b2d7dc21_Data> _1b2c9b15a_buildComptimeValue(jule::Ptr<_1b2d7dc21_Data>* _205228_d);
inline jule::Str _1b2c9de82_toStrConstraints(jule::Ptr<_1b2daee72_InsGeneric> _14321_g);
inline jule::Bool _1b2c9e34a_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1b2db1627_TypeKind>* _15434_g);
inline jule::Bool _1b2c9e614_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1b2cab830_scopeChecker> _1b2ca1eeb_newScopeCheckerBase(jule::Ptr<_1b2d03091_sema>* _3229_s, jule::Ptr<_1b2bdda70_FnIns> _3243_owner);
inline jule::Ptr<_1b2cab830_scopeChecker> _1b2ca23b4_newScopeChecker(jule::Ptr<_1b2d03091_sema>* _4025_s, jule::Ptr<_1b2bdda70_FnIns> _4039_owner);
inline jule::Ptr<_1b2caa840_scopeLabel> _1b2ca2738_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1b2cab830_scopeChecker> _5037_scope);
inline jule::Slice<jule::Ptr<_1b2d7dc21_Data>> _1b2ca2a79_getDatasFromTupleData(jule::Ptr<_1b2d7dc21_Data>* _6231_d);
inline jule::Bool _1b2ca32e9_checkMut(jule::Ptr<_1b2d03091_sema>* _9718_s, jule::Ptr<_1b2d7dc21_Data>* _9729_left, jule::Ptr<_1b2d7dc21_Data> _9746_right, jule::Ptr<_1b2ac7eba_Token> _9760_op);
inline jule::Bool _1b2ca37d3_checkAssign(jule::Ptr<_1b2d03091_sema>* _11621_s, jule::Ptr<_1b2d7dc21_Data>* _11636_left, jule::Ptr<_1b2d7dc21_Data> _11653_right, jule::Ptr<_1b2ac7eba_Token> _11667_op);
inline jule::Bool _1b2ca3bac_isValidAstStForNextSt(jule::Any* _13831_n);
inline jule::Bool _1b2ca3dee_isValidStForNextSt(jule::Any* _14924_st);
inline jule::U64 _1b2cbe07e_removeEqFromOp(jule::U64 _214019_op);
inline void _1b2cbe2b0_makeComptimeRange(jule::Ptr<_1b2d7dc21_Data>* _216927_d);
inline jule::Bool _1b2cbe579_canComptimeMatch(jule::Ptr<_1b2d7dc21_Data>* _219226_d);
inline jule::Bool _1b2cbe843_stmtIsDef(jule::Any* _220015_stmt);
inline jule::I64 _1b2cbebb7_countMatchType(jule::Ptr<_1b2ca8cc2_Match>* _221220_m, jule::Ptr<_1b2db1627_TypeKind>* _221232_t);
inline jule::Ptr<_1b2db8d38_TypeSymbol> _1b2cc476b_buildType(jule::Ptr<_1b2add3dc_TypeDecl> _6818_t);
inline jule::Ptr<_1b2d7ed98_Value> _1b2cc4a79_buildExpr(jule::Ptr<_1b2ae2721_Expr> _7718_expr);
inline jule::Ptr<_1b2db0835_TypeAlias> _1b2cc4d43_buildTypeAlias(jule::Ptr<_1b2b04e09_TypeAliasDecl> _8623_decl);
inline jule::Ptr<_1b2b0ac78_Field> _1b2cc5184_buildField(jule::Ptr<_1b2b08528_FieldDecl> _9719_decl);
inline jule::Slice<jule::Ptr<_1b2b0ac78_Field>> _1b2cc541a_buildFields(jule::Slice<jule::Ptr<_1b2b08528_FieldDecl>>* _10821_decls);
inline jule::Ptr<_1b2b0db6b_Struct> _1b2cc56d4_buildStruct(jule::Ptr<_1b2b08e1e_StructDecl> _11620_decl);
inline jule::Ptr<_1b2bd8edd_Param> _1b2cc599d_buildParam(jule::Ptr<_1b2aedb4a_ParamDecl> _12819_decl);
inline jule::Slice<jule::Ptr<_1b2bd8edd_Param>> _1b2cc5d77_buildParams(jule::Slice<jule::Ptr<_1b2aedb4a_ParamDecl>>* _13921_decls);
inline jule::Ptr<_1b2bd876d_RetType> _1b2cc60b9_buildRetType(jule::Ptr<_1b2ae12d0_RetTypeDecl> _14721_decl);
inline jule::Ptr<_1b2bda9b2_Fn> _1b2cc6383_buildFunc(jule::Ptr<_1b2b0009c_FnDecl> _15718_decl);
inline jule::Slice<jule::Ptr<_1b2bda9b2_Fn>> _1b2cc664c_buildMethods(jule::Slice<jule::Ptr<_1b2b0009c_FnDecl>>* _17522_decls);
inline jule::Slice<jule::Ptr<_1b2db8d38_TypeSymbol>> _1b2cc6916_buildTraitInherits(jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>* _18328_inherits);
inline jule::Ptr<_1b2be61c6_Trait> _1b2cc6bd0_buildTrait(jule::Ptr<_1b2b0965b_TraitDecl> _19119_decl);
inline jule::Ptr<_1b2be7d32_EnumItem> _1b2cc6e99_buildEnumItem(jule::Ptr<_1b2b06713_EnumItemDecl> _20122_decl);
inline jule::Slice<jule::Ptr<_1b2be7d32_EnumItem>> _1b2cc7263_buildEnumItems(jule::Slice<jule::Ptr<_1b2b06713_EnumItemDecl>>* _20924_decls);
inline jule::Ptr<_1b2be887c_Enum> _1b2cc775d_buildEnum(jule::Ptr<_1b2b072c4_EnumDecl> _21718_decl);
inline jule::Ptr<_1b2be99b0_TypeEnumItem> _1b2cc7939_buildTypeEnumItem(jule::Ptr<_1b2b07aee_TypeEnumItemDecl> _22726_decl);
inline jule::Slice<jule::Ptr<_1b2be99b0_TypeEnumItem>> _1b2cc7bd1_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b2b07aee_TypeEnumItemDecl>>* _23528_decls);
inline jule::Ptr<_1b2bea087_TypeEnum> _1b2cc7e9a_buildTypeEnum(jule::Ptr<_1b2b0825e_TypeEnumDecl> _24322_decl);
inline jule::Ptr<_1b2d26ca7_Var> _1b2cc8264_buildVar(jule::Ptr<_1b2b01257_VarDecl> _25217_decl);
inline jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _1b2cc852d_buildVars(jule::Slice<jule::Ptr<_1b2b01257_VarDecl>> _26918_decls);
inline jule::Ptr<_1b2c9ee83_Impl> _1b2cc87e7_buildImpl(jule::Ptr<_1b2b09cbb_Impl> _27718_decl);
inline jule::Bool _1b2cd0117_isImplicitImport(jule::Ptr<_1b2cd4e1e_ImportInfo> _79021_imp);
inline jule::Ptr<_1b2be1cb5_SymTab> _1b2cd225c_findVarFileInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _4430_files, jule::Ptr<_1b2d26ca7_Var>* _4449_v);
inline jule::Ptr<_1b2d26ca7_Var> _1b2cd26d0_findVarInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded);
inline jule::Ptr<_1b2db0835_TypeAlias> _1b2cd2b0e_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded);
inline jule::Ptr<_1b2b0db6b_Struct> _1b2cd30b5_findStructInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded);
inline jule::Ptr<_1b2bda9b2_Fn> _1b2cd34b1_findFnInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded);
inline jule::Ptr<_1b2be61c6_Trait> _1b2cd3835_findTraitInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _10328_files, jule::Str* _10347_ident);
inline jule::Ptr<_1b2be887c_Enum> _1b2cd3ba9_findEnumInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _11527_files, jule::Str* _11546_ident);
inline jule::Ptr<_1b2bea087_TypeEnum> _1b2cd413d_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _12731_files, jule::Str* _12750_ident);
inline jule::Bool _1b2cd9b6b_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p);
inline jule::Bool _1b2d00951_isValidModelForRef(jule::Any* _1428_m);
inline _20daa5e91_Log _1b2d00e7e_compilerErr(jule::Ptr<_1b2ac7eba_Token>* _4817_token, jule::Bool _4839_line, jule::Str _4851_fmt, jule::Slice<jule::Any> _4871_args);
inline void _1b2d0126a_appendRetVars(jule::Slice<jule::Ptr<_1b2d26ca7_Var>>* _6223_dest, jule::Ptr<_1b2bdda70_FnIns>* _6242_f);
inline void _1b2d0159a_appendParamVars(jule::Slice<jule::Ptr<_1b2d26ca7_Var>>* _9225_dest, jule::Ptr<_1b2bdda70_FnIns>* _9244_f);
inline void _1b2d01886_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>* _15234_dest, jule::Ptr<_1b2bdda70_FnIns>* _15259_f);
inline jule::Ptr<_1b2be1cb5_SymTab> _1b2d01c0a_findFile(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _19318_files, jule::Ptr<_1b2acd872_Fileset>* _19337_handler);
inline void _1b2d020a1_pushSuggestion(_20daa5e91_Log* _20230_log, jule::Str _20248_fmt, jule::Slice<jule::Any> _20268_args);
inline void _1b2d24c0b_pushImplemented(jule::Ptr<_1b2be61c6_Trait> _280124_t, jule::Ptr<_1b2b0db6b_Struct>* _280140_d);
inline void _1b2d24ee7_pushImplements(jule::Ptr<_1b2b0db6b_Struct>* _281924_s, jule::Ptr<_1b2be61c6_Trait> _281940_t);
inline void _1b2d25448_pushRuntimeToStr(jule::Ptr<_1b2d03091_sema>* _283726_s, jule::Ptr<_1b2db1627_TypeKind>* _283741_t, jule::Ptr<_1b2ac7eba_Token>* _283760_token, jule::Ptr<_1b2cc3094_ReferenceStack> _28386_refers);
inline jule::Bool _1b2d25712_isValidImpAlias(jule::Str _285524_alias);
inline jule::Bool _1b2d63e7b_traitHasReferenceReceiver(jule::Ptr<_1b2be61c6_Trait>* _1631_t);
inline jule::Bool _1b2d64344_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1b2d7dc21_Data>* _3133_d);
inline jule::Bool _1b2d646b8_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1b2d7dc21_Data>* _3630_d);
inline jule::Bool _1b2d64a81_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1b2d7dc21_Data>* _5932_d);
inline jule::Bool _1b2d64e05_intAssignable(jule::Str _8818_kind, jule::Ptr<_1b2d7dc21_Data>* _8830_d);
inline void _1b2d76257_checkMutRiskOfStructLit(jule::Ptr<_1b2d03091_sema>* _90933_s, jule::Ptr<_1b2bce3bd_StructLitExprModel>* _90944_m);
inline jule::Ptr<_1b2db1627_TypeKind> _1b2d7c093_lenKind(void);
inline jule::Bool _1b2d7c3e5_isGoodValueToInfer(jule::Ptr<_1b2d7dc21_Data>* _141424_d);
inline jule::Ptr<_1b2adc809_Directive> _1b2da8223_findDirective(jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _435323_directives, jule::Str _435354_d);
inline jule::Any _1b2da85db_findBuiltinsImport(jule::Str* _436224_ident, jule::Ptr<_1b2cd4e1e_ImportInfo> _436236_imp);
inline void _1b2da881c_fitBitsize(jule::Ptr<_1b2d7dc21_Data>* _437120_d);
inline void _1b2da8b4c_makeStructLitAlloc(jule::Ptr<_1b2d7dc21_Data>* _440028_d, jule::Ptr<_1b2bce3bd_StructLitExprModel>* _440043_lit);
inline jule::Ptr<_1b2d26ca7_Var> _1b2da8ec1_buildErrorVar(jule::Ptr<_1b2ca4592_Scope>* _441123_s, jule::Ptr<_1b2ae644a_FnCallExpr>* _441139_fc);
inline jule::Any _1b2da9345_findBuiltinsSema(jule::Str* _442622_ident, jule::Ptr<_1b2d03091_sema> _442638_s);
inline jule::Bool _1b2da960e_isOkForShifting(jule::Ptr<_1b2d7dc21_Data>* _444125_d);
inline jule::Bool _1b2da99d8_isInstancedStruct(jule::Ptr<_1b2b119c6_StructIns> _445822_s);
inline jule::Bool _1b2da9cd5_isPtrArithmeticCompatible(jule::Ptr<_1b2d7dc21_Data>* _446235_l, jule::Ptr<_1b2d7dc21_Data>* _446250_r);
inline void _1b2daa2e1_applyRuntimeToStr(jule::Ptr<_1b2d03091_sema>* _448327_s, jule::Ptr<_1b2db1627_TypeKind>* _448342_from, jule::Ptr<_1b2db1627_TypeKind>* _448364_to, jule::Ptr<_1b2ac7eba_Token>* _44847_token, jule::Ptr<_1b2cc3094_ReferenceStack> _448433_refers);
inline void _1b2daa7ec_applyCastKindModel(jule::Ptr<_1b2d03091_sema>* _449828_s, jule::Ptr<_1b2d7dc21_Data>* _449843_d, jule::Ptr<_1b2db1627_TypeKind>* _449858_t, jule::Ptr<_1b2ac7eba_Token>* _44997_token, jule::Ptr<_1b2cc3094_ReferenceStack> _449933_refers);
inline void _1b2daad08_applyCastKind(jule::Ptr<_1b2d03091_sema>* _450923_s, jule::Ptr<_1b2d7dc21_Data>* _450938_d, jule::Ptr<_1b2db1627_TypeKind>* _450953_t, jule::Ptr<_1b2ac7eba_Token>* _45107_token, jule::Ptr<_1b2cc3094_ReferenceStack> _451033_refers);
inline jule::Ptr<_1b2d7dc21_Data> _1b2dab017_buildVoidData(void);
inline jule::Str _1b2dab501_checkDataForIntegerIndexing(jule::Ptr<_1b2d03091_sema>* _452137_s, jule::Ptr<_1b2d7dc21_Data>* _452152_d, jule::Ptr<_1b2ac7eba_Token>* _45227_token, jule::Ptr<_1b2cc3094_ReferenceStack> _452233_refers);
inline void _1b2daba0c_applyCastModelByEnum(jule::Ptr<_1b2d03091_sema>* _454730_s, jule::Ptr<_1b2d7dc21_Data>* _454745_d, jule::Ptr<_1b2be887c_Enum> _454759_e, jule::Ptr<_1b2ac7eba_Token>* _45487_token, jule::Ptr<_1b2cc3094_ReferenceStack> _454833_refers);
inline void _1b2dac029_castConstByType(jule::Str* _455521_t, jule::Ptr<_1b2d7dc21_Data>* _455534_d);
inline void _1b2dac205_updateModelToGenericIns(jule::Any* _458933_m, jule::Ptr<_1b2bdda70_FnIns>* _458952_f);
inline jule::Bool _1b2dac579_pushSubIdentFromExpr(jule::Any _460029_expr, jule::Ptr<_1b2addcb1_SubIdentTypeDecl>* _460055_t);
inline jule::Str _1b2dac843_constoa(jule::Ptr<_1b2b6c23a_Const>* _462313_c);
inline jule::Ptr<_1b2d7dc21_Data> _1b2dacdd7_evalEnumStatic(jule::Ptr<_1b2d03091_sema>* _463424_s, jule::Ptr<_1b2be887c_Enum>* _463439_enm, jule::Ptr<_1b2be7d32_EnumItem>* _463456_item, jule::Ptr<_1b2ac7eba_Token>* _46357_token, jule::Ptr<_1b2cc3094_ReferenceStack> _463533_refers);
inline jule::Ptr<_1b2bce3bd_StructLitExprModel> _1b2dad1a1_isLitBased(jule::Any* _465220_m);
inline void _1b2dad48c_makeImplicitDeref(jule::Ptr<_1b2d7dc21_Data>* _466927_d, jule::Ptr<_1b2ac7eba_Token> _466941_baseToken);
inline void _1b7138cc9_updateRefer(jule::Ptr<_1b2cc3094_ReferenceStack> _468023_ref, jule::Ptr<_1b2bdda70_FnIns>* _468046_old, jule::Ptr<_1b2bdda70_FnIns>* _468059_new);
inline void _1b2dadb1e_makeVariadic(jule::Ptr<_1b2d7dc21_Data>* _468822_d, jule::Ptr<_1b2db1627_TypeKind> _468836_elem);
inline jule::Bool _1b2dae04d_isVarCaptured(jule::Ptr<_1b2cab830_scopeChecker> _470218_r, jule::Ptr<_1b2cab830_scopeChecker> _470240_s, jule::Ptr<_1b2d26ca7_Var> _470258_v);
inline jule::Bool _1b2dcc7ca_kindUsesGenerics(jule::Ptr<_1b2db1627_TypeKind>* _173426_k, jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>* _173441_generics);
inline jule::Bool _1b2dccb93_hasDirective(jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _174422_directives, jule::Str _174453_tag);
inline jule::Bool _1b2dcce5c_canGetPtr(jule::Ptr<_1b2d7dc21_Data>* _175319_d);
inline jule::Bool _1b2dcd29d_isValidForSptrType(jule::Ptr<_1b2db1627_TypeKind>* _175628_t);
inline jule::Bool _1b2dcd534_isValidForRef(jule::Ptr<_1b2db1627_TypeKind>* _176523_t);
inline jule::Bool _1b2dcd7ed_isBuiltinStrConvertable(jule::Ptr<_1b2db1627_TypeKind>* _176833_t);
inline jule::Ptr<_1b2db9740_Prim> _1b2dcdab7_buildPrimType(jule::Str _177218_kind);
inline void _1b2dce425_applyImplicitCast(jule::Ptr<_1b2d03091_sema>* _180027_s, jule::Ptr<_1b2db1627_TypeKind>* _180042_dest, jule::Ptr<_1b2d7dc21_Data>* _180064_d, jule::Ptr<_1b2ac7eba_Token>* _18017_token, jule::Ptr<_1b2cc3094_ReferenceStack> _180133_refers);
inline jule::Bool _1b2dce6de_validTypeForXof(jule::Ptr<_1b2db1627_TypeKind>* _182925_t);
inline __jule_tuple_x_1b2be1cb5_SymTab__jule_tuple_s_20daa5e91_Log _1b2dd26e2_buildSymbols(jule::Ptr<_1b2adb52d_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1b2cc8dad_symBuilder> _1667_owner);
inline void _1b2dd2a22_collectImplicitImports(jule::Ptr<_1b2d03091_sema>* _3132_s, jule::Ptr<_1b2be1cb5_SymTab>* _3147_file);
inline __jule_tuple_x_1b2cd7691_Package__jule_tuple_s_20daa5e91_Log _1b2dd2e51_analyzePackage(jule::Slice<jule::Ptr<_1b2adb52d_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I64* _4570_flags);
inline __jule_tuple_x_1b2cd7691_Package__jule_tuple_s_20daa5e91_Log _1b2dd3407_AnalyzePackage(jule::Slice<jule::Ptr<_1b2adb52d_AST>> _9523_files, jule::Trait _9547_importer, jule::I64 _9567_flags);
inline jule::Ptr<_1b2bdda70_FnIns> _1b2e91680_findBuiltinFunc(jule::Str* _2021_ident);
inline jule::Ptr<_1b2db0835_TypeAlias> _1b2e9195a_primTypeAlias(jule::Ptr<_1b2db1627_TypeKind>* _5723_k);
inline jule::Ptr<_1b2d26ca7_Var> _1b2e95310_findBuiltinVar(jule::Str* _8520_ident);
inline jule::Ptr<_1b2db0835_TypeAlias> _1b2e95651_findBuiltinTypeAlias(jule::Str _13325_ident);
inline jule::Any _1b2e958d7_findBuiltinDef(jule::Str* _18820_ident);
inline jule::Any _1b2e95ba1_findBuiltinDefStdDebug(jule::Str* _20428_ident);
inline jule::Any _1b2e95e6a_findBuiltinDefStdMem(jule::Str* _21726_ident);
inline jule::Any _1b2e96344_findBuiltinDefStdComptime(jule::Str* _23331_ident);
inline jule::Any _1b2e96586_findBuiltinDefStdJuleIntegrated(jule::Str* _25837_ident);
inline jule::Any _1b2e9690a_findPackageBuiltinDef(jule::Str* _27327_linkPath, jule::Str* _27343_ident);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e96c7e_builtinCallerError(jule::Ptr<_1b2d80948_eval>* _28828_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _28843_fc);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e971ad_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _31926_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _31941_fc, jule::Ptr<_1b2d7dc21_Data>* );
inline jule::Ptr<_1b2d7dc21_Data> _1b2e975dc_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _34628_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _34643_fc, jule::Ptr<_1b2d7dc21_Data>* _34670_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e97a1b_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _35826_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _35841_fc, jule::Ptr<_1b2d7dc21_Data>* _35868_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e97e4a_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _42028_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _42043_fc, jule::Ptr<_1b2d7dc21_Data>* );
inline jule::Ptr<_1b2d7dc21_Data> _1b2e985aa_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _44627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _44642_fc, jule::Ptr<_1b2d7dc21_Data>* _44669_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e988c9_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _49729_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _49744_fc, jule::Ptr<_1b2d7dc21_Data>* _49771_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e98db3_callerCopySlice(jule::Ptr<_1b2d7dc21_Data>* _61725_dest, jule::Ptr<_1b2d80948_eval>* _61743_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _61758_fc, jule::Ptr<_1b2d7dc21_Data>* _61785_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e992e2_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _65127_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _65142_fc, jule::Ptr<_1b2d7dc21_Data>* _65169_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e99666_callerLenSlice(jule::Ptr<_1b2d7dc21_Data>* _67624_expr, jule::Ptr<_1b2d7dc21_Data>* _67642_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e999da_callerLenMap(jule::Ptr<_1b2d7dc21_Data>* _68422_expr, jule::Ptr<_1b2d7dc21_Data>* _68440_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e99d5e_callerLenArr(jule::Ptr<_1b2d7dc21_Data>* _69222_expr, jule::Ptr<_1b2d7dc21_Data>* _69240_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9a1d3_callerLenStr(jule::Ptr<_1b2d7dc21_Data>* _69922_expr, jule::Ptr<_1b2d7dc21_Data>* _69940_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9a557_callerLenComptime(jule::Ptr<_1b2d7dc21_Data>* _71227_d, jule::I64 _71237_n);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9a986_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _71926_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _71941_fc, jule::Ptr<_1b2d7dc21_Data>* _71968_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9ad0a_callerCapSlice(jule::Ptr<_1b2d7dc21_Data>* _75924_expr, jule::Ptr<_1b2d7dc21_Data>* _75942_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9b239_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _76726_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _76741_fc, jule::Ptr<_1b2d7dc21_Data>* _76768_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9b723_callerDeleteMap(jule::Ptr<_1b2d80948_eval>* _79025_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _79040_fc, jule::Ptr<_1b2d7dc21_Data>* _79067_expr, jule::Ptr<_1b2d7dc21_Data>* _79085_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9bb52_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _81929_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _81944_fc, jule::Ptr<_1b2d7dc21_Data>* _81971_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9c081_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _84240_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _84255_fc, jule::Ptr<_1b2d7dc21_Data>* );
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9c4b0_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _87841_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _87856_fc, jule::Ptr<_1b2d7dc21_Data>* );
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9cb31_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _89838_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _89853_fc, jule::Ptr<_1b2d7dc21_Data>* );
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9d060_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _91038_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _91053_fc, jule::Ptr<_1b2d7dc21_Data>* );
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9d48e_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _92339_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _92354_fc, jule::Ptr<_1b2d7dc21_Data>* );
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9d8bd_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _93643_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _93658_fc, jule::Ptr<_1b2d7dc21_Data>* );
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9dcec_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _99635_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _99650_fc, jule::Ptr<_1b2d7dc21_Data>* );
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9e22b_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _102136_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _102151_fc, jule::Ptr<_1b2d7dc21_Data>* );
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9e65a_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _104633_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _104648_fc, jule::Ptr<_1b2d7dc21_Data>* );
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9ea89_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _106944_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _106959_fc, jule::Ptr<_1b2d7dc21_Data>* _106986_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2e9eeb8_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _112034_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _112049_fc, jule::Ptr<_1b2d7dc21_Data>* _112076_d);
inline jule::Ptr<_1b2d7dc21_Data> _1b2ea03e7_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _112936_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _112951_fc, jule::Ptr<_1b2d7dc21_Data>* _112978_d);
inline jule::Ptr<_1b37ca35e_FileInfo> _1b37cd1a8_ParseFile(jule::Ptr<_1b2acd872_Fileset> _2318_f);
inline __jule_tuple_x_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log _1b382bcd9_parseFileset(jule::Ptr<_1b2acd872_Fileset> _5521_f);
inline jule::Ptr<_1b2aed40d_ScopeTree> _1b382c67a_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1b382c9ee_isSt(jule::Ptr<_1b2ac7eba_Token> _149_current, jule::Ptr<_1b2ac7eba_Token> _1433_prev);
inline jule::Bool _1b382cd73_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _2026_tokens, jule::I64* _2052_i);
inline __jule_tuple_int__jule_tuple_bool _1b382d23b_nextStPos(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _3315_tokens, jule::I64 _3340_start);
inline __jule_tuple_sx_1b2ac7eba_Token__jule_tuple_bool _1b382d5b0_skipSt(jule::I64* _9516_i, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _9528_tokens);
inline jule::Slice<jule::Ptr<_1b382d8e0_stmt>> _1b382dc97_splitStmts(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _11620_tokens);
inline jule::Bool _1b38472dd_isTypeOp(jule::U64* _87114_id);
inline jule::Bool _1b38475eb_isTypeRange(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _87821_tokens);
inline jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _1b38478b5_getBlockExpr(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _91122_tokens);
inline __jule_tuple_sx_1b2ac7eba_Token__jule_tuple_sx_1b2ac7eba_Token _1b3847c7d_splitDelim(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _94320_tokens, jule::U64 _94345_delim);
inline jule::I64 _1b3848047_findLowestPrecOp(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _98222_tokens);
inline jule::Ptr<_1b2ae403b_IdentExpr> _1b3848311_buildIdentExpr(jule::Ptr<_1b2ac7eba_Token>* _104724_token);
inline __jule_tuple_sx_1b2ac7eba_Token__jule_tuple_int _1b38485ca_getRangeExprTokens(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _105528_tokens);
inline jule::Bool _1b38489a4_isAnonFnHead(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _107818_tokens);
inline jule::Bool _1b3849653_checkAssignTokens(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _1623_tokens);
inline _20daa5e91_Log _1b384a621_makeErr(jule::I64 _1212_row, jule::I64 _1222_col, jule::Ptr<_1b2acd872_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args);
inline jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _1b384ab2c_range(jule::I64* _3015_i, jule::U64 _3023_open, jule::U64 _3040_close, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _3063_tokens);
inline __jule_tuple_sx_1b2ac7eba_Token__jule_tuple_sx_1b2ac7eba_Token _1b384ade6_rangeLast(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _6019_tokens);
inline __jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log _1b384b39c_parts(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _9815_tokens, jule::U64 _9840_id, jule::Bool _9855_exprMust);
inline jule::U64 _1b384b633_getCloseOfBrace(jule::U64 _12820_left);
inline _20daa5e91_Log _1b384ba62_compilerErr(jule::Ptr<_1b2ac7eba_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args);
inline void _1b384be08_pushSuggestion(_20daa5e91_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args);
inline jule::Ptr<_1b2add3dc_TypeDecl> _1b385cd81_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1b303a4a4_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1b303547c_checkArch(jule::Str _2814_arg);
inline jule::Bool _1b3035658_isPassFileAnnotation(jule::Str _5029_p);
inline void _1b3050be5_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1b3050e6a_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1b3051256_initVars(jule::Slice<jule::Str>* _5518_vars, _1b30508c6_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1b3861d30_readBuff(jule::Str _1713_path);
inline _20daa5e91_Log _1b386213d_flatCompilerErr(jule::Str _2820_text);
inline jule::Ptr<_1b2bda9b2_Fn> _1b2ea0d65_RuntimeFindFn(jule::Ptr<_1b2cd4e1e_ImportInfo>* _1823_runtime, jule::Str _1851_ident);
inline jule::Ptr<_1b2b0db6b_Struct> _1b2ea145e_RuntimeFindStruct(jule::Ptr<_1b2cd4e1e_ImportInfo>* _3327_runtime, jule::Str _3355_ident);
inline void _1b3866928_pushPasses(jule::Ptr<_1b2cd7691_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes);
inline jule::Slice<jule::Str> _1b3866ce1_getAllUniquePasses(jule::Ptr<_1b2cd7691_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>> _14053_uses);
inline _1b30508c6_CompileInfo _1b3867000_buildCompileInfo(void);
inline void _1b38672a8_pushRuntimeToAST(jule::Ptr<_1b2adb52d_AST>* _17926_f);
inline void _1b386796d_IterPackages(jule::Ptr<_1b3865075_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1b2cd7691_Package>*> _731_f);
inline void _1b3867bd2_IterFiles(jule::Ptr<_1b2cd7691_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1b2be1cb5_SymTab>*> _1640_f);
inline void _1b3868078_iterTraitInheritMethods(jule::Ptr<_1b2be61c6_Trait>* _2233_base, jule::Ptr<_1b2be61c6_Trait>* _2258_t, jule::Fn<void,jule::Ptr<_1b2bda9b2_Fn>*> _2275_f);
inline void _1b3868496_iterTraitInheritMethods1(jule::Ptr<_1b2be61c6_Trait>* _3134_base, jule::Ptr<_1b2be61c6_Trait>* _3159_t, jule::Fn<void,jule::Ptr<_1b2bda9b2_Fn>*> _3176_f);
inline void _1b386874e_IterTraitMethods(jule::Ptr<_1b2be61c6_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1b2bda9b2_Fn>*> _3943_f);
inline jule::Bool _1b386a8e9_IsForwarded(jule::Ptr<_1b2ca4592_Scope>* _1217_s);
inline jule::Bool _1b386aac5_IsExprComesFromBind(jule::Ptr<_1b2d7dc21_Data>* _2825_d);
inline jule::Bool _1b386ad8e_IsAny(jule::Ptr<_1b2db1627_TypeKind>* _4015_t);
inline jule::Bool _1b386b1d0_IsClosure(jule::Ptr<_1b2bd1436_AnonFnExprModel>* _4915_m);
inline jule::Bool _1b386b466_IsOpMethod(jule::Ptr<_1b2bda9b2_Fn>* _5216_m);
inline jule::Bool _1b386b7da_IsTraitMethod(jule::Ptr<_1b2b119c6_StructIns>* _6823_owner, jule::Ptr<_1b2bdda70_FnIns>* _6849_f);
inline jule::Bool _1b386bb5e_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p);
inline jule::Ptr<_1b2adc809_Directive> _1b386c9ea_FindDirective(jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1b386cdb3_HasDirective(jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::Bool _1b386d237_ContainsTraitMethod(jule::Ptr<_1b2be61c6_Trait>* _2629_t, jule::Str* _2647_ident);
inline jule::I64 _1b386d8ec_FindTraitTypeOffsetS(jule::Ptr<_1b2be61c6_Trait> _3925_t, jule::Ptr<_1b2b119c6_StructIns> _3946_s);
inline jule::I64 _1b386dc71_FindTraitTypeOffset(jule::Ptr<_1b2be61c6_Trait> _6224_t, jule::Ptr<_1b2db1627_TypeKind> _6245_k);
inline jule::Ptr<_1b2bdda70_FnIns> _1b386e1a0_FindOperator(jule::Ptr<_1b2b119c6_StructIns>* _7822_s, jule::U64 _7843_op, jule::Bool _7858_unary);
inline jule::Ptr<_1b2bdda70_FnIns> _1b386e524_FindFnGenericInstance(jule::Ptr<_1b2bda9b2_Fn>* _14731_f, jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _14745_generics);
inline jule::Ptr<_1b2b119c6_StructIns> _1b386e9a8_FindStructGenericInstance(jule::Ptr<_1b2b0db6b_Struct>* _16335_s, jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _16353_generics);
inline jule::Bool _1b7b656b2_isOrdered(jule::Ptr<_1b2d26ca7_Var>* _1418_t, jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _1425_s);
inline jule::Bool _1b7b6b432_isOrdered(jule::Ptr<_1b2b0db6b_Struct>* _1418_t, jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _1425_s);
inline void _1b7b62cdb_order(jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _3717_s);
inline void _1b7b638be_order(jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _3717_s);
inline void _1b482e1b4_EliminateDefines(jule::Ptr<_1b3865075_IR>* _39126_ir);
inline void _1b4833075_eliminateDeadCodeOfScope(jule::Ptr<_1b2ca4592_Scope> _21833_s);
inline void _1b48332ea_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>* _23033_funcs);
inline void _1b483352b_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>* _23937_structs);
inline void _1b48337d4_eliminateFunctionsScopePackage(jule::Ptr<_1b2cd7691_Package>* _24740_pkg);
inline void _1b48339d2_eliminateScopePackage(jule::Ptr<_1b2cd7691_Package>* _25431_pkg);
inline void _1b4833c13_EliminateScopes(jule::Ptr<_1b3865075_IR>* _25925_ir);
inline jule::Uintptr _1b46ce493_typeData(jule::Any* _914_m);
inline jule::Bool _1b46c33ee_equalConst(jule::Ptr<_1b2b6c23a_Const> _1315_l, jule::Ptr<_1b2b6c23a_Const> _1336_r);
inline jule::Bool _1b4348250_equalCasting(jule::Ptr<_1b2bcec4d_CastingExprModel> _3217_l, jule::Ptr<_1b2bcec4d_CastingExprModel> _3245_r);
inline jule::Bool _1b46d3167_equalUnary(jule::Ptr<_1b2bcd9e9_UnaryExprModel> _3915_l, jule::Ptr<_1b2bcd9e9_UnaryExprModel> _3941_r);
inline jule::Bool _1b46d3497_equalIndexing(jule::Ptr<_1b2bd0e80_IndexingExprModel> _4618_l, jule::Ptr<_1b2bd0e80_IndexingExprModel> _4647_r);
inline jule::Bool _1b46d381b_equalBinary(jule::Ptr<_1b2bcd620_BinaryExprModel> _5116_l, jule::Ptr<_1b2bcd620_BinaryExprModel> _5143_r);
inline jule::Bool _1b46d3b90_equalModels(jule::Any _6216_l, jule::Any _6236_r);
inline void _1b46de3a4_possibleNilRemove(jule::Ptr<_1b46dd3c5_nils>* _7227_n, jule::Any _7237_m);
inline jule::Bool _1b46de76c_isGuaranteedNonNilExpr(jule::Ptr<_1b46dd3c5_nils>* _7832_n, jule::Any _7842_m);
inline jule::Bool _1b46dea36_isNilValidType(jule::Ptr<_1b2db1627_TypeKind> _8623_t);
inline jule::Uintptr _1b46ded77_getNilVar(jule::Any _8814_m);
inline jule::Bool _1b46e5a92_isConstantValidConditionalCase(jule::Ptr<_1b2ca49b0_If>* _65936_i);
inline jule::Bool _1b46e5da0_isUnreachableExpr(jule::Any* _66823_expr);
inline jule::Bool _1b46e6169_isConstantValidMatchCase(jule::Ptr<_1b2ca97ea_Case>* _68330_case);
inline jule::Bool _1b46e64aa_isUnreachableConditionalCase(jule::Ptr<_1b2ca49b0_If>* _69234_i);
inline jule::Bool _1b46e6741_isUnreachableMatchCase(jule::Ptr<_1b2ca97ea_Case>* _69628_case);
inline __jule_tuple_bool__jule_tuple_u64 _1b46eb900_checkForBitShiftOpt(jule::Ptr<_1b2bcd125_OperandExprModel>* _58125_l, jule::Ptr<_1b2bcd125_OperandExprModel>* _58154_r);
inline jule::Bool _1b46ebcb8_areSameLvalueExprModel(jule::Any* _59828_l, jule::Any* _59849_r);
inline void _1b46edd75_possibleDynamicRemove(jule::Ptr<_1b46eccdb_dynamic>* _7331_d, jule::Any _7344_m);
inline jule::Bool _1b46ee183_isDynamicValidType(jule::Ptr<_1b2db1627_TypeKind> _7927_t);
inline jule::Ptr<_1b2db1627_TypeKind> _1b46ee5b2_isTypeGuaranteedDynamicData(jule::Ptr<_1b46eccdb_dynamic>* _8137_dy, jule::Ptr<_1b2db1627_TypeKind> _8155_t, jule::Any _8179_m);
inline jule::Uintptr _1b46ee903_getDynamicVar(jule::Any _10618_m);
inline jule::Bool _1b4703264_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1b470362c_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr);
inline jule::Bool _1b47039a1_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2);
inline void _1b4703cd1_possibleBoundaryRemove(jule::Ptr<_1b47021ec_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1b470409a_isBoundaryRiskyType(jule::Ptr<_1b2db1627_TypeKind> _13628_t);
inline jule::Bool _1b4704364_isBoundaryValidType(jule::Ptr<_1b2db1627_TypeKind> _14128_t);
inline jule::Uintptr _1b470462d_getBoundaryVar(jule::Any _14319_m);
inline void _1b47076a8_PushOptLevel(jule::I64 _3217_level);
inline void _1b48372ee_detectEnabled(void);
inline jule::U64 _1b49135b7_unix(void);
inline jule::Bool _1b4842628_isCopyOptimizable(jule::Ptr<_1b2d7dc21_Data>* _115523_expr);
inline jule::Bool _1b48429e1_isIterCopyOptimizable(jule::Ptr<_1b2d7dc21_Data>* _116627_expr, jule::Ptr<_1b2d26ca7_Var>* _116647_v);
inline jule::Bool _1b4842e20_captureVarHandling(jule::Ptr<_1b491d2d6_ObjectCoder>* _117328_oc, jule::Ptr<_1b2bd1436_AnonFnExprModel>* _117351_m, jule::Ptr<_1b2d26ca7_Var>* _117383_v);
inline jule::Str _1b4859e59_decomposeCommonEsq(jule::U8 _190823_b);
inline jule::Str _1b485a267_sbtoa(jule::U8 _193510_b);
inline void _1b485a553_cstrBytes(_20d8ca601_Builder* _195519_s, jule::Str _195540_ctx);
inline void _1b485a883_cstrLit(_20d8ca601_Builder* _196117_s, jule::Str _196138_ctx);
inline void _1b485ac29_ftoa(_20d8ca601_Builder* _196714_s, jule::F64 _196735_f, jule::I64 _196743_bitsize);
inline void _1b485b015_itoa(_20d8ca601_Builder* _198514_s, jule::I64 _198535_x);
inline void _1b485b301_utoa(_20d8ca601_Builder* _200214_s, jule::U64 _200235_x);
inline void _1b485b950_operatorOverloadingBinary(_20d8ca601_Builder* _201635_buf, jule::Ptr<_1b2b119c6_StructIns>* _201663_s, jule::Str* _201685_l, jule::Str* _20173_r, jule::U64 _201711_op, jule::Str _201726_kind);
inline jule::Slice<jule::U8> _1b492ab2e_concatAllParts(jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _137619_parts);
inline jule::Bool _1b492ae3c_isHeadDecl(jule::Ptr<_1b2bda9b2_Fn>* _139220_m);
inline jule::Bool _1b492b206_defaultEq(jule::Ptr<_1b2b119c6_StructIns>* _140515_s);
inline jule::Bool _1b493a0e4_ableToInit(jule::Ptr<_1b2db1627_TypeKind>* _44920_t);
inline jule::Bool _1b493a3be_shouldInitialized(jule::Ptr<_1b2db1627_TypeKind>* _45627_t);
inline void _20dbc4411_printErrorMessage(jule::Str _3022_msg);
inline void _20dbc4686_help(jule::Slice<jule::Str>* _3510_args);
inline void _20dbc48b7_version(jule::Slice<jule::Str>* _6313_args);
inline void _20dbc4ac6_toolDistos(void);
inline void _20dbc4c3b_toolDistarch(void);
inline void _20dbc4e39_tool(jule::Slice<jule::Str>* _9410_args);
inline void _20dbc516a_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _20dbc54ab_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _20dbc56ed_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _20dbc5896_showInfo(void);
void entry_point(void);
inline void _1b49ab60a_init(void);
inline jule::Ptr<_20c64a729_File> _1b49ab8c4_openOutput(jule::Str* _3016_path);
inline void _1b49aba6c_clearObjects(void);
inline void _1b49abd7a_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd);
inline jule::Bool _1b49ac144_isCppSourceFile(jule::Str _8620_path);
inline void _1b49ac375_pushCompCmdClang(_20d8ca601_Builder* _9426_cmd);
inline void _1b49ac5a6_pushCompCmdGcc(_20d8ca601_Builder* _12024_cmd);
inline __jule_tuple_str__jule_tuple_str _1b49aca3a_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1b3865075_IR>* _14636_ir);
inline jule::Str _1b49acbc2_getCompilePath(void);
inline void _1b49ace03_applyTargetIndependentOptimizations(jule::Ptr<_1b3865075_IR>* _19245_ir);
inline void _1b49ad09b_checkCompilerFlag(void);
inline void _1b49ad2aa_checkTargetArch(jule::Str _21420_arch);
inline void _1b49ad4db_checkTargetOs(jule::Str _22218_os);
inline void _1b49ad71c_checkTargetFlag(jule::Str* _23021_target);
inline void _1b49ad94d_checkOptFlag(jule::Str* _25318_opt);
inline void _1b49add16_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1b49aded1_checkFlags(jule::Slice<jule::Str>* _27916_args);
inline void _1b49ae1e0_setupSemaFlags(jule::I64* _32424_flags);
inline jule::Ptr<_1b3865075_IR> _1b49ae4a9_buildIr(jule::Slice<jule::Str>* _33013_args);
inline void _1b49ae6da_compileCommand(jule::Slice<jule::Str>* _37024_args);


struct _1b2c76982_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1b2c75d16_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d7dc21_Data>* _1426_d, jule::I64 _1436_i);
	void(*_1b2c76179_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d26ca7_Var>* _1526_keyA, jule::Ptr<_1b2d26ca7_Var>* _1543_keyB);
	void(*_1b2c76597_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1b2d26ca7_Var>* _1633_keyA, jule::Ptr<_1b2d26ca7_Var>* _1650_keyB);
	jule::I64(*_1b2c7682d_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1b2cd1e1b_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1b2cd0ca5_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1b2cd0e81_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1b2cd12c2_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1b2cd4e1e_ImportInfo>(*_1b2cd1613_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log(*_1b2cd1a0e_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod);
	void(*_1b2cd1cb7_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2cd4e1e_ImportInfo> _4128__0);
};

struct _1b2db1171_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1b2db0bcb_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1b2db101c_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other);
};

struct _1b2dd1a10_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1b2cd4e1e_ImportInfo>(*_1b2dcece9_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _929_selector);
	jule::Ptr<_1b2d26ca7_Var>(*_1b2dd01e5_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1b2db0835_TypeAlias>(*_1b2dd05e1_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1b2b0db6b_Struct>(*_1b2dd09dc_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1b2bda9b2_Fn>(*_1b2dd0dd8_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1b2be61c6_Trait>(*_1b2dd1229_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1b2be887c_Enum>(*_1b2dd156a_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1b2bea087_TypeEnum>(*_1b2dd18ab_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1b49a4669_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1b496d9a7_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1b496daea_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1b496dc93_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1b499e6b9_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c78ea1_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c7c1d5_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c7ee63_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c837c4_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c85133_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c90913_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c93eaa_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b3862627_Importer>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b119c6_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bdda70_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2be61c6_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2be887c_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bea087_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c76ba2_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c7770d_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c7a931_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c7db54_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c8196a_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c86aa2_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c8cba7_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c92382_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2c96298_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2db1627_TypeKind>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2db9740_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2dbd26b_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2dbdc3e_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2dbe833_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2dc03d3_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2dc1060_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2dc1a33_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b492c449_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2be1cb5_SymTab>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2cab830_scopeChecker>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2cd4e1e_ImportInfo>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2cd7691_Package>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2d03091_sema>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b86da4de_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b86ddd0b_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b86e2518_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b86e5c69_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b86e9476_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2d26ca7_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2db0835_TypeAlias>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b0db6b_Struct>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bda9b2_Fn>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b0ac78_Field>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b6c23a_Const>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2be7d32_EnumItem>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd8edd_Param>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca70de_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca4592_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd686a_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2d7dc21_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd787c_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd55e4_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd40d7_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd44b1_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd4c64_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd6491_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd60b7_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd7b79_FreeExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd0600_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca51ca_Conditional>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca54c7_InfIter>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b026cb_WhileKind>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca597d_WhileIter>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b030d3_RangeKind>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca63c9_RangeIter>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca675e_ContSt>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca774e_GotoSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca7b28_Postfix>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca80ce_Assign>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae403b_IdentExpr>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd0e80_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca8585_MultiAssign>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca8cc2_Match>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca9ee3_FallSt>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ca6b38_BreakSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2caa389_RetSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2aed40d_ScopeTree>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b01257_VarDecl>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b04e09_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae2721_Expr>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b046bc_Conditional>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b01da1_Iter>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b03886_ContSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2aea9c1_LabelSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2aead9a_GotoSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2aebd8a_AssignSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b05bc9_MatchCase>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2aeb197_FallSt>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b034ac_BreakSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b01631_RetSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae30e5_UseExpr>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b09cbb_Impl>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b08e1e_StructDecl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b0009c_FnDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b0965b_TraitDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b072c4_EnumDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2b0825e_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae06a8_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ade81c_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2adee16_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ade487_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae0e06_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2adeb19_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2add9e7_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae4ba7_VariadicExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd09c9_SliceExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae6e40_FieldExprPair>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae854b_KeyValPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae3315_TupleExpr>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd3c0d_TupleExprModel>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae644a_FnCallExpr>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd7508_RuneExprModel>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd3911_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae5834_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2addcb1_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae47cd_UnaryExpr>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2add3dc_TypeDecl>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae545a_NamespaceExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ade18a_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd226c_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bcec4d_CastingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae8c77_SliceExpr>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bce3bd_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd3537_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd2800_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd3191_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd1bd9_MapExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd1436_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae29da_RangeExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae36ab_LitExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae3a85_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae96d4_IndexingExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae9d44_SlicingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae5081_CastExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae776a_StructLit>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae7c21_BraceLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2ae5cda_BinaryExpr>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bcd9e9_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bcd620_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bce6ba_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd488a_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd521a_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd58e1_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd5bdd_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd6b67_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bd731b_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d471d_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d7006_StrRuneIter>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d5be7_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d6753_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d6b2c_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d4993_SwapExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d4d6c_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d5664_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d5ee4_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d7303_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d51e1_RefExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2bce027_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d7600_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b46d6379_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1b63d5a16_1b637e163(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d7dc21_Data>* _1426_d, jule::I64 _1436_i) {
	_1b2c79ea2_index(_self_.as<_1b2c78ea1_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b63d5a16_1b6397ac7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d7dc21_Data>* _1426_d, jule::I64 _1436_i) {
	_1b2c7d1c5_index(_self_.as<_1b2c7c1d5_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b63d5a16_1b6385499(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d7dc21_Data>* _1426_d, jule::I64 _1436_i) {
	_1b2c80edb_index(_self_.as<_1b2c7ee63_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b63d5a16_1b638aea5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d7dc21_Data>* _1426_d, jule::I64 _1436_i) {
	_1b2c846a4_index(_self_.as<_1b2c837c4_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b63d5a16_1b63942ee(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d7dc21_Data>* _1426_d, jule::I64 _1436_i) {
	_1b2c86123_index(_self_.as<_1b2c85133_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b63d5a16_1b63b496d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d7dc21_Data>* _1426_d, jule::I64 _1436_i) {
	_1b2c91903_index(_self_.as<_1b2c90913_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b63d5a16_1b63acd0c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d7dc21_Data>* _1426_d, jule::I64 _1436_i) {
	_1b2c950bb_index(_self_.as<_1b2c93eaa_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b63d60aa_1b637e163(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d26ca7_Var>* _1526_keyA, jule::Ptr<_1b2d26ca7_Var>* _1543_keyB) {
	_1b2c79b3e_ready(_self_.as<_1b2c78ea1_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b63d60aa_1b6397ac7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d26ca7_Var>* _1526_keyA, jule::Ptr<_1b2d26ca7_Var>* _1543_keyB) {
	_1b2c7cd62_ready(_self_.as<_1b2c7c1d5_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b63d60aa_1b6385499(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d26ca7_Var>* _1526_keyA, jule::Ptr<_1b2d26ca7_Var>* _1543_keyB) {
	_1b2c80b78_ready(_self_.as<_1b2c7ee63_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b63d60aa_1b638aea5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d26ca7_Var>* _1526_keyA, jule::Ptr<_1b2d26ca7_Var>* _1543_keyB) {
	_1b2c84341_ready(_self_.as<_1b2c837c4_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b63d60aa_1b63942ee(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d26ca7_Var>* _1526_keyA, jule::Ptr<_1b2d26ca7_Var>* _1543_keyB) {
	_1b2c85cb0_ready(_self_.as<_1b2c85133_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b63d60aa_1b63b496d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d26ca7_Var>* _1526_keyA, jule::Ptr<_1b2d26ca7_Var>* _1543_keyB) {
	_1b2c91590_ready(_self_.as<_1b2c90913_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b63d60aa_1b63acd0c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2d26ca7_Var>* _1526_keyA, jule::Ptr<_1b2d26ca7_Var>* _1543_keyB) {
	_1b2c94c58_ready(_self_.as<_1b2c93eaa_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b63d6781_1b637e163(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1b2d26ca7_Var>* _1633_keyA, jule::Ptr<_1b2d26ca7_Var>* _1650_keyB) {
	_1b2c7a3c0_step(_self_.as<_1b2c78ea1_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b63d6781_1b6397ac7(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1b2d26ca7_Var>* _1633_keyA, jule::Ptr<_1b2d26ca7_Var>* _1650_keyB) {
	_1b2c7d5e3_step(_self_.as<_1b2c7c1d5_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b63d6781_1b6385499(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1b2d26ca7_Var>* _1633_keyA, jule::Ptr<_1b2d26ca7_Var>* _1650_keyB) {
	_1b2c81409_step(_self_.as<_1b2c7ee63_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b63d6781_1b638aea5(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1b2d26ca7_Var>* _1633_keyA, jule::Ptr<_1b2d26ca7_Var>* _1650_keyB) {
	_1b2c84ac2_step(_self_.as<_1b2c837c4_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b63d6781_1b63942ee(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1b2d26ca7_Var>* _1633_keyA, jule::Ptr<_1b2d26ca7_Var>* _1650_keyB) {
	_1b2c86541_step(_self_.as<_1b2c85133_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b63d6781_1b63b496d(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1b2d26ca7_Var>* _1633_keyA, jule::Ptr<_1b2d26ca7_Var>* _1650_keyB) {
	_1b2c91d21_step(_self_.as<_1b2c90913_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b63d6781_1b63acd0c(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1b2d26ca7_Var>* _1633_keyA, jule::Ptr<_1b2d26ca7_Var>* _1650_keyB) {
	_1b2c954d9_step(_self_.as<_1b2c93eaa_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I64 __jule_trait_method_1b63d6e68_1b637e163(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c7a656_len(_self_.as<_1b2c78ea1_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1b63d6e68_1b6397ac7(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c7d879_len(_self_.as<_1b2c7c1d5_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1b63d6e68_1b6385499(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c81690_len(_self_.as<_1b2c7ee63_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1b63d6e68_1b638aea5(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c84d58_len(_self_.as<_1b2c837c4_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1b63d6e68_1b63942ee(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c867c7_len(_self_.as<_1b2c85133_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1b63d6e68_1b63b496d(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c920a7_len(_self_.as<_1b2c90913_comptimeFiles>().alloc);
}
inline jule::I64 __jule_trait_method_1b63d6e68_1b63acd0c(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c95770_len(_self_.as<_1b2c93eaa_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1b63d72a9_1b7ae22dc(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1b386322c_SetModPath(_self_.as<_1b3862627_Importer>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1b63d770a_1b7ae22dc(jule::Ptr<jule::Uintptr> _self_) {
	return _1b38634b3_GetModPath(_self_.as<_1b3862627_Importer>().alloc);
}
inline jule::Str __jule_trait_method_1b63d7b17_1b7ae22dc(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1b3863804_ModById(_self_.as<_1b3862627_Importer>().alloc, _2519_id);
}
inline jule::Ptr<_1b2cd4e1e_ImportInfo> __jule_trait_method_1b63d80ce_1b7ae22dc(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1b3863b45_GetImport(_self_.as<_1b3862627_Importer>().alloc, _3125_path);
}
inline __jule_tuple_sx_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log __jule_trait_method_1b63d86b7_1b7ae22dc(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod) {
	return _1b3864041_ImportPackage(_self_.as<_1b3862627_Importer>().alloc, _3729_path, _3740_updateMod);
}
inline void __jule_trait_method_1b63d907a_1b7ae22dc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2cd4e1e_ImportInfo> _4128__0) {
	_1b38642e9_Imported(_self_.as<_1b3862627_Importer>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1b63d9564_1b625c096(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2b11d7d_Str(_self_.as<_1b2b119c6_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b625b419(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2bddde4_Str(_self_.as<_1b2bdda70_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b6274630(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2be65c2_Str(_self_.as<_1b2be61c6_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b624d3b7(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2be8c34_Str(_self_.as<_1b2be887c_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b62554e0(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2bea40b_Str(_self_.as<_1b2bea087_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b6392b16(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c7709d_Str(_self_.as<_1b2c76ba2_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b6382430(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c77ab5_Str(_self_.as<_1b2c7770d_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b637e163(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c79369_Str(_self_.as<_1b2c78ea1_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b639ad94(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c7acd8_Str(_self_.as<_1b2c7a931_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b6397ac7(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c7c58c_Str(_self_.as<_1b2c7c1d5_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b6388766(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c7e00b_Str(_self_.as<_1b2c7db54_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b6385499(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c8042a_Str(_self_.as<_1b2c7ee63_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b638e272(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c81d22_Str(_self_.as<_1b2c8196a_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b638aea5(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c83a6b_Str(_self_.as<_1b2c837c4_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b63942ee(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c854da_Str(_self_.as<_1b2c85133_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b6286257(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c86e59_Str(_self_.as<_1b2c86aa2_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b639de0d(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c8d05e_Str(_self_.as<_1b2c8cba7_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b63b496d(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c90cba_Str(_self_.as<_1b2c90913_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b63b10c9(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c92739_Str(_self_.as<_1b2c92382_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b63acd0c(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c94593_Str(_self_.as<_1b2c93eaa_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b63a4a5c(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2c96650_Str(_self_.as<_1b2c96298_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b623dab1(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2db1a23_Str(_self_.as<_1b2db1627_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b6243566(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2db9ab4_Str(_self_.as<_1b2db9740_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b6249d75(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2dbd623_Str(_self_.as<_1b2dbd26b_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b6259a88(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2dbe206_Str(_self_.as<_1b2dbdc3e_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b62c1bcc(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2dbebda_Str(_self_.as<_1b2dbe833_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b62c015e(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2dc078a_Str(_self_.as<_1b2dc03d3_Map>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b625813b(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2dc1417_Str(_self_.as<_1b2dc1060_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b624b63a(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2dc1dda_Str(_self_.as<_1b2dc1a33_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1b63d9564_1b80eebe5(jule::Ptr<jule::Uintptr> _self_) {
	return _1b492c801_Str(_self_.as<_1b492c449_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b625c096(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2b121be_Equal(_self_.as<_1b2b119c6_StructIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b625b419(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2bde235_Equal(_self_.as<_1b2bdda70_FnIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b6274630(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2be6913_Equal(_self_.as<_1b2be61c6_Trait>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b624d3b7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2be9075_Equal(_self_.as<_1b2be887c_Enum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b62554e0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2bea74c_Equal(_self_.as<_1b2bea087_TypeEnum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b6392b16(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c773de_Equal(_self_.as<_1b2c76ba2_comptimeRange>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b6382430(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c77e06_Equal(_self_.as<_1b2c7770d_comptimeStructField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b637e163(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c796aa_Equal(_self_.as<_1b2c78ea1_comptimeStructFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b639ad94(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c7b129_Equal(_self_.as<_1b2c7a931_comptimeStatic>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b6397ac7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c7c8cd_Equal(_self_.as<_1b2c7c1d5_comptimeStatics>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b6388766(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c7e34c_Equal(_self_.as<_1b2c7db54_comptimeEnumField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b6385499(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c8076b_Equal(_self_.as<_1b2c7ee63_comptimeEnumFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b638e272(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c82163_Equal(_self_.as<_1b2c8196a_comptimeParam>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b638aea5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c83dac_Equal(_self_.as<_1b2c837c4_comptimeParams>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b63942ee(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c8582b_Equal(_self_.as<_1b2c85133_comptimeTypeInfos>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b6286257(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c8729a_Equal(_self_.as<_1b2c86aa2_comptimeTypeInfo>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b639de0d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c8d3a0_Equal(_self_.as<_1b2c8cba7_comptimeValue>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b63b496d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c9110b_Equal(_self_.as<_1b2c90913_comptimeFiles>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b63b10c9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c92a7a_Equal(_self_.as<_1b2c92382_comptimeFile>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b63acd0c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c948d4_Equal(_self_.as<_1b2c93eaa_comptimeDecls>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b63a4a5c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2c96991_Equal(_self_.as<_1b2c96298_comptimeDecl>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b623dab1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2db1d64_Equal(_self_.as<_1b2db1627_TypeKind>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b6243566(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2db9e05_Equal(_self_.as<_1b2db9740_Prim>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b6249d75(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2dbd964_Equal(_self_.as<_1b2dbd26b_Sptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b6259a88(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2dbe547_Equal(_self_.as<_1b2dbdc3e_Slc>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b62c1bcc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2dc002b_Equal(_self_.as<_1b2dbe833_Tuple>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b62c015e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2dc0acb_Equal(_self_.as<_1b2dc03d3_Map>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b625813b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2dc1758_Equal(_self_.as<_1b2dc1060_Arr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b624b63a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b2dc222b_Equal(_self_.as<_1b2dc1a33_Ptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1b63d98d8_1b80eebe5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	return _1b492cb42_Equal(_self_.as<_1b492c449_customType>(), _3818_other);
}
inline jule::Ptr<_1b2cd4e1e_ImportInfo> __jule_trait_method_1b63d9e5a_1b625e3a6(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _929_selector) {
	return _1b2be22d2_SelectPackage(_self_.as<_1b2be1cb5_SymTab>().alloc, _929_selector);
}
inline jule::Ptr<_1b2cd4e1e_ImportInfo> __jule_trait_method_1b63d9e5a_1b6338859(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _929_selector) {
	return _1b2cabd08_SelectPackage(_self_.as<_1b2cab830_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1b2cd4e1e_ImportInfo> __jule_trait_method_1b63d9e5a_1b62609d4(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _929_selector) {
	return _1b2cd543b_SelectPackage(_self_.as<_1b2cd4e1e_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1b2cd4e1e_ImportInfo> __jule_trait_method_1b63d9e5a_1b6261809(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _929_selector) {
	return _1b2cd7b69_SelectPackage(_self_.as<_1b2cd7691_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1b2cd4e1e_ImportInfo> __jule_trait_method_1b63d9e5a_1b625d8b1(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _929_selector) {
	return _1b2d03569_SelectPackage(_self_.as<_1b2d03091_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1b2d26ca7_Var> __jule_trait_method_1b63dacd5_1b625e3a6(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1b2be26cd_FindVar(_self_.as<_1b2be1cb5_SymTab>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1b2d26ca7_Var> __jule_trait_method_1b63dacd5_1b6338859(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1b2cac204_FindVar(_self_.as<_1b2cab830_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1b2d26ca7_Var> __jule_trait_method_1b63dacd5_1b62609d4(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1b2cd5837_FindVar(_self_.as<_1b2cd4e1e_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1b2d26ca7_Var> __jule_trait_method_1b63dacd5_1b6261809(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1b2cd8065_FindVar(_self_.as<_1b2cd7691_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1b2d26ca7_Var> __jule_trait_method_1b63dacd5_1b625d8b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1b2d03965_FindVar(_self_.as<_1b2d03091_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1b2db0835_TypeAlias> __jule_trait_method_1b63db3ac_1b625e3a6(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1b2be2ac9_FindTypeAlias(_self_.as<_1b2be1cb5_SymTab>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1b2db0835_TypeAlias> __jule_trait_method_1b63db3ac_1b6338859(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1b2cac600_FindTypeAlias(_self_.as<_1b2cab830_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1b2db0835_TypeAlias> __jule_trait_method_1b63db3ac_1b62609d4(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1b2cd5c33_FindTypeAlias(_self_.as<_1b2cd4e1e_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1b2db0835_TypeAlias> __jule_trait_method_1b63db3ac_1b6261809(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1b2cd8461_FindTypeAlias(_self_.as<_1b2cd7691_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1b2db0835_TypeAlias> __jule_trait_method_1b63db3ac_1b625d8b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1b2d03d61_FindTypeAlias(_self_.as<_1b2d03091_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1b2b0db6b_Struct> __jule_trait_method_1b63db9b7_1b625e3a6(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1b2be2ec5_FindStruct(_self_.as<_1b2be1cb5_SymTab>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1b2b0db6b_Struct> __jule_trait_method_1b63db9b7_1b6338859(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1b2cac9eb_FindStruct(_self_.as<_1b2cab830_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1b2b0db6b_Struct> __jule_trait_method_1b63db9b7_1b62609d4(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1b2cd612e_FindStruct(_self_.as<_1b2cd4e1e_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1b2b0db6b_Struct> __jule_trait_method_1b63db9b7_1b6261809(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1b2cd885c_FindStruct(_self_.as<_1b2cd7691_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1b2b0db6b_Struct> __jule_trait_method_1b63db9b7_1b625d8b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1b2d0425c_FindStruct(_self_.as<_1b2d03091_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1b2bda9b2_Fn> __jule_trait_method_1b63dc0c2_1b625e3a6(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1b2be33c1_FindFn(_self_.as<_1b2be1cb5_SymTab>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1b2bda9b2_Fn> __jule_trait_method_1b63dc0c2_1b6338859(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1b2cacde7_FindFn(_self_.as<_1b2cab830_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1b2bda9b2_Fn> __jule_trait_method_1b63dc0c2_1b62609d4(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1b2cd652a_FindFn(_self_.as<_1b2cd4e1e_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1b2bda9b2_Fn> __jule_trait_method_1b63dc0c2_1b6261809(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1b2cd8c58_FindFn(_self_.as<_1b2cd7691_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1b2bda9b2_Fn> __jule_trait_method_1b63dc0c2_1b625d8b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1b2d04658_FindFn(_self_.as<_1b2d03091_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1b2be61c6_Trait> __jule_trait_method_1b63dc6cc_1b625e3a6(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1b2be3712_FindTrait(_self_.as<_1b2be1cb5_SymTab>().alloc, _2925_ident);
}
inline jule::Ptr<_1b2be61c6_Trait> __jule_trait_method_1b63dc6cc_1b6338859(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1b2cad238_FindTrait(_self_.as<_1b2cab830_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1b2be61c6_Trait> __jule_trait_method_1b63dc6cc_1b62609d4(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1b2cd686b_FindTrait(_self_.as<_1b2cd4e1e_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1b2be61c6_Trait> __jule_trait_method_1b63dc6cc_1b6261809(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1b2cd9099_FindTrait(_self_.as<_1b2cd7691_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1b2be61c6_Trait> __jule_trait_method_1b63dc6cc_1b625d8b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1b2d04999_FindTrait(_self_.as<_1b2d03091_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1b2be887c_Enum> __jule_trait_method_1b63dcc2c_1b625e3a6(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1b2be3a53_FindEnum(_self_.as<_1b2be1cb5_SymTab>().alloc, _3324_ident);
}
inline jule::Ptr<_1b2be887c_Enum> __jule_trait_method_1b63dcc2c_1b6338859(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1b2cad579_FindEnum(_self_.as<_1b2cab830_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1b2be887c_Enum> __jule_trait_method_1b63dcc2c_1b62609d4(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1b2cd6bac_FindEnum(_self_.as<_1b2cd4e1e_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1b2be887c_Enum> __jule_trait_method_1b63dcc2c_1b6261809(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1b2cd93da_FindEnum(_self_.as<_1b2cd7691_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1b2be887c_Enum> __jule_trait_method_1b63dcc2c_1b625d8b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1b2d04cda_FindEnum(_self_.as<_1b2d03091_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1b2bea087_TypeEnum> __jule_trait_method_1b63dd27c_1b625e3a6(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1b2be3d94_FindTypeEnum(_self_.as<_1b2be1cb5_SymTab>().alloc, _3728_ident);
}
inline jule::Ptr<_1b2bea087_TypeEnum> __jule_trait_method_1b63dd27c_1b6338859(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1b2cad8ba_FindTypeEnum(_self_.as<_1b2cab830_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1b2bea087_TypeEnum> __jule_trait_method_1b63dd27c_1b62609d4(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1b2cd6eed_FindTypeEnum(_self_.as<_1b2cd4e1e_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1b2bea087_TypeEnum> __jule_trait_method_1b63dd27c_1b6261809(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1b2cd972b_FindTypeEnum(_self_.as<_1b2cd7691_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1b2bea087_TypeEnum> __jule_trait_method_1b63dd27c_1b625d8b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1b2d0512b_FindTypeEnum(_self_.as<_1b2d03091_sema>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1b86eb49a_1b86da4de(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86da346_Name(_self_.as<_1b86da4de_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b86eb49a_1b86ddd0b(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86dd987_Name(_self_.as<_1b86ddd0b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b86eb49a_1b86e2518(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86e2194_Name(_self_.as<_1b86e2518_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b86eb49a_1b86e5c69(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86e58e5_Name(_self_.as<_1b86e5c69_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b86eb49a_1b86e9476(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86e9102_Name(_self_.as<_1b86e9476_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b86eb588_1b86da4de(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86daa61_Short(_self_.as<_1b86da4de_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b86eb588_1b86ddd0b(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86de37d_Short(_self_.as<_1b86ddd0b_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b86eb588_1b86e2518(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86e2a8a_Short(_self_.as<_1b86e2518_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b86eb588_1b86e5c69(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86e62db_Short(_self_.as<_1b86e5c69_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b86eb588_1b86e9476(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86e99e8_Short(_self_.as<_1b86e9476_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b86ece5d_1b86da4de(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86da7ca_What(_self_.as<_1b86da4de_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b86ece5d_1b86ddd0b(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86de0e7_What(_self_.as<_1b86ddd0b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b86ece5d_1b86e2518(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86e2804_What(_self_.as<_1b86e2518_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b86ece5d_1b86e5c69(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86e6055_What(_self_.as<_1b86e5c69_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b86ece5d_1b86e9476(jule::Ptr<jule::Uintptr> _self_) {
	return _1b86e9762_What(_self_.as<_1b86e9476_Flag>().alloc);
}
inline void __jule_trait_method_1b86ed36a_1b86da4de(jule::Ptr<jule::Uintptr> _self_) {
	_1b86da91d_Reset(_self_.as<_1b86da4de_Flag>().alloc);
}
inline void __jule_trait_method_1b86ed36a_1b86ddd0b(jule::Ptr<jule::Uintptr> _self_) {
	_1b86de23a_Reset(_self_.as<_1b86ddd0b_Flag>().alloc);
}
inline void __jule_trait_method_1b86ed36a_1b86e2518(jule::Ptr<jule::Uintptr> _self_) {
	_1b86e2947_Reset(_self_.as<_1b86e2518_Flag>().alloc);
}
inline void __jule_trait_method_1b86ed36a_1b86e5c69(jule::Ptr<jule::Uintptr> _self_) {
	_1b86e6198_Reset(_self_.as<_1b86e5c69_Flag>().alloc);
}
inline void __jule_trait_method_1b86ed36a_1b86e9476(jule::Ptr<jule::Uintptr> _self_) {
	_1b86e98a5_Reset(_self_.as<_1b86e9476_Flag>().alloc);
}


static _1b2c76982_comptimeRangeKindMptrData _1b2c76982_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1b2c75d16_index=__jule_trait_method_1b63d5a16_1b637e163,
	._1b2c76179_ready=__jule_trait_method_1b63d60aa_1b637e163,
	._1b2c76597_step=__jule_trait_method_1b63d6781_1b637e163,
	._1b2c7682d_len=__jule_trait_method_1b63d6e68_1b637e163,
};
static _1b2c76982_comptimeRangeKindMptrData _1b2c76982_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1b2c75d16_index=__jule_trait_method_1b63d5a16_1b6397ac7,
	._1b2c76179_ready=__jule_trait_method_1b63d60aa_1b6397ac7,
	._1b2c76597_step=__jule_trait_method_1b63d6781_1b6397ac7,
	._1b2c7682d_len=__jule_trait_method_1b63d6e68_1b6397ac7,
};
static _1b2c76982_comptimeRangeKindMptrData _1b2c76982_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1b2c75d16_index=__jule_trait_method_1b63d5a16_1b6385499,
	._1b2c76179_ready=__jule_trait_method_1b63d60aa_1b6385499,
	._1b2c76597_step=__jule_trait_method_1b63d6781_1b6385499,
	._1b2c7682d_len=__jule_trait_method_1b63d6e68_1b6385499,
};
static _1b2c76982_comptimeRangeKindMptrData _1b2c76982_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1b2c75d16_index=__jule_trait_method_1b63d5a16_1b638aea5,
	._1b2c76179_ready=__jule_trait_method_1b63d60aa_1b638aea5,
	._1b2c76597_step=__jule_trait_method_1b63d6781_1b638aea5,
	._1b2c7682d_len=__jule_trait_method_1b63d6e68_1b638aea5,
};
static _1b2c76982_comptimeRangeKindMptrData _1b2c76982_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1b2c75d16_index=__jule_trait_method_1b63d5a16_1b63942ee,
	._1b2c76179_ready=__jule_trait_method_1b63d60aa_1b63942ee,
	._1b2c76597_step=__jule_trait_method_1b63d6781_1b63942ee,
	._1b2c7682d_len=__jule_trait_method_1b63d6e68_1b63942ee,
};
static _1b2c76982_comptimeRangeKindMptrData _1b2c76982_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1b2c75d16_index=__jule_trait_method_1b63d5a16_1b63b496d,
	._1b2c76179_ready=__jule_trait_method_1b63d60aa_1b63b496d,
	._1b2c76597_step=__jule_trait_method_1b63d6781_1b63b496d,
	._1b2c7682d_len=__jule_trait_method_1b63d6e68_1b63b496d,
};
static _1b2c76982_comptimeRangeKindMptrData _1b2c76982_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1b2c75d16_index=__jule_trait_method_1b63d5a16_1b63acd0c,
	._1b2c76179_ready=__jule_trait_method_1b63d60aa_1b63acd0c,
	._1b2c76597_step=__jule_trait_method_1b63d6781_1b63acd0c,
	._1b2c7682d_len=__jule_trait_method_1b63d6e68_1b63acd0c,
};
static _1b2cd1e1b_ImporterMptrData _1b2cd1e1b_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1b2cd0ca5_SetModPath=__jule_trait_method_1b63d72a9_1b7ae22dc,
	._1b2cd0e81_GetModPath=__jule_trait_method_1b63d770a_1b7ae22dc,
	._1b2cd12c2_ModById=__jule_trait_method_1b63d7b17_1b7ae22dc,
	._1b2cd1613_GetImport=__jule_trait_method_1b63d80ce_1b7ae22dc,
	._1b2cd1a0e_ImportPackage=__jule_trait_method_1b63d86b7_1b7ae22dc,
	._1b2cd1cb7_Imported=__jule_trait_method_1b63d907a_1b7ae22dc,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b625c096,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b625c096,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b625b419,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b625b419,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b6274630,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b6274630,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b624d3b7,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b624d3b7,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b62554e0,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b62554e0,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b6392b16,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b6392b16,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b6382430,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b6382430,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b637e163,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b637e163,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b639ad94,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b639ad94,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b6397ac7,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b6397ac7,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b6388766,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b6388766,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b6385499,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b6385499,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b638e272,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b638e272,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b638aea5,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b638aea5,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b63942ee,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b63942ee,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b6286257,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b6286257,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b639de0d,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b639de0d,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b63b496d,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b63b496d,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b63b10c9,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b63b10c9,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b63acd0c,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b63acd0c,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b63a4a5c,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b63a4a5c,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b623dab1,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b623dab1,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b6243566,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b6243566,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b6249d75,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b6249d75,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b6259a88,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b6259a88,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b62c1bcc,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b62c1bcc,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b62c015e,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b62c015e,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b625813b,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b625813b,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b624b63a,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b624b63a,
};
static _1b2db1171_KindMptrData _1b2db1171_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1b2db0bcb_Str=__jule_trait_method_1b63d9564_1b80eebe5,
	._1b2db101c_Equal=__jule_trait_method_1b63d98d8_1b80eebe5,
};
static _1b2dd1a10_LookupMptrData _1b2dd1a10_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1b2dcece9_SelectPackage=__jule_trait_method_1b63d9e5a_1b625e3a6,
	._1b2dd01e5_FindVar=__jule_trait_method_1b63dacd5_1b625e3a6,
	._1b2dd05e1_FindTypeAlias=__jule_trait_method_1b63db3ac_1b625e3a6,
	._1b2dd09dc_FindStruct=__jule_trait_method_1b63db9b7_1b625e3a6,
	._1b2dd0dd8_FindFn=__jule_trait_method_1b63dc0c2_1b625e3a6,
	._1b2dd1229_FindTrait=__jule_trait_method_1b63dc6cc_1b625e3a6,
	._1b2dd156a_FindEnum=__jule_trait_method_1b63dcc2c_1b625e3a6,
	._1b2dd18ab_FindTypeEnum=__jule_trait_method_1b63dd27c_1b625e3a6,
};
static _1b2dd1a10_LookupMptrData _1b2dd1a10_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1b2dcece9_SelectPackage=__jule_trait_method_1b63d9e5a_1b6338859,
	._1b2dd01e5_FindVar=__jule_trait_method_1b63dacd5_1b6338859,
	._1b2dd05e1_FindTypeAlias=__jule_trait_method_1b63db3ac_1b6338859,
	._1b2dd09dc_FindStruct=__jule_trait_method_1b63db9b7_1b6338859,
	._1b2dd0dd8_FindFn=__jule_trait_method_1b63dc0c2_1b6338859,
	._1b2dd1229_FindTrait=__jule_trait_method_1b63dc6cc_1b6338859,
	._1b2dd156a_FindEnum=__jule_trait_method_1b63dcc2c_1b6338859,
	._1b2dd18ab_FindTypeEnum=__jule_trait_method_1b63dd27c_1b6338859,
};
static _1b2dd1a10_LookupMptrData _1b2dd1a10_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1b2dcece9_SelectPackage=__jule_trait_method_1b63d9e5a_1b62609d4,
	._1b2dd01e5_FindVar=__jule_trait_method_1b63dacd5_1b62609d4,
	._1b2dd05e1_FindTypeAlias=__jule_trait_method_1b63db3ac_1b62609d4,
	._1b2dd09dc_FindStruct=__jule_trait_method_1b63db9b7_1b62609d4,
	._1b2dd0dd8_FindFn=__jule_trait_method_1b63dc0c2_1b62609d4,
	._1b2dd1229_FindTrait=__jule_trait_method_1b63dc6cc_1b62609d4,
	._1b2dd156a_FindEnum=__jule_trait_method_1b63dcc2c_1b62609d4,
	._1b2dd18ab_FindTypeEnum=__jule_trait_method_1b63dd27c_1b62609d4,
};
static _1b2dd1a10_LookupMptrData _1b2dd1a10_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1b2dcece9_SelectPackage=__jule_trait_method_1b63d9e5a_1b6261809,
	._1b2dd01e5_FindVar=__jule_trait_method_1b63dacd5_1b6261809,
	._1b2dd05e1_FindTypeAlias=__jule_trait_method_1b63db3ac_1b6261809,
	._1b2dd09dc_FindStruct=__jule_trait_method_1b63db9b7_1b6261809,
	._1b2dd0dd8_FindFn=__jule_trait_method_1b63dc0c2_1b6261809,
	._1b2dd1229_FindTrait=__jule_trait_method_1b63dc6cc_1b6261809,
	._1b2dd156a_FindEnum=__jule_trait_method_1b63dcc2c_1b6261809,
	._1b2dd18ab_FindTypeEnum=__jule_trait_method_1b63dd27c_1b6261809,
};
static _1b2dd1a10_LookupMptrData _1b2dd1a10_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1b2dcece9_SelectPackage=__jule_trait_method_1b63d9e5a_1b625d8b1,
	._1b2dd01e5_FindVar=__jule_trait_method_1b63dacd5_1b625d8b1,
	._1b2dd05e1_FindTypeAlias=__jule_trait_method_1b63db3ac_1b625d8b1,
	._1b2dd09dc_FindStruct=__jule_trait_method_1b63db9b7_1b625d8b1,
	._1b2dd0dd8_FindFn=__jule_trait_method_1b63dc0c2_1b625d8b1,
	._1b2dd1229_FindTrait=__jule_trait_method_1b63dc6cc_1b625d8b1,
	._1b2dd156a_FindEnum=__jule_trait_method_1b63dcc2c_1b625d8b1,
	._1b2dd18ab_FindTypeEnum=__jule_trait_method_1b63dd27c_1b625d8b1,
};
static _1b49a4669_CommonFlagMptrData _1b49a4669_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1b496d9a7_Name=__jule_trait_method_1b86eb49a_1b86da4de,
	._1b496daea_Short=__jule_trait_method_1b86eb588_1b86da4de,
	._1b496dc93_What=__jule_trait_method_1b86ece5d_1b86da4de,
	._1b499e6b9_Reset=__jule_trait_method_1b86ed36a_1b86da4de,
};
static _1b49a4669_CommonFlagMptrData _1b49a4669_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1b496d9a7_Name=__jule_trait_method_1b86eb49a_1b86ddd0b,
	._1b496daea_Short=__jule_trait_method_1b86eb588_1b86ddd0b,
	._1b496dc93_What=__jule_trait_method_1b86ece5d_1b86ddd0b,
	._1b499e6b9_Reset=__jule_trait_method_1b86ed36a_1b86ddd0b,
};
static _1b49a4669_CommonFlagMptrData _1b49a4669_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1b496d9a7_Name=__jule_trait_method_1b86eb49a_1b86e2518,
	._1b496daea_Short=__jule_trait_method_1b86eb588_1b86e2518,
	._1b496dc93_What=__jule_trait_method_1b86ece5d_1b86e2518,
	._1b499e6b9_Reset=__jule_trait_method_1b86ed36a_1b86e2518,
};
static _1b49a4669_CommonFlagMptrData _1b49a4669_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1b496d9a7_Name=__jule_trait_method_1b86eb49a_1b86e5c69,
	._1b496daea_Short=__jule_trait_method_1b86eb588_1b86e5c69,
	._1b496dc93_What=__jule_trait_method_1b86ece5d_1b86e5c69,
	._1b499e6b9_Reset=__jule_trait_method_1b86ed36a_1b86e5c69,
};
static _1b49a4669_CommonFlagMptrData _1b49a4669_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1b496d9a7_Name=__jule_trait_method_1b86eb49a_1b86e9476,
	._1b496daea_Short=__jule_trait_method_1b86eb588_1b86e9476,
	._1b496dc93_What=__jule_trait_method_1b86ece5d_1b86e9476,
	._1b499e6b9_Reset=__jule_trait_method_1b86ed36a_1b86e9476,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1b59c10be_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1b4be7c64_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1b4bea74a_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1b4c07c52_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1b4be813d_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1b4bdc396_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1b4c0a1d8_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1b2d26ca7_Var> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1b2db0835_TypeAlias> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1b2b0db6b_Struct> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1b2bda9b2_Fn> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1b2be61c6_Trait> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1b2be887c_Enum> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1b2bea087_TypeEnum> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1b2b0ac78_Field> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1b2b6c23a_Const> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1b2be7d32_EnumItem> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1b2bd8edd_Param> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1b2ca70de_Label> &other) { return any.type == &__jule_any_type18 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1b2ca4592_Scope> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1b2bd686a_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1b2d7dc21_Data> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1b2bd787c_BackendEmitExprModel> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1b2bd55e4_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1b2bd40d7_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1b2bd44b1_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1b2bd4c64_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1b2bd6491_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1b2bd60b7_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1b2bd7b79_FreeExprModel> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1b2bd0600_FnCallExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1b2ca51ca_Conditional> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1b2ca54c7_InfIter> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1b2b026cb_WhileKind> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1b2ca597d_WhileIter> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1b2b030d3_RangeKind> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1b2ca63c9_RangeIter> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1b2ca675e_ContSt> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1b2ca774e_GotoSt> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1b2ca7b28_Postfix> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1b2ca80ce_Assign> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1b2ae403b_IdentExpr> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1b2bd0e80_IndexingExprModel> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1b2ca8585_MultiAssign> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1b2ca8cc2_Match> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1b2ca9ee3_FallSt> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1b2ca6b38_BreakSt> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1b2caa389_RetSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1b2aed40d_ScopeTree> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1b2b01257_VarDecl> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1b2b04e09_TypeAliasDecl> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1b2ae2721_Expr> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1b2b046bc_Conditional> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1b2b01da1_Iter> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1b2b03886_ContSt> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1b2aea9c1_LabelSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1b2aead9a_GotoSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1b2aebd8a_AssignSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1b2b05bc9_MatchCase> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1b2aeb197_FallSt> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1b2b034ac_BreakSt> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1b2b01631_RetSt> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1b2ae30e5_UseExpr> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1b2bdda70_FnIns> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1b2b119c6_StructIns> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1b2b09cbb_Impl> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1b2b08e1e_StructDecl> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1b2b0009c_FnDecl> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1b2b0965b_TraitDecl> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1b2b072c4_EnumDecl> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1b2b0825e_TypeEnumDecl> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1b2ae06a8_ArrTypeDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1b2ade81c_SlcTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1b2adee16_PtrTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1b2ade487_SptrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1b2ae0e06_MapTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1b2adeb19_TupleTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1b2add9e7_IdentTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1b2ae4ba7_VariadicExpr> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1b2bd09c9_SliceExprModel> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1b2ae6e40_FieldExprPair> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1b2ae854b_KeyValPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1b2ae3315_TupleExpr> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1b2bd3c0d_TupleExprModel> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1b2ae644a_FnCallExpr> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1b2bd7508_RuneExprModel> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1b2db1627_TypeKind> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1b2bd3911_ArrayExprModel> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1b2ae5834_SubIdentExpr> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1b2addcb1_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1b2ae47cd_UnaryExpr> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1b2add3dc_TypeDecl> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1b2ae545a_NamespaceExpr> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1b2ade18a_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1b2bd226c_SlicingExprModel> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1b2bcec4d_CastingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1b2ae8c77_SliceExpr> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1b2bce3bd_StructLitExprModel> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1b2bd3537_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1b2bd2800_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1b2bd3191_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1b2bd1bd9_MapExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1b2bd1436_AnonFnExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1b2ae29da_RangeExpr> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1b2ae36ab_LitExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1b2ae3a85_UnsafeExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1b2ae96d4_IndexingExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1b2ae9d44_SlicingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1b2ae5081_CastExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1b2ae776a_StructLit> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1b2ae7c21_BraceLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1b2ae5cda_BinaryExpr> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1b2bcd9e9_UnaryExprModel> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1b2bcd620_BinaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1b2bce6ba_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1b2bd488a_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1b2bd521a_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1b2bd58e1_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1b2bd5bdd_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1b2bd6b67_SizeofExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1b2bd731b_AlignofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1b46d471d_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1b46d7006_StrRuneIter> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1b46d5be7_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1b46d6753_PushToSliceExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1b46d6b2c_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1b46d4993_SwapExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1b46d4d6c_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1b46d5664_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1b46d5ee4_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1b46d7303_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1b46d51e1_RefExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1b2bce027_StructArgExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1b46d7600_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1b46d6379_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator46, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type136_to_str(void *alloc) noexcept { return _1b4c00e7b_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator170, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type137_to_str(void *alloc) noexcept { return _1b4c0b12e_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type138_to_str(void *alloc) noexcept { return _1b4be2852_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1b4be0586_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1b4c033bd_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1b4c05810_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
inline jule::Bool __jule_anon1b64d3053(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bdc91a_ParamIns> _25021_p1, jule::Ptr<_1b2bdc91a_ParamIns> _25036_p2);
struct __jule_anon_1b6548a8b_ctx{
	jule::Ptr<_1b2c7770d_comptimeStructField> _self_;
};
static void __jule_anon_1b6548a8b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6548a8b_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6548a8b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _6521_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _6536_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b654aa16_ctx{
	jule::Ptr<_1b2c7770d_comptimeStructField> _self_;
};
static void __jule_anon_1b654aa16_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b654aa16_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b654aa16(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _7221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _7236_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b655e574_ctx{
	jule::Ptr<_1b2c7a931_comptimeStatic> _self_;
};
static void __jule_anon_1b655e574_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b655e574_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b655e574(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _17821_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _17836_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b65614ee_ctx{
	jule::Ptr<_1b2c7a931_comptimeStatic> _self_;
};
static void __jule_anon_1b65614ee_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b65614ee_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b65614ee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _18521_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _18536_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b657291c_ctx{
	jule::Ptr<_1b2c7db54_comptimeEnumField> _self_;
};
static void __jule_anon_1b657291c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b657291c_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b657291c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _28321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _28336_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6589725_ctx{
	jule::Ptr<_1b2c8196a_comptimeParam> _self_;
};
static void __jule_anon_1b6589725_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6589725_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6589725(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _40221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _40236_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b658b6a0_ctx{
	jule::Ptr<_1b2c8196a_comptimeParam> _self_;
};
static void __jule_anon_1b658b6a0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b658b6a0_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b658b6a0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _40921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _40936_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b658d62a_ctx{
	jule::Ptr<_1b2c8196a_comptimeParam> _self_;
};
static void __jule_anon_1b658d62a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b658d62a_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b658d62a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _41621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _41636_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b662ce4a_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b662ce4a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b662ce4a_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b662ce4a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _97421_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _97436_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b662edc5_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b662edc5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b662edc5_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b662edc5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _98121_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _98136_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6631d50_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b6631d50_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6631d50_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6631d50(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _98821_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _98836_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6633cca_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b6633cca_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6633cca_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6633cca(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _99521_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _99536_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6635c55_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b6635c55_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6635c55_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6635c55(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _100221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _100236_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6637bd0_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b6637bd0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6637bd0_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6637bd0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _100921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _100936_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6639b5a_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b6639b5a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6639b5a_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6639b5a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _101621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _101636_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b663bad5_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b663bad5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b663bad5_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b663bad5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _102321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _102336_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b663dba3_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b663dba3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b663dba3_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b663dba3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _103021_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _103036_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6640b2d_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b6640b2d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6640b2d_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6640b2d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _103721_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _103736_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6642aa8_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b6642aa8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6642aa8_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6642aa8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _104421_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _104436_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6644a33_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b6644a33_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6644a33_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6644a33(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _105121_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _105136_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b66469ad_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b66469ad_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b66469ad_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66469ad(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _105821_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _105836_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6648938_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b6648938_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6648938_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6648938(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _106521_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _106536_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b664a8b3_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b664a8b3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b664a8b3_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b664a8b3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _107221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _107236_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b664c83d_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b664c83d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b664c83d_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b664c83d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _107921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _107936_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b664e7b8_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b664e7b8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b664e7b8_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b664e7b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _108621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _108636_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6651743_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b6651743_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6651743_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6651743(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _109321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _109336_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b66536bd_ctx{
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b66536bd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b66536bd_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66536bd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _110021_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _110036_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b667e9a2_ctx{
	jule::Ptr<_1b2c8cba7_comptimeValue> _self_;
};
static void __jule_anon_1b667e9a2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b667e9a2_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b667e9a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _126221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _126236_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b668192c_ctx{
	jule::Ptr<_1b2c8cba7_comptimeValue> _self_;
};
static void __jule_anon_1b668192c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b668192c_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b668192c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _126921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _126936_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b66838a7_ctx{
	jule::Ptr<_1b2c8cba7_comptimeValue> _self_;
};
static void __jule_anon_1b66838a7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b66838a7_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66838a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _127621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _127636_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6685832_ctx{
	jule::Ptr<_1b2c8cba7_comptimeValue> _self_;
};
static void __jule_anon_1b6685832_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6685832_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6685832(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _128321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _128336_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b66877ac_ctx{
	jule::Ptr<_1b2c8cba7_comptimeValue> _self_;
};
static void __jule_anon_1b66877ac_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b66877ac_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66877ac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _129021_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _129036_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6689737_ctx{
	jule::Ptr<_1b2c8cba7_comptimeValue> _self_;
};
static void __jule_anon_1b6689737_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6689737_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6689737(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _129721_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _129736_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b668b6b2_ctx{
	jule::Ptr<_1b2c8cba7_comptimeValue> _self_;
};
static void __jule_anon_1b668b6b2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b668b6b2_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b668b6b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _130421_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _130436_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b66a13ca_ctx{
	jule::Ptr<_1b2c92382_comptimeFile> _self_;
};
static void __jule_anon_1b66a13ca_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b66a13ca_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66a13ca(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _142921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _142936_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b66a3355_ctx{
	jule::Ptr<_1b2c92382_comptimeFile> _self_;
};
static void __jule_anon_1b66a3355_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b66a3355_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66a3355(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _143621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _143636_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b66a52d0_ctx{
	jule::Ptr<_1b2c92382_comptimeFile> _self_;
};
static void __jule_anon_1b66a52d0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b66a52d0_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66a52d0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _144321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _144336_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b67191bd_ctx{
	jule::Ptr<_1b2c96298_comptimeDecl> _self_;
};
static void __jule_anon_1b67191bd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b67191bd_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b67191bd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _194921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _194936_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b671b148_ctx{
	jule::Ptr<_1b2c96298_comptimeDecl> _self_;
};
static void __jule_anon_1b671b148_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b671b148_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b671b148(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _195621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _195636_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b671d0c3_ctx{
	jule::Ptr<_1b2c96298_comptimeDecl> _self_;
};
static void __jule_anon_1b671d0c3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b671d0c3_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b671d0c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _196321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _196336_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b672004d_ctx{
	jule::Ptr<_1b2c96298_comptimeDecl> _self_;
};
static void __jule_anon_1b672004d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b672004d_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b672004d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _197021_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _197036_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6721ec8_ctx{
	jule::Ptr<_1b2c96298_comptimeDecl> _self_;
};
static void __jule_anon_1b6721ec8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6721ec8_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6721ec8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _197721_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _197736_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6723e53_ctx{
	jule::Ptr<_1b2c96298_comptimeDecl> _self_;
};
static void __jule_anon_1b6723e53_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6723e53_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6723e53(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _198421_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _198436_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6725dcd_ctx{
	jule::Ptr<_1b2c96298_comptimeDecl> _self_;
};
static void __jule_anon_1b6725dcd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6725dcd_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6725dcd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _199121_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _199136_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6727d58_ctx{
	jule::Ptr<_1b2c96298_comptimeDecl> _self_;
};
static void __jule_anon_1b6727d58_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6727d58_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6727d58(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _199821_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _199836_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b6729e26_ctx{
	jule::Ptr<_1b2c96298_comptimeDecl> _self_;
};
static void __jule_anon_1b6729e26_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6729e26_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6729e26(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _200521_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _200536_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b672bda1_ctx{
	jule::Ptr<_1b2c96298_comptimeDecl> _self_;
};
static void __jule_anon_1b672bda1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b672bda1_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b672bda1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _201221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _201236_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b672dd2b_ctx{
	jule::Ptr<_1b2c96298_comptimeDecl> _self_;
};
static void __jule_anon_1b672dd2b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b672dd2b_ctx>().dealloc(); }
inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b672dd2b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _201921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _201936_fc, jule::Ptr<_1b2d7dc21_Data>* );
struct __jule_anon_1b673a101_ctx{
	jule::Ptr<_1b2c9cb84_constraintChecker> _self_;
};
static void __jule_anon_1b673a101_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b673a101_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b673a101(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d03091_sema>* _6415_sema, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>* _6433_generics);
struct __jule_anon_1b6a53e75_ctx{
	jule::Ptr<_1b2cd4e1e_ImportInfo> *_48528_pkg;
};
static void __jule_anon_1b6a53e75_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6a53e75_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b6a53e75(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd4e1e_ImportInfo> _48635_spkg);
struct __jule_anon_1b6b5eee8_ctx{
	jule::Ptr<_1b2bdda70_FnIns> _82647_f;
	jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> _82711_generics;
	jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> *_82663_ignored;
};
static void __jule_anon_1b6b5eee8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6b5eee8_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b6b5eee8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d03091_sema>* _83342_sema);
struct __jule_anon_1b6b7cd29_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1b2d03091_sema>*,jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>*> _92946_algo;
	jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _9347_generics;
};
static void __jule_anon_1b6b7cd29_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6b7cd29_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b6b7cd29(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d03091_sema>* _93642_sema);
struct __jule_anon_1b6b82614_ctx{
	jule::Ptr<_1b2bdda70_FnIns> _94837_f;
	jule::Ptr<_1b2d03091_sema> _self_;
};
static void __jule_anon_1b6b82614_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b6b82614_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b6b82614(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d03091_sema>* _95237_sema, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>* _95255_generics);
struct __jule_anon_1b71db167_ctx{
	jule::Ptr<_1b2ae545a_NamespaceExpr> _187133_s;
};
static void __jule_anon_1b71db167_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b71db167_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b71db167(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd4e1e_ImportInfo> _187243_imp);
inline jule::Str __jule_anon1b7515b78(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def);
struct __jule_anon_1b7599833_ctx{
	jule::Ptr<_1b2ade18a_NamespaceTypeDecl> _154034_ns;
};
static void __jule_anon_1b7599833_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b7599833_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b7599833(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd4e1e_ImportInfo> _154143_imp);
struct __jule_anon_1b7c36200_ctx{
	jule::Ptr<_1b482acc6_ObjectDeadCode> _self_;
};
static void __jule_anon_1b7c36200_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b7c36200_ctx>().dealloc(); }
inline void __jule_anon_1b7c36200(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _21031_file);
struct __jule_anon_1b7c8e2ad_ctx{
	_1b48343c8_exprDeadCode *_self_;
};
static void __jule_anon_1b7c8e2ad_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b7c8e2ad_ctx>().dealloc(); }
inline void __jule_anon_1b7c8e2ad(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr);
struct __jule_anon_1b7e41174_ctx{
	_1b46e76dc_exprOptimizer *_self_;
};
static void __jule_anon_1b7e41174_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b7e41174_ctx>().dealloc(); }
inline void __jule_anon_1b7e41174(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _54947_m);
struct __jule_anon_1b8118648_ctx{
	jule::Ptr<_1b4839202_scopeCoder> _self_;
	jule::Bool _1017_ref;
};
static void __jule_anon_1b8118648_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b8118648_ctx>().dealloc(); }
inline void __jule_anon_1b8118648(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b811c152_ctx{
	jule::Ptr<_1b4839202_scopeCoder> _self_;
	jule::Ptr<_1b2ca63c9_RangeIter> *_9336_it;
};
static void __jule_anon_1b811c152_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b811c152_ctx>().dealloc(); }
inline void __jule_anon_1b811c152(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b813c738_ctx{
	jule::Ptr<_1b4839202_scopeCoder> _self_;
};
static void __jule_anon_1b813c738_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b813c738_ctx>().dealloc(); }
inline void __jule_anon_1b813c738(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b813ec24_ctx{
	jule::Ptr<_1b4839202_scopeCoder> _self_;
};
static void __jule_anon_1b813ec24_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b813ec24_ctx>().dealloc(); }
inline void __jule_anon_1b813ec24(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b8158bd8_ctx{
	jule::Ptr<_1b4839202_scopeCoder> _self_;
};
static void __jule_anon_1b8158bd8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b8158bd8_ctx>().dealloc(); }
inline void __jule_anon_1b8158bd8(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b81e3899_ctx{
	jule::Ptr<_1b4839202_scopeCoder> _self_;
};
static void __jule_anon_1b81e3899_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b81e3899_ctx>().dealloc(); }
inline void __jule_anon_1b81e3899(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b81e4bca_ctx{
	jule::Ptr<_1b4839202_scopeCoder> _self_;
	jule::Ptr<_1b2ca8cc2_Match> _74030_m;
};
static void __jule_anon_1b81e4bca_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b81e4bca_ctx>().dealloc(); }
inline void __jule_anon_1b81e4bca(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b826a404_ctx{
	jule::Ptr<_1b4839202_scopeCoder> _self_;
	jule::Ptr<_1b2bd1436_AnonFnExprModel> _111034_m;
};
static void __jule_anon_1b826a404_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b826a404_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b826a404(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d26ca7_Var> _111667_v);
struct __jule_anon_1b86057a0_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b86057a0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b86057a0_ctx>().dealloc(); }
inline void __jule_anon_1b86057a0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _85338_pkg);
struct __jule_anon_1b8606c79_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b8606c79_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b8606c79_ctx>().dealloc(); }
inline void __jule_anon_1b8606c79(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn>* _86636_m);
struct __jule_anon_1b860c3de_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b860c3de_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b860c3de_ctx>().dealloc(); }
inline void __jule_anon_1b860c3de(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _87938_pkg);
struct __jule_anon_1b861ca92_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
	jule::Ptr<_1b2d26ca7_Var> _94624_v;
};
static void __jule_anon_1b861ca92_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b861ca92_ctx>().dealloc(); }
inline void __jule_anon_1b861ca92(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b861eb82_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
	jule::Ptr<_1b2d26ca7_Var> _94624_v;
};
static void __jule_anon_1b861eb82_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b861eb82_ctx>().dealloc(); }
inline void __jule_anon_1b861eb82(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b862238d_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b862238d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b862238d_ctx>().dealloc(); }
inline void __jule_anon_1b862238d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b8623537_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
	jule::Ptr<_1b2d26ca7_Var> _94624_v;
};
static void __jule_anon_1b8623537_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b8623537_ctx>().dealloc(); }
inline void __jule_anon_1b8623537(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b86416ed_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b86416ed_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b86416ed_ctx>().dealloc(); }
inline void __jule_anon_1b86416ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _108938_pkg);
struct __jule_anon_1b8641b60_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
	jule::Ptr<_1b2b119c6_StructIns> _110355_s;
};
static void __jule_anon_1b8641b60_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b8641b60_ctx>().dealloc(); }
inline void __jule_anon_1b8641b60(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn>* _110436_m);
struct __jule_anon_1b865525b_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b865525b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b865525b_ctx>().dealloc(); }
inline void __jule_anon_1b865525b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _114138_pkg);
struct __jule_anon_1b8665887_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b8665887_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b8665887_ctx>().dealloc(); }
inline void __jule_anon_1b8665887(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _121338_pkg);
struct __jule_anon_1b8666d61_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b8666d61_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b8666d61_ctx>().dealloc(); }
inline void __jule_anon_1b8666d61(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _123631_file);
struct __jule_anon_1b8673202_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b8673202_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b8673202_ctx>().dealloc(); }
inline void __jule_anon_1b8673202(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _127538_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1b8710c51(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1b87188b3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1b653c3ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd4e1e_ImportInfo> _203925_pkg);
struct __jule_anon_1b86066b3_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b86066b3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b86066b3_ctx>().dealloc(); }
inline void __jule_anon_1b86066b3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _85432_file);
struct __jule_anon_1b860d302_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b860d302_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b860d302_ctx>().dealloc(); }
inline void __jule_anon_1b860d302(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _88032_file);
struct __jule_anon_1b8642600_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b8642600_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b8642600_ctx>().dealloc(); }
inline void __jule_anon_1b8642600(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _109032_file);
struct __jule_anon_1b865616e_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b865616e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b865616e_ctx>().dealloc(); }
inline void __jule_anon_1b865616e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _114232_file);
struct __jule_anon_1b866679a_ctx{
	jule::Ptr<_1b2cd7691_Package> *_121338_pkg;
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
};
static void __jule_anon_1b866679a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b866679a_ctx>().dealloc(); }
inline void __jule_anon_1b866679a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _121432_file);
struct __jule_anon_1b864943c_ctx{
	jule::Ptr<_1b491d2d6_ObjectCoder> _self_;
	jule::Ptr<_1b2be61c6_Trait> _109117_t;
};
static void __jule_anon_1b864943c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b864943c_ctx>().dealloc(); }
inline void __jule_anon_1b864943c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn>* _109539_m);
jule::Array<jule::Array<jule::Str,2>,5> _20dbc4235_HelpMap;
jule::Str _1b49aad13_OutDir;
jule::Str _1b49ab198_OutName;
jule::Str _1b49ab451_Out;
jule::Uintptr _227e30e7d_STDIN;
jule::Uintptr _227e312ad_STDOUT;
jule::Uintptr _227e31599_STDERR;
jule::Array<jule::U8,256> _228095147_first;
jule::Array<_2280956ec_acceptRange,16> _228095a93_acceptRanges;
jule::Array<jule::U8,32> _20c54da39__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _20c54e0cd__DE_BRUIJN64_TAB;
jule::I64 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_20d8b3e36_RangeTable> _20d8516dc__L;
jule::Ptr<_20d8b3e36_RangeTable> _20d852600__LU;
jule::Ptr<_20d8b3e36_RangeTable> _20d8585d4_Letter;
jule::Ptr<_20d8b3e36_RangeTable> _20d85e8a4_Upper;
jule::Slice<_20d8b2ece_CaseRange> _20d8ac094__CaseRanges;
jule::Array<jule::U8,256> _20d8ac380__PROPERTIES;
jule::Array<jule::U16,128> _20d8ae162_asciiFold;
jule::Slice<_20d8b29d4_foldPair> _20d8ae44d_caseOrbit;
jule::Array<jule::Str,4> _20da9658b_CppHeaderExts;
jule::Array<jule::Str,3> _20da98280_CppExts;
jule::Array<jule::Str,1> _20da9855a_ObjectiveCppExts;
jule::Str _20dbb9d85_PathStdlib;
jule::Str _20dbba094_PathExec;
jule::Str _20dbba34c_PathWd;
jule::Str _20dbba649_PathApi;
jule::Str _20dbba902_Os;
jule::Str _20dbbabaa_Arch;
jule::Str _20dbc0770_Compiler;
jule::Str _20dbc1b6c_CompilerPath;
jule::Str _20dbc1d7b_CppStd;
jule::Bool _20dbc20ac_Shadowing;
jule::Bool _20dbc2365_Transpilation;
jule::Bool _20dbc261d_Test;
jule::Bool _20dbc28c6_RC;
jule::Bool _20dbc2c8e_Safety;
jule::Bool _20dbc2ed1_Production;
_1cab113c5_floatInfo _1cab1176b_f32info;
_1cab113c5_floatInfo _1cab11a68_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1cab19488_detailedPowsOfTen;
jule::Slice<jule::I64> _1cab1b1e3_powtab;
jule::Slice<jule::F64> _1cab1bca4_f64pow10;
jule::Slice<jule::F32> _1cab1c0d4_f32pow10;
jule::Array<jule::U64,20> _1cab202d5_u64pow10;
jule::Slice<_1cab24075_leftCheat> _1cab244a4_leftCheats;
jule::Array<jule::I32,5> _1b2a29537_Spaces;
jule::Array<jule::U64,6> _1b2a29746_UnaryOps;
jule::Array<jule::U64,18> _1b2a29a10_BinOps;
jule::Array<jule::U64,2> _1b2ac249d_PostfixOps;
jule::Array<jule::U64,11> _1b2ac2789_AssignOps;
jule::Array<_1b2ad0874_kindPair,28> _1b2ad0ca3_keywords;
jule::Array<_1b2ad0874_kindPair,46> _1b2ad10d3_basicOps;
jule::I64 _1b2c6b191_BitSize;
jule::Str _1b2c6b3e4_SysInt;
jule::Str _1b2c6b603_SysUint;
jule::Slice<jule::Str> _1b2c9c348_builtinConstraints;
jule::Ptr<_1b2db1627_TypeKind> _1b2e91c68_primNil;
jule::Ptr<_1b2db1627_TypeKind> _1b2e92065_primVoid;
jule::Ptr<_1b2db1627_TypeKind> _1b2e9231d_primAny;
jule::Ptr<_1b2db1627_TypeKind> _1b2e9261a_primStr;
jule::Ptr<_1b2db1627_TypeKind> _1b2e928c3_primBool;
jule::Ptr<_1b2db1627_TypeKind> _1b2e92b7b_primUintptr;
jule::Ptr<_1b2db1627_TypeKind> _1b2e92e34_primUint;
jule::Ptr<_1b2db1627_TypeKind> _1b2e932ec_primInt;
jule::Ptr<_1b2db1627_TypeKind> _1b2e9353e_primI8;
jule::Ptr<_1b2db1627_TypeKind> _1b2e937d6_primI16;
jule::Ptr<_1b2db1627_TypeKind> _1b2e93a8e_primI32;
jule::Ptr<_1b2db1627_TypeKind> _1b2e93d47_primI64;
jule::Ptr<_1b2db1627_TypeKind> _1b2e94100_primU8;
jule::Ptr<_1b2db1627_TypeKind> _1b2e943a8_primU16;
jule::Ptr<_1b2db1627_TypeKind> _1b2e94661_primU32;
jule::Ptr<_1b2db1627_TypeKind> _1b2e94b4a_primU64;
jule::Ptr<_1b2db1627_TypeKind> _1b2e94d8c_primF32;
jule::Ptr<_1b2db1627_TypeKind> _1b2e9509b_primF64;
jule::Ptr<_1b4700915_data> _1b47000b8_emptyData;
jule::Bool _1b4704d8c_Copy;
jule::Bool _1b4705189_Deadcode;
jule::Bool _1b4705442_Append;
jule::Bool _1b470573e_Math;
jule::Bool _1b47059e7_Access;
jule::Bool _1b4705ca0_Inline;
jule::Bool _1b4706058_Ptr;
jule::Bool _1b4706421_Cond;
jule::Bool _1b4706663_Str;
jule::Bool _1b470690a_Slice;
jule::Bool _1b4706bb3_Assign;
jule::Bool _1b4706e6b_Exceptional;
jule::Bool _1b4707224_Iter;
jule::Bool _1b47074cc_Dynamic;
jule::Bool _1b4835154_exprEnabled;
jule::Bool _1b4835363_scopeEnabled;
jule::Array<jule::U64,12> _1b4910262_mdays;
jule::Str _1b4838993_assignArgName;
jule::Ptr<_1b2db1627_TypeKind> _1b491ac0c_generalGCPtr;
jule::Slice<_20d8b2ece_CaseRange> _20d8abca8_CaseRanges;


inline jule::Bool _2280956ec_acceptRange_eq(_2280956ec_acceptRange *_self_, _2280956ec_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _2280d92ce_LittleEndian_eq(_2280d92ce_LittleEndian *_self_, _2280d92ce_LittleEndian _other_) { return true; }

inline jule::U32 static__2280eeb52_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__22810057b_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _228103bab_u128_eq(_228103bab_u128 *_self_, _228103bab_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1b7ed3e09_group_eq(_1b7ed3e09_group *_self_, _1b7ed3e09_group _other_) {
	return 
		_1b4c26da3_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1b7ed4646_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1b7ed1ab6__Map> static__1b7ed217c_make(void) {
	return jule::new_ptr<_1b7ed1ab6__Map>(_1b7ed1ab6__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1b7ed3e09_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1b7ed22d1_initData(_1b7ed1ab6__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _20c55d917_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1b7ed3e09_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b7ed3e09_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8001421:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_20c55db26_newEmptyMetadata();
			}
			_iter_next_1b8001421:;
			++it;
			_1407_i++;
			goto _iter_begin_1b8001421;
		}
		_iter_end_1b8001421:;
	};
}



inline jule::U64 _1b7ed2435_hash(_1b7ed1ab6__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1b4bdc396_toStr(_14616_k);;
	return _228107132_hash(_227e7c3d6_StrBytes(_1473_bytes));;
}



inline void _1b7ed2589_rehash(_1b7ed1ab6__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1b7ed22d1_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1b7ed3e09_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1b7ed3e09_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1b7ed3e09_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b7ed3e09_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8004a1d:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_20c55db26_newEmptyMetadata();
			}
			_iter_next_1b8004a1d:;
			++it;
			_1617_i++;
			goto _iter_begin_1b8004a1d;
		}
		_iter_end_1b8004a1d:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8004677:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8006503:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1b8006503;
							};
							{
								(*(_1b7ed2aea_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1b8006503:;
						++it;
						_1678_s++;
						goto _iter_begin_1b8006503;
					}
					_iter_end_1b8006503:;
				};
			}
			_iter_next_1b8004677:;
			++it;
			_1667_g++;
			goto _iter_begin_1b8004677;
		}
		_iter_end_1b8004677:;
	};
}



inline jule::I64 _1b7ed26dd_nextSize(_1b7ed1ab6__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1b7ed2842_lookup(jule::Ptr<_1b7ed1ab6__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20c55e000_splitHash(_1b7ed2435_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _20c55e2ec_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _20c55c99e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _20c55d076_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1b800cbe1:;
			}
			_iter_end_1b800cbe1:;;
			_2018_matches=_20c55ccac_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1b80098e1:;
	}
	_iter_end_1b80098e1:;;
}



inline jule::Bool _1b7ed2996_get(jule::Ptr<_1b7ed1ab6__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1b7ed2842_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1b7ed2aea_set(_1b7ed1ab6__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1b7ed2589_rehash(_self_, _1b7ed26dd_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20c55e000_splitHash(_1b7ed2435_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _20c55e2ec_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _20c55c99e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _20c55d076_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1b8015a2e:;
			}
			_iter_end_1b8015a2e:;;
			_2488_matches=_20c55ccac_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _20c55d076_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1b80149c8:;
	}
	_iter_end_1b80149c8:;;
}



inline jule::Bool _1b7ed2c4e_del(jule::Ptr<_1b7ed1ab6__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20c55e000_splitHash(_1b7ed2435_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _20c55e2ec_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _20c55c99e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _20c55d076_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_20c55ccac_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1b801d718:;
			}
			_iter_end_1b801d718:;;
			_2838_matches=_20c55ccac_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1b801c492:;
	}
	_iter_end_1b801c492:;;
}



inline void _1b7ed2da3_clear(jule::Ptr<_1b7ed1ab6__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8024eb1:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b802592e:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1b802592e:;
						++it;
						_3298_j++;
						goto _iter_begin_1b802592e;
					}
					_iter_end_1b802592e:;
				};
			}
			_iter_next_1b8024eb1:;
			++it;
			_3287_i++;
			goto _iter_begin_1b8024eb1;
		}
		_iter_end_1b8024eb1:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b801ca47:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1b7ed3e09_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b8028080:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1b8028080:;
							++it;
							_3389_j++;
							goto _iter_begin_1b8028080;
						}
						_iter_end_1b8028080:;
					};
				};
			}
			_iter_next_1b801ca47:;
			++it;
			_3357_i++;
			goto _iter_begin_1b801ca47;
		}
		_iter_end_1b801ca47:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1b7ed3007_len(jule::Ptr<_1b7ed1ab6__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1b7ed315b_cap(_1b7ed1ab6__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1b7edd342_mapIterator _1b7ed32b0_iterator(jule::Ptr<_1b7ed1ab6__Map> _self_) {
	_1b7edd342_mapIterator _3607_iterator = _1b7edd342_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1b7ed3e09_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1b7edd8c5_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1b802c5c3__Map> static__1b802cae0_make(void) {
	return jule::new_ptr<_1b802c5c3__Map>(_1b802c5c3__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1b802e6b3_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1b802cc44_initData(_1b802c5c3__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _20c55d917_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1b802e6b3_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b802e6b3_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1b2bdda70_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2bdda70_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8049c3e:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_20c55db26_newEmptyMetadata();
			}
			_iter_next_1b8049c3e:;
			++it;
			_1407_i++;
			goto _iter_begin_1b8049c3e;
		}
		_iter_end_1b8049c3e:;
	};
}



inline jule::U64 _1b802cd98_hash(_1b802c5c3__Map* _self_, jule::Ptr<_1b2bdda70_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1b6b00120_toStr(_14616_k);;
	return _228107132_hash(_227e7c3d6_StrBytes(_1473_bytes));;
}



inline void _1b802ceec_rehash(_1b802c5c3__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1b802cc44_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1b802e6b3_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1b802e6b3_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1b802e6b3_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b802e6b3_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1b2bdda70_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2bdda70_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b804d33b:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_20c55db26_newEmptyMetadata();
			}
			_iter_next_1b804d33b:;
			++it;
			_1617_i++;
			goto _iter_begin_1b804d33b;
		}
		_iter_end_1b804d33b:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b804ce95:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b804ed21:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1b804ed21;
							};
							{
								(*(_1b802d55d_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1b804ed21:;
						++it;
						_1678_s++;
						goto _iter_begin_1b804ed21;
					}
					_iter_end_1b804ed21:;
				};
			}
			_iter_next_1b804ce95:;
			++it;
			_1667_g++;
			goto _iter_begin_1b804ce95;
		}
		_iter_end_1b804ce95:;
	};
}



inline jule::I64 _1b802d151_nextSize(_1b802c5c3__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1b802d2a5_lookup(jule::Ptr<_1b802c5c3__Map> _self_, jule::Ptr<_1b2bdda70_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20c55e000_splitHash(_1b802cd98_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _20c55e2ec_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _20c55c99e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _20c55d076_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1b805650e:;
			}
			_iter_end_1b805650e:;;
			_2018_matches=_20c55ccac_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1b805320e:;
	}
	_iter_end_1b805320e:;;
}



inline jule::Slice<jule::Uintptr> _1b802d409_get(jule::Ptr<_1b802c5c3__Map> _self_, jule::Ptr<_1b2bdda70_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1b802d2a5_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1b802d55d_set(_1b802c5c3__Map* _self_, jule::Ptr<_1b2bdda70_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1b802ceec_rehash(_self_, _1b802d151_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20c55e000_splitHash(_1b802cd98_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _20c55e2ec_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _20c55c99e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _20c55d076_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1b805e34c:;
			}
			_iter_end_1b805e34c:;;
			_2488_matches=_20c55ccac_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _20c55d076_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1b805d2e6:;
	}
	_iter_end_1b805d2e6:;;
}



inline jule::Bool _1b802d6b2_del(jule::Ptr<_1b802c5c3__Map> _self_, jule::Ptr<_1b2bdda70_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20c55e000_splitHash(_1b802cd98_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _20c55e2ec_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _20c55c99e_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _20c55d076_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_20c55ccac_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Ptr<_1b2bdda70_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1b8067036:;
			}
			_iter_end_1b8067036:;;
			_2838_matches=_20c55ccac_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1b8065cb0:;
	}
	_iter_end_1b8065cb0:;;
}



inline void _1b802d816_clear(jule::Ptr<_1b802c5c3__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b806d7ce:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b806e24c:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1b806e24c:;
						++it;
						_3298_j++;
						goto _iter_begin_1b806e24c;
					}
					_iter_end_1b806e24c:;
				};
			}
			_iter_next_1b806d7ce:;
			++it;
			_3287_i++;
			goto _iter_begin_1b806d7ce;
		}
		_iter_end_1b806d7ce:;
	};
	jule::Ptr<_1b2bdda70_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8066365:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1b802e6b3_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b807189d:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1b807189d:;
							++it;
							_3389_j++;
							goto _iter_begin_1b807189d;
						}
						_iter_end_1b807189d:;
					};
				};
			}
			_iter_next_1b8066365:;
			++it;
			_3357_i++;
			goto _iter_begin_1b8066365;
		}
		_iter_end_1b8066365:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1b802d96a_len(jule::Ptr<_1b802c5c3__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1b802dabe_cap(_1b802c5c3__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1b8036b1b_mapIterator _1b802dc23_iterator(jule::Ptr<_1b802c5c3__Map> _self_) {
	_1b8036b1b_mapIterator _3607_iterator = _1b8036b1b_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1b802e6b3_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1b803719e_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1b7edd8c5_init(_1b7edd342_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1b7ed3e09_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1b7ed3007_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_225e8c827_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1b7edda29_next(_1b7edd342_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1b7ee64b0;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1b7ee64b0:;
			}
			_iter_end_1b7ee64b0:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1b7ee5745:;
	}
	_iter_end_1b7ee5745:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1b803719e_init(_1b8036b1b_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1b802e6b3_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1b802d96a_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_225e8c827_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1b2bdda70_FnIns__jule_tuple_psuintptr _1b8037303_next(_1b8036b1b_mapIterator* _self_) {
	__jule_tuple_px_1b2bdda70_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1b803eccd;
					};
					jule::Ptr<_1b2bdda70_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1b803eccd:;
			}
			_iter_end_1b803eccd:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1b803e063:;
	}
	_iter_end_1b803e063:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}








inline jule::Bool _20d8b29d4_foldPair_eq(_20d8b29d4_foldPair *_self_, _20d8b29d4_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _20d8b2ece_CaseRange_eq(_20d8b2ece_CaseRange *_self_, _20d8b2ece_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_1b4c7a2be_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _20d8b3485_Range16_eq(_20d8b3485_Range16 *_self_, _20d8b3485_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _20d8b39b3_Range32_eq(_20d8b39b3_Range32 *_self_, _20d8b39b3_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline _20d8ca601_Builder static__20d8cb1c3_New(jule::I64 _1516_cap) {
	if ((_1516_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("strings: Builder.New: cap < 0", 29) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:4"));;
	};
	return _20d8ca601_Builder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1516_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline void _20d8d4819_Write(_20d8ca601_Builder* _self_, jule::Slice<jule::U8> _2521_b) {
	((*(_self_))._field_buf).append(_2521_b);;
}



inline void _20d8d4ac2_WriteStr(_20d8ca601_Builder* _self_, jule::Str _3024_s) {
	((*(_self_))._field_buf).append(_3024_s);;
}



inline void _20d8d4d7a_WriteByte(_20d8ca601_Builder* _self_, jule::U8 _3525_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3525_b); };
}



inline jule::Str _20d8d53b9_Str(_20d8ca601_Builder* _self_) {
	jule::Str _507_s = _227e7c936_StrFromBytes((*(_self_))._field_buf);;
	_20d8d55b7_Clear(_self_);
	return _507_s;;
}



inline void _20d8d55b7_Clear(_20d8ca601_Builder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _20d8d584d_Len(_20d8ca601_Builder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _20d8d5d6a_Buf(_20d8ca601_Builder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _20d8d6123_SetBuf(_20d8ca601_Builder* _self_, jule::Slice<jule::U8> _7733_buf) {
	(*(_self_))._field_buf=_7733_buf;
}







inline jule::U8 _227d32c81_index(_227d327b9_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _227d33039_append(_227d327b9_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _227d332c0_string(_227d327b9_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _227e7c66c_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _20c648c55_DirEntry_eq(_20c648c55_DirEntry *_self_, _20c648c55_DirEntry _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		(_self_->_field_Stat == _self_->_field_Stat);
}






inline jule::Bool _20c648edb_Directory_eq(_20c648edb_Directory *_self_, _20c648edb_Directory _other_) { return true; }

inline jule::Exceptional<jule::Slice<jule::Ptr<_20c648c55_DirEntry>>> static__227d37071_Read(jule::Str _1517_path) {
	jule::Slice<jule::Ptr<_20c648c55_DirEntry>> __jule_func_result;
	jule::Slice<jule::U8> _163_s = _227e22ab8_StrToBytes(_1517_path);;
	DIR* _177_dir = _227e3314a_Opendir((&(_163_s[0LL])));;
	if ((_177_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_20c648c55_DirEntry>>>{.error=jule::Any(_20c6470d8_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _224_dirent = _227e33326_Readdir(_177_dir);;
			if ((_224_dirent == nullptr)) {
				goto _iter_end_1b59c4aa6;
			};
			jule::Str _264_name = _227e22832_BytePtrToStr(((jule::U8*)((*(_224_dirent)).d_name)));;
			jule::Ptr<_20c64c85d_Status> _278_stat = ({
				auto except = static__20c649827_Of(_227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = _264_name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_20c648c55_DirEntry>>>{.error=except.error};
				} jule::Ptr<_20c64c85d_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_20c648c55_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_20c648c55_DirEntry>(_20c648c55_DirEntry{._field_Name=_264_name, ._field_Stat=_278_stat})); };
		}
	_iter_next_1b59c4aa6:;
	}
	_iter_end_1b59c4aa6:;;
	_227e335bd_Closedir(_177_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_20c648c55_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__227d372a2_Create(jule::Str _4019_path) {
	jule::Slice<jule::U8> _443_s = _227e22ab8_StrToBytes(_4019_path);;
	if ((_227e33ec5_Mkdir((&(_443_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20c6470d8_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__227d374d3_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U8> _543_s = _227e22ab8_StrToBytes(_5319_path);;
	if ((_227e3428e_Rmdir((&(_543_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20c6470d8_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _20c64a729_File_eq(_20c64a729_File *_self_, _20c64a729_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Exceptional<jule::Ptr<_20c64a729_File>> static__20c647baa_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode) {
	jule::Slice<jule::U8> _213_s = _227e22ab8_StrToBytes(_2017_path);;
	jule::I64 _223_handle = _227e327cb_Open((&(_213_s[0LL])), _2028_flag, _2041_mode);;
	if ((_223_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_20c64a729_File>>{.error=jule::Any(_20c6470d8_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_20c64a729_File>>{.result=static__20c64ab7a_New(static_cast<jule::Uintptr>(_223_handle))};;
}



inline jule::VoidExceptional static__20c647ddb_Remove(jule::Str _3319_path) {
	jule::Slice<jule::U8> _343_s = _227e22ab8_StrToBytes(_3319_path);;
	if ((_227e34558_Unlink((&(_343_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20c6470d8_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _20c648370_Write(_20c64a729_File* _self_, jule::Slice<jule::U8> _4821_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_4821_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_22809ae50_handleRW(&(_4821_buf));
	__jule_func_result=_227e3a372_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_4821_buf[0LL])), static_cast<jule::U64>(_4821_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_20c6470d8_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _20c6486b1_Read(_20c64a729_File* _self_, jule::Slice<jule::U8> _6924_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_6924_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_22809ae50_handleRW(&(_6924_buf));
	__jule_func_result=_227e39ae1_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_6924_buf[0LL])), static_cast<jule::U64>(_6924_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_20c6470d8_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Ptr<_20c64a729_File> static__20c64ab7a_New(jule::Uintptr _4516_handle) {
	return jule::new_ptr<_20c64a729_File>(_20c64a729_File{._field_handle=_4516_handle});;
}



inline jule::Exceptional<jule::Ptr<_20c64a729_File>> static__20c64ae44_Create(jule::Str _5519_path) {
	return static__20c647baa_Open(_5519_path, static_cast<jule::I64>(578LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__20c64b20d_Read(jule::Str _6717_path) {
	jule::Ptr<_20c64c85d_Status> _683_s = ({
		auto except = static__20c649827_Of(_6717_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_20c64c85d_Status>(nullptr);});
	});;
	if ((!(_20c64d001_IsReg(_683_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _737_sz = static_cast<jule::I64>(_20c64d287_Size(_683_s));;
	if ((_737_sz != static_cast<jule::I64>(_20c64d287_Size(_683_s)))) {
		_737_sz=0LL;
	};
	if ((_737_sz < 512LLU)) {
		_737_sz=512LLU;
	};
	jule::Ptr<_20c64a729_File> _867_f = ({
		auto except = static__20c647baa_Open(_6717_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_20c64a729_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _877_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_737_sz, _737_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _887_n = 0LL;;
	while ((_887_n < _737_sz)) {
		{
			jule::I64 _904_rn = ({
				auto except = _20c6486b1_Read(_867_f.ptr(), _877_buf.slice(_887_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_904_rn == 0LL)) {
				goto _iter_end_1b59d5a73;
			};
			_887_n+=_904_rn;
		}
	_iter_next_1b59d5a73:;
	}
	_iter_end_1b59d5a73:;;
	({
		auto except = _20c64bce1_Close(_867_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_877_buf.slice(0LL, _887_n)};;
}



inline jule::VoidExceptional static__20c64b5a4_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm) {
	jule::Ptr<_20c64a729_File> _1067_f = ({
		auto except = static__20c647baa_Open(_10518_path, static_cast<jule::I64>(577LL), _10543_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_20c64a729_File>(nullptr);});
	});;
	jule::I64 _1077_n = 0LL;;
	while ((_1077_n < _10529_data.len())) {
		{
			_1077_n+=({
				auto except = _20c648370_Write(_1067_f.ptr(), _10529_data.slice(_1077_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1b59dae85:;
	}
	_iter_end_1b59dae85:;;
	return _20c64bce1_Close(_1067_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _20c64bce1_Close(_20c64a729_File* _self_) {
	if ((_227e39eba_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_20c6470d8_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _20c64c85d_Status_eq(_20c64c85d_Status *_self_, _20c64c85d_Status _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Exceptional<jule::Ptr<_20c64c85d_Status>> static__20c649827_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<jule::Ptr<_20c64c85d_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	struct stat _167_handle = (struct stat){};;
	jule::Slice<jule::U8> _173_s = _227e22ab8_StrToBytes(_1215_path);;
	jule::I64 _183_code = _227e3239c_Stat((&(_173_s[0LL])), (&(_167_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_20c64c85d_Status>>{.error=jule::Any(_20c6470d8_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_20c64c85d_Status> _227_stat = jule::new_ptr<_20c64c85d_Status>(_20c64c85d_Status{._field_mode=0LL, ._field_size=0});;
	(*_227_stat.alloc)._field_size=_167_handle.st_size;
	if (((_167_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_167_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_20c64c85d_Status>>{.result=_227_stat};;
}



inline jule::Bool _20c64cc6a_IsDir(_20c64c85d_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _20c64d001_IsReg(_20c64c85d_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _20c64d287_Size(_20c64c85d_Status* _self_) {
	return (*(_self_))._field_size;;
}








inline jule::Bool _20dbb7558_cmdAttrs_eq(_20dbb7558_cmdAttrs *_self_, _20dbb7558_cmdAttrs _other_) {
	return 
		(_self_->_field_pid == _other_._field_pid);
}






inline jule::Bool _20daa5e91_Log_eq(_20daa5e91_Log *_self_, _20daa5e91_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1cab113c5_floatInfo_eq(_1cab113c5_floatInfo *_self_, _1cab113c5_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1cab24075_leftCheat_eq(_1cab24075_leftCheat *_self_, _1cab24075_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1cab24a8c_decimal_eq(_1cab24a8c_decimal *_self_, _1cab24a8c_decimal _other_) {
	return 
		_1b5cc8d11_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1cab1b556_set(_1cab24a8c_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1b5eb9001:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1b5eb9188:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1b5eb8e8a:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1b5ebaad5:;
					{
						goto _iter_next_1b5eba365;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1b5ebab7e:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1b5eba365;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1b5ebabe5:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1b5eba365;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1b5eba365;
					}
				}
				_match_end_1b5eba9a3:;
			};
			goto _iter_end_1b5eba365;
		}
	_iter_next_1b5eba365:;
	}
	_iter_end_1b5eba365:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1cab16bb1_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1b5ec1a0e;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1b5ec1a0e:;
		}
		_iter_end_1b5ec1a0e:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1cab1b897_floatBits(_1cab24a8c_decimal* _self_, _1cab113c5_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1b5ed0556;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1b5ece5aa;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1b5ed0556;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1cab1b1e3_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1cab1b1e3_powtab[(*(_self_))._field_dp];
			};
			_1cab25230_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1b5ec6dbb:;
	}
	_iter_end_1b5ec6dbb:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1cab1b1e3_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1cab1b1e3_powtab[(-((*(_self_))._field_dp))];
			};
			_1cab25230_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1b5ec5419:;
	}
	_iter_end_1b5ec5419:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1cab25230_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_1b5ece5aa;
	};
	_1cab25230_shift(_self_, static_cast<jule::I64>((jule::U64)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1cab25cd0_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_1b5ece5aa;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1b5ed0556;
	_julec_label_1b5ece5aa:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((jule::U64)((jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1b5ed0556:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1cab24e77_assign(_1cab24a8c_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1b5ed2cc8:;
	}
	_iter_end_1b5ed2cc8:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1b5ed3746:;
	}
	_iter_end_1b5ed3746:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1cab263da_trim(_self_);
}



inline void _1cab25230_shift(_1cab24a8c_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1b5ed56c1:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1b5ed576a:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1cab26e35_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1b5ed6370:;
				}
				_iter_end_1b5ed6370:;;
				_1cab26e35_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1b5ed57d1:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1cab266c6_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1b5ed6293:;
				}
				_iter_end_1b5ed6293:;;
				_1cab266c6_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1b5ed555b:;
	};
}



inline void _1cab254d8_roundDown(_1cab24a8c_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1cab263da_trim(_self_);
}



inline void _1cab25791_roundUp(_1cab24a8c_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1b5ed972a:;
	}
	_iter_end_1b5ed972a:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1cab25a49_round(_1cab24a8c_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1cab272a9_shouldRoundUp(_self_, _23221_nd)) {
		_1cab25791_roundUp(_self_, _23221_nd);
	} else {
		_1cab254d8_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1cab25cd0_roundedInteger(_1cab24a8c_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1b5edc684:;
	}
	_iter_end_1b5edc684:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1b5ede686:;
	}
	_iter_end_1b5ede686:;;
	if (_1cab272a9_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}








inline jule::Bool _20dbe9a96_AnsiEscape_eq(_20dbe9a96_AnsiEscape *_self_, _20dbe9a96_AnsiEscape _other_) { return true; }

inline void static__20dbe8a0c_Reset(void) {
	jule::out(_1b4bdc396_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__20dbe9c83_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::out(_1b4bdc396_toStr(_1918_escape));
	jule::out(_1b4bdc396_toStr(_1931_text));
	static__20dbe8a0c_Reset();
}








inline jule::Bool _1cab2a224_Logger_eq(_1cab2a224_Logger *_self_, _1cab2a224_Logger _other_) { return true; }

inline void static__1cab2a4dd_LogFlat(_20daa5e91_Log* _1421_l) {
	jule::outln(_1b4bdc396_toStr((*(_1421_l))._field_Text));
}



inline void static__1cab2a6ec_LogError(_20daa5e91_Log* _1922_l) {
	jule::out(_1b4bdc396_toStr(jule::Str::lit("\033[31m", 5)));
	jule::out(_1b4bdc396_toStr(jule::Str::lit("error: ", 7)));
	jule::out(_1b4bdc396_toStr((*(_1922_l))._field_Text));
	static__20dbe8a0c_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::out(_1b4bdc396_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::out(_1b4bdc396_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::out(_1b4bdc396_toStr(jule::Str::lit(":", 1)));
		jule::out(_1b4bdc396_toStr(_1cab29113_Itoa((*(_1922_l))._field_Row)));
		jule::out(_1b4bdc396_toStr(jule::Str::lit(":", 1)));
		jule::out(_1b4bdc396_toStr(_1cab29113_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _20d8be480_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_20d8bd00b_Replace(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1), -1LL);
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::out(_1b4bdc396_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1cab29113_Itoa((*(_1922_l))._field_Row);;
		jule::out(_1b4bdc396_toStr(_434_row));
		jule::out(_1b4bdc396_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1b4bdc396_toStr(_388_line));
		jule::out(_1b4bdc396_toStr(jule::Str::lit("\n  ", 3)));
		jule::out(_1b4bdc396_toStr(_20d8b7302_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::out(_1b4bdc396_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1b4bdc396_toStr(_20d8b7302_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::out(_1b4bdc396_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::out(_1b4bdc396_toStr(jule::Str::lit("\n  ", 3)));
			jule::out(_1b4bdc396_toStr(_20d8b7302_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::out(_1b4bdc396_toStr(jule::Str::lit(" | ", 3)));
			static__20dbe9c83_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out(_1b4bdc396_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::outln(_1b4bdc396_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1cab2a92d_Log(_20daa5e91_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1b6012588:;
			{
				static__1cab2a4dd_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1b6012852:;
			{
				static__1cab2a6ec_LogError(_6417_l);
			}
		}
		_match_end_1b6012753:;
	};
}



inline void static__1cab2ab5e_PrintLogs(jule::Slice<_20daa5e91_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b601291d:;
		if (it != expr_end) {
			_20daa5e91_Log *_7510_l = it;
			{
				static__1cab2a92d_Log(_7510_l);
			}
			_iter_next_1b601291d:;
			++it;
			goto _iter_begin_1b601291d;
		}
		_iter_end_1b601291d:;
	};
	jule::out(_1b4bdc396_toStr(jule::Str::lit("=== ", 4)));
	jule::out(_1b4bdc396_toStr(_1cab29113_Itoa((*(_7423_logs)).len())));
	jule::outln(_1b4bdc396_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1b2ac7eba_Token_eq(_1b2ac7eba_Token *_self_, _1b2ac7eba_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1b2ac8372_Prec(_1b2ac7eba_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b6079358:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b607919e:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b6079215:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b60793be:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b6079446:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1b6078b82:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b60790c2:;
	};
}







inline jule::Ptr<_1b2acd872_Fileset> static__1b2acdcd4_New(jule::Str _1616_path) {
	return jule::new_ptr<_1b2acd872_Fileset>(_1b2acd872_Fileset{._field_Path=_1616_path, ._field_Data=jule::Slice<jule::U8>(nullptr), ._field_Tokens=jule::Slice<jule::Ptr<_1b2ac7eba_Token>>(nullptr)});;
}



inline void _1b2ace08c_Fill(_1b2acd872_Fileset* _self_, jule::Slice<jule::U8> _2324_data) {
	(*(_self_))._field_Data=_2324_data;
}



inline jule::Str _1b2ace323_Dir(_1b2acd872_Fileset* _self_) {
	return _227d34c61_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1b2ace5a9_Name(_1b2acd872_Fileset* _self_) {
	return _227d34887_Base((*(_self_))._field_Path);;
}



inline jule::Str _1b2aceb81_GetRow(_1b2acd872_Fileset* _self_, jule::I64 _4418_row) {
	jule::I64 _457_n = 0LL;;
	jule::I64 _467_lineStart = 0LL;;
	jule::I64 _477_i = 0LL;;
	for (; (_477_i < (*(_self_))._field_Data.len()); (_477_i)++) {
		{
			if (((*(_self_))._field_Data[_477_i] != '\n')) {
				goto _iter_next_1b607eb11;
			};
			(_457_n)++;
			if ((_457_n == _4418_row)) {
				return __jule_bytesToStr((*(_self_))._field_Data.slice(_467_lineStart, _477_i));;
			};
			_467_lineStart=(_477_i + 1LL);
		}
	_iter_next_1b607eb11:;
	}
	_iter_end_1b607eb11:;;
	return jule::Str();;
}








inline jule::Bool _1b2ad0874_kindPair_eq(_1b2ad0874_kindPair *_self_, _1b2ad0874_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1b2ad6e1e_pushErr(_1b2ad6858_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44743_args) {
	{ jule::Slice<_20daa5e91_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b2ad1622_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44723_fmt, _44743_args)); };
}



inline void _1b2ad7480_lex(_1b2ad6858_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1b2ad96a2_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1b2ac7eba_Token> _4628_token = _1b2adab8c_token(_self_);;
			if (((*(_4628_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1b2ac7eba_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4628_token); };
			};
		}
	_iter_next_1b60acaea:;
	}
	_iter_end_1b60acaea:;;
}



inline jule::Str _1b2ad77c1_id(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _47119_ln) {
	if (((*(_47119_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4753_r;
	jule::I64 _47510_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2280963ce_DecodeRune((*(_47119_ln)));
		_4753_r = __jule_assign_result.__jule_result_arg0;
		_47510_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4753_r != '_') && (!(_1b2acb6e9_IsLetter(_4753_r))))) {
		return jule::Str();;
	};
	while ((_47510_i < (*(_47119_ln)).len())) {
		{
			jule::I32 _4814_pr;
			jule::I64 _4818_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2280963ce_DecodeRune((*(_47119_ln)).slice(_47510_i));
				_4814_pr = __jule_assign_result.__jule_result_arg0;
				_4818_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4814_pr != '_') && (!(_1b2acbe36_IsDecimal(static_cast<jule::U8>(_4814_pr))))) && (!(_1b2acb6e9_IsLetter(_4814_pr))))) {
				(*(_self_))._field_pos+=_47510_i;
				return __jule_bytesToStr((*(_47119_ln)).slice(0LL, _47510_i));;
			};
			_47510_i+=_4818_n;
		}
	_iter_next_1b60b1170:;
	}
	_iter_end_1b60b1170:;;
	(*(_self_))._field_pos+=(*(_47119_ln)).len();
	return __jule_bytesToStr((*(_47119_ln)));;
}



inline jule::Slice<jule::U8> _1b2ad7a57_resume(_1b2ad6858_lex* _self_) {
	jule::I64 _4967_i = (*(_self_))._field_pos;;
	for (; (_4967_i < (*((*(_self_))._field_file))._field_Data.len()); (_4967_i)++) {
		{
			jule::I32 _4984_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4967_i]);;
			if (_1b2acb1ee_IsSpace(_4984_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4984_r };
					
					if (_match_expr == '\n') {
						_case_begin_1b60b5064:;
						{
							_1b2ad96a2_newLine(_self_);
						}
					}
					else {
						_case_begin_1b60b48e3:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1b60b4bce:;
				};
				goto _iter_next_1b60b375a;
			};
			jule::I64 _5108_j = _4967_i;;
			for (; (_5108_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5108_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5108_j] == '\n')) {
						goto _iter_end_1b60b44a3;
					};
				}
			_iter_next_1b60b44a3:;
			}
			_iter_end_1b60b44a3:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4967_i, _5108_j);;
		}
	_iter_next_1b60b375a:;
	}
	_iter_end_1b60b375a:;;
	return nullptr;;
}



inline void _1b2ad7d10_lexLineComment(_1b2ad6858_lex* _self_, jule::Ptr<_1b2ac7eba_Token>* _52135_token) {
	jule::I64 _5223_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5254_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5254_r == '\n') || (_5254_r == '\r'))) {
				goto _iter_end_1b60b75c7;
			};
		}
	_iter_next_1b60b75c7:;
	}
	_iter_end_1b60b75c7:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52135_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52135_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5223_start, (*(_self_))._field_pos));
	};
}



inline void _1b2ad80b8_lexRangeComment(_1b2ad6858_lex* _self_, jule::Ptr<_1b2ac7eba_Token>* _53636_token) {
	jule::I64 _5373_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5404_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5404_r == '\r')) {
				goto _iter_next_1b60bac6d;
			};
			if ((_5404_r == '\n')) {
				_1b2ad96a2_newLine(_self_);
				goto _iter_next_1b60bac6d;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5404_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53636_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53636_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5373_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1b60bac6d:;
	}
	_iter_end_1b60bac6d:;;
	_1b2ad6e1e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1b2ad8409_num(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _56420_txt) {
	jule::Str __jule_func_result;
	if (((*(_56420_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1b2ad5170_hexNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1b60c2a55;
	};
	__jule_func_result=_1b2ad4e94_octalNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1b60c2a55;
	};
	__jule_func_result=_1b2ad3734_binaryNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1b60c2a55;
	};
	__jule_func_result=_1b2ad346a_commonNum(_56420_txt);
	_julec_label_1b60c2a55:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1b2ad874a_escapeSeq(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _58626_txt) {
	jule::Str _5877_seq = jule::Str();;
	if (((*(_58626_txt)).len() < 2LL)) {
		goto _julec_label_1b60c684a;
	};
	{
		auto &_match_expr{ (*(_58626_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1b60c4705:;
			{
				(*(_self_))._field_pos+=2LL;
				return __jule_bytesToStr((*(_58626_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b60c45b2:;
			{
				_5877_seq=_1b2ad578b_bigUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1b60c4628:;
			{
				_5877_seq=_1b2ad5a55_littleUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b60c4293:;
			{
				_5877_seq=_1b2ad5d1e_hexByteEscape(_58626_txt);
			}
		}
		else {
			_case_begin_1b60c3a67:;
			{
				_5877_seq=_1b2ad60d8_byteEscape(_58626_txt);
			}
		}
		_match_end_1b60c411c:;
	};
	_julec_label_1b60c684a:;
	if ((_5877_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1b2ad6e1e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5877_seq.len();
	return _5877_seq;;
}



inline jule::Str _1b2ad8b46_getRune(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw) {
	if (((!(_61637_raw)) && ((*(_61624_txt))[0LL] == '\\'))) {
		return _1b2ad874a_escapeSeq(_self_, _61624_txt);;
	};
	jule::I32 _6203_r;
	jule::I64 _6206_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2280963ce_DecodeRune((*(_61624_txt)));
		_6203_r = __jule_assign_result.__jule_result_arg0;
		_6206_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6206_n;
	return __jule_strFromRune(_6203_r);;
}



inline jule::Str _1b2ad8e87_lexRune(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _62524_txt) {
	_20d8ca601_Builder _6267_run = static__20d8cb1c3_New(8LL);;
	_20d8d4d7a_WriteByte(&_6267_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _6297_n = 0LL;;
	jule::I64 _6307_i = 1LL;;
	for (; (_6307_i < (*(_62524_txt)).len()); (_6307_i)++) {
		{
			if (((*(_62524_txt))[_6307_i] == '\r')) {
				goto _iter_next_1b60ca651;
			};
			if (((*(_62524_txt))[_6307_i] == '\n')) {
				_1b2ad6e1e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1b2ad96a2_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6424_part = (*(_62524_txt)).slice(_6307_i);;
			jule::Str _6434_r = _1b2ad8b46_getRune(_self_, &(_6424_part), false);;
			_20d8d4ac2_WriteStr(&_6267_run, _6434_r);
			(*(_self_))._field_column+=_2280981c2_RuneCountStr(_6434_r);
			if (_6434_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1b60ca651;
			};
			if ((_6434_r.len() > 1LL)) {
				_6307_i+=(_6434_r.len() - 1LL);
			};
			(_6297_n)++;
		}
	_iter_next_1b60ca651:;
	}
	_iter_end_1b60ca651:;;
	if ((_6297_n == 0LL)) {
		_1b2ad6e1e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6297_n > 1LL)) {
		_1b2ad6e1e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _20d8d53b9_Str(&_6267_run);;
}



inline jule::Str _1b2ad921d_lexStr(_1b2ad6858_lex* _self_) {
	_20d8ca601_Builder _6667_s = static__20d8cb1c3_New(16LL);;
	jule::U8 _6673_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6693_raw = (_6673_mark == '`');;
	_20d8d4d7a_WriteByte(&_6667_s, _6673_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6744_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6744_ch == '\r')) {
				goto _iter_next_1b60d148c;
			};
			if ((_6744_ch == '\n')) {
				_1b2ad96a2_newLine(_self_);
				if ((!(_6693_raw))) {
					_1b2ad6e1e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6868_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6874_r = _1b2ad8b46_getRune(_self_, &(_6868_part), _6693_raw);;
			_20d8d4ac2_WriteStr(&_6667_s, _6874_r);
			(*(_self_))._field_column+=_2280981c2_RuneCountStr(_6874_r);
			if ((_6744_ch == _6673_mark)) {
				goto _iter_end_1b60d148c;
			};
		}
	_iter_next_1b60d148c:;
	}
	_iter_end_1b60d148c:;;
	return _20d8d53b9_Str(&_6667_s);;
}



inline void _1b2ad96a2_newLine(_1b2ad6858_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1b2ad9c13_isOp(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1b2ac7eba_Token>* _70758_t) {
	if ((!(_1b2ad19da_bytesHasPrefix(_70721_txt, _70734_kind)))) {
		return false;;
	};
	(*((*(_70758_t))))._field_Kind=_70734_kind;
	(*((*(_70758_t))))._field_Id=_70745_id;
	(*(_self_))._field_pos+=_70734_kind.len();
	return true;;
}



inline jule::Bool _1b2ada10e_lexBasicOps(_1b2ad6858_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1b2ac7eba_Token>* _71745_tok) {
	{
		auto expr = &(_1b2ad10d3_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b60d7b47:;
		if (it != expr_end) {
			_1b2ad0874_kindPair *_71810_pair = it;
			{
				if (_1b2ad9c13_isOp(_self_, &(_71727_txt), (*(_71810_pair))._field_kind, (*(_71810_pair))._field_id, _71745_tok)) {
					return true;;
				};
			}
			_iter_next_1b60d7b47:;
			++it;
			goto _iter_begin_1b60d7b47;
		}
		_iter_end_1b60d7b47:;
	};
	return false;;
}



inline jule::Bool _1b2ada50a_lexId(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1b2ac7eba_Token>* _72640_t) {
	jule::Str _7273_lex = _1b2ad77c1_id(_self_, _72622_txt);;
	if ((_7273_lex).empty()) {
		return false;;
	};
	(*((*(_72640_t))))._field_Kind=_7273_lex;
	(*((*(_72640_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1b2ada906_lexNum(_1b2ad6858_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1b2ac7eba_Token>* _73641_t) {
	jule::Str _7373_lex = _1b2ad8409_num(_self_, _73623_txt);;
	if ((_7373_lex).empty()) {
		return false;;
	};
	(*((*(_73641_t))))._field_Kind=_7373_lex;
	(*((*(_73641_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1b2ac7eba_Token> _1b2adab8c_token(_1b2ad6858_lex* _self_) {
	jule::Ptr<_1b2ac7eba_Token> _7487_t = jule::new_ptr<_1b2ac7eba_Token>(_1b2ac7eba_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7533_txt = _1b2ad7a57_resume(_self_);;
	if ((_7533_txt == nullptr)) {
		return _7487_t;;
	};
	(*(_7487_t))._field_Column=(*(_self_))._field_column;
	(*_7487_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1b2ada906_lexNum(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1b60dd873:;
			{
				goto _match_end_1b60dd598;
			}
		}
		else if ((_7533_txt[0LL] == '\'')) {
			_case_begin_1b60dd8d9:;
			{
				(*_7487_t.alloc)._field_Kind=_1b2ad8e87_lexRune(_self_, &(_7533_txt));
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (((_7533_txt[0LL] == '\"') || (_7533_txt[0LL] == '`'))) {
			_case_begin_1b60dd950:;
			{
				(*_7487_t.alloc)._field_Kind=_1b2ad921d_lexStr(_self_);
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (_1b2ad19da_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1b60dd9b6:;
			{
				_1b2ad7d10_lexLineComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1b2ad19da_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1b60dda2c:;
			{
				_1b2ad80b8_lexRangeComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1b2ada10e_lexBasicOps(_self_, _7533_txt, &(_7487_t))) {
			_case_begin_1b60dda93:;
			{
				goto _match_end_1b60dd598;
			}
		}
		else if (_1b2ada50a_lexId(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1b60deeb2:;
			{
				{
					auto expr = &(_1b2ad0ca3_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b60e3d2e:;
					if (it != expr_end) {
						_1b2ad0874_kindPair *_78511_pair = it;
						{
							if (((*(_78511_pair))._field_kind == (*_7487_t.alloc)._field_Kind)) {
								(*_7487_t.alloc)._field_Id=(*(_78511_pair))._field_id;
								goto _iter_end_1b60e3d2e;
							};
						}
						_iter_next_1b60e3d2e:;
						++it;
						goto _iter_begin_1b60e3d2e;
					}
					_iter_end_1b60e3d2e:;
				};
			}
		}
		else {
			_case_begin_1b60dd80c:;
			{
				jule::I32 _7924_r;
				jule::I64 _7927_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2280963ce_DecodeRune(_7533_txt);
					_7924_r = __jule_assign_result.__jule_result_arg0;
					_7927_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1b2ad6e1e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7924_r, &__jule_any_type1); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7927_sz;
				return _7487_t;;
			}
		}
		_match_end_1b60dd598:;
	};
	(*(_self_))._field_column+=_2280981c2_RuneCountStr((*_7487_t.alloc)._field_Kind);
	return _7487_t;;
}












inline jule::Bool _1b2adc3db_Node_eq(_1b2adc3db_Node *_self_, _1b2adc3db_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1b2add3dc_TypeDecl_eq(_1b2add3dc_TypeDecl *_self_, _1b2add3dc_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1b2ade18a_NamespaceTypeDecl_eq(_1b2ade18a_NamespaceTypeDecl *_self_, _1b2ade18a_NamespaceTypeDecl _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1b2ade487_SptrTypeDecl_eq(_1b2ade487_SptrTypeDecl *_self_, _1b2ade487_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1b2ade81c_SlcTypeDecl_eq(_1b2ade81c_SlcTypeDecl *_self_, _1b2ade81c_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1b2adee16_PtrTypeDecl_eq(_1b2adee16_PtrTypeDecl *_self_, _1b2adee16_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1b2ae02ac_IsUnsafe(_1b2adee16_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1b2ae06a8_ArrTypeDecl_eq(_1b2ae06a8_ArrTypeDecl *_self_, _1b2ae06a8_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1b2ae0a4e_AutoSized(_1b2ae06a8_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1b2ae0e06_MapTypeDecl_eq(_1b2ae0e06_MapTypeDecl *_self_, _1b2ae0e06_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1b2ae2721_Expr_eq(_1b2ae2721_Expr *_self_, _1b2ae2721_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1b2ae29da_RangeExpr_eq(_1b2ae29da_RangeExpr *_self_, _1b2ae29da_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1b2ae30e5_UseExpr_eq(_1b2ae30e5_UseExpr *_self_, _1b2ae30e5_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1b2ae36ab_LitExpr_eq(_1b2ae36ab_LitExpr *_self_, _1b2ae36ab_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1b2ae3a85_UnsafeExpr_eq(_1b2ae3a85_UnsafeExpr *_self_, _1b2ae3a85_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1b2ae403b_IdentExpr_eq(_1b2ae403b_IdentExpr *_self_, _1b2ae403b_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1b2ae47cd_UnaryExpr_eq(_1b2ae47cd_UnaryExpr *_self_, _1b2ae47cd_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1b2ae4ba7_VariadicExpr_eq(_1b2ae4ba7_VariadicExpr *_self_, _1b2ae4ba7_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1b2ae5081_CastExpr_eq(_1b2ae5081_CastExpr *_self_, _1b2ae5081_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1b2ae545a_NamespaceExpr_eq(_1b2ae545a_NamespaceExpr *_self_, _1b2ae545a_NamespaceExpr _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1b2ae5834_SubIdentExpr_eq(_1b2ae5834_SubIdentExpr *_self_, _1b2ae5834_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1b2ae5cda_BinaryExpr_eq(_1b2ae5cda_BinaryExpr *_self_, _1b2ae5cda_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1b2ae6802_Unhandled(_1b2ae644a_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1b2ae6a88_Ignored(_1b2ae644a_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}








inline jule::Bool _1b2ae6e40_FieldExprPair_eq(_1b2ae6e40_FieldExprPair *_self_, _1b2ae6e40_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1b2ae854b_KeyValPair_eq(_1b2ae854b_KeyValPair *_self_, _1b2ae854b_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1b2ae96d4_IndexingExpr_eq(_1b2ae96d4_IndexingExpr *_self_, _1b2ae96d4_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1b2ae9d44_SlicingExpr_eq(_1b2ae9d44_SlicingExpr *_self_, _1b2ae9d44_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1b2aea5e7_GenericDecl_eq(_1b2aea5e7_GenericDecl *_self_, _1b2aea5e7_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1b2aea9c1_LabelSt_eq(_1b2aea9c1_LabelSt *_self_, _1b2aea9c1_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1b2aead9a_GotoSt_eq(_1b2aead9a_GotoSt *_self_, _1b2aead9a_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1b2aeb197_FallSt_eq(_1b2aeb197_FallSt *_self_, _1b2aeb197_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1b2aeb807_AssignLeft_eq(_1b2aeb807_AssignLeft *_self_, _1b2aeb807_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1b2aecc9d_Stmt_eq(_1b2aecc9d_Stmt *_self_, _1b2aecc9d_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1b2aedb4a_ParamDecl_eq(_1b2aedb4a_ParamDecl *_self_, _1b2aedb4a_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1b2aee002_IsSelf(_1b2aedb4a_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1b2b00443_IsAnon(_1b2b0009c_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1b2b01631_RetSt_eq(_1b2b01631_RetSt *_self_, _1b2b01631_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1b2b01da1_Iter_eq(_1b2b01da1_Iter *_self_, _1b2b01da1_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1b2b02247_IsInf(_1b2b01da1_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1b2b026cb_WhileKind_eq(_1b2b026cb_WhileKind *_self_, _1b2b026cb_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1b2b02a72_IsWhileNext(_1b2b026cb_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1b2b030d3_RangeKind_eq(_1b2b030d3_RangeKind *_self_, _1b2b030d3_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1b2b034ac_BreakSt_eq(_1b2b034ac_BreakSt *_self_, _1b2b034ac_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1b2b03886_ContSt_eq(_1b2b03886_ContSt *_self_, _1b2b03886_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1b2b03d3c_If_eq(_1b2b03d3c_If *_self_, _1b2b03d3c_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1b2b04216_Else_eq(_1b2b04216_Else *_self_, _1b2b04216_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1b2b04e09_TypeAliasDecl_eq(_1b2b04e09_TypeAliasDecl *_self_, _1b2b04e09_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1b2b0625c_UseDecl_eq(_1b2b0625c_UseDecl *_self_, _1b2b0625c_UseDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1b2b06713_EnumItemDecl_eq(_1b2b06713_EnumItemDecl *_self_, _1b2b06713_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1b2b07aee_TypeEnumItemDecl_eq(_1b2b07aee_TypeEnumItemDecl *_self_, _1b2b07aee_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1b2b08528_FieldDecl_eq(_1b2b08528_FieldDecl *_self_, _1b2b08528_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

















inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc22e5_NewI64(jule::I64 _1419_x) {
	return jule::new_ptr<_1b2b6c23a_Const>(_1b2b6c23a_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1419_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc24c1_NewU64(jule::U64 _1719_x) {
	return jule::new_ptr<_1b2b6c23a_Const>(_1b2b6c23a_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1719_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc278a_NewBool(jule::Bool _2020_x) {
	return jule::new_ptr<_1b2b6c23a_Const>(_1b2b6c23a_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2020_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc2a54_NewStr(jule::Str _2319_x) {
	return jule::new_ptr<_1b2b6c23a_Const>(_1b2b6c23a_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2319_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc2d1d_NewF64(jule::F64 _2619_x) {
	return jule::new_ptr<_1b2b6c23a_Const>(_1b2b6c23a_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2619_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1b2b6c23a_Const> static__1b2bc302c_NewNil(void) {
	return jule::new_ptr<_1b2b6c23a_Const>(_1b2b6c23a_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1b2bc368c_ReadI64(_1b2b6c23a_Const* _self_) {
	if ((!(_1b2bc5c88_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2);;
}



inline jule::U64 _1b2bc3923_ReadU64(_1b2b6c23a_Const* _self_) {
	if ((!(_1b2bc601e_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3);;
}



inline jule::Bool _1b2bc3ba9_ReadBool(_1b2b6c23a_Const* _self_) {
	if ((!(_1b2bc62a5_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1b2bc3e40_ReadStr(_1b2b6c23a_Const* _self_) {
	if ((!(_1b2bc653b_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1b2bc41c6_ReadF64(_1b2b6c23a_Const* _self_) {
	if ((!(_1b2bc67c2_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6);;
}



inline jule::I64 _1b2bc445c_AsI64(_1b2b6c23a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b614e021:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b614e96c:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b614e9d3:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1b614e4c7:;
			{
				return 0LL;;
			}
		}
		_match_end_1b614e32e:;
	};
}



inline jule::U64 _1b2bc46e3_AsU64(_1b2b6c23a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b61505b6:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b61512dc:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b6151353:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1b6150a8e:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b6150a28:;
	};
}



inline jule::F64 _1b2bc4979_AsF64(_1b2b6c23a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b6152d49:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b6151e25:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b6152b3a:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1b61523dc:;
			{
				return 0LL;;
			}
		}
		_match_end_1b6152376:;
	};
}



inline void _1b2bc4c32_SetI64(_1b2b6c23a_Const* _self_, jule::I64 _13622_x) {
	(*(_self_))._field_data=jule::Any(_13622_x, &__jule_any_type2);
}



inline void _1b2bc4eda_SetU64(_1b2b6c23a_Const* _self_, jule::U64 _13922_x) {
	(*(_self_))._field_data=jule::Any(_13922_x, &__jule_any_type3);
}



inline void _1b2bc5293_SetBool(_1b2b6c23a_Const* _self_, jule::Bool _14223_x) {
	(*(_self_))._field_data=jule::Any(_14223_x, &__jule_any_type4);
}



inline void _1b2bc554b_SetStr(_1b2b6c23a_Const* _self_, jule::Str _14522_x) {
	(*(_self_))._field_data=jule::Any(_14522_x, &__jule_any_type5);
}



inline void _1b2bc5804_SetF64(_1b2b6c23a_Const* _self_, jule::F64 _14822_x) {
	(*(_self_))._field_data=jule::Any(_14822_x, &__jule_any_type6);
}



inline jule::Bool _1b2bc5c88_IsI64(_1b2b6c23a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b6156743:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6156974:;
			{
				return false;;
			}
		}
		_match_end_1b615690d:;
	};
}



inline jule::Bool _1b2bc601e_IsU64(_1b2b6c23a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b61572d2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6156aa6:;
			{
				return false;;
			}
		}
		_match_end_1b6156a40:;
	};
}



inline jule::Bool _1b2bc62a5_IsBool(_1b2b6c23a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b6157722:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6157c0b:;
			{
				return false;;
			}
		}
		_match_end_1b6157b95:;
	};
}



inline jule::Bool _1b2bc653b_IsStr(_1b2b6c23a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b61581a1:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b615868a:;
			{
				return false;;
			}
		}
		_match_end_1b6158624:;
	};
}



inline jule::Bool _1b2bc67c2_IsF64(_1b2b6c23a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b6158b30:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6159119:;
			{
				return false;;
			}
		}
		_match_end_1b61590a3:;
	};
}



inline jule::Bool _1b2bc6a58_IsNil(_1b2b6c23a_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1b2bc71da_And(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _23615_x) {
	{
		
		if ((_1b2bc62a5_IsBool(_self_) && _1b2bc62a5_IsBool(&_23615_x))) {
			_case_begin_1b615d5b3:;
			{
				return (_1b2bc3ba9_ReadBool(_self_) && _1b2bc3ba9_ReadBool(&_23615_x));;
			}
		}
		else {
			_case_begin_1b615d54c:;
			{
				return false;;
			}
		}
		_match_end_1b615d10c:;
	};
}



inline jule::Bool _1b2bc752b_Or(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _24714_x) {
	{
		
		if ((_1b2bc62a5_IsBool(_self_) && _1b2bc62a5_IsBool(&_24714_x))) {
			_case_begin_1b615e8b1:;
			{
				return (_1b2bc3ba9_ReadBool(_self_) || _1b2bc3ba9_ReadBool(&_24714_x));;
			}
		}
		else {
			_case_begin_1b615e097:;
			{
				return false;;
			}
		}
		_match_end_1b615dea9:;
	};
}



inline jule::Bool _1b2bc786c_Eq(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _25814_x) {
	{
		
		if (_1b2bc6a58_IsNil(_self_)) {
			_case_begin_1b6160c25:;
			{
				return _1b2bc6a58_IsNil(&_25814_x);;
			}
		}
		else if (_1b2bc62a5_IsBool(_self_)) {
			_case_begin_1b6160c8b:;
			{
				return (_1b2bc62a5_IsBool(&_25814_x) && (_1b2bc3ba9_ReadBool(_self_) == _1b2bc3ba9_ReadBool(&_25814_x)));;
			}
		}
		else if (_1b2bc653b_IsStr(_self_)) {
			_case_begin_1b6160d02:;
			{
				return (_1b2bc653b_IsStr(&_25814_x) && (_1b2bc3e40_ReadStr(_self_) == _1b2bc3e40_ReadStr(&_25814_x)));;
			}
		}
		else if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b6160d79:;
			{
				return (_1b2bc368c_ReadI64(_self_) == _1b2bc445c_AsI64(&_25814_x));;
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b6160e01:;
			{
				return (_1b2bc3923_ReadU64(_self_) == _1b2bc46e3_AsU64(&_25814_x));;
			}
		}
		else if (_1b2bc67c2_IsF64(_self_)) {
			_case_begin_1b6161099:;
			{
				return (_1b2bc41c6_ReadF64(_self_) == _1b2bc4979_AsF64(&_25814_x));;
			}
		}
		else {
			_case_begin_1b6160384:;
			{
				return false;;
			}
		}
		_match_end_1b6160296:;
	};
}



inline jule::Bool _1b2bc7bad_Lt(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _28514_x) {
	{
		
		if (_1b2bc653b_IsStr(_self_)) {
			_case_begin_1b616494e:;
			{
				return (_1b2bc653b_IsStr(&_28514_x) && (_1b2bc3e40_ReadStr(_self_) < _1b2bc3e40_ReadStr(&_28514_x)));;
			}
		}
		else if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b61649b5:;
			{
				return (_1b2bc368c_ReadI64(_self_) < _1b2bc445c_AsI64(&_28514_x));;
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b6164a2b:;
			{
				return (_1b2bc3923_ReadU64(_self_) < _1b2bc46e3_AsU64(&_28514_x));;
			}
		}
		else if (_1b2bc67c2_IsF64(_self_)) {
			_case_begin_1b6164aa3:;
			{
				return (_1b2bc41c6_ReadF64(_self_) < _1b2bc4979_AsF64(&_28514_x));;
			}
		}
		else {
			_case_begin_1b61616d7:;
			{
				return false;;
			}
		}
		_match_end_1b616160a:;
	};
}



inline jule::Bool _1b2bc7eee_LtEq(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _30816_x) {
	{
		
		if (_1b2bc653b_IsStr(_self_)) {
			_case_begin_1b6167655:;
			{
				return (_1b2bc653b_IsStr(&_30816_x) && (_1b2bc3e40_ReadStr(_self_) <= _1b2bc3e40_ReadStr(&_30816_x)));;
			}
		}
		else if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b61676bb:;
			{
				return (_1b2bc368c_ReadI64(_self_) <= _1b2bc445c_AsI64(&_30816_x));;
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b6167732:;
			{
				return (_1b2bc3923_ReadU64(_self_) <= _1b2bc46e3_AsU64(&_30816_x));;
			}
		}
		else if (_1b2bc67c2_IsF64(_self_)) {
			_case_begin_1b61677a9:;
			{
				return (_1b2bc41c6_ReadF64(_self_) <= _1b2bc4979_AsF64(&_30816_x));;
			}
		}
		else {
			_case_begin_1b6165312:;
			{
				return false;;
			}
		}
		_match_end_1b6165235:;
	};
}



inline jule::Bool _1b2bc8340_Gt(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _33114_x) {
	{
		
		if (_1b2bc653b_IsStr(_self_)) {
			_case_begin_1b616a35b:;
			{
				return (_1b2bc653b_IsStr(&_33114_x) && (_1b2bc3e40_ReadStr(_self_) > _1b2bc3e40_ReadStr(&_33114_x)));;
			}
		}
		else if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b616a3c2:;
			{
				return (_1b2bc368c_ReadI64(_self_) > _1b2bc445c_AsI64(&_33114_x));;
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b616a438:;
			{
				return (_1b2bc3923_ReadU64(_self_) > _1b2bc46e3_AsU64(&_33114_x));;
			}
		}
		else if (_1b2bc67c2_IsF64(_self_)) {
			_case_begin_1b616a4b0:;
			{
				return (_1b2bc41c6_ReadF64(_self_) > _1b2bc4979_AsF64(&_33114_x));;
			}
		}
		else {
			_case_begin_1b6168018:;
			{
				return false;;
			}
		}
		_match_end_1b6167e3b:;
	};
}



inline jule::Bool _1b2bc8681_GtEq(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _35416_x) {
	{
		
		if (_1b2bc653b_IsStr(_self_)) {
			_case_begin_1b616d062:;
			{
				return (_1b2bc653b_IsStr(&_35416_x) && (_1b2bc3e40_ReadStr(_self_) >= _1b2bc3e40_ReadStr(&_35416_x)));;
			}
		}
		else if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b616d0c8:;
			{
				return (_1b2bc368c_ReadI64(_self_) >= _1b2bc445c_AsI64(&_35416_x));;
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b616d13e:;
			{
				return (_1b2bc3923_ReadU64(_self_) >= _1b2bc46e3_AsU64(&_35416_x));;
			}
		}
		else if (_1b2bc67c2_IsF64(_self_)) {
			_case_begin_1b616d1b6:;
			{
				return (_1b2bc41c6_ReadF64(_self_) >= _1b2bc4979_AsF64(&_35416_x));;
			}
		}
		else {
			_case_begin_1b616ac1e:;
			{
				return false;;
			}
		}
		_match_end_1b616ab42:;
	};
}



inline jule::Bool _1b2bc89c2_Add(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _37519_x) {
	{
		
		if (_1b2bc653b_IsStr(_self_)) {
			_case_begin_1b6170c68:;
			{
				if ((!(_1b2bc653b_IsStr(&_37519_x)))) {
					return false;;
				};
				_1b2bc554b_SetStr(_self_, (_1b2bc3e40_ReadStr(_self_) + _1b2bc3e40_ReadStr(&_37519_x)));
			}
		}
		else if (_1b2bc67c2_IsF64(_self_)) {
			_case_begin_1b6170cce:;
			{
				_1b2bc5804_SetF64(_self_, (_1b2bc41c6_ReadF64(_self_) + _1b2bc4979_AsF64(&_37519_x)));
			}
		}
		else if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b6170d45:;
			{
				if (_1b2bc67c2_IsF64(&_37519_x)) {
					_1b2bc5804_SetF64(_self_, (_1b2bc4979_AsF64(_self_) + _1b2bc41c6_ReadF64(&_37519_x)));
				} else {
					_1b2bc4c32_SetI64(_self_, (_1b2bc368c_ReadI64(_self_) + _1b2bc445c_AsI64(&_37519_x)));
				};
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b6170dbc:;
			{
				if (_1b2bc67c2_IsF64(&_37519_x)) {
					_1b2bc5804_SetF64(_self_, (_1b2bc4979_AsF64(_self_) + _1b2bc41c6_ReadF64(&_37519_x)));
				} else {
					_1b2bc4eda_SetU64(_self_, (jule::U64)(_1b2bc3923_ReadU64(_self_) + _1b2bc46e3_AsU64(&_37519_x)));
				};
			}
		}
		else {
			_case_begin_1b616d925:;
			{
				return false;;
			}
		}
		_match_end_1b616d848:;
	};
	return true;;
}



inline jule::Bool _1b2bc8d13_Sub(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _40419_x) {
	{
		
		if (_1b2bc67c2_IsF64(_self_)) {
			_case_begin_1b6175a92:;
			{
				_1b2bc5804_SetF64(_self_, (_1b2bc41c6_ReadF64(_self_) - _1b2bc4979_AsF64(&_40419_x)));
			}
		}
		else if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b6175b08:;
			{
				if (_1b2bc67c2_IsF64(&_40419_x)) {
					_1b2bc5804_SetF64(_self_, (_1b2bc4979_AsF64(_self_) - _1b2bc41c6_ReadF64(&_40419_x)));
				} else {
					_1b2bc4c32_SetI64(_self_, (_1b2bc368c_ReadI64(_self_) - _1b2bc445c_AsI64(&_40419_x)));
				};
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b6175b6e:;
			{
				if (_1b2bc67c2_IsF64(&_40419_x)) {
					_1b2bc5804_SetF64(_self_, (_1b2bc4979_AsF64(_self_) - _1b2bc41c6_ReadF64(&_40419_x)));
				} else {
					_1b2bc4eda_SetU64(_self_, (jule::U64)(_1b2bc3923_ReadU64(_self_) - _1b2bc46e3_AsU64(&_40419_x)));
				};
			}
		}
		else {
			_case_begin_1b61752cd:;
			{
				return false;;
			}
		}
		_match_end_1b61751ce:;
	};
	return true;;
}



inline jule::Bool _1b2bc9154_Mul(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _42819_x) {
	{
		
		if (_1b2bc67c2_IsF64(_self_)) {
			_case_begin_1b61799a8:;
			{
				_1b2bc5804_SetF64(_self_, (_1b2bc41c6_ReadF64(_self_) * _1b2bc4979_AsF64(&_42819_x)));
			}
		}
		else if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b6179a1e:;
			{
				if (_1b2bc67c2_IsF64(&_42819_x)) {
					_1b2bc5804_SetF64(_self_, (_1b2bc4979_AsF64(_self_) * _1b2bc41c6_ReadF64(&_42819_x)));
				} else {
					_1b2bc4c32_SetI64(_self_, (_1b2bc368c_ReadI64(_self_) * _1b2bc445c_AsI64(&_42819_x)));
				};
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b6179a85:;
			{
				if (_1b2bc67c2_IsF64(&_42819_x)) {
					_1b2bc5804_SetF64(_self_, (_1b2bc4979_AsF64(_self_) * _1b2bc41c6_ReadF64(&_42819_x)));
				} else {
					_1b2bc4eda_SetU64(_self_, (jule::U64)(_1b2bc3923_ReadU64(_self_) * _1b2bc46e3_AsU64(&_42819_x)));
				};
			}
		}
		else {
			_case_begin_1b617907e:;
			{
				return false;;
			}
		}
		_match_end_1b6178e91:;
	};
	return true;;
}



inline jule::Bool _1b2bc9495_Div(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _45619_x) {
	{
		
		if (_1b2bc67c2_IsF64(_self_)) {
			_case_begin_1b617d8ad:;
			{
				jule::F64 _4594_l = _1b2bc4979_AsF64(&_45619_x);;
				if ((_4594_l == 0LL)) {
					return false;;
				};
				_1b2bc5804_SetF64(_self_, ({ jule::F64 __jule_x = _1b2bc41c6_ReadF64(_self_); jule::F64 __jule_y = _4594_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b617d924:;
			{
				jule::F64 _4654_l = _1b2bc4979_AsF64(&_45619_x);;
				if ((_4654_l == 0LL)) {
					return false;;
				};
				_1b2bc5804_SetF64(_self_, ({ jule::F64 __jule_x = _1b2bc4979_AsF64(_self_); jule::F64 __jule_y = _4654_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b617d98a:;
			{
				jule::F64 _4714_l = _1b2bc4979_AsF64(&_45619_x);;
				if ((_4714_l == 0LL)) {
					return false;;
				};
				_1b2bc5804_SetF64(_self_, ({ jule::F64 __jule_x = _1b2bc4979_AsF64(_self_); jule::F64 __jule_y = _4714_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1b617ce84:;
			{
				return false;;
			}
		}
		_match_end_1b617cd96:;
	};
	return true;;
}



inline jule::Bool _1b2bc97d6_Mod(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _48519_x) {
	{
		
		if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b6182791:;
			{
				jule::I64 _4884_l = _1b2bc445c_AsI64(&_48519_x);;
				if ((_4884_l == 0LL)) {
					return false;;
				};
				_1b2bc4c32_SetI64(_self_, ({ jule::I64 __jule_x = _1b2bc368c_ReadI64(_self_); jule::I64 __jule_y = _4884_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b6182b9d:;
			{
				jule::U64 _4944_l = _1b2bc46e3_AsU64(&_48519_x);;
				if ((_4944_l == 0LLU)) {
					return false;;
				};
				_1b2bc4eda_SetU64(_self_, ({ jule::U64 __jule_x = _1b2bc3923_ReadU64(_self_); jule::U64 __jule_y = _4944_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1b6182719:;
			{
				return false;;
			}
		}
		_match_end_1b6182609:;
	};
	return true;;
}



inline jule::Bool _1b2bc9b27_BitwiseAnd(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _50726_x) {
	{
		
		if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b618560c:;
			{
				_1b2bc4c32_SetI64(_self_, (_1b2bc368c_ReadI64(_self_) & _1b2bc445c_AsI64(&_50726_x)));
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b6185a19:;
			{
				_1b2bc4eda_SetU64(_self_, (_1b2bc3923_ReadU64(_self_) & _1b2bc46e3_AsU64(&_50726_x)));
			}
		}
		else {
			_case_begin_1b6185585:;
			{
				return false;;
			}
		}
		_match_end_1b6185475:;
	};
	return true;;
}



inline jule::Bool _1b2bc9e68_BitwiseOr(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _52125_x) {
	{
		
		if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b61873cd:;
			{
				_1b2bc4c32_SetI64(_self_, (_1b2bc368c_ReadI64(_self_) | _1b2bc445c_AsI64(&_52125_x)));
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b61877da:;
			{
				_1b2bc4eda_SetU64(_self_, (_1b2bc3923_ReadU64(_self_) | _1b2bc46e3_AsU64(&_52125_x)));
			}
		}
		else {
			_case_begin_1b6187356:;
			{
				return false;;
			}
		}
		_match_end_1b6187246:;
	};
	return true;;
}



inline jule::Bool _1b2bca2a9_Xor(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _53519_x) {
	{
		
		if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b618919e:;
			{
				_1b2bc4c32_SetI64(_self_, (_1b2bc368c_ReadI64(_self_) ^ _1b2bc445c_AsI64(&_53519_x)));
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b61895ab:;
			{
				_1b2bc4eda_SetU64(_self_, (_1b2bc3923_ReadU64(_self_) ^ _1b2bc46e3_AsU64(&_53519_x)));
			}
		}
		else {
			_case_begin_1b6189127:;
			{
				return false;;
			}
		}
		_match_end_1b6189017:;
	};
	return true;;
}



inline jule::Bool _1b2bca5ea_Lshift(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _54922_x) {
	{
		
		if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b618ae70:;
			{
				jule::I64 _5524_l = _1b2bc445c_AsI64(_self_);;
				if ((_5524_l < 0LL)) {
					jule::U64 _5545_r = _1b2bc46e3_AsU64(&_54922_x);;
					_1b2bc4c32_SetI64(_self_, ({ jule::I64 __jule_x = _5524_l; jule::U64 __jule_y = _5545_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1b2bcac9e_lshiftUnsig(_self_, &(_54922_x));
				};
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b618b37c:;
			{
				_1b2bcac9e_lshiftUnsig(_self_, &(_54922_x));
			}
		}
		else {
			_case_begin_1b618ade8:;
			{
				return false;;
			}
		}
		_match_end_1b618acd8:;
	};
	return true;;
}



inline jule::Bool _1b2bca93b_Rshift(_1b2b6c23a_Const* _self_, _1b2b6c23a_Const _56922_x) {
	{
		
		if (_1b2bc5c88_IsI64(_self_)) {
			_case_begin_1b618d505:;
			{
				jule::I64 _5724_l = _1b2bc445c_AsI64(_self_);;
				if ((_5724_l < 0LL)) {
					jule::U64 _5745_r = _1b2bc46e3_AsU64(&_56922_x);;
					_1b2bc4c32_SetI64(_self_, ({ jule::I64 __jule_x = _5724_l; jule::U64 __jule_y = _5745_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1b2bcb0ce_rshiftUnsig(_self_, &(_56922_x));
				};
			}
		}
		else if (_1b2bc601e_IsU64(_self_)) {
			_case_begin_1b618d912:;
			{
				_1b2bcb0ce_rshiftUnsig(_self_, &(_56922_x));
			}
		}
		else {
			_case_begin_1b618d47d:;
			{
				return false;;
			}
		}
		_match_end_1b618d37e:;
	};
	return true;;
}








inline jule::Bool _1b2b0ac78_Field_eq(_1b2b0ac78_Field *_self_, _1b2b0ac78_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1b2b10e26_FieldIns> _1b2b0b130_instance(jule::Ptr<_1b2b0ac78_Field> _self_) {
	return jule::new_ptr<_1b2b10e26_FieldIns>(_1b2b10e26_FieldIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=_self_, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Default=jule::Ptr<_1b2d7dc21_Data>(nullptr)});;
}








inline jule::Bool _1b2b0cc58_Operators_eq(_1b2b0cc58_Operators *_self_, _1b2b0cc58_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_1b2b119c6_StructIns> _1b2b0e111_instance(jule::Ptr<_1b2b0db6b_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1b2b119c6_StructIns> _997_ins = jule::new_ptr<_1b2b119c6_StructIns>(_1b2b119c6_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b10e26_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2b10e26_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2d26ca7_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1b2cc3281_new(), ._field_Operators=_1b2b0cc58_Operators{._field_Eq=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Add=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Div=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b649b604:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _10615_s = *it;
			{
				(*(_997_ins))._field_Statics=jule::append((*_997_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1b2d26ca7_Var>((*(_10615_s))); __jule_collection; }));
			}
			_iter_next_1b649b604:;
			++it;
			goto _iter_begin_1b649b604;
		}
		_iter_end_1b649b604:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b649c4b2:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0ac78_Field> _11015_f = *it;
			{
				jule::Ptr<_1b2b10e26_FieldIns> _1118_f2 = _1b2b0b130_instance(_11015_f);;
				(*(_1118_f2))._field_Owner=_997_ins;
				(*_997_ins.alloc)._field_Fields=jule::append((*_997_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b10e26_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1118_f2; __jule_collection; }));
				if ((((!((*_11015_f.alloc)._field_Mutable)) && ((*((*_11015_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1b2db300d_Mutable((*((*(_11015_f))._field_Kind))._field_Kind))) {
					(*_997_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1b649c4b2:;
			++it;
			goto _iter_begin_1b649c4b2;
		}
		_iter_end_1b649c4b2:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_997_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_997_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2bda9b2_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b64a1818:;
			if (it != expr_end) {
				jule::Ptr<_1b2bda9b2_Fn> _12316_f = *it;
				{
					jule::Ptr<_1b2bda9b2_Fn> _1249_fins = jule::new_ptr<_1b2bda9b2_Fn>((*(_12316_f)));;
					(*_1249_fins.alloc)._field_Instances=nullptr;
					(*_997_ins.alloc)._field_Methods=jule::append((*_997_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1249_fins; __jule_collection; }));
				}
				_iter_next_1b64a1818:;
				++it;
				goto _iter_begin_1b64a1818;
			}
			_iter_end_1b64a1818:;
		};
	};
	return _997_ins;;
}



inline jule::Ptr<_1b2b119c6_StructIns> _1b2b0e41e_appendInstance(_1b2b0db6b_Struct* _self_, jule::Ptr<_1b2b119c6_StructIns>* _13535_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64a1bc0:;
		if (it != expr_end) {
			jule::Ptr<_1b2b119c6_StructIns> _14115_ains = *it;
			{
				if (_1b2b12675_Same(_14115_ains.ptr(), (*(_13535_ins)))) {
					return _14115_ains;;
				};
			}
			_iter_next_1b64a1bc0:;
			++it;
			goto _iter_begin_1b64a1bc0;
		}
		_iter_end_1b64a1bc0:;
	};
	{ jule::Slice<jule::Ptr<_1b2b119c6_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13535_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2b0e81a_FindMethod(_1b2b0db6b_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64a5212:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _15415_f = *it;
			{
				if ((((*(_15415_f))._field_Statically == _15338_statically) && ((*_15415_f.alloc)._field_Ident == _15326_ident))) {
					return _15415_f;;
				};
			}
			_iter_next_1b64a5212:;
			++it;
			goto _iter_begin_1b64a5212;
		}
		_iter_end_1b64a5212:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2b0eb5b_FindStatic(_1b2b0db6b_Struct* _self_, jule::Str _16426_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64a6543:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _16515_v = *it;
			{
				if (((*(_16515_v))._field_Ident == _16426_ident)) {
					return _16515_v;;
				};
			}
			_iter_next_1b64a6543:;
			++it;
			goto _iter_begin_1b64a6543;
		}
		_iter_end_1b64a6543:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2b0ac78_Field> _1b2b0ee9c_FindField(_1b2b0db6b_Struct* _self_, jule::Str _17525_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64a7544:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0ac78_Field> _17615_f = *it;
			{
				if (((*(_17615_f))._field_Ident == _17525_ident)) {
					return _17615_f;;
				};
			}
			_iter_next_1b64a7544:;
			++it;
			goto _iter_begin_1b64a7544;
		}
		_iter_end_1b64a7544:;
	};
	return nullptr;;
}



inline jule::Bool _1b2b102dd_IsImplements(_1b2b0db6b_Struct* _self_, jule::Ptr<_1b2be61c6_Trait> _18524_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64a8534:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> *_18610_it = it;
			{
				if ((_18524_t == (*(_18610_it)))) {
					return true;;
				};
			}
			_iter_next_1b64a8534:;
			++it;
			goto _iter_begin_1b64a8534;
		}
		_iter_end_1b64a8534:;
	};
	return false;;
}



inline jule::Bool _1b2b1062e_IsUses(_1b2b0db6b_Struct* _self_, jule::Ptr<_1b2b0db6b_Struct> _19518_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64a8eb3:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> *_19610_u = it;
			{
				while ((_19518_s == (*(_19610_u)))) {
					{
						return true;;
					}
				_iter_next_1b64a99db:;
				}
				_iter_end_1b64a99db:;;
			}
			_iter_next_1b64a8eb3:;
			++it;
			goto _iter_begin_1b64a8eb3;
		}
		_iter_end_1b64a8eb3:;
	};
	return false;;
}








inline jule::Bool _1b2b10e26_FieldIns_eq(_1b2b10e26_FieldIns *_self_, _1b2b10e26_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1b2b11d7d_Str(_1b2b119c6_StructIns* _self_) {
	_20d8ca601_Builder _2417_kind = static__20d8cb1c3_New(32LL);;
	_20d8d4ac2_WriteStr(&_2417_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_20d8d4d7a_WriteByte(&_2417_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b64ac703:;
			if (it != expr_end) {
				jule::I64 _2458_i = it - expr->begin();
				jule::Ptr<_1b2daee72_InsGeneric> *_24511_g = it;
				{
					_20d8d4ac2_WriteStr(&_2417_kind, _1b2db1a23_Str((*((*(_24511_g))))._field_Kind.ptr()));
					if ((_2458_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_20d8d4d7a_WriteByte(&_2417_kind, ',');
					};
				}
				_iter_next_1b64ac703:;
				++it;
				_2458_i++;
				goto _iter_begin_1b64ac703;
			}
			_iter_end_1b64ac703:;
		};
		_20d8d4d7a_WriteByte(&_2417_kind, ']');
	};
	return _20d8d53b9_Str(&_2417_kind);;
}



inline jule::Bool _1b2b121be_Equal(jule::Ptr<_1b2b119c6_StructIns> _self_, jule::Ptr<_1b2db1627_TypeKind> _25718_other) {
	jule::Ptr<_1b2b119c6_StructIns> _2583_s = _1b2db5351_Struct(_25718_other.ptr());;
	if ((_2583_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2583_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2583_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2717_i = 0LL;;
	for (; (_2717_i < (*_self_.alloc)._field_Generics.len()); (_2717_i)++) {
		{
			if ((!(_1b2db1d64_Equal((*((*(_self_))._field_Generics[_2717_i]))._field_Kind, (*((*(_2583_s))._field_Generics[_2717_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1b64b1a9d:;
	}
	_iter_end_1b64b1a9d:;;
	return true;;
}



inline jule::Bool _1b2b12675_Same(_1b2b119c6_StructIns* _self_, jule::Ptr<_1b2b119c6_StructIns> _28516_s) {
	if ((((*(_self_))._field_Decl != (*(_28516_s))._field_Decl) || ((*_28516_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64b3cc0:;
		if (it != expr_end) {
			jule::I64 _2897_i = it - expr->begin();
			jule::Ptr<_1b2daee72_InsGeneric> *_28910_g = it;
			{
				jule::Ptr<_1b2daee72_InsGeneric> _2904_g2 = (*(_28516_s))._field_Generics[_2897_i];;
				if ((((*((*((*(_28910_g))))._field_Kind))._field_BindIdent != (*(*(_2904_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1b2db1d64_Equal((*((*(_28910_g))))._field_Kind, (*(_2904_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b64b3cc0:;
			++it;
			_2897_i++;
			goto _iter_begin_1b64b3cc0;
		}
		_iter_end_1b64b3cc0:;
	};
	return true;;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2b12a71_FindMethod(_1b2b119c6_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64b708c:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _30115_f = *it;
			{
				if ((((*(_30115_f))._field_Statically == _30038_statically) && ((*_30115_f.alloc)._field_Ident == _30026_ident))) {
					return _30115_f;;
				};
			}
			_iter_next_1b64b708c:;
			++it;
			goto _iter_begin_1b64b708c;
		}
		_iter_end_1b64b708c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2b10e26_FieldIns> _1b2b12db2_FindField(_1b2b119c6_StructIns* _self_, jule::Str _31125_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64b83bd:;
		if (it != expr_end) {
			jule::Ptr<_1b2b10e26_FieldIns> _31215_f = *it;
			{
				if (((*((*(_31215_f))._field_Decl))._field_Ident == _31125_ident)) {
					return _31215_f;;
				};
			}
			_iter_next_1b64b83bd:;
			++it;
			goto _iter_begin_1b64b83bd;
		}
		_iter_end_1b64b83bd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2b13203_FindStatic(_1b2b119c6_StructIns* _self_, jule::Str _32226_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64b8b82:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _32315_v = *it;
			{
				if (((*(_32315_v))._field_Ident == _32226_ident)) {
					return _32315_v;;
				};
			}
			_iter_next_1b64b8b82:;
			++it;
			goto _iter_begin_1b64b8b82;
		}
		_iter_end_1b64b8b82:;
	};
	return nullptr;;
}








inline jule::Bool _1b2bcd125_OperandExprModel_eq(_1b2bcd125_OperandExprModel *_self_, _1b2bcd125_OperandExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1b2bcd620_BinaryExprModel_eq(_1b2bcd620_BinaryExprModel *_self_, _1b2bcd620_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1b2bcd9e9_UnaryExprModel_eq(_1b2bcd9e9_UnaryExprModel *_self_, _1b2bcd9e9_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1b2bce027_StructArgExprModel_eq(_1b2bce027_StructArgExprModel *_self_, _1b2bce027_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1b2bce6ba_AllocStructLitExprModel_eq(_1b2bce6ba_AllocStructLitExprModel *_self_, _1b2bce6ba_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1b2bcec4d_CastingExprModel_eq(_1b2bcec4d_CastingExprModel *_self_, _1b2bcec4d_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_ExprKind == _self_->_field_ExprKind);
}














inline jule::Bool _1b2bd0e80_IndexingExprModel_eq(_1b2bd0e80_IndexingExprModel *_self_, _1b2bd0e80_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1b2bd1810_KeyValPairExprModel_eq(_1b2bd1810_KeyValPairExprModel *_self_, _1b2bd1810_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1b2bd226c_SlicingExprModel_eq(_1b2bd226c_SlicingExprModel *_self_, _1b2bd226c_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1b2bd2800_TraitSubIdentExprModel_eq(_1b2bd2800_TraitSubIdentExprModel *_self_, _1b2bd2800_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1b2bd3191_StructSubIdentExprModel_eq(_1b2bd3191_StructSubIdentExprModel *_self_, _1b2bd3191_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1b2bd3537_StructStaticIdentExprModel_eq(_1b2bd3537_StructStaticIdentExprModel *_self_, _1b2bd3537_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1b2bd40d7_BuiltinOutCallExprModel_eq(_1b2bd40d7_BuiltinOutCallExprModel *_self_, _1b2bd40d7_BuiltinOutCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1b2bd44b1_BuiltinOutlnCallExprModel_eq(_1b2bd44b1_BuiltinOutlnCallExprModel *_self_, _1b2bd44b1_BuiltinOutlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1b2bd488a_BuiltinNewCallExprModel_eq(_1b2bd488a_BuiltinNewCallExprModel *_self_, _1b2bd488a_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1b2bd4c64_BuiltinPanicCallExprModel_eq(_1b2bd4c64_BuiltinPanicCallExprModel *_self_, _1b2bd4c64_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1b2bd521a_BuiltinMakeCallExprModel_eq(_1b2bd521a_BuiltinMakeCallExprModel *_self_, _1b2bd521a_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1b2bd55e4_BuiltinAppendCallExprModel_eq(_1b2bd55e4_BuiltinAppendCallExprModel *_self_, _1b2bd55e4_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1b2bd58e1_BuiltinLenCallExprModel_eq(_1b2bd58e1_BuiltinLenCallExprModel *_self_, _1b2bd58e1_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1b2bd5bdd_BuiltinCapCallExprModel_eq(_1b2bd5bdd_BuiltinCapCallExprModel *_self_, _1b2bd5bdd_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1b2bd60b7_BuiltinDeleteCallExprModel_eq(_1b2bd60b7_BuiltinDeleteCallExprModel *_self_, _1b2bd60b7_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1b2bd6491_BuiltinCopyCallExprModel_eq(_1b2bd6491_BuiltinCopyCallExprModel *_self_, _1b2bd6491_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1b2bd686a_BuiltinErrorCallExprModel_eq(_1b2bd686a_BuiltinErrorCallExprModel *_self_, _1b2bd686a_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1b2bd6b67_SizeofExprModel_eq(_1b2bd6b67_SizeofExprModel *_self_, _1b2bd6b67_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1b2bd731b_AlignofExprModel_eq(_1b2bd731b_AlignofExprModel *_self_, _1b2bd731b_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1b2bd7508_RuneExprModel_eq(_1b2bd7508_RuneExprModel *_self_, _1b2bd7508_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1b2bd7b79_FreeExprModel_eq(_1b2bd7b79_FreeExprModel *_self_, _1b2bd7b79_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1b2bd8edd_Param_eq(_1b2bd8edd_Param *_self_, _1b2bd8edd_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1b2bdc91a_ParamIns> _1b2bd93a6_instance(jule::Ptr<_1b2bd8edd_Param> _self_) {
	return jule::new_ptr<_1b2bdc91a_ParamIns>(_1b2bdc91a_ParamIns{._field_Decl=_self_, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr)});;
}



inline jule::Bool _1b2bd963c_IsSelf(_1b2bd8edd_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1b2bd98c3_IsRef(_1b2bd8edd_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1b2bdae68_IsVoid(_1b2bda9b2_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1b2bdb1ee_IsMethod(_1b2bda9b2_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1b2bd8edd_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1b2bd963c_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1b2bdb485_IsEntryPoint(_1b2bda9b2_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1b2bdb71b_IsInit(_1b2bda9b2_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1b2bdb9a2_IsAnon(_1b2bda9b2_Fn* _self_) {
	return _1b2acab6b_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1b2bdbc38_AnyVar(_1b2bda9b2_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1b2bdda70_FnIns> _1b2bdbebe_instanceForce(jule::Ptr<_1b2bda9b2_Fn> _self_) {
	jule::Ptr<_1b2bdda70_FnIns> _1107_ins = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::new_ptr<_1b2ca4592_Scope>(_1b2ca4592_Scope{._field_Parent=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1b2cc3281_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2bdc91a_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64c2949:;
		if (it != expr_end) {
			jule::Ptr<_1b2bd8edd_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b2bd93a6_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_1b64c2949:;
			++it;
			goto _iter_begin_1b64c2949;
		}
		_iter_end_1b64c2949:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _1107_ins;;
}



inline jule::Ptr<_1b2bdda70_FnIns> _1b2bdc255_instance(jule::Ptr<_1b2bda9b2_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1b2bdbebe_instanceForce(_self_);;
}



inline jule::Ptr<_1b2bdda70_FnIns> _1b2bdc563_appendInstance(_1b2bda9b2_Fn* _self_, jule::Ptr<_1b2bdda70_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1b2bdda70_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1b2bdda70_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64c790a:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdda70_FnIns> _15415_ains = *it;
			{
				if (_1b2be0610_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_1b64c790a:;
			++it;
			goto _iter_begin_1b64c790a;
		}
		_iter_end_1b64c790a:;
	};
	{ jule::Slice<jule::Ptr<_1b2bdda70_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _1b2bdc91a_ParamIns_eq(_1b2bdc91a_ParamIns *_self_, _1b2bdc91a_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1b2bdccb1_Str(_1b2bdc91a_ParamIns* _self_) {
	_20d8ca601_Builder _1767_s = static__20d8cb1c3_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_20d8d4ac2_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_20d8d4ac2_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
	};
	if (_1b2bd963c_IsSelf((*(_self_))._field_Decl)) {
		if (_1b2bd98c3_IsRef((*(_self_))._field_Decl)) {
			_20d8d4d7a_WriteByte(&_1767_s, '&');
		};
		_20d8d4ac2_WriteStr(&_1767_s, jule::Str::lit("self", 4));
		return _20d8d53b9_Str(&_1767_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_20d8d4ac2_WriteStr(&_1767_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_20d8d4ac2_WriteStr(&_1767_s, _1b2db1a23_Str((*(_self_))._field_Kind));
	};
	return _20d8d53b9_Str(&_1767_s);;
}







inline jule::Str _1b2bddde4_Str(_1b2bdda70_FnIns* _self_) {
	;
	return _1b2be0951_GetKindStr(_self_, false);;
}



inline jule::Bool _1b2bde235_Equal(jule::Ptr<_1b2bdda70_FnIns> _self_, jule::Ptr<_1b2db1627_TypeKind> _22918_other) {
	jule::Ptr<_1b2bdda70_FnIns> _2303_f = _1b2db50ba_Fn(_22918_other.ptr());;
	if ((_2303_f == nullptr)) {
		return false;;
	};
	return _1b2bde6ca_EqualFn(_self_, &(_2303_f));;
}



inline jule::Bool _1b2bde6ca_EqualFn(jule::Ptr<_1b2bdda70_FnIns> _self_, jule::Ptr<_1b2bdda70_FnIns>* _24021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1b2bdae68_IsVoid((*(_self_))._field_Decl) != _1b2bdae68_IsVoid((*((*(_24021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1b2bdc91a_ParamIns>,jule::Ptr<_1b2bdc91a_ParamIns>> _2503_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1b2bdc91a_ParamIns>,jule::Ptr<_1b2bdc91a_ParamIns>>((void*)__jule_anon1b64d3053, nullptr, nullptr);;
	if (((*((*(_24021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2827_i = 0LL;;
	for (; (_2827_i < (*_self_.alloc)._field_Params.len()); (_2827_i)++) {
		{
			if ((!(_2503_checkParams((*(_self_))._field_Params[_2827_i], (*((*(_24021_f))))._field_Params[_2827_i])))) {
				return false;;
			};
		}
	_iter_next_1b64d8db1:;
	}
	_iter_end_1b64d8db1:;;
	if ((!(_1b2bdae68_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1b2db1d64_Equal((*_self_.alloc)._field_Result, (*((*(_24021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1b2bdea1b_equalTrait(jule::Ptr<_1b2bdda70_FnIns> _self_, jule::Ptr<_1b2bdda70_FnIns>* _29924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1b2bde6ca_EqualFn(_self_, _29924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _1b2bdeca2_Types(_1b2bdda70_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1b64dea54:;
			{
				return nullptr;;
			}
		}
		else if ((_1b2db5b04_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1b64deaba:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1b64de5d1:;
			{
				return (*(_1b2db5b04_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1b64de4c1:;
	};
}



inline jule::Bool _1b2be0038_IsBuiltin(_1b2bdda70_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1b2be02be_IsAnon(_1b2bdda70_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1b2bdb9a2_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1b2be0610_Same(_1b2bdda70_FnIns* _self_, jule::Ptr<_1b2bdda70_FnIns> _34216_f) {
	if ((((*(_self_))._field_Decl != (*(_34216_f))._field_Decl) || ((*_34216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64e276b:;
		if (it != expr_end) {
			jule::I64 _3477_i = it - expr->begin();
			jule::Ptr<_1b2daee72_InsGeneric> *_34710_g = it;
			{
				jule::Ptr<_1b2daee72_InsGeneric> _3484_g2 = (*(_34216_f))._field_Generics[_3477_i];;
				if ((((*((*((*(_34710_g))))._field_Kind))._field_BindIdent != (*(*(_3484_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1b2db1d64_Equal((*((*(_34710_g))))._field_Kind, (*(_3484_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b64e276b:;
			++it;
			_3477_i++;
			goto _iter_begin_1b64e276b;
		}
		_iter_end_1b64e276b:;
	};
	return true;;
}



inline jule::Str _1b2be0951_GetKindStr(_1b2bdda70_FnIns* _self_, jule::Bool _35922_ident) {
	_20d8ca601_Builder _3607_s = static__20d8cb1c3_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		_20d8d4ac2_WriteStr(&_3607_s, jule::Str::lit("unsafe ", 7));
	};
	_20d8d4ac2_WriteStr(&_3607_s, jule::Str::lit("fn", 2));
	if ((_35922_ident && ((*(_self_))._field_Decl != nullptr))) {
		_20d8d4d7a_WriteByte(&_3607_s, ' ');
		_20d8d4ac2_WriteStr(&_3607_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_20d8d4d7a_WriteByte(&_3607_s, '(');
	jule::I64 _3743_n = (*(_self_))._field_Params.len();;
	if ((_3743_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b64e8684:;
			if (it != expr_end) {
				jule::I64 _3768_i = it - expr->begin();
				jule::Ptr<_1b2bdc91a_ParamIns> *_37611_p = it;
				{
					_20d8d4ac2_WriteStr(&_3607_s, _1b2bdccb1_Str((*(_37611_p)).ptr()));
					if ((_3768_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_20d8d4d7a_WriteByte(&_3607_s, ',');
					};
				}
				_iter_next_1b64e8684:;
				++it;
				_3768_i++;
				goto _iter_begin_1b64e8684;
			}
			_iter_end_1b64e8684:;
		};
	};
	_20d8d4d7a_WriteByte(&_3607_s, ')');
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		_20d8d4d7a_WriteByte(&_3607_s, '!');
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1b2bdae68_IsVoid((*(_self_))._field_Decl))))) {
		_20d8d4d7a_WriteByte(&_3607_s, ':');
		_20d8d4ac2_WriteStr(&_3607_s, _1b2db1a23_Str((*(_self_))._field_Result.ptr()));
	};
	return _20d8d53b9_Str(&_3607_s);;
}







inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2be22d2_SelectPackage(_1b2be1cb5_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64ec435:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1b64ec435:;
			++it;
			goto _iter_begin_1b64ec435;
		}
		_iter_end_1b64ec435:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2be26cd_FindVar(_1b2be1cb5_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1b2be4812_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1b2db0835_TypeAlias> _1b2be2ac9_FindTypeAlias(_1b2be1cb5_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1b2be4cb8_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1b2b0db6b_Struct> _1b2be2ec5_FindStruct(_1b2be1cb5_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b64ee1b2:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1b64ee1b2:;
			++it;
			goto _iter_begin_1b64ee1b2;
		}
		_iter_end_1b64ee1b2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2be33c1_FindFn(_1b2be1cb5_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6500dc8:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1b6500dc8:;
			++it;
			goto _iter_begin_1b6500dc8;
		}
		_iter_end_1b6500dc8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2be61c6_Trait> _1b2be3712_FindTrait(_1b2be1cb5_SymTab* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b65021e8:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1b65021e8:;
			++it;
			goto _iter_begin_1b65021e8;
		}
		_iter_end_1b65021e8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2be887c_Enum> _1b2be3a53_FindEnum(_1b2be1cb5_SymTab* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b650320a:;
		if (it != expr_end) {
			jule::Ptr<_1b2be887c_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1b650320a:;
			++it;
			goto _iter_begin_1b650320a;
		}
		_iter_end_1b650320a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2bea087_TypeEnum> _1b2be3d94_FindTypeEnum(_1b2be1cb5_SymTab* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b65041ea:;
		if (it != expr_end) {
			jule::Ptr<_1b2bea087_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1b65041ea:;
			++it;
			goto _iter_begin_1b65041ea;
		}
		_iter_end_1b65041ea:;
	};
	return nullptr;;
}



inline jule::I64 _1b2be435b_findVar1(_1b2be1cb5_SymTab* _self_, jule::Ptr<_1b2d26ca7_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b65051da:;
		if (it != expr_end) {
			jule::I64 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1b65051da:;
			++it;
			_1097_i++;
			goto _iter_begin_1b65051da;
		}
		_iter_end_1b65051da:;
	};
	return -1LL;;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2be4812_findVar(_1b2be1cb5_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I64 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1b2d26ca7_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1b6507055:;
		}
		_iter_end_1b6507055:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b65084da:;
			if (it != expr_end) {
				jule::Ptr<_1b2d26ca7_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1b65084da:;
				++it;
				goto _iter_begin_1b65084da;
			}
			_iter_end_1b65084da:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1b2db0835_TypeAlias> _1b2be4cb8_findTypeAlias(_1b2be1cb5_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I64 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1b2db0835_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1b650a399:;
		}
		_iter_end_1b650a399:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b650b82e:;
			if (it != expr_end) {
				jule::Ptr<_1b2db0835_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1b650b82e:;
				++it;
				goto _iter_begin_1b650b82e;
			}
			_iter_end_1b650b82e:;
		};
	};
	return nullptr;;
}



inline jule::Any _1b2be51b4_defByIdent(_1b2be1cb5_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b650ca94:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type7);;
				};
			}
			_iter_next_1b650ca94:;
			++it;
			goto _iter_begin_1b650ca94;
		}
		_iter_end_1b650ca94:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b650d798:;
		if (it != expr_end) {
			jule::Ptr<_1b2db0835_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type8);;
				};
			}
			_iter_next_1b650d798:;
			++it;
			goto _iter_begin_1b650d798;
		}
		_iter_end_1b650d798:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b650edb5:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type9);;
				};
			}
			_iter_next_1b650edb5:;
			++it;
			goto _iter_begin_1b650edb5;
		}
		_iter_end_1b650edb5:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6511724:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type10);;
				};
			}
			_iter_next_1b6511724:;
			++it;
			goto _iter_begin_1b6511724;
		}
		_iter_end_1b6511724:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b65188c4:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type11);;
				};
			}
			_iter_next_1b65188c4:;
			++it;
			goto _iter_begin_1b65188c4;
		}
		_iter_end_1b65188c4:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b65186b5:;
		if (it != expr_end) {
			jule::Ptr<_1b2be887c_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type12);;
				};
			}
			_iter_next_1b65186b5:;
			++it;
			goto _iter_begin_1b65186b5;
		}
		_iter_end_1b65186b5:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6518286:;
		if (it != expr_end) {
			jule::Ptr<_1b2bea087_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type13);;
				};
			}
			_iter_next_1b6518286:;
			++it;
			goto _iter_begin_1b6518286;
		}
		_iter_end_1b6518286:;
	};
	return nullptr;;
}



inline jule::Bool _1b2be566a_isDuplicatedIdent(_1b2be1cb5_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6521514:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b6521514:;
			++it;
			goto _iter_begin_1b6521514;
		}
		_iter_end_1b6521514:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6523e40:;
		if (it != expr_end) {
			jule::Ptr<_1b2db0835_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b6523e40:;
			++it;
			goto _iter_begin_1b6523e40;
		}
		_iter_end_1b6523e40:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6529264:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b6529264:;
			++it;
			goto _iter_begin_1b6529264;
		}
		_iter_end_1b6529264:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b652a441:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b652a441:;
			++it;
			goto _iter_begin_1b652a441;
		}
		_iter_end_1b652a441:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b652c8b6:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1b652c8b6:;
			++it;
			goto _iter_begin_1b652c8b6;
		}
		_iter_end_1b652c8b6:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b652c960:;
		if (it != expr_end) {
			jule::Ptr<_1b2be887c_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1b652c960:;
			++it;
			goto _iter_begin_1b652c960;
		}
		_iter_end_1b652c960:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b652d961:;
		if (it != expr_end) {
			jule::Ptr<_1b2bea087_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1b652d961:;
			++it;
			goto _iter_begin_1b652d961;
		}
		_iter_end_1b652d961:;
	};
	return false;;
}







inline jule::Str _1b2be65c2_Str(_1b2be61c6_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b2be6913_Equal(jule::Ptr<_1b2be61c6_Trait> _self_, jule::Ptr<_1b2db1627_TypeKind> _2518_other) {
	jule::Ptr<_1b2be61c6_Trait> _263_trt = _1b2db55d7_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2be6da8_FindMethod(_1b2be61c6_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6531348:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1b6531348:;
			++it;
			goto _iter_begin_1b6531348;
		}
		_iter_end_1b6531348:;
	};
	return _1b2be753a_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2be753a_findMethodInherit(_1b2be61c6_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6534516:;
		if (it != expr_end) {
			jule::Ptr<_1b2db8d38_TypeSymbol> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Kind == nullptr)) {
					goto _iter_next_1b6534516;
				};
				jule::Ptr<_1b2be61c6_Trait> _608_t = _1b2db55d7_Trait((*_5615_i.alloc)._field_Kind.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1b2bda9b2_Fn> _629_f2 = _1b2be6da8_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1b6534516:;
			++it;
			goto _iter_begin_1b6534516;
		}
		_iter_end_1b6534516:;
	};
	return nullptr;;
}








inline jule::Bool _1b2be7d32_EnumItem_eq(_1b2be7d32_EnumItem *_self_, _1b2be7d32_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1b2be81ea_AutoExpr(_1b2be7d32_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1b2be8c34_Str(_1b2be887c_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b2be9075_Equal(jule::Ptr<_1b2be887c_Enum> _self_, jule::Ptr<_1b2db1627_TypeKind> _3818_other) {
	jule::Ptr<_1b2be887c_Enum> _393_enm = _1b2db4581_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1b2be7d32_EnumItem> _1b2be94a4_FindItem(_1b2be887c_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6537d22:;
		if (it != expr_end) {
			jule::Ptr<_1b2be7d32_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1b6537d22:;
			++it;
			goto _iter_begin_1b6537d22;
		}
		_iter_end_1b6537d22:;
	};
	return nullptr;;
}








inline jule::Bool _1b2be99b0_TypeEnumItem_eq(_1b2be99b0_TypeEnumItem *_self_, _1b2be99b0_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}





inline jule::Str _1b2bea40b_Str(_1b2bea087_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b2bea74c_Equal(jule::Ptr<_1b2bea087_TypeEnum> _self_, jule::Ptr<_1b2db1627_TypeKind> _8018_other) {
	jule::Ptr<_1b2bea087_TypeEnum> _813_tenm = _1b2db4817_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1b2be99b0_TypeEnumItem> _1b2beab7b_FindItem(_1b2bea087_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b653a0bb:;
		if (it != expr_end) {
			jule::Ptr<_1b2be99b0_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1b653a0bb:;
			++it;
			goto _iter_begin_1b653a0bb;
		}
		_iter_end_1b653a0bb:;
	};
	return nullptr;;
}








inline jule::Bool _1b2c76ba2_comptimeRange_eq(_1b2c76ba2_comptimeRange *_self_, _1b2c76ba2_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1b2c7709d_Str(_1b2c76ba2_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1b2c773de_Equal(jule::Ptr<_1b2c76ba2_comptimeRange> _self_, jule::Ptr<_1b2db1627_TypeKind> _2718_other) {
	return false;;
}








inline jule::Bool _1b2c7770d_comptimeStructField_eq(_1b2c7770d_comptimeStructField *_self_, _1b2c7770d_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1b2c77ab5_Str(_1b2c7770d_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1b2c77e06_Equal(jule::Ptr<_1b2c7770d_comptimeStructField> _self_, jule::Ptr<_1b2db1627_TypeKind> _3718_other) {
	return false;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c78412__Decl(jule::Ptr<_1b2c7770d_comptimeStructField> _self_, jule::Ptr<_1b2d80948_eval>* _4127_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type14)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c7880d__Type(jule::Ptr<_1b2c7770d_comptimeStructField> _self_, jule::Ptr<_1b2d80948_eval>* _5327_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c78b4e_subIdent(jule::Ptr<_1b2c7770d_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b6547815:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _648_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6548a8b, jule::Ptr<__jule_anon_1b6548a8b_ctx>::make(__jule_anon_1b6548a8b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6548a8b_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b654789d:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _718_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b654aa16, jule::Ptr<__jule_anon_1b654aa16_ctx>::make(__jule_anon_1b654aa16_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b654aa16_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1b654764a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b654775a:;
	};
}







inline jule::Str _1b2c79369_Str(_1b2c78ea1_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1b2c796aa_Equal(jule::Ptr<_1b2c78ea1_comptimeStructFields> _self_, jule::Ptr<_1b2db1627_TypeKind> _9018_other) {
	return false;;
}



inline void _1b2c79b3e_ready(_1b2c78ea1_comptimeStructFields* _self_, jule::Ptr<_1b2d26ca7_Var>* _9426_keyA, jule::Ptr<_1b2d26ca7_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c7770d_comptimeStructField>(_1b2c7770d_comptimeStructField{._field_field=jule::Ptr<_1b2b10e26_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data6)})});
	};
}



inline void _1b2c79ea2_index(_1b2c78ea1_comptimeStructFields* _self_, jule::Ptr<_1b2d7dc21_Data>* _11526_d, jule::I64 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c7770d_comptimeStructField>(_1b2c7770d_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data6)});
}



inline void _1b2c7a3c0_step(_1b2c78ea1_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1b2d26ca7_Var>* _12633_keyA, jule::Ptr<_1b2d26ca7_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2bc22e5_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1b2db63a7_comptimeStructField((*((*((*(_12650_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I64 _1b2c7a656_len(_1b2c78ea1_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1b2c7a931_comptimeStatic_eq(_1b2c7a931_comptimeStatic *_self_, _1b2c7a931_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1b2c7acd8_Str(_1b2c7a931_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1b2c7b129_Equal(jule::Ptr<_1b2c7a931_comptimeStatic> _self_, jule::Ptr<_1b2db1627_TypeKind> _15018_other) {
	return false;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c7b635__Decl(jule::Ptr<_1b2c7a931_comptimeStatic> _self_, jule::Ptr<_1b2d80948_eval>* _15427_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type7)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c7ba31__Type(jule::Ptr<_1b2c7a931_comptimeStatic> _self_, jule::Ptr<_1b2d80948_eval>* _16627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c7bd72_subIdent(jule::Ptr<_1b2c7a931_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b655d2ed:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _1778_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b655e574, jule::Ptr<__jule_anon_1b655e574_ctx>::make(__jule_anon_1b655e574_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b655e574_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b655d386:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _1848_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b65614ee, jule::Ptr<__jule_anon_1b65614ee_ctx>::make(__jule_anon_1b65614ee_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b65614ee_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1b655d133:;
			{
				return nullptr;;
			}
		}
		_match_end_1b655d243:;
	};
}







inline jule::Str _1b2c7c58c_Str(_1b2c7c1d5_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1b2c7c8cd_Equal(jule::Ptr<_1b2c7c1d5_comptimeStatics> _self_, jule::Ptr<_1b2db1627_TypeKind> _20318_other) {
	return false;;
}



inline void _1b2c7cd62_ready(_1b2c7c1d5_comptimeStatics* _self_, jule::Ptr<_1b2d26ca7_Var>* _20726_keyA, jule::Ptr<_1b2d26ca7_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c7a931_comptimeStatic>(_1b2c7a931_comptimeStatic{._field_field=jule::Ptr<_1b2d26ca7_Var>(nullptr)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data8)})});
	};
}



inline void _1b2c7d1c5_index(_1b2c7c1d5_comptimeStatics* _self_, jule::Ptr<_1b2d7dc21_Data>* _22826_d, jule::I64 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c7a931_comptimeStatic>(_1b2c7a931_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data8)});
}



inline void _1b2c7d5e3_step(_1b2c7c1d5_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1b2d26ca7_Var>* _23933_keyA, jule::Ptr<_1b2d26ca7_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2bc22e5_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1b2db7bb1_comptimeStatic((*((*((*(_23950_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I64 _1b2c7d879_len(_1b2c7c1d5_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1b2c7db54_comptimeEnumField_eq(_1b2c7db54_comptimeEnumField *_self_, _1b2c7db54_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1b2c7e00b_Str(_1b2c7db54_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1b2c7e34c_Equal(jule::Ptr<_1b2c7db54_comptimeEnumField> _self_, jule::Ptr<_1b2db1627_TypeKind> _26318_other) {
	return false;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c7e847__Decl(jule::Ptr<_1b2c7db54_comptimeEnumField> _self_, jule::Ptr<_1b2d80948_eval>* _26727_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type16)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c7eb88_subIdent(jule::Ptr<_1b2c7db54_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b65713aa:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _2828_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b657291c, jule::Ptr<__jule_anon_1b657291c_ctx>::make(__jule_anon_1b657291c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b657291c_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1b6571498:;
			{
				return nullptr;;
			}
		}
		_match_end_1b656ccd0:;
	};
}







inline jule::Str _1b2c8042a_Str(_1b2c7ee63_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1b2c8076b_Equal(jule::Ptr<_1b2c7ee63_comptimeEnumFields> _self_, jule::Ptr<_1b2db1627_TypeKind> _30118_other) {
	return false;;
}



inline void _1b2c80b78_ready(_1b2c7ee63_comptimeEnumFields* _self_, jule::Ptr<_1b2d26ca7_Var>* _30526_keyA, jule::Ptr<_1b2d26ca7_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c7db54_comptimeEnumField>(_1b2c7db54_comptimeEnumField{._field_field=jule::Ptr<_1b2be7d32_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data10)})});
	};
}



inline void _1b2c80edb_index(_1b2c7ee63_comptimeEnumFields* _self_, jule::Ptr<_1b2d7dc21_Data>* _32626_d, jule::I64 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c7db54_comptimeEnumField>(_1b2c7db54_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data10)});
}



inline void _1b2c81409_step(_1b2c7ee63_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1b2d26ca7_Var>* _33733_keyA, jule::Ptr<_1b2d26ca7_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2bc22e5_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1b2db68c4_comptimeEnumField((*((*((*(_33750_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I64 _1b2c81690_len(_1b2c7ee63_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1b2c8196a_comptimeParam_eq(_1b2c8196a_comptimeParam *_self_, _1b2c8196a_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1b2c81d22_Str(_1b2c8196a_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1b2c82163_Equal(jule::Ptr<_1b2c8196a_comptimeParam> _self_, jule::Ptr<_1b2db1627_TypeKind> _36118_other) {
	return false;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c82680__Decl(jule::Ptr<_1b2c8196a_comptimeParam> _self_, jule::Ptr<_1b2d80948_eval>* _36527_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type17)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c82a7b__Type(jule::Ptr<_1b2c8196a_comptimeParam> _self_, jule::Ptr<_1b2d80948_eval>* _37727_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c82e77__Recv(jule::Ptr<_1b2c8196a_comptimeParam> _self_, jule::Ptr<_1b2d80948_eval>* _38527_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _3907_constant = static__1b2bc278a_NewBool(_1b2bd963c_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c832b8_subIdent(jule::Ptr<_1b2c8196a_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b6588405:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _4018_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6589725, jule::Ptr<__jule_anon_1b6589725_ctx>::make(__jule_anon_1b6589725_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6589725_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1b658849e:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _4088_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b658b6a0, jule::Ptr<__jule_anon_1b658b6a0_ctx>::make(__jule_anon_1b658b6a0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b658b6a0_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b6588526:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _4158_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b658d62a, jule::Ptr<__jule_anon_1b658d62a_ctx>::make(__jule_anon_1b658d62a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b658d62a_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1b65880e7:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6588317:;
	};
}







inline jule::Str _1b2c83a6b_Str(_1b2c837c4_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1b2c83dac_Equal(jule::Ptr<_1b2c837c4_comptimeParams> _self_, jule::Ptr<_1b2db1627_TypeKind> _43418_other) {
	return false;;
}



inline void _1b2c84341_ready(_1b2c837c4_comptimeParams* _self_, jule::Ptr<_1b2d26ca7_Var>* _43826_keyA, jule::Ptr<_1b2d26ca7_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c8196a_comptimeParam>(_1b2c8196a_comptimeParam{._field_param=jule::Ptr<_1b2bdc91a_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data12)})});
	};
}



inline void _1b2c846a4_index(_1b2c837c4_comptimeParams* _self_, jule::Ptr<_1b2d7dc21_Data>* _45926_d, jule::I64 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c8196a_comptimeParam>(_1b2c8196a_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data12)});
}



inline void _1b2c84ac2_step(_1b2c837c4_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1b2d26ca7_Var>* _47033_keyA, jule::Ptr<_1b2d26ca7_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2bc22e5_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1b2db6de1_comptimeParam((*((*((*(_47050_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I64 _1b2c84d58_len(_1b2c837c4_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1b2c854da_Str(_1b2c85133_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1b2c8582b_Equal(jule::Ptr<_1b2c85133_comptimeTypeInfos> _self_, jule::Ptr<_1b2db1627_TypeKind> _49418_other) {
	return false;;
}



inline void _1b2c85cb0_ready(_1b2c85133_comptimeTypeInfos* _self_, jule::Ptr<_1b2d26ca7_Var>* _49826_keyA, jule::Ptr<_1b2d26ca7_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c86aa2_comptimeTypeInfo>(_1b2c86aa2_comptimeTypeInfo{._field_base=jule::Ptr<_1b2db1627_TypeKind>(nullptr)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data15)})});
	};
}



inline void _1b2c86123_index(_1b2c85133_comptimeTypeInfos* _self_, jule::Ptr<_1b2d7dc21_Data>* _51926_d, jule::I64 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data15)});
}



inline void _1b2c86541_step(_1b2c85133_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1b2d26ca7_Var>* _52833_keyA, jule::Ptr<_1b2d26ca7_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2bc22e5_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data15);
	};
}



inline jule::I64 _1b2c867c7_len(_1b2c85133_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1b2c86aa2_comptimeTypeInfo_eq(_1b2c86aa2_comptimeTypeInfo *_self_, _1b2c86aa2_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1b2c86e59_Str(_1b2c86aa2_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1b2db1a23_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1b2c8729a_Equal(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2db1627_TypeKind> _55218_other) {
	return false;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c878d8__Decl(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _55627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1b2db5351_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65a5631:;
			{
				_5617_decl=jule::Any((*(_1b2db5351_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type9);
			}
		}
		else if ((_1b2db55d7_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65a5697:;
			{
				_5617_decl=jule::Any(_1b2db55d7_Trait((*(_self_))._field_base), &__jule_any_type11);
			}
		}
		else if ((_1b2db4581_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65a4168:;
			{
				_5617_decl=jule::Any(_1b2db4581_Enum((*(_self_))._field_base), &__jule_any_type12);
			}
		}
		else if ((_1b2db4817_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65a41ce:;
			{
				_5617_decl=jule::Any(_1b2db4817_TypeEnum((*(_self_))._field_base), &__jule_any_type13);
			}
		}
		else if ((_1b2db50ba_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65a4245:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _5728_f = _1b2db50ba_Fn((*(_self_))._field_base);;
				{
					
					if (_1b2be0038_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1b65aa6be:;
						{
							_1b2d80ecb_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1b2be02be_IsAnon(_5728_f.ptr())) {
						_case_begin_1b65aa768:;
						{
							_1b2d80ecb_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1b65aa636:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type10);
			}
		}
		else {
			_case_begin_1b65a4102:;
			{
				_1b2d80ecb_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b65a3ed1:;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c87cd4__Str(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _59322_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _5987_constant = static__1b2bc2a54_NewStr(_1b2db1a23_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e9261a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c881d0__Kind(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _60627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2be887c_Enum> _6117_enm = _1b2cd6bac_FindEnum(_1b2c9a995_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1b2be7d32_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1b2db29e1_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1b65b45da:;
			{
				_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1b2db5351_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b44ec:;
			{
				_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1b2db55d7_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b4299:;
			{
				_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1b2db42ea_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b4310:;
			{
				if (_1b2dc25a0_IsUnsafe(_1b2db42ea_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1b2db4064_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b4376:;
			{
				_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1b2db4581_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b43dc:;
			{
				_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1b2db4817_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b4d49:;
			{
				_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1b2db586d_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b4db0:;
			{
				_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1b2db4d34_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b4e26:;
			{
				_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1b2db4a9d_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b4e8c:;
			{
				_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1b2db50ba_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b5014:;
			{
				_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1b2db5b04_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b508b:;
			{
				_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1b2db3ccd_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b65b5113:;
			{
				jule::Ptr<_1b2db9740_Prim> _6434_prim = _1b2db3ccd_Prim((*(_self_))._field_base);;
				{
					
					if (_1b2dbce91_IsAny(_6434_prim.ptr())) {
						_case_begin_1b65c1a6a:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1b2dbc974_IsBool(_6434_prim.ptr())) {
						_case_begin_1b65c197c:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1b2dbcc0a_IsStr(_6434_prim.ptr())) {
						_case_begin_1b65c175c:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1b2dbbba4_IsF32(_6434_prim.ptr())) {
						_case_begin_1b65c17c3:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1b2dbbe3a_IsF64(_6434_prim.ptr())) {
						_case_begin_1b65c1839:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1b2dba631_IsI8(_6434_prim.ptr())) {
						_case_begin_1b65c18a0:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1b2dba8b7_IsI16(_6434_prim.ptr())) {
						_case_begin_1b65c22c9:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1b2dbab4d_IsI32(_6434_prim.ptr())) {
						_case_begin_1b65c2351:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1b2dbadd4_IsI64(_6434_prim.ptr())) {
						_case_begin_1b65c23c8:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1b2dbb16a_IsU8(_6434_prim.ptr())) {
						_case_begin_1b65c2450:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1b2dbb401_IsU16(_6434_prim.ptr())) {
						_case_begin_1b65c24c7:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1b2dbb687_IsU32(_6434_prim.ptr())) {
						_case_begin_1b65c254e:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1b2dbb91d_IsU64(_6434_prim.ptr())) {
						_case_begin_1b65c25c6:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1b2dbc1c1_IsInt(_6434_prim.ptr())) {
						_case_begin_1b65c264d:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1b2dbc457_IsUint(_6434_prim.ptr())) {
						_case_begin_1b65c26c5:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1b2dbc6dd_IsUintptr(_6434_prim.ptr())) {
						_case_begin_1b65c274c:;
						{
							_61211_item=_1b2be94a4_FindItem(_6117_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1b65c15b4:;
						{
							__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for std::comptime: ", 52) + _1b2db1a23_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1b65c153c:;
				};
			}
		}
		else {
			_case_begin_1b65b4134:;
			{
				__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for std::comptime: ", 52) + _1b2db1a23_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1b65b4079:;
	};
	return _1b2dacdd7_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1b2d83ece_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c885cb__Bits(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _68627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2db9740_Prim> _6913_prim = _1b2db3ccd_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1b2d80ecb_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _6963_n = _1b2c6c0d7_BitSizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1b2d80ecb_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _7017_constant = static__1b2bc22e5_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e932ec_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c889c7__Elem(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _71027_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2dc1a33_Ptr> _7157_ptr = _1b2db42ea_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1b2dc25a0_IsUnsafe(_7157_ptr)) {
			_1b2d80ecb_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1b2dbd26b_Sptr> _7237_sptr = _1b2db4064_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1b2dbdc3e_Slc> _7277_slice = _1b2db4d34_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1b2dc1060_Arr> _7317_array = _1b2db4a9d_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1b2be887c_Enum> _7357_enm = _1b2db4581_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1b2d80ecb_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c88dc3__Size(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _74327_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2dc1060_Arr> _7487_arr = _1b2db4a9d_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1b2d80ecb_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _7537_constant = static__1b2bc22e5_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e932ec_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c892be__Key(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _76226_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2dc03d3_Map> _7677_m = _1b2db586d_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1b2d80ecb_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c896ba__Value(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _77528_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2dc03d3_Map> _7807_m = _1b2db586d_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1b2d80ecb_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c89ab6__Fields(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _78829_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _7937_s = _1b2db5351_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c78ea1_comptimeStructFields>(_1b2c78ea1_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
	};
	jule::Ptr<_1b2be887c_Enum> _8037_enm = _1b2db4581_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c7ee63_comptimeEnumFields>(_1b2c7ee63_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
	};
	_1b2d80ecb_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c89eb2__Statics(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _81730_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _8227_s = _1b2db5351_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1b2d80ecb_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c7c1d5_comptimeStatics>(_1b2c7c1d5_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8a3ad__Binded(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _83629_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _8417_constant = static__1b2bc278a_NewBool(_1b2db24c4_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8a7a9__Ordered(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _84926_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _8547_constant = static__1b2bc278a_NewBool(_1b2db3294_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8aba5__Comparable(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _86229_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _8677_constant = static__1b2bc278a_NewBool(_1b2db2c77_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8b0a1__Mutable(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _87526_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _8807_constant = static__1b2bc278a_NewBool(_1b2db300d_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8b49c__Types(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _88828_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2dbe833_Tuple> _8937_tup = _1b2db5b04_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1b2d80ecb_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2c85133_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1b2c85133_comptimeTypeInfos>(_1b2c85133_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2c86aa2_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2c86aa2_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8937_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b661a1bd:;
		if (it != expr_end) {
			jule::Ptr<_1b2db1627_TypeKind> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2c86aa2_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b2d0290e_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1b661a1bd:;
			++it;
			goto _iter_begin_1b661a1bd;
		}
		_iter_end_1b661a1bd:;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8b898__CanNil(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _91129_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _9167_constant = static__1b2bc278a_NewBool(_1b2db352a_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8bc94__GC(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _92425_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _9297_constant = static__1b2bc278a_NewBool(_1b2db37b1_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8c190__Result(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _93729_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _9427_f = _1b2db50ba_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1b2d80ecb_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1b2e92065_primVoid));;
	};
	return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8c58b__Params(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Ptr<_1b2d80948_eval>* _95329_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _9587_f = _1b2db50ba_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1b2d80ecb_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c837c4_comptimeParams>(_1b2c837c4_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8c8cc_subIdent(jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b662b388:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _9738_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b662ce4a, jule::Ptr<__jule_anon_1b662ce4a_ctx>::make(__jule_anon_1b662ce4a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b662ce4a_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1b662b3ee:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _9808_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b662edc5, jule::Ptr<__jule_anon_1b662edc5_ctx>::make(__jule_anon_1b662edc5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b662edc5_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1b662b465:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _9878_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6631d50, jule::Ptr<__jule_anon_1b6631d50_ctx>::make(__jule_anon_1b6631d50_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6631d50_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1b662b5ec:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _9948_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6633cca, jule::Ptr<__jule_anon_1b6633cca_ctx>::make(__jule_anon_1b6633cca_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6633cca_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1b662b674:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10018_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6635c55, jule::Ptr<__jule_anon_1b6635c55_ctx>::make(__jule_anon_1b6635c55_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6635c55_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1b662b6eb:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10088_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6637bd0, jule::Ptr<__jule_anon_1b6637bd0_ctx>::make(__jule_anon_1b6637bd0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6637bd0_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1b662b773:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10158_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6639b5a, jule::Ptr<__jule_anon_1b6639b5a_ctx>::make(__jule_anon_1b6639b5a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6639b5a_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1b662b883:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10228_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b663bad5, jule::Ptr<__jule_anon_1b663bad5_ctx>::make(__jule_anon_1b663bad5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b663bad5_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1b662b8e9:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10298_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b663dba3, jule::Ptr<__jule_anon_1b663dba3_ctx>::make(__jule_anon_1b663dba3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b663dba3_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1b662b960:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10368_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6640b2d, jule::Ptr<__jule_anon_1b6640b2d_ctx>::make(__jule_anon_1b6640b2d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6640b2d_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1b662b9c6:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10438_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6642aa8, jule::Ptr<__jule_anon_1b6642aa8_ctx>::make(__jule_anon_1b6642aa8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6642aa8_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1b662ba4d:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10508_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6644a33, jule::Ptr<__jule_anon_1b6644a33_ctx>::make(__jule_anon_1b6644a33_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6644a33_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1b662bac5:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10578_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b66469ad, jule::Ptr<__jule_anon_1b66469ad_ctx>::make(__jule_anon_1b66469ad_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b66469ad_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1b662bb4c:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10648_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6648938, jule::Ptr<__jule_anon_1b6648938_ctx>::make(__jule_anon_1b6648938_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6648938_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b662bbc4:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10718_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b664a8b3, jule::Ptr<__jule_anon_1b664a8b3_ctx>::make(__jule_anon_1b664a8b3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b664a8b3_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1b662bc4b:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10788_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b664c83d, jule::Ptr<__jule_anon_1b664c83d_ctx>::make(__jule_anon_1b664c83d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b664c83d_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1b662bcc3:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10858_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b664e7b8, jule::Ptr<__jule_anon_1b664e7b8_ctx>::make(__jule_anon_1b664e7b8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b664e7b8_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1b662bd4a:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10928_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6651743, jule::Ptr<__jule_anon_1b6651743_ctx>::make(__jule_anon_1b6651743_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6651743_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1b662bdc2:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10998_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b66536bd, jule::Ptr<__jule_anon_1b66536bd_ctx>::make(__jule_anon_1b66536bd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b66536bd_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1b6628d47:;
			{
				return nullptr;;
			}
		}
		_match_end_1b662b168:;
	};
}








inline jule::Bool _1b2c8cba7_comptimeValue_eq(_1b2c8cba7_comptimeValue *_self_, _1b2c8cba7_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1b2c8d05e_Str(_1b2c8cba7_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1b2c8d3a0_Equal(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2db1627_TypeKind> _111818_other) {
	return false;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8d911__Unwrap(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _112229_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8dd0c__Type(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _113027_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8e208__Lvalue(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _113829_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _11437_constant = static__1b2bc278a_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8e604__Mutable(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _115130_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _11567_constant = static__1b2bc278a_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8ea00__Const(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _116428_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _11697_constant = static__1b2bc278a_NewBool(_1b2d7e65b_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c8edeb__Field(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _117728_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _11827_s = _1b2db5351_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_11827_s == nullptr)) {
		_1b2d80ecb_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_data))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2ae2721_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1b2d7dc21_Data> _11887_d = _1b2d9e7ad_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b2d7e65b_IsConst(_11887_d.ptr())))) {
		_1b2d80ecb_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2db9740_Prim> _11963_prim = _1b2db3ccd_Prim((*(_11887_d))._field_Kind);;
	if (((_11963_prim == nullptr) || (!(_1b2dbcc0a_IsStr(_11963_prim.ptr()))))) {
		_1b2d80ecb_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_11887_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1b2bc3e40_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1b2b10e26_FieldIns> _12027_f = _1b2b12db2_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1b2d80ecb_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11827_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12013_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1b2d7dc21_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1b2d97498_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*_11877_arg.alloc)._field_Token), &(_12027_f));
	return _1b2c9b15a_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c902e7__Method(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Ptr<_1b2d80948_eval>* _121229_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1b2b119c6_StructIns> _12187_s = static_cast<jule::Ptr<_1b2b119c6_StructIns>>(nullptr);;
	if ((_1b2db4064_Sptr((*((*(_self_))._field_data))._field_Kind.ptr()) != nullptr)) {
		_12187_s=_1b2db5351_Struct((*(_1b2db4064_Sptr((*((*(_self_))._field_data))._field_Kind)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_1b2db5351_Struct((*((*(_self_))._field_data))._field_Kind.ptr());
	};
	if ((_12187_s == nullptr)) {
		_1b2d80ecb_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2ae2721_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1b2d7dc21_Data> _12307_d = _1b2d9e7ad_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b2d7e65b_IsConst(_12307_d.ptr())))) {
		_1b2d80ecb_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2db9740_Prim> _12383_prim = _1b2db3ccd_Prim((*(_12307_d))._field_Kind);;
	if (((_12383_prim == nullptr) || (!(_1b2dbcc0a_IsStr(_12383_prim.ptr()))))) {
		_1b2d80ecb_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_12307_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _1b2bc3e40_ReadStr((*(_12307_d))._field_Constant.ptr());;
	;
	jule::Ptr<_1b2bda9b2_Fn> _12457_m = _1b2b12a71_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_1b2d80ecb_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_12187_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12433_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_1b2d7dc21_Data>((*(*(_self_))._field_data.alloc));
	if (_12177_ref) {
		_1b2dad48c_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_1b2d97ab4_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*_12297_arg.alloc)._field_Token), &(_12457_m), _12177_ref);
	return _1b2c9b15a_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c90638_subIdent(jule::Ptr<_1b2c8cba7_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1b667d4d9:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _12618_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b667e9a2, jule::Ptr<__jule_anon_1b667e9a2_ctx>::make(__jule_anon_1b667e9a2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b667e9a2_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b667d550:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _12688_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b668192c, jule::Ptr<__jule_anon_1b668192c_ctx>::make(__jule_anon_1b668192c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b668192c_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1b667d5b6:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _12758_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b66838a7, jule::Ptr<__jule_anon_1b66838a7_ctx>::make(__jule_anon_1b66838a7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b66838a7_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b667d63d:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _12828_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6685832, jule::Ptr<__jule_anon_1b6685832_ctx>::make(__jule_anon_1b6685832_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6685832_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1b667d82a:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _12898_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b66877ac, jule::Ptr<__jule_anon_1b66877ac_ctx>::make(__jule_anon_1b66877ac_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b66877ac_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1b667d891:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _12968_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6689737, jule::Ptr<__jule_anon_1b6689737_ctx>::make(__jule_anon_1b6689737_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6689737_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1b667d907:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _13038_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b668b6b2, jule::Ptr<__jule_anon_1b668b6b2_ctx>::make(__jule_anon_1b668b6b2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b668b6b2_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_1b667ceab:;
			{
				return nullptr;;
			}
		}
		_match_end_1b667d396:;
	};
}







inline jule::Str _1b2c90cba_Str(_1b2c90913_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1b2c9110b_Equal(jule::Ptr<_1b2c90913_comptimeFiles> _self_, jule::Ptr<_1b2db1627_TypeKind> _132218_other) {
	return false;;
}



inline void _1b2c91590_ready(_1b2c90913_comptimeFiles* _self_, jule::Ptr<_1b2d26ca7_Var>* _132626_keyA, jule::Ptr<_1b2d26ca7_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c92382_comptimeFile>(_1b2c92382_comptimeFile{._field_file=jule::Ptr<_1b2be1cb5_SymTab>(nullptr)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data18)})});
	};
}



inline void _1b2c91903_index(_1b2c90913_comptimeFiles* _self_, jule::Ptr<_1b2d7dc21_Data>* _134726_d, jule::I64 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c92382_comptimeFile>(_1b2c92382_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data18)});
}



inline void _1b2c91d21_step(_1b2c90913_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1b2d26ca7_Var>* _135833_keyA, jule::Ptr<_1b2d26ca7_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2bc22e5_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1b2c92382_comptimeFile>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I64 _1b2c920a7_len(_1b2c90913_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1b2c92382_comptimeFile_eq(_1b2c92382_comptimeFile *_self_, _1b2c92382_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1b2c92739_Str(_1b2c92382_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1b2c92a7a_Equal(jule::Ptr<_1b2c92382_comptimeFile> _self_, jule::Ptr<_1b2db1627_TypeKind> _138218_other) {
	return false;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c93097__Path(jule::Ptr<_1b2c92382_comptimeFile> _self_, jule::Ptr<_1b2d80948_eval>* _138627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _13917_constant = static__1b2bc2a54_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e9261a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c93493__Name(jule::Ptr<_1b2c92382_comptimeFile> _self_, jule::Ptr<_1b2d80948_eval>* _139927_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _14047_constant = static__1b2bc2a54_NewStr(_1b2ace5a9_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e9261a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c9388e__Dir(jule::Ptr<_1b2c92382_comptimeFile> _self_, jule::Ptr<_1b2d80948_eval>* _141226_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2b6c23a_Const> _14177_constant = static__1b2bc2a54_NewStr(_1b2ace323_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e9261a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c93bd0_subIdent(jule::Ptr<_1b2c92382_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1b66a00aa:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _14288_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b66a13ca, jule::Ptr<__jule_anon_1b66a13ca_ctx>::make(__jule_anon_1b66a13ca_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b66a13ca_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b66a0154:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _14358_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b66a3355, jule::Ptr<__jule_anon_1b66a3355_ctx>::make(__jule_anon_1b66a3355_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b66a3355_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1b66a01cb:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _14428_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b66a52d0, jule::Ptr<__jule_anon_1b66a52d0_ctx>::make(__jule_anon_1b66a52d0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b66a52d0_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_1b669ec9c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b669eebc:;
	};
}







inline jule::Str _1b2c94593_Str(_1b2c93eaa_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1b2c948d4_Equal(jule::Ptr<_1b2c93eaa_comptimeDecls> _self_, jule::Ptr<_1b2db1627_TypeKind> _146118_other) {
	return false;;
}



inline void _1b2c94c58_ready(_1b2c93eaa_comptimeDecls* _self_, jule::Ptr<_1b2d26ca7_Var>* _146526_keyA, jule::Ptr<_1b2d26ca7_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data20)})});
	};
}



inline void _1b2c950bb_index(_1b2c93eaa_comptimeDecls* _self_, jule::Ptr<_1b2d7dc21_Data>* _148626_d, jule::I64 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data20)});
}



inline void _1b2c954d9_step(_1b2c93eaa_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1b2d26ca7_Var>* _149533_keyA, jule::Ptr<_1b2d26ca7_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__1b2bc22e5_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1b2c96298_comptimeDecl>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I64 _1b2c95770_len(_1b2c93eaa_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1b2c96298_comptimeDecl_eq(_1b2c96298_comptimeDecl *_self_, _1b2c96298_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1b2c96650_Str(_1b2c96298_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1b2c96991_Equal(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2db1627_TypeKind> _153418_other) {
	return false;;
}



inline jule::Str _1b2c96de2_declAsStr(_1b2c96298_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b66b03c8:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b66aed78:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b66b0285:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b66b030c:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b66b0582:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b66b0609:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b66b087e:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b66b08e5:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b66b095b:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b66b09c2:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1b66b021e:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_1b66aeeaa:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c972dd__Name(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _156527_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b66b50ae:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2b0db6b_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b66b5466:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2bda9b2_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b66b54cc:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2be887c_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b66b5554:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2bea087_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b66b55cb:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2be61c6_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b66b5653:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2b0ac78_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b66b5a0a:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2db0835_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b66b5a71:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2d26ca7_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b66b5ad7:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2be7d32_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b66b5b4d:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2bd8edd_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1b66b5400:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_1b66b5389:;
	};
	jule::Ptr<_1b2b6c23a_Const> _15957_constant = static__1b2bc2a54_NewStr(_15707_name);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e9261a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c976d9__Public(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _160329_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1b66be492:;
			{
				_1b2d80ecb_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2c96de2_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b66be838:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2b0db6b_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b66be89e:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2bda9b2_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b66be915:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2be887c_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b66be98c:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2bea087_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b66bea14:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2be61c6_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b66bea8b:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2b0ac78_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b66beddd:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2db0835_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b66bee65:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2d26ca7_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1b66be7c2:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_1b66be75b:;
	};
	jule::Ptr<_1b2b6c23a_Const> _16337_constant = static__1b2bc278a_NewBool(_16087_public);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c97ad5__Binded(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _164129_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1b66c8e6e:;
			{
				_1b2d80ecb_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2c96de2_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b66c8b50:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2b0db6b_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b66c8bb6:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2bda9b2_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b66c8c2c:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2db0835_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b66c8c93:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2d26ca7_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1b66c8ad9:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_1b66c8a73:;
	};
	jule::Ptr<_1b2b6c23a_Const> _16677_constant = static__1b2bc278a_NewBool(_16467_binded);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c97ed1__Exceptional(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _167534_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b66ce43b:;
			{
				goto _match_end_1b66d07c2;
			}
		}
		else {
			_case_begin_1b66d0838:;
			{
				_1b2d80ecb_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2c96de2_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b66d07c2:;
	};
	jule::Ptr<_1b2bda9b2_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_1b2bda9b2_Fn>(&__jule_any_type10);;
	jule::Ptr<_1b2b6c23a_Const> _16887_constant = static__1b2bc278a_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c983cc__Mutable(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _169630_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16) {
			_case_begin_1b66d582c:;
			{
				_1b2d80ecb_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2c96de2_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b66d550d:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2bd8edd_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b66d5574:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2b0ac78_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b66d55da:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2d26ca7_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1b66d5497:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_1b66d5431:;
	};
	jule::Ptr<_1b2b6c23a_Const> _17217_constant = static__1b2bc278a_NewBool(_17017_mutable);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c987c8__Variadic(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _172931_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7) {
			_case_begin_1b66dc16e:;
			{
				_1b2d80ecb_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2c96de2_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b66dbd50:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2bd8edd_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1b66dbcd9:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_1b66dbc73:;
	};
	jule::Ptr<_1b2b6c23a_Const> _17527_constant = static__1b2bc278a_NewBool(_17347_variadic);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c98bc4__Reference(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _176032_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14) {
			_case_begin_1b66e28c2:;
			{
				_1b2d80ecb_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2c96de2_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b66e25a3:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2d26ca7_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b66e2619:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1b2bd8edd_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1b66e253c:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_1b66e24c6:;
	};
	jule::Ptr<_1b2b6c23a_Const> _17847_constant = static__1b2bc278a_NewBool(_17657_ref);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c990c0__Params(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _179229_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1b66e6ca0:;
			{
				_1b2d80ecb_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2c96de2_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b66e8598:;
			{
				jule::Ptr<_1b2bda9b2_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1b2bda9b2_Fn>();;
				jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2c96298_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b66ebac9:;
					if (it != expr_end) {
						jule::I64 _18129_i = it - expr->begin();
						jule::Ptr<_1b2bd8edd_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type17)});
						}
						_iter_next_1b66ebac9:;
						++it;
						_18129_i++;
						goto _iter_begin_1b66ebac9;
					}
					_iter_end_1b66ebac9:;
				};
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c93eaa_comptimeDecls>(_1b2c93eaa_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b66e819c:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_1b66e8136:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c994bb__Fields(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _182729_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10) {
			_case_begin_1b67005e4:;
			{
				_1b2d80ecb_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2c96de2_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b67002c5:;
			{
				jule::Ptr<_1b2be887c_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1b2be887c_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2c96298_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b67037e5:;
					if (it != expr_end) {
						jule::I64 _18479_i = it - expr->begin();
						jule::Ptr<_1b2be7d32_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type16)});
						}
						_iter_next_1b67037e5:;
						++it;
						_18479_i++;
						goto _iter_begin_1b67037e5;
					}
					_iter_end_1b67037e5:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b670033b:;
			{
				jule::Ptr<_1b2b0db6b_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1b2b0db6b_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2c96298_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6705709:;
					if (it != expr_end) {
						jule::I64 _18539_i = it - expr->begin();
						jule::Ptr<_1b2b0ac78_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type14)});
						}
						_iter_next_1b6705709:;
						++it;
						_18539_i++;
						goto _iter_begin_1b6705709;
					}
					_iter_end_1b6705709:;
				};
			}
		}
		else {
			_case_begin_1b670025e:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_1b67001e8:;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c93eaa_comptimeDecls>(_1b2c93eaa_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c998b7__Statics(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _186830_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1b670928a:;
			{
				_1b2d80ecb_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2c96de2_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b6708e6b:;
			{
				jule::Ptr<_1b2b0db6b_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1b2b0db6b_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2c96298_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b670c579:;
					if (it != expr_end) {
						jule::I64 _18899_i = it - expr->begin();
						jule::Ptr<_1b2d26ca7_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type7)});
						}
						_iter_next_1b670c579:;
						++it;
						_18899_i++;
						goto _iter_begin_1b670c579;
					}
					_iter_end_1b670c579:;
				};
			}
		}
		else {
			_case_begin_1b6708e05:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_1b6708d8e:;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c93eaa_comptimeDecls>(_1b2c93eaa_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c99cb3__Methods(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Ptr<_1b2d80948_eval>* _190430_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1b671110a:;
			{
				_1b2d80ecb_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2c96de2_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b6710cdb:;
			{
				jule::Ptr<_1b2be61c6_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1b2be61c6_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2c96298_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b671430b:;
					if (it != expr_end) {
						jule::I64 _19249_i = it - expr->begin();
						jule::Ptr<_1b2bda9b2_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type10)});
						}
						_iter_next_1b671430b:;
						++it;
						_19249_i++;
						goto _iter_begin_1b671430b;
					}
					_iter_end_1b671430b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b6710d52:;
			{
				jule::Ptr<_1b2b0db6b_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1b2b0db6b_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2c96298_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2c96298_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6716220:;
					if (it != expr_end) {
						jule::I64 _19309_i = it - expr->begin();
						jule::Ptr<_1b2bda9b2_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_1b2c96298_comptimeDecl>(_1b2c96298_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type10)});
						}
						_iter_next_1b6716220:;
						++it;
						_19309_i++;
						goto _iter_begin_1b6716220;
					}
					_iter_end_1b6716220:;
				};
			}
		}
		else {
			_case_begin_1b6710c75:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_1b6710c0e:;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c93eaa_comptimeDecls>(_1b2c93eaa_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c9a104_subIdent(jule::Ptr<_1b2c96298_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b67179d5:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _19488_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b67191bd, jule::Ptr<__jule_anon_1b67191bd_ctx>::make(__jule_anon_1b67191bd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b67191bd_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1b6717a4b:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _19558_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b671b148, jule::Ptr<__jule_anon_1b671b148_ctx>::make(__jule_anon_1b671b148_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b671b148_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1b6717ac3:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _19628_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b671d0c3, jule::Ptr<__jule_anon_1b671d0c3_ctx>::make(__jule_anon_1b671d0c3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b671d0c3_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1b6717b4a:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _19698_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b672004d, jule::Ptr<__jule_anon_1b672004d_ctx>::make(__jule_anon_1b672004d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b672004d_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b6717d04:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _19768_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6721ec8, jule::Ptr<__jule_anon_1b6721ec8_ctx>::make(__jule_anon_1b6721ec8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6721ec8_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1b6717d6a:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _19838_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6723e53, jule::Ptr<__jule_anon_1b6723e53_ctx>::make(__jule_anon_1b6723e53_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6723e53_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1b6717de2:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _19908_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6725dcd, jule::Ptr<__jule_anon_1b6725dcd_ctx>::make(__jule_anon_1b6725dcd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6725dcd_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1b6717e69:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _19978_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6727d58, jule::Ptr<__jule_anon_1b6727d58_ctx>::make(__jule_anon_1b6727d58_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6727d58_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1b671808a:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _20048_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b6729e26, jule::Ptr<__jule_anon_1b6729e26_ctx>::make(__jule_anon_1b6729e26_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6729e26_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1b6718101:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _20118_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b672bda1, jule::Ptr<__jule_anon_1b672bda1_ctx>::make(__jule_anon_1b672bda1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b672bda1_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1b6718167:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _20188_method = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>((void*)__jule_anon_1b672dd2b, jule::Ptr<__jule_anon_1b672dd2b_ctx>::make(__jule_anon_1b672dd2b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b672dd2b_ctx_handler), ._field_reloaded=false});;
				return _1b2c9a786_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_1b6713283:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6717793:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1b2d03091_sema>*,jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>*> _1b2c9d0b3_readyFn(jule::Ptr<_1b2c9cb84_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1b2d03091_sema>*,jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>*>((void*)__jule_anon_1b673a101, jule::Ptr<__jule_anon_1b673a101_ctx>::make(__jule_anon_1b673a101_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b673a101_ctx_handler);;
}



inline jule::Bool _1b2c9d349_readyFi(jule::Ptr<_1b2c9cb84_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1b2d1170e_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1b2c9d0b3_readyFn(_self_)));;
}



inline jule::Bool _1b2c9d5d0_readySi(jule::Ptr<_1b2c9cb84_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1b2c9d0b3_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1b2c9d866_ready(jule::Ptr<_1b2c9cb84_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1b2c9d349_readyFi(_self_);;
	};
	return _1b2c9d5d0_readySi(_self_);;
}



inline jule::Bool _1b2c9daec_check(jule::Ptr<_1b2c9cb84_constraintChecker> _self_) {
	if ((!(_1b2c9d866_ready(_self_)))) {
		return false;;
	};
	_julec_label_1b6750a62:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6751018:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1b2daee72_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1b6751018;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6752228:;
					if (it != expr_end) {
						jule::Ptr<_1b2db1627_TypeKind> _12416_c2 = *it;
						{
							jule::Ptr<_1b2db9740_Prim> _1259_prim = _1b2db3ccd_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1b2dba39a_IsConstraint(_1259_prim))) {
								if (_1b2c9e34a_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Kind))) {
									goto _iter_next_1b6751018;
								};
								goto _iter_next_1b6752228;
							};
							if (_1b2db1d64_Equal(_12416_c2, (*_12015_g.alloc)._field_Kind)) {
								goto _iter_next_1b6751018;
							};
						}
						_iter_next_1b6752228:;
						++it;
						goto _iter_begin_1b6752228;
					}
					_iter_end_1b6752228:;
				};
				_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*_12015_g.alloc)._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1b2c9de82_toStrConstraints(_12015_g), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
			_iter_next_1b6751018:;
			++it;
			_1208_i++;
			goto _iter_begin_1b6751018;
		}
		_iter_end_1b6751018:;
	};
	return true;;
}







inline jule::Bool _1b2ca037e_IsTraitImpl(_1b2c9ee83_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1b2ca0615_IsStructImpl(_1b2c9ee83_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _1b2ca49b0_If_eq(_1b2ca49b0_If *_self_, _1b2ca49b0_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1b2ca4cac_Else_eq(_1b2ca4cac_Else *_self_, _1b2ca4cac_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1b2ca54c7_InfIter_eq(_1b2ca54c7_InfIter *_self_, _1b2ca54c7_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1b2ca597d_WhileIter_eq(_1b2ca597d_WhileIter *_self_, _1b2ca597d_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1b2ca5d24_IsWhileNext(_1b2ca597d_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1b2ca63c9_RangeIter_eq(_1b2ca63c9_RangeIter *_self_, _1b2ca63c9_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1b2ca675e_ContSt_eq(_1b2ca675e_ContSt *_self_, _1b2ca675e_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1b2ca6b38_BreakSt_eq(_1b2ca6b38_BreakSt *_self_, _1b2ca6b38_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1b2ca70de_Label_eq(_1b2ca70de_Label *_self_, _1b2ca70de_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1b2ca774e_GotoSt_eq(_1b2ca774e_GotoSt *_self_, _1b2ca774e_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1b2ca7b28_Postfix_eq(_1b2ca7b28_Postfix *_self_, _1b2ca7b28_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1b2ca80ce_Assign_eq(_1b2ca80ce_Assign *_self_, _1b2ca80ce_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1b2ca9ee3_FallSt_eq(_1b2ca9ee3_FallSt *_self_, _1b2ca9ee3_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1b2caa389_RetSt_eq(_1b2caa389_RetSt *_self_, _1b2caa389_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1b2caa840_scopeLabel_eq(_1b2caa840_scopeLabel *_self_, _1b2caa840_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1b2cab830_scopeChecker_eq(_1b2cab830_scopeChecker *_self_, _1b2cab830_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2cabd08_SelectPackage(_1b2cab830_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _34829_selector) {
	return _1b2d03569_SelectPackage((*(_self_))._field_s.ptr(), _34829_selector);;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2cac204_FindVar(_1b2cab830_scopeChecker* _self_, jule::Str _35923_ident, jule::Bool _35935_binded) {
	if ((!(_35935_binded))) {
		jule::Ptr<_1b2d26ca7_Var> _3618_v = _1b2cb056a_findVar(_self_, _35923_ident);;
		if ((_3618_v != nullptr)) {
			return _3618_v;;
		};
	};
	return _1b2d03965_FindVar((*(_self_))._field_s.ptr(), _35923_ident, _35935_binded);;
}



inline jule::Ptr<_1b2db0835_TypeAlias> _1b2cac600_FindTypeAlias(_1b2cab830_scopeChecker* _self_, jule::Str _37629_ident, jule::Bool _37641_binded) {
	;
	jule::Ptr<_1b2db0835_TypeAlias> _3797_ta = _1b2be4cb8_findTypeAlias((*(_self_))._field_table.ptr(), &(_37629_ident), _37641_binded, true);;
	if ((_3797_ta != nullptr)) {
		return _3797_ta;;
	};
	jule::Ptr<_1b2cab830_scopeChecker> _3847_parent = (*(_self_))._field_parent;;
	while ((_3847_parent != nullptr)) {
		{
			_3797_ta=_1b2be4cb8_findTypeAlias((*(_3847_parent))._field_table, &(_37629_ident), _37641_binded, true);
			if ((_3797_ta != nullptr)) {
				return _3797_ta;;
			};
			_3847_parent=(*_3847_parent.alloc)._field_parent;
		}
	_iter_next_1b679ec59:;
	}
	_iter_end_1b679ec59:;;
	return _1b2d03d61_FindTypeAlias((*(_self_))._field_s.ptr(), _37629_ident, _37641_binded);;
}



inline jule::Ptr<_1b2b0db6b_Struct> _1b2cac9eb_FindStruct(_1b2cab830_scopeChecker* _self_, jule::Str _40126_ident, jule::Bool _40138_binded) {
	return _1b2d0425c_FindStruct((*(_self_))._field_s.ptr(), _40126_ident, _40138_binded);;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2cacde7_FindFn(_1b2cab830_scopeChecker* _self_, jule::Str _41022_ident, jule::Bool _41034_binded) {
	return _1b2d04658_FindFn((*(_self_))._field_s.ptr(), _41022_ident, _41034_binded);;
}



inline jule::Ptr<_1b2be61c6_Trait> _1b2cad238_FindTrait(_1b2cab830_scopeChecker* _self_, jule::Str _41925_ident) {
	return _1b2d04999_FindTrait((*(_self_))._field_s.ptr(), _41925_ident);;
}



inline jule::Ptr<_1b2be887c_Enum> _1b2cad579_FindEnum(_1b2cab830_scopeChecker* _self_, jule::Str _42824_ident) {
	return _1b2d04cda_FindEnum((*(_self_))._field_s.ptr(), _42824_ident);;
}



inline jule::Ptr<_1b2bea087_TypeEnum> _1b2cad8ba_FindTypeEnum(_1b2cab830_scopeChecker* _self_, jule::Str _43728_ident) {
	return _1b2d0512b_FindTypeEnum((*(_self_))._field_s.ptr(), _43728_ident);;
}



inline jule::Bool _1b2cadc1c_isUnsafe(jule::Ptr<_1b2cab830_scopeChecker> _self_) {
	jule::Ptr<_1b2cab830_scopeChecker> _4457_scope = _self_;;
	_julec_label_1b67a5028:;
	if ((*((*(_4457_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_4457_scope.alloc)._field_parent != nullptr)) {
		_4457_scope=(*_4457_scope.alloc)._field_parent;
		goto _julec_label_1b67a5028;
	};
	return false;;
}



inline jule::Bool _1b2cadea3_isRoot(_1b2cab830_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1b2cae1a1_stop(_1b2cab830_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1b2cae437_stopped(_1b2cab830_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1b2cae6bd_isDeferred(jule::Ptr<_1b2cab830_scopeChecker> _self_) {
	jule::Ptr<_1b2cab830_scopeChecker> _4787_scope = _self_;;
	_julec_label_1b67a7aec:;
	if ((*((*(_4787_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_4787_scope.alloc)._field_parent != nullptr)) {
		_4787_scope=(*_4787_scope.alloc)._field_parent;
		goto _julec_label_1b67a7aec;
	};
	return false;;
}



inline void _1b2cae976_pushCaptured(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2d26ca7_Var>* _49934_v) {
	jule::Ptr<_1b2cab830_scopeChecker> _5007_sc = _self_;;
	for (;;) {
		{
			if (((*(_5007_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5007_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b67aa22b:;
					if (it != expr_end) {
						jule::Ptr<_1b2d26ca7_Var> _50312_cv = *it;
						{
							if ((_50312_cv == (*(_49934_v)))) {
								goto _julec_label_1b67ab172;
							};
						}
						_iter_next_1b67aa22b:;
						++it;
						goto _iter_begin_1b67aa22b;
					}
					_iter_end_1b67aa22b:;
				};
				(*(*(_5007_sc))._field_captured.alloc)=jule::append((*(*(_5007_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_49934_v)); __jule_collection; }));
				_julec_label_1b67ab172:;
			};
			if (((*_5007_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1b67a94c2;
			};
			_5007_sc=(*_5007_sc.alloc)._field_parent;
			if ((!(_1b2dae04d_isVarCaptured(_5007_sc, _5007_sc, (*(_49934_v)))))) {
				goto _iter_end_1b67a94c2;
			};
		}
	_iter_next_1b67a94c2:;
	}
	_iter_end_1b67a94c2:;;
}



inline jule::Ptr<_1b2cab830_scopeChecker> _1b2caec0c_getRoot(jule::Ptr<_1b2cab830_scopeChecker> _self_) {
	jule::Ptr<_1b2cab830_scopeChecker> _5247_root = _self_;;
	while ((((*(_5247_root))._field_parent != nullptr) && ((*_5247_root.alloc)._field_owner == nullptr))) {
		{
			_5247_root=(*_5247_root.alloc)._field_parent;
		}
	_iter_next_1b67ac250:;
	}
	_iter_end_1b67ac250:;;
	return _5247_root;;
}



inline jule::Ptr<_1b2cab830_scopeChecker> _1b2caee93_getHardRoot(jule::Ptr<_1b2cab830_scopeChecker> _self_) {
	jule::Ptr<_1b2cab830_scopeChecker> _5347_root = _self_;;
	while (((*(_5347_root))._field_parent != nullptr)) {
		{
			_5347_root=(*_5347_root.alloc)._field_parent;
		}
	_iter_next_1b67ad4d7:;
	}
	_iter_end_1b67ad4d7:;;
	return _5347_root;;
}



inline jule::Ptr<_1b2cc3094_ReferenceStack> _1b2cb0229_getOwnerRefers(jule::Ptr<_1b2cab830_scopeChecker> _self_) {
	return (*((*(_1b2caee93_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2cb056a_findVar(_1b2cab830_scopeChecker* _self_, jule::Str _54623_ident) {
	;
	;
	jule::Ptr<_1b2d26ca7_Var> _5497_v = _1b2be4812_findVar((*(_self_))._field_table.ptr(), &(_54623_ident), false, true);;
	if ((_5497_v != nullptr)) {
		return _5497_v;;
	};
	jule::Ptr<_1b2cab830_scopeChecker> _5537_parent = (*(_self_))._field_parent;;
	while ((_5537_parent != nullptr)) {
		{
			_5497_v=_1b2be4812_findVar((*(_5537_parent))._field_table, &(_54623_ident), false, true);
			if ((_5497_v != nullptr)) {
				return _5497_v;;
			};
			_5537_parent=(*_5537_parent.alloc)._field_parent;
		}
	_iter_next_1b67b1067:;
	}
	_iter_end_1b67b1067:;;
	return nullptr;;
}



inline jule::Ptr<_1b2ca70de_Label> _1b2cb08ab_findLabel(_1b2cab830_scopeChecker* _self_, jule::Str* _56726_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b67b309c:;
		if (it != expr_end) {
			jule::Any _56815_st = *it;
			{
				{
					auto &_match_expr{ _56815_st };
					
					if (_match_expr.type == &__jule_any_type18) {
						_case_begin_1b67b3894:;
						{
							jule::Ptr<_1b2ca70de_Label> _5719_label = _56815_st.unsafe_cast_ptr<_1b2ca70de_Label>();;
							if (((*(_5719_label))._field_Ident == (*(_56726_ident)))) {
								return _5719_label;;
							};
						}
					}
					_match_end_1b67b382d:;
				};
			}
			_iter_next_1b67b309c:;
			++it;
			goto _iter_begin_1b67b309c;
		}
		_iter_end_1b67b309c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2caa840_scopeLabel> _1b2cb0bec_findLabelScope(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Str* _58332_ident) {
	jule::Ptr<_1b2caa840_scopeLabel> _5847_label = _1b2cb103d_findLabelAll(_self_.ptr(), _58332_ident);;
	if (((_5847_label != nullptr) && ((*((*_5847_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _5847_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2caa840_scopeLabel> _1b2cb103d_findLabelAll(_1b2cab830_scopeChecker* _self_, jule::Str* _59429_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b67b8ca6:;
		if (it != expr_end) {
			jule::Ptr<_1b2caa840_scopeLabel> _59515_lbl = *it;
			{
				if (((*((*(_59515_lbl))._field_node))._field_Ident == (*(_59429_ident)))) {
					return _59515_lbl;;
				};
			}
			_iter_next_1b67b8ca6:;
			++it;
			goto _iter_begin_1b67b8ca6;
		}
		_iter_end_1b67b8ca6:;
	};
	return nullptr;;
}



inline jule::Bool _1b2cb1439_isDuplicatedIdent(_1b2cab830_scopeChecker* _self_, jule::Uintptr _60633_itself, jule::Str* _60651_ident) {
	jule::Ptr<_1b2d26ca7_Var> _6073_v = _1b2cac204_FindVar(_self_, (*(_60651_ident)), false);;
	if (((_6073_v != nullptr) && (static_cast<jule::Uintptr>(_6073_v) != _60633_itself))) {
		if (((*_6073_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6073_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1b2d05538_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1b2db0835_TypeAlias> _6153_ta = _1b2cac600_FindTypeAlias(_self_, (*(_60651_ident)), false);;
	if (((_6153_ta != nullptr) && (static_cast<jule::Uintptr>(_6153_ta) != _60633_itself))) {
		if (((*_6153_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6153_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1b2d05538_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1b2cb16e2_checkVarDecl(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01257_VarDecl> _62633_decl) {
	jule::Ptr<_1b2d26ca7_Var> _6277_v = _1b2cc8264_buildVar(_62633_decl);;
	(*(_6277_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6277_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6277_v, &__jule_any_type7); __jule_collection; }));
	});;
	if (_1b2cb1439_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6277_v), &((*_6277_v.alloc)._field_Ident))) {
		_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*_6277_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6277_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1b2cae1a1_stop(_self_);
		return;;
	};
	_1b2d193e8_checkVarDecl((*(_self_))._field_s, &(_6277_v), jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));
	if (((!(_1b2d2744a_IsTypeInferred(_6277_v))) && (((*_6277_v.alloc)._field_Kind == nullptr) || ((*((*_6277_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1b2d1cb8d_evalVarValue((*(_self_))._field_s, &(_6277_v), jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));
	if (((!(_1b2d271b4_IsInitialized(_6277_v))) || ((*((*_6277_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1b2cb795c_removeInteriorMutRisk(_self_, &((*(*(_6277_v))._field_Value.alloc)._field_Data));
	_1b2d1c82a_checkVarValue((*(_self_))._field_s, &(_6277_v));
}



inline void _1b2cb199a_checkTypeAlias(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2db0835_TypeAlias>* _65736_ta) {
	if (_1b2cb1439_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_65736_ta))), &((*((*(_65736_ta))))._field_Ident))) {
		_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_65736_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_65736_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1b2cae1a1_stop(_self_);
		return;;
	};
	_1b2d1347a_checkTypeAliasDecl((*(_self_))._field_s, _65736_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_65736_ta)); __jule_collection; }));
	if (((*((*((*(_65736_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1b2cae1a1_stop(_self_);
	};
}



inline void _1b2cb1c53_checkTypeAliasDecl(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b04e09_TypeAliasDecl> _67339_decl) {
	jule::Ptr<_1b2db0835_TypeAlias> _6747_ta = _1b2cc4d43_buildTypeAlias(_67339_decl);;
	_1b2cb199a_checkTypeAlias(_self_, &(_6747_ta));
}



inline jule::Ptr<_1b2ca4592_Scope> _1b2cb1ed9_getChild(_1b2cab830_scopeChecker* _self_) {
	return jule::new_ptr<_1b2ca4592_Scope>(_1b2ca4592_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1b2cb2407_checkChildSsc(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aed40d_ScopeTree>* _68435_tree, jule::Ptr<_1b2ca4592_Scope>* _68463_s, jule::Ptr<_1b2cab830_scopeChecker>* _68479_ssc) {
	(*((*(_68463_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_68463_s))))._field_ChildIndex=(*((*(_68479_ssc))))._field_childIndex;
	(*((*(_68479_ssc))))._field_parent=_self_;
	_1b2cbd9a7_check((*(_68479_ssc)), _68435_tree, _68463_s);
}



inline jule::Ptr<_1b2ca4592_Scope> _1b2cb2803_checkChildSc(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aed40d_ScopeTree>* _69134_tree, jule::Ptr<_1b2cab830_scopeChecker>* _69162_ssc) {
	jule::Ptr<_1b2ca4592_Scope> _6927_s = _1b2cb1ed9_getChild(_self_.ptr());;
	_1b2cb2407_checkChildSsc(_self_, _69134_tree, &(_6927_s), _69162_ssc);
	return _6927_s;;
}



inline jule::Ptr<_1b2ca4592_Scope> _1b2cb2b44_checkChild(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aed40d_ScopeTree>* _69732_tree) {
	jule::Ptr<_1b2cab830_scopeChecker> _6987_ssc = _1b2cbdc3d_newChildChecker(_self_);;
	return _1b2cb2803_checkChildSc(_self_, _69732_tree, &(_6987_ssc));;
}



inline void _1b2cb2dec_checkAnonScope(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aed40d_ScopeTree> _70235_tree) {
	jule::Ptr<_1b2ca4592_Scope> _7037_s = _1b2cb2b44_checkChild(_self_, &(_70235_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7037_s, &__jule_any_type19); __jule_collection; }));
}



inline void _1b2cb3260_processErrorCall(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2bd686a_BuiltinErrorCallExprModel>* _70738_m, jule::Ptr<_1b2ac7eba_Token> _70769_err) {
	if (_1b2cae6bd_isDeferred(_self_)) {
		_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), _70769_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b2cab830_scopeChecker> _7127_root = _1b2caec0c_getRoot(_self_);;
	if ((!((*((*((*(_7127_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1b2d05e95_pushErr((*(_self_))._field_s, _70769_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_70738_m))))._field_Func=(*_7127_root.alloc)._field_owner;
}



inline void _1b2cb3518_checkExpr(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ae2721_Expr> _72030_expr) {
	jule::Ptr<_1b2d80948_eval> _7217_eval = _1b2d0cd6a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));;
	(*(_7217_eval))._field_ignored=true;
	jule::Ptr<_1b2d7dc21_Data> _7237_d = _1b2d9e7ad_evalExpr(_7217_eval, _72030_expr);;
	if (((_7237_d == nullptr) || ((*(_7237_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7237_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b67da39e:;
			{
				jule::Ptr<_1b2bd686a_BuiltinErrorCallExprModel> _7328_m = (*(_7237_d))._field_Model.unsafe_cast_ptr<_1b2bd686a_BuiltinErrorCallExprModel>();;
				_1b2cb3260_processErrorCall(_self_, &(_7328_m), (*(_72030_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7237_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30) {
			_case_begin_1b67da9ba:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7237_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else {
			_case_begin_1b67da954:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s, (*(_72030_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b67da8dd:;
	};
}



inline jule::Ptr<_1b2ca49b0_If> _1b2cb3859_checkIf(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b03d3c_If> _75028_i) {
	jule::Ptr<_1b2ca4592_Scope> _7517_s = _1b2cb2b44_checkChild(_self_, &((*(_75028_i))._field_Scope));;
	jule::Ptr<_1b2d7dc21_Data> _7537_d = _1b2d9e7ad_evalExpr(_1b2d0cd6a_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)), (*_75028_i.alloc)._field_Expr);;
	if ((_7537_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2db9740_Prim> _7587_prim = _1b2db3ccd_Prim((*(_7537_d))._field_Kind.ptr());;
	if (((_7587_prim == nullptr) || (!(_1b2dbc974_IsBool(_7587_prim.ptr()))))) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*((*_75028_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b2ca49b0_If>(_1b2ca49b0_If{._field_Expr=(*(_7537_d))._field_Model, ._field_Scope=_7517_s});;
}



inline jule::Ptr<_1b2ca4cac_Else> _1b2cb3b9a_checkElse(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b04216_Else> _77030_e) {
	return jule::new_ptr<_1b2ca4cac_Else>(_1b2ca4cac_Else{._field_Scope=_1b2cb2b44_checkChild(_self_, &((*(_77030_e))._field_Scope))});;
}



inline void _1b2cb3e53_checkConditional(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b046bc_Conditional> _77637_conditional) {
	jule::Ptr<_1b2ca51ca_Conditional> _7777_c = jule::new_ptr<_1b2ca51ca_Conditional>(_1b2ca51ca_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1b2ca49b0_If>>(nullptr), ._field_Default=jule::Ptr<_1b2ca4cac_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7777_c, &__jule_any_type31); __jule_collection; }));
	(*_7777_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ca49b0_If>>::alloc(0LL, ((*(_77637_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2ca49b0_If>(nullptr); __jule_collection; });
	(*_7777_c.alloc)._field_Elifs=jule::append((*_7777_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ca49b0_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b2cb3859_checkIf(_self_, (*_77637_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_77637_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6811b12:;
		if (it != expr_end) {
			jule::Ptr<_1b2b03d3c_If> _78315_elif = *it;
			{
				(*_7777_c.alloc)._field_Elifs=jule::append((*_7777_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ca49b0_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b2cb3859_checkIf(_self_, _78315_elif); __jule_collection; }));
			}
			_iter_next_1b6811b12:;
			++it;
			goto _iter_begin_1b6811b12;
		}
		_iter_end_1b6811b12:;
	};
	if (((*_77637_conditional.alloc)._field_Default != nullptr)) {
		(*_7777_c.alloc)._field_Default=_1b2cb3b9a_checkElse(_self_, (*_77637_conditional.alloc)._field_Default);
	};
}



inline void _1b2cb442b_checkIterScopeSsc(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Uintptr _79234_it, jule::Ptr<_1b2aed40d_ScopeTree> _79251_tree, jule::Ptr<_1b2ca4592_Scope>* _79279_s, jule::Ptr<_1b2cab830_scopeChecker> _79294_ssc) {
	(*(_79294_ssc))._field_it=_79234_it;
	_1b2cb2407_checkChildSsc(_self_, &(_79251_tree), _79279_s, &(_79294_ssc));
}



inline jule::Ptr<_1b2ca4592_Scope> _1b2cb48d2_checkIterScopeSc(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Uintptr _79733_it, jule::Ptr<_1b2aed40d_ScopeTree> _79750_tree, jule::Ptr<_1b2cab830_scopeChecker> _79777_ssc) {
	jule::Ptr<_1b2ca4592_Scope> _7987_scope = _1b2cb1ed9_getChild(_self_.ptr());;
	_1b2cb442b_checkIterScopeSsc(_self_, _79733_it, _79750_tree, &(_7987_scope), _79777_ssc);
	return _7987_scope;;
}



inline jule::Ptr<_1b2ca4592_Scope> _1b2cb4ccd_checkIterScope(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Uintptr _80331_it, jule::Ptr<_1b2aed40d_ScopeTree>* _80349_tree) {
	jule::Ptr<_1b2cab830_scopeChecker> _8047_ssc = _1b2cbdc3d_newChildChecker(_self_);;
	return _1b2cb48d2_checkIterScopeSc(_self_, _80331_it, (*(_80349_tree)), _8047_ssc);;
}



inline void _1b2cb5086_checkInfIter(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01da1_Iter>* _80834_it) {
	jule::Ptr<_1b2ca54c7_InfIter> _8097_kind = jule::new_ptr<_1b2ca54c7_InfIter>(_1b2ca54c7_InfIter{._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8097_kind, &__jule_any_type32); __jule_collection; }));
	(*_8097_kind.alloc)._field_Scope=_1b2cb4ccd_checkIterScope(_self_, static_cast<jule::Uintptr>(_8097_kind), &((*((*(_80834_it))))._field_Scope));
}



inline void _1b2cb533e_checkWhileIter(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01da1_Iter>* _81436_it) {
	jule::Ptr<_1b2b026cb_WhileKind> _8157_wh = (*((*(_81436_it))))._field_Kind.cast_ptr<_1b2b026cb_WhileKind>(&__jule_any_type33);;
	if ((((*(_8157_wh))._field_Expr == nullptr) && ((*_8157_wh.alloc)._field_Next == nullptr))) {
		_1b2cb5086_checkInfIter(_self_, _81436_it);
		return;;
	};
	jule::Ptr<_1b2ca597d_WhileIter> _8217_kind = jule::new_ptr<_1b2ca597d_WhileIter>(_1b2ca597d_WhileIter{._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8217_kind, &__jule_any_type34); __jule_collection; }));
	(*_8217_kind.alloc)._field_Scope=_1b2cb4ccd_checkIterScope(_self_, static_cast<jule::Uintptr>(_8217_kind), &((*((*(_81436_it))))._field_Scope));
	if (((*_8157_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1b2d7dc21_Data> _8268_d = _1b2d9e7ad_evalExpr(_1b2d0cd6a_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)), (*_8157_wh.alloc)._field_Expr);;
		if ((_8268_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1b2db9740_Prim> _8314_prim = _1b2db3ccd_Prim((*(_8268_d))._field_Kind.ptr());;
		if ((_8314_prim == nullptr)) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_81436_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1b2dbc974_IsBool(_8314_prim.ptr())))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_81436_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8217_kind.alloc)._field_Expr=(*(_8268_d))._field_Model;
	};
	if (_1b2b02a72_IsWhileNext(_8157_wh)) {
		if ((!(_1b2ca3bac_isValidAstStForNextSt(&((*_8157_wh.alloc)._field_Next))))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*_8157_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _8514_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1b2cbc5dd_checkNode(_self_, &((*_8157_wh.alloc)._field_Next));
		if ((_8514_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8549_st = (*((*(_self_))._field_scope))._field_Stmts[_8514_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8514_n);;
			if ((!(_1b2ca3dee_isValidStForNextSt(&(_8549_st))))) {
				_1b2d05e95_pushErr((*(_self_))._field_s, (*_8157_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8217_kind.alloc)._field_Next=_8549_st;
		};
	};
}



inline void _1b2cb575c_checkComptimeRangeIter(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01da1_Iter>* _86444_it, jule::Ptr<_1b2ca63c9_RangeIter>* _86465_kind, jule::Ptr<_1b2d7dc21_Data>* _86488_d) {
	if (((*((*(_86465_kind))))._field_KeyA != nullptr)) {
		if (((!(_1b2d05538_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1b2cb1439_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_86465_kind))))._field_KeyB != nullptr)) {
		if (((!(_1b2d05538_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1b2cb1439_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1b2b030d3_RangeKind> _8787_rang = (*((*(_86444_it))))._field_Kind.cast_ptr<_1b2b030d3_RangeKind>(&__jule_any_type35);;
	_1b2cbe2b0_makeComptimeRange(_86488_d);
	if ((*((*(_86488_d))))._field_Decl) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_8787_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_86488_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1b2d78523_rangeChecker _8857_rc = _1b2d78523_rangeChecker{._field_sc=_self_, ._field_rang=_8787_rang, ._field_Kind=(*(_86465_kind)), ._field_d=(*(_86488_d))};;
	jule::Bool _8913_ok = _1b2d7a569_check(&_8857_rc);;
	if ((!(_8913_ok))) {
		return;;
	};
	jule::Ptr<_1b2c76ba2_comptimeRange> _8967_comptime = _1b2db7177_comptimeRange((*((*(_86488_d))))._field_Kind);;
	((_1b2c76982_comptimeRangeKindMptrData*)(*(_8967_comptime))._field_kind.safe_type())->_1b2c76179_ready((*(_8967_comptime))._field_kind.data, &((*((*(_86465_kind))))._field_KeyA), &((*((*(_86465_kind))))._field_KeyB));
	jule::I64 _8987_i = 0LL;;
	jule::I64 _8993_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_8987_i < ((_1b2c76982_comptimeRangeKindMptrData*)(*_8967_comptime.alloc)._field_kind.safe_type())->_1b2c7682d_len((*_8967_comptime.alloc)._field_kind.data)); (_8987_i)++) {
		{
			jule::Ptr<_1b2cab830_scopeChecker> _9018_ssc = _1b2cbdc3d_newChildChecker(_self_);;
			jule::Ptr<_1b2ca4592_Scope> _9028_scope = _1b2cb1ed9_getChild(_self_);;
			if (((*((*(_86465_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Scope=_9028_scope;
				(*((*(_9018_ssc))._field_table))._field_Vars=jule::append((*(*(_9018_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_86465_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_86465_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Scope=_9028_scope;
				(*(*(_9018_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9018_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_86465_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1b2c76982_comptimeRangeKindMptrData*)(*_8967_comptime.alloc)._field_kind.safe_type())->_1b2c76597_step((*_8967_comptime.alloc)._field_kind.data, _8987_i, &((*((*(_86465_kind))))._field_KeyA), &((*((*(_86465_kind))))._field_KeyB));
			_1b2cb2407_checkChildSsc(_self_, &((*((*(_86444_it))))._field_Scope), &(_9028_scope), &(_9018_ssc));
			if ((_8993_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1b6839981;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9028_scope, &__jule_any_type19); __jule_collection; }));
		}
	_iter_next_1b6839981:;
	}
	_iter_end_1b6839981:;;
}



inline void _1b2cb5a15_checkRangeIter(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01da1_Iter>* _92136_it) {
	jule::Ptr<_1b2b030d3_RangeKind> _9227_rang = (*((*(_92136_it))))._field_Kind.cast_ptr<_1b2b030d3_RangeKind>(&__jule_any_type35);;
	jule::Ptr<_1b2d7dc21_Data> _9247_d = _1b2d9e46c_evalExpr1(_1b2d0cd6a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)), (*(_9227_rang))._field_Expr);;
	if ((_9247_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2ca63c9_RangeIter> _9297_kind = jule::new_ptr<_1b2ca63c9_RangeIter>(_1b2ca63c9_RangeIter{._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Expr=_9247_d, ._field_KeyA=jule::Ptr<_1b2d26ca7_Var>(nullptr), ._field_KeyB=jule::Ptr<_1b2d26ca7_Var>(nullptr)});;
	if ((*((*(_92136_it))))._field_Comptime) {
		_1b2cb575c_checkComptimeRangeIter(_self_, _92136_it, &(_9297_kind), &(_9247_d));
		return;;
	};
	if (_1b2db5d8a_comptime((*(_9247_d))._field_Kind.ptr())) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*((*_9227_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1b2d78523_rangeChecker _9437_rc = _1b2d78523_rangeChecker{._field_sc=_self_, ._field_rang=_9227_rang, ._field_Kind=_9297_kind, ._field_d=_9247_d};;
	jule::Bool _9493_ok = _1b2d7a569_check(&_9437_rc);;
	if ((!(_9493_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9297_kind, &__jule_any_type36); __jule_collection; }));
	jule::Ptr<_1b2cab830_scopeChecker> _9567_ssc = _1b2cbdc3d_newChildChecker(_self_);;
	jule::Ptr<_1b2ca4592_Scope> _9577_scope = _1b2cb1ed9_getChild(_self_);;
	if (((*(_9297_kind))._field_KeyA != nullptr)) {
		if (((!(_1b2d05538_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1b2cb1439_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9297_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*(*(_9297_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9297_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9297_kind))._field_KeyA.alloc)._field_Scope=_9577_scope;
		(*((*(_9567_ssc))._field_table))._field_Vars=jule::append((*(*(_9567_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9297_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_9297_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1b2d05538_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1b2cb1439_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9297_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*(*(_9297_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9297_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9297_kind))._field_KeyB.alloc)._field_Scope=_9577_scope;
		(*(*(_9567_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9567_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9297_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1b2cb442b_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9297_kind), (*((*(_92136_it))))._field_Scope, &(_9577_scope), _9567_ssc);
	(*_9297_kind.alloc)._field_Scope=_9577_scope;
}



inline void _1b2cb5cbd_checkIter(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01da1_Iter> _98130_it) {
	if (_1b2b02247_IsInf(_98130_it.ptr())) {
		if ((*_98130_it.alloc)._field_Comptime) {
			_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*_98130_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1b2cb5086_checkInfIter(_self_, &(_98130_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_98130_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b6855a79:;
			{
				if ((*_98130_it.alloc)._field_Comptime) {
					_1b2d05e95_pushErr((*(_self_))._field_s, (*_98130_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1b2cb533e_checkWhileIter(_self_, &(_98130_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b6856c45:;
			{
				_1b2cb5a15_checkRangeIter(_self_, &(_98130_it));
			}
		}
		else {
			_case_begin_1b6856bce:;
			{
				jule::outln(_1b4bdc396_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1b6856b68:;
	};
}



inline jule::Bool _1b2cb610e_checkValidContLabel(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Uintptr _100536_it) {
	jule::Ptr<_1b2cab830_scopeChecker> _10067_scope = _self_;;
	_julec_label_1b685b761:;
	if (((*(_10067_scope))._field_it == _100536_it)) {
		return true;;
	};
	if (((*_10067_scope.alloc)._field_parent != nullptr)) {
		_10067_scope=(*_10067_scope.alloc)._field_parent;
		goto _julec_label_1b685b761;
	};
	return false;;
}



inline jule::Bool _1b2cb6450_checkValidBreakLabel(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Uintptr _102137_ptr) {
	jule::Ptr<_1b2cab830_scopeChecker> _10227_scope = _self_;;
	_julec_label_1b6861216:;
	if (((*(_10227_scope))._field_it == _102137_ptr)) {
		return true;;
	};
	if (((*_10227_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _10304_mtch = static_cast<jule::Uintptr>((*(((_1b2ca97ea_Case*)((*_10227_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10304_mtch == _102137_ptr)) {
			return true;;
		};
	};
	if (((*_10227_scope.alloc)._field_parent != nullptr)) {
		_10227_scope=(*_10227_scope.alloc)._field_parent;
		goto _julec_label_1b6861216;
	};
	return false;;
}



inline jule::Ptr<_1b2ca675e_ContSt> _1b2cb6791_checkContValidScope(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b03886_ContSt> _104436_c) {
	if (_1b2cae6bd_isDeferred(_self_)) {
		_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*(_104436_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_104436_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1b2ca675e_ContSt>(_1b2ca675e_ContSt{._field_It=0});;
	};
	jule::Ptr<_1b2cab830_scopeChecker> _10547_scope = _self_;;
	_julec_label_1b68639aa:;
	{
		
		if (((((*_10547_scope.alloc)._field_it == 0LLU) && ((*_10547_scope.alloc)._field_parent != nullptr)) && ((*_10547_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1b686565a:;
			{
				_10547_scope=(*_10547_scope.alloc)._field_parent;
				goto _julec_label_1b68639aa;
			}
		}
		else if (((*_10547_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1b68656e3:;
			{
				return jule::new_ptr<_1b2ca675e_ContSt>(_1b2ca675e_ContSt{._field_It=(*_10547_scope.alloc)._field_it});;
			}
		}
		_match_end_1b68655b1:;
	};
	_1b2d05e95_pushErr((*(_self_))._field_s, (*_104436_c.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1b2cb6a49_checkCont(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b03886_ContSt> _106826_c) {
	jule::Ptr<_1b2ca675e_ContSt> _10697_cont = _1b2cb6791_checkContValidScope(_self_, _106826_c);;
	if ((_10697_cont == nullptr)) {
		return;;
	};
	if (((*(_106826_c))._field_Label != nullptr)) {
		jule::Ptr<_1b2caa840_scopeLabel> _10758_label = _1b2ca2738_findLabelParent(&((*(*(_106826_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_10758_label == nullptr)) {
			_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		(*(_10758_label))._field_used=true;
		if ((((*((*(_10758_label))._field_node))._field_Index + 1LL) >= (*((*(*(_10758_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		jule::I64 _10884_i = ((*(*(_10758_label))._field_node.alloc)._field_Index + 1LL);;
		if ((_10884_i >= (*(*((*(_10758_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _10929_st = (*(*((*(_10758_label))._field_node))._field_Scope.alloc)._field_Stmts[_10884_i];;
			{
				auto &_match_expr{ _10929_st };
				
				if (_match_expr.type == &__jule_any_type32) {
					_case_begin_1b687239d:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1b2ca54c7_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1b6871017:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1b2ca63c9_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type34) {
					_case_begin_1b6871204:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1b2ca597d_WhileIter>());
					}
				}
				else {
					_case_begin_1b687118d:;
					{
						_1b2d05e95_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					}
				}
				_match_end_1b6871127:;
			};
		};
	};
	if (((*(_10697_cont))._field_It != 0LLU)) {
		if ((!(_1b2cb610e_checkValidContLabel(_self_, (*(_10697_cont))._field_It)))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10697_cont, &__jule_any_type37); __jule_collection; }));
}



inline void _1b2cb6d02_checkLabel(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aea9c1_LabelSt> _111531_l) {
	if ((_1b2cb08ab_findLabel(_self_.ptr(), &((*(_111531_l))._field_Ident)) != nullptr)) {
		_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*_111531_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_111531_l.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1b2ca70de_Label> _11217_label = jule::new_ptr<_1b2ca70de_Label>(_1b2ca70de_Label{._field_Ident=(*_111531_l.alloc)._field_Ident, ._field_Scope=(*_self_.alloc)._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11217_label, &__jule_any_type18); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2caa840_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1b2caa840_scopeLabel>(_1b2caa840_scopeLabel{._field_token=(*_111531_l.alloc)._field_Token, ._field_node=_11217_label, ._field_used=false}); __jule_collection; }));
}



inline void _1b2cb70aa_pushGoto(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aead9a_GotoSt> _113429_gt) {
	jule::Ptr<_1b2ca774e_GotoSt> _11357_st = jule::new_ptr<_1b2ca774e_GotoSt>(_1b2ca774e_GotoSt{._field_Ident=(*((*_113429_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_113429_gt))._field_Label, ._field_Label=jule::Ptr<_1b2ca70de_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11357_st, &__jule_any_type38); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ca774e_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11357_st; __jule_collection; }));
}



inline void _1b2cb7363_checkPostfix(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aebd8a_AssignSt> _114533_a) {
	if (((*(_114533_a))._field_Left.len() > 1LL)) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2ae2721_Expr> _11517_expr = (*((*(_114533_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1b2d7dc21_Data> _11527_d = _1b2d9e7ad_evalExpr(_1b2d0cd6a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)), _11517_expr);;
	if ((_11527_d == nullptr)) {
		return;;
	};
	_1b2ca37d3_checkAssign(&((*_self_.alloc)._field_s), &(_11527_d), nullptr, (*_114533_a.alloc)._field_Setter);
	if ((_1b2db42ea_Ptr((*(_11527_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2dc1a33_Ptr> _11608_ptr = _1b2db42ea_Ptr((*(_11527_d))._field_Kind);;
		if (_1b2dc25a0_IsUnsafe(_11608_ptr.ptr())) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_114533_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_11527_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1b2db3ccd_Prim((*(_11527_d))._field_Kind.ptr()) == nullptr) || (!(_1b2c7572d_IsNum((*(_1b2db3ccd_Prim((*(_11527_d))._field_Kind)))._field_Kind))))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_114533_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_11527_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1b2ca7b28_Postfix>(_1b2ca7b28_Postfix{._field_Expr=(*(_11527_d))._field_Model, ._field_Op=(*((*_114533_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type39); __jule_collection; }));
}



inline jule::Bool _1b2cb76a4_isNewAssignIdent(_1b2cab830_scopeChecker* _self_, jule::Str _117832_ident) {
	if ((_1b2aca8a2_IsIgnoreIdent(_117832_ident) || (_117832_ident).empty())) {
		return false;;
	};
	return (_1b2be51b4_defByIdent((*(_self_))._field_table.ptr(), &(_117832_ident), false) == nullptr);;
}



inline void _1b2cb795c_removeInteriorMutRisk(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2d7dc21_Data>* _119143_d) {
	jule::Ptr<_1b2b119c6_StructIns> _11923_s = _1b2db5351_Struct((*((*(_119143_d))))._field_Kind.ptr());;
	if ((_11923_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2cab830_scopeChecker> _11963_root = _1b2caee93_getHardRoot(_self_);;
	if (((*((*(_11963_root))._field_owner))._field_Owner != _11923_s)) {
		return;;
	};
	(*((*(_119143_d))))._field_Mutable=true;
}



inline jule::Bool _1b2cb7e13_checkStructureAssignOp(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b119c6_StructIns>* _120544_s, jule::Ptr<_1b2aebd8a_AssignSt>* _120564_a, jule::Ptr<_1b2d7dc21_Data>* _120588_r) {
	jule::Ptr<_1b2bdda70_FnIns> _120811_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_120564_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b6892db3:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1b6892a61:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b6892ac7:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1b6892b3d:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b6892ba4:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b6892c1a:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b6892c81:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1b6894535:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1b689459b:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1b6894612:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1b6892368:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_120564_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_120564_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2b11d7d_Str((*(_120544_s)).ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1b68929d9:;
	};
	if ((_120811_overload == nullptr)) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_120564_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_120564_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2b11d7d_Str((*(_120544_s)).ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1b2bdc91a_ParamIns> _12407_p = (*(_120811_overload))._field_Params[1LL];;
	return _1b2d0d486_checkAssignType((*(_self_))._field_s, (*((*(_12407_p))._field_Decl))._field_Reference, &((*_12407_p.alloc)._field_Kind), _120588_r, (*((*(_120564_a))))._field_Setter, _1b2cb0229_getOwnerRefers(_self_));;
}



inline void _1b2cb81bb_checkSingleAssign(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aebd8a_AssignSt>* _124439_a) {
	jule::Ptr<_1b2d7dc21_Data> _124511_l = nullptr;;
	if ((!(_1b2aca8a2_IsIgnoreIdent((*((*((*(_124439_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1b2ae2721_Expr> _12488_expr = (*((*((*(_124439_a))))._field_Left[0LL]))._field_Expr;;
		_124511_l=_1b2d9e7ad_evalExpr(_1b2d0cd6a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)), _12488_expr);
		if ((_124511_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1b2d80948_eval> _12557_eval = static_cast<jule::Ptr<_1b2d80948_eval>>(nullptr);;
	if ((_124511_l != nullptr)) {
		_12557_eval=_1b2d0ca29_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1), (*(_124511_l))._field_Kind);
	} else {
		_12557_eval=_1b2d0cd6a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));
	};
	(*(_12557_eval))._field_unsafety=_1b2cadc1c_isUnsafe(_self_);
	jule::Ptr<_1b2d7dc21_Data> _12627_r = _1b2d9e7ad_evalExpr(_12557_eval, (*((*(_124439_a))))._field_Right);;
	if ((_12627_r == nullptr)) {
		return;;
	};
	_1b2cb795c_removeInteriorMutRisk(_self_, &(_12627_r));
	if ((_124511_l == nullptr)) {
		if (_1b2db29e1_Void((*(_12627_r))._field_Kind.ptr())) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*((*((*(_124439_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_124439_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_124439_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12627_r, &__jule_any_type21); __jule_collection; }));
		return;;
	};
	if ((!(_1b2ca37d3_checkAssign(&((*_self_.alloc)._field_s), &(_124511_l), _12627_r, (*((*(_124439_a))))._field_Setter)))) {
		return;;
	};
	if ((_1b2db5b04_Tup((*(_12627_r))._field_Kind) != nullptr)) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_124439_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2bcd125_OperandExprModel> _12897_lm = jule::new_ptr<_1b2bcd125_OperandExprModel>(_1b2bcd125_OperandExprModel{._field_Kind=(*(_124511_l))._field_Kind, ._field_Model=(*(_124511_l))._field_Model});;
	jule::Ptr<_1b2bcd125_OperandExprModel> _12937_rm = jule::new_ptr<_1b2bcd125_OperandExprModel>(_1b2bcd125_OperandExprModel{._field_Kind=(*(_12627_r))._field_Kind, ._field_Model=(*(_12627_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1b2ca80ce_Assign>(_1b2ca80ce_Assign{._field_Left=_12897_lm, ._field_Right=_12937_rm, ._field_Op=(*((*(_124439_a))))._field_Setter}), &__jule_any_type40); __jule_collection; }));
	if (((*(*((*(_124439_a))))._field_Setter.alloc)._field_Id == static_cast<jule::U64>(71LLU))) {
		_1b2d6c0c7_assignTypeChecker _13008_checker = _1b2d6c0c7_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_124511_l))._field_Kind, ._field_d=_12627_r, ._field_errorToken=(*((*(_124439_a))))._field_Setter, ._field_refers=_1b2cb0229_getOwnerRefers(_self_)};;
		if (_1b2d6d0c8_check(&_13008_checker)) {
			(*(_12937_rm))._field_Model=(*(_12627_r))._field_Model;
			(*(_12897_lm))._field_Model=(*(_124511_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _13137_strct = _1b2db5351_Struct((*(_124511_l))._field_Kind);;
	if ((_13137_strct != nullptr)) {
		_1b2cb7e13_checkStructureAssignOp(_self_, &(_13137_strct), _124439_a, &(_12627_r));
		return;;
	};
	jule::U64 _13183_id = (*(*((*(_124439_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_124439_a))))._field_Setter.alloc)._field_Id=_1b2cbe07e_removeEqFromOp((*(*((*(_124439_a))))._field_Setter.alloc)._field_Id);
	_1b2da1bcd_binaryEval _13207_solver = static__1b2da263a_new(_12557_eval, (*((*(_124439_a))))._field_Setter);;
	({
		jule::Ptr<_1b2d7dc21_Data> ___jule_assign_arg = _124511_l;
		jule::Ptr<_1b2d7dc21_Data> _1___jule_assign_arg = _12627_r;
		_13207_solver._field_l = ___jule_assign_arg;
		_13207_solver._field_r = _1___jule_assign_arg;
	});
	_1b2da681a_evalOp(&_13207_solver);
	(*(*((*(_124439_a))))._field_Setter.alloc)._field_Id=_13183_id;
}



inline void _1b2cb8809_processEndPartOfMultiAssign(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ca8585_MultiAssign>* _132649_st, jule::Ptr<_1b2aebd8a_AssignSt>* _132672_a, jule::Ptr<_1b2aeb807_AssignLeft>* _13278_lexpr, jule::Ptr<_1b2d7dc21_Data>* _132738_l, jule::Ptr<_1b2d7dc21_Data>* _132753_r, jule::Bool _132763_strict) {
	if (((!((*((*(_13278_lexpr))))._field_Reference)) && _1b2aca8a2_IsIgnoreIdent((*((*(_13278_lexpr))))._field_Ident))) {
		if (_1b2db29e1_Void((*((*(_132753_r))))._field_Kind.ptr())) {
			_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_132672_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1b2d7dc21_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_132672_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13278_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1b68b97be:;
				{
					if ((!(_1b2cb76a4_isNewAssignIdent(_self_, (*((*(_13278_lexpr))))._field_Ident)))) {
						goto _julec_label_1b68c5148;
					};
				}
			}
			else {
				_case_begin_1b68b9758:;
				{
					if (((*((*(_13278_lexpr))))._field_Mutable || (*((*(_13278_lexpr))))._field_Reference)) {
						_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1b68c5148;
				}
			}
			_match_end_1b68b96e2:;
		};
		if (_1b2cb1439_isDuplicatedIdent(_self_, 0LLU, &((*((*(_13278_lexpr))))._field_Ident))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13278_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1b2cae1a1_stop(_self_);
			return;;
		};
		if (_1b2aca8a2_IsIgnoreIdent((*((*(_13278_lexpr))))._field_Ident)) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b2d26ca7_Var> _13598_v = jule::new_ptr<_1b2d26ca7_Var>(_1b2d26ca7_Var{._field_Scope=(*_self_.alloc)._field_scope, ._field_Token=(*((*(_13278_lexpr))))._field_Token, ._field_Ident=(*((*(_13278_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13278_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13278_lexpr))))._field_Reference, ._field_Kind=jule::Ptr<_1b2db8d38_TypeSymbol>(nullptr), ._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=(*((*(_132672_a))))._field_Right, ._field_Data=(*(_132753_r))}), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr)});;
		_1b2d1c82a_checkVarValue((*(_self_))._field_s, &(_13598_v));
		{ jule::Slice<jule::Ptr<_1b2d7dc21_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=(*((*_13598_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_13598_v.alloc)._field_Mutable, ._field_Reference=(*_13598_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13598_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13598_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1b2d26ca7_Var>> &__jule_push_dest = (*((*(_132649_st))))._field_Decls; __jule_push_dest.push(_13598_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13598_v; __jule_collection; }));
		return;;
	};
	_julec_label_1b68c5148:;
	if (((*((*(_13278_lexpr))))._field_Mutable || (*((*(_13278_lexpr))))._field_Reference)) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13278_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1b2ca37d3_checkAssign(&((*_self_.alloc)._field_s), _132738_l, (*(_132753_r)), (*((*(_13278_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _13947_reference = false;;
	if (_1b2d12c1b_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_132738_l))))._field_Mutable, _13947_reference, &((*((*(_132738_l))))._field_Kind), _132753_r, &((*((*(_13278_lexpr))))._field_Token))) {
		_13947_reference=_132763_strict;
		_1b2d0d486_checkAssignType((*(_self_))._field_s, _13947_reference, &((*((*(_132738_l))))._field_Kind), _132753_r, (*((*(_13278_lexpr))))._field_Token, _1b2cb0229_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1b2d7dc21_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push((*(_132738_l))); };
}



inline void _1b2cb8ab2_checkMultiAssign(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aebd8a_AssignSt>* _140238_a) {
	if ((((*((*((*(_140238_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU)) && ((*(*((*(_140238_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2d7dc21_Data> _14077_rd = _1b2d9e7ad_evalExpr(_1b2d0cd6a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)), (*((*(_140238_a))))._field_Right);;
	if ((_14077_rd == nullptr)) {
		return;;
	};
	jule::Bool _14117_strict = false;;
	jule::Slice<jule::Ptr<_1b2d7dc21_Data>> _14127_right = _1b2ca2a79_getDatasFromTupleData(&(_14077_rd));;
	if ((_14127_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14127_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1b68d054e:;
				{
					jule::Ptr<_1b2bd0e80_IndexingExprModel> _14169_iem = (*(_14127_right[0LL]))._field_Model.unsafe_cast_ptr<_1b2bd0e80_IndexingExprModel>();;
					if ((_1b2db586d_Map((*((*(_14169_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_14117_strict=true;
						_14127_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d7dc21_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=(*(_1b2db586d_Map((*((*(_14169_iem))._field_Expr))._field_Kind)))._field_Val, ._field_Mutable=(*(_14127_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)}); (*it++) = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1b68d0494:;
		};
	};
	{
		
		if (((*((*(_140238_a))))._field_Left.len() > _14127_right.len())) {
			_case_begin_1b68d32bb:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_140238_a))))._field_Left.len() < _14127_right.len())) {
			_case_begin_1b68d3343:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b68d05e8:;
	};
	jule::Ptr<_1b2ca8585_MultiAssign> _14367_st = jule::new_ptr<_1b2ca8585_MultiAssign>(_1b2ca8585_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1b2d7dc21_Data>>(nullptr), ._field_Right=(*(_14077_rd))._field_Model});;
	{
		auto expr = &((*((*(_140238_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b68d80a1:;
		if (it != expr_end) {
			jule::I64 _14397_i = it - expr->begin();
			{
				jule::Ptr<_1b2aeb807_AssignLeft> _14408_lexpr = (*((*(_140238_a))))._field_Left[_14397_i];;
				jule::Ptr<_1b2d7dc21_Data> _144112_l = nullptr;;
				if ((!(_1b2aca8a2_IsIgnoreIdent((*(_14408_lexpr))._field_Ident)))) {
					if ((!((*((*(_140238_a))))._field_Declarative))) {
						goto _julec_label_1b68d9844;
					};
					if (((*_14408_lexpr.alloc)._field_Mutable && (*_14408_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1b68dc649;
					};
					{
						auto &_match_expr{ (*((*(_14408_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type41) {
							_case_begin_1b68daa54:;
							{
								if (_1b2cb76a4_isNewAssignIdent(_self_, (*_14408_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1b68dc649;
								};
							}
						}
						_match_end_1b68da9cc:;
					};
					_julec_label_1b68d9844:;
					_144112_l=_1b2d9e7ad_evalExpr(_1b2d0cd6a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)), (*_14408_lexpr.alloc)._field_Expr);
					if ((_144112_l == nullptr)) {
						goto _iter_next_1b68d80a1;
					};
					_julec_label_1b68dc649:;
				};
				jule::Ptr<_1b2d7dc21_Data> _14628_r = _14127_right[_14397_i];;
				_1b2cb795c_removeInteriorMutRisk(_self_, &(_14628_r));
				_1b2cb8809_processEndPartOfMultiAssign(_self_, &(_14367_st), _140238_a, &(_14408_lexpr), &(_144112_l), &(_14628_r), _14117_strict);
			}
			_iter_next_1b68d80a1:;
			++it;
			_14397_i++;
			goto _iter_begin_1b68d80a1;
		}
		_iter_end_1b68d80a1:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14367_st, &__jule_any_type43); __jule_collection; }));
}



inline void _1b2cb8d6a_checkAssignSt(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aebd8a_AssignSt> _146934_a) {
	{
		
		if (_1b2accd16_IsPostfixOp((*((*(_146934_a))._field_Setter))._field_Id)) {
			_case_begin_1b68de4e7:;
			{
				_1b2cb7363_checkPostfix(_self_, _146934_a);
			}
		}
		else if (((*(_146934_a))._field_Left.len() == 1LL)) {
			_case_begin_1b68de195:;
			{
				_1b2cb81bb_checkSingleAssign(_self_, &(_146934_a));
			}
		}
		else {
			_case_begin_1b68de12e:;
			{
				_1b2cb8ab2_checkMultiAssign(_self_, &(_146934_a));
			}
		}
		_match_end_1b68de041:;
	};
}



inline jule::Ptr<_1b2ca4592_Scope> _1b2cb9266_checkCaseScope(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ca97ea_Case>* _148032_c, jule::Ptr<_1b2aed40d_ScopeTree>* _148047_tree) {
	jule::Ptr<_1b2cab830_scopeChecker> _14817_ssc = _1b2cbdc3d_newChildChecker(_self_);;
	(*(_14817_ssc))._field_cse=static_cast<jule::Uintptr>((*(_148032_c)));
	return _1b2cb2803_checkChildSc(_self_, _148047_tree, &(_14817_ssc));;
}



inline jule::Ptr<_1b2ca97ea_Case> _1b2cb97c7_checkCase(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ca8cc2_Match> _148630_m, jule::I64 _148641_i, jule::Ptr<_1b2b053b0_Case> _148653_c, jule::Ptr<_1b2d7dc21_Data> _148672_expr) {
	jule::Ptr<_1b2ca97ea_Case> _14877_case = (*(_148630_m))._field_Cases[_148641_i];;
	(*(_14877_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d7dc21_Data>>::alloc(0LL, (*(_148653_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2d7dc21_Data>(nullptr); __jule_collection; });
	jule::Bool _14897_constMatched = false;;
	jule::Ptr<_1b2d80948_eval> _14907_eval = _1b2d0cd6a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));;
	{
		auto expr = &((*_148653_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b68e4c8e:;
		if (it != expr_end) {
			jule::Ptr<_1b2ae2721_Expr> _149115_e = *it;
			{
				jule::Ptr<_1b2d7dc21_Data> _14928_d = _1b2d9d999_evalExprKind(_14907_eval, (*(_149115_e))._field_Kind);;
				if ((_14928_d == nullptr)) {
					goto _iter_next_1b68e4c8e;
				};
				if ((*_148630_m.alloc)._field_TypeMatch) {
					(*_14877_case.alloc)._field_Exprs=jule::append((*_14877_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d7dc21_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14928_d; __jule_collection; }));
					if ((_1b2cbebb7_countMatchType(&(_148630_m), &((*(_14928_d))._field_Kind)) > 1LL)) {
						_1b2d05e95_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_14928_d))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
					};
					if ((*_148630_m.alloc)._field_Comptime) {
						_14897_constMatched=(_14897_constMatched || _1b2db1d64_Equal((*(_148672_expr))._field_Kind, (*(_14928_d))._field_Kind));
					} else {
						if ((_1b2db4817_TypeEnum((*(_148672_expr))._field_Kind) != nullptr)) {
							_1b2d0dde3_checkTypeCompatibility((*(_self_))._field_s, &((*(_148672_expr))._field_Kind), &((*(_14928_d))._field_Kind), &((*_149115_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1b2be61c6_Trait> _15117_trt = _1b2db55d7_Trait((*(_148672_expr))._field_Kind);;
							if ((_15117_trt != nullptr)) {
								_1b2d0dde3_checkTypeCompatibility((*(_self_))._field_s, &((*(_148672_expr))._field_Kind), &((*(_14928_d))._field_Kind), &((*_149115_e.alloc)._field_Token));
							};
						};
					};
					_1b2daa2e1_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_14928_d))._field_Kind), &((*((*_148630_m.alloc)._field_Expr))._field_Kind), &((*_149115_e.alloc)._field_Token), _1b2cb0229_getOwnerRefers(_self_));
					goto _iter_next_1b68e4c8e;
				};
				if ((*(_14928_d))._field_Decl) {
					_1b2d05e95_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1b68e4c8e;
				};
				if ((*_148630_m.alloc)._field_Comptime) {
					if (((!(_1b2d7e65b_IsConst(_14928_d.ptr()))) && (_1b2db7694_comptimeTypeInfo((*(_14928_d))._field_Kind) == nullptr))) {
						_1b2d05e95_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1b68e4c8e;
					};
					if ((!(_14897_constMatched))) {
						if (_1b2d7e65b_IsConst(_14928_d.ptr())) {
							_14897_constMatched=(_1b2d7e65b_IsConst(_148672_expr.ptr()) && _1b2bc786c_Eq((*(_14928_d))._field_Constant.ptr(), (*((*(_148672_expr))._field_Constant))));
						} else {
							jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _15377_exprCti = _1b2db7694_comptimeTypeInfo((*(_148672_expr))._field_Kind);;
							_14897_constMatched=((_15377_exprCti != nullptr) && _1b2db1d64_Equal((*(_1b2db7694_comptimeTypeInfo((*(_14928_d))._field_Kind)))._field_base, (*_15377_exprCti.alloc)._field_base));
						};
					};
				};
				(*_14877_case.alloc)._field_Exprs=jule::append((*_14877_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d7dc21_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14928_d; __jule_collection; }));
				if ((((!((*_148630_m.alloc)._field_Comptime)) || (_1b2db7694_comptimeTypeInfo((*(_148672_expr))._field_Kind) == nullptr)) || (_1b2db7694_comptimeTypeInfo((*(_14928_d))._field_Kind) == nullptr))) {
					_1b2d6c0c7_assignTypeChecker _15479_checker = _1b2d6c0c7_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_148672_expr))._field_Kind, ._field_d=_14928_d, ._field_errorToken=(*_149115_e.alloc)._field_Token, ._field_refers=_1b2cb0229_getOwnerRefers(_self_)};;
					_1b2d6d0c8_check(&_15479_checker);
				};
			}
			_iter_next_1b68e4c8e:;
			++it;
			goto _iter_begin_1b68e4c8e;
		}
		_iter_end_1b68e4c8e:;
	};
	if (((!((*_148630_m.alloc)._field_Comptime)) || _14897_constMatched)) {
		(*_14877_case.alloc)._field_Scope=_1b2cb9266_checkCaseScope(_self_, &(_14877_case), &((*_148653_c.alloc)._field_Scope));
	};
	return _14877_case;;
}



inline void _1b2cb9be5_checkCases(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b05bc9_MatchCase>* _156332_m, jule::Ptr<_1b2ca8cc2_Match> _156356_rm, jule::Ptr<_1b2d7dc21_Data> _156372_expr) {
	(*(_156356_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ca97ea_Case>>::alloc(0LL, (*((*(_156332_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2ca97ea_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_156332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6908ab6:;
		if (it != expr_end) {
			jule::I64 _15657_i = it - expr->begin();
			{
				jule::Ptr<_1b2ca97ea_Case> _15668_case = jule::new_ptr<_1b2ca97ea_Case>(_1b2ca97ea_Case{._field_Owner=_156356_rm, ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1b2d7dc21_Data>>(nullptr), ._field_Next=jule::Ptr<_1b2ca97ea_Case>(nullptr)});;
				if ((_15657_i > 0LL)) {
					(*((*_156356_rm.alloc)._field_Cases[(_15657_i - 1LL)]))._field_Next=_15668_case;
				};
				(*_156356_rm.alloc)._field_Cases=jule::append((*_156356_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ca97ea_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15668_case; __jule_collection; }));
			}
			_iter_next_1b6908ab6:;
			++it;
			_15657_i++;
			goto _iter_begin_1b6908ab6;
		}
		_iter_end_1b6908ab6:;
	};
	if ((((*_156356_rm.alloc)._field_Default != nullptr) && ((*((*(_156332_m))))._field_Cases.len() > 0LL))) {
		(*((*_156356_rm.alloc)._field_Cases[((*_156356_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_156356_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_156332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b690c108:;
		if (it != expr_end) {
			jule::I64 _15798_i = it - expr->begin();
			jule::Ptr<_1b2b053b0_Case> _157915_c = *it;
			{
				_1b2cb97c7_checkCase(_self_, _156356_rm, _15798_i, _157915_c, _156372_expr);
			}
			_iter_next_1b690c108:;
			++it;
			_15798_i++;
			goto _iter_begin_1b690c108;
		}
		_iter_end_1b690c108:;
	};
}



inline jule::Ptr<_1b2ca97ea_Case> _1b2cba0e1_checkDefault(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ca8cc2_Match> _158433_m, jule::Ptr<_1b2b04216_Else> _158448_d) {
	jule::Ptr<_1b2ca97ea_Case> _15857_def = jule::new_ptr<_1b2ca97ea_Case>(_1b2ca97ea_Case{._field_Owner=_158433_m, ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1b2d7dc21_Data>>(nullptr), ._field_Next=jule::Ptr<_1b2ca97ea_Case>(nullptr)});;
	(*(_15857_def))._field_Scope=_1b2cb9266_checkCaseScope(_self_, &(_15857_def), &((*(_158448_d))._field_Scope));
	return _15857_def;;
}



inline void _1b2cba454_checkComptimePanic(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ac7eba_Token> _159239_callToken, jule::Ptr<_1b2ca4592_Scope>* _159266_s) {
	if (((*((*(_159266_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _15963_stmt = (*((*(_159266_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _15963_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b6910804:;
			{
				jule::Ptr<_1b2d7dc21_Data> _15994_d = _15963_stmt.unsafe_cast_ptr<_1b2d7dc21_Data>();;
				{
					auto &_match_expr{ (*(_15994_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type26) {
						_case_begin_1b69117d3:;
						{
							jule::Ptr<_1b2bd4c64_BuiltinPanicCallExprModel> _16029_m = (*(_15994_d))._field_Model.unsafe_cast_ptr<_1b2bd4c64_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16029_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_1b691299e:;
									{
										jule::Ptr<_1b2b6c23a_Const> _16056_c = (*(_16029_m))._field_Expr.unsafe_cast_ptr<_1b2b6c23a_Const>();;
										if ((!(_1b2bc653b_IsStr(_16056_c.ptr())))) {
											goto _match_end_1b6912927;
										};
										if ((_159239_callToken == nullptr)) {
											jule::Ptr<_1b2cab830_scopeChecker> _161011_root = _1b2caee93_getHardRoot(_self_);;
											if (((*(_161011_root))._field_calledFrom == nullptr)) {
												_159239_callToken=(*(_16029_m))._field_Token;
											} else {
												_159239_callToken=(*(_161011_root))._field_calledFrom;
											};
										};
										_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), _159239_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2bc3e40_ReadStr(_16056_c), &__jule_any_type5); __jule_collection; }));
										_1b2cae1a1_stop(_self_);
									}
								}
								_match_end_1b6912927:;
							};
						}
					}
					_match_end_1b691176c:;
				};
			}
		}
		_match_end_1b690ed42:;
	};
}



inline void _1b2cba7b7_processConstMatch(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ca8cc2_Match>* _162439_tm, jule::Ptr<_1b2b05bc9_MatchCase>* _162456_m) {
	{
		auto expr = &((*((*(_162439_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6912e00:;
		if (it != expr_end) {
			jule::I64 _16258_i = it - expr->begin();
			jule::Ptr<_1b2ca97ea_Case> _162515_c = *it;
			{
				if (((*(_162515_c))._field_Scope != nullptr)) {
					jule::Ptr<_1b2ac7eba_Token> _162713_token = nullptr;;
					if (((!((*((*(_162439_tm))))._field_TypeMatch)) && ((*(*(_162515_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_162713_token=(*((*((*((*(_162456_m))))._field_Cases[_16258_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1b2cba454_checkComptimePanic(_self_, _162713_token, &((*_162515_c.alloc)._field_Scope));
					(*((*(_162439_tm))))._field_Default=_162515_c;
					(*((*(_162439_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1b6912e00:;
			++it;
			_16258_i++;
			goto _iter_begin_1b6912e00;
		}
		_iter_end_1b6912e00:;
	};
	if (((*((*(_162456_m))))._field_Default != nullptr)) {
		(*((*(_162439_tm))))._field_Cases=nullptr;
		(*((*(_162439_tm))))._field_Default=_1b2cba0e1_checkDefault(_self_, (*(_162439_tm)), (*((*(_162456_m))))._field_Default);
		if (((*((*(_162439_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1b2ac7eba_Token> _164113_token = nullptr;;
			if ((!((*((*(_162439_tm))))._field_TypeMatch))) {
				_164113_token=(*((*((*((*(_162456_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1b2cba454_checkComptimePanic(_self_, _164113_token, &((*(*((*(_162439_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_162439_tm))))._field_Cases=nullptr;
	};
}



inline void _1b2cbaa70_checkTypeMatch(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b05bc9_MatchCase>* _165336_m) {
	jule::Ptr<_1b2d7dc21_Data> _16547_d = _1b2d9dcda_eval1(_1b2d0cd6a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)), (*((*(_165336_m))))._field_Expr);;
	if ((_16547_d == nullptr)) {
		return;;
	};
	if ((*((*(_165336_m))))._field_Comptime) {
		jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _16608_cti = _1b2db7694_comptimeTypeInfo((*(_16547_d))._field_Kind.ptr());;
		if ((_16608_cti == nullptr)) {
			if ((!((*(_16547_d))._field_Decl))) {
				_1b2d05e95_pushErr((*(_self_))._field_s, (*((*((*(_165336_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_16547_d))._field_Kind=(*(_16608_cti))._field_base;
		};
	} else if (((*(_16547_d))._field_Decl || (!(((((_1b2db3ccd_Prim((*(_16547_d))._field_Kind.ptr()) != nullptr) && _1b2dbce91_IsAny(_1b2db3ccd_Prim((*(_16547_d))._field_Kind).ptr())) || (_1b2db55d7_Trait((*(_16547_d))._field_Kind) != nullptr)) || (_1b2db4817_TypeEnum((*(_16547_d))._field_Kind) != nullptr)))))) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*((*((*(_165336_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2ca8cc2_Match> _16747_tm = jule::new_ptr<_1b2ca8cc2_Match>(_1b2ca8cc2_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16547_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_165336_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1b2ca97ea_Case>>(nullptr), ._field_Default=jule::Ptr<_1b2ca97ea_Case>(nullptr)});;
	if (((!((*(_16747_tm))._field_Comptime)) && ((*((*(_165336_m))))._field_Default != nullptr))) {
		(*_16747_tm.alloc)._field_Default=_1b2cba0e1_checkDefault(_self_, _16747_tm, (*((*(_165336_m))))._field_Default);
	};
	_1b2cb9be5_checkCases(_self_, _165336_m, _16747_tm, _16547_d);
	if ((*_16747_tm.alloc)._field_Comptime) {
		_1b2cba7b7_processConstMatch(_self_, &(_16747_tm), _165336_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16747_tm, &__jule_any_type44); __jule_collection; }));
}



inline void _1b2cbad28_checkCommonMatch(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b05bc9_MatchCase>* _169638_m) {
	jule::Ptr<_1b2d7dc21_Data> _169711_d = nullptr;;
	if (((*((*(_169638_m))))._field_Expr == nullptr)) {
		_169711_d=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1b2bc278a_NewBool(true)});
		(*(_169711_d))._field_Model=jule::Any((*_169711_d.alloc)._field_Constant, &__jule_any_type15);
	} else {
		_169711_d=_1b2d9e46c_evalExpr1(_1b2d0cd6a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)), (*((*(_169638_m))))._field_Expr);
		if ((_169711_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_169638_m))))._field_Comptime) {
		if ((!(_1b2cbe579_canComptimeMatch(&(_169711_d))))) {
			_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169638_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1b2db5d8a_comptime((*(_169711_d))._field_Kind.ptr())) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169638_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2ca8cc2_Match> _17237_mc = jule::new_ptr<_1b2ca8cc2_Match>(_1b2ca8cc2_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_169711_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_169638_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1b2ca97ea_Case>>(nullptr), ._field_Default=jule::Ptr<_1b2ca97ea_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17237_mc, &__jule_any_type44); __jule_collection; }));
	if (((!((*(_17237_mc))._field_Comptime)) && ((*((*(_169638_m))))._field_Default != nullptr))) {
		(*_17237_mc.alloc)._field_Default=_1b2cba0e1_checkDefault(_self_, _17237_mc, (*((*(_169638_m))))._field_Default);
	};
	_1b2cb9be5_checkCases(_self_, _169638_m, _17237_mc, _169711_d);
	if ((*_17237_mc.alloc)._field_Comptime) {
		_1b2cba7b7_processConstMatch(_self_, &(_17237_mc), _169638_m);
	};
}



inline void _1b2cbb0d1_checkMatch(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b05bc9_MatchCase> _174731_m) {
	if ((*(_174731_m))._field_TypeMatch) {
		_1b2cbaa70_checkTypeMatch(_self_, &(_174731_m));
		return;;
	};
	_1b2cbad28_checkCommonMatch(_self_, &(_174731_m));
}



inline void _1b2cbb389_checkFall(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aeb197_FallSt> _175526_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1b2cae6bd_isDeferred(_self_))) {
		_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*(_175526_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1b2ca97ea_Case* _17637_case = ((_1b2ca97ea_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_17637_case))._field_Owner))._field_Comptime) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*_175526_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17637_case))._field_Next == nullptr)) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*_175526_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1b2ca9ee3_FallSt>(_1b2ca9ee3_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17637_case))._field_Next)}), &__jule_any_type45); __jule_collection; }));
}



inline jule::Ptr<_1b2ca6b38_BreakSt> _1b2cbb6ca_checkBreakWithLabel(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b034ac_BreakSt> _177836_b) {
	jule::Ptr<_1b2ca6b38_BreakSt> _17797_brk = _1b2cbba1b_checkPlainBreak(_self_, _177836_b);;
	if ((_17797_brk == nullptr)) {
		return nullptr;;
	};
	(*(_17797_brk))._field_It=0LLU;
	(*(_17797_brk))._field_Mtch=0LLU;
	jule::Ptr<_1b2caa840_scopeLabel> _17897_label = _1b2ca2738_findLabelParent(&((*((*(_177836_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_17897_label == nullptr)) {
		_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*(_17897_label))._field_used=true;
	if ((((*((*(_17897_label))._field_node))._field_Index + 1LL) >= (*((*(*(_17897_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _18023_i = ((*(*(_17897_label))._field_node.alloc)._field_Index + 1LL);;
	if ((_18023_i >= (*(*((*(_17897_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	} else {
		jule::Any _18068_st = (*(*((*(_17897_label))._field_node))._field_Scope.alloc)._field_Stmts[_18023_i];;
		{
			auto &_match_expr{ _18068_st };
			
			if (_match_expr.type == &__jule_any_type32) {
				_case_begin_1b694a278:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1b2ca54c7_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1b6948de2:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1b2ca63c9_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type34) {
				_case_begin_1b69490ce:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1b2ca597d_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1b6949145:;
				{
					(*(_17797_brk))._field_Mtch=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1b2ca8cc2_Match>());
				}
			}
			else {
				_case_begin_1b6949068:;
				{
					_1b2d05e95_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				}
			}
			_match_end_1b6949002:;
		};
	};
	if (((*(_17797_brk))._field_It != 0LLU)) {
		if ((!(_1b2cb6450_checkValidBreakLabel(_self_, (*(_17797_brk))._field_It)))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	if (((*(_17797_brk))._field_Mtch != 0LLU)) {
		if ((!(_1b2cb6450_checkValidBreakLabel(_self_, (*(_17797_brk))._field_Mtch)))) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return _17797_brk;;
}



inline jule::Ptr<_1b2ca6b38_BreakSt> _1b2cbba1b_checkPlainBreak(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b034ac_BreakSt> _183632_b) {
	if (_1b2cae6bd_isDeferred(_self_)) {
		_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183632_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2cab830_scopeChecker> _18427_scope = _self_;;
	_julec_label_1b6951845:;
	{
		
		if ((((((*_18427_scope.alloc)._field_it == 0LLU) && ((*_18427_scope.alloc)._field_cse == 0LLU)) && ((*_18427_scope.alloc)._field_parent != nullptr)) && ((*_18427_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1b6952a22:;
			{
				_18427_scope=(*_18427_scope.alloc)._field_parent;
				goto _julec_label_1b6951845;
			}
		}
		else if (((*_18427_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1b6952aaa:;
			{
				return jule::new_ptr<_1b2ca6b38_BreakSt>(_1b2ca6b38_BreakSt{._field_It=(*_18427_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18427_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1b6952b21:;
			{
				return jule::new_ptr<_1b2ca6b38_BreakSt>(_1b2ca6b38_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1b2ca97ea_Case*)((*_18427_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1b6952923:;
	};
	_1b2d05e95_pushErr((*(_self_))._field_s, (*_183632_b.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1b2cbbcc4_checkBreak(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b034ac_BreakSt> _185827_b) {
	if (((*(_185827_b))._field_Label != nullptr)) {
		jule::Ptr<_1b2ca6b38_BreakSt> _18608_brk = _1b2cbb6ca_checkBreakWithLabel(_self_, _185827_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18608_brk, &__jule_any_type46); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1b2ca6b38_BreakSt> _18657_brk = _1b2cbba1b_checkPlainBreak(_self_, _185827_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18657_brk, &__jule_any_type46); __jule_collection; }));
}



inline void _1b2cbc07c_checkRet(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2b01631_RetSt> _186929_r) {
	if (_1b2cae6bd_isDeferred(_self_)) {
		_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*(_186929_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b2caa389_RetSt> _18747_rt = jule::new_ptr<_1b2caa389_RetSt>(_1b2caa389_RetSt{._field_Func=(*(_1b2caec0c_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18747_rt, &__jule_any_type47); __jule_collection; }));
	jule::Ptr<_1b2d7ac84_retTypeChecker> _18797_rtc = jule::new_ptr<_1b2d7ac84_retTypeChecker>(_1b2d7ac84_retTypeChecker{._field_sc=_self_, ._field_f=(*(_18747_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1b2ae2721_Expr>>(nullptr), ._field_errorToken=(*_186929_r.alloc)._field_Token, ._field_model=jule::Any(nullptr)});;
	jule::Bool _18843_ok = _1b2d7bc74_check(_18797_rtc.ptr(), &((*_186929_r.alloc)._field_Expr));;
	if ((!(_18843_ok))) {
		return;;
	};
	if (((*_186929_r.alloc)._field_Expr != nullptr)) {
		(*_18747_rt.alloc)._field_Expr=(*_18797_rtc.alloc)._field_model;
	};
}



inline void _1b2cbc335_checkUseExpr(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2ae30e5_UseExpr> _189429_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189429_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1b2cae6bd_isDeferred(_self_)) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*_189429_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*_189429_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1b2cbc5dd_checkNode(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Any* _191031_node) {
	{
		auto &_match_expr{ (*(_191031_node)) };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b696820d:;
			{
				_1b2cb2dec_checkAnonScope(_self_, (*(_191031_node)).cast_ptr<_1b2aed40d_ScopeTree>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b6968571:;
			{
				_1b2cb16e2_checkVarDecl(_self_, (*(_191031_node)).cast_ptr<_1b2b01257_VarDecl>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b69685d7:;
			{
				_1b2cb1c53_checkTypeAliasDecl(_self_, (*(_191031_node)).cast_ptr<_1b2b04e09_TypeAliasDecl>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b696864d:;
			{
				_1b2cb3518_checkExpr(_self_, (*(_191031_node)).cast_ptr<_1b2ae2721_Expr>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b696898e:;
			{
				_1b2cb3e53_checkConditional(_self_, (*(_191031_node)).cast_ptr<_1b2b046bc_Conditional>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b6968a05:;
			{
				_1b2cb5cbd_checkIter(_self_, (*(_191031_node)).cast_ptr<_1b2b01da1_Iter>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1b6968a6b:;
			{
				_1b2cb6a49_checkCont(_self_, (*(_191031_node)).cast_ptr<_1b2b03886_ContSt>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1b6968ad2:;
			{
				_1b2cb6d02_checkLabel(_self_, (*(_191031_node)).cast_ptr<_1b2aea9c1_LabelSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1b6968b48:;
			{
				_1b2cb70aa_pushGoto(_self_, (*(_191031_node)).cast_ptr<_1b2aead9a_GotoSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b6968bae:;
			{
				_1b2cb8d6a_checkAssignSt(_self_, (*(_191031_node)).cast_ptr<_1b2aebd8a_AssignSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1b6968c36:;
			{
				_1b2cbb0d1_checkMatch(_self_, (*(_191031_node)).cast_ptr<_1b2b05bc9_MatchCase>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b6968cad:;
			{
				_1b2cbb389_checkFall(_self_, (*(_191031_node)).cast_ptr<_1b2aeb197_FallSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1b6968d35:;
			{
				_1b2cbbcc4_checkBreak(_self_, (*(_191031_node)).cast_ptr<_1b2b034ac_BreakSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1b6968dac:;
			{
				_1b2cbc07c_checkRet(_self_, (*(_191031_node)).cast_ptr<_1b2b01631_RetSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b6968e34:;
			{
				_1b2cbc335_checkUseExpr(_self_, (*(_191031_node)).cast_ptr<_1b2ae30e5_UseExpr>(&__jule_any_type62));
			}
		}
		else {
			_case_begin_1b69683d9:;
			{
				jule::outln(_1b4bdc396_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1b6968373:;
	};
}



inline void _1b2cbc7db_checkResult(jule::Ptr<_1b2cab830_scopeChecker> _self_) {
	_1b2aecc9d_Stmt _19487_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19487_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b6995306:;
			{
				jule::Ptr<_1b2ae30e5_UseExpr> _19518_ue = _19487_stmt._field_Data.unsafe_cast_ptr<_1b2ae30e5_UseExpr>();;
				jule::Ptr<_1b2d7dc21_Data> _19528_d = _1b2d9e7ad_evalExpr(_1b2d0cd6a_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)), (*(_19518_ue))._field_Expr);;
				if ((_19528_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19528_d, &__jule_any_type21); __jule_collection; }));
				jule::Ptr<_1b2d7ac84_retTypeChecker> _19578_rtc = jule::new_ptr<_1b2d7ac84_retTypeChecker>(_1b2d7ac84_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_types=_1b2bdeca2_Types((*_self_.alloc)._field_result.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1b2ae2721_Expr>>(nullptr), ._field_errorToken=(*((*_19518_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr)});;
				_1b2d7bc74_check(_19578_rtc.ptr(), &((*_19518_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b6997627:;
			{
				jule::Ptr<_1b2ae2721_Expr> _19648_expr = _19487_stmt._field_Data.unsafe_cast_ptr<_1b2ae2721_Expr>();;
				jule::Ptr<_1b2d7dc21_Data> _19658_d = _1b2d9e7ad_evalExpr(_1b2d0cd6a_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)), _19648_expr);;
				if ((_19658_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19658_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1b699d199:;
						{
							jule::Ptr<_1b2bd686a_BuiltinErrorCallExprModel> _19719_m = (*(_19658_d))._field_Model.unsafe_cast_ptr<_1b2bd686a_BuiltinErrorCallExprModel>();;
							_1b2cb3260_processErrorCall(_self_, &(_19719_m), (*(_19648_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19658_d, &__jule_any_type21); __jule_collection; }));
						}
					}
					else {
						_case_begin_1b699d375:;
						{
							return;;
						}
					}
					_match_end_1b699d30e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type54 || _match_expr.type == &__jule_any_type61) {
			_case_begin_1b6996c42:;
			{
				_1b2cbc5dd_checkNode(_self_, &(_19487_stmt._field_Data));
			}
		}
		else {
			_case_begin_1b6996bcb:;
			{
				_1b2cbc5dd_checkNode(_self_, &(_19487_stmt._field_Data));
				return;;
			}
		}
		_match_end_1b6996b65:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1b2cbc9d9_checkTree(jule::Ptr<_1b2cab830_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _19937_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_19937_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _19937_n); ((*_self_.alloc)._field_i)++) {
		{
			_1b2aecc9d_Stmt _20018_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1b2cbc5dd_checkNode(_self_, &(_20018_stmt._field_Data));
			if (_1b2cae437_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1b69a1ee4:;
	}
	_iter_end_1b69a1ee4:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1b2cbc7db_checkResult(_self_);
	};
}



inline void _1b2cbcd4c_checkGoto(_1b2cab830_scopeChecker* _self_, jule::Ptr<_1b2ca774e_GotoSt>* _201230_gt, jule::Ptr<_1b2caa840_scopeLabel>* _201248_label) {
	jule::I64 _20137_n = 0LL;;
	if (((*((*(_201230_gt))))._field_Scope == (*((*((*(_201248_label))))._field_node))._field_Scope)) {
		if (((*((*(_201230_gt))))._field_Index > (*(*((*(_201248_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20137_n=(*((*(_201230_gt))))._field_Index;
	} else if (((*((*((*(_201230_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_201248_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1b2ca4592_Scope> _20268_gtsc = (*((*(_201230_gt))))._field_Scope;;
		while ((((*_20268_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_201248_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20268_gtsc=(*_20268_gtsc.alloc)._field_Parent;
			}
		_iter_next_1b69a744a:;
		}
		_iter_end_1b69a744a:;;
		if (((*_20268_gtsc.alloc)._field_StmtIndex > (*(*((*(_201248_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20137_n=(*_20268_gtsc.alloc)._field_StmtIndex;
	} else {
		_20137_n=0LL;
	};
	jule::Ptr<_1b2ca4592_Scope> _20487_s = (*((*((*(_201248_label))))._field_node))._field_Scope;;
	jule::I64 _20497_i = ((*(*((*(_201248_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20497_i >= _20137_n); (_20497_i)--) {
				{
					jule::Any _20529_stmt = (*(_20487_s))._field_Stmts[_20497_i];;
					if (_1b2cbe843_stmtIsDef(&(_20529_stmt))) {
						_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_201230_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_201230_gt))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1b69aae54:;
			}
			_iter_end_1b69aae54:;;
			if (((*_20487_s.alloc)._field_ChildIndex > (*((*((*(_201230_gt))))._field_Scope))._field_ChildIndex)) {
				_20487_s=(*_20487_s.alloc)._field_Parent;
				_20497_i=((*_20487_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1b69aaad0;
			};
			goto _iter_end_1b69aaad0;
		}
	_iter_next_1b69aaad0:;
	}
	_iter_end_1b69aaad0:;;
}



inline void _1b2cbd04a_checkGotos(_1b2cab830_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b69adb16:;
		if (it != expr_end) {
			jule::Ptr<_1b2ca774e_GotoSt> _207015_gt = *it;
			{
				jule::Ptr<_1b2caa840_scopeLabel> _20718_label = _1b2cb103d_findLabelAll(_self_, &((*(_207015_gt))._field_Ident));;
				if ((_20718_label == nullptr)) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*_207015_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_207015_gt.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					goto _iter_next_1b69adb16;
				};
				(*_207015_gt.alloc)._field_Label=(*(_20718_label))._field_node;
				(*(_20718_label))._field_used=true;
				_1b2cbcd4c_checkGoto(_self_, &(_207015_gt), &(_20718_label));
			}
			_iter_next_1b69adb16:;
			++it;
			goto _iter_begin_1b69adb16;
		}
		_iter_end_1b69adb16:;
	};
}



inline void _1b2cbd248_checkLabels(_1b2cab830_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b69b16eb:;
		if (it != expr_end) {
			jule::Ptr<_1b2caa840_scopeLabel> _208310_l = *it;
			{
				if ((!((*(_208310_l))._field_used))) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*_208310_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_208310_l.alloc)._field_node))._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1b69b16eb:;
			++it;
			goto _iter_begin_1b69b16eb;
		}
		_iter_end_1b69b16eb:;
	};
}



inline void _1b2cbd446_checkVars(_1b2cab830_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b69b349a:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _209110_v = *it;
			{
				if (((((!((*(_209110_v))._field_Used)) && (!((*_209110_v.alloc)._field_Constant))) && (!(_1b2aca8a2_IsIgnoreIdent((*_209110_v.alloc)._field_Ident)))) && (!(_1b2acab6b_IsAnonIdent((*_209110_v.alloc)._field_Ident))))) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*_209110_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209110_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1b69b349a:;
			++it;
			goto _iter_begin_1b69b349a;
		}
		_iter_end_1b69b349a:;
	};
}



inline void _1b2cbd644_checkAliases(_1b2cab830_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b69b5ca5:;
		if (it != expr_end) {
			jule::Ptr<_1b2db0835_TypeAlias> _209910_a = *it;
			{
				if ((((!((*(_209910_a))._field_Used)) && (!(_1b2aca8a2_IsIgnoreIdent((*_209910_a.alloc)._field_Ident)))) && (!(_1b2acab6b_IsAnonIdent((*_209910_a.alloc)._field_Ident))))) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*_209910_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209910_a.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1b69b5ca5:;
			++it;
			goto _iter_begin_1b69b5ca5;
		}
		_iter_end_1b69b5ca5:;
	};
}



inline void _1b2cbd9a7_check(jule::Ptr<_1b2cab830_scopeChecker> _self_, jule::Ptr<_1b2aed40d_ScopeTree>* _210727_tree, jule::Ptr<_1b2ca4592_Scope>* _210755_s) {
	(*((*(_210755_s))))._field_Deferred=(*((*(_210727_tree))))._field_Deferred;
	(*((*(_210755_s))))._field_Unsafety=(*((*(_210727_tree))))._field_Unsafety;
	jule::I64 _21113_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_210727_tree));
	(*_self_.alloc)._field_scope=(*(_210755_s));
	_1b2cbc9d9_checkTree(_self_);
	if ((_21113_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1b2cbd446_checkVars(_self_);
		_1b2cbd644_checkAliases(_self_);
		if (_1b2cadea3_isRoot(_self_)) {
			_1b2cbd04a_checkGotos(_self_);
			_1b2cbd248_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1b2cab830_scopeChecker> _1b2cbdc3d_newChildChecker(jule::Ptr<_1b2cab830_scopeChecker> _self_) {
	jule::Ptr<_1b2cab830_scopeChecker> _21317_base = _1b2ca1eeb_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21317_base))._field_parent=_self_;
	(*_21317_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21317_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21317_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21317_base;;
}








inline jule::Bool _1b2cc06bd_directiveChecker_eq(_1b2cc06bd_directiveChecker *_self_, _1b2cc06bd_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1b2cc0b0d_checkCdef(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b69c0023:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1b2bda9b2_Fn>()))._field_Binded) {
					goto _match_end_1b69bdd79;
				};
				goto _case_begin_1b69bdde0;
			}
		}
		else {
			_case_begin_1b69bdde0:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b69bdd79:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1b2cc0db6_checkTypedef(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b69c3224:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1b2b0db6b_Struct>()))._field_Binded) {
					goto _match_end_1b69c207a;
				};
				goto _case_begin_1b69c20e1;
			}
		}
		else {
			_case_begin_1b69c20e1:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b69c207a:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1b2cc116e_checkNamespace(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b69c6425:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1b2b0db6b_Struct>()))._field_Binded))) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b69c504a:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1b2bda9b2_Fn>()))._field_Binded))) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b69c5358:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1b2d26ca7_Var>()))._field_Binded))) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1b69c52e2:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b69c527b:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2ac7eba_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1b2d05e95_pushErr((*(_self_))._field_s, _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b69d1991:;
			{
				if ((_1b2da8223_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1b2adc809_Directive> _919_typedef = jule::new_ptr<_1b2adc809_Directive>(_1b2adc809_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1b2ac7eba_Token>>(nullptr)});;
					(*((*(_919_typedef))._field_Tag))._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2adc809_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1b69d192a:;
	};
}



inline void _1b2cc1427_checkDeprecated(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b69d519d:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1b2b0db6b_Struct>()))._field_Binded) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b69d3d6c:;
			{
				jule::Ptr<_1b2bda9b2_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1b2bda9b2_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1b2bdb485_IsEntryPoint(_1078_f)) || _1b2bdb71b_IsInit(_1078_f))) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b69d40d1:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1b2d26ca7_Var>()))._field_Binded) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1b69d406a:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b69d4004:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2ac7eba_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1b2d05e95_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1263_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1b2d05e95_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*_1263_arg.alloc)._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1b2cc16d0_checkTest(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b69e1d69:;
			{
				jule::Ptr<_1b2bda9b2_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1b2bda9b2_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1b2bdb71b_IsInit(_1444_f)))) && (!(_1b2bdb485_IsEntryPoint(_1444_f))))) {
					goto _match_end_1b69e0bc0;
				};
				if (_1b2bdb1ee_IsMethod(_1444_f)) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1b69e0bc0;
				};
				goto _case_begin_1b69e0c36;
			}
		}
		else {
			_case_begin_1b69e0c36:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b69e0bc0:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1b2cc1988_checkExport(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b69e6ab6:;
			{
				jule::Ptr<_1b2bda9b2_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1b2bda9b2_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1b2bdb71b_IsInit(_1654_f)) || _1b2bdb485_IsEntryPoint(_1654_f)) || _1b2bdb1ee_IsMethod(_1654_f)) || ((*_1654_f.alloc)._field_Generics.len() > 0LL))) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b69e56db:;
			{
				jule::Ptr<_1b2d26ca7_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1b2d26ca7_Var>();;
				if (((*(_1714_v))._field_Binded || (*_1714_v.alloc)._field_Constant)) {
					_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1b69e5983:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return;;
			}
		}
		_match_end_1b69e591c:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2ac7eba_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1b2d05e95_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1873_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1b2d05e95_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*_1873_arg.alloc)._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1b2cc1c41_checkDirective(_1b2cc06bd_directiveChecker* _self_, jule::Ptr<_1b2adc809_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1b6a03bc2:;
			{
				_1b2cc0b0d_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1b6a02a6c:;
			{
				_1b2cc0db6_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1b6a02ad3:;
			{
				_1b2cc116e_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1b6a02b49:;
			{
				_1b2cc1427_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1b6a02bb0:;
			{
				_1b2cc16d0_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1b6a02c26:;
			{
				_1b2cc1988_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1b6a02c8c:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1b69ed073:;
			{
				_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b6a02990:;
	};
}



inline void _1b2cc1e3e_check(_1b2cc06bd_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a0690b:;
		if (it != expr_end) {
			jule::Ptr<_1b2adc809_Directive> _22315_d = *it;
			{
				_1b2cc1c41_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1b6a0690b:;
			++it;
			goto _iter_begin_1b6a0690b;
		}
		_iter_end_1b6a0690b:;
	};
}







inline jule::Ptr<_1b2cc3094_ReferenceStack> static__1b2cc3281_new(void) {
	return jule::new_ptr<_1b2cc3094_ReferenceStack>(_1b2cc3094_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I64 _1b2cc3616_Len(_1b2cc3094_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1b2cc3957_At(_1b2cc3094_ReferenceStack* _self_, jule::I64 _4218_i) {
	return (*(_self_))._field_buffer[_4218_i];;
}



inline void _1b2cc3c10_Push(_1b2cc3094_ReferenceStack* _self_, jule::Any _4724_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_4724_ref); };
}



inline jule::Bool _1b707321e_Exist(_1b2cc3094_ReferenceStack* _self_, jule::Ptr<_1b2bdda70_FnIns> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7074583:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type63) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1b7074583:;
			++it;
			goto _iter_begin_1b7074583;
		}
		_iter_end_1b7074583:;
	};
	return false;;
}

inline jule::Bool _1b708e9cc_Exist(_1b2cc3094_ReferenceStack* _self_, jule::Ptr<_1b2d26ca7_Var> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7090cec:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type7) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1b7090cec:;
			++it;
			goto _iter_begin_1b7090cec;
		}
		_iter_end_1b7090cec:;
	};
	return false;;
}

inline jule::Bool _1b717562e_Exist(_1b2cc3094_ReferenceStack* _self_, jule::Ptr<_1b2b119c6_StructIns> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7176993:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type64) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1b7176993:;
			++it;
			goto _iter_begin_1b7176993;
		}
		_iter_end_1b7176993:;
	};
	return false;;
}

inline jule::Bool _1b75137ad_Exist(_1b2cc3094_ReferenceStack* _self_, jule::Ptr<_1b2be61c6_Trait> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7514abc:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type11) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1b7514abc:;
			++it;
			goto _iter_begin_1b7514abc;
		}
		_iter_end_1b7514abc:;
	};
	return false;;
}








inline jule::Bool _1b2cc4408_Pass_eq(_1b2cc4408_Pass *_self_, _1b2cc4408_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1b2cc98b4_pushErr(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2ac7eba_Token>* _30624_token, jule::Str _30646_fmt, jule::Slice<jule::Any> _30666_args) {
	{ jule::Slice<_20daa5e91_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b2d00e7e_compilerErr(_30624_token, true, _30646_fmt, _30666_args)); };
}



inline void _1b2cca145_pushSuggestion(_1b2cc8dad_symBuilder* _self_, jule::Str _31530_fmt, jule::Slice<jule::Any> _31550_args) {
	{
		_1b2d020a1_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _31530_fmt, _31550_args);
	};
}



inline jule::Bool _1b2cca541_checkCppUseDeclPath(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2b0625c_UseDecl>* _31936_decl, jule::Str* _31958_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3203_ext = _227d34304_Ext((*(_31958_path)));;
	if (((!(_20da98b21_IsValidHeaderExt(_3203_ext))) && (!(_20da98dda_IsValidCppExt(_3203_ext))))) {
		_1b2cc98b4_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3203_ext, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20c64c85d_Status> _3273_info = ({
		auto except = static__20c649827_Of((*(_31958_path)));
		(except.ok()) ? (except.result) : ({{
			_1b2cc98b4_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_31936_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_20c64c85d_Status>(nullptr);});
	});;
	if (_20c64cc6a_IsDir(_3273_info.ptr())) {
		_1b2cc98b4_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_31936_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2cca84e_buildCppHeaderImport(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2b0625c_UseDecl>* _33941_decl) {
	jule::Str _3407_path = (*((*((*(_33941_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if ((!(_20da98846_IsStdHeaderPath(_3407_path)))) {
		_3407_path=_227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1b2ace323_Dir((*((*((*(_33941_decl))))._field_Token))._field_File.ptr()); (*it++) = _3407_path; __jule_collection; }));
		jule::Bool _3448_ok = _1b2cca541_checkCppUseDeclPath(_self_, _33941_decl, &(_3407_path));;
		if ((!(_3448_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _227d345bd_Abs(_3407_path);
			_3407_path = __jule_assign_result.__jule_result_arg0;
			_3448_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3448_ok))) {
			_1b2cc98b4_pushErr(_self_, &((*((*(_33941_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1b2cd4e1e_ImportInfo>(_1b2cd4e1e_ImportInfo{._field_Decl=(*(_33941_decl)), ._field_Path=_3407_path, ._field_LinkPath=(*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind, ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Str _1b2ccac4a_checkAbsPath(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Str _36933_filepath, jule::Ptr<_1b2b0625c_UseDecl>* _36953_decl) {
	jule::Str _3703_modPath = ((_1b2cd1e1b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1b2cd0e81_GetModPath((*(_self_))._field_importer.data);;
	if ((_3703_modPath.len() == 0LL)) {
		_1b2cc98b4_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1b2cca145_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	_36933_filepath=_227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _3703_modPath; (*it++) = _36933_filepath; __jule_collection; }));
	jule::Bool _37813_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _227d345bd_Abs(_36933_filepath);
		_36933_filepath = __jule_assign_result.__jule_result_arg0;
		_37813_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_37813_ok))) {
		_1b2cc98b4_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_36953_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	jule::Ptr<_20c64c85d_Status> _3853_info = ({
		auto except = static__20c649827_Of(_36933_filepath);
		(except.ok()) ? (except.result) : ({{
			_1b2cc98b4_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_36953_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} jule::Ptr<_20c64c85d_Status>(nullptr);});
	});;
	if ((!(_20c64cc6a_IsDir(_3853_info.ptr())))) {
		_1b2cc98b4_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_36953_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _36933_filepath;;
}



inline jule::Str _1b2ccb146_checkStdAbsPath(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Str _39836_filepath, jule::Ptr<_1b2b0625c_UseDecl>* _39856_decl) {
	(_39836_filepath).mut_slice(4LL);;
	_39836_filepath=_227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _20dbb9d85_PathStdlib; (*it++) = _39836_filepath; __jule_collection; }));
	jule::Bool _40113_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _227d345bd_Abs(_39836_filepath);
		_39836_filepath = __jule_assign_result.__jule_result_arg0;
		_40113_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_40113_ok))) {
		_1b2cc98b4_pushErr(_self_.ptr(), &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39856_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	jule::Ptr<_20c64c85d_Status> _4083_info = ({
		auto except = static__20c649827_Of(_39836_filepath);
		(except.ok()) ? (except.result) : ({{
			_1b2cc98b4_pushErr(_self_, &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39856_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} jule::Ptr<_20c64c85d_Status>(nullptr);});
	});;
	if ((!(_20c64cc6a_IsDir(_4083_info.ptr())))) {
		_1b2cc98b4_pushErr(_self_, &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39856_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _39836_filepath;;
}



inline __jule_tuple_bool__jule_tuple_str _1b2ccb487_checkImpPath(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2b0625c_UseDecl>* _42134_decl) {
	__jule_tuple_bool__jule_tuple_str __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	jule::Str _4223_path = (*((*((*(_42134_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if (_20d8b79d9_HasSuffix(_4223_path, jule::Str::lit("/", 1))) {
		_1b2cc98b4_pushErr(_self_.ptr(), &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	jule::Slice<jule::Str> _4273_parts = _20d8bb7ac_Split(_4223_path, jule::Str::lit("/", 1), -1LL);;
	if ((_4273_parts.len() == 0LL)) {
		_1b2cc98b4_pushErr(_self_, &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=_4273_parts[0LL].equal("std", 3);
	{
		auto expr = &(_4273_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a4861d:;
		if (it != expr_end) {
			jule::Str *_43310_part = it;
			{
				if ((((*(_43310_part))).empty() || _1b2aca8a2_IsIgnoreIdent((*(_43310_part))))) {
					_1b2cc98b4_pushErr(_self_, &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg1=_227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = __jule_func_result.__jule_result_arg1; (*it++) = (*(_43310_part)); __jule_collection; }));
			}
			_iter_next_1b6a4861d:;
			++it;
			goto _iter_begin_1b6a4861d;
		}
		_iter_end_1b6a4861d:;
	};
	if (__jule_func_result.__jule_result_arg0) {
		__jule_func_result.__jule_result_arg1=_1b2ccb146_checkStdAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42134_decl);
	} else {
		__jule_func_result.__jule_result_arg1=_1b2ccac4a_checkAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42134_decl);
	};
	return __jule_func_result;;
}



inline void _1b2ccb740_assignAlias(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _45133_imp) {
	jule::I64 _4527_i = _20d8b8a84_FindLast((*((*(_45133_imp))))._field_LinkPath, jule::Str::lit("/", 1));;
	(_4527_i)++;
	jule::Str _4543_path = (*((*(_45133_imp))))._field_LinkPath.slice(_4527_i);;
	(*((*(_45133_imp))))._field_Alias=_4543_path;
}



inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2ccba81_buildImport(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2b0625c_UseDecl>* _45833_decl) {
	if ((*((*(_45833_decl))))._field_Binded) {
		return _1b2cca84e_buildCppHeaderImport(_self_.ptr(), _45833_decl);;
	};
	jule::Bool _4623_std;
	jule::Str _4628_filepath;
	({
		__jule_tuple_bool__jule_tuple_str __jule_assign_result = _1b2ccb487_checkImpPath(_self_, _45833_decl);
		_4623_std = __jule_assign_result.__jule_result_arg0;
		_4628_filepath = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4628_filepath).empty()) {
		return nullptr;;
	};
	jule::Ptr<_1b2cd4e1e_ImportInfo> _4677_imp = jule::new_ptr<_1b2cd4e1e_ImportInfo>(_1b2cd4e1e_ImportInfo{._field_Decl=(*(_45833_decl)), ._field_Path=_4628_filepath, ._field_LinkPath=(*((*((*(_45833_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_45833_decl))))._field_Path.alloc)._field_Kind.len() - 1LL)), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=false, ._field_Std=_4623_std, ._field_Package=jule::new_ptr<_1b2cd7691_Package>(_1b2cd7691_Package{._field_Files=nullptr}), ._field_ModId=0});;
	if (((*((*(_45833_decl))))._field_Alias != nullptr)) {
		(*(_4677_imp))._field_Alias=(*(*((*(_45833_decl))))._field_Alias.alloc)._field_Kind;
	} else {
		_1b2ccb740_assignAlias(_self_, &(_4677_imp));
	};
	return _4677_imp;;
}



inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2ccbdc2_findUseDecl(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _48528_pkg) {
	return _1b2be22d2_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>>((void*)__jule_anon_1b6a53e75, jule::Ptr<__jule_anon_1b6a53e75_ctx>::make(__jule_anon_1b6a53e75_ctx{._48528_pkg=_48528_pkg}).as<jule::Uintptr>(), __jule_anon_1b6a53e75_ctx_handler));;
}



inline jule::Bool _1b2ccc213_checkDuplicateUseDecl(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _49342_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2cd4e1e_ImportInfo> _4947_lpkg = _1b2ccbdc2_findUseDecl(_self_, _49342_pkg);;
	if ((_4947_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1b2cc98b4_pushErr(_self_, &((*((*((*(_49342_pkg))))._field_Decl))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49342_pkg))))._field_LinkPath, &__jule_any_type5); __jule_collection; }));
	_1b2cca145_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Str _1b2ccc554_getAsLinkPath(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Str _50334_path) {
	_20d8ca601_Builder _5047_sb = static__20d8cb1c3_New(_50334_path.len());;
	if (_20d8b7665_HasPrefix(_50334_path, _20dbb9d85_PathStdlib)) {
		(_50334_path).mut_slice(_20dbb9d85_PathStdlib.len());;
		_20d8d4ac2_WriteStr(&_5047_sb, jule::Str::lit("\"std", 4));
		_20d8d4ac2_WriteStr(&_5047_sb, _20d8bd00b_Replace(_50334_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1), -1LL));
		_20d8d4d7a_WriteByte(&_5047_sb, '\"');
		return _20d8d53b9_Str(&_5047_sb);;
	};
	jule::Str _5133_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _227d345bd_Abs(((_1b2cd1e1b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1b2cd0e81_GetModPath((*(_self_))._field_importer.data));
		_5133_root = __jule_assign_result.__jule_result_arg0;
	});
	(_50334_path).mut_slice(_5133_root.len());;
	if ((_50334_path[0LL] == 47LLU)) {
		(_50334_path).mut_slice(1LL);;
	};
	_20d8d4d7a_WriteByte(&_5047_sb, '\"');
	_20d8d4ac2_WriteStr(&_5047_sb, _20d8bd00b_Replace(_50334_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1), -1LL));
	_20d8d4d7a_WriteByte(&_5047_sb, '\"');
	return _20d8d53b9_Str(&_5047_sb);;
}



inline void _1b2ccc972_pushCycleError(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2cc8dad_symBuilder>* _52432_sb, jule::Str _52449_path, _20d8ca601_Builder* _52465_message) {
	;
	jule::Str _5263_refersTo = _20daa6403_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2ccc554_getAsLinkPath(_self_, _1b2ace323_Dir((*((*((*(_52432_sb))))._field_table))._field_File.ptr())), &__jule_any_type5); (*it++) = jule::Any(_1b2ccc554_getAsLinkPath(_self_, _52449_path), &__jule_any_type5); __jule_collection; }));;
	jule::Str _5303_m = _20d8d53b9_Str(_52465_message);;
	_20d8d4ac2_WriteStr(_52465_message, _20d8b7302_Repeat(jule::Str::lit(" ", 1), 7LL));
	_20d8d4ac2_WriteStr(_52465_message, _5263_refersTo);
	_20d8d4d7a_WriteByte(_52465_message, '\n');
	_20d8d4ac2_WriteStr(_52465_message, _5303_m);
}



inline void _1b2cccd90_pushCrossCycleError(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2cc8dad_symBuilder>* _53737_target, jule::Ptr<_1b2cd4e1e_ImportInfo>* _53759_imp, jule::Ptr<_1b2ac7eba_Token>* _53778_errorToken) {
	_20d8ca601_Builder _5387_message = static__20d8cb1c3_New(32LL);;
	_1b2ccc972_pushCycleError(_self_, &(_self_), (*((*(_53759_imp))))._field_Path, &(_5387_message));
	jule::Ptr<_1b2cc8dad_symBuilder> _5427_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1b2cc8dad_symBuilder> _5437_old = _self_;;
	while (((*(_5427_owner))._field_owner != nullptr)) {
		{
			_1b2ccc972_pushCycleError(_self_, &((*_5437_old.alloc)._field_owner), _1b2ace323_Dir((*((*_5437_old.alloc)._field_table))._field_File.ptr()), &(_5387_message));
			if (((*_5427_owner.alloc)._field_owner == (*(_53737_target)))) {
				_1b2ccc972_pushCycleError(_self_, _53737_target, _1b2ace323_Dir((*((*(_5427_owner))._field_table))._field_File), &(_5387_message));
				goto _iter_end_1b6a5ec72;
			};
			_5437_old=_5427_owner;
			_5427_owner=(*_5427_owner.alloc)._field_owner;
		}
	_iter_next_1b6a5ec72:;
	}
	_iter_end_1b6a5ec72:;;
	_1b2cc98b4_pushErr(_self_, _53778_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_20d8d53b9_Str(&_5387_message), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1b2ccd28b_checkImportCycles(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2cd4e1e_ImportInfo> _56034_imp, jule::Ptr<_1b2b0625c_UseDecl>* _56053_decl) {
	if (((*(_56034_imp))._field_Path == _1b2ace323_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1b2cc98b4_pushErr(_self_, &((*((*(_56053_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2ccc554_getAsLinkPath(_self_, (*_56034_imp.alloc)._field_Path), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1b2cc8dad_symBuilder> _5707_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1b6a64518:;
	if ((_1b2ace323_Dir((*((*(_5707_owner))._field_table))._field_File) == (*_56034_imp.alloc)._field_Path)) {
		_1b2cccd90_pushCrossCycleError(_self_, &(_5707_owner), &(_56034_imp), &((*((*(_56053_decl))))._field_Token));
		return false;;
	};
	if (((*(_5707_owner))._field_owner != nullptr)) {
		_5707_owner=(*_5707_owner.alloc)._field_owner;
		goto _julec_label_1b6a64518;
	};
	return true;;
}



inline void _1b2ccd6a9_checkPackageAccessibility(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2b0625c_UseDecl>* _59142_decl, jule::Str* _59164_mod, jule::Str* _59175_path) {
	if ((((_1b2cd1e1b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1b2cd0e81_GetModPath((*(_self_))._field_importer.data) == (*(_59164_mod)))) {
		return;;
	};
	;
	jule::I64 _5963_i = _20d8b82d1_Find((*(_59175_path)), jule::Str::lit("internal", 8));;
	if ((_5963_i == -1LL)) {
		return;;
	};
	if ((_5963_i == 0LL)) {
		if (((((*(_59175_path)).len() - 8LL) == 0LL) || _20d8b7665_HasPrefix((*(_59175_path)), jule::Str::lit("internal/", 9)))) {
			_1b2cc98b4_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((*(_59175_path)).slice((_5963_i - 1LL)).equal("/internal", 9)) {
		_1b2cc98b4_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _6143_n = ((_5963_i + 8LL) + 1LL);;
	if (((_6143_n < (*(_59175_path)).len()) && (*(_59175_path)).slice((_5963_i - 1LL), _6143_n).equal("/internal/", 10))) {
		_1b2cc98b4_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Bool _1b2ccdaa5_importPackage(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _62135_imp, jule::Ptr<_1b2b0625c_UseDecl>* _62158_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62135_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2cd4e1e_ImportInfo> _6267_port = ((_1b2cd1e1b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1b2cd1613_GetImport((*(_self_))._field_importer.data, (*((*(_62135_imp))))._field_Path);;
	if ((_6267_port != nullptr)) {
		(*((*(_62135_imp))))._field_Package=(*_6267_port.alloc)._field_Package;
		(*((*(_62135_imp))))._field_Duplicate=true;
		jule::Str _6314_oldMod = ((_1b2cd1e1b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b2cd0e81_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1b2cd1e1b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b2cd0ca5_SetModPath((*_self_.alloc)._field_importer.data, ((_1b2cd1e1b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b2cd12c2_ModById((*_self_.alloc)._field_importer.data, (*((*(_62135_imp))))._field_ModId));
		_1b2ccd6a9_checkPackageAccessibility(_self_, _62158_decl, &(_6314_oldMod), &((*_6267_port.alloc)._field_Path));
		((_1b2cd1e1b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b2cd0ca5_SetModPath((*_self_.alloc)._field_importer.data, _6314_oldMod);
	} else {
		if ((!(_1b2ccd28b_checkImportCycles(_self_, (*(_62135_imp)), _62158_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6404_oldMod = ((_1b2cd1e1b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b2cd0e81_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1b2cd1e1b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b2cd0ca5_SetModPath((*_self_.alloc)._field_importer.data, _6404_oldMod);
		});;
		if ((*((*(_62135_imp))))._field_Std) {
			((_1b2cd1e1b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b2cd0ca5_SetModPath((*_self_.alloc)._field_importer.data, _20dbb9d85_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1b2adb52d_AST>> _6458_asts;
		jule::Slice<_20daa5e91_Log> _64518_errors;
		({
			__jule_tuple_sx_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log __jule_assign_result = ((_1b2cd1e1b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b2cd1a0e_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62135_imp))))._field_Path, (!((*((*(_62135_imp))))._field_Std)));
			_6458_asts = __jule_assign_result.__jule_result_arg0;
			_64518_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64518_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64518_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1b2ccd6a9_checkPackageAccessibility(_self_, _62158_decl, &(_6404_oldMod), &((*((*(_62135_imp))))._field_Path));
		{
			auto expr = &(_6458_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6a76470:;
			if (it != expr_end) {
				jule::Ptr<_1b2adb52d_AST> _65316_ast = *it;
				{
					jule::Ptr<_1b2be1cb5_SymTab> _6549_table = static_cast<jule::Ptr<_1b2be1cb5_SymTab>>(nullptr);;
					({
						__jule_tuple_x_1b2be1cb5_SymTab__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b2dd26e2_buildSymbols(&(_65316_ast), &((*_self_.alloc)._field_importer), _self_);
						_6549_table = __jule_assign_result.__jule_result_arg0;
						_64518_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64518_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64518_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62135_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62135_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6549_table; __jule_collection; }));
				}
				_iter_next_1b6a76470:;
				++it;
				goto _iter_begin_1b6a76470;
			}
			_iter_end_1b6a76470:;
		};
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2ccdde6_importUseDecl(jule::Ptr<_1b2cc8dad_symBuilder> _self_, jule::Ptr<_1b2b0625c_UseDecl>* _66735_decl) {
	jule::Ptr<_1b2cd4e1e_ImportInfo> _6687_imp = _1b2ccba81_buildImport(_self_, _66735_decl);;
	if ((_6687_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6737_ok = _1b2ccc213_checkDuplicateUseDecl(_self_, &(_6687_imp));;
	if ((!(_6737_ok))) {
		return nullptr;;
	};
	_6737_ok=_1b2ccdaa5_importPackage(_self_, &(_6687_imp), _66735_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6687_imp; __jule_collection; }));
	if (_6737_ok) {
		((_1b2cd1e1b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1b2cd1cb7_Imported((*_self_.alloc)._field_importer.data, _6687_imp);
		return _6687_imp;;
	};
	return nullptr;;
}



inline void _1b2cce0e4_importUseDecls(jule::Ptr<_1b2cc8dad_symBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a7bd6b:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0625c_UseDecl> _68715_decl = *it;
			{
				_1b2ccdde6_importUseDecl(_self_, &(_68715_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1b6a7bd6b;
				};
			}
			_iter_next_1b6a7bd6b:;
			++it;
			goto _iter_begin_1b6a7bd6b;
		}
		_iter_end_1b6a7bd6b:;
	};
}



inline void _1b2cce39c_appendNode(_1b2cc8dad_symBuilder* _self_, _1b2adc3db_Node* _69631_node) {
	{
		auto &_match_expr{ (*(_69631_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b6a7d8a6:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2c9ee83_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b2cc87e7_buildImpl((*(_69631_node))._field_Data.cast_ptr<_1b2b09cbb_Impl>(&__jule_any_type65)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b6a7c3aa:;
			{
				jule::Ptr<_1b2db0835_TypeAlias> _7018_ta = _1b2cc4d43_buildTypeAlias((*(_69631_node))._field_Data.cast_ptr<_1b2b04e09_TypeAliasDecl>(&__jule_any_type50));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7018_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b6a7d411:;
			{
				jule::Ptr<_1b2b0db6b_Struct> _7048_srct = _1b2cc56d4_buildStruct((*(_69631_node))._field_Data.cast_ptr<_1b2b08e1e_StructDecl>(&__jule_any_type66));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7048_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b6a7d477:;
			{
				jule::Ptr<_1b2bda9b2_Fn> _7078_f = _1b2cc6383_buildFunc((*(_69631_node))._field_Data.cast_ptr<_1b2b0009c_FnDecl>(&__jule_any_type67));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7078_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1b6a7d4dd:;
			{
				jule::Ptr<_1b2be61c6_Trait> _7108_t = _1b2cc6bd0_buildTrait((*(_69631_node))._field_Data.cast_ptr<_1b2b0965b_TraitDecl>(&__jule_any_type68));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2be61c6_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7108_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b6a7d554:;
			{
				jule::Ptr<_1b2d26ca7_Var> _7138_v = _1b2cc8264_buildVar((*(_69631_node))._field_Data.cast_ptr<_1b2b01257_VarDecl>(&__jule_any_type49));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7138_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1b6a7d5ba:;
			{
				jule::Ptr<_1b2be887c_Enum> _7168_e = _1b2cc775d_buildEnum((*(_69631_node))._field_Data.cast_ptr<_1b2b072c4_EnumDecl>(&__jule_any_type69));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2be887c_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7168_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b6a7dd90:;
			{
				jule::Ptr<_1b2bea087_TypeEnum> _7198_e = _1b2cc7e9a_buildTypeEnum((*(_69631_node))._field_Data.cast_ptr<_1b2b0825e_TypeEnumDecl>(&__jule_any_type70));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2bea087_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7198_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1b6a7d301:;
			{
				_1b2cc98b4_pushErr(_self_, &((*(_69631_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b6a7d28a:;
	};
}



inline void _1b2cce59a_appendNodes(_1b2cc8dad_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a9731a:;
		if (it != expr_end) {
			_1b2adc3db_Node _72715_node = *it;
			{
				_1b2cce39c_appendNode(_self_, &(_72715_node));
			}
			_iter_next_1b6a9731a:;
			++it;
			goto _iter_begin_1b6a9731a;
		}
		_iter_end_1b6a9731a:;
	};
}



inline void _1b2cce853_pushDirectivePass(_1b2cc8dad_symBuilder* _self_, jule::Ptr<_1b2adc809_Directive>* _73238_d) {
	if (((*((*(_73238_d))))._field_Args.len() == 0LL)) {
		_1b2cc98b4_pushErr(_self_, &((*((*(_73238_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73238_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1b2ac7eba_Token> _7374_arg = (*((*(_73238_d))))._field_Args[1LL];;
		_1b2cc98b4_pushErr(_self_, &(_7374_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73238_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2ac7eba_Token> _7413_arg = (*((*(_73238_d))))._field_Args[0LL];;
	if (((*(_7413_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1b2cc98b4_pushErr(_self_, &(_7413_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7413_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1b2cc98b4_pushErr(_self_, &(_7413_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1b2cc4408_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b2cc4408_Pass{._field_Token=(*((*(_73238_d))))._field_Tag, ._field_Text=(*_7413_arg.alloc)._field_Kind.slice(1LL, ((*_7413_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1b2ccea51_appendTopDirectives(_1b2cc8dad_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a9e685:;
		if (it != expr_end) {
			jule::Ptr<_1b2adc809_Directive> _75915_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75915_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1b6aa10e3:;
						{
							_1b2cce853_pushDirectivePass(_self_, &(_75915_d));
						}
					}
					_match_end_1b6aa1016:;
				};
			}
			_iter_next_1b6a9e685:;
			++it;
			goto _iter_begin_1b6a9e685;
		}
		_iter_end_1b6a9e685:;
	};
}



inline void _1b2ccec4e_build(jule::Ptr<_1b2cc8dad_symBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1b2be1cb5_SymTab>(_1b2be1cb5_SymTab{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1b2cc4408_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1b2be61c6_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1b2be887c_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1b2bea087_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1b2c9ee83_Impl>>(nullptr)});
	_1b2ccea51_appendTopDirectives(_self_);
	_1b2cce0e4_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1b2cce59a_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}








inline jule::Bool _1b2cd4e1e_ImportInfo_eq(_1b2cd4e1e_ImportInfo *_self_, _1b2cd4e1e_ImportInfo _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_LinkPath == _self_->_field_LinkPath) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Duplicate == _self_->_field_Duplicate) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Std == _self_->_field_Std) &&
		(_self_->_field_Package == _self_->_field_Package) &&
		(_self_->_field_ModId == _self_->_field_ModId);
}

inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2cd543b_SelectPackage(_1b2cd4e1e_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2cd5837_FindVar(_1b2cd4e1e_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1b2cd73b6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1b2cd26d0_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1b2db0835_TypeAlias> _1b2cd5c33_FindTypeAlias(_1b2cd4e1e_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1b2cd73b6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1b2cd2b0e_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1b2b0db6b_Struct> _1b2cd612e_FindStruct(_1b2cd4e1e_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1b2cd73b6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1b2cd30b5_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2cd652a_FindFn(_1b2cd4e1e_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1b2cd73b6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1b2cd34b1_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1b2be61c6_Trait> _1b2cd686b_FindTrait(_1b2cd4e1e_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1b2cd73b6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1b2cd3835_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1b2be887c_Enum> _1b2cd6bac_FindEnum(_1b2cd4e1e_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1b2cd73b6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1b2cd3ba9_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1b2bea087_TypeEnum> _1b2cd6eed_FindTypeEnum(_1b2cd4e1e_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1b2cd73b6_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1b2cd413d_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1b2cd73b6_isLookupable(_1b2cd4e1e_ImportInfo* _self_) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	return true;;
}







inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2cd7b69_SelectPackage(_1b2cd7691_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2cd8065_FindVar(_1b2cd7691_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded) {
	return _1b2cd26d0_findVarInPackage(&((*(_self_))._field_Files), &(_28723_ident), _28735_binded);;
}



inline jule::Ptr<_1b2db0835_TypeAlias> _1b2cd8461_FindTypeAlias(_1b2cd7691_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded) {
	return _1b2cd2b0e_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_29329_ident), _29341_binded);;
}



inline jule::Ptr<_1b2b0db6b_Struct> _1b2cd885c_FindStruct(_1b2cd7691_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded) {
	return _1b2cd30b5_findStructInPackage(&((*(_self_))._field_Files), &(_29926_ident), _29938_binded);;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2cd8c58_FindFn(_1b2cd7691_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded) {
	return _1b2cd34b1_findFnInPackage(&((*(_self_))._field_Files), &(_30522_ident), _30534_binded);;
}



inline jule::Ptr<_1b2be61c6_Trait> _1b2cd9099_FindTrait(_1b2cd7691_Package* _self_, jule::Str _31125_ident) {
	return _1b2cd3835_findTraitInPackage(&((*(_self_))._field_Files), &(_31125_ident));;
}



inline jule::Ptr<_1b2be887c_Enum> _1b2cd93da_FindEnum(_1b2cd7691_Package* _self_, jule::Str _31724_ident) {
	return _1b2cd3ba9_findEnumInPackage(&((*(_self_))._field_Files), &(_31724_ident));;
}



inline jule::Ptr<_1b2bea087_TypeEnum> _1b2cd972b_FindTypeEnum(_1b2cd7691_Package* _self_, jule::Str _32328_ident) {
	return _1b2cd413d_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_32328_ident));;
}







inline jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _1b2d0290e_pushComptimeTypeInfo(_1b2d02469_commonSemaMeta* _self_, jule::Ptr<_1b2db1627_TypeKind>* _21241_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b04498:;
		if (it != expr_end) {
			jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _21315_t2 = *it;
			{
				if ((((*((*(_21315_t2))._field_base))._field_BindIdent == (*((*(_21241_t))))._field_BindIdent) && _1b2db1d64_Equal((*(_21315_t2))._field_base, (*(_21241_t))))) {
					return _21315_t2;;
				};
			}
			_iter_next_1b6b04498:;
			++it;
			goto _iter_begin_1b6b04498;
		}
		_iter_end_1b6b04498:;
	};
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _2187_t1 = jule::new_ptr<_1b2c86aa2_comptimeTypeInfo>(_1b2c86aa2_comptimeTypeInfo{._field_base=(*(_21241_t))});;
	{ jule::Slice<jule::Ptr<_1b2c86aa2_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2187_t1); };
	return _2187_t1;;
}







inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2d03569_SelectPackage(_1b2d03091_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>> _24129_selector) {
	return _1b2be22d2_SelectPackage((*(_self_))._field_file.ptr(), _24129_selector);;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2d03965_FindVar(_1b2d03091_sema* _self_, jule::Str _25123_ident, jule::Bool _25135_binded) {
	jule::Ptr<_1b2d26ca7_Var> _2537_v = _1b2cd26d0_findVarInPackage(&((*(_self_))._field_files), &(_25123_ident), _25135_binded);;
	if ((_2537_v != nullptr)) {
		return _2537_v;;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2db0835_TypeAlias> _1b2d03d61_FindTypeAlias(_1b2d03091_sema* _self_, jule::Str _26629_ident, jule::Bool _26641_binded) {
	jule::Ptr<_1b2db0835_TypeAlias> _2687_ta = _1b2cd2b0e_findTypeAliasInPackage(&((*(_self_))._field_files), &(_26629_ident), _26641_binded);;
	if ((_2687_ta != nullptr)) {
		return _2687_ta;;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2b0db6b_Struct> _1b2d0425c_FindStruct(_1b2d03091_sema* _self_, jule::Str _28126_ident, jule::Bool _28138_binded) {
	jule::Ptr<_1b2b0db6b_Struct> _2837_s = _1b2cd30b5_findStructInPackage(&((*(_self_))._field_files), &(_28126_ident), _28138_binded);;
	if ((_2837_s != nullptr)) {
		return _2837_s;;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2d04658_FindFn(_1b2d03091_sema* _self_, jule::Str _29622_ident, jule::Bool _29634_binded) {
	jule::Ptr<_1b2bda9b2_Fn> _2987_f = _1b2cd34b1_findFnInPackage(&((*(_self_))._field_files), &(_29622_ident), _29634_binded);;
	if ((_2987_f != nullptr)) {
		return _2987_f;;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2be61c6_Trait> _1b2d04999_FindTrait(_1b2d03091_sema* _self_, jule::Str _31125_ident) {
	jule::Ptr<_1b2be61c6_Trait> _3137_t = _1b2cd3835_findTraitInPackage(&((*(_self_))._field_files), &(_31125_ident));;
	if ((_3137_t != nullptr)) {
		return _3137_t;;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2be887c_Enum> _1b2d04cda_FindEnum(_1b2d03091_sema* _self_, jule::Str _32624_ident) {
	jule::Ptr<_1b2be887c_Enum> _3287_e = _1b2cd3ba9_findEnumInPackage(&((*(_self_))._field_files), &(_32624_ident));;
	if ((_3287_e != nullptr)) {
		return _3287_e;;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2bea087_TypeEnum> _1b2d0512b_FindTypeEnum(_1b2d03091_sema* _self_, jule::Str _34128_ident) {
	jule::Ptr<_1b2bea087_TypeEnum> _3437_e = _1b2cd413d_findTypeEnumInPackage(&((*(_self_))._field_files), &(_34128_ident));;
	if ((_3437_e != nullptr)) {
		return _3437_e;;
	};
	return nullptr;;
}



inline jule::Bool _1b2d05538_isFlag(_1b2d03091_sema* _self_, jule::I64 _35318_flags) {
	return (((*(_self_))._field_flags & _35318_flags) == _35318_flags);;
}



inline jule::Ptr<_1b2be1cb5_SymTab> _1b2d057be_getCurrentFile(_1b2d03091_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1b2d05a77_setCurrentFile(_1b2d03091_sema* _self_, jule::Ptr<_1b2be1cb5_SymTab> _35634_f) {
	(*(_self_))._field_file=_35634_f;
}



inline void _1b2d05e95_pushErr(_1b2d03091_sema* _self_, jule::Ptr<_1b2ac7eba_Token> _35823_token, jule::Str _35845_fmt, jule::Slice<jule::Any> _35865_args) {
	{ jule::Slice<_20daa5e91_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b2d00e7e_compilerErr(&(_35823_token), true, _35845_fmt, _35865_args)); };
}



inline void _1b2d06308_pushSuggestion(_1b2d03091_sema* _self_, jule::Str _36330_fmt, jule::Slice<jule::Any> _36350_args) {
	{
		_1b2d020a1_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _36330_fmt, _36350_args);
	};
}



inline jule::Bool _1b2d06704_isAccessibleDefine(_1b2d03091_sema* _self_, jule::Bool _36930_public, jule::Ptr<_1b2ac7eba_Token> _36944_token) {
	if ((_36930_public || ((*(_36944_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _3743_selfDir = _1b2ace323_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _3753_tokenDir = _1b2ace323_Dir((*_36944_token.alloc)._field_File.ptr());;
	if ((_3743_selfDir == _3753_tokenDir)) {
		return true;;
	};
	if ((_1b2cd9b6b_isStdPackage(&(_3753_tokenDir), jule::Str::lit("runtime", 7)) && _1b2cd9b6b_isStdPackage(&(_3743_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1b2d06baa_isDuplicatedIdent(_1b2d03091_sema* _self_, jule::Uintptr _39229_itself, jule::Str* _39247_ident, jule::Bool _39259_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b16b09:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> *_39310_f = it;
			{
				if (_1b2be566a_isDuplicatedIdent((*(_39310_f)).ptr(), _39229_itself, _39247_ident, _39259_binded)) {
					return true;;
				};
			}
			_iter_next_1b6b16b09:;
			++it;
			goto _iter_begin_1b6b16b09;
		}
		_iter_end_1b6b16b09:;
	};
	return false;;
}



inline void _1b2d0701d_checkDirectives(jule::Ptr<_1b2d03091_sema> _self_, jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _40137_d, jule::Any _40163_o) {
	_1b2cc06bd_directiveChecker _4027_dc = _1b2cc06bd_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1b2adc809_Directive>>>)(_40137_d)), ._field_o=_40163_o};;
	_1b2cc1e3e_check(&_4027_dc);
}



inline jule::Bool _1b2d074c4_checkGenericQuantity(_1b2d03091_sema* _self_, jule::I64 _41036_required, jule::I64 _41051_given, jule::Ptr<_1b2ac7eba_Token> _41063_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_41036_required == 0LL) && (_41051_given > 0LL))) {
			_case_begin_1b6b197dd:;
			{
				_1b2d05e95_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_41036_required > 0LL) && (_41051_given == 0LL))) {
			_case_begin_1b6b19865:;
			{
				_1b2d05e95_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41036_required < _41051_given)) {
			_case_begin_1b6b198dc:;
			{
				_1b2d05e95_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41036_required > _41051_given)) {
			_case_begin_1b6b19964:;
			{
				_1b2d05e95_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b6b19722:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b6b19645:;
	};
}



inline jule::Bool _1b2d08508_isUseAliasDuplication(_1b2d03091_sema* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _46838_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b1eda9:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _46915_imp2 = *it;
			{
				if ((_46915_imp2 == (*(_46838_imp)))) {
					goto _iter_end_1b6b1eda9;
				};
				if (((*(_46915_imp2))._field_Alias == (*((*(_46838_imp))))._field_Alias)) {
					return true;;
				};
			}
			_iter_next_1b6b1eda9:;
			++it;
			goto _iter_begin_1b6b1eda9;
		}
		_iter_end_1b6b1eda9:;
	};
	return false;;
}



inline jule::Bool _1b2d08849_checkAutoAlias(_1b2d03091_sema* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _48035_imp) {
	if ((*((*(_48035_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
		return true;;
	};
	jule::Bool _4853_valid = _1b2d25712_isValidImpAlias((*((*(_48035_imp))))._field_Alias);;
	if (_4853_valid) {
		if (_1b2d08508_isUseAliasDuplication(_self_, _48035_imp)) {
			_1b2d05e95_pushErr(_self_, (*((*((*(_48035_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_48035_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48035_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	} else {
		_1b2d05e95_pushErr(_self_, (*((*((*(_48035_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("import path is not suitable for auto-aliasing: @", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48035_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*((*(_48035_imp))))._field_Decl))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _4853_valid;;
}



inline jule::Bool _1b2d08b8a_checkImport(_1b2d03091_sema* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo>* _49832_imp) {
	if ((*((*(_49832_imp))))._field_Binded) {
		return true;;
	};
	if (((*((*((*(_49832_imp))))._field_Decl))._field_Alias != nullptr)) {
		if (_1b2aca8a2_IsIgnoreIdent((*((*(_49832_imp))))._field_Alias)) {
			_1b2d05e95_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1b2d08508_isUseAliasDuplication(_self_, _49832_imp)) {
			_1b2d05e95_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49832_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
		if ((*((*(_49832_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
			_1b2d05e95_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Alias, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use \"std/unsafe\"", 16), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else if ((!(_1b2d08849_checkAutoAlias(_self_, _49832_imp)))) {
		return false;;
	};
	if (((*((*((*(_49832_imp))))._field_Package))._field_Files.len() == 0LL)) {
		return true;;
	};
	if ((!((*((*(_49832_imp))))._field_Duplicate))) {
		jule::Ptr<_1b2d03091_sema> _5258_sema = jule::new_ptr<_1b2d03091_sema>(_1b2d03091_sema{._field_errors=jule::Slice<_20daa5e91_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>(nullptr), ._field_file=jule::Ptr<_1b2be1cb5_SymTab>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1b2d22dc4_check(_5258_sema, &((*(*((*(_49832_imp))))._field_Package.alloc)._field_Files));
		if (((*_5258_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_5258_sema.alloc)._field_errors);;
			(*_5258_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return true;;
}



inline void _1b2d08d88_checkImports(_1b2d03091_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b2d6ae:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _54015_file = *it;
			{
				_1b2d05a77_setCurrentFile(_self_, _54015_file);
				{
					auto expr = &((*(_54015_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6b2e506:;
					if (it != expr_end) {
						jule::Ptr<_1b2cd4e1e_ImportInfo> _54216_imp = *it;
						{
							jule::Bool _5435_ok = _1b2d08b8a_checkImport(_self_, &(_54216_imp));;
							if ((!(_5435_ok))) {
								return;;
							};
						}
						_iter_next_1b6b2e506:;
						++it;
						goto _iter_begin_1b6b2e506;
					}
					_iter_end_1b6b2e506:;
				};
			}
			_iter_next_1b6b2d6ae:;
			++it;
			goto _iter_begin_1b6b2d6ae;
		}
		_iter_end_1b6b2d6ae:;
	};
}



inline void _1b2d09086_implFileImpls(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b2e946:;
		if (it != expr_end) {
			jule::Ptr<_1b2c9ee83_Impl> _55315_imp = *it;
			{
				_1b2d19085_implImpl(_self_, &(_55315_imp));
			}
			_iter_next_1b6b2e946:;
			++it;
			goto _iter_begin_1b6b2e946;
		}
		_iter_end_1b6b2e946:;
	};
}



inline void _1b2d09284_implImpls(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b31371:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _55915_file = *it;
			{
				_1b2d05a77_setCurrentFile(_self_.ptr(), _55915_file);
				_1b2d09086_implFileImpls(_self_);
			}
			_iter_next_1b6b31371:;
			++it;
			goto _iter_begin_1b6b31371;
		}
		_iter_end_1b6b31371:;
	};
}



inline void _1b2d09482_checkEnums(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b3242c:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _56615_file = *it;
			{
				_1b2d05a77_setCurrentFile(_self_.ptr(), _56615_file);
				{
					
					if ((!(_1b2d154c1_checkEnumDecls(_self_)))) {
						_case_begin_1b6b32a7b:;
					}
					else if ((!(_1b2d15757_checkTypeEnumDecls(_self_)))) {
						_case_begin_1b6b33153:;
					}
					_match_end_1b6b33076:;
				};
			}
			_iter_next_1b6b3242c:;
			++it;
			goto _iter_begin_1b6b3242c;
		}
		_iter_end_1b6b3242c:;
	};
}



inline void _1b2d09680_checkFileInherits(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b33ecd:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> _57615_t = *it;
			{
				jule::Bool _5774_ok = _1b2d1711b__checkTraitDeclInherits(_self_, &(_57615_t));;
				if ((!(_5774_ok))) {
					return;;
				};
			}
			_iter_next_1b6b33ecd:;
			++it;
			goto _iter_begin_1b6b33ecd;
		}
		_iter_end_1b6b33ecd:;
	};
}



inline void _1b2d0987d_checkInherits(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b34572:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _58515_file = *it;
			{
				_1b2d05a77_setCurrentFile(_self_.ptr(), _58515_file);
				_1b2d09680_checkFileInherits(_self_);
			}
			_iter_next_1b6b34572:;
			++it;
			goto _iter_begin_1b6b34572;
		}
		_iter_end_1b6b34572:;
	};
}



inline _1b2dc3a24_typeChecker _1b2d09d34_typeChecker(jule::Ptr<_1b2d03091_sema> _self_, jule::Trait _59132_l, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _59147_generics, jule::Ptr<_1b2dc2a34_referencer> _5927_referencer) {
	_1b2dc3a24_typeChecker _5937_tc = _1b2dc3a24_typeChecker{._field_s=_self_, ._field_rootLookup=_59132_l, ._field_lookup=_59132_l, ._field_referencer=_5927_referencer, ._field_refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_59147_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1b2db0835_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _59132_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)) {
			_case_begin_1b6b37234:;
			{
				jule::Ptr<_1b2cab830_scopeChecker> _6028_hard = _1b2caee93_getHardRoot(_59132_l.cast_ptr<_1b2cab830_scopeChecker>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));;
				_5937_tc._field_refers=(*((*(_6028_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1b6b371bd:;
	};
	if (((_5927_referencer != nullptr) && ((*_5927_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_5927_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b6b38aa4:;
				{
					_5937_tc._field_ownerAlias=(*(_5927_referencer))._field_owner.unsafe_cast_ptr<_1b2db0835_TypeAlias>();
				}
			}
			_match_end_1b6b38a3d:;
		};
	};
	return _5937_tc;;
}



inline jule::Ptr<_1b2db1627_TypeKind> _1b2d0a395_buildTypeWithRefers(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _61841_t, jule::Trait _61864_l, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _6197_generics, jule::Ptr<_1b2dc2a34_referencer> _61935_referencer) {
	return ({ auto _wrap_copy = _1b2d09d34_typeChecker(_self_, _61864_l, _6197_generics, _61935_referencer); _1b2dcb60e_checkDecl(&_wrap_copy, _61841_t); });;
}



inline jule::Bool _1b2d0a906_checkTypeWithRefers(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db8d38_TypeSymbol>* _62541_t, jule::Trait _62561_l, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _6267_generics, jule::Ptr<_1b2dc2a34_referencer> _62635_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1b2db91e0_checked((*(_62541_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_62541_t))))._field_Kind=_1b2d0a395_buildTypeWithRefers(_self_, &((*((*(_62541_t))))._field_Decl), _62561_l, _6267_generics, _62635_referencer);
	__jule_func_result = _1b2db91e0_checked((*(_62541_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1b2c9cb84_constraintChecker> _1b2d0ab8c_constraintChecker(jule::Ptr<_1b2d03091_sema> _self_) {
	return jule::new_ptr<_1b2c9cb84_constraintChecker>(_1b2c9cb84_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_si=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_et=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1b2d0b088_checkType(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db8d38_TypeSymbol>* _64031_t, jule::Trait _64051_l) {
	return _1b2d0a906_checkTypeWithRefers(_self_, _64031_t, _64051_l, nullptr, nullptr);;
}



inline jule::Ptr<_1b2db1627_TypeKind> _1b2d0b53e_checkTypeRefers(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _64537_t, jule::Trait _64560_l, jule::Ptr<_1b2cc3094_ReferenceStack> _64575_refers) {
	jule::Ptr<_1b2dc3a24_typeChecker> _6467_tc = jule::new_ptr<_1b2dc3a24_typeChecker>(_1b2dc3a24_typeChecker{._field_s=_self_, ._field_rootLookup=_64560_l, ._field_lookup=_64560_l, ._field_referencer=jule::Ptr<_1b2dc2a34_referencer>(nullptr), ._field_refers=_64575_refers, ._field_errorToken=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1b2db0835_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1b2dcb60e_checkDecl(_6467_tc.ptr(), _64537_t);;
}



inline jule::Ptr<_1b2db1627_TypeKind> _1b2d0b9e5_buildTypeWithGenerics(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _65743_t, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _6587_generics, jule::Ptr<_1b2cc3094_ReferenceStack> _65835_refers) {
	jule::Ptr<_1b2dc3a24_typeChecker> _6597_tc = jule::new_ptr<_1b2dc3a24_typeChecker>(_1b2dc3a24_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1b2dc2a34_referencer>(nullptr), ._field_refers=_65835_refers, ._field_errorToken=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_6587_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1b2db0835_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1b2dcb60e_checkDecl(_6597_tc.ptr(), _65743_t);;
}



inline jule::Ptr<_1b2db1627_TypeKind> _1b2d0c177_selectType(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _67532_t) {
	jule::Ptr<_1b2dc3a24_typeChecker> _6767_tc = jule::new_ptr<_1b2dc3a24_typeChecker>(_1b2dc3a24_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1b2dc2a34_referencer>(nullptr), ._field_refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1b2db0835_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1b2dcb60e_checkDecl(_6767_tc.ptr(), _67532_t);;
}



inline jule::Ptr<_1b2d80948_eval> _1b2d0c62d_evalpd(jule::Ptr<_1b2d03091_sema> _self_, jule::Trait _68727_l, jule::Ptr<_1b2db1627_TypeKind> _68742_p, jule::Ptr<_1b2d26ca7_Var> _68760_owner) {
	jule::Ptr<_1b2d80948_eval> _6887_e = jule::new_ptr<_1b2d80948_eval>(_1b2d80948_eval{._field_s=_self_, ._field_lookup=_68727_l, ._field_prefix=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_unsafety=false, ._field_immutable=false, ._field_ignored=false, ._field_disBuiltin=false, ._field_owner=_68760_owner, ._field_field=jule::Ptr<_1b2b10e26_FieldIns>(nullptr), ._field_arg=false});;
	{
		auto &_match_expr{ _68727_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)) {
			_case_begin_1b6b4441c:;
			{
				(*(_6887_e))._field_unsafety=_1b2cadc1c_isUnsafe(_68727_l.cast_ptr<_1b2cab830_scopeChecker>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));
			}
		}
		_match_end_1b6b443a6:;
	};
	(*_6887_e.alloc)._field_prefix=_68742_p;
	return _6887_e;;
}



inline jule::Ptr<_1b2d80948_eval> _1b2d0ca29_evalp(jule::Ptr<_1b2d03091_sema> _self_, jule::Trait _70226_l, jule::Ptr<_1b2db1627_TypeKind> _70241_p) {
	return _1b2d0c62d_evalpd(_self_, _70226_l, _70241_p, nullptr);;
}



inline jule::Ptr<_1b2d80948_eval> _1b2d0cd6a_eval(jule::Ptr<_1b2d03091_sema> _self_, jule::Trait _70725_l) {
	return _1b2d0ca29_evalp(_self_, _70725_l, nullptr);;
}



inline jule::Bool _1b2d0d486_checkAssignType(jule::Ptr<_1b2d03091_sema> _self_, jule::Bool _71132_destIsRef, jule::Ptr<_1b2db1627_TypeKind>* _71154_dest, jule::Ptr<_1b2d7dc21_Data>* _7128_d, jule::Ptr<_1b2ac7eba_Token> _71222_errorToken, jule::Ptr<_1b2cc3094_ReferenceStack> _71253_refers) {
	if ((*((*(_7128_d))))._field_Decl) {
		_1b2d05e95_pushErr(_self_.ptr(), _71222_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_71132_destIsRef) {
		if ((!(_1b2db1d64_Equal((*(_71154_dest)), (*((*(_7128_d))))._field_Kind)))) {
			_1b2d05e95_pushErr(_self_, _71222_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_71154_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_7128_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1b2d6c0c7_assignTypeChecker> _7238_atc = jule::new_ptr<_1b2d6c0c7_assignTypeChecker>(_1b2d6c0c7_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_71154_dest)), ._field_d=(*(_7128_d)), ._field_errorToken=_71222_errorToken, ._field_refers=_71253_refers});;
		jule::Bool _7304_ok = _1b2d6d0c8_check(_7238_atc.ptr());;
		if ((!(_7304_ok))) {
			return false;;
		};
	};
	if (((!(_1b2d7e65b_IsConst((*(_7128_d)).ptr()))) || (_1b2db3ccd_Prim((*(_71154_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _7407_kind = (*(_1b2db3ccd_Prim((*(_71154_dest)).ptr())))._field_Kind;;
	{
		
		if (_1b2c74a7e_IsSigInt(_7407_kind)) {
			_case_begin_1b6b4c469:;
			{
				_1b2bc4c32_SetI64((*((*(_7128_d))))._field_Constant.ptr(), _1b2bc445c_AsI64((*((*(_7128_d))))._field_Constant));
			}
		}
		else if (_1b2c74d8c_IsUnsigInt(_7407_kind)) {
			_case_begin_1b6b4c502:;
			{
				_1b2bc4eda_SetU64((*((*(_7128_d))))._field_Constant.ptr(), _1b2bc46e3_AsU64((*((*(_7128_d))))._field_Constant));
			}
		}
		else if (_1b2c75497_IsFloat(_7407_kind)) {
			_case_begin_1b6b4c568:;
			{
				_1b2bc5804_SetF64((*((*(_7128_d))))._field_Constant.ptr(), _1b2bc4979_AsF64((*((*(_7128_d))))._field_Constant));
			}
		}
		_match_end_1b6b4c3ae:;
	};
	return true;;
}



inline jule::Bool _1b2d0d93c__checkTypeCompatibility(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db1627_TypeKind>* _75445_dest, jule::Ptr<_1b2db1627_TypeKind>* _75467_src, jule::Ptr<_1b2ac7eba_Token> _7557_errorToken) {
	if (((*(_75467_src)) == nullptr)) {
		return false;;
	};
	if ((_1b2db5b04_Tup((*(_75467_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1b2d653de_typeCompatibilityChecker _7637_tcc = _1b2d653de_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_75445_dest)), ._field_src=(*(_75467_src)), ._field_errorToken=_7557_errorToken};;
	return _1b2d6b945_check(&_7637_tcc);;
}



inline jule::Bool _1b2d0dde3_checkTypeCompatibility(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db1627_TypeKind>* _77244_dest, jule::Ptr<_1b2db1627_TypeKind>* _7738_src, jule::Ptr<_1b2ac7eba_Token>* _77329_errorToken) {
	if (_1b2d0d93c__checkTypeCompatibility(_self_, _77244_dest, _7738_src, (*(_77329_errorToken)))) {
		return true;;
	};
	_1b2d05e95_pushErr(_self_, (*(_77329_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_77244_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_7738_src)).ptr()), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline void _1b2d0e311_pushCompatiblityError(_1b2d03091_sema* _self_, jule::Ptr<_1b2db1627_TypeKind>* _78142_dest, jule::Ptr<_1b2d7dc21_Data>* _78164_src, jule::Ptr<_1b2ac7eba_Token>* _7828_errorToken) {
	if ((*((*(_78164_src))))._field_untyped) {
		{
			
			if (_1b2bc5c88_IsI64((*((*(_78164_src))))._field_Constant.ptr())) {
				_case_begin_1b6b5488e:;
				{
					_1b2d05e95_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1b2bc601e_IsU64((*((*(_78164_src))))._field_Constant.ptr())) {
				_case_begin_1b6b54938:;
				{
					_1b2d05e95_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1b2bc67c2_IsF64((*((*(_78164_src))))._field_Constant.ptr())) {
				_case_begin_1b6b5499e:;
				{
					_1b2d05e95_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			_match_end_1b6b5475c:;
		};
	};
	_1b2d05e95_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_78164_src))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1b2d0e7b7_checkTypeCompatibility1(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db1627_TypeKind>* _79945_dest, jule::Ptr<_1b2d7dc21_Data>* _79967_src, jule::Ptr<_1b2ac7eba_Token>* _8008_errorToken) {
	if (_1b2d0d93c__checkTypeCompatibility(_self_, _79945_dest, &((*((*(_79967_src))))._field_Kind), (*(_8008_errorToken)))) {
		return true;;
	};
	_1b2d0e311_pushCompatiblityError(_self_, _79945_dest, _79967_src, _8008_errorToken);
	return false;;
}



inline jule::Ptr<_1b2db1627_TypeKind> _1b2d0ec6d_buildNonGenericTypeKind(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _81445_ast, jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>* _8158_generics, jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>* _81544_ignored) {
	jule::Ptr<_1b2dc3a24_typeChecker> _8167_tc = jule::new_ptr<_1b2dc3a24_typeChecker>(_1b2dc3a24_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1b2dc2a34_referencer>(nullptr), ._field_refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_ignoreGenerics=(*(_8158_generics)), ._field_ignoredGenerics=_81544_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1b2db0835_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1b2dcb60e_checkDecl(_8167_tc.ptr(), _81445_ast);;
}



inline jule::Bool _1b2d10169_buildFnNonGenericTypeKinds(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns> _82647_f, jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>* _82663_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> _82711_generics = nullptr;;
	if (_1b2bdb1ee_IsMethod((*(_82647_f))._field_Decl.ptr())) {
		_82711_generics=jule::append((*(*(_82647_f))._field_Decl.alloc)._field_Generics,(*((*(*(_82647_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_82711_generics=(*((*(_82647_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1b2d11313_basicFnEnvironment(_self_, &(_82647_f), jule::__new_closure<jule::Bool,jule::Ptr<_1b2d03091_sema>*>((void*)__jule_anon_1b6b5eee8, jule::Ptr<__jule_anon_1b6b5eee8_ctx>::make(__jule_anon_1b6b5eee8_ctx{._82647_f=_82647_f,._82711_generics=_82711_generics,._82663_ignored=_82663_ignored}).as<jule::Uintptr>(), __jule_anon_1b6b5eee8_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1b2bdda70_FnIns> _1b2d104aa_getTraitCheckFnKind(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _84941_f) {
	if (((*((*(_84941_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_84941_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1b2bdda70_FnIns> _8537_ins = _1b2bdbebe_instanceForce((*(_84941_f)));;
	jule::Ptr<_1b2dc3a24_typeChecker> _8557_tc = jule::new_ptr<_1b2dc3a24_typeChecker>(_1b2dc3a24_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1b2dc2a34_referencer>(nullptr), ._field_refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1b2db0835_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_8537_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b6b257:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdc91a_ParamIns> _86015_p = *it;
			{
				if ((!(_1b2bd963c_IsSelf((*(_86015_p))._field_Decl.ptr())))) {
					(*_86015_p.alloc)._field_Kind=_1b2dcb60e_checkDecl(_8557_tc.ptr(), &((*((*(*(_86015_p))._field_Decl.alloc)._field_Kind))._field_Decl));
					if (((*_86015_p.alloc)._field_Kind == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1b6b6b257:;
			++it;
			goto _iter_begin_1b6b6b257;
		}
		_iter_end_1b6b6b257:;
	};
	if ((!(_1b2bdae68_IsVoid((*(_84941_f)).ptr())))) {
		(*_8537_ins.alloc)._field_Result=_1b2dcb60e_checkDecl(_8557_tc, &((*((*((*((*(_84941_f))))._field_Result))._field_Kind))._field_Decl));
		if (((*_8537_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _8537_ins;;
}



inline jule::Bool _1b2d10961_checkConstraintsFn(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _87840_f, jule::Ptr<_1b2ac7eba_Token>* _87856_et, jule::Ptr<_1b2bdda70_FnIns> _87879_exist) {
	jule::Ptr<_1b2c9cb84_constraintChecker> _8797_cc = _1b2d0ab8c_constraintChecker(_self_);;
	(*(_8797_cc))._field_et=(*(_87856_et));
	(*_8797_cc.alloc)._field_fi=(*(_87840_f));
	if ((_87879_exist != nullptr)) {
		{
			auto expr = &((*_87879_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6b713c2:;
			if (it != expr_end) {
				jule::I64 _8839_i = it - expr->begin();
				jule::Ptr<_1b2daee72_InsGeneric> _88316_g = *it;
				{
					(*((*((*(_87840_f))))._field_Generics[_8839_i]))._field_Constraint=(*(_88316_g))._field_Constraint;
				}
				_iter_next_1b6b713c2:;
				++it;
				_8839_i++;
				goto _iter_begin_1b6b713c2;
			}
			_iter_end_1b6b713c2:;
		};
	} else {
		(*_8797_cc.alloc)._field_uniq=true;
	};
	return _1b2c9daec_check(_8797_cc);;
}



inline jule::Bool _1b2d10e17_checkConstraintsStruct(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _89244_s, jule::Ptr<_1b2ac7eba_Token>* _89264_et, jule::Ptr<_1b2b119c6_StructIns> _89287_exist) {
	jule::Ptr<_1b2c9cb84_constraintChecker> _8937_cc = _1b2d0ab8c_constraintChecker(_self_);;
	(*(_8937_cc))._field_et=(*(_89264_et));
	(*_8937_cc.alloc)._field_si=(*(_89244_s));
	if ((_89287_exist != nullptr)) {
		{
			auto expr = &((*_89287_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6b74590:;
			if (it != expr_end) {
				jule::I64 _8979_i = it - expr->begin();
				jule::Ptr<_1b2daee72_InsGeneric> _89716_g = *it;
				{
					(*((*((*(_89244_s))))._field_Generics[_8979_i]))._field_Constraint=(*(_89716_g))._field_Constraint;
				}
				_iter_next_1b6b74590:;
				++it;
				_8979_i++;
				goto _iter_begin_1b6b74590;
			}
			_iter_end_1b6b74590:;
		};
	} else {
		(*_8937_cc.alloc)._field_uniq=true;
	};
	return _1b2c9daec_check(_8937_cc);;
}



inline jule::Bool _1b2d11313_basicFnEnvironment(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _90940_f, jule::Fn<jule::Bool,jule::Ptr<_1b2d03091_sema>*> _90951_algo) {
	jule::Ptr<_1b2d03091_sema> _9107_sema = (*((*((*(_90940_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1b2be1cb5_SymTab> _9117_old = _1b2d057be_getCurrentFile(_9107_sema.ptr());;
	jule::Ptr<_1b2be1cb5_SymTab> _9127_file = _1b2d01c0a_findFile(&((*_9107_sema.alloc)._field_files), &((*((*(*((*(_90940_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_9127_file != nullptr)) {
		_1b2d05a77_setCurrentFile(_9107_sema, _9127_file);
	};
	jule::Bool _9173_ok = _90951_algo(&(_9107_sema));;
	if ((_9107_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*_9107_sema.alloc)._field_errors);
		(*_9107_sema.alloc)._field_errors=nullptr;
	};
	_1b2d05a77_setCurrentFile(_9107_sema, _9117_old);
	return _9173_ok;;
}



inline jule::Bool _1b2d1170e_fnEnvironment(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _92935_f, jule::Fn<jule::Bool,jule::Ptr<_1b2d03091_sema>*,jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>*> _92946_algo) {
	jule::I64 _9307_size = (*((*(_92935_f))))._field_Generics.len();;
	if ((((*((*(_92935_f))))._field_Decl != nullptr) && ((*(*((*(_92935_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_9307_size+=(*(*((*((*(_92935_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _9347_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>::alloc(0LL, _9307_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2db0835_TypeAlias>(nullptr); __jule_collection; });;
	_1b2d01886_appendGenericTypeAliases(&(_9347_generics), _92935_f);
	return _1b2d11313_basicFnEnvironment(_self_, _92935_f, jule::__new_closure<jule::Bool,jule::Ptr<_1b2d03091_sema>*>((void*)__jule_anon_1b6b7cd29, jule::Ptr<__jule_anon_1b6b7cd29_ctx>::make(__jule_anon_1b6b7cd29_ctx{._92946_algo=_92946_algo,._9347_generics=_9347_generics}).as<jule::Uintptr>(), __jule_anon_1b6b7cd29_ctx_handler));;
}



inline void _1b2d119b7_checkFnParamKind(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdc91a_ParamIns>* _94138_p) {
	(*((*((*(_94138_p))))._field_Kind))._field_Variadic=(*((*((*(_94138_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_94138_p))))._field_Decl.alloc)._field_Reference && (!(_1b2dcd534_isValidForRef(&((*((*(_94138_p))))._field_Kind)))))) {
		_1b2d05e95_pushErr(_self_.ptr(), (*(*((*(_94138_p))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_94138_p))))._field_Kind), &__jule_any_type5); __jule_collection; }));
	};
}



inline jule::Bool _1b2d11d08_reloadFnInsTypes(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns> _94837_f) {
	if ((_1b2be0038_IsBuiltin(_94837_f.ptr()) || _1b2be02be_IsAnon(_94837_f))) {
		return true;;
	};
	return _1b2d1170e_fnEnvironment(_self_, &(_94837_f), jule::__new_closure<jule::Bool,jule::Ptr<_1b2d03091_sema>*,jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>*>((void*)__jule_anon_1b6b82614, jule::Ptr<__jule_anon_1b6b82614_ctx>::make(__jule_anon_1b6b82614_ctx{._94837_f=_94837_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b6b82614_ctx_handler));;
}



inline jule::Bool _1b2d122ae_checkRefValidityForInitExpr(jule::Ptr<_1b2d03091_sema> _self_, jule::Bool _98844_leftMut, jule::Ptr<_1b2d7dc21_Data>* _98864_d, jule::Ptr<_1b2ac7eba_Token>* _98879_errorToken) {
	if ((!(_1b2d00951_isValidModelForRef(&((*((*(_98864_d))))._field_Model))))) {
		_1b2d05e95_pushErr(_self_.ptr(), (*(_98879_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_98844_leftMut && (!((*((*(_98864_d))))._field_Mutable)))) {
		_1b2d05e95_pushErr(_self_, (*(_98879_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1b2d12600_isMutRiskyStruct(_1b2d03091_sema* _self_, jule::Ptr<_1b2b119c6_StructIns>* _100529_s) {
	{
		auto expr = &((*((*(_100529_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b8c6eb:;
		if (it != expr_end) {
			jule::Ptr<_1b2b10e26_FieldIns> *_100610_f = it;
			{
				if ((((*((*((*(_100610_f))))._field_Decl))._field_Mutable && _1b2db300d_Mutable((*(*(_100610_f)).alloc)._field_Kind.ptr())) && _1b2d06704_isAccessibleDefine(_self_, (*(*((*(_100610_f))))._field_Decl.alloc)._field_Public, (*(*((*(_100610_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1b6b8c6eb:;
			++it;
			goto _iter_begin_1b6b8c6eb;
		}
		_iter_end_1b6b8c6eb:;
	};
	return false;;
}



inline jule::Bool _1b2d12c1b_checkValidityForInitExpr(jule::Ptr<_1b2d03091_sema> _self_, jule::Bool _103241_leftMut, jule::Bool _103256_leftRef, jule::Ptr<_1b2db1627_TypeKind>* _10334_leftKind, jule::Ptr<_1b2d7dc21_Data>* _103330_d, jule::Ptr<_1b2ac7eba_Token>* _103345_errorToken) {
	if ((_103241_leftMut && (!((*((*(_103330_d))))._field_Mutable)))) {
		if ((_1b2db300d_Mutable((*((*(_103330_d))))._field_Kind.ptr()) || (*(*((*(_103330_d))))._field_Kind.alloc)._field_Variadic)) {
			_1b2d05e95_pushErr(_self_.ptr(), (*(_103345_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_103330_d))))._field_Kind), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1b2b119c6_StructIns> _10414_s = _1b2db5351_Struct((*((*(_103330_d))))._field_Kind);;
		if (((_10414_s != nullptr) && _1b2d12600_isMutRiskyStruct(_self_, &(_10414_s)))) {
			_1b2d05e95_pushErr(_self_, (*(_103345_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_103330_d))))._field_Kind), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	};
	if (_103256_leftRef) {
		if ((!(_1b2d122ae_checkRefValidityForInitExpr(_self_, _103241_leftMut, _103330_d, _103345_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1b2d6c0c7_assignTypeChecker> _10527_atc = jule::new_ptr<_1b2d6c0c7_assignTypeChecker>(_1b2d6c0c7_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_d=(*(_103330_d)), ._field_errorToken=(*(_103345_errorToken)), ._field_refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr)});;
	return _1b2d6c825_checkValidity(_10527_atc.ptr());;
}



inline jule::Bool _1b2d13117_checkTypeAliasDeclKind(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db0835_TypeAlias>* _106044_ta, jule::Trait _106064_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2be1cb5_SymTab> _10617_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1b2d05a77_setCurrentFile(_self_, _10617_old);
	});;
	if (((*((*(_106044_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1b2be1cb5_SymTab> _10668_file = _1b2d01c0a_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_106044_ta))))._field_Token.alloc)._field_File));;
		if ((_10668_file != nullptr)) {
			_1b2d05a77_setCurrentFile(_self_, _10668_file);
		};
	};
	__jule_func_result=_1b2d0a906_checkTypeWithRefers(_self_, &((*((*(_106044_ta))))._field_Kind), _106064_l, nullptr, jule::new_ptr<_1b2dc2a34_referencer>(_1b2dc2a34_referencer{._field_ident=(*((*(_106044_ta))))._field_Ident, ._field_owner=jule::Any((*(_106044_ta)), &__jule_any_type8), ._field_refs=(&((*((*(_106044_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1b2db4a9d_Arr((*((*((*(_106044_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1b2db4a9d_Arr((*((*((*(_106044_ta))))._field_Kind))._field_Kind)))._field_Auto)) {
		_1b2d05e95_pushErr(_self_, (*((*(*((*(_106044_ta))))._field_Kind.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1b2d1347a_checkTypeAliasDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db0835_TypeAlias>* _108340_ta, jule::Trait _108360_l) {
	if (_1b2aca8a2_IsIgnoreIdent((*((*(_108340_ta))))._field_Ident)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_108340_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_1b2d13117_checkTypeAliasDeclKind(_self_, _108340_ta, _108360_l);
}



inline void _1b2d13733_checkTypeAliasDeclDup(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db0835_TypeAlias>* _109143_ta) {
	if (_1b2aca8a2_IsIgnoreIdent((*((*(_109143_ta))))._field_Ident)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_109143_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1b2d06baa_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_109143_ta))), &((*((*(_109143_ta))))._field_Ident), (*((*(_109143_ta))))._field_Binded)) {
		_1b2d05e95_pushErr(_self_, (*((*(_109143_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_109143_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1b2d13117_checkTypeAliasDeclKind(_self_, _109143_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));
}



inline jule::Bool _1b2d139b9_checkTypeAliasDecls(jule::Ptr<_1b2d03091_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ba117c:;
		if (it != expr_end) {
			jule::Ptr<_1b2db0835_TypeAlias> _110415_ta = *it;
			{
				_1b2d13733_checkTypeAliasDeclDup(_self_, &(_110415_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6ba117c:;
			++it;
			goto _iter_begin_1b6ba117c;
		}
		_iter_end_1b6ba117c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b6bd0057_checkEnumItemsDup(_1b2d03091_sema* _self_, jule::Slice<jule::Ptr<_1b2be7d32_EnumItem>> _111536_items) {
	{
		auto expr = &(_111536_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6bd1465:;
		if (it != expr_end) {
			jule::Ptr<_1b2be7d32_EnumItem> *_111610_item = it;
			{
				if (((*((*(_111610_item))))._field_Ident).empty()) {
					goto _iter_next_1b6bd1465;
				} else if (_1b2aca8a2_IsIgnoreIdent((*((*(_111610_item))))._field_Ident)) {
					_1b2d05e95_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111536_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b6bd2686:;
						if (it != expr_end) {
							jule::Ptr<_1b2be7d32_EnumItem> *_112212_citem = it;
							{
								if (((*(_111610_item)) == (*(_112212_citem)))) {
									goto _iter_end_1b6bd2686;
								} else if (((*((*(_111610_item))))._field_Ident == (*((*(_112212_citem))))._field_Ident)) {
									_1b2d05e95_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111610_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1b6bd2686;
								};
							}
							_iter_next_1b6bd2686:;
							++it;
							goto _iter_begin_1b6bd2686;
						}
						_iter_end_1b6bd2686:;
					};
				};
			}
			_iter_next_1b6bd1465:;
			++it;
			goto _iter_begin_1b6bd1465;
		}
		_iter_end_1b6bd1465:;
	};
}

inline void _1b6bdd098_checkEnumItemsDup(_1b2d03091_sema* _self_, jule::Slice<jule::Ptr<_1b2be99b0_TypeEnumItem>> _111536_items) {
	{
		auto expr = &(_111536_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6bde462:;
		if (it != expr_end) {
			jule::Ptr<_1b2be99b0_TypeEnumItem> *_111610_item = it;
			{
				if (((*((*(_111610_item))))._field_Ident).empty()) {
					goto _iter_next_1b6bde462;
				} else if (_1b2aca8a2_IsIgnoreIdent((*((*(_111610_item))))._field_Ident)) {
					_1b2d05e95_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111536_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b6be0683:;
						if (it != expr_end) {
							jule::Ptr<_1b2be99b0_TypeEnumItem> *_112212_citem = it;
							{
								if (((*(_111610_item)) == (*(_112212_citem)))) {
									goto _iter_end_1b6be0683;
								} else if (((*((*(_111610_item))))._field_Ident == (*((*(_112212_citem))))._field_Ident)) {
									_1b2d05e95_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111610_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1b6be0683;
								};
							}
							_iter_next_1b6be0683:;
							++it;
							goto _iter_begin_1b6be0683;
						}
						_iter_end_1b6be0683:;
					};
				};
			}
			_iter_next_1b6bde462:;
			++it;
			goto _iter_begin_1b6bde462;
		}
		_iter_end_1b6bde462:;
	};
}



inline void _1b2d1402a_checkEnumItemsStr(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be887c_Enum>* _113539_e) {
	jule::Ptr<_1b2d80948_eval> _11367_eval = _1b2d0cd6a_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));;
	{
		auto expr = &((*((*(_113539_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ba2e1a:;
		if (it != expr_end) {
			jule::Ptr<_1b2be7d32_EnumItem> _113715_item = *it;
			{
				if (_1b2be81ea_AutoExpr(_113715_item.ptr())) {
					(*_113715_item.alloc)._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1b2bc2a54_NewStr((*_113715_item.alloc)._field_Ident)})});
					(*((*((*_113715_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_113715_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
				} else {
					jule::Ptr<_1b2d7dc21_Data> _11469_d = _1b2d9e7ad_evalExpr(_11367_eval, (*((*(_113715_item))._field_Value))._field_Expr);;
					if ((_11469_d == nullptr)) {
						goto _iter_next_1b6ba2e1a;
					};
					if ((!(_1b2d7e65b_IsConst(_11469_d.ptr())))) {
						_1b2d05e95_pushErr(_self_, (*((*(*(_113715_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1b2cc3094_ReferenceStack> _11559_refers = static_cast<jule::Ptr<_1b2cc3094_ReferenceStack>>(nullptr);;
					_1b2d0d486_checkAssignType(_self_, false, &((*((*((*(_113539_e))))._field_Kind))._field_Kind), &(_11469_d), (*_113715_item.alloc)._field_Token, _11559_refers);
					(*(*(_113715_item))._field_Value.alloc)._field_Data=_11469_d;
				};
			}
			_iter_next_1b6ba2e1a:;
			++it;
			goto _iter_begin_1b6ba2e1a;
		}
		_iter_end_1b6ba2e1a:;
	};
}



inline void _1b6bae036_checkEnumItemInt(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d80948_eval>* _116243_eval, jule::Ptr<_1b2be887c_Enum>* _116261_e, jule::Ptr<_1b2db9740_Prim>* _116272_prim, jule::Ptr<_1b2be7d32_EnumItem>* _116290_item, jule::U64* _1162112_n) {
	if (_1b2be81ea_AutoExpr((*(_116290_item)).ptr())) {
		(*((*(_116290_item))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		{
			
{
				_case_begin_1b6bb1423:;
				{
					(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Constant=static__1b2bc24c1_NewU64((*(_1162112_n)));
				}
			}
			_match_end_1b6bb1cd6:;
		};
		(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116290_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1b2d7dc21_Data> _11778_d = _1b2d9e7ad_evalExpr((*(_116243_eval)), (*((*((*(_116290_item))))._field_Value))._field_Expr);;
		if ((_11778_d == nullptr)) {
			return;;
		};
		if ((!(_1b2d7e65b_IsConst(_11778_d.ptr())))) {
			_1b2d05e95_pushErr(_self_.ptr(), (*((*(*((*(_116290_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b2cc3094_ReferenceStack> _11848_refers = static_cast<jule::Ptr<_1b2cc3094_ReferenceStack>>(nullptr);;
		_1b2d0d486_checkAssignType(_self_, false, &((*((*((*(_116261_e))))._field_Kind))._field_Kind), &(_11778_d), (*((*(_116290_item))))._field_Token, _11848_refers);
		(*(*((*(_116290_item))))._field_Value.alloc)._field_Data=_11778_d;
		{
			
{
				_case_begin_1b6bb5e83:;
				{
					(*(_1162112_n))=_1b2bc3923_ReadU64((*((*(*((*(_116290_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1b6bb72b4:;
		};
	};
}

inline void _1b6bbea91_checkEnumItemInt(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d80948_eval>* _116243_eval, jule::Ptr<_1b2be887c_Enum>* _116261_e, jule::Ptr<_1b2db9740_Prim>* _116272_prim, jule::Ptr<_1b2be7d32_EnumItem>* _116290_item, jule::I64* _1162112_n) {
	if (_1b2be81ea_AutoExpr((*(_116290_item)).ptr())) {
		(*((*(_116290_item))))._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})});
		{
			
{
				_case_begin_1b6bc2863:;
				{
					(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Constant=static__1b2bc22e5_NewI64((*(_1162112_n)));
				}
			}
			_match_end_1b6bc27ec:;
		};
		(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116290_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1b2d7dc21_Data> _11778_d = _1b2d9e7ad_evalExpr((*(_116243_eval)), (*((*((*(_116290_item))))._field_Value))._field_Expr);;
		if ((_11778_d == nullptr)) {
			return;;
		};
		if ((!(_1b2d7e65b_IsConst(_11778_d.ptr())))) {
			_1b2d05e95_pushErr(_self_.ptr(), (*((*(*((*(_116290_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b2cc3094_ReferenceStack> _11848_refers = static_cast<jule::Ptr<_1b2cc3094_ReferenceStack>>(nullptr);;
		_1b2d0d486_checkAssignType(_self_, false, &((*((*((*(_116261_e))))._field_Kind))._field_Kind), &(_11778_d), (*((*(_116290_item))))._field_Token, _11848_refers);
		(*(*((*(_116290_item))))._field_Value.alloc)._field_Data=_11778_d;
		{
			
{
				_case_begin_1b6bc7ed9:;
				{
					(*(_1162112_n))=_1b2bc368c_ReadI64((*((*(*((*(_116290_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1b6bc7e62:;
		};
	};
}



inline void _1b6baa1b9_checkEnumItemsInt1(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db9740_Prim>* _119841_prim, jule::Ptr<_1b2be887c_Enum>* _119859_e) {
	jule::U64 _11997_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1b6babd9c:;
			{
				_11997_max=_1b2c73385_MaxU(_1b2db9ab4_Str((*(_119841_prim)).ptr()));
			}
		}
		_match_end_1b6bac012:;
	};
	jule::Ptr<_1b2d80948_eval> _12097_eval = _1b2d0cd6a_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));;
	jule::U64 _12107_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1b2be7d32_EnumItem> _12117_first = (*((*(_119859_e))))._field_Items[0LL];;
	_1b6bae036_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_12117_first), &(_12107_n));
	if (((*((*(_12117_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b6bab6c6:;
				{
					_12107_n=_1b2bc46e3_AsU64((*(*((*(_12117_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1b6bb7a89:;
		};
	};
	{
		auto expr = (*((*(_119859_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b6bb3a1e:;
		if (it != expr_end) {
			jule::Ptr<_1b2be7d32_EnumItem> _122315_item = *it;
			{
				if (((_1b2be81ea_AutoExpr(_122315_item.ptr()) && (_12107_n > 0LLU)) && ((jule::U64)(_11997_max - _12107_n) <= 0LLU))) {
					_1b2d05e95_pushErr(_self_, (*_122315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1b6bb3a1e;
				};
				(_12107_n)++;
				_1b6bae036_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_122315_item), &(_12107_n));
			}
			_iter_next_1b6bb3a1e:;
			++it;
			goto _iter_begin_1b6bb3a1e;
		}
		_iter_end_1b6bb3a1e:;
	};
}

inline void _1b6baa4a5_checkEnumItemsInt1(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2db9740_Prim>* _119841_prim, jule::Ptr<_1b2be887c_Enum>* _119859_e) {
	jule::I64 _11997_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1b6bbc94b:;
			{
				_11997_max=_1b2c730bb_MaxI(_1b2db9ab4_Str((*(_119841_prim)).ptr()));
			}
		}
		_match_end_1b6bbc8d5:;
	};
	jule::Ptr<_1b2d80948_eval> _12097_eval = _1b2d0cd6a_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));;
	jule::I64 _12107_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1b2be7d32_EnumItem> _12117_first = (*((*(_119859_e))))._field_Items[0LL];;
	_1b6bbea91_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_12117_first), &(_12107_n));
	if (((*((*(_12117_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b6bc0454:;
				{
					_12107_n=_1b2bc445c_AsI64((*(*((*(_12117_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1b6bc548c:;
		};
	};
	{
		auto expr = (*((*(_119859_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b6bc9bcd:;
		if (it != expr_end) {
			jule::Ptr<_1b2be7d32_EnumItem> _122315_item = *it;
			{
				if (((_1b2be81ea_AutoExpr(_122315_item.ptr()) && (_12107_n > 0LL)) && ((_11997_max - _12107_n) <= 0LL))) {
					_1b2d05e95_pushErr(_self_, (*_122315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1b6bc9bcd;
				};
				(_12107_n)++;
				_1b6bbea91_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_122315_item), &(_12107_n));
			}
			_iter_next_1b6bc9bcd:;
			++it;
			goto _iter_begin_1b6bc9bcd;
		}
		_iter_end_1b6bc9bcd:;
	};
}



inline void _1b2d14bc9_checkEnumItemsInt(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be887c_Enum>* _123339_e) {
	jule::Ptr<_1b2db9740_Prim> _12343_prim = _1b2db3ccd_Prim((*((*((*(_123339_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1b2c74a7e_IsSigInt((*(_12343_prim))._field_Kind)) {
			_case_begin_1b6bb988d:;
			{
				_1b6baa4a5_checkEnumItemsInt1(_self_, &(_12343_prim), _123339_e);
			}
		}
		else {
			_case_begin_1b6ba9916:;
			{
				_1b6baa1b9_checkEnumItemsInt1(_self_, &(_12343_prim), _123339_e);
			}
		}
		_match_end_1b6ba988e:;
	};
}



inline void _1b2d14e82_checkEnumDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be887c_Enum>* _124335_e) {
	if (_1b2aca8a2_IsIgnoreIdent((*((*(_124335_e))))._field_Ident)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1b2d06baa_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_124335_e))), &((*((*(_124335_e))))._field_Ident), false)) {
		_1b2d05e95_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124335_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_124335_e))))._field_Items.len() == 0LL)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124335_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1b6bd0057_checkEnumItemsDup(_self_, (*((*(_124335_e))))._field_Items);
	if (((*((*(_124335_e))))._field_Kind != nullptr)) {
		if ((!(_1b2d0b088_checkType(_self_, &((*((*(_124335_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4))))) {
			return;;
		};
	} else {
		(*((*(_124335_e))))._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	jule::Ptr<_1b2db9740_Prim> _12677_t = _1b2db3ccd_Prim((*((*((*(_124335_e))))._field_Kind))._field_Kind.ptr());;
	if ((_12677_t == nullptr)) {
		_1b2d05e95_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1b2dbcc0a_IsStr(_12677_t.ptr())) {
			_case_begin_1b6bd7702:;
			{
				_1b2d1402a_checkEnumItemsStr(_self_, _124335_e);
			}
		}
		else if (_1b2c75156_IsInt(_1b2db9ab4_Str(_12677_t.ptr()))) {
			_case_begin_1b6bd7438:;
			{
				_1b2d14bc9_checkEnumItemsInt(_self_, _124335_e);
			}
		}
		else {
			_case_begin_1b6bd73c2:;
			{
				_1b2d05e95_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b6bd6899:;
	};
}



inline void _1b2d1523a_checkTypeEnumDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bea087_TypeEnum>* _128439_e) {
	if (_1b2aca8a2_IsIgnoreIdent((*((*(_128439_e))))._field_Ident)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1b2d06baa_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_128439_e))), &((*((*(_128439_e))))._field_Ident), false)) {
		_1b2d05e95_pushErr(_self_, (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128439_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_128439_e))))._field_Items.len() == 0LL)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128439_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1b6bdd098_checkEnumItemsDup(_self_, (*((*(_128439_e))))._field_Items);
	{
		auto expr = &((*((*(_128439_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6bdd9e4:;
		if (it != expr_end) {
			jule::Ptr<_1b2be99b0_TypeEnumItem> _129815_item = *it;
			{
				if (((*(_129815_item))._field_Kind == nullptr)) {
					_1b2d05e95_pushErr(_self_, (*_129815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1b6bdd9e4;
				};
				jule::Bool _13034_ok = _1b2d0b088_checkType(_self_, &((*_129815_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));;
				if ((!(_13034_ok))) {
					goto _iter_next_1b6bdd9e4;
				};
				jule::Ptr<_1b2db9740_Prim> _13074_p = _1b2db3ccd_Prim((*((*_129815_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_13074_p != nullptr) && _1b2dbce91_IsAny(_13074_p))) {
					_1b2d05e95_pushErr(_self_, (*_129815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b6bdd9e4:;
			++it;
			goto _iter_begin_1b6bdd9e4;
		}
		_iter_end_1b6bdd9e4:;
	};
	if (((*((*(_128439_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1b2be99b0_TypeEnumItem> _13138_item = (*((*(_128439_e))))._field_Items[0LL];;
		_1b2db1627_TypeKind _13144_tk = _1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_128439_e)), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data4)};;
		if ((((*((*(_13138_item))._field_Kind))._field_Kind != nullptr) && _1b2db1d64_Equal((*((*(_13138_item))._field_Kind))._field_Kind, ((jule::Ptr<_1b2db1627_TypeKind>)((&(_13144_tk))))))) {
			_1b2d05e95_pushErr(_self_, (*_13138_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2bea40b_Str((*(_128439_e)).ptr()), &__jule_any_type5); __jule_collection; }));
		};
	};
}



inline jule::Bool _1b2d154c1_checkEnumDecls(jule::Ptr<_1b2d03091_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6be9a11:;
		if (it != expr_end) {
			jule::Ptr<_1b2be887c_Enum> _132515_e = *it;
			{
				_1b2d14e82_checkEnumDecl(_self_, &(_132515_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6be9a11:;
			++it;
			goto _iter_begin_1b6be9a11;
		}
		_iter_end_1b6be9a11:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2d15757_checkTypeEnumDecls(jule::Ptr<_1b2d03091_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6beb1d8:;
		if (it != expr_end) {
			jule::Ptr<_1b2bea087_TypeEnum> _133715_e = *it;
			{
				_1b2d1523a_checkTypeEnumDecl(_self_, &(_133715_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6beb1d8:;
			++it;
			goto _iter_begin_1b6beb1d8;
		}
		_iter_end_1b6beb1d8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2d15a98_checkDeclGenerics(_1b2d03091_sema* _self_, jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>* _134734_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _134734_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6beb78d:;
		if (it != expr_end) {
			jule::I64 _13497_i = it - expr->begin();
			jule::Ptr<_1b2aea5e7_GenericDecl> *_134910_g = it;
			{
				if (_1b2aca8a2_IsIgnoreIdent((*((*(_134910_g))))._field_Ident)) {
					_1b2d05e95_pushErr(_self_, (*(*(_134910_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b6beb78d;
				};
				_julec_label_1b6bed707:;
				{
					auto expr = _134734_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6bee1ec:;
					if (it != expr_end) {
						jule::I64 _13588_j = it - expr->begin();
						jule::Ptr<_1b2aea5e7_GenericDecl> *_135811_ct = it;
						{
							{
								
								if ((_13588_j >= _13497_i)) {
									_case_begin_1b6beecbe:;
									{
										goto _iter_end_1b6bee1ec;
									}
								}
								else if (((*(*(_134910_g)).alloc)._field_Ident == (*((*(_135811_ct))))._field_Ident)) {
									_case_begin_1b6beed57:;
									{
										_1b2d05e95_pushErr(_self_, (*(*(_134910_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_134910_g)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1b6bee1ec;
									}
								}
								_match_end_1b6beebc0:;
							};
						}
						_iter_next_1b6bee1ec:;
						++it;
						_13588_j++;
						goto _iter_begin_1b6bee1ec;
					}
					_iter_end_1b6bee1ec:;
				};
			}
			_iter_next_1b6beb78d:;
			++it;
			_13497_i++;
			goto _iter_begin_1b6beb78d;
		}
		_iter_end_1b6beb78d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2d15dd9_checkFnDeclParamsDup(_1b2d03091_sema* _self_, jule::Ptr<_1b2bda9b2_Fn>* _137437_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1b6beead2:;
	{
		auto expr = &((*((*(_137437_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c00ac2:;
		if (it != expr_end) {
			jule::I64 _13777_i = it - expr->begin();
			jule::Ptr<_1b2bd8edd_Param> *_137710_p = it;
			{
				{
					auto expr = &((*((*(_137437_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6c02a6e:;
					if (it != expr_end) {
						jule::Ptr<_1b2aea5e7_GenericDecl> *_137911_g = it;
						{
							if (((*((*(_137710_p))))._field_Ident == (*((*(_137911_g))))._field_Ident)) {
								__jule_func_result=false;
								_1b2d05e95_pushErr(_self_, (*(*(_137710_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137710_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1b6c00ac2;
							};
						}
						_iter_next_1b6c02a6e:;
						++it;
						goto _iter_begin_1b6c02a6e;
					}
					_iter_end_1b6c02a6e:;
				};
				_julec_label_1b6c04a82:;
				{
					auto expr = &((*((*(_137437_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6c03047:;
					if (it != expr_end) {
						jule::I64 _13898_j = it - expr->begin();
						jule::Ptr<_1b2bd8edd_Param> *_138911_jp = it;
						{
							{
								
								if ((_13898_j >= _13777_i)) {
									_case_begin_1b6c05643:;
									{
										goto _iter_end_1b6c03047;
									}
								}
								else if (_1b2aca8a2_IsIgnoreIdent((*(*(_137710_p)).alloc)._field_Ident) || _1b2aca8a2_IsIgnoreIdent((*((*(_138911_jp))))._field_Ident) || _1b2acab6b_IsAnonIdent((*(*(_137710_p)).alloc)._field_Ident) || _1b2acab6b_IsAnonIdent((*(*(_138911_jp)).alloc)._field_Ident)) {
									_case_begin_1b6c056cb:;
									{
										goto _iter_end_1b6c03047;
									}
								}
								else if (((*(*(_137710_p)).alloc)._field_Ident == (*((*(_138911_jp))))._field_Ident)) {
									_case_begin_1b6c05742:;
									{
										__jule_func_result=false;
										_1b2d05e95_pushErr(_self_, (*(*(_137710_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137710_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1b6c00ac2;
									}
								}
								_match_end_1b6c05500:;
							};
						}
						_iter_next_1b6c03047:;
						++it;
						_13898_j++;
						goto _iter_begin_1b6c03047;
					}
					_iter_end_1b6c03047:;
				};
			}
			_iter_next_1b6c00ac2:;
			++it;
			_13777_i++;
			goto _iter_begin_1b6c00ac2;
		}
		_iter_end_1b6c00ac2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2d1622a_checkFnDeclResultDup(_1b2d03091_sema* _self_, jule::Ptr<_1b2bda9b2_Fn>* _141137_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1b2bdae68_IsVoid((*(_141137_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_141137_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c08bb8:;
		if (it != expr_end) {
			jule::I64 _14187_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> *_141810_v = it;
			{
				if ((_1b2aca8a2_IsIgnoreIdent((*((*(_141810_v))))._field_Kind) || _1b2acab6b_IsAnonIdent((*(*(_141810_v)).alloc)._field_Kind))) {
					goto _iter_next_1b6c08bb8;
				};
				{
					auto expr = &((*((*(_141137_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6c0a2a2:;
					if (it != expr_end) {
						jule::Ptr<_1b2aea5e7_GenericDecl> *_142311_g = it;
						{
							if (((*(*(_141810_v)).alloc)._field_Kind == (*((*(_142311_g))))._field_Ident)) {
								goto _julec_label_1b6c0b847;
							};
						}
						_iter_next_1b6c0a2a2:;
						++it;
						goto _iter_begin_1b6c0a2a2;
					}
					_iter_end_1b6c0a2a2:;
				};
				{
					auto expr = &((*((*(_141137_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6c0a69d:;
					if (it != expr_end) {
						jule::Ptr<_1b2bd8edd_Param> *_142911_p = it;
						{
							if (((*(*(_141810_v)).alloc)._field_Kind == (*((*(_142911_p))))._field_Ident)) {
								goto _julec_label_1b6c0b847;
							};
						}
						_iter_next_1b6c0a69d:;
						++it;
						goto _iter_begin_1b6c0a69d;
					}
					_iter_end_1b6c0a69d:;
				};
				_julec_label_1b6c0bd20:;
				{
					auto expr = &((*((*((*(_141137_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6c0c21b:;
					if (it != expr_end) {
						jule::I64 _14378_j = it - expr->begin();
						jule::Ptr<_1b2ac7eba_Token> *_143711_jv = it;
						{
							{
								
								if ((_14378_j >= _14187_i)) {
									_case_begin_1b6c0ccaa:;
									{
										goto _iter_end_1b6c0c21b;
									}
								}
								else if (((*((*(_143711_jv))))._field_Kind == (*(*(_141810_v)).alloc)._field_Kind)) {
									_case_begin_1b6c0cd43:;
									{
										goto _julec_label_1b6c0b847;
									}
								}
								_match_end_1b6c0cb9a:;
							};
						}
						_iter_next_1b6c0c21b:;
						++it;
						_14378_j++;
						goto _iter_begin_1b6c0c21b;
					}
					_iter_end_1b6c0c21b:;
				};
				goto _iter_next_1b6c08bb8;
				_julec_label_1b6c0b847:;
				_1b2d05e95_pushErr(_self_, (*(_141810_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_141810_v)).alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1b6c08bb8:;
			++it;
			_14187_i++;
			goto _iter_begin_1b6c08bb8;
		}
		_iter_end_1b6c08bb8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2d1656b_checkFnVariadicParam(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _145642_f) {
	if (((*((*(_145642_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1b2bd8edd_Param> _14607_param = (*((*(_145642_f))))._field_Params[((*((*(_145642_f))))._field_Params.len() - 1LL)];;
	if (((*(_14607_param))._field_Variadic && (*_14607_param.alloc)._field_Reference)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*_14607_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1b2d16824_checkFnDeclPrototype(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _146942_f) {
	if (((*((*(_146942_f))))._field_Exceptional && (*((*(_146942_f))))._field_Binded)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_146942_f))))._field_Exceptional) {
		if (_1b2bdb485_IsEntryPoint((*(_146942_f)).ptr())) {
			_1b2d05e95_pushErr(_self_, (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1b2bdb71b_IsInit((*(_146942_f)).ptr())) {
			_1b2d05e95_pushErr(_self_, (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1b2d15a98_checkDeclGenerics(_self_, &((*((*(_146942_f))))._field_Generics))))) {
			_case_begin_1b6c14ae7:;
		}
		else if ((!(_1b2d15dd9_checkFnDeclParamsDup(_self_, _146942_f)))) {
			_case_begin_1b6c14b5d:;
		}
		else if ((!(_1b2d1622a_checkFnDeclResultDup(_self_, _146942_f)))) {
			_case_begin_1b6c14bc4:;
		}
		else if ((!(_1b2d1656b_checkFnVariadicParam(_self_, _146942_f)))) {
			_case_begin_1b6c14c3a:;
		}
		_match_end_1b6c12d8c:;
	};
}



inline jule::Bool _1b2d16cca_catchTraitInheritCycle(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be61c6_Trait> _149139_t1, jule::Ptr<_1b2be61c6_Trait> _149155_t2, _20d8ca601_Builder* _149172_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_149155_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c172d1:;
		if (it != expr_end) {
			jule::Ptr<_1b2db8d38_TypeSymbol> _149315_i = *it;
			{
				if (((*(_149315_i))._field_Kind == nullptr)) {
					goto _iter_next_1b6c172d1;
				};
				jule::Ptr<_1b2be61c6_Trait> _14978_t3 = _1b2db55d7_Trait((*_149315_i.alloc)._field_Kind.ptr());;
				if ((_149139_t1 == _14978_t3)) {
					_1b2d1ba5a_pushCycleError(_self_.ptr(), &((*(_149155_t2))._field_Ident), &((*(_14978_t3))._field_Ident), _149172_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1b2d16cca_catchTraitInheritCycle(_self_, _149139_t1, _14978_t3, _149172_message)))) {
					_1b2d1ba5a_pushCycleError(_self_, &((*_149155_t2.alloc)._field_Ident), &((*_14978_t3.alloc)._field_Ident), _149172_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6c172d1:;
			++it;
			goto _iter_begin_1b6c172d1;
		}
		_iter_end_1b6c172d1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2d1711b__checkTraitDeclInherits(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be61c6_Trait>* _151045_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_151045_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c1aa98:;
		if (it != expr_end) {
			jule::I64 _15128_i = it - expr->begin();
			jule::Ptr<_1b2db8d38_TypeSymbol> _151215_it = *it;
			{
				if ((!(_1b2d0b088_checkType(_self_, &(_151215_it), jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4))))) {
					__jule_func_result=false;
					goto _iter_next_1b6c1aa98;
				};
				jule::Ptr<_1b2be61c6_Trait> _15178_t2 = _1b2db55d7_Trait((*(_151215_it))._field_Kind.ptr());;
				if ((_15178_t2 == nullptr)) {
					_1b2d05e95_pushErr(_self_, (*((*_151215_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151045_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_151215_it))._field_Kind), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1b6c1aa98;
				};
				{
					auto expr = &((*((*(_151045_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6c1c924:;
					if (it != expr_end) {
						jule::I64 _15238_j = it - expr->begin();
						jule::Ptr<_1b2db8d38_TypeSymbol> _152311_it2 = *it;
						{
							if ((_15238_j >= _15128_i)) {
								goto _iter_end_1b6c1c924;
							};
							if ((((*(_152311_it2))._field_Kind != nullptr) && _1b2db1d64_Equal((*(_151215_it))._field_Kind, (*_152311_it2.alloc)._field_Kind))) {
								_1b2d05e95_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_15178_t2))._field_Ident, &__jule_any_type5); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1b6c1c924;
							};
						}
						_iter_next_1b6c1c924:;
						++it;
						_15238_j++;
						goto _iter_begin_1b6c1c924;
					}
					_iter_end_1b6c1c924:;
				};
				if (((*(_151045_t)) == _15178_t2)) {
					_1b2d05e95_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151045_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_20d8ca601_Builder _15379_message = static__20d8cb1c3_New(64LL);;
					__jule_func_result=(__jule_func_result && _1b2d16cca_catchTraitInheritCycle(_self_, (*(_151045_t)), _15178_t2, &(_15379_message)));
					if ((_20d8d584d_Len(&_15379_message) > 0LL)) {
						jule::Str _154010_errMsg = _20d8d53b9_Str(&_15379_message);;
						_20d8d55b7_Clear(&_15379_message);
						_1b2d1ba5a_pushCycleError(_self_, &((*((*(_151045_t))))._field_Ident), &((*(_15178_t2))._field_Ident), &(_15379_message));
						_154010_errMsg+=_20d8d53b9_Str(&_15379_message);
						_1b2d05e95_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_154010_errMsg, &__jule_any_type5); __jule_collection; }));
					};
				};
			}
			_iter_next_1b6c1aa98:;
			++it;
			_15128_i++;
			goto _iter_begin_1b6c1aa98;
		}
		_iter_end_1b6c1aa98:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1b2d173c4_checkTraitDeclInherits(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be61c6_Trait>* _155144_t) {
	{
		auto expr = &((*((*(_155144_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c1b3a1:;
		if (it != expr_end) {
			jule::I64 _15528_i = it - expr->begin();
			jule::Ptr<_1b2db8d38_TypeSymbol> _155215_it = *it;
			{
				jule::Ptr<_1b2be61c6_Trait> _15538_t1 = _1b2db55d7_Trait((*(_155215_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_155144_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6c27467:;
					if (it != expr_end) {
						jule::I64 _15549_j = it - expr->begin();
						jule::Ptr<_1b2db8d38_TypeSymbol> _155416_it2 = *it;
						{
							if ((_15549_j == _15528_i)) {
								goto _iter_next_1b6c27467;
							};
							jule::Ptr<_1b2be61c6_Trait> _15589_t2 = _1b2db55d7_Trait((*(_155416_it2))._field_Kind);;
							{
								auto expr = &((*(_15538_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b6c28c0a:;
								if (it != expr_end) {
									jule::Ptr<_1b2bda9b2_Fn> _155917_t1m = *it;
									{
										jule::Ptr<_1b2bda9b2_Fn> _156010_t2m = _1b2be6da8_FindMethod(_15589_t2.ptr(), (*(_155917_t1m))._field_Ident);;
										if ((_156010_t2m == nullptr)) {
											goto _iter_next_1b6c28c0a;
										};
										jule::Ptr<_1b2bdda70_FnIns> _15646_t1f = _1b2d104aa_getTraitCheckFnKind(_self_, &(_155917_t1m));;
										jule::Ptr<_1b2bdda70_FnIns> _15656_t2f = _1b2d104aa_getTraitCheckFnKind(_self_, &(_156010_t2m));;
										if ((!(_1b2bdea1b_equalTrait(_15646_t1f, &(_15656_t2f))))) {
											_1b2d05e95_pushErr(_self_, (*((*_155215_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_155144_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_15589_t2.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1b2be0951_GetKindStr(_15646_t1f, true), &__jule_any_type5); (*it++) = jule::Any(_1b2be0951_GetKindStr(_15656_t2f.ptr(), true), &__jule_any_type5); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1b6c28c0a:;
									++it;
									goto _iter_begin_1b6c28c0a;
								}
								_iter_end_1b6c28c0a:;
							};
						}
						_iter_next_1b6c27467:;
						++it;
						_15549_j++;
						goto _iter_begin_1b6c27467;
					}
					_iter_end_1b6c27467:;
				};
			}
			_iter_next_1b6c1b3a1:;
			++it;
			_15528_i++;
			goto _iter_begin_1b6c1b3a1;
		}
		_iter_end_1b6c1b3a1:;
	};
}



inline void _1b2d1767c_checkTraitDeclMethod(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _157642_f) {
	if (_1b2aca8a2_IsIgnoreIdent((*((*(_157642_f))))._field_Ident)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_157642_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1b2acab6b_IsAnonIdent((*((*(_157642_f))))._field_Ident)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_157642_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_157642_f))))._field_sema=_self_;
	_1b2d16824_checkFnDeclPrototype(_self_, _157642_f);
	jule::Ptr<_1b2bdda70_FnIns> _15847_ins = _1b2bdc255_instance((*(_157642_f)));;
	_1b2d11d08_reloadFnInsTypes(_self_, _15847_ins);
	(*(_15847_ins))._field_reloaded=true;
	_1b2bdc563_appendInstance((*(_157642_f)).ptr(), &(_15847_ins));
}



inline void _1b2d17935_checkTraitDeclMethods(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be61c6_Trait>* _159043_t) {
	{
		auto expr = &((*((*(_159043_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c31372:;
		if (it != expr_end) {
			jule::I64 _15918_i = it - expr->begin();
			jule::Ptr<_1b2bda9b2_Fn> _159115_f = *it;
			{
				_1b2d1767c_checkTraitDeclMethod(_self_, &(_159115_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1b2be753a_findMethodInherit((*(_159043_t)).ptr(), &((*(_159115_f))._field_Ident)) != nullptr)) {
					_1b2d05e95_pushErr(_self_, (*_159115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1b6c31372;
				};
				_julec_label_1b6c341ee:;
				{
					auto expr = &((*((*(_159043_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6c3462d:;
					if (it != expr_end) {
						jule::I64 _16078_j = it - expr->begin();
						jule::Ptr<_1b2bda9b2_Fn> _160711_jf = *it;
						{
							{
								
								if ((_16078_j >= _15918_i)) {
									_case_begin_1b6c351bc:;
									{
										goto _iter_end_1b6c3462d;
									}
								}
								else if (((*_159115_f.alloc)._field_Ident == (*(_160711_jf))._field_Ident)) {
									_case_begin_1b6c35255:;
									{
										_1b2d05e95_pushErr(_self_, (*_159115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1b6c3462d;
									}
								}
								_match_end_1b6c350ac:;
							};
						}
						_iter_next_1b6c3462d:;
						++it;
						_16078_j++;
						goto _iter_begin_1b6c3462d;
					}
					_iter_end_1b6c3462d:;
				};
			}
			_iter_next_1b6c31372:;
			++it;
			_15918_i++;
			goto _iter_begin_1b6c31372;
		}
		_iter_end_1b6c31372:;
	};
}



inline void _1b2d17bdd_checkTraitDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2be61c6_Trait>* _162636_t) {
	if (_1b2aca8a2_IsIgnoreIdent((*((*(_162636_t))))._field_Ident)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_162636_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1b2d06baa_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_162636_t))), &((*((*(_162636_t))))._field_Ident), false)) {
		_1b2d05e95_pushErr(_self_, (*((*(_162636_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_162636_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1b2d173c4_checkTraitDeclInherits(_self_, _162636_t);
	_1b2d17935_checkTraitDeclMethods(_self_, _162636_t);
}



inline jule::Bool _1b2d17e74_checkTraitDecls(jule::Ptr<_1b2d03091_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c3a47a:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> _164015_t = *it;
			{
				_1b2d17bdd_checkTraitDecl(_self_, &(_164015_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6c3a47a:;
			++it;
			goto _iter_begin_1b6c3a47a;
		}
		_iter_end_1b6c3a47a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2d18370_checkTraitImplMethods(_1b2d03091_sema* _self_, jule::Ptr<_1b2be61c6_Trait>* _165042_base, jule::Ptr<_1b2c9ee83_Impl>* _165057_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165057_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c3be60:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> *_165210_f = it;
			{
				if ((_1b2be6da8_FindMethod((*(_165042_base)).ptr(), (*((*(_165210_f))))._field_Ident) == nullptr)) {
					_1b2d05e95_pushErr(_self_, (*(*(_165210_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165042_base))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_165210_f)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1b6c3be60:;
			++it;
			goto _iter_begin_1b6c3be60;
		}
		_iter_end_1b6c3be60:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2d1876b_implToStruct(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _166134_dest, jule::Ptr<_1b2c9ee83_Impl>* _166154_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_166154_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c3e7d1:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _166515_f = *it;
			{
				if (((_1b2b0e81a_FindMethod((*(_166134_dest)).ptr(), (*(_166515_f))._field_Ident, (*_166515_f.alloc)._field_Statically) != nullptr) || (_1b2b0ee9c_FindField((*(_166134_dest)).ptr(), (*_166515_f.alloc)._field_Ident) != nullptr))) {
					_1b2d05e95_pushErr(_self_.ptr(), (*_166515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166134_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_166515_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1b6c3e7d1;
				};
				if ((((*((*(_166134_dest))))._field_Generics.len() > 0LL) && ((*_166515_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_166515_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b6c4286c:;
						if (it != expr_end) {
							jule::Ptr<_1b2aea5e7_GenericDecl> _167312_fg = *it;
							{
								{
									auto expr = &((*((*(_166134_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b6c432c9:;
									if (it != expr_end) {
										jule::Ptr<_1b2aea5e7_GenericDecl> _167413_dg = *it;
										{
											if (((*(_167312_fg))._field_Ident == (*(_167413_dg))._field_Ident)) {
												_1b2d05e95_pushErr(_self_, (*_167312_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1b6c432c9:;
										++it;
										goto _iter_begin_1b6c432c9;
									}
									_iter_end_1b6c432c9:;
								};
							}
							_iter_next_1b6c4286c:;
							++it;
							goto _iter_begin_1b6c4286c;
						}
						_iter_end_1b6c4286c:;
					};
				};
				_1b2d0701d_checkDirectives(_self_, &((*_166515_f.alloc)._field_Directives), jule::Any(_166515_f, &__jule_any_type10));
				(*_166515_f.alloc)._field_sema=_self_;
				(*_166515_f.alloc)._field_Owner=(*(_166134_dest));
				{ jule::Slice<jule::Ptr<_1b2bda9b2_Fn>> &__jule_push_dest = (*((*(_166134_dest))))._field_Methods; __jule_push_dest.push(_166515_f); };
			}
			_iter_next_1b6c3e7d1:;
			++it;
			goto _iter_begin_1b6c3e7d1;
		}
		_iter_end_1b6c3e7d1:;
	};
	{
		auto expr = &((*((*(_166154_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c3ebbb:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _169015_v = *it;
			{
				;
				if (((_1b2b0e81a_FindMethod((*(_166134_dest)).ptr(), (*(_169015_v))._field_Ident, true) != nullptr) || (_1b2b0eb5b_FindStatic((*(_166134_dest)).ptr(), (*_169015_v.alloc)._field_Ident) != nullptr))) {
					_1b2d05e95_pushErr(_self_, (*_169015_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166134_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_169015_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1b6c3ebbb;
				};
				{ jule::Slice<jule::Ptr<_1b2d26ca7_Var>> &__jule_push_dest = (*((*(_166134_dest))))._field_Statics; __jule_push_dest.push(_169015_v); };
			}
			_iter_next_1b6c3ebbb:;
			++it;
			goto _iter_begin_1b6c3ebbb;
		}
		_iter_end_1b6c3ebbb:;
	};
	return __jule_func_result;;
}



inline void _1b2d18a24_implTrait(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2c9ee83_Impl>* _170331_decl) {
	jule::Ptr<_1b2db1627_TypeKind> _17047_base_t = _1b2d0c177_selectType(_self_, &((*((*(_170331_decl))))._field_Base));;
	if ((_17047_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2be61c6_Trait> _17087_base = _1b2db55d7_Trait(_17047_base_t.ptr());;
	if ((_17087_base == nullptr)) {
		_1b2d05e95_pushErr(_self_, (*((*((*(_170331_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str(_17047_base_t.ptr()), &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2db1627_TypeKind> _17157_destT = _1b2d0c177_selectType(_self_, &((*((*(_170331_decl))))._field_Dest));;
	if ((_17157_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _17197_destS = _1b2db5351_Struct(_17157_destT.ptr());;
	if ((_17197_destS == nullptr)) {
		_1b2d05e95_pushErr(_self_, (*((*((*(_170331_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str(_17157_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2b0db6b_Struct> _17267_dest = (*(_17197_destS))._field_Decl;;
	if ((_1b2ace323_Dir((*((*(_17267_dest))._field_Token))._field_File.ptr()) != _1b2ace323_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1b2d05e95_pushErr(_self_, (*(*((*(_170331_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1b2d24c0b_pushImplemented(_17087_base, &(_17267_dest));
	_1b2d24ee7_pushImplements(&(_17267_dest), _17087_base);
	if (((*((*(_170331_decl))))._field_Statics.len() > 0LL)) {
		_1b2d05e95_pushErr(_self_, (*((*((*(_170331_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1b2d18370_checkTraitImplMethods(_self_, &(_17087_base), _170331_decl)))) {
			_case_begin_1b6c53262:;
		}
		else if ((!(_1b2d1876b_implToStruct(_self_, &(_17267_dest), _170331_decl)))) {
			_case_begin_1b6c532c8:;
		}
		_match_end_1b6c522a5:;
	};
}



inline void _1b2d18ccc_implStruct(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2c9ee83_Impl>* _174632_decl) {
	jule::Ptr<_1b2db1627_TypeKind> _17477_destT = _1b2d0c177_selectType(_self_, &((*((*(_174632_decl))))._field_Dest));;
	if ((_17477_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _17517_destS = _1b2db5351_Struct(_17477_destT.ptr());;
	if ((_17517_destS == nullptr)) {
		_1b2d05e95_pushErr(_self_, (*((*((*(_174632_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str(_17477_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2b0db6b_Struct> _17587_dest = (*(_17517_destS))._field_Decl;;
	if ((_1b2ace323_Dir((*((*(_17587_dest))._field_Token))._field_File.ptr()) != _1b2ace323_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1b2d05e95_pushErr(_self_, (*(*((*(_174632_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1b2d1876b_implToStruct(_self_, &(_17587_dest), _174632_decl)))) {
			_case_begin_1b6c590d1:;
		}
		_match_end_1b6c57695:;
	};
}



inline void _1b2d19085_implImpl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2c9ee83_Impl>* _177030_decl) {
	{
		
		if (_1b2ca037e_IsTraitImpl((*(_177030_decl)).ptr())) {
			_case_begin_1b6c59b70:;
			{
				_1b2d18a24_implTrait(_self_, _177030_decl);
			}
		}
		else if (_1b2ca0615_IsStructImpl((*(_177030_decl)).ptr())) {
			_case_begin_1b6c59c19:;
			{
				_1b2d18ccc_implStruct(_self_, _177030_decl);
			}
		}
		_match_end_1b6c59a4e:;
	};
}



inline void _1b2d193e8_checkVarDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d26ca7_Var>* _178134_decl, jule::Trait _178150_l) {
	if (_1b2aca8a2_IsIgnoreIdent((*((*(_178134_decl))))._field_Ident)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1b2d2744a_IsTypeInferred((*(_178134_decl)).ptr())) {
		if ((!(_1b2d271b4_IsInitialized((*(_178134_decl)).ptr())))) {
			_1b2d05e95_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1b2cc3094_ReferenceStack> _17918_refers = static_cast<jule::Ptr<_1b2cc3094_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _178150_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4)) {
				_case_begin_1b6c5dd3e:;
				{
					_17918_refers=(*((*(_178134_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)) {
				_case_begin_1b6c5e317:;
				{
					_17918_refers=_1b2cb0229_getOwnerRefers(_178150_l.cast_ptr<_1b2cab830_scopeChecker>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));
				}
			}
			else {
				_case_begin_1b6c5de2c:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:1798:5"));;
				}
			}
			_match_end_1b6c5ddb6:;
		};
		(*((*((*(_178134_decl))))._field_Kind))._field_Kind=_1b2d0b53e_checkTypeRefers(_self_, &((*(*((*(_178134_decl))))._field_Kind.alloc)._field_Decl), _178150_l, _17918_refers);
	};
	if ((*((*(_178134_decl))))._field_Reference) {
		if ((*((*(_178134_decl))))._field_Constant) {
			_1b2d05e95_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Statically) {
			_1b2d05e95_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1b2d271b4_IsInitialized((*(_178134_decl)).ptr())))) {
		if ((*((*(_178134_decl))))._field_Constant) {
			_1b2d05e95_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Statically) {
			_1b2d05e95_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Reference) {
			_1b2d05e95_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1b2d196a1_checkGlobalVarDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d26ca7_Var>* _182740_decl) {
	if (_1b2d06baa_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_182740_decl))), &((*((*(_182740_decl))))._field_Ident), (*((*(_182740_decl))))._field_Binded)) {
		_1b2d05e95_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_182740_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_182740_decl))))._field_Binded && (*((*(_182740_decl))))._field_Constant)) {
		_1b2d05e95_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_182740_decl))))._field_Binded)) && (!((*((*(_182740_decl))))._field_Constant))) && (!((*((*(_182740_decl))))._field_Statically)))) {
		_1b2d05e95_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1b2d0701d_checkDirectives(_self_, &((*((*(_182740_decl))))._field_Directives), jule::Any((*(_182740_decl)), &__jule_any_type7));
	_1b2d193e8_checkVarDecl(_self_, _182740_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));
}



inline jule::Bool _1b2d19937_checkGlobalDecls(jule::Ptr<_1b2d03091_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c6aee4:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _184515_decl = *it;
			{
				_1b2d196a1_checkGlobalVarDecl(_self_, &(_184515_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6c6aee4:;
			++it;
			goto _iter_begin_1b6c6aee4;
		}
		_iter_end_1b6c6aee4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2d19d33_checkStructTraitImpl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _185542_strct, jule::Ptr<_1b2be61c6_Trait>* _185563_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_185563_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c6c8ca:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _185615_tf = *it;
			{
				jule::Bool _18578_exist = false;;
				jule::Ptr<_1b2bda9b2_Fn> _18588_sf = _1b2b0e81a_FindMethod((*(_185542_strct)).ptr(), (*(_185615_tf))._field_Ident, (*_185615_tf.alloc)._field_Statically);;
				jule::Ptr<_1b2bdda70_FnIns> _18594_tfK = _1b2d104aa_getTraitCheckFnKind(_self_, &(_185615_tf));;
				if ((_18588_sf != nullptr)) {
					jule::Ptr<_1b2bdda70_FnIns> _18619_sfK = _1b2d104aa_getTraitCheckFnKind(_self_, &(_18588_sf));;
					if ((_18619_sfK != nullptr)) {
						_18578_exist=_1b2bdea1b_equalTrait(_18594_tfK, &(_18619_sfK));
					};
				};
				if (_18578_exist) {
					jule::Ptr<_1b2adc809_Directive> _18675_d = _1b2da8223_findDirective(&((*_18588_sf.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_18675_d != nullptr)) {
						_1b2d05e95_pushErr(_self_, (*_18675_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1b2d05e95_pushErr(_self_, (*((*(_185542_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185563_trt))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1b2be0951_GetKindStr(_18594_tfK, true), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1b6c6c8ca:;
			++it;
			goto _iter_begin_1b6c6c8ca;
		}
		_iter_end_1b6c6c8ca:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2d1a174_checkStructImpls(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _188138_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188138_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c73cdd:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> _188315_trt = *it;
			{
				__jule_func_result=(_1b2d19d33_checkStructTraitImpl(_self_, _188138_s, &(_188315_trt)) && __jule_func_result);
			}
			_iter_next_1b6c73cdd:;
			++it;
			goto _iter_begin_1b6c73cdd;
		}
		_iter_end_1b6c73cdd:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b2d1a4b5_checkStructFields(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _188939_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188939_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c75284:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0ac78_Field> _189115_f = *it;
			{
				(*(_189115_f))._field_Owner=(*(_188939_st));
				{
					auto expr = &((*((*(_188939_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6c75eaa:;
					if (it != expr_end) {
						jule::Ptr<_1b2b0ac78_Field> _189311_cf = *it;
						{
							if ((_189115_f == _189311_cf)) {
								goto _iter_end_1b6c75eaa;
							} else if (((*_189115_f.alloc)._field_Ident == (*(_189311_cf))._field_Ident)) {
								_1b2d05e95_pushErr(_self_.ptr(), (*_189115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_189115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1b6c75eaa:;
						++it;
						goto _iter_begin_1b6c75eaa;
					}
					_iter_end_1b6c75eaa:;
				};
			}
			_iter_next_1b6c75284:;
			++it;
			goto _iter_begin_1b6c75284;
		}
		_iter_end_1b6c75284:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1b2d1a76d_checkStructDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _190637_s) {
	if (_1b2aca8a2_IsIgnoreIdent((*((*(_190637_s))))._field_Ident)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_190637_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1b2d06baa_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_190637_s))), &((*((*(_190637_s))))._field_Ident), (*((*(_190637_s))))._field_Binded)) {
		_1b2d05e95_pushErr(_self_, (*((*(_190637_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_190637_s))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1b2d0701d_checkDirectives(_self_, &((*((*(_190637_s))))._field_Directives), jule::Any((*(_190637_s)), &__jule_any_type9));
	{
		
		if ((!(_1b2d15a98_checkDeclGenerics(_self_, &((*((*(_190637_s))))._field_Generics))))) {
			_case_begin_1b6c7b389:;
		}
		else if ((!(_1b2d1a4b5_checkStructFields(_self_, _190637_s)))) {
			_case_begin_1b6c7b400:;
		}
		else if ((!(_1b2d1a174_checkStructImpls(_self_, _190637_s)))) {
			_case_begin_1b6c7b466:;
		}
		else if ((!(_1b2d1b3a6_checkFuncDeclsBy(_self_, &((*((*(_190637_s))))._field_Methods))))) {
			_case_begin_1b6c7b4cc:;
		}
		_match_end_1b6c7b257:;
	};
}



inline jule::Bool _1b2d1aa04_checkStructDecls(jule::Ptr<_1b2d03091_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c7d831:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _192615_s = *it;
			{
				_1b2d1a76d_checkStructDecl(_self_, &(_192615_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6c7d831:;
			++it;
			goto _iter_begin_1b6c7d831;
		}
		_iter_end_1b6c7d831:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b2d1acac_checkAnonFuncDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _193639_f) {
	(*((*(_193639_f))))._field_sema=_self_;
	_1b2d16824_checkFnDeclPrototype(_self_, _193639_f);
}



inline void _1b2d1b065_checkFuncDecl(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _194135_f) {
	if (_1b2aca8a2_IsIgnoreIdent((*((*(_194135_f))))._field_Ident)) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1b2bdb9a2_IsAnon((*(_194135_f)).ptr())) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1b2d0701d_checkDirectives(_self_, &((*((*(_194135_f))))._field_Directives), jule::Any((*(_194135_f)), &__jule_any_type10));
	_1b2d1acac_checkAnonFuncDecl(_self_, _194135_f);
	if ((((*((*(_194135_f))))._field_Owner == nullptr) && _1b2d06baa_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_194135_f))), &((*((*(_194135_f))))._field_Ident), (*((*(_194135_f))))._field_Binded))) {
		if ((*((*(_194135_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1b2bda9b2_Fn> _19535_init = _1b2d04658_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_19535_init != nullptr)) {
				return;;
			};
		};
		_1b2d05e95_pushErr(_self_, (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_194135_f))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b2d1b3a6_checkFuncDeclsBy(jule::Ptr<_1b2d03091_sema> _self_, jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>* _196338_funcs) {
	{
		auto expr = _196338_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c86240:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _196415_f = *it;
			{
				_1b2d1b065_checkFuncDecl(_self_, &(_196415_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1b6c86240:;
			++it;
			goto _iter_begin_1b6c86240;
		}
		_iter_end_1b6c86240:;
	};
	return true;;
}



inline jule::Bool _1b2d1b63c_checkFuncDecls(jule::Ptr<_1b2d03091_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1b2d1b3a6_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1b2d1ba5a_pushCycleError(_1b2d03091_sema* _self_, jule::Str* _197927_st1, jule::Str* _197938_st2, _20d8ca601_Builder* _197953_message) {
	;
	jule::Str _19813_refersTo = _20daa6403_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_197927_st1)), &__jule_any_type5); (*it++) = jule::Any((*(_197938_st2)), &__jule_any_type5); __jule_collection; }));;
	jule::Str _19823_m = _20d8d53b9_Str(_197953_message);;
	_20d8d4ac2_WriteStr(_197953_message, _20d8b7302_Repeat(jule::Str::lit(" ", 1), 7LL));
	_20d8d4ac2_WriteStr(_197953_message, _19813_refersTo);
	_20d8d4d7a_WriteByte(_197953_message, '\n');
	_20d8d4ac2_WriteStr(_197953_message, _19823_m);
}



inline void _1b2d1c20e_checkPackageDecls(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c8d027:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _200615_f = *it;
			{
				_1b2d05a77_setCurrentFile(_self_.ptr(), _200615_f);
				if ((!(_1b2d139b9_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b6c8d027:;
			++it;
			goto _iter_begin_1b6c8d027;
		}
		_iter_end_1b6c8d027:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c8d4ab:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _201315_f = *it;
			{
				_1b2d05a77_setCurrentFile(_self_, _201315_f);
				if ((!(_1b2d17e74_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b6c8d4ab:;
			++it;
			goto _iter_begin_1b6c8d4ab;
		}
		_iter_end_1b6c8d4ab:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c8e4bd:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _202015_f = *it;
			{
				_1b2d05a77_setCurrentFile(_self_, _202015_f);
				if ((!(_1b2d19937_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b6c8e4bd:;
			++it;
			goto _iter_begin_1b6c8e4bd;
		}
		_iter_end_1b6c8e4bd:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6c90524:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _202715_f = *it;
			{
				_1b2d05a77_setCurrentFile(_self_, _202715_f);
				{
					
					if ((!(_1b2d1b63c_checkFuncDecls(_self_)))) {
						_case_begin_1b6c91b74:;
					}
					else if ((!(_1b2d1aa04_checkStructDecls(_self_)))) {
						_case_begin_1b6c91c1d:;
					}
					else {
						_case_begin_1b6c915be:;
						{
							goto _iter_next_1b6c90524;
						}
					}
					_match_end_1b6c91aca:;
				};
				return;;
			}
			_iter_next_1b6c90524:;
			++it;
			goto _iter_begin_1b6c90524;
		}
		_iter_end_1b6c90524:;
	};
}



inline void _1b2d1c572_checkDataForTypeInference(_1b2d03091_sema* _self_, jule::Ptr<_1b2d7dc21_Data>* _203942_d, jule::Ptr<_1b2ac7eba_Token>* _203953_errToken) {
	{
		
		if (_1b2d7e13e_IsNil((*(_203942_d)).ptr())) {
			_case_begin_1b6c92d1d:;
			{
				_1b2d05e95_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1b2d7e3c5_IsVoid((*(_203942_d)).ptr())) {
			_case_begin_1b6c92db7:;
			{
				_1b2d05e95_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_203942_d))))._field_Kind))._field_Variadic) {
			_case_begin_1b6c92e2d:;
			{
				_1b2d05e95_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b6c92bdb:;
	};
}



inline void _1b2d1c82a_checkVarValue(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d26ca7_Var>* _205135_v) {
	if (_1b2d2744a_IsTypeInferred((*(_205135_v)).ptr())) {
		(*((*(_205135_v))))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=(*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Kind});
		_1b2d1c572_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1b2d12c1b_checkValidityForInitExpr(_self_, (*((*(_205135_v))))._field_Mutable, (*((*(_205135_v))))._field_Reference, &((*((*((*(_205135_v))))._field_Kind))._field_Kind), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205135_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1b2dc1060_Arr> _20648_arr = _1b2db4a9d_Arr((*((*((*(_205135_v))))._field_Kind))._field_Kind.ptr());;
		if ((_20648_arr != nullptr)) {
			if ((*_20648_arr.alloc)._field_Auto) {
				jule::Ptr<_1b2dc1060_Arr> _20676_dataArr = _1b2db4a9d_Arr((*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_20676_dataArr != nullptr)) {
					(*_20648_arr.alloc)._field_N=(*_20676_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1b2d0d486_checkAssignType(_self_, (*((*(_205135_v))))._field_Reference, &((*(*((*(_205135_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_205135_v))))._field_Refers)) {
			_1b2d12c1b_checkValidityForInitExpr(_self_, (*((*(_205135_v))))._field_Mutable, (*((*(_205135_v))))._field_Reference, &((*(*((*(_205135_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205135_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_205135_v))))._field_Reference && (!(_1b2dcd534_isValidForRef(&((*((*((*(_205135_v))))._field_Kind))._field_Kind)))))) {
		_1b2d05e95_pushErr(_self_.ptr(), (*((*(_205135_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(*((*(_205135_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
	};
	if ((*((*(_205135_v))))._field_Constant) {
		if (((!(_1b2d7e65b_IsConst((*((*((*(_205135_v))))._field_Value))._field_Data.ptr()))) && (!(_1b2db5d8a_comptime((*(*((*((*(_205135_v))))._field_Value))._field_Data.alloc)._field_Kind.ptr()))))) {
			_1b2d05e95_pushErr(_self_, (*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_205135_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1b2db5b04_Tup((*((*((*(_205135_v))))._field_Kind))._field_Kind) != nullptr)) {
		(*(*((*(_205135_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1b2d1cb8d_evalVarValue(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d26ca7_Var>* _210434_decl, jule::Trait _210450_l) {
	if ((!(_1b2d271b4_IsInitialized((*(_210434_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1b2d80948_eval> _21097_eval = static_cast<jule::Ptr<_1b2d80948_eval>>(nullptr);;
	if (((*((*(_210434_decl))))._field_Kind != nullptr)) {
		_21097_eval=_1b2d0c62d_evalpd(_self_, _210450_l, (*(*((*(_210434_decl))))._field_Kind.alloc)._field_Kind, (*(_210434_decl)));
	} else {
		_21097_eval=_1b2d0c62d_evalpd(_self_, _210450_l, nullptr, (*(_210434_decl)));
	};
	(*(_21097_eval))._field_immutable=(!((*((*(_210434_decl))))._field_Mutable));
	(*((*((*(_210434_decl))))._field_Value))._field_Data=_1b2d9e7ad_evalExpr(_21097_eval, (*(*((*(_210434_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1b2d1d001_checkVar(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2d26ca7_Var>* _212130_decl, jule::Trait _212146_l) {
	_1b2d1cb8d_evalVarValue(_self_, _212130_decl, _212146_l);
	if (((*((*((*(_212130_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1b2d1c82a_checkVarValue(_self_, _212130_decl);
}



inline void _1b2d1d1ee_checkGlobals(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6caa275:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _213115_decl = *it;
			{
				if ((*(_213115_decl))._field_Binded) {
					goto _iter_next_1b6caa275;
				};
				if (((_1b2d271b4_IsInitialized(_213115_decl) && ((*((*_213115_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1b2d2744a_IsTypeInferred(_213115_decl) && ((*((*_213115_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1b2d1d001_checkVar(_self_, &(_213115_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));
				};
			}
			_iter_next_1b6caa275:;
			++it;
			goto _iter_begin_1b6caa275;
		}
		_iter_end_1b6caa275:;
	};
}



inline jule::Ptr<_1b2bdda70_FnIns> _1b2d1d5ea_readyToCheckFn(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _214536_s, jule::Ptr<_1b2bda9b2_Fn>* _214556_f) {
	jule::Ptr<_1b2bdda70_FnIns> _21467_ins = _1b2bdc255_instance((*(_214556_f)));;
	if (((*((*(_214556_f))))._field_Instances.len() != 0LL)) {
		return _21467_ins;;
	};
	(*(_21467_ins))._field_Owner=(*(_214536_s));
	_1b2bdc563_appendInstance((*(_214556_f)).ptr(), &(_21467_ins));
	(*_21467_ins.alloc)._field_reloaded=true;
	if (_1b2d11d08_reloadFnInsTypes(_self_, _21467_ins)) {
		return _21467_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1b2d1d9e6_checkGenericFn(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _216136_f, jule::Ptr<_1b2ac7eba_Token>* _216152_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1b2d11d08_reloadFnInsTypes(_self_, (*(_216136_f)));
	(*((*(_216136_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _21677_existInstance = _1b2bdc563_appendInstance((*((*(_216136_f))))._field_Decl.ptr(), _216136_f);;
	if ((!(_1b2d10961_checkConstraintsFn(_self_, _216136_f, _216152_et, _21677_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_21677_existInstance != nullptr)) {
		(*(_216136_f))=_21677_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1b2d21554_checkFnInsCaller(_self_, _216136_f, (*(_216152_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1b2d1dd59_checkTypeMethod(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _218437_s, jule::Ptr<_1b2bda9b2_Fn>* _218457_f) {
	if (((*((*(_218457_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _21897_ins = (*((*(_218457_f))))._field_Instances[0LL];;
	if (((*((*(_21897_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1b2d2180c_checkFnIns(_self_, &(_21897_ins));
}



inline jule::Ptr<_1b2bdda70_FnIns> _1b2d1e310_checkStructInsOp(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _219738_s, jule::Ptr<_1b2bda9b2_Fn>* _219758_f, jule::Fn<jule::Bool,jule::Ptr<_1b2bda9b2_Fn>> _219766_p) {
	if (((((*(_219758_f)) == nullptr) || ((*((*(_219758_f))))._field_Generics.len() > 0LL)) || (!(_219766_p((*(_219758_f))))))) {
		return nullptr;;
	};
	return (*((*(_219758_f))))._field_Instances[0LL];;
}



inline jule::Bool _1b2d1e70b_checkStructEnv(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _220736_s, jule::Ptr<_1b2ac7eba_Token> _220755_errorToken) {
	jule::Bool __jule_func_result = false;
	_1b2dc3a24_typeChecker _22087_tc = _1b2dc3a24_typeChecker{._field_s=(*((*((*(_220736_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4), ._field_lookup=jule::Trait((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4), ._field_referencer=jule::new_ptr<_1b2dc2a34_referencer>(_1b2dc2a34_referencer{._field_ident=(*(*((*(_220736_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_220736_s))))._field_Decl, &__jule_any_type9), ._field_refs=nullptr}), ._field_refers=(*((*(_220736_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1b2db0835_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_220736_s))))._field_Generics.len() > 0LL)) {
		_22087_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>::alloc(0LL, (*((*(_220736_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2db0835_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_220736_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6cb9e22:;
			if (it != expr_end) {
				jule::I64 _22219_i = it - expr->begin();
				jule::Ptr<_1b2daee72_InsGeneric> _222116_g = *it;
				{
					jule::Ptr<_1b2aea5e7_GenericDecl> _22229_decl = (*(*((*(_220736_s))))._field_Decl.alloc)._field_Generics[_22219_i];;
					{ jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> &__jule_push_dest = _22087_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1b2db0835_TypeAlias>(_1b2db0835_TypeAlias{._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_22229_decl.alloc)._field_Token, ._field_Ident=(*(_22229_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=(*(_222116_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1b6cb9e22:;
				++it;
				_22219_i++;
				goto _iter_begin_1b6cb9e22;
			}
			_iter_end_1b6cb9e22:;
		};
	};
	jule::Ptr<_1b2be1cb5_SymTab> _22317_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1b2d05a77_setCurrentFile(_self_, _22317_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_220736_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1b2be1cb5_SymTab> _22358_file = _1b2d01c0a_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_220736_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_22358_file != nullptr)) {
			_1b2d05a77_setCurrentFile(_self_, _22358_file);
		};
	};
	if (((*((*(_220736_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1b2c9cb84_constraintChecker> _22428_cc = _1b2d0ab8c_constraintChecker(_self_);;
		(*(_22428_cc))._field_et=_220755_errorToken;
		(*_22428_cc.alloc)._field_si=(*(_220736_s));
		(*_22428_cc.alloc)._field_genericsA=_22087_tc._field_useGenerics;
		(*_22428_cc.alloc)._field_uniq=true;
		if ((!(_1b2c9daec_check(_22428_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_220736_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _22558_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_22087_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_220736_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6cc875a:;
			if (it != expr_end) {
				jule::Ptr<_1b2d26ca7_Var> _225716_v = *it;
				{
					_1b2d193e8_checkVarDecl(_self_, &(_225716_v), jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));
					_1b2d1d001_checkVar(_self_, &(_225716_v), jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _22558_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1b6cc875a:;
				++it;
				goto _iter_begin_1b6cc875a;
			}
			_iter_end_1b6cc875a:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_22087_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1b2d80948_eval> _22687_eval = _1b2d0cd6a_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));;
	(*((*(_220736_s))))._field_Comparable=(!((*(*((*(_220736_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_220736_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ccc220:;
		if (it != expr_end) {
			jule::Ptr<_1b2b10e26_FieldIns> _227015_f = *it;
			{
				jule::Ptr<_1b2db1627_TypeKind> _22718_kind = _1b2dcb60e_checkDecl(&_22087_tc, &((*((*((*(_227015_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_22718_kind != nullptr) && __jule_func_result);
				if ((_22718_kind == nullptr)) {
					if (((_self_ != (*(*((*(_220736_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_220736_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_220736_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1b6ccc220;
				};
				(*_227015_f.alloc)._field_Kind=_22718_kind;
				(*((*(_220736_s))))._field_Mutable=((*((*(_220736_s))))._field_Mutable || ((!((*(*(_227015_f))._field_Decl.alloc)._field_Mutable)) && _1b2db300d_Mutable((*(_227015_f))._field_Kind)));
				(*((*(_220736_s))))._field_Comparable=((*((*(_220736_s))))._field_Comparable && _1b2db2c77_Comparable((*(_227015_f))._field_Kind));
				if (((*(*(_227015_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1b6ccc220;
				};
				(*(_22687_eval))._field_prefix=(*_227015_f.alloc)._field_Kind;
				(*_22687_eval.alloc)._field_field=_227015_f;
				(*_227015_f.alloc)._field_Default=_1b2d9e7ad_evalExpr(_22687_eval, (*(*(_227015_f))._field_Decl.alloc)._field_Default);
				if (((*_227015_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1b6ccc220;
				};
				;
				_1b2d0d486_checkAssignType(_self_, false, &((*_227015_f.alloc)._field_Kind), &((*_227015_f.alloc)._field_Default), (*((*(*(_227015_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_220736_s))))._field_Refers);
			}
			_iter_next_1b6ccc220:;
			++it;
			goto _iter_begin_1b6ccc220;
		}
		_iter_end_1b6ccc220:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b2d1eb07_precheckStructIns(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _230439_s, jule::Ptr<_1b2ac7eba_Token> _230458_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1b2d1e70b_checkStructEnv(_self_, _230439_s, _230458_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_230439_s))))._field_Comparable && ((*((*(_230439_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1b2bda9b2_Fn> _23158_decl = _1b27811e5_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_230439_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6cd80b6:;
			if (it != expr_end) {
				jule::Ptr<_1b2b10e26_FieldIns> _231616_field = *it;
				{
					jule::Ptr<_1b2dc1060_Arr> _23179_arr = _1b2db4a9d_Arr((*(_231616_field))._field_Kind.ptr());;
					if ((_23179_arr == nullptr)) {
						goto _iter_next_1b6cd80b6;
					};
					jule::Ptr<_1b2bdda70_FnIns> _23219_f = _1b2bdbebe_instanceForce(_23158_decl);;
					(*(_23219_f))._field_Generics=jule::append((*_23219_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1b2daee72_InsGeneric>(_1b2daee72_InsGeneric{._field_Kind=(*(_23179_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b2d1d9e6_checkGenericFn(_self_, &(_23219_f), &((*((*_231616_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/sema.jule:2325:6"));;
					};
					_1b2cc3c10_Push((*((*(_230439_s))))._field_Refers.ptr(), jule::Any(_23219_f, &__jule_any_type63));
				}
				_iter_next_1b6cd80b6:;
				++it;
				goto _iter_begin_1b6cd80b6;
			}
			_iter_end_1b6cd80b6:;
		};
	};
	{
		auto expr = &((*((*(_230439_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6cdc120:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _233115_f = *it;
			{
				if (((*(_233115_f))._field_Generics.len() == 0LL)) {
					if ((_1b2d1d5ea_readyToCheckFn(_self_, _230439_s, &(_233115_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1b6cdc120:;
			++it;
			goto _iter_begin_1b6cdc120;
		}
		_iter_end_1b6cdc120:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b2d1edb0_checkStructIns(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns>* _234136_s) {
	{
		auto expr = &((*((*(_234136_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6cddae4:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _234215_f = *it;
			{
				_1b2d1dd59_checkTypeMethod(_self_, _234136_s, &(_234215_f));
			}
			_iter_next_1b6cddae4:;
			++it;
			goto _iter_begin_1b6cddae4;
		}
		_iter_end_1b6cddae4:;
	};
}



inline void _1b2d20168_checkTypeStruct(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _234737_s) {
	if ((*((*(_234737_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_234737_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_234737_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ce05eb:;
		if (it != expr_end) {
			jule::Ptr<_1b2b119c6_StructIns> _236015_ins = *it;
			{
				_1b2d1edb0_checkStructIns(_self_, &(_236015_ins));
			}
			_iter_next_1b6ce05eb:;
			++it;
			goto _iter_begin_1b6ce05eb;
		}
		_iter_end_1b6ce05eb:;
	};
}



inline void _1b2d20366_checkStructTypes(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ce1597:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _236615_s = *it;
			{
				_1b2d20168_checkTypeStruct(_self_, &(_236615_s));
			}
			_iter_next_1b6ce1597:;
			++it;
			goto _iter_begin_1b6ce1597;
		}
		_iter_end_1b6ce1597:;
	};
}



inline void _1b2d2061e_checkStructInsOperators(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b119c6_StructIns> _237144_s) {
	{
		auto expr = &((*(_237144_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ce2532:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _237215_m = *it;
			{
				{
					auto &_match_expr{ (*(_237215_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1b6ce2bb4:;
						{
							(*(_237144_s))._field_Operators._field_Eq=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d28b88_Eq);
							(*_237144_s.alloc)._field_Comparable=((*_237144_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1b6ce32ad:;
						{
							(*(_237144_s))._field_Operators._field_Gt=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d28e52_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1b6ce3324:;
						{
							(*(_237144_s))._field_Operators._field_GtEq=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2921b_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1b6ce338a:;
						{
							(*(_237144_s))._field_Operators._field_Lt=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d294d5_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1b6ce3401:;
						{
							(*(_237144_s))._field_Operators._field_LtEq=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2979e_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1b6ce3478:;
						{
							(*(_237144_s))._field_Operators._field_Shl=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d29ddc_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1b6ce3500:;
						{
							(*(_237144_s))._field_Operators._field_Shr=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2a1a6_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1b6ce3577:;
						{
							(*(_237144_s))._field_Operators._field_Add=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2a470_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1b6ce35ee:;
						{
							(*(_237144_s))._field_Operators._field_Sub=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2a739_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1b6ce3676:;
						{
							(*(_237144_s))._field_Operators._field_Div=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2aa03_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1b6ce36ed:;
						{
							(*(_237144_s))._field_Operators._field_Mul=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2acbc_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1b6ce3775:;
						{
							(*(_237144_s))._field_Operators._field_Mod=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2b086_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1b6ce37ec:;
						{
							(*(_237144_s))._field_Operators._field_BitAnd=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2b350_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1b6ce3874:;
						{
							(*(_237144_s))._field_Operators._field_BitOr=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2b619_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1b6ce38eb:;
						{
							(*(_237144_s))._field_Operators._field_BitXor=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2b8d3_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1b6ce3973:;
						{
							(*(_237144_s))._field_Operators._field_Neg=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2c021_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1b6ce39ea:;
						{
							(*(_237144_s))._field_Operators._field_Pos=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2c2da_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1b6ce3a72:;
						{
							(*(_237144_s))._field_Operators._field_BitNot=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2c5a4_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1b6ce3ae9:;
						{
							(*(_237144_s))._field_Operators._field_AddAssign=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2cbe2_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1b6ce3b71:;
						{
							(*(_237144_s))._field_Operators._field_SubAssign=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2ceab_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1b6ce3be8:;
						{
							(*(_237144_s))._field_Operators._field_DivAssign=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2d275_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1b6ce3c70:;
						{
							(*(_237144_s))._field_Operators._field_MulAssign=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2d53e_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1b6ce3ce7:;
						{
							(*(_237144_s))._field_Operators._field_ModAssign=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2d808_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1b6ce3d6e:;
						{
							(*(_237144_s))._field_Operators._field_ShlAssign=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2dac2_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1b6ce3de6:;
						{
							(*(_237144_s))._field_Operators._field_ShrAssign=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2dd8b_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1b6ce3e6d:;
						{
							(*(_237144_s))._field_Operators._field_BitOrAssign=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2e155_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1b6ce3ee5:;
						{
							(*(_237144_s))._field_Operators._field_BitAndAssign=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2e41e_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1b6ce406c:;
						{
							(*(_237144_s))._field_Operators._field_BitXorAssign=_1b2d1e310_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1b2d2e6d8_BitXorAssign);
						}
					}
					_match_end_1b6ce2e8e:;
				};
			}
			_iter_next_1b6ce2532:;
			++it;
			goto _iter_begin_1b6ce2532;
		}
		_iter_end_1b6ce2532:;
	};
}



inline void _1b2d208c7_precheckStructType(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2b0db6b_Struct>* _243540_s) {
	if ((*((*(_243540_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243540_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_243540_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1b2b119c6_StructIns> _24468_ins = _1b2b0e111_instance((*(_243540_s)));;
		(*(_24468_ins))._field_Checked=true;
		_1b2b0e41e_appendInstance((*(_243540_s)).ptr(), &(_24468_ins));
		_1b2d1eb07_precheckStructIns(_self_, &(_24468_ins), nullptr);
	};
	_1b2d2061e_checkStructInsOperators(_self_, (*((*(_243540_s))))._field_Instances[0LL]);
}



inline void _1b2d20ac5_precheckStructTypes(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d0a1a4:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _245615_s = *it;
			{
				_1b2d208c7_precheckStructType(_self_, &(_245615_s));
			}
			_iter_next_1b6d0a1a4:;
			++it;
			goto _iter_begin_1b6d0a1a4;
		}
		_iter_end_1b6d0a1a4:;
	};
}



inline void _1b2d20d7d_checkRets(_1b2d03091_sema* _self_, jule::Ptr<_1b2bdda70_FnIns>* _246130_f) {
	if (_1b2bdae68_IsVoid((*((*(_246130_f))))._field_Decl.ptr())) {
		return;;
	};
	_1b2d232c0_missingRetChecker _24653_mrc = static__1b2d236bb_new();;
	jule::Bool _24663_ok = _1b2d24898_check(&_24653_mrc, (*((*(_246130_f))))._field_Scope);;
	if ((!(_24663_ok))) {
		_1b2d05e95_pushErr(_self_, (*(*((*(_246130_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1b2d211e1_checkFnInsSc(_1b2d03091_sema* _self_, jule::Ptr<_1b2bdda70_FnIns>* _247233_f, jule::Ptr<_1b2cab830_scopeChecker>* _247249_sc) {
	_1b2d0126a_appendRetVars(&((*((*((*(_247249_sc))))._field_table))._field_Vars), _247233_f);
	_1b2d0159a_appendParamVars(&((*(*((*(_247249_sc))))._field_table.alloc)._field_Vars), _247233_f);
	_1b2d01886_appendGenericTypeAliases(&((*(*((*(_247249_sc))))._field_table.alloc)._field_TypeAliases), _247233_f);
	_1b2cbd9a7_check((*(_247249_sc)), &((*((*((*(_247233_f))))._field_Decl))._field_Scope), &((*((*(_247233_f))))._field_Scope));
	if ((!(_1b2cae437_stopped((*(_247249_sc)).ptr())))) {
		_1b2d20d7d_checkRets(_self_, _247233_f);
	};
}



inline void _1b2d21554_checkFnInsCaller(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _248538_f, jule::Ptr<_1b2ac7eba_Token> _248553_caller) {
	if ((*((*((*(_248538_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1b2be1cb5_SymTab> _24907_old = (*((*(*((*(_248538_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1b2d05a77_setCurrentFile((*((*((*(_248538_f))))._field_Decl))._field_sema, _24907_old);
	});;
	jule::Ptr<_1b2be1cb5_SymTab> _24927_file = _1b2d01c0a_findFile(&((*(*((*((*(_248538_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_248538_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_24927_file != nullptr)) {
		_1b2d05a77_setCurrentFile((*((*((*(_248538_f))))._field_Decl))._field_sema, _24927_file);
	};
	jule::Ptr<_1b2cab830_scopeChecker> _24977_sc = _1b2ca23b4_newScopeChecker(&((*(*((*(_248538_f))))._field_Decl.alloc)._field_sema), (*(_248538_f)));;
	(*(_24977_sc))._field_calledFrom=_248553_caller;
	_1b2d211e1_checkFnInsSc(_self_.ptr(), _248538_f, &(_24977_sc));
	if (((*(*((*(_248538_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_248538_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_248538_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1b2d2180c_checkFnIns(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bdda70_FnIns>* _250732_f) {
	_1b2d21554_checkFnInsCaller(_self_, _250732_f, nullptr);
}



inline void _1b2d21ab5_checkFunc(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _251131_f) {
	if ((*((*(_251131_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_251131_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_251131_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d187de:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdda70_FnIns> _252115_ins = *it;
			{
				_1b2d2180c_checkFnIns(_self_, &(_252115_ins));
			}
			_iter_next_1b6d187de:;
			++it;
			goto _iter_begin_1b6d187de;
		}
		_iter_end_1b6d187de:;
	};
}



inline void _1b2d21d6d_checkTestFn(_1b2d03091_sema* _self_, jule::Ptr<_1b2bdda70_FnIns>* _252632_f) {
	if ((*((*((*(_252632_f))))._field_Decl))._field_Public) {
		_1b2d05e95_pushErr(_self_, (*(*((*(_252632_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_252632_f))))._field_Decl.alloc)._field_Unsafety || (!(_1b2bdae68_IsVoid((*((*(_252632_f))))._field_Decl)))) || ((*(*((*(_252632_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_252632_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_252632_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_252632_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1b2d05e95_pushErr(_self_, (*(*((*(_252632_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2dbd26b_Sptr> _25447_sptr = _1b2db4064_Sptr((*((*((*(_252632_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_25447_sptr == nullptr)) {
		_1b2d05e95_pushErr(_self_, (*(*((*(_252632_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _25513_s = _1b2db5351_Struct((*(_25447_sptr))._field_Elem.ptr());;
	if (((_25513_s == nullptr) || (!(_1b2cd9b6b_isStdPackage(&((*((*((*((*(_25513_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1b2d05e95_pushErr(_self_, (*(*((*(_252632_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1b2d06308_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1b2d22126_precheckFunc(jule::Ptr<_1b2d03091_sema> _self_, jule::Ptr<_1b2bda9b2_Fn>* _255934_f) {
	if ((*((*(_255934_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_255934_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_255934_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1b2bdda70_FnIns> _25708_ins = _1b2bdbebe_instanceForce((*(_255934_f)));;
		{ jule::Slice<jule::Ptr<_1b2bdda70_FnIns>> &__jule_push_dest = (*((*(_255934_f))))._field_Instances; __jule_push_dest.push(_25708_ins); };
		jule::Bool _25724_ok = _1b2d11d08_reloadFnInsTypes(_self_, _25708_ins);;
		(*(_25708_ins))._field_reloaded=true;
		if ((_25724_ok && _1b2dccb93_hasDirective(&((*((*(_255934_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1b2d21d6d_checkTestFn(_self_, &(_25708_ins));
		};
	};
}



inline void _1b2d22324_precheckFuncs(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d27534:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> _258315_decl = *it;
			{
				{
					auto expr = &((*(_258315_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6d27e91:;
					if (it != expr_end) {
						jule::Ptr<_1b2bda9b2_Fn> _258416_m = *it;
						{
							_1b2d22126_precheckFunc(_self_, &(_258416_m));
						}
						_iter_next_1b6d27e91:;
						++it;
						goto _iter_begin_1b6d27e91;
					}
					_iter_end_1b6d27e91:;
				};
			}
			_iter_next_1b6d27534:;
			++it;
			goto _iter_begin_1b6d27534;
		}
		_iter_end_1b6d27534:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d28337:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _258815_decl = *it;
			{
				_1b2d22126_precheckFunc(_self_, &(_258815_decl));
			}
			_iter_next_1b6d28337:;
			++it;
			goto _iter_begin_1b6d28337;
		}
		_iter_end_1b6d28337:;
	};
}



inline void _1b2d22522_checkFuncs(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d29778:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _259515_decl = *it;
			{
				_1b2d21ab5_checkFunc(_self_, &(_259515_decl));
			}
			_iter_next_1b6d29778:;
			++it;
			goto _iter_begin_1b6d29778;
		}
		_iter_end_1b6d29778:;
	};
}



inline void _1b2d22720_checkPackageTypes(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d2a56a:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _260315_f = *it;
			{
				_1b2d05a77_setCurrentFile(_self_.ptr(), _260315_f);
				_1b2d1d1ee_checkGlobals(_self_);
				_1b2d22324_precheckFuncs(_self_);
				_1b2d20ac5_precheckStructTypes(_self_);
			}
			_iter_next_1b6d2a56a:;
			++it;
			goto _iter_begin_1b6d2a56a;
		}
		_iter_end_1b6d2a56a:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d2c0e9:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _261415_f = *it;
			{
				_1b2d05a77_setCurrentFile(_self_, _261415_f);
				_1b2d22522_checkFuncs(_self_);
				_1b2d20366_checkStructTypes(_self_);
			}
			_iter_next_1b6d2c0e9:;
			++it;
			goto _iter_begin_1b6d2c0e9;
		}
		_iter_end_1b6d2c0e9:;
	};
}



inline void _1b2d2291d_setFileSemaFields(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d2d6c2:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _262215_f = *it;
			{
				(*(_262215_f))._field_sema=_self_;
			}
			_iter_next_1b6d2d6c2:;
			++it;
			goto _iter_begin_1b6d2d6c2;
		}
		_iter_end_1b6d2d6c2:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d2e33d:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _262515_st = *it;
			{
				(*(_262515_st))._field_sema=_self_;
			}
			_iter_next_1b6d2e33d:;
			++it;
			goto _iter_begin_1b6d2e33d;
		}
		_iter_end_1b6d2e33d:;
	};
}



inline void _1b2d22b1b_setSemaFields(jule::Ptr<_1b2d03091_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d3000e:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _263115_file = *it;
			{
				_1b2d05a77_setCurrentFile(_self_.ptr(), _263115_file);
				_1b2d2291d_setFileSemaFields(_self_);
			}
			_iter_next_1b6d3000e:;
			++it;
			goto _iter_begin_1b6d3000e;
		}
		_iter_end_1b6d3000e:;
	};
}



inline void _1b2d22dc4_check(jule::Ptr<_1b2d03091_sema> _self_, jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _263727_files) {
	(*(_self_))._field_files=(*(_263727_files));
	_1b2d22b1b_setSemaFields(_self_);
	_1b2d08d88_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1b2d0987d_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1b2d09284_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1b2d09482_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1b2d1c20e_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1b2d22720_checkPackageTypes(_self_);
}







inline _1b2d232c0_missingRetChecker static__1b2d236bb_new(void) {
	return _1b2d232c0_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1b2d239c9_checkConditional(_1b2d232c0_missingRetChecker* _self_, jule::Ptr<_1b2ca51ca_Conditional> _268532_c) {
	{
		auto expr = &((*(_268532_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d35696:;
		if (it != expr_end) {
			jule::Ptr<_1b2ca49b0_If> _268615_elif = *it;
			{
				if ((_268615_elif == nullptr)) {
					return false;;
				};
				if ((!(_1b2d24557_checkScope(_self_, (*(_268615_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1b6d35696:;
			++it;
			goto _iter_begin_1b6d35696;
		}
		_iter_end_1b6d35696:;
	};
	return (((*_268532_c.alloc)._field_Default != nullptr) && _1b2d24557_checkScope(_self_, (*(*(_268532_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1b2d23d1a_checkMatch(_1b2d232c0_missingRetChecker* _self_, jule::Ptr<_1b2ca8cc2_Match> _269726_m) {
	{
		auto expr = &((*(_269726_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d37764:;
		if (it != expr_end) {
			jule::Ptr<_1b2ca97ea_Case> _269815_c = *it;
			{
				if ((_269815_c == nullptr)) {
					return false;;
				};
				jule::I64 _27024_n = (*(_self_))._field_breaked.len();;
				jule::Bool _27034_ok = _1b2d24557_checkScope(_self_, (*(_269815_c))._field_Scope);;
				{
					
					if ((_27024_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1b6d39238:;
						{
							return false;;
						}
					}
					else if ((!(_27034_ok))) {
						_case_begin_1b6d392c1:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1b6d39337;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1b6d39337:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_269815_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1b6d37764;
						}
					}
					_match_end_1b6d391c2:;
				};
			}
			_iter_next_1b6d37764:;
			++it;
			goto _iter_begin_1b6d37764;
		}
		_iter_end_1b6d37764:;
	};
	return (((*_269726_m.alloc)._field_Default != nullptr) && _1b2d24557_checkScope(_self_, (*(*(_269726_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1b2d24216_checkInfIter(_1b2d232c0_missingRetChecker* _self_, jule::Uintptr _272324_it, jule::Ptr<_1b2ca4592_Scope>* _272342_s) {
	jule::I64 _27243_n = (*(_self_))._field_breaked.len();;
	if (_1b2d24557_checkScope(_self_, (*(_272342_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _27243_n);;
		return true;;
	};
	if ((_27243_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_27243_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b6d3cb76:;
			if (it != expr_end) {
				jule::Uintptr _273011_addr = *it;
				{
					if ((_272324_it == _273011_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _27243_n);;
						return false;;
					};
				}
				_iter_next_1b6d3cb76:;
				++it;
				goto _iter_begin_1b6d3cb76;
			}
			_iter_end_1b6d3cb76:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _27243_n);;
	};
	return true;;
}



inline jule::Bool _1b2d24557_checkScope(_1b2d232c0_missingRetChecker* _self_, jule::Ptr<_1b2ca4592_Scope> _274126_s) {
	if ((_274126_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_274126_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d3e2a4:;
		if (it != expr_end) {
			jule::Any _274515_st = *it;
			{
				{
					auto &_match_expr{ _274515_st };
					
					if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1b6d3ee75:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1b6d3ec55:;
						{
							jule::Uintptr _27515_addr = (*(_274515_st.unsafe_cast_ptr<_1b2ca6b38_BreakSt>()))._field_It;;
							if ((_27515_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_27515_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1b6d4000d:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type32) {
						_case_begin_1b6d40085:;
						{
							jule::Ptr<_1b2ca54c7_InfIter> _27599_ii = _274515_st.unsafe_cast_ptr<_1b2ca54c7_InfIter>();;
							if (_1b2d24216_checkInfIter(_self_, static_cast<jule::Uintptr>(_27599_ii), &((*(_27599_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1b6d4010c:;
						{
							jule::Ptr<_1b2ca597d_WhileIter> _27649_wn = _274515_st.unsafe_cast_ptr<_1b2ca597d_WhileIter>();;
							if ((_1b2ca5d24_IsWhileNext(_27649_wn.ptr()) && ((*_27649_wn.alloc)._field_Expr == nullptr))) {
								if (_1b2d24216_checkInfIter(_self_, static_cast<jule::Uintptr>(_27649_wn), &((*_27649_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1b6d40184:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1b6d4020b:;
						{
							if (_1b2d24557_checkScope(_self_, _274515_st.cast_ptr<_1b2ca4592_Scope>(&__jule_any_type19))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1b6d40283:;
						{
							{
								auto &_match_expr{ (*(_274515_st.cast_ptr<_1b2d7dc21_Data>(&__jule_any_type21)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type20) {
									_case_begin_1b6d460be:;
									{
										return true;;
									}
								}
								_match_end_1b6d46025:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1b6d4030a:;
						{
							if (_1b2d239c9_checkConditional(_self_, _274515_st.cast_ptr<_1b2ca51ca_Conditional>(&__jule_any_type31))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type44) {
						_case_begin_1b6d40382:;
						{
							if (_1b2d23d1a_checkMatch(_self_, _274515_st.cast_ptr<_1b2ca8cc2_Match>(&__jule_any_type44))) {
								return true;;
							};
						}
					}
					_match_end_1b6d3eccc:;
				};
			}
			_iter_next_1b6d3e2a4:;
			++it;
			goto _iter_begin_1b6d3e2a4;
		}
		_iter_end_1b6d3e2a4:;
	};
	return false;;
}



inline jule::Bool _1b2d24898_check(_1b2d232c0_missingRetChecker* _self_, jule::Ptr<_1b2ca4592_Scope> _279621_s) {
	return _1b2d24557_checkScope(_self_, _279621_s);;
}







inline jule::Bool _1b2d271b4_IsInitialized(_1b2d26ca7_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1b2d2744a_IsTypeInferred(_1b2d26ca7_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1b2d276d1_untypedConstant(_1b2d26ca7_Var* _self_) {
	return (_1b2d2744a_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__1b2d28281_Dispose(jule::Ptr<_1b2bda9b2_Fn> _1020_f) {
	return ((((((((((_1020_f != nullptr) && ((*_1020_f.alloc)._field_Owner != nullptr)) && (*(_1020_f))._field_Ident.equal("Dispose", 7)) && (!((*_1020_f.alloc)._field_Statically))) && (!((*_1020_f.alloc)._field_Unsafety))) && _1b2bdae68_IsVoid(_1020_f)) && ((*_1020_f.alloc)._field_Generics.len() == 0LL)) && ((*_1020_f.alloc)._field_Params.len() == 1LL)) && (*((*(_1020_f))._field_Params[0LL]))._field_Mutable) && (!(_1b2bd98c3_IsRef((*(_1020_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1b2d2854a_Str(jule::Ptr<_1b2bda9b2_Fn> _2416_f) {
	if (((((((((((_2416_f == nullptr) || ((*(_2416_f))._field_Owner == nullptr)) || (!(*(_2416_f))._field_Ident.equal("Str", 3))) || (*(_2416_f))._field_Statically) || (*(_2416_f))._field_Unsafety) || _1b2bdae68_IsVoid(_2416_f.ptr())) || ((*(_2416_f))._field_Generics.len() != 0LL)) || ((*(_2416_f))._field_Params.len() != 1LL)) || (*((*(_2416_f))._field_Params[0LL]))._field_Mutable) || _1b2bd98c3_IsRef((*(_2416_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _387_ins = (*(_2416_f))._field_Instances[0LL];;
	jule::Ptr<_1b2db9740_Prim> _393_prim = _1b2db3ccd_Prim((*(_387_ins))._field_Result.ptr());;
	if ((_393_prim == nullptr)) {
		return false;;
	};
	return _1b2dbcc0a_IsStr(_393_prim.ptr());;
}



inline jule::Bool static__1b2d288be_logical(jule::Ptr<_1b2bda9b2_Fn>* _4621_f, jule::Str _4629_ident) {
	if (((((((((((((((*(_4621_f)) == nullptr) || ((*((*(_4621_f))))._field_Ident != _4629_ident)) || ((*((*(_4621_f))))._field_Owner == nullptr)) || ((*((*(_4621_f))))._field_Instances.len() == 0LL)) || (*((*(_4621_f))))._field_Statically) || (*((*(_4621_f))))._field_Unsafety) || _1b2bdae68_IsVoid((*(_4621_f)).ptr())) || ((*((*(_4621_f))))._field_Generics.len() != 0LL)) || ((*((*(_4621_f))))._field_Params.len() != 2LL)) || (*((*((*(_4621_f))))._field_Params[0LL]))._field_Mutable) || _1b2bd98c3_IsRef((*((*(_4621_f))))._field_Params[0LL].ptr())) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _637_ins = (*((*(_4621_f))))._field_Instances[0LL];;
	jule::Ptr<_1b2db9740_Prim> _643_prim = _1b2db3ccd_Prim((*(_637_ins))._field_Result.ptr());;
	if (((_643_prim == nullptr) || (!(_1b2dbc974_IsBool(_643_prim.ptr()))))) {
		return false;;
	};
	return ((*_637_ins.alloc)._field_Owner == _1b2db5351_Struct((*((*_637_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1b2d28b88_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _7215_f) {
	return static__1b2d288be_logical(&(_7215_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1b2d28e52_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _7715_f) {
	return static__1b2d288be_logical(&(_7715_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1b2d2921b_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _8217_f) {
	return static__1b2d288be_logical(&(_8217_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1b2d294d5_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _8715_f) {
	return static__1b2d288be_logical(&(_8715_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1b2d2979e_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _9217_f) {
	return static__1b2d288be_logical(&(_9217_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1b2d29b23_result(jule::Ptr<_1b2bda9b2_Fn>* _9620_f, jule::Str _9628_ident) {
	if (((((((((((((((*(_9620_f)) == nullptr) || ((*((*(_9620_f))))._field_Ident != _9628_ident)) || ((*((*(_9620_f))))._field_Owner == nullptr)) || ((*((*(_9620_f))))._field_Instances.len() == 0LL)) || (*((*(_9620_f))))._field_Statically) || (*((*(_9620_f))))._field_Unsafety) || _1b2bdae68_IsVoid((*(_9620_f)).ptr())) || ((*((*(_9620_f))))._field_Generics.len() != 0LL)) || ((*((*(_9620_f))))._field_Params.len() != 2LL)) || (*((*((*(_9620_f))))._field_Params[0LL]))._field_Mutable) || _1b2bd98c3_IsRef((*((*(_9620_f))))._field_Params[0LL].ptr())) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _1137_ins = (*((*(_9620_f))))._field_Instances[0LL];;
	return (_1b2db5351_Struct((*(_1137_ins))._field_Result.ptr()) == (*_1137_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1b2d29ddc_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _11816_f) {
	return static__1b2d29b23_result(&(_11816_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1b2d2a1a6_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _12316_f) {
	return static__1b2d29b23_result(&(_12316_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1b2d2a470_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _12816_f) {
	return static__1b2d29b23_result(&(_12816_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1b2d2a739_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _13316_f) {
	return static__1b2d29b23_result(&(_13316_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1b2d2aa03_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _13816_f) {
	return static__1b2d29b23_result(&(_13816_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1b2d2acbc_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _14316_f) {
	return static__1b2d29b23_result(&(_14316_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1b2d2b086_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _14816_f) {
	return static__1b2d29b23_result(&(_14816_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1b2d2b350_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _15319_f) {
	return static__1b2d29b23_result(&(_15319_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1b2d2b619_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _15818_f) {
	return static__1b2d29b23_result(&(_15818_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1b2d2b8d3_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _16319_f) {
	return static__1b2d29b23_result(&(_16319_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1b2d2bc57_unary(jule::Ptr<_1b2bda9b2_Fn>* _16719_f, jule::Str _16727_ident) {
	if (((((((((((((*(_16719_f)) == nullptr) || ((*((*(_16719_f))))._field_Ident != _16727_ident)) || ((*((*(_16719_f))))._field_Owner == nullptr)) || ((*((*(_16719_f))))._field_Instances.len() == 0LL)) || (*((*(_16719_f))))._field_Statically) || (*((*(_16719_f))))._field_Unsafety) || _1b2bdae68_IsVoid((*(_16719_f)).ptr())) || ((*((*(_16719_f))))._field_Generics.len() != 0LL)) || ((*((*(_16719_f))))._field_Params.len() != 1LL)) || (*((*((*(_16719_f))))._field_Params[0LL]))._field_Mutable) || _1b2bd98c3_IsRef((*((*(_16719_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _1827_ins = (*((*(_16719_f))))._field_Instances[0LL];;
	return (_1b2db5351_Struct((*(_1827_ins))._field_Result.ptr()) == (*_1827_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1b2d2c021_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _18716_f) {
	return static__1b2d2bc57_unary(&(_18716_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1b2d2c2da_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _19216_f) {
	return static__1b2d2bc57_unary(&(_19216_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1b2d2c5a4_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _19719_f) {
	return static__1b2d2bc57_unary(&(_19719_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1b2d2c928_assign(jule::Ptr<_1b2bda9b2_Fn>* _20120_f, jule::Str _20128_ident) {
	if (((((((((((((((*(_20120_f)) == nullptr) || ((*((*(_20120_f))))._field_Ident != _20128_ident)) || ((*((*(_20120_f))))._field_Owner == nullptr)) || ((*((*(_20120_f))))._field_Instances.len() == 0LL)) || (*((*(_20120_f))))._field_Statically) || (*((*(_20120_f))))._field_Unsafety) || (!(_1b2bdae68_IsVoid((*(_20120_f)).ptr())))) || ((*((*(_20120_f))))._field_Generics.len() != 0LL)) || ((*((*(_20120_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20120_f))))._field_Params[0LL]))._field_Mutable))) || _1b2bd98c3_IsRef((*((*(_20120_f))))._field_Params[0LL].ptr())) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1b2d2cbe2_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _22122_f) {
	return static__1b2d2c928_assign(&(_22122_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1b2d2ceab_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _22622_f) {
	return static__1b2d2c928_assign(&(_22622_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1b2d2d275_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _23122_f) {
	return static__1b2d2c928_assign(&(_23122_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1b2d2d53e_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _23622_f) {
	return static__1b2d2c928_assign(&(_23622_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1b2d2d808_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _24122_f) {
	return static__1b2d2c928_assign(&(_24122_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1b2d2dac2_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _24622_f) {
	return static__1b2d2c928_assign(&(_24622_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1b2d2dd8b_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _25122_f) {
	return static__1b2d2c928_assign(&(_25122_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1b2d2e155_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _25624_f) {
	return static__1b2d2c928_assign(&(_25624_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1b2d2e41e_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _26125_f) {
	return static__1b2d2c928_assign(&(_26125_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1b2d2e6d8_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn> _26625_f) {
	return static__1b2d2c928_assign(&(_26625_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _1b2d653de_typeCompatibilityChecker_eq(_1b2d653de_typeCompatibilityChecker *_self_, _1b2d653de_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1b2d6591c_pushErr(_1b2d653de_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args) {
	_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _10723_fmt, _10743_args);
}



inline jule::Bool _1b2d65ba3_checkTrait(_1b2d653de_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b2db275a_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2be61c6_Trait> _1157_trt = _1b2db55d7_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1167_ref = false;;
	{
		
		if ((_1b2db4064_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b6d8785d:;
			{
				_1167_ref=true;
				(*(_self_))._field_src=(*(_1b2db4064_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1b2db5351_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1b6d87907;
			}
		}
		else if ((_1b2db5351_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b6d87907:;
			{
				jule::Ptr<_1b2b119c6_StructIns> _1264_s = _1b2db5351_Struct((*(_self_))._field_src);;
				if ((!(_1b2b102dd_IsImplements((*(_1264_s))._field_Decl.ptr(), _1157_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1167_ref)) && _1b2d63e7b_traitHasReferenceReceiver(&(_1157_trt)))) {
					_1b2d6591c_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b2db55d7_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b6d8797e:;
			{
				jule::Ptr<_1b2be61c6_Trait> _1368_base = _1b2db55d7_Trait((*(_self_))._field_src);;
				if ((_1157_trt == _1368_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1b6d8ca3e:;
				{
					auto expr = &((*(_1368_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6d8ccc5:;
					if (it != expr_end) {
						jule::Ptr<_1b2b0db6b_Struct> _14111_s1 = *it;
						{
							{
								auto expr = &((*(_1157_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b6d8d6cc:;
								if (it != expr_end) {
									jule::Ptr<_1b2b0db6b_Struct> _14212_s2 = *it;
									{
										if ((_14111_s1 == _14212_s2)) {
											goto _iter_next_1b6d8ccc5;
										};
									}
									_iter_next_1b6d8d6cc:;
									++it;
									goto _iter_begin_1b6d8d6cc;
								}
								_iter_end_1b6d8d6cc:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1b6d8ccc5:;
						++it;
						goto _iter_begin_1b6d8ccc5;
					}
					_iter_end_1b6d8ccc5:;
				};
				{
					auto expr = &((*_1157_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6d8dab7:;
					if (it != expr_end) {
						jule::Ptr<_1b2bda9b2_Fn> _14916_m1 = *it;
						{
							jule::Ptr<_1b2bda9b2_Fn> _1509_m2 = _1b2be6da8_FindMethod(_1368_base, (*(_14916_m1))._field_Ident);;
							if ((_1509_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1b2bdda70_FnIns> _1545_m1k = _1b2d104aa_getTraitCheckFnKind((*(_self_))._field_s, &(_14916_m1));;
							jule::Ptr<_1b2bdda70_FnIns> _1555_m2k = _1b2d104aa_getTraitCheckFnKind((*(_self_))._field_s, &(_1509_m2));;
							if ((!(_1b2bdea1b_equalTrait(_1545_m1k, &(_1555_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1b6d8dab7:;
						++it;
						goto _iter_begin_1b6d8dab7;
					}
					_iter_end_1b6d8dab7:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b6d877c5:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b6d8774d:;
	};
}



inline jule::Bool _1b2d65e39_checkPtr(_1b2d653de_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b2db275a_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2dc1a33_Ptr> _1707_dest = _1b2db42ea_Ptr((*(_self_))._field_dest.ptr());;
	if (_1b2dc25a0_IsUnsafe(_1707_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1b2db1d64_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1b2d661c0_checkPrim(_1b2d653de_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1b2db9740_Prim> _1794_prim = _1b2db3ccd_Prim((*(_self_))._field_dest);;
		if (((_1794_prim != nullptr) && _1b2dbce91_IsAny(_1794_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1b2db1d64_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1b2d6b505_typeEnum(_1b2d653de_typeCompatibilityChecker* _self_, jule::Ptr<_1b2bea087_TypeEnum>* _18725_e, jule::Ptr<_1b2db1627_TypeKind>* _18744_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_18725_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d95085:;
		if (it != expr_end) {
			jule::Ptr<_1b2be99b0_TypeEnumItem> _18815_item = *it;
			{
				if (_1b2db1d64_Equal((*((*(_18815_item))._field_Kind))._field_Kind, (*(_18744_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1b2bea087_TypeEnum> _1928_ke = _1b2db4817_TypeEnum((*((*(_18815_item))._field_Kind))._field_Kind);;
				if ((_1928_ke == nullptr)) {
					goto _iter_next_1b6d95085;
				};
				if (_1b2d6b505_typeEnum(_self_, &(_1928_ke), _18744_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6d95085:;
			++it;
			goto _iter_begin_1b6d95085;
		}
		_iter_end_1b6d95085:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b2d6b6ae_checkTypeEnum(_1b2d653de_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b2db1d64_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2bea087_TypeEnum> _2077_e = _1b2db4817_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1b2d6b505_typeEnum(_self_, &(_2077_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1b2d6b945_check(_1b2d653de_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1b2db42ea_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1b2d65e39_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1b2db352a_NilCompatible((*(_self_))._field_dest)) {
		if (_1b2db275a_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1b2db3ccd_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b6d9a893:;
			{
				__jule_func_result = _1b2d661c0_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1b2db4817_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b6d9a92b:;
			{
				__jule_func_result = _1b2d6b6ae_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1b2db55d7_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b6d9a321:;
			{
				__jule_func_result = _1b2d65ba3_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b6d99e58:;
			{
				__jule_func_result = _1b2db1d64_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1b6d994c9:;
	};
}








inline jule::Bool _1b2d6c0c7_assignTypeChecker_eq(_1b2d6c0c7_assignTypeChecker *_self_, _1b2d6c0c7_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1b2d6c58e_pushErr(_1b2d6c0c7_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args) {
	_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _24423_fmt, _24443_args);
}



inline jule::Bool _1b2d6c825_checkValidity(_1b2d6c0c7_assignTypeChecker* _self_) {
	jule::Bool _2497_valid = true;;
	{
		
		if ((_1b2db50ba_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6d9d566:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _2524_f = _1b2db50ba_Fn((*((*(_self_))._field_d))._field_Kind);;
				{
					
					if (_1b2be0038_IsBuiltin(_2524_f.ptr())) {
						_case_begin_1b6d9edd6:;
						{
							_1b2d6c58e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((*((*(_2524_f))._field_Decl))._field_Binded) {
						_case_begin_1b6d9ee80:;
						{
							_1b2d6c58e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if (((!((*((*(_2524_f))._field_Decl))._field_Statically)) && _1b2bdb1ee_IsMethod((*(_2524_f))._field_Decl))) {
						_case_begin_1b6d9eee6:;
						{
							_1b2d6c58e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((((*((*(_2524_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2524_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1b6da005c:;
						{
							_1b2d6c58e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1b2d06308_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					_match_end_1b6d9ece8:;
				};
			}
		}
		else if ((_1b2db5b04_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6d9d610:;
			{
				_1b2d6c58e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2497_valid=false;
			}
		}
		_match_end_1b6d9d4cd:;
	};
	return _2497_valid;;
}



inline jule::Bool _1b2d6caab_checkConst(_1b2d6c0c7_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1b2db3ccd_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2813_kind = (*(_1b2db3ccd_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1b2c75497_IsFloat(_2813_kind)) {
			_case_begin_1b6da67a0:;
			{
				if ((!(_1b2d64344_floatAssignable(&(_2813_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else if (_1b2c75156_IsInt(_2813_kind)) {
			_case_begin_1b6da6838:;
			{
				if ((!(_1b2d64e05_intAssignable(_2813_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else {
			_case_begin_1b6da6739:;
			{
				return false;;
			}
		}
		_match_end_1b6da6607:;
	};
	return true;;
}



inline jule::Bool _1b2d6cd42_checkCompatibility(_1b2d6c0c7_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b6da8ac1:;
			{
				return false;;
			}
		}
		else if ((!(_1b2d6c825_checkValidity(_self_)))) {
			_case_begin_1b6da8b48:;
			{
				return false;;
			}
		}
		else if (_1b2d6caab_checkConst(_self_)) {
			_case_begin_1b6da8bae:;
			{
				return true;;
			}
		}
		else if ((_1b2db4581_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6da8c25:;
			{
				jule::Ptr<_1b2db1627_TypeKind> _3108_dkind = (*(_self_))._field_dest;;
				if ((_1b2db4581_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3108_dkind=(*((*(_1b2db4581_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1b2db9740_Prim> _3144_prim = _1b2db3ccd_Prim((*(_self_))._field_dest);;
				if (((_3144_prim == nullptr) || _1b2dbce91_IsAny(_3144_prim.ptr()))) {
					goto _match_end_1b6da7dbc;
				};
				jule::Ptr<_1b2db1627_TypeKind> _3198_dest = (*(*(_1b2db4581_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind.alloc)._field_Kind;;
				return _1b2d0dde3_checkTypeCompatibility((*(_self_))._field_s, &(_3198_dest), &(_3108_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1b6da7dbc:;
	};
	return _1b2d0e7b7_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1b2d6d0c8_check(_1b2d6c0c7_assignTypeChecker* _self_) {
	jule::Bool _3263_ok = _1b2d6cd42_checkCompatibility(_self_);;
	if ((_3263_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1b2dce425_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3263_ok;;
}







inline jule::Bool _1b6dc875b_annotateConstraintElem(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b6dc9e11:;
			{
				jule::Ptr<_1b2db1627_TypeKind> _34912_elem = nullptr;;
				{
					
{
						_case_begin_1b6dcce7a:;
						{
							_34912_elem=(*(_1b2db4a9d_Arr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b6dccdae:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b2ae06a8_ArrTypeDecl>()))._field_Elem;
				return _1b2d701da_annotateConstraint(_self_, &(_34912_elem));;
			}
		}
		_match_end_1b6dc9d89:;
	};
	return false;;
}

inline jule::Bool _1b6dc8a03_annotateConstraintElem(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b6dd1335:;
			{
				jule::Ptr<_1b2db1627_TypeKind> _34912_elem = nullptr;;
				{
					
{
						_case_begin_1b6dd4734:;
						{
							_34912_elem=(*(_1b2db4d34_Slc((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b6dd42d3:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b2ade81c_SlcTypeDecl>()))._field_Elem;
				return _1b2d701da_annotateConstraint(_self_, &(_34912_elem));;
			}
		}
		_match_end_1b6dd12ad:;
	};
	return false;;
}

inline jule::Bool _1b6dd082e_annotateConstraintElem(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b6dd7759:;
			{
				jule::Ptr<_1b2db1627_TypeKind> _34912_elem = nullptr;;
				{
					
{
						_case_begin_1b6dda86c:;
						{
							_34912_elem=(*(_1b2db42ea_Ptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b6dda707:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b2adee16_PtrTypeDecl>()))._field_Elem;
				return _1b2d701da_annotateConstraint(_self_, &(_34912_elem));;
			}
		}
		_match_end_1b6dd76d2:;
	};
	return false;;
}

inline jule::Bool _1b6dd4910_annotateConstraintElem(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b6ddd85e:;
			{
				jule::Ptr<_1b2db1627_TypeKind> _34912_elem = nullptr;;
				{
					
{
						_case_begin_1b6de19d8:;
						{
							_34912_elem=(*(_1b2db4064_Sptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b6de180c:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b2ade487_SptrTypeDecl>()))._field_Elem;
				return _1b2d701da_annotateConstraint(_self_, &(_34912_elem));;
			}
		}
		_match_end_1b6ddd7d7:;
	};
	return false;;
}



inline jule::Bool _1b2d6e3c6_annotateConstraintMap(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _36642_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b6db1216:;
			{
				jule::Ptr<_1b2dc03d3_Map> _3698_m = _1b2db586d_Map((*(_36642_k)).ptr());;
				jule::Ptr<_1b2ae0e06_MapTypeDecl> _3708_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b2ae0e06_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3708_m2))._field_Key;
				if ((!(_1b2d701da_annotateConstraint(_self_, &((*(_3698_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3708_m2.alloc)._field_Val;
				__jule_func_result = _1b2d701da_annotateConstraint(_self_, &((*_3698_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1b6db118e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b2d6e717_annotateConstraintTup(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _38142_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b6db6a79:;
			{
				jule::Ptr<_1b2adeb19_TupleTypeDecl> _3848_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b2adeb19_TupleTypeDecl>();;
				jule::Ptr<_1b2dbe833_Tuple> _3858_tup2 = _1b2db5b04_Tup((*(_38142_k)).ptr());;
				{
					auto expr = &((*(_3858_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6db95e8:;
					if (it != expr_end) {
						jule::Ptr<_1b2db1627_TypeKind> _38616_t2 = *it;
						{
							{
								auto expr = &((*(_3848_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b6dbb73d:;
								if (it != expr_end) {
									jule::Ptr<_1b2add3dc_TypeDecl> _38717_t = *it;
									{
										(*(_self_))._field_c=_38717_t;
										if (_1b2d701da_annotateConstraint(_self_, &(_38616_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1b6dbb73d:;
									++it;
									goto _iter_begin_1b6dbb73d;
								}
								_iter_end_1b6dbb73d:;
							};
						}
						_iter_next_1b6db95e8:;
						++it;
						goto _iter_begin_1b6db95e8;
					}
					_iter_end_1b6db95e8:;
				};
			}
		}
		_match_end_1b6db6a02:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b2d6ea58_annotateConstraintFn(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _39841_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b6dbbc38:;
			{
				jule::Ptr<_1b2b0009c_FnDecl> _4018_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1b2b0009c_FnDecl>();;
				jule::Ptr<_1b2bdda70_FnIns> _4028_f = _1b2db50ba_Fn((*(_39841_k)).ptr());;
				{
					auto expr = &((*(_4028_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6dbdc29:;
					if (it != expr_end) {
						jule::I64 _4039_i = it - expr->begin();
						jule::Ptr<_1b2bdc91a_ParamIns> _40316_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4018_pf))._field_Params[_4039_i]))._field_Kind;
							if (_1b2d701da_annotateConstraint(_self_, &((*(_40316_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1b6dbdc29:;
						++it;
						_4039_i++;
						goto _iter_begin_1b6dbdc29;
					}
					_iter_end_1b6dbdc29:;
				};
				if (((*_4018_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4018_pf))._field_Result.alloc)._field_Kind;
					if (_1b2d701da_annotateConstraint(_self_, &((*_4028_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1b6dbbbb1:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b2d6ed99_annotateConstraintIdent(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _41944_k) {
	jule::Ptr<_1b2add9e7_IdentTypeDecl> _4207_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1b2add9e7_IdentTypeDecl>(&__jule_any_type77);;
	jule::Ptr<_1b2b119c6_StructIns> _4217_s = _1b2db5351_Struct((*(_41944_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6dc26bc:;
		if (it != expr_end) {
			jule::I64 _4227_i = it - expr->begin();
			jule::Ptr<_1b2aea5e7_GenericDecl> _42210_g = *it;
			{
				if (((*(_42210_g))._field_Ident == (*(_4207_ident))._field_Ident)) {
					jule::Ptr<_1b2daee72_InsGeneric> _4249_fg = (*((*(_self_))._field_f))._field_Generics[_4227_i];;
					if ((_4249_fg != nullptr)) {
						return false;;
					};
					_1b2d7054d_pushGeneric(_self_, _41944_k, _4227_i);
					return true;;
				};
				if ((_4217_s == nullptr)) {
					goto _iter_next_1b6dc26bc;
				};
				jule::Ptr<_1b2add3dc_TypeDecl> _4348_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4207_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6dc525d:;
					if (it != expr_end) {
						jule::Ptr<_1b2add3dc_TypeDecl> _43516_ig = *it;
						{
							(*(_self_))._field_c=_43516_ig;
							{
								auto expr = &((*(_4217_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b6dc5d74:;
								if (it != expr_end) {
									jule::Ptr<_1b2daee72_InsGeneric> _43717_sg = *it;
									{
										if (_1b2d701da_annotateConstraint(_self_, &((*(_43717_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1b6dc5d74:;
									++it;
									goto _iter_begin_1b6dc5d74;
								}
								_iter_end_1b6dc5d74:;
							};
						}
						_iter_next_1b6dc525d:;
						++it;
						goto _iter_begin_1b6dc525d;
					}
					_iter_end_1b6dc525d:;
				};
				(*(_self_))._field_c=_4348_c;
			}
			_iter_next_1b6dc26bc:;
			++it;
			_4227_i++;
			goto _iter_begin_1b6dc26bc;
		}
		_iter_end_1b6dc26bc:;
	};
	return false;;
}



inline jule::Bool _1b2d701da_annotateConstraint(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _44839_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b6dc62c5:;
			{
				return _1b2d6ed99_annotateConstraintIdent(_self_, _44839_k);;
			}
		}
		_match_end_1b6dc625e:;
	};
	{
		
		if ((_1b2db4a9d_Arr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b6dc7194:;
			{
				return _1b6dc875b_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1b2db4d34_Slc((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b6dc720a:;
			{
				return _1b6dc8a03_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1b2db42ea_Ptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b6dc7271:;
			{
				return _1b6dd082e_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1b2db4064_Sptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b6dc72d7:;
			{
				return _1b6dd4910_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1b2db586d_Map((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b6dc734d:;
			{
				return _1b2d6e3c6_annotateConstraintMap(_self_, _44839_k);;
			}
		}
		else if ((_1b2db50ba_Fn((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b6dc77b0:;
			{
				return _1b2d6ea58_annotateConstraintFn(_self_, _44839_k);;
			}
		}
		else if ((_1b2db5b04_Tup((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1b6dc7837:;
			{
				return _1b2d6e717_annotateConstraintTup(_self_, _44839_k);;
			}
		}
		else {
			_case_begin_1b6dc7095:;
			{
				return false;;
			}
		}
		_match_end_1b6dc702e:;
	};
}



inline void _1b2d7054d_pushGeneric(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _47332_k, jule::I64 _47346_i) {
	(*((*(_self_))._field_f))._field_Generics[_47346_i]=jule::new_ptr<_1b2daee72_InsGeneric>(_1b2daee72_InsGeneric{._field_Kind=(*(_47332_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr)});
	jule::Ptr<_1b2aea5e7_GenericDecl> _4757_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_47346_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6de41e4:;
		if (it != expr_end) {
			jule::Ptr<_1b2db1627_TypeKind> _47615_ignored = *it;
			{
				if (((*(_4757_gd))._field_Ident == _1b2db1a23_Str(_47615_ignored.ptr()))) {
					(*_47615_ignored.alloc)._field_Kind=(*((*(_47332_k))))._field_Kind;
				};
			}
			_iter_next_1b6de41e4:;
			++it;
			goto _iter_begin_1b6de41e4;
		}
		_iter_end_1b6de41e4:;
	};
	if ((((*_4757_gd.alloc)._field_Constraint == nullptr) || ((*((*_4757_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4757_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1b2d701da_annotateConstraint(_self_, _47332_k);
}



inline jule::Bool _1b2d7088e_annotatePrim(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _48840_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1b2d728b3_annotateAny(_self_, _48840_k);
	return __jule_func_result;;
}



inline jule::Bool _1b2d70bd0_annotateArr(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _49239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2dc1060_Arr> _4937_parr = _1b2db4a9d_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_4937_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2dc1060_Arr> _4977_arr = _1b2db4a9d_Arr((*(_49239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_4937_parr))._field_Elem));
	__jule_func_result = _1b2d72c04_annotateKind(_self_, &((*(_4977_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b2d71021_annotateSlc(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _50239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2dbdc3e_Slc> _5037_pslc = _1b2db4d34_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5037_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2dbdc3e_Slc> _5077_slc = _1b2db4d34_Slc((*(_50239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5037_pslc))._field_Elem));
	__jule_func_result = _1b2d72c04_annotateKind(_self_, &((*(_5077_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b2d7141c_checkMapKey(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _51238_k, jule::Ptr<_1b2db1627_TypeKind>* _51258_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2db1627_TypeKind>* _5137_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_51238_k;
	__jule_func_result=_1b2d72c04_annotateKind(_self_, _51258_ck);
	(*(_self_))._field_k=_5137_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b2d7175d_annotateMap(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _52039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2dc03d3_Map> _5217_pmap = _1b2db586d_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5217_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2dc03d3_Map> _5257_m = _1b2db586d_Map((*(_52039_k)).ptr());;
	__jule_func_result = (_1b2d7141c_checkMapKey(_self_, (&((*(_5217_pmap))._field_Key)), &((*(_5257_m))._field_Key)) && _1b2d7141c_checkMapKey(_self_, (&((*(_5217_pmap))._field_Val)), &((*_5257_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1b2d71a9e_annotateFn(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _53038_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2bdda70_FnIns> _5317_pf = _1b2db50ba_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5317_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _5357_f = _1b2db50ba_Fn((*(_53038_k)).ptr());;
	{
		
		if (((*(_5317_pf))._field_Params.len() != (*(_5357_f))._field_Params.len())) {
			_case_begin_1b6e02aa4:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1b2bdae68_IsVoid((*(_5317_pf))._field_Decl.ptr()) != _1b2bdae68_IsVoid((*(_5357_f))._field_Decl))) {
			_case_begin_1b6e02b3c:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b6e02a0a:;
	};
	__jule_func_result=true;
	jule::Ptr<_1b2db1627_TypeKind>* _5447_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5357_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e049c9:;
		if (it != expr_end) {
			jule::I64 _5458_i = it - expr->begin();
			jule::Ptr<_1b2bdc91a_ParamIns> _54515_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5317_pf))._field_Params[_5458_i]))._field_Kind));
				__jule_func_result=(_1b2d72c04_annotateKind(_self_, &((*(_54515_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1b6e049c9:;
			++it;
			_5458_i++;
			goto _iter_begin_1b6e049c9;
		}
		_iter_end_1b6e049c9:;
	};
	if ((!(_1b2bdae68_IsVoid((*(_5317_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5317_pf))._field_Result));
		__jule_func_result=(_1b2d72c04_annotateKind(_self_, &((*_5357_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5447_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b2d71de0_annotatePtr(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _55939_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2dc1a33_Ptr> _5607_pptr = _1b2db42ea_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5607_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2dc1a33_Ptr> _5647_ptr = _1b2db42ea_Ptr((*(_55939_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5607_pptr))._field_Elem));
	__jule_func_result = _1b2d72c04_annotateKind(_self_, &((*(_5647_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b2d72231_annotateSptr(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _56940_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2dbd26b_Sptr> _5707_ssptr = _1b2db4064_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5707_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2dbd26b_Sptr> _5747_sptr = _1b2db4064_Sptr((*(_56940_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5707_ssptr))._field_Elem));
	__jule_func_result = _1b2d72c04_annotateKind(_self_, &((*(_5747_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b2d72572_annotateStruct(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _57942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2b119c6_StructIns> _5807_s = _1b2db5351_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5807_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _5847_s2 = _1b2db5351_Struct((*(_57942_k)).ptr());;
	if (((*(_5807_s))._field_Generics.len() != (*(_5847_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5807_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e0d9a0:;
		if (it != expr_end) {
			jule::I64 _5888_i = it - expr->begin();
			jule::Ptr<_1b2daee72_InsGeneric> _58815_g = *it;
			{
				jule::Ptr<_1b2daee72_InsGeneric> _5898_g2 = (*(_5847_s2))._field_Generics[_5888_i];;
				if (_1b2db1d64_Equal((*(_58815_g))._field_Kind, (*(_5898_g2))._field_Kind)) {
					goto _iter_next_1b6e0d9a0;
				};
				(*(_self_))._field_k=(&((*_58815_g.alloc)._field_Kind));
				if ((!(_1b2d72c04_annotateKind(_self_, &((*_5898_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6e0d9a0:;
			++it;
			_5888_i++;
			goto _iter_begin_1b6e0d9a0;
		}
		_iter_end_1b6e0d9a0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2d728b3_annotateAny(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _60139_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6023_kind = _1b2db1a23_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e12069:;
		if (it != expr_end) {
			jule::I64 _6037_i = it - expr->begin();
			jule::Ptr<_1b2aea5e7_GenericDecl> _60310_g = *it;
			{
				if ((_6023_kind != (*(_60310_g))._field_Ident)) {
					goto _iter_next_1b6e12069;
				};
				jule::Ptr<_1b2daee72_InsGeneric> _6074_t = (*((*(_self_))._field_f))._field_Generics[_6037_i];;
				{
					
					if ((_6074_t == nullptr) || ((*(_6074_t))._field_Kind == nullptr)) {
						_case_begin_1b6e138b7:;
						{
							_1b2d7054d_pushGeneric(_self_, _60139_k, _6037_i);
						}
					}
					else if ((!(_1b2db1d64_Equal((*(_6074_t))._field_Kind, (*(_60139_k)))))) {
						_case_begin_1b6e13961:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1b6e13774:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_60139_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1b6e12069:;
			++it;
			_6037_i++;
			goto _iter_begin_1b6e12069;
		}
		_iter_end_1b6e12069:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b2d72c04_annotateKind(_1b2d6d99c_dynamicTypeAnnotation* _self_, jule::Ptr<_1b2db1627_TypeKind>* _62240_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1b2d728b3_annotateAny(_self_, _62240_k)) {
			_case_begin_1b6e16007:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b2db3ccd_Prim((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b6e1606d:;
			{
				__jule_func_result = _1b2d7088e_annotatePrim(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b2db4a9d_Arr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b6e160d4:;
			{
				__jule_func_result = _1b2d70bd0_annotateArr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b2db4d34_Slc((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b6e1615b:;
			{
				__jule_func_result = _1b2d71021_annotateSlc(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b2db586d_Map((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b6e16315:;
			{
				__jule_func_result = _1b2d7175d_annotateMap(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b2db50ba_Fn((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b6e1637b:;
			{
				__jule_func_result = _1b2d71a9e_annotateFn(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b2db42ea_Ptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b6e163e2:;
			{
				__jule_func_result = _1b2d71de0_annotatePtr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b2db4064_Sptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b6e16458:;
			{
				__jule_func_result = _1b2d72231_annotateSptr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b2db5351_Struct((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1b6e164d0:;
			{
				__jule_func_result = _1b2d72572_annotateStruct(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b6e15dd6:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b6e15963:;
	};
}



inline jule::Bool _1b2d72e8a_annotate(_1b2d6d99c_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1b2d72c04_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}







inline void _1b2d73d9d_pushErrToken(_1b2d73809_fnCallArgChecker* _self_, jule::Ptr<_1b2ac7eba_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args) {
	_1b2d05e95_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _66728_token, _66750_fmt, _66770_args);
}



inline void _1b2d74211_pushErr(_1b2d73809_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args) {
	_1b2d73d9d_pushErrToken(_self_, (*(_self_))._field_errorToken, _67123_fmt, _67143_args);
}



inline jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>> _1b2d74497_getParams(_1b2d73809_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1b2bd963c_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1b2d747d8_checkCounts(_1b2d73809_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>* _68428_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6857_n = (*(_68428_params)).len();;
	if (((_6857_n > 0LL) && _1b2bd963c_IsSelf((*((*(_68428_params))[0LL]))._field_Decl.ptr()))) {
		(_6857_n)--;
	};
	jule::I64 _6907_diff = (_6857_n - (*(_self_))._field_args.len());;
	jule::Str _6917_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_6907_diff == 0LL)) {
			_case_begin_1b6e22e48:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6857_n > 0LL) && (*(*((*(_68428_params))[(_6857_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1b6e22ae6:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6907_diff < 0LL) || (_6907_diff > (*(_68428_params)).len()))) {
			_case_begin_1b6e22b5c:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1b6e22a80:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1b6e22a08:;
	};
	_20d8ca601_Builder _7027_err = static__20d8cb1c3_New(32LL);;
	_20d8d4ac2_WriteStr(&_7027_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_20d8d4ac2_WriteStr(&_7027_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _68428_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e224ec:;
		if (it != expr_end) {
			jule::I64 _7057_i = it - expr->begin();
			jule::Ptr<_1b2bdc91a_ParamIns> *_70510_p = it;
			{
				_20d8d4ac2_WriteStr(&_7027_err, _1b2db1a23_Str((*((*(_70510_p))))._field_Kind.ptr()));
				if ((((*(_68428_params)).len() - _7057_i) > 1LL)) {
					_20d8d4ac2_WriteStr(&_7027_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b6e224ec:;
			++it;
			_7057_i++;
			goto _iter_begin_1b6e224ec;
		}
		_iter_end_1b6e224ec:;
	};
	_20d8d4d7a_WriteByte(&_7027_err, ')');
	_1b2d74211_pushErr(_self_, _6917_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_20d8d53b9_Str(&_7027_err), &__jule_any_type5); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b2d74c8e_checkArg(_1b2d73809_fnCallArgChecker* _self_, jule::Ptr<_1b2bdc91a_ParamIns>* _71629_p, jule::Ptr<_1b2d7dc21_Data>* _71648_arg, jule::Ptr<_1b2ac7eba_Token>* _71665_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1b2be0d4c_parameterUsesGenerics(_71629_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_71629_p))))._field_Decl))._field_Variadic)) && _1b2d7c3e5_isGoodValueToInfer(_71648_arg));
		if (__jule_func_result) {
			_1b2d6d99c_dynamicTypeAnnotation _7219_dta = _1b2d6d99c_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_71629_p)), ._field_a=(*(_71648_arg)), ._field_errorToken=(*(_71665_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1b2d72e8a_annotate(&_7219_dta);
		};
		if ((!(__jule_func_result))) {
			_1b2d73d9d_pushErrToken(_self_, (*(_71665_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1b2d12c1b_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Kind), _71648_arg, _71665_errorToken)) {
		__jule_func_result = _1b2d0d486_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Kind), _71648_arg, (*(_71665_errorToken)), _1b2d83ece_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b2d7518a_push(_1b2d73809_fnCallArgChecker* _self_, jule::Ptr<_1b2bdc91a_ParamIns>* _74525_p, jule::Ptr<_1b2ae2721_Expr> _74543_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2db1627_TypeKind> _7467_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7473_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_74525_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_74525_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_74525_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1b2d7dc21_Data> _7557_d = _1b2d9e7ad_evalExpr((*(_self_))._field_e, _74543_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7467_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7473_oldImmut;
	if ((_7557_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1b2d74c8e_checkArg(_self_, _74525_p, &(_7557_d), &((*(_74543_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7557_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1b2d75586_pushVariadic(_1b2d73809_fnCallArgChecker* _self_, jule::Ptr<_1b2bdc91a_ParamIns>* _76933_p, jule::I64 _76951_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7717_variadiced = false;;
	jule::Bool _7723_more = ((_76951_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1b2bd09c9_SliceExprModel> _7737_model = jule::new_ptr<_1b2bd09c9_SliceExprModel>(_1b2bd09c9_SliceExprModel{._field_ElemKind=(*((*(_76933_p))))._field_Kind, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1b2db1627_TypeKind> _7777_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1b2db1627_TypeKind> _7847_oldKind = (*((*(_76933_p))))._field_Kind;;
	(*((*(_76933_p))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>((*(*((*(_76933_p))))._field_Kind.alloc));
	(*(*((*(_76933_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_76933_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_76933_p))))._field_Kind=_7847_oldKind;
	});;
	for (; (_76951_i < (*(_self_))._field_args.len()); (_76951_i)++) {
		{
			jule::Ptr<_1b2ae2721_Expr> _7938_arg = (*(_self_))._field_args[_76951_i];;
			{
				auto &_match_expr{ (*(_7938_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type78) {
					_case_begin_1b6e3ceeb:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2dbdc3e_Slc>(_1b2dbdc3e_Slc{._field_Elem=(*((*(_76933_p))))._field_Kind}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1b6e3d2e8:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_76933_p))))._field_Kind;
					}
				}
				_match_end_1b6e3d282:;
			};
			jule::Ptr<_1b2d7dc21_Data> _8068_d = _1b2d9e12b_eval((*(_self_))._field_e, _7938_arg);;
			if ((_8068_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1b6e3c47e;
			};
			if ((*((*(_8068_d))._field_Kind))._field_Variadic) {
				_7717_variadiced=true;
				(*(*((*(_76933_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1b2d74c8e_checkArg(_self_, _76933_p, &(_8068_d), &((*(_7938_arg))._field_Token)));
				(*(*((*(_76933_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8068_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type79) {
						_case_begin_1b6e417d5:;
						{
							_7737_model=(*(_8068_d))._field_Model.unsafe_cast_ptr<_1b2bd09c9_SliceExprModel>();
							(*(_7737_model))._field_ElemKind=(*((*(_76933_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1b6e44a2a:;
						{
							_7737_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8068_d))._field_Model); };
						}
					}
					_match_end_1b6e449b4:;
				};
				(_76951_i)++;
				goto _iter_end_1b6e3c47e;
			};
			__jule_func_result=(__jule_func_result && _1b2d74c8e_checkArg(_self_, _76933_p, &(_8068_d), &((*_7938_arg.alloc)._field_Token)));
			(*(_7737_model))._field_Elems=jule::append((*_7737_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8068_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1b6e3c47e:;
	}
	_iter_end_1b6e3c47e:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7777_old;
	if ((_7717_variadiced && _7723_more)) {
		_1b2d73d9d_pushErrToken(_self_, (*((*(_self_))._field_args[_76951_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7737_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7737_model, &__jule_any_type79)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b2d758c7_checkArgs(_1b2d73809_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>* _85030_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8513_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _8557_i = 0LL;;
	if ((((*(_85030_params)).len() > 0LL) && _1b2bd963c_IsSelf((*((*(_85030_params))[0LL]))._field_Decl.ptr()))) {
		(_8557_i)++;
	};
	_julec_label_1b6e4cc64:;
	while ((_8557_i < (*(_85030_params)).len())) {
		{
			jule::Ptr<_1b2bdc91a_ParamIns> _8628_p = (*(_85030_params))[_8557_i];;
			{
				
				if ((*(*(_8628_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1b6e4e716:;
					{
						__jule_func_result=(_1b2d75586_pushVariadic(_self_, &(_8628_p), _8557_i) && __jule_func_result);
						goto _iter_end_1b6e4d00b;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8557_i)) {
					_case_begin_1b6e4e804:;
					{
						__jule_func_result=false;
						goto _iter_end_1b6e4d00b;
					}
				}
				else {
					_case_begin_1b6e4e34d:;
					{
						__jule_func_result=(_1b2d7518a_push(_self_, &(_8628_p), (*(_self_))._field_args[_8557_i]) && __jule_func_result);
					}
				}
				_match_end_1b6e4e2c6:;
			};
			(_8557_i)++;
		}
	_iter_next_1b6e4d00b:;
	}
	_iter_end_1b6e4d00b:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8513_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b2d75b5d_checkDynamicTypeAnnotation(_1b2d73809_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e5154d:;
		if (it != expr_end) {
			jule::Ptr<_1b2daee72_InsGeneric> _88210_g = *it;
			{
				if ((_88210_g == nullptr)) {
					_1b2d74211_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6e5154d:;
			++it;
			goto _iter_begin_1b6e5154d;
		}
		_iter_end_1b6e5154d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2d75de4_check(_1b2d73809_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>> _8927_params = _1b2d74497_getParams(_self_);;
	__jule_func_result=_1b2d747d8_checkCounts(_self_, &(_8927_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1b2d758c7_checkArgs(_self_, &(_8927_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1b2d75b5d_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1b2d76cc4_pushErr(_1b2d76741_structLitChecker* _self_, jule::Ptr<_1b2ac7eba_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args) {
	_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), _93023_token, _93045_fmt, _93065_args);
}



inline void _1b2d77137_pushSuggestion(_1b2d76741_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args) {
	_1b2d8133e_pushSuggestion((*(_self_))._field_e.ptr(), _93530_fmt, _93550_args);
}



inline void _1b2d77555_pushMatch(_1b2d76741_structLitChecker* _self_, jule::Ptr<_1b2b10e26_FieldIns>* _93930_f, jule::Ptr<_1b2d7dc21_Data>* _93949_d, jule::Ptr<_1b2ac7eba_Token>* _93964_errorToken) {
	;
	jule::Bool _9453_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_93930_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1b2d12c1b_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9453_mutable, false, &((*((*(_93930_f))))._field_Kind), _93949_d, _93964_errorToken)) {
		_1b2d0d486_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_93930_f))))._field_Kind), _93949_d, (*(_93964_errorToken)), _1b2d83ece_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1b2bce027_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1b2bce027_StructArgExprModel>(_1b2bce027_StructArgExprModel{._field_Token=(*(_93964_errorToken)), ._field_Field=(*(_93930_f)), ._field_Expr=(*(_93949_d))})); };
}



inline void _1b2d778b8_checkPair(_1b2d76741_structLitChecker* _self_, jule::Ptr<_1b2ae6e40_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1b2ae2721_Expr>>* _95862_exprs) {
	jule::Ptr<_1b2b10e26_FieldIns> _9607_f = _1b2b12db2_FindField((*(_self_))._field_s.ptr(), (*((*((*(_95830_pair))))._field_Field))._field_Kind);;
	if ((_9607_f == nullptr)) {
		_1b2d76cc4_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((!(_1b2d06704_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9607_f))._field_Decl))._field_Public, (*(*(_9607_f))._field_Decl.alloc)._field_Token)))) {
		_1b2d76cc4_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1b2d77137_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1b6e5c9ee:;
	{
		auto expr = _95862_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e5d9bc:;
		if (it != expr_end) {
			jule::Ptr<_1b2ae2721_Expr> _97215_expr = *it;
			{
				{
					auto &_match_expr{ (*(_97215_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1b6e5e4b2:;
						{
							jule::Ptr<_1b2ae6e40_FieldExprPair> _9759_dpair = (*(_97215_expr))._field_Kind.unsafe_cast_ptr<_1b2ae6e40_FieldExprPair>();;
							{
								
								if (((*(_95830_pair)) == _9759_dpair)) {
									_case_begin_1b6e62691:;
									{
										goto _iter_end_1b6e5d9bc;
									}
								}
								else if (((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind == (*(*(_9759_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1b6e6273a:;
									{
										_1b2d76cc4_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
										goto _iter_end_1b6e5d9bc;
									}
								}
								_match_end_1b6e6262a:;
							};
						}
					}
					_match_end_1b6e5e43a:;
				};
			}
			_iter_next_1b6e5d9bc:;
			++it;
			goto _iter_begin_1b6e5d9bc;
		}
		_iter_end_1b6e5d9bc:;
	};
	jule::Ptr<_1b2db1627_TypeKind> _9867_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9867_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9607_f))._field_Kind;
	jule::Ptr<_1b2d7dc21_Data> _9907_d = _1b2d9e7ad_evalExpr((*(_self_))._field_e, (*((*(_95830_pair))))._field_Expr);;
	if ((_9907_d == nullptr)) {
		return;;
	};
	_1b2d77555_pushMatch(_self_, &(_9607_f), &(_9907_d), &((*((*(_95830_pair))))._field_Field));
}



inline jule::Bool _1b2d77c09_readyExprs(_1b2d76741_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b2ae2721_Expr>>* _99731_exprs) {
	jule::Bool _9987_ok = true;;
	{
		auto expr = _99731_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e6718a:;
		if (it != expr_end) {
			jule::I64 _9998_i = it - expr->begin();
			jule::Ptr<_1b2ae2721_Expr> _99915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_99915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1b6e67d7d:;
						{
							jule::Ptr<_1b2ae854b_KeyValPair> _10029_pair = (*(_99915_expr))._field_Kind.unsafe_cast_ptr<_1b2ae854b_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10029_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type41) {
									_case_begin_1b6e6ade7:;
									{
										goto _match_end_1b6e6a468;
									}
								}
								else {
									_case_begin_1b6e6a4ce:;
									{
										_1b2d76cc4_pushErr(_self_, (*(_10029_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_9987_ok=false;
										goto _iter_next_1b6e6718a;
									}
								}
								_match_end_1b6e6a468:;
							};
							(*((*(_99731_exprs))[_9998_i]))._field_Kind=jule::Any(jule::new_ptr<_1b2ae6e40_FieldExprPair>(_1b2ae6e40_FieldExprPair{._field_Field=(*((*(_10029_pair))._field_Key))._field_Token, ._field_Expr=(*_10029_pair.alloc)._field_Val}), &__jule_any_type80);
						}
					}
					_match_end_1b6e67d06:;
				};
			}
			_iter_next_1b6e6718a:;
			++it;
			_9998_i++;
			goto _iter_begin_1b6e6718a;
		}
		_iter_end_1b6e6718a:;
	};
	return _9987_ok;;
}



inline void _1b2d77eb2_check(_1b2d76741_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b2ae2721_Expr>>* _102126_exprs) {
	if (((*(_102126_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1b2d77c09_readyExprs(_self_, _102126_exprs)))) {
		return;;
	};
	jule::Bool _10287_paired = false;;
	{
		auto expr = _102126_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e6e071:;
		if (it != expr_end) {
			jule::I64 _10298_i = it - expr->begin();
			jule::Ptr<_1b2ae2721_Expr> _102915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_102915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1b6e74e34:;
						{
							jule::Ptr<_1b2ae6e40_FieldExprPair> _10329_pair = (*(_102915_expr))._field_Kind.unsafe_cast_ptr<_1b2ae6e40_FieldExprPair>();;
							if (((_10298_i > 0LL) && (!(_10287_paired)))) {
								_1b2d76cc4_pushErr(_self_, (*(_10329_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10287_paired=true;
							_1b2d778b8_checkPair(_self_, &(_10329_pair), _102126_exprs);
						}
					}
					else {
						_case_begin_1b6e7022b:;
						{
							if (_10287_paired) {
								_1b2d76cc4_pushErr(_self_, (*(_102915_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10298_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1b2d76cc4_pushErr(_self_, (*_102915_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1b6e6e071;
							};
							jule::Ptr<_1b2b10e26_FieldIns> _10479_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10298_i];;
							if ((!(_1b2d06704_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10479_field))._field_Decl))._field_Public, (*(*(_10479_field))._field_Decl.alloc)._field_Token)))) {
								_1b2d76cc4_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1b2d77137_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1b2db1627_TypeKind> _10559_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10559_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10479_field.alloc)._field_Kind;
							jule::Ptr<_1b2d7dc21_Data> _10599_d = _1b2d9e7ad_evalExpr((*(_self_))._field_e, _102915_expr);;
							if ((_10599_d == nullptr)) {
								goto _iter_next_1b6e6e071;
							};
							_1b2d77555_pushMatch(_self_, &(_10479_field), &(_10599_d), &((*_102915_expr.alloc)._field_Token));
						}
					}
					_match_end_1b6e701b5:;
				};
			}
			_iter_next_1b6e6e071:;
			++it;
			_10298_i++;
			goto _iter_begin_1b6e6e071;
		}
		_iter_end_1b6e6e071:;
	};
	if ((!(_10287_paired))) {
		jule::I64 _10704_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10718_diff = (_10704_n - (*(_102126_exprs)).len());;
		{
			
			if ((_10718_diff <= 0LL)) {
				_case_begin_1b6e78a4d:;
				{
					return;;
				}
			}
			_match_end_1b6e7892c:;
		};
		_20d8ca601_Builder _10778_idents = static__20d8cb1c3_New(32LL);;
		for (; (_10718_diff > 0LL); (_10718_diff)--) {
			{
				_20d8d4ac2_WriteStr(&_10778_idents, jule::Str::lit(", ", 2));
				_20d8d4ac2_WriteStr(&_10778_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10704_n - _10718_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1b6e7929b:;
		}
		_iter_end_1b6e7929b:;;
		_1b2d76cc4_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_20d8d5d6a_Buf(&_10778_idents).slice(2LL)), &__jule_any_type5); __jule_collection; }));
	};
}








inline jule::Bool _1b2d78523_rangeChecker_eq(_1b2d78523_rangeChecker *_self_, _1b2d78523_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1b2d26ca7_Var> _1b2d78a40_buildVar(_1b2d78523_rangeChecker* _self_, jule::Ptr<_1b2b01257_VarDecl>* _109725_decl) {
	jule::Ptr<_1b2d26ca7_Var> _10987_v = _1b2cc8264_buildVar((*(_109725_decl)));;
	return _10987_v;;
}



inline void _1b2d78c3d_setSizeKey(_1b2d78523_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1b2aca8a2_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1b2d78a40_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
}



inline void _1b2d7915b_checkRangeExprValidity(_1b2d78523_rangeChecker* _self_, jule::Ptr<_1b2d7dc21_Data>* _111643_d, jule::Ptr<_1b2d26ca7_Var>* _111654_key, jule::Ptr<_1b2db1627_TypeKind>* _111670_k) {
	jule::Bool _11177__mut = (*((*(_111654_key))))._field_Mutable;;
	if ((_11177__mut && (!(_1b2db300d_Mutable((*(_111670_k)).ptr()))))) {
		_11177__mut=false;
	};
	_1b2d12c1b_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11177__mut, (*((*(_111654_key))))._field_Reference, &((*((*((*(_111654_key))))._field_Kind))._field_Kind), _111643_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1b2d79359_checkSlice(_1b2d78523_rangeChecker* _self_) {
	_1b2d78c3d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b2aca8a2_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b2dbdc3e_Slc> _11357_slc = _1b2db4d34_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1b2d78a40_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=(*(_11357_slc))._field_Elem});
	_1b2d7915b_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11357_slc.alloc)._field_Elem));
}



inline void _1b2d79557_checkArray(_1b2d78523_rangeChecker* _self_) {
	_1b2d78c3d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b2aca8a2_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b2dc1060_Arr> _11487_arr = _1b2db4a9d_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1b2d78a40_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=(*(_11487_arr))._field_Elem});
	_1b2d7915b_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11487_arr.alloc)._field_Elem));
}



inline void _1b2d79755_checkMapKeyA(_1b2d78523_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1b2aca8a2_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b2dc03d3_Map> _11607_m = _1b2db586d_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1b2d78a40_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=(*(_11607_m))._field_Key});
	jule::Ptr<_1b2d7dc21_Data> _11647_d = jule::new_ptr<_1b2d7dc21_Data>((*(*(_self_))._field_d.alloc));;
	(*_11647_d.alloc)._field_Kind=(*_11607_m.alloc)._field_Key;
	_1b2d7915b_checkRangeExprValidity(_self_, &(_11647_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11607_m.alloc)._field_Key));
}



inline void _1b2d79953_checkMapKeyB(_1b2d78523_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b2aca8a2_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b2dc03d3_Map> _11757_m = _1b2db586d_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1b2d78a40_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=(*(_11757_m))._field_Val});
	jule::Ptr<_1b2d7dc21_Data> _11797_d = jule::new_ptr<_1b2d7dc21_Data>((*(*(_self_))._field_d.alloc));;
	(*_11797_d.alloc)._field_Kind=(*_11757_m.alloc)._field_Val;
	_1b2d7915b_checkRangeExprValidity(_self_, &(_11797_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11757_m.alloc)._field_Val));
}



inline void _1b2d79b51_checkMap(_1b2d78523_rangeChecker* _self_) {
	_1b2d79755_checkMapKeyA(_self_);
	_1b2d79953_checkMapKeyB(_self_);
}



inline void _1b2d79d4e_checkStr(_1b2d78523_rangeChecker* _self_) {
	_1b2d78c3d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b2aca8a2_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1b2d78a40_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_Kind;
}



inline void _1b2d7a04c_checkComptime(_1b2d78523_rangeChecker* _self_) {
	_1b2d78c3d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1b2d05e95_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1b2d05e95_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1b2aca8a2_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1b2d78a40_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1b2d7a2d3_checkComptimeRange(_1b2d78523_rangeChecker* _self_) {
	jule::Ptr<_1b2c76ba2_comptimeRange> _12147_range = _1b2db7177_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_12147_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data6)) {
			_case_begin_1b6e9aa92:;
			{
				_1b2d7a04c_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1b6e9ada0:;
			{
				_1b2d05e95_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b6e9ad39:;
	};
}



inline jule::Bool _1b2d7a569_check(_1b2d78523_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1b6e9e227:;
		}
		else if ((_1b2db4d34_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6e9cac7:;
			{
				_1b2d79359_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1b2db4a9d_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6e9cb3d:;
			{
				_1b2d79557_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1b2db586d_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6e9d19e:;
			{
				_1b2d79b51_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1b2db7177_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6e9d215:;
			{
				return _1b2d7a2d3_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1b6e9ca3e:;
			{
				jule::Ptr<_1b2db9740_Prim> _12474_prim = _1b2db3ccd_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_12474_prim != nullptr) && _1b2dbcc0a_IsStr(_12474_prim))) {
					_1b2d79d4e_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1b6e9c951:;
	};
	_1b2d05e95_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1b2d7b1e6_prepareTypes(_1b2d7ac84_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1b2bdeca2_Types((*(_self_))._field_f);
	};
}



inline void _1b2d7b49e_prepareExprs(_1b2d7ac84_retTypeChecker* _self_, jule::Ptr<_1b2ae2721_Expr>* _127533_e) {
	if (((*(_127533_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_127533_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b6ea55e6:;
			{
				(*(_self_))._field_exprs=(*((*((*(_127533_e))))._field_Kind.unsafe_cast_ptr<_1b2ae3315_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1b6ea4e75:;
			{
				{ jule::Slice<jule::Ptr<_1b2ae2721_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_127533_e))); };
			}
		}
		_match_end_1b6ea49e1:;
	};
}



inline void _1b2d7b69c_checkExprs(_1b2d7ac84_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b2d7dc21_Data>> _12917_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d7dc21_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2d7dc21_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1b2d80948_eval> _12927_eval = _1b2d0cd6a_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ea7c9c:;
		if (it != expr_end) {
			jule::I64 _12938_i = it - expr->begin();
			jule::Ptr<_1b2ae2721_Expr> _129315_expr = *it;
			{
				if ((_12938_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1b6ea7c9c;
				};
				jule::Ptr<_1b2db1627_TypeKind> _12988_t = (*(_self_))._field_types[_12938_i];;
				(*(_12927_eval))._field_prefix=_12988_t;
				jule::Ptr<_1b2d7dc21_Data> _13018_d = _1b2d9e7ad_evalExpr(_12927_eval, _129315_expr);;
				if ((_13018_d == nullptr)) {
					goto _iter_next_1b6ea7c9c;
				};
				{ jule::Slice<jule::Ptr<_1b2d7dc21_Data>> &__jule_push_dest = _12917_datas; __jule_push_dest.push(_13018_d); };
				if (((!((*(_13018_d))._field_Mutable)) && _1b2db300d_Mutable((*(_13018_d))._field_Kind.ptr()))) {
					_1b2d05e95_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1b2d6c0c7_assignTypeChecker _13138_ac = _1b2d6c0c7_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_12988_t, ._field_d=_13018_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_1b2caee93_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1b2d6d0c8_check(&_13138_ac);
			}
			_iter_next_1b6ea7c9c:;
			++it;
			_12938_i++;
			goto _iter_begin_1b6ea7c9c;
		}
		_iter_end_1b6ea7c9c:;
	};
	if ((_12917_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1b2bd3c0d_TupleExprModel>(_1b2bd3c0d_TupleExprModel{._field_Datas=_12917_datas}), &__jule_any_type83);
	} else if ((_12917_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_12917_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1b2d7b933_tryFuncMultiRetForward(_1b2d7ac84_retTypeChecker* _self_) {
	jule::Ptr<_1b2d80948_eval> _13357_eval = _1b2d0cd6a_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));;
	jule::Ptr<_1b2d7dc21_Data> _13367_d = _1b2d9e7ad_evalExpr(_13357_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13367_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1b2dbe833_Tuple> _13427_tup = _1b2db5b04_Tup((*(_13367_d))._field_Kind.ptr());;
	if ((_13427_tup == nullptr)) {
		return false;;
	};
	if (((*(_13427_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1b6eb3d63;
	};
	(*(_self_))._field_model=(*(_13367_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6eb1e93:;
		if (it != expr_end) {
			jule::I64 _13507_i = it - expr->begin();
			{
				jule::Ptr<_1b2db1627_TypeKind> _13518_t1 = (*(_self_))._field_types[_13507_i];;
				jule::Ptr<_1b2db1627_TypeKind> _13528_t2 = (*(_13427_tup))._field_Types[_13507_i];;
				if ((!(_1b2d0d93c__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13518_t1), &(_13528_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1b6eb3d63;
				};
			}
			_iter_next_1b6eb1e93:;
			++it;
			_13507_i++;
			goto _iter_begin_1b6eb1e93;
		}
		_iter_end_1b6eb1e93:;
	};
	return true;;
	_julec_label_1b6eb3d63:;
	_20d8ca601_Builder _13597_wanted = static__20d8cb1c3_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6eb4193:;
		if (it != expr_end) {
			jule::I64 _13607_i = it - expr->begin();
			jule::Ptr<_1b2db1627_TypeKind> _136010_t = *it;
			{
				_20d8d4ac2_WriteStr(&_13597_wanted, _1b2db1a23_Str(_136010_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13607_i) > 1LL)) {
					_20d8d4ac2_WriteStr(&_13597_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b6eb4193:;
			++it;
			_13607_i++;
			goto _iter_begin_1b6eb4193;
		}
		_iter_end_1b6eb4193:;
	};
	_20d8ca601_Builder _13667_given = static__20d8cb1c3_New(32LL);;
	{
		auto expr = &((*(_13427_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6eb622d:;
		if (it != expr_end) {
			jule::I64 _13677_i = it - expr->begin();
			jule::Ptr<_1b2db1627_TypeKind> _136710_t = *it;
			{
				_20d8d4ac2_WriteStr(&_13667_given, _1b2db1a23_Str(_136710_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13677_i) > 1LL)) {
					_20d8d4ac2_WriteStr(&_13667_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b6eb622d:;
			++it;
			_13677_i++;
			goto _iter_begin_1b6eb622d;
		}
		_iter_end_1b6eb622d:;
	};
	_1b2d05e95_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_20d8d53b9_Str(&_13597_wanted), &__jule_any_type5); (*it++) = jule::Any(_20d8d53b9_Str(&_13667_given), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline jule::Bool _1b2d7bc74_check(_1b2d7ac84_retTypeChecker* _self_, jule::Ptr<_1b2ae2721_Expr>* _137726_e) {
	_1b2d7b1e6_prepareTypes(_self_);
	_1b2d7b49e_prepareExprs(_self_, _137726_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1b6eb94d9:;
			{
				if ((!(_1b2bdbc38_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1b2d05e95_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1b2bdae68_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1b6eb9550:;
			{
				_1b2d05e95_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1b6eb95b6:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1b6ebe038:;
						{
							if (_1b2d7b933_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1b6ebde7d:;
				};
				_1b2d05e95_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1b6eb962c:;
			{
				_1b2d05e95_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1b6eb9693:;
			{
				_1b2d05e95_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b6eb93b8:;
	};
	_1b2d7b69c_checkExprs(_self_);
	return true;;
}








inline jule::Bool _1b2d7dc21_Data_eq(_1b2d7dc21_Data *_self_, _1b2d7dc21_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1b2d7e13e_IsNil(_1b2d7dc21_Data* _self_) {
	return _1b2db275a_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1b2d7e3c5_IsVoid(_1b2d7dc21_Data* _self_) {
	return _1b2db29e1_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1b2d7e65b_IsConst(_1b2d7dc21_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1b2d7e99c_GoodOperand(_1b2d7dc21_Data* _self_, jule::Ptr<_1b2d7dc21_Data>* _6128_other) {
	if ((_1b2db4817_TypeEnum((*((*(_6128_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1b2db3ccd_Prim((*((*(_6128_other))))._field_Kind) == nullptr) || (!(_1b2dbce91_IsAny(_1b2db3ccd_Prim((*((*(_6128_other))))._field_Kind).ptr())))) && (_1b2db55d7_Trait((*((*(_6128_other))))._field_Kind) == nullptr)) && (!(_1b2db275a_IsNil((*(_self_))._field_Kind))));;
}








inline jule::Bool _1b2d7ed98_Value_eq(_1b2d7ed98_Value *_self_, _1b2d7ed98_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1b2d80948_eval_eq(_1b2d80948_eval *_self_, _1b2d80948_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_immutable == _self_->_field_immutable) &&
		(_self_->_field_ignored == _self_->_field_ignored) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		(_self_->_field_arg == _self_->_field_arg);
}

inline void _1b2d80ecb_pushErr(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _9223_token, jule::Str _9245_fmt, jule::Slice<jule::Any> _9265_args) {
	_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), _9223_token, _9245_fmt, _9265_args);
}



inline void _1b2d8133e_pushSuggestion(_1b2d80948_eval* _self_, jule::Str _9730_fmt, jule::Slice<jule::Any> _9750_args) {
	_1b2d06308_pushSuggestion((*(_self_))._field_s.ptr(), _9730_fmt, _9750_args);
}



inline void _1b2d8153c_allowBuiltin(_1b2d80948_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1b2d8173a_disallowBuiltin(_1b2d80948_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1b2d819c1_isUnsafe(_1b2d80948_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1b2d81c57_isGlobal(_1b2d80948_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4)) {
			_case_begin_1b702d0ec:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b702d509:;
			{
				return false;;
			}
		}
		_match_end_1b702d493:;
	};
}



inline jule::Bool _1b2d82065_applyNumericPrefix(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _12439_d) {
	if ((((((*(_12439_d)) == nullptr) || (!(_1b2d7e65b_IsConst((*(_12439_d)).ptr())))) || (_1b2db3ccd_Prim((*((*(_12439_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1b2db9740_Prim> _1313_prim = _1b2db3ccd_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1313_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1b2c75497_IsFloat(_1b2db9ab4_Str(_1313_prim.ptr()))) {
			_case_begin_1b7030b6b:;
			{
				(*((*(_12439_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>((*((*(_self_))._field_prefix)));
				_1b2bc5804_SetF64((*((*(_12439_d))))._field_Constant.ptr(), _1b2bc4979_AsF64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		else if (_1b2c74a7e_IsSigInt(_1b2db9ab4_Str(_1313_prim.ptr()))) {
			_case_begin_1b7030bd2:;
			{
				if ((!(_1b2d646b8_sigAssignable(_1b2db9ab4_Str(_1313_prim.ptr()), _12439_d)))) {
					return false;;
				};
				(*((*(_12439_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>((*((*(_self_))._field_prefix)));
				_1b2bc4c32_SetI64((*((*(_12439_d))))._field_Constant.ptr(), _1b2bc445c_AsI64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		else if (_1b2c74d8c_IsUnsigInt(_1b2db9ab4_Str(_1313_prim.ptr()))) {
			_case_begin_1b7030c48:;
			{
				if ((!(_1b2d64a81_unsigAssignable(_1b2db9ab4_Str(_1313_prim.ptr()), _12439_d)))) {
					return false;;
				};
				(*((*(_12439_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>((*((*(_self_))._field_prefix)));
				_1b2bc4eda_SetU64((*((*(_12439_d))))._field_Constant.ptr(), _1b2bc46e3_AsU64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		_match_end_1b7030a7d:;
	};
	return true;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d823a6_litStr(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr>* _15919_l) {
	jule::Str _1607_s = jule::Str();;
	if (_1b2ac93a6_IsRawStr((*((*(_15919_l))))._field_Value)) {
		_1607_s=_1b2d62a3a_ToRawStr((*((*(_15919_l))))._field_Value);
	} else {
		_1607_s=_1b2d62d7b_ToStr((*((*(_15919_l))))._field_Value);
	};
	jule::Ptr<_1b2b6c23a_Const> _1667_constant = static__1b2bc2a54_NewStr(_1607_s);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e9261a_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1667_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1667_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d826e7_litRune(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr>* _17620_l) {
	jule::I32 _1773_r = _1b2d47e3d_ToRune((*((*(_17620_l))))._field_Value);;
	jule::Ptr<_1b2d7dc21_Data> _1787_data = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1b2bc22e5_NewI64(static_cast<jule::I64>(_1773_r))});;
	if ((_1773_r <= 255LL)) {
		(*(_1787_data))._field_Kind=_1b2e94100_primU8;
	} else {
		(*(_1787_data))._field_Kind=_1b2e93a8e_primI32;
	};
	(*(_1787_data))._field_Model=jule::Any(jule::new_ptr<_1b2bd7508_RuneExprModel>(_1b2bd7508_RuneExprModel{._field_Code=_1773_r}), &__jule_any_type85);
	(*_1787_data.alloc)._field_Mutable=true;
	(*_1787_data.alloc)._field_IsRune=true;
	(*_1787_data.alloc)._field_untyped=true;
	return _1787_data;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d82a38_litFloat(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr>* _19521_l) {
	jule::F64 _1963_f = ({
		auto except = _1cab1e1c4_ParseFloat((*((*(_19521_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1b2b6c23a_Const> _1977_constant = static__1b2bc2d1d_NewF64(_1963_f);;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e9509b_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1977_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1977_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d82d79_litInt(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr>* _20723_l) {
	;
	jule::Str _2107_lit = (*((*(_20723_l))))._field_Value;;
	jule::I64 _2117_base = 0LL;;
	{
		
		if (_20d8b7665_HasPrefix(_2107_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1b70430ac:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=16LLU;
			}
		}
		else if (_20d8b7665_HasPrefix(_2107_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1b704319a:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=2LLU;
			}
		}
		else if (_20d8b7665_HasPrefix(_2107_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1b7042c5a:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=8LLU;
			}
		}
		else if (((_2107_lit[0LL] == '0') && (_2107_lit.len() > 1LL))) {
			_case_begin_1b7042cc1:;
			{
				(_2107_lit).mut_slice(1LL);;
				_2117_base=8LLU;
			}
		}
		else {
			_case_begin_1b7042be4:;
			{
				_2117_base=10LLU;
			}
		}
		_match_end_1b7042b6c:;
	};
	jule::Ptr<_1b2d7dc21_Data> _2317_d = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
	jule::Bool _2337_ok = true;;
	jule::I64 _2343_sig = ({
		auto except = _1cab17a19_ParseInt(_2107_lit, _2117_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2337_ok=false;

			0LL;
		});
	});;
	if (_2337_ok) {
		(*_2317_d.alloc)._field_Constant=static__1b2bc22e5_NewI64(_2343_sig);
		(*_2317_d.alloc)._field_Kind=_1b2e932ec_primInt;
	} else {
		jule::U64 _2424_unsig = ({
			auto except = _1cab17563_ParseUint(_2107_lit, _2117_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1b2d80ecb_pushErr(_self_, (*((*(_20723_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2317_d.alloc)._field_Constant=static__1b2bc24c1_NewU64(_2424_unsig);
		(*_2317_d.alloc)._field_Kind=_1b2e92e34_primUint;
	};
	(*_2317_d.alloc)._field_Model=jule::Any((*_2317_d.alloc)._field_Constant, &__jule_any_type15);
	(*_2317_d.alloc)._field_untyped=true;
	if ((!(_1b2d82065_applyNumericPrefix(_self_, &(_2317_d))))) {
		_1b2da881c_fitBitsize(&(_2317_d));
	};
	return _2317_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d831ba_litNum(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr>* _26223_l) {
	{
		
		if (_1b2aca055_IsFloat((*((*(_26223_l))))._field_Value)) {
			_case_begin_1b704a229:;
			{
				return _1b2d82a38_litFloat(_self_, _26223_l);;
			}
		}
		else {
			_case_begin_1b704a1b3:;
			{
				return _1b2d82d79_litInt(_self_, _26223_l);;
			}
		}
		_match_end_1b704a0a3:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d8350b_evalLit(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae36ab_LitExpr> _27123_lit) {
	{
		
		if (_1b2ac9120_IsStr((*(_27123_lit))._field_Value)) {
			_case_begin_1b704b44a:;
			{
				return _1b2d823a6_litStr(_self_, &(_27123_lit));;
			}
		}
		else if (_1b2ac9670_IsRune((*(_27123_lit))._field_Value)) {
			_case_begin_1b704b4b1:;
			{
				return _1b2d826e7_litRune(_self_, &(_27123_lit));;
			}
		}
		else if (_1b2aca31e_IsNum((*(_27123_lit))._field_Value)) {
			_case_begin_1b704b527:;
			{
				return _1b2d831ba_litNum(_self_, &(_27123_lit));;
			}
		}
		else {
			_case_begin_1b704ad40:;
			{
				return nullptr;;
			}
		}
		_match_end_1b704ac30:;
	};
}



inline jule::Any _1b2d8384c_findBuiltins(_1b2d80948_eval* _self_, jule::Str* _28429_ident) {
	if (_1b2d0029c_IsPub((*(_28429_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data2)) {
				_case_begin_1b704d7b0:;
				{
					jule::Any _2889_def = _1b2da85db_findBuiltinsImport(_28429_ident, (*(_self_))._field_lookup.cast_ptr<_1b2cd4e1e_ImportInfo>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data2));;
					if ((_2889_def != nullptr)) {
						return _2889_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4)) {
				_case_begin_1b704d507:;
				{
					jule::Any _2939_def = _1b2da9345_findBuiltinsSema(_28429_ident, (*(_self_))._field_lookup.cast_ptr<_1b2d03091_sema>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));;
					if ((_2939_def != nullptr)) {
						return _2939_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)) {
				_case_begin_1b704d826:;
				{
					jule::Any _2989_def = _1b2da9345_findBuiltinsSema(_28429_ident, (*((*(_self_))._field_lookup.cast_ptr<_1b2cab830_scopeChecker>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)))._field_s);;
					if ((_2989_def != nullptr)) {
						return _2989_def;;
					};
				}
			}
			_match_end_1b704d705:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1b2e958d7_findBuiltinDef(_28429_ident);;
}



inline jule::Any _1b2d83c48_getDef(_1b2d80948_eval* _self_, jule::Str* _31123_ident, jule::Bool _31135_binded) {
	jule::Ptr<_1b2d26ca7_Var> _3167_v = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dd01e5_FindVar((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3167_v != nullptr)) {
		return jule::Any(_3167_v, &__jule_any_type7);;
	};
	jule::Ptr<_1b2db0835_TypeAlias> _3217_ta = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dd05e1_FindTypeAlias((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3217_ta != nullptr)) {
		return jule::Any(_3217_ta, &__jule_any_type8);;
	};
	if ((!(_31135_binded))) {
		jule::Ptr<_1b2be887c_Enum> _3278_enm = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dd156a_FindEnum((*(_self_))._field_lookup.data, (*(_31123_ident)));;
		if ((_3278_enm != nullptr)) {
			return jule::Any(_3278_enm, &__jule_any_type12);;
		};
		jule::Ptr<_1b2bea087_TypeEnum> _3328_tenm = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dd18ab_FindTypeEnum((*(_self_))._field_lookup.data, (*(_31123_ident)));;
		if ((_3328_tenm != nullptr)) {
			return jule::Any(_3328_tenm, &__jule_any_type13);;
		};
	};
	jule::Ptr<_1b2bda9b2_Fn> _3387_f = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dd0dd8_FindFn((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3387_f != nullptr)) {
		return jule::Any(_3387_f, &__jule_any_type10);;
	};
	jule::Ptr<_1b2b0db6b_Struct> _3437_s = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dd09dc_FindStruct((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3437_s != nullptr)) {
		return jule::Any(_3437_s, &__jule_any_type9);;
	};
	return _1b2d8384c_findBuiltins(_self_, _31123_ident);;
}



inline jule::Ptr<_1b2cc3094_ReferenceStack> _1b2d83ece_getOwnerRefers(_1b2d80948_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)) {
			_case_begin_1b7057cd6:;
			{
				return _1b2cb0229_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1b2cab830_scopeChecker>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));;
			}
		}
		else {
			_case_begin_1b7056675:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1b705660e:;
	};
	return nullptr;;
}



inline void _1b7070c77_pushReference(_1b2d80948_eval* _self_, jule::Ptr<_1b2bdda70_FnIns>* _36937_ref) {
	jule::Ptr<_1b2cc3094_ReferenceStack> _3707_refers = _1b2d83ece_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1b707321e_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1b2cc3c10_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type63));
	};
}

inline void _1b708c6ab_pushReference(_1b2d80948_eval* _self_, jule::Ptr<_1b2d26ca7_Var>* _36937_ref) {
	jule::Ptr<_1b2cc3094_ReferenceStack> _3707_refers = _1b2d83ece_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1b708e9cc_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1b2cc3c10_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type7));
	};
}

inline void _1b7173165_pushReference(_1b2d80948_eval* _self_, jule::Ptr<_1b2b119c6_StructIns>* _36937_ref) {
	jule::Ptr<_1b2cc3094_ReferenceStack> _3707_refers = _1b2d83ece_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1b717562e_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1b2cc3c10_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type64));
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d845c8__evalEnum(_1b2d80948_eval* _self_, jule::Ptr<_1b2be887c_Enum> _37625_enm) {
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_37625_enm, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d849c4_evalEnum(_1b2d80948_eval* _self_, jule::Ptr<_1b2be887c_Enum> _38528_enm, jule::Ptr<_1b2ac7eba_Token> _38540_errorToken) {
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_38528_enm))._field_Public, (*_38528_enm.alloc)._field_Token)))) {
		_1b2d80ecb_pushErr(_self_, _38540_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_38528_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b2d845c8__evalEnum(_self_, _38528_enm);;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d84d15__evalTypeEnum(_1b2d80948_eval* _self_, jule::Ptr<_1b2bea087_TypeEnum> _39429_enm) {
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_39429_enm, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d85211_evalTypeEnum(_1b2d80948_eval* _self_, jule::Ptr<_1b2bea087_TypeEnum> _40332_enm, jule::Ptr<_1b2ac7eba_Token> _40348_errorToken) {
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_40332_enm))._field_Public, (*_40332_enm.alloc)._field_Token)))) {
		_1b2d80ecb_pushErr(_self_, _40348_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_40332_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b2d84d15__evalTypeEnum(_self_, _40332_enm);;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d85552__evalStruct(_1b2d80948_eval* _self_, jule::Ptr<_1b2b119c6_StructIns> _41227_s) {
	jule::Ptr<_1b2d7dc21_Data> _4137_d = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_41227_s, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_41227_s, &__jule_any_type64), ._field_Decl=true, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
	if ((((*(_41227_s))._field_Decl != nullptr) && (*(*(_41227_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4137_d))._field_Kind))._field_BindIdent=(*(*(_41227_s))._field_Decl.alloc)._field_Ident;
	};
	return _4137_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d8594d_evalStruct(_1b2d80948_eval* _self_, jule::Ptr<_1b2b0db6b_Struct> _42630_s, jule::Ptr<_1b2ac7eba_Token> _42646_errorToken) {
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42630_s))._field_Public, (*_42630_s.alloc)._field_Token)))) {
		_1b2d80ecb_pushErr(_self_, _42646_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_42630_s.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b2d86102_checkDeprecated(_self_, &((*_42630_s.alloc)._field_Directives), _42646_errorToken);
	jule::Ptr<_1b2b119c6_StructIns> _4357_ins = _1b2b0e111_instance(_42630_s);;
	if (((*_42630_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1b2b119c6_StructIns> _4428_exist = _1b2b0e41e_appendInstance(_42630_s, &(_4357_ins));;
		if ((_4428_exist != nullptr)) {
			_4357_ins=_4428_exist;
		} else {
			if ((!(_1b2d1eb07_precheckStructIns((*(_self_))._field_s, &(_4357_ins), _42646_errorToken)))) {
				return nullptr;;
			};
		};
	};
	return _1b2d85552__evalStruct(_self_, _4357_ins);;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d85c8e_evalFnIns(_1b2d80948_eval* _self_, jule::Ptr<_1b2bdda70_FnIns> _45525_f) {
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45525_f, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45525_f, &__jule_any_type63), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline void _1b2d86102_checkDeprecated(_1b2d80948_eval* _self_, jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _46436_directives, jule::Ptr<_1b2ac7eba_Token> _46467_tok) {
	if (_1b2d819c1_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1b2adc809_Directive> _4693_d = _1b2da8223_findDirective(_46436_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_4693_d != nullptr)) {
		if (((*_4693_d.alloc)._field_Args.len() == 0LL)) {
			_1b2d80ecb_pushErr(_self_, _46467_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type5); __jule_collection; }));
		} else {
			_1b2d80ecb_pushErr(_self_, _46467_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4693_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
		_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d864ed_evalFn(_1b2d80948_eval* _self_, jule::Ptr<_1b2bda9b2_Fn> _48026_f, jule::Ptr<_1b2ac7eba_Token> _48034_errorToken) {
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_48026_f))._field_Public, (*_48026_f.alloc)._field_Token)))) {
		_1b2d80ecb_pushErr(_self_, _48034_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_48026_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b2d86102_checkDeprecated(_self_, &((*_48026_f.alloc)._field_Directives), _48034_errorToken);
	jule::Ptr<_1b2bdda70_FnIns> _4897_ins = _1b2bdc255_instance(_48026_f);;
	if (((*_48026_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1b2bdda70_FnIns> _4968_exist = _1b2bdc563_appendInstance(_48026_f, &(_4897_ins));;
		if ((_4968_exist != nullptr)) {
			_4897_ins=_4968_exist;
		};
	};
	_1b7070c77_pushReference(_self_, &(_4897_ins));
	return _1b2d85c8e_evalFnIns(_self_, _4897_ins);;
}



inline void _1b2d8691b_pushIllegalCycleError(_1b2d80948_eval* _self_, jule::Ptr<_1b2d26ca7_Var>* _50538_v1, jule::Ptr<_1b2d26ca7_Var>* _50549_v2, _20d8ca601_Builder* _50564_message) {
	;
	jule::Str _5073_refersTo = _20daa6403_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50538_v1))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_50549_v2))))._field_Ident, &__jule_any_type5); __jule_collection; }));;
	jule::Slice<jule::U8> _5083_buf = _20d8d5d6a_Buf(_50564_message);;
	_20d8d4ac2_WriteStr(_50564_message, _20d8b7302_Repeat(jule::Str::lit(" ", 1), 7LL));
	_20d8d4ac2_WriteStr(_50564_message, _5073_refersTo);
	_20d8d4d7a_WriteByte(_50564_message, '\n');
	_20d8d4819_Write(_50564_message, _5083_buf);
}



inline jule::Bool _1b2d86d17_checkCrossCycle(_1b2d80948_eval* _self_, jule::Ptr<_1b2d26ca7_Var>* _51532_v, _20d8ca601_Builder* _51546_message) {
	{
		auto expr = &((*((*(_51532_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b70775db:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> *_51610_d = it;
			{
				if (((*(_51610_d)) == (*(_self_))._field_owner)) {
					_1b2d8691b_pushIllegalCycleError(_self_, _51532_v, _51610_d, _51546_message);
					return false;;
				};
				if ((!(_1b2d86d17_checkCrossCycle(_self_, _51610_d, _51546_message)))) {
					_1b2d8691b_pushIllegalCycleError(_self_, _51532_v, _51610_d, _51546_message);
					return false;;
				};
			}
			_iter_next_1b70775db:;
			++it;
			goto _iter_begin_1b70775db;
		}
		_iter_end_1b70775db:;
	};
	return true;;
}



inline jule::Bool _1b2d87213_checkIllegalCycles(_1b2d80948_eval* _self_, jule::Ptr<_1b2d26ca7_Var>* _53239_v, jule::Ptr<_1b2ac7eba_Token> _53248_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53239_v)))) {
		_1b2d80ecb_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_20d8ca601_Builder _5457_message = static__20d8cb1c3_New(32LL);;
	if ((!(_1b2d86d17_checkCrossCycle(_self_, _53239_v, &(_5457_message))))) {
		jule::Str _5488_errMsg = _20d8d53b9_Str(&_5457_message);;
		_20d8d55b7_Clear(&_5457_message);
		_1b2d8691b_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53239_v, &(_5457_message));
		_5488_errMsg+=_20d8d53b9_Str(&_5457_message);
		_1b2d80ecb_pushErr(_self_, _53248_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5488_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1b2d26ca7_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_53239_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d8760e_evalVar(_1b2d80948_eval* _self_, jule::Ptr<_1b2d26ca7_Var> _56027_v, jule::Ptr<_1b2ac7eba_Token> _56036_errorToken) {
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56027_v))._field_Public, (*_56027_v.alloc)._field_Token)))) {
		_1b2d80ecb_pushErr(_self_, _56036_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56027_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b2d86102_checkDeprecated(_self_, &((*_56027_v.alloc)._field_Directives), _56036_errorToken);
	if (((*_56027_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1b7094d23;
	};
	(*_56027_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4)) {
			_case_begin_1b7081370:;
			{
				jule::Bool _5794_ok = _1b2d87213_checkIllegalCycles(_self_, &(_56027_v), _56036_errorToken);;
				if ((!(_5794_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)) {
			_case_begin_1b7080924:;
			{
				jule::Ptr<_1b2cab830_scopeChecker> _5848_s = (*(_self_))._field_lookup.cast_ptr<_1b2cab830_scopeChecker>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1);;
				jule::Ptr<_1b2cab830_scopeChecker> _5858_root = _1b2caec0c_getRoot(_5848_s);;
				if ((((((*_56027_v.alloc)._field_Scope != nullptr) && (!((*_56027_v.alloc)._field_Constant))) && ((*(_5858_root))._field_captured != nullptr)) && _1b2dae04d_isVarCaptured(_5858_root, _5848_s, _56027_v))) {
					_1b2cae976_pushCaptured(_5858_root, &(_56027_v));
				};
				if (((!((*_56027_v.alloc)._field_Reference)) || _1b2d819c1_isUnsafe(_self_))) {
					goto _match_end_1b70812d7;
				};
				while ((((*_5848_s.alloc)._field_owner == nullptr) && ((*_5848_s.alloc)._field_parent != nullptr))) {
					{
						_5848_s=(*_5848_s.alloc)._field_parent;
					}
				_iter_next_1b7084de0:;
				}
				_iter_end_1b7084de0:;;
				if (((((*_5848_s.alloc)._field_owner != nullptr) && (*((*_5848_s.alloc)._field_owner))._field_Anon) && ((*_56027_v.alloc)._field_Scope != (*((*_5848_s.alloc)._field_owner))._field_Scope))) {
					_1b2d80ecb_pushErr(_self_, _56036_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56027_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		_match_end_1b70812d7:;
	};
	if (((*_56027_v.alloc)._field_Scope == nullptr)) {
		_1b708c6ab_pushReference(_self_, &(_56027_v));
	};
	if (((((!((*_56027_v.alloc)._field_Binded)) && (*_56027_v.alloc)._field_Constant) && ((*_56027_v.alloc)._field_Scope == nullptr)) && (((*_56027_v.alloc)._field_Value == nullptr) || ((*((*_56027_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1b2be1cb5_SymTab> _6138_varfile = _1b2cd225c_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_56027_v));;
		jule::Ptr<_1b2be1cb5_SymTab> _6148_file = _1b2d057be_getCurrentFile((*(_self_))._field_s);;
		_1b2d05a77_setCurrentFile((*(_self_))._field_s, _6138_varfile);
		_1b2d1d001_checkVar((*(_self_))._field_s, &(_56027_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4));
		_1b2d05a77_setCurrentFile((*(_self_))._field_s, _6148_file);
		if ((((*_56027_v.alloc)._field_Value == nullptr) || ((*((*_56027_v.alloc)._field_Value))._field_Data == nullptr))) {
			return nullptr;;
		};
	};
	if ((((*_56027_v.alloc)._field_Kind == nullptr) || ((*((*_56027_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_56027_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		jule::Ptr<_1b2be1cb5_SymTab> _6438_varfile = _1b2cd225c_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_56027_v));;
		jule::Ptr<_1b2be1cb5_SymTab> _6448_file = _1b2d057be_getCurrentFile((*(_self_))._field_s);;
		_1b2d05a77_setCurrentFile((*(_self_))._field_s, _6438_varfile);
		_1b2d1d001_checkVar((*(_self_))._field_s, &(_56027_v), (*(_self_))._field_lookup);
		_1b2d05a77_setCurrentFile((*(_self_))._field_s, _6448_file);
		if ((((*_56027_v.alloc)._field_Kind == nullptr) || ((*((*_56027_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1b7094d23:;
	jule::Ptr<_1b2d7dc21_Data> _6597_d = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=(*((*_56027_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_56027_v.alloc)._field_Mutable, ._field_Reference=(*_56027_v.alloc)._field_Reference, ._field_Lvalue=(!((*_56027_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_56027_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
	if ((((!((*_56027_v.alloc)._field_Binded)) && _1b2d271b4_IsInitialized(_56027_v)) && ((*((*_56027_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_6597_d))._field_IsRune=(*((*((*_56027_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_56027_v.alloc)._field_Constant && ((*((*((*_56027_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_6597_d.alloc)._field_Constant=jule::new_ptr<_1b2b6c23a_Const>((*(*((*((*(_56027_v))._field_Value))._field_Data))._field_Constant.alloc));
		(*_6597_d.alloc)._field_Model=jule::Any((*_6597_d.alloc)._field_Constant, &__jule_any_type15);
		if (_1b2d276d1_untypedConstant(_56027_v)) {
			_1b2d82065_applyNumericPrefix(_self_, &(_6597_d));
			(*_6597_d.alloc)._field_untyped=true;
		};
	};
	return _6597_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d87a0a_evalTypeAlias(_1b2d80948_eval* _self_, jule::Ptr<_1b2db0835_TypeAlias> _68333_ta, jule::Ptr<_1b2ac7eba_Token> _68349_errorToken) {
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_68333_ta))._field_Public, (*_68333_ta.alloc)._field_Token)))) {
		_1b2d80ecb_pushErr(_self_, _68349_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_68333_ta.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_68333_ta.alloc)._field_Used=true;
	jule::Trait _6927_kind = (*((*((*_68333_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1b2d7dc21_Data> _69311_d = nullptr;;
	{
		auto &_match_expr{ _6927_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)) {
			_case_begin_1b70a3260:;
			{
				_69311_d=_1b2d85552__evalStruct(_self_, _6927_kind.cast_ptr<_1b2b119c6_StructIns>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data3)) {
			_case_begin_1b70a6032:;
			{
				_69311_d=_1b2d845c8__evalEnum(_self_, _6927_kind.cast_ptr<_1b2be887c_Enum>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data4)) {
			_case_begin_1b70a64b6:;
			{
				_69311_d=_1b2d84d15__evalTypeEnum(_self_, _6927_kind.cast_ptr<_1b2bea087_TypeEnum>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1b70a1b65:;
			{
				_69311_d=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_68333_ta))._field_Kind))._field_Kind.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});
				if ((*_68333_ta.alloc)._field_Binded) {
					(*((*(_69311_d))._field_Kind))._field_BindIdent=(*_68333_ta.alloc)._field_Ident;
				} else {
					(*((*(_69311_d))._field_Kind))._field_BindIdent=(*(*((*(_68333_ta))._field_Kind))._field_Kind.alloc)._field_BindIdent;
				};
				(*(_69311_d))._field_Model=jule::Any((*_69311_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		_match_end_1b70a19de:;
	};
	(*((*(_69311_d))._field_Kind))._field_Generic=(*_68333_ta.alloc)._field_Generic;
	return _69311_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d87e06_evalDef(_1b2d80948_eval* _self_, jule::Any* _72228_def, jule::Ptr<_1b2ac7eba_Token> _72242_ident) {
	{
		auto &_match_expr{ (*(_72228_def)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b70a9b6d:;
			{
				return _1b2d8760e_evalVar(_self_, (*(_72228_def)).cast_ptr<_1b2d26ca7_Var>(&__jule_any_type7), _72242_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b70a993c:;
			{
				return _1b2d849c4_evalEnum(_self_, (*(_72228_def)).cast_ptr<_1b2be887c_Enum>(&__jule_any_type12), _72242_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b70a9bd4:;
			{
				return _1b2d85211_evalTypeEnum(_self_, (*(_72228_def)).cast_ptr<_1b2bea087_TypeEnum>(&__jule_any_type13), _72242_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b70a9c4a:;
			{
				return _1b2d8594d_evalStruct(_self_, (*(_72228_def)).cast_ptr<_1b2b0db6b_Struct>(&__jule_any_type9), _72242_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b70a9cb1:;
			{
				jule::Ptr<_1b2bda9b2_Fn> _7338_f = (*(_72228_def)).cast_ptr<_1b2bda9b2_Fn>(&__jule_any_type10);;
				if ((!(*(_7338_f))._field_Ident.equal("init", 4))) {
					return _1b2d864ed_evalFn(_self_, _7338_f, _72242_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b70a9d38:;
			{
				return _1b2d85c8e_evalFnIns(_self_, (*(_72228_def)).cast_ptr<_1b2bdda70_FnIns>(&__jule_any_type63));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b70a9db0:;
			{
				return _1b2d87a0a_evalTypeAlias(_self_, (*(_72228_def)).cast_ptr<_1b2db0835_TypeAlias>(&__jule_any_type8), _72242_ident);;
			}
		}
		_match_end_1b70a9a6e:;
	};
	_1b2d80ecb_pushErr(_self_, _72242_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_72242_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d88247_evalIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae403b_IdentExpr> _74629_ident) {
	jule::Any _7477_def = _1b2d83c48_getDef(_self_, &((*(_74629_ident))._field_Ident), (*_74629_ident.alloc)._field_Binded);;
	return _1b2d87e06_evalDef(_self_, &(_7477_def), (*_74629_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d88588_evalUnary(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae47cd_UnaryExpr> _75130_u) {
	_1b2d9ec42_unaryEval _7527_unary = static__1b2da01b5_new(_self_);;
	return _1b2da15e5_eval(&_7527_unary, _75130_u);;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d888c9_evalVariadic(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae4ba7_VariadicExpr> _75633_v) {
	if (((*(_75633_v))._field_Expr == nullptr)) {
		_1b2d80ecb_pushErr(_self_.ptr(), (*_75633_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2db1627_TypeKind> _7627_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7627_prefix;
	});;
	jule::Ptr<_1b2d7dc21_Data> _7667_d = _1b2d9e7ad_evalExpr(_self_, (*_75633_v.alloc)._field_Expr);;
	if ((_7667_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b2db3a47_Variadicable((*(_7667_d))._field_Kind.ptr())))) {
		_1b2d80ecb_pushErr(_self_, (*_75633_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_7667_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1b2dadb1e_makeVariadic(&(_7667_d), (*(_1b2db4d34_Slc((*(_7667_d))._field_Kind)))._field_Elem);
	return _7667_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d88c1a_evalUnsafe(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae3a85_UnsafeExpr> _77831_u) {
	jule::Bool _7793_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1b2d7dc21_Data> _7817_d = _1b2d9e7ad_evalExpr(_self_, (*(_77831_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7793_unsafety;
	return _7817_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d8905b_evalArr(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae8c77_SliceExpr> _78628_s) {
	jule::Ptr<_1b2dc1060_Arr> _7887_pt = _1b2db4a9d_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1b2dc1060_Arr> _7907_arr = jule::new_ptr<_1b2dc1060_Arr>(_1b2dc1060_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7887_pt))._field_Elem});;
	jule::Bool _7967_filled = false;;
	if (((*(_78628_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_78628_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type78) {
				_case_begin_1b70ba079:;
				{
					if (((*((*((*(_78628_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1b2ae4ba7_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1b70b9ebe;
					};
					if ((*_7887_pt.alloc)._field_Auto) {
						_1b2d80ecb_pushErr(_self_, (*_78628_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7967_filled=true;
					((*(_78628_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1b70b9ebe:;
		};
	};
	(*(_7907_arr))._field_N=(*_78628_s.alloc)._field_Exprs.len();
	if ((!((*_7887_pt.alloc)._field_Auto))) {
		if (((*_7907_arr.alloc)._field_N > (*_7887_pt.alloc)._field_N)) {
			_1b2d80ecb_pushErr(_self_, (*_78628_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_7907_arr.alloc)._field_N < (*_7887_pt.alloc)._field_N)) {
			(*_7907_arr.alloc)._field_N=(*_7887_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1b2bd3911_ArrayExprModel> _8257_model = jule::new_ptr<_1b2bd3911_ArrayExprModel>(_1b2bd3911_ArrayExprModel{._field_Kind=_7907_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_7967_filled) {
		(*(_8257_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8257_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_78628_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1b2db1627_TypeKind> _8347_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7907_arr.alloc)._field_Elem;
	{
		auto expr = &((*_78628_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b70c2070:;
		if (it != expr_end) {
			jule::Ptr<_1b2ae2721_Expr> _83615_elem = *it;
			{
				jule::Ptr<_1b2d7dc21_Data> _8378_d = _1b2d9e7ad_evalExpr(_self_, _83615_elem);;
				if ((_8378_d == nullptr)) {
					goto _iter_next_1b70c2070;
				};
				;
				if (_1b2d12c1b_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_7907_arr.alloc)._field_Elem), &(_8378_d), &((*(_83615_elem))._field_Token))) {
					_1b2d0d486_checkAssignType((*(_self_))._field_s, false, &((*_7907_arr.alloc)._field_Elem), &(_8378_d), (*_83615_elem.alloc)._field_Token, _1b2d83ece_getOwnerRefers(_self_));
				};
				(*(_8257_model))._field_Elems=jule::append((*_8257_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8378_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1b70c2070:;
			++it;
			goto _iter_begin_1b70c2070;
		}
		_iter_end_1b70c2070:;
	};
	(*_self_.alloc)._field_prefix=_8347_prefix;
	if (_7967_filled) {
		(*_8257_model.alloc)._field_Elems=jule::append((*_8257_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_7907_arr, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8257_model, &__jule_any_type87), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d89512_evalExpSlc(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae8c77_SliceExpr> _86331_s, jule::Ptr<_1b2db1627_TypeKind> _86355_t, jule::Any _86373_first) {
	jule::Ptr<_1b2dbdc3e_Slc> _8647_slc = jule::new_ptr<_1b2dbdc3e_Slc>(_1b2dbdc3e_Slc{._field_Elem=_86355_t});;
	jule::I64 _8687_i = 0LL;;
	jule::Ptr<_1b2bd09c9_SliceExprModel> _8697_model = jule::new_ptr<_1b2bd09c9_SliceExprModel>(_1b2bd09c9_SliceExprModel{._field_ElemKind=_86355_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_86331_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_86373_first != nullptr)) {
		(*(_8697_model))._field_Elems=jule::append((*_8697_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _86373_first; __jule_collection; }));
		_8687_i=1LL;
	};
	jule::Ptr<_1b2db1627_TypeKind> _8787_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8647_slc))._field_Elem;
	{
		auto expr = (*_86331_s.alloc)._field_Exprs.slice(_8687_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b70ccc7e:;
		if (it != expr_end) {
			jule::Ptr<_1b2ae2721_Expr> _88015_elem = *it;
			{
				jule::Ptr<_1b2d7dc21_Data> _8818_d = _1b2d9e7ad_evalExpr(_self_, _88015_elem);;
				if ((_8818_d != nullptr)) {
					;
					if (_1b2d12c1b_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8647_slc.alloc)._field_Elem), &(_8818_d), &((*(_88015_elem))._field_Token))) {
						_1b2d0d486_checkAssignType((*(_self_))._field_s, false, &((*_8647_slc.alloc)._field_Elem), &(_8818_d), (*_88015_elem.alloc)._field_Token, _1b2d83ece_getOwnerRefers(_self_));
					};
					(*_8697_model.alloc)._field_Elems=jule::append((*_8697_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8818_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1b70ccc7e:;
			++it;
			goto _iter_begin_1b70ccc7e;
		}
		_iter_end_1b70ccc7e:;
	};
	(*_self_.alloc)._field_prefix=_8787_prefix;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8647_slc, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8697_model, &__jule_any_type79), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d89853_evalSliceExpr(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae8c77_SliceExpr> _90134_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1b2db4a9d_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1b70d29ba:;
				{
					return _1b2d8905b_evalArr(_self_, _90134_s);;
				}
			}
			else if ((_1b2db4d34_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1b70d2a64:;
				{
					jule::Ptr<_1b2dbdc3e_Slc> _9079_pt = _1b2db4d34_Slc((*(_self_))._field_prefix);;
					return _1b2d89512_evalExpSlc(_self_, _90134_s, (*(_9079_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1b70d2910:;
		};
	};
	jule::Ptr<_1b2db1627_TypeKind> _9127_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_90134_s))._field_Exprs.len() == 0LL)) {
		_1b2d80ecb_pushErr(_self_, (*_90134_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2ae2721_Expr> _9207_firstExpr = (*_90134_s.alloc)._field_Exprs[0LL];;
	jule::Ptr<_1b2d7dc21_Data> _9217_firstElem = _1b2d9e7ad_evalExpr(_self_, _9207_firstExpr);;
	if ((_9217_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1b2d12c1b_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_9217_firstElem))._field_Kind), &(_9217_firstElem), &((*(_9207_firstExpr))._field_Token));
	jule::Ptr<_1b2d7dc21_Data> _9317_d = _1b2d89512_evalExpSlc(_self_, _90134_s, (*(_9217_firstElem))._field_Kind, (*(_9217_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_9127_prefix;
	return _9317_d;;
}



inline jule::Bool _1b2d89c4e_checkIntegerIndexingByData(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _93747_d, jule::Ptr<_1b2ac7eba_Token> _93761_token) {
	jule::Str _9383_errKey = _1b2dab501_checkDataForIntegerIndexing(&((*(_self_))._field_s), _93747_d, &(_93761_token), _1b2d83ece_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9383_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1b70dab27:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1b70da808:;
			{
				_1b2d80ecb_pushErr(_self_, _93761_token, _9383_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_93747_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1b70da154:;
			{
				_1b2d80ecb_pushErr(_self_, _93761_token, _9383_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1b70da792:;
	};
	return false;;
}



inline void _1b2d8a16c_indexingPtr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _95032_d, jule::Ptr<_1b2d7dc21_Data>* _95047_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _95066_i) {
	_1b2d89c4e_checkIntegerIndexingByData(_self_, _95047_index, (*((*(_95066_i))))._field_Token);
	(*((*(_95032_d))))._field_Lvalue=true;
	jule::Ptr<_1b2dc1a33_Ptr> _9547_ptr = _1b2db42ea_Ptr((*((*(_95032_d))))._field_Kind.ptr());;
	{
		
		if (_1b2dc25a0_IsUnsafe(_9547_ptr.ptr())) {
			_case_begin_1b70dd9e8:;
			{
				_1b2d80ecb_pushErr(_self_, (*((*(_95066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1b2d819c1_isUnsafe(_self_)))) {
			_case_begin_1b70dda81:;
			{
				_1b2d80ecb_pushErr(_self_, (*((*(_95066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b70dd94e:;
	};
	(*((*(_95032_d))))._field_Kind=(*(_9547_ptr))._field_Elem;
}



inline void _1b2d8a58a_indexingArr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _96632_d, jule::Ptr<_1b2d7dc21_Data>* _96647_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _96666_i) {
	jule::Ptr<_1b2dc1060_Arr> _9677_arr = _1b2db4a9d_Arr((*((*(_96632_d))))._field_Kind.ptr());;
	(*((*(_96632_d))))._field_Kind=(*(_9677_arr))._field_Elem;
	_1b2d89c4e_checkIntegerIndexingByData(_self_, _96647_index, (*((*(_96666_i))))._field_Token);
	(*((*(_96632_d))))._field_Lvalue=true;
	if ((_1b2d7e65b_IsConst((*(_96647_index)).ptr()) && (_1b2bc4979_AsF64((*((*(_96647_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9677_arr.alloc)._field_N)))) {
		_1b2d80ecb_pushErr(_self_, (*((*(_96666_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1b2d8a9a8_indexingSlc(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _97632_d, jule::Ptr<_1b2d7dc21_Data>* _97647_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _97666_i) {
	jule::Ptr<_1b2dbdc3e_Slc> _9777_slc = _1b2db4d34_Slc((*((*(_97632_d))))._field_Kind.ptr());;
	(*((*(_97632_d))))._field_Kind=(*(_9777_slc))._field_Elem;
	_1b2d89c4e_checkIntegerIndexingByData(_self_, _97647_index, (*((*(_97666_i))))._field_Token);
	(*((*(_97632_d))))._field_Lvalue=true;
	if ((!(_1b2d7e65b_IsConst((*(_97647_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_97632_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b70e621a:;
			{
				jule::Ptr<_1b2bd09c9_SliceExprModel> _9888_m = (*((*(_97632_d))))._field_Model.unsafe_cast_ptr<_1b2bd09c9_SliceExprModel>();;
				jule::F64 _9894_indx = _1b2bc4979_AsF64((*((*(_97647_index))))._field_Constant.ptr());;
				if ((_9894_indx >= static_cast<jule::F64>((*(_9888_m))._field_Elems.len()))) {
					_1b2d80ecb_pushErr(_self_, (*((*(_97666_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_97632_d))))._field_Model=(*(_9888_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_9894_indx))];
					(*((*(_97632_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1b70e61a4:;
	};
}



inline void _1b2d8adc6_indexingMap(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _99932_d, jule::Ptr<_1b2d7dc21_Data>* _99947_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _99966_i) {
	(*((*(_99932_d))))._field_Lvalue=true;
	if (((*(_99947_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2dc03d3_Map> _10047_m = _1b2db586d_Map((*((*(_99932_d))))._field_Kind.ptr());;
	_1b2d6c0c7_assignTypeChecker _10057_atc = _1b2d6c0c7_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_10047_m))._field_Key, ._field_d=(*(_99947_index)), ._field_errorToken=(*((*(_99966_i))))._field_Token, ._field_refers=_1b2d83ece_getOwnerRefers(_self_)};;
	_1b2d6d0c8_check(&_10057_atc);
	(*((*(_99932_d))))._field_Kind=(*_10047_m.alloc)._field_Val;
}



inline void _1b2d8b2e4_indexingStr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _101632_d, jule::Ptr<_1b2d7dc21_Data>* _101647_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _101666_i) {
	(*((*(_101632_d))))._field_Kind=_1b2e94100_primU8;
	(*((*(_101632_d))))._field_Mutable=false;
	(*((*(_101632_d))))._field_Lvalue=true;
	if (((*(_101647_index)) == nullptr)) {
		return;;
	};
	_1b2d89c4e_checkIntegerIndexingByData(_self_, _101647_index, (*((*(_101666_i))))._field_Token);
	if ((!(_1b2d7e65b_IsConst((*(_101647_index)).ptr())))) {
		(*((*(_101632_d))))._field_Constant=nullptr;
		(*((*(_101632_d))))._field_untyped=false;
		return;;
	};
	if (_1b2d7e65b_IsConst((*(_101632_d)).ptr())) {
		jule::I64 _10344_j = _1b2bc445c_AsI64((*((*(_101647_index))))._field_Constant.ptr());;
		jule::Str _10354_s = _1b2bc3e40_ReadStr((*((*(_101632_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10344_j) >= _10354_s.len())) {
			_1b2d80ecb_pushErr(_self_, (*((*(_101666_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1b2bc4eda_SetU64((*((*(_101632_d))))._field_Constant, static_cast<jule::U64>(_10354_s[_10344_j]));
		};
	};
}



inline void _1b2d8b712_comptimeRange(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _104434_d, jule::Ptr<_1b2d7dc21_Data>* _104449_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _104468_i) {
	if (((*(_104449_index)) == nullptr)) {
		(*(_104434_d))=nullptr;
		return;;
	};
	if ((!(_1b2d89c4e_checkIntegerIndexingByData(_self_, _104449_index, (*((*((*(_104468_i))))._field_Index))._field_Token)))) {
		(*(_104434_d))=nullptr;
		return;;
	};
	if ((!(_1b2d7e65b_IsConst((*(_104449_index)).ptr())))) {
		(*(_104434_d))=nullptr;
		_1b2d80ecb_pushErr(_self_, (*(*((*(_104468_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _10593_j = static_cast<jule::I64>(_1b2bc445c_AsI64((*((*(_104449_index))))._field_Constant.ptr()));;
	jule::Ptr<_1b2c76ba2_comptimeRange> _10607_ci = _1b2db7177_comptimeRange((*((*(_104434_d))))._field_Kind.ptr());;
	if ((_10593_j >= ((_1b2c76982_comptimeRangeKindMptrData*)(*(_10607_ci))._field_kind.safe_type())->_1b2c7682d_len((*(_10607_ci))._field_kind.data))) {
		(*(_104434_d))=nullptr;
		_1b2d80ecb_pushErr(_self_, (*(*((*(_104468_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1b2c76982_comptimeRangeKindMptrData*)(*_10607_ci.alloc)._field_kind.safe_type())->_1b2c75d16_index((*_10607_ci.alloc)._field_kind.data, _104434_d, _10593_j);
}



inline void _1b2d8bb30_toIndexing(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _106931_d, jule::Ptr<_1b2d7dc21_Data>* _106946_index, jule::Ptr<_1b2ae96d4_IndexingExpr>* _106965_i) {
	{
		
		if ((_1b2db42ea_Ptr((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7107aab:;
			{
				_1b2d8a16c_indexingPtr(_self_, _106931_d, _106946_index, _106965_i);
				return;;
			}
		}
		else if ((_1b2db4a9d_Arr((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7107b55:;
			{
				_1b2d8a58a_indexingArr(_self_, _106931_d, _106946_index, _106965_i);
				return;;
			}
		}
		else if ((_1b2db4d34_Slc((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7107bbb:;
			{
				_1b2d8a9a8_indexingSlc(_self_, _106931_d, _106946_index, _106965_i);
				return;;
			}
		}
		else if ((_1b2db586d_Map((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7107c32:;
			{
				_1b2d8adc6_indexingMap(_self_, _106931_d, _106946_index, _106965_i);
				return;;
			}
		}
		else if ((_1b2db3ccd_Prim((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7107c98:;
			{
				jule::Ptr<_1b2db9740_Prim> _10844_prim = _1b2db3ccd_Prim((*((*(_106931_d))))._field_Kind);;
				{
					
					if (_1b2dbcc0a_IsStr(_10844_prim.ptr())) {
						_case_begin_1b710c0aa:;
						{
							_1b2d8b2e4_indexingStr(_self_, _106931_d, _106946_index, _106965_i);
							return;;
						}
					}
					_match_end_1b710c000:;
				};
			}
		}
		else if ((_1b2db7177_comptimeRange((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7107d20:;
			{
				_1b2d8b712_comptimeRange(_self_, _106931_d, _106946_index, _106965_i);
				return;;
			}
		}
		_match_end_1b7107946:;
	};
	_1b2d80ecb_pushErr(_self_, (*((*(_106965_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_106931_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1b2d8c0d6_pushGenericsFromExprSubIdent(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae5834_SubIdentExpr>* _109750_sexpr, jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>* _10988_generics, jule::Ptr<_1b2ae2721_Expr>* _109841_expr) {
	jule::Ptr<_1b2addcb1_SubIdentTypeDecl> _10997_t = jule::new_ptr<_1b2addcb1_SubIdentTypeDecl>(_1b2addcb1_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1b2add9e7_IdentTypeDecl>>(nullptr)});;
	if ((!(_1b2dac579_pushSubIdentFromExpr(jule::Any((*(_109750_sexpr)), &__jule_any_type88), &(_10997_t))))) {
		_1b2d80ecb_pushErr(_self_.ptr(), (*((*(_109841_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> &__jule_push_dest = (*(_10988_generics)); __jule_push_dest.push(jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Kind=jule::Any(_10997_t, &__jule_any_type89)})); };
	return true;;
}



inline jule::Bool _1b2d8c4d2_pushGenericsFromData(jule::Ptr<_1b2d80948_eval> _self_, jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>* _110842_generics, jule::Ptr<_1b2ae2721_Expr>* _110875_expr) {
	{
		auto &_match_expr{ (*((*(_110875_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b7113b2d:;
			{
				jule::Ptr<_1b2ae47cd_UnaryExpr> _11118_u = (*((*(_110875_expr))))._field_Kind.unsafe_cast_ptr<_1b2ae47cd_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_11118_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1b7117ba9:;
						{
							jule::Ptr<_1b2adee16_PtrTypeDecl> _11149_kind = jule::new_ptr<_1b2adee16_PtrTypeDecl>(_1b2adee16_PtrTypeDecl{._field_Elem=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> _11159__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2add3dc_TypeDecl>(nullptr); __jule_collection; });;
							_1b2d8c4d2_pushGenericsFromData(_self_, &(_11159__generics), &((*(_11118_u))._field_Expr));
							(*_11149_kind.alloc)._field_Elem=_11159__generics[0LL];
							{ jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> &__jule_push_dest = (*(_110842_generics)); __jule_push_dest.push(jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=(*((*(_110875_expr))))._field_Token, ._field_Kind=jule::Any(_11149_kind, &__jule_any_type73)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1b71199d0:;
						{
							jule::Ptr<_1b2ade487_SptrTypeDecl> _11239_kind = jule::new_ptr<_1b2ade487_SptrTypeDecl>(_1b2ade487_SptrTypeDecl{._field_Elem=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> _11249__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2add3dc_TypeDecl>(nullptr); __jule_collection; });;
							_1b2d8c4d2_pushGenericsFromData(_self_, &(_11249__generics), &((*(_11118_u))._field_Expr));
							(*_11239_kind.alloc)._field_Elem=_11249__generics[0LL];
							{ jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> &__jule_push_dest = (*(_110842_generics)); __jule_push_dest.push(jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=(*((*(_110875_expr))))._field_Token, ._field_Kind=jule::Any(_11239_kind, &__jule_any_type74)})); };
						}
					}
					else {
						_case_begin_1b7117ec8:;
						{
							_1b2d80ecb_pushErr(_self_.ptr(), (*(_11118_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1b7117549:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b7113a2e:;
			{
				{ jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> &__jule_push_dest = (*(_110842_generics)); __jule_push_dest.push((*((*(_110875_expr))))._field_Kind.cast_ptr<_1b2add3dc_TypeDecl>(&__jule_any_type91)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b7113a95:;
			{
				jule::Ptr<_1b2ae5834_SubIdentExpr> _11388_sexpr = (*((*(_110875_expr))))._field_Kind.unsafe_cast_ptr<_1b2ae5834_SubIdentExpr>();;
				return _1b2d8c0d6_pushGenericsFromExprSubIdent(_self_, &(_11388_sexpr), _110842_generics, _110875_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b7114ea3:;
			{
				jule::Ptr<_1b2ae403b_IdentExpr> _11418_ident = (*((*(_110875_expr))))._field_Kind.unsafe_cast_ptr<_1b2ae403b_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> &__jule_push_dest = (*(_110842_generics)); __jule_push_dest.push(jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1b2add9e7_IdentTypeDecl>(_1b2add9e7_IdentTypeDecl{._field_Token=(*_11418_ident.alloc)._field_Token, ._field_Ident=(*_11418_ident.alloc)._field_Ident, ._field_Binded=(*(_11418_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>(nullptr)}), &__jule_any_type77)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b7115019:;
			{
				{
					auto expr = &((*((*((*(_110875_expr))))._field_Kind.unsafe_cast_ptr<_1b2ae3315_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7123b3d:;
					if (it != expr_end) {
						jule::Ptr<_1b2ae2721_Expr> _115016_texpr = *it;
						{
							if ((!(_1b2d8c4d2_pushGenericsFromData(_self_, _110842_generics, &(_115016_texpr))))) {
								return false;;
							};
						}
						_iter_next_1b7123b3d:;
						++it;
						goto _iter_begin_1b7123b3d;
					}
					_iter_end_1b7123b3d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b71110ae:;
			{
				jule::Ptr<_1b2ae545a_NamespaceExpr> _11568_ns = (*((*(_110875_expr))))._field_Kind.unsafe_cast_ptr<_1b2ae545a_NamespaceExpr>();;
				jule::Ptr<_1b2add9e7_IdentTypeDecl> _11578_decl = jule::new_ptr<_1b2add9e7_IdentTypeDecl>(_1b2add9e7_IdentTypeDecl{._field_Token=(*(_11568_ns))._field_Ident, ._field_Ident=(*((*_11568_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> &__jule_push_dest = (*(_110842_generics)); __jule_push_dest.push(jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=(*(_11578_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1b2ade18a_NamespaceTypeDecl>(_1b2ade18a_NamespaceTypeDecl{._field_Namespace=(*_11568_ns.alloc)._field_Namespace, ._field_Kind=jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=(*_11578_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11578_decl, &__jule_any_type77)})}), &__jule_any_type93)})); };
			}
		}
		else {
			_case_begin_1b71139b8:;
			{
				_1b2d80ecb_pushErr(_self_.ptr(), (*((*(_110875_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b711391e:;
	};
	return true;;
}



inline void _1b2d8c845_evalIdentDeclFromIndexing(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2d7dc21_Data>* _117847_d, jule::Ptr<_1b2ae96d4_IndexingExpr>* _117862_i) {
	jule::Ptr<_1b2b119c6_StructIns> _11797_s = _1b2db5351_Struct((*((*(_117847_d))))._field_Kind.ptr());;
	if ((_11797_s == nullptr)) {
		_1b2d80ecb_pushErr(_self_.ptr(), (*((*((*(_117862_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_117847_d))))._field_Kind), &__jule_any_type5); __jule_collection; }));
		(*(_117847_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b2add9e7_IdentTypeDecl> _118611_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_117862_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b7130a5c:;
			{
				jule::Ptr<_1b2ae403b_IdentExpr> _11898_expr = (*((*((*(_117862_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1b2ae403b_IdentExpr>();;
				_118611_decl=jule::new_ptr<_1b2add9e7_IdentTypeDecl>(_1b2add9e7_IdentTypeDecl{._field_Token=(*_11898_expr.alloc)._field_Token, ._field_Ident=(*_11898_expr.alloc)._field_Ident, ._field_Binded=(*(_11898_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b7132157:;
			{
				jule::Ptr<_1b2ae545a_NamespaceExpr> _11968_expr = (*((*((*(_117862_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1b2ae545a_NamespaceExpr>();;
				_118611_decl=jule::new_ptr<_1b2add9e7_IdentTypeDecl>(_1b2add9e7_IdentTypeDecl{._field_Token=(*(_11968_expr))._field_Ident, ._field_Ident=(*((*_11968_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1b713119a:;
			{
				_1b2d80ecb_pushErr(_self_, (*((*(_117862_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_117847_d))=nullptr;
				return;;
			}
		}
		_match_end_1b7131134:;
	};
	if ((!(_1b2d8c4d2_pushGenericsFromData(_self_, &((*(_118611_decl))._field_Generics), &((*((*(_117862_i))))._field_Index))))) {
		(*(_117847_d))=nullptr;
		return;;
	};
	_11797_s=({ auto _wrap_copy = _1b2d94341_typeChecker(_self_); _1b2dc7dad_fromStruct(&_wrap_copy, &(_118611_decl), &((*(_11797_s))._field_Decl)); });
	if ((_11797_s == nullptr)) {
		(*(_117847_d))=nullptr;
		return;;
	};
	(*(*((*(_117847_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_11797_s, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1b2d8cceb_checkGenericFn(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2bdda70_FnIns>* _122136_f, jule::Ptr<_1b2ac7eba_Token>* _122152_et, jule::Any* _122176_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b2bdda70_FnIns> _12227_old = (*(_122136_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b2d1d9e6_checkGenericFn((*(_self_))._field_s, _122136_f, _122152_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1b2dac205_updateModelToGenericIns(_122176_model, _122136_f);
		_1b7138cc9_updateRefer(_1b2d83ece_getOwnerRefers(_self_), &(_12227_old), _122136_f);
	};
	return __jule_func_result;;
}



inline void _1b2d8d15e_evalFnGenericFromIndexing(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2d7dc21_Data>* _123747_d, jule::Ptr<_1b2ae96d4_IndexingExpr>* _123762_i) {
	jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> _12387_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2add3dc_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1b2d8c4d2_pushGenericsFromData(_self_, &(_12387_generics), &((*((*(_123762_i))))._field_Index))))) {
		(*(_123747_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _12447_f = _1b2db50ba_Fn((*((*(_123747_d))))._field_Kind.ptr());;
	jule::I64 _12457_genericsLen = 0LL;;
	if (((*(_12447_f))._field_Decl != nullptr)) {
		_12457_genericsLen=(*(*(_12447_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1b2d074c4_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12457_genericsLen, _12387_generics.len(), (*((*((*(_123762_i))))._field_Expr))._field_Token)))) {
		(*(_123747_d))=nullptr;
		return;;
	};
	(*_12447_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>::alloc(0LL, (*(*(_12447_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2daee72_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12387_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b713e939:;
		if (it != expr_end) {
			jule::Ptr<_1b2add3dc_TypeDecl> _125615_g = *it;
			{
				jule::Ptr<_1b2d7dc21_Data> _12578_k = _1b2d94682_evalType(_self_, _125615_g);;
				if ((_12578_k == nullptr)) {
					(*(_123747_d))=nullptr;
					return;;
				};
				(*_12447_f.alloc)._field_Generics=jule::append((*_12447_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1b2daee72_InsGeneric>(_1b2daee72_InsGeneric{._field_Kind=(*(_12578_k))._field_Kind, ._field_Constraint=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1b713e939:;
			++it;
			goto _iter_begin_1b713e939;
		}
		_iter_end_1b713e939:;
	};
	if (_1b2be0038_IsBuiltin(_12447_f)) {
		return;;
	};
	jule::Bool _12693_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b2d8cceb_checkGenericFn(_self_, &(_12447_f), &((*(*((*(_123762_i))))._field_Expr.alloc)._field_Token), &((*((*(_123747_d))))._field_Model));
		_12693_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12693_ok) {
		(*(*((*(_123747_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12447_f, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1);
	} else {
		(*(_123747_d))=nullptr;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d8d4a0_evalIndexing(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae96d4_IndexingExpr> _127733_i) {
	jule::Ptr<_1b2db1627_TypeKind> _12787_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12787_prefix;
	});;
	jule::Ptr<_1b2d7dc21_Data> _12827_d = _1b2d9d999_evalExprKind(_self_, (*((*(_127733_i))._field_Expr))._field_Kind);;
	if ((_12827_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12827_d))._field_Decl) {
		_1b2d8c845_evalIdentDeclFromIndexing(_self_, &(_12827_d), &(_127733_i));
		return _12827_d;;
	};
	if ((_1b2db50ba_Fn((*(_12827_d))._field_Kind.ptr()) != nullptr)) {
		_1b2d8d15e_evalFnGenericFromIndexing(_self_, &(_12827_d), &(_127733_i));
		return _12827_d;;
	};
	_1b2d7dc21_Data _12987_oldData = (*(_12827_d));;
	jule::Ptr<_1b2d7dc21_Data> _13007_index = _1b2d9e7ad_evalExpr(_self_, (*_127733_i.alloc)._field_Index);;
	if ((_13007_index == nullptr)) {
		return nullptr;;
	};
	_1b2cbe2b0_makeComptimeRange(&(_12827_d));
	(*(_12827_d))._field_Decl=false;
	_1b2d8bb30_toIndexing(_self_, &(_12827_d), &(_13007_index), &(_127733_i));
	if ((_12827_d == nullptr)) {
		return nullptr;;
	};
	if (_1b2d7e65b_IsConst(_12827_d.ptr())) {
		(*(_12827_d))._field_Decl=false;
		(*(_12827_d))._field_Model=jule::Any((*(_12827_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_12827_d))._field_Decl) {
		(*(_12827_d))._field_Decl=false;
	} else {
		(*(_12827_d))._field_Model=jule::Any(jule::new_ptr<_1b2bd0e80_IndexingExprModel>(_1b2bd0e80_IndexingExprModel{._field_Token=(*_127733_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1b2d7dc21_Data>(_12987_oldData), ._field_Index=_13007_index}), &__jule_any_type42);
	};
	return _12827_d;;
}



inline __jule_tuple_x_1b2d7dc21_Data__jule_tuple_x_1b2d7dc21_Data _1b2d8d7e1_evalSlicingExprs(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae9d44_SlicingExpr>* _133738_s) {
	__jule_tuple_x_1b2d7dc21_Data__jule_tuple_x_1b2d7dc21_Data __jule_func_result;
	jule::Ptr<_1b2db1627_TypeKind> _13387_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13387_prefix;
	});;
	jule::Ptr<_1b2d7dc21_Data> _134211_l = nullptr;;
	jule::Ptr<_1b2d7dc21_Data> _134311_r = nullptr;;
	if (((*((*(_133738_s))))._field_Start != nullptr)) {
		_134211_l=_1b2d9e7ad_evalExpr(_self_, (*((*(_133738_s))))._field_Start);
		if ((_134211_l != nullptr)) {
			_1b2d89c4e_checkIntegerIndexingByData(_self_, &(_134211_l), (*((*(_133738_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_134211_l=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e932ec_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1b2bc22e5_NewI64(0LL)});
		(*((*(_134211_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_134211_l.alloc)._field_Model=jule::Any((*_134211_l.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*((*(_133738_s))))._field_To != nullptr)) {
		_134311_r=_1b2d9e7ad_evalExpr(_self_, (*((*(_133738_s))))._field_To);
		if ((_134311_r != nullptr)) {
			_1b2d89c4e_checkIntegerIndexingByData(_self_, &(_134311_r), (*((*(_133738_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _134211_l;
	__jule_func_result.__jule_result_arg1 = _134311_r;
	return __jule_func_result;;
}



inline void _1b2d8da99_slicingArr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _137327_d) {
	jule::Ptr<_1b2db1627_TypeKind> _13747_elemType = (*(_1b2db4a9d_Arr((*((*(_137327_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_137327_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2dbdc3e_Slc>(_1b2dbdc3e_Slc{._field_Elem=_13747_elemType}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data24)});
	(*((*(_137327_d))))._field_Lvalue=false;
	(*((*(_137327_d))))._field_Mutable=((*((*(_137327_d))))._field_Mutable || (!(_1b2db300d_Mutable(_13747_elemType.ptr()))));
}



inline void _1b2d8deb7_slicingStr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _138827_d, jule::Ptr<_1b2d7dc21_Data>* _138838_l, jule::Ptr<_1b2d7dc21_Data>* _138849_r) {
	(*((*(_138827_d))))._field_Lvalue=false;
	(*((*(_138827_d))))._field_Mutable=true;
	if ((!(_1b2d7e65b_IsConst((*(_138827_d)).ptr())))) {
		return;;
	};
	if ((((*(_138838_l)) == nullptr) || ((*(_138849_r)) == nullptr))) {
		(*((*(_138827_d))))._field_Constant=nullptr;
		(*((*(_138827_d))))._field_untyped=false;
		return;;
	};
	if ((_1b2d7e65b_IsConst((*(_138838_l)).ptr()) && _1b2d7e65b_IsConst((*(_138849_r)).ptr()))) {
		jule::I64 _14024_left = _1b2bc445c_AsI64((*((*(_138838_l))))._field_Constant.ptr());;
		if ((_14024_left < 0LL)) {
			return;;
		};
		jule::Str _14074_s = _1b2bc3e40_ReadStr((*((*(_138827_d))))._field_Constant);;
		jule::I64 _14088_right = static_cast<jule::I64>(0LL);;
		if (((*(_138849_r)) == nullptr)) {
			_14088_right=static_cast<jule::I64>(_14074_s.len());
		} else {
			_14088_right=_1b2bc445c_AsI64((*((*(_138849_r))))._field_Constant);
		};
		if ((_14024_left > _14088_right)) {
			return;;
		};
		_1b2bc554b_SetStr((*((*(_138827_d))))._field_Constant, _14074_s.slice(_14024_left, _14088_right));
		(*((*(_138827_d))))._field_Decl=true;
	} else {
		(*((*(_138827_d))))._field_Constant=nullptr;
		(*((*(_138827_d))))._field_untyped=false;
	};
}



inline void _1b2d8e490_checkSlicing(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _142633_d, jule::Ptr<_1b2d7dc21_Data>* _142644_l, jule::Ptr<_1b2d7dc21_Data>* _142655_r, jule::Ptr<_1b2ae9d44_SlicingExpr>* _142666_s) {
	{
		
		if ((_1b2db4a9d_Arr((*((*(_142633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b715b6e2:;
			{
				_1b2d8da99_slicingArr(_self_, _142633_d);
				return;;
			}
		}
		else if ((_1b2db4d34_Slc((*((*(_142633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b715b78b:;
			{
				return;;
			}
		}
		else if ((_1b2db3ccd_Prim((*((*(_142633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b715b802:;
			{
				jule::Ptr<_1b2db9740_Prim> _14344_prim = _1b2db3ccd_Prim((*((*(_142633_d))))._field_Kind);;
				{
					
					if (_1b2dbcc0a_IsStr(_14344_prim.ptr())) {
						_case_begin_1b715e0c9:;
						{
							_1b2d8deb7_slicingStr(_self_, _142633_d, _142644_l, _142655_r);
							return;;
						}
					}
					_match_end_1b715e01e:;
				};
			}
		}
		_match_end_1b715b5b0:;
	};
	_1b2d80ecb_pushErr(_self_, (*((*(_142666_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_142633_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d8e7d1_evalSlicing(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae9d44_SlicingExpr> _144532_s) {
	jule::Ptr<_1b2d7dc21_Data> _14467_d = _1b2d9e7ad_evalExpr(_self_, (*(_144532_s))._field_Expr);;
	if ((_14467_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2d7dc21_Data> _14517_l;
	jule::Ptr<_1b2d7dc21_Data> _145114_r;
	({
		__jule_tuple_x_1b2d7dc21_Data__jule_tuple_x_1b2d7dc21_Data __jule_assign_result = _1b2d8d7e1_evalSlicingExprs(_self_, &(_144532_s));
		_14517_l = __jule_assign_result.__jule_result_arg0;
		_145114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14517_l == nullptr)) {
		return _14467_d;;
	};
	(*(_14467_d))._field_Decl=false;
	_1b2d8e490_checkSlicing(_self_, &(_14467_d), &(_14517_l), &(_145114_r), &(_144532_s));
	if (_1b2d7e65b_IsConst(_14467_d.ptr())) {
		(*(_14467_d))._field_Decl=false;
		(*(_14467_d))._field_Model=jule::Any((*(_14467_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_14467_d))._field_Decl) {
		(*(_14467_d))._field_Decl=false;
	} else {
		jule::Ptr<_1b2bd226c_SlicingExprModel> _14698_model = jule::new_ptr<_1b2bd226c_SlicingExprModel>(_1b2bd226c_SlicingExprModel{._field_Token=(*_144532_s.alloc)._field_Token, ._field_Expr=(*(_14467_d))._field_Model, ._field_Left=(*(_14517_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_145114_r != nullptr)) {
			(*(_14698_model))._field_Right=(*_145114_r.alloc)._field_Model;
		};
		(*(_14467_d))._field_Model=jule::Any(_14698_model, &__jule_any_type94);
	};
	return _14467_d;;
}



inline void _1b2d8ebee_castPtr(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _148227_t, jule::Ptr<_1b2d7dc21_Data> _148245_d, jule::Ptr<_1b2ac7eba_Token> _148255_errorToken) {
	(*(_148245_d))._field_Constant=nullptr;
	(*_148245_d.alloc)._field_untyped=false;
	jule::Ptr<_1b2dbd26b_Sptr> _14853_sptr = _1b2db4064_Sptr((*_148245_d.alloc)._field_Kind.ptr());;
	if ((_14853_sptr != nullptr)) {
		if ((!(_1b2db1d64_Equal((*(_1b2db42ea_Ptr(_148227_t.ptr())))._field_Elem, (*_14853_sptr.alloc)._field_Elem)))) {
			_1b2d80ecb_pushErr(_self_, _148255_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_148245_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_148227_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1b2d819c1_isUnsafe(_self_)))) {
		_1b2d80ecb_pushErr(_self_, _148255_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2db9740_Prim> _14983_prim = _1b2db3ccd_Prim((*(_148245_d))._field_Kind);;
	if (((_1b2db42ea_Ptr((*(_148245_d))._field_Kind) == nullptr) && ((_14983_prim == nullptr) || (!(_1b2c75156_IsInt(_1b2db9ab4_Str(_14983_prim.ptr()))))))) {
		_1b2d80ecb_pushErr(_self_, _148255_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_148245_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_148227_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1b2d9011c_castStruct(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _150430_t, jule::Ptr<_1b2d7dc21_Data> _150448_d, jule::Ptr<_1b2ac7eba_Token> _150458_errorToken) {
	(*(_150448_d))._field_Constant=nullptr;
	(*_150448_d.alloc)._field_untyped=false;
	jule::Ptr<_1b2be61c6_Trait> _15077_tr = _1b2db55d7_Trait((*_150448_d.alloc)._field_Kind.ptr());;
	if ((_15077_tr == nullptr)) {
		_1b2d80ecb_pushErr(_self_, _150458_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_150448_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_150430_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _15137_s = _1b2db5351_Struct(_150430_t);;
	_1b7173165_pushReference(_self_, &(_15137_s));
	if ((!(_1b2b102dd_IsImplements((*(_15137_s))._field_Decl.ptr(), _15077_tr)))) {
		_1b2d80ecb_pushErr(_self_, _150458_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_150448_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_150430_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1b2d9053a_castRef(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _152127_t, jule::Ptr<_1b2d7dc21_Data> _152145_d, jule::Ptr<_1b2ac7eba_Token> _152155_errorToken) {
	(*(_152145_d))._field_Constant=nullptr;
	(*_152145_d.alloc)._field_untyped=false;
	jule::Ptr<_1b2dbd26b_Sptr> _15247_sptr = _1b2db4064_Sptr(_152127_t.ptr());;
	jule::Ptr<_1b2dc1a33_Ptr> _15267_ptr = _1b2db42ea_Ptr((*_152145_d.alloc)._field_Kind.ptr());;
	if (((_15267_ptr != nullptr) && _1b2db1d64_Equal((*(_15247_sptr))._field_Elem, (*_15267_ptr.alloc)._field_Elem))) {
		if ((!(_1b2d819c1_isUnsafe(_self_)))) {
			_1b2d80ecb_pushErr(_self_, _152155_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1b2db5351_Struct((*(_15247_sptr))._field_Elem) != nullptr)) {
		_1b2d9011c_castStruct(_self_, (*_15247_sptr.alloc)._field_Elem, _152145_d, _152155_errorToken);
		return;;
	};
	_1b2d80ecb_pushErr(_self_, _152155_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_152145_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_152127_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1b2d90958_castSlc(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _154427_t, jule::Ptr<_1b2d7dc21_Data> _154445_d, jule::Ptr<_1b2ac7eba_Token> _154455_errorToken) {
	jule::Ptr<_1b2b6c23a_Const> _15453_c = (*(_154445_d))._field_Constant;;
	(*_154445_d.alloc)._field_Constant=nullptr;
	(*_154445_d.alloc)._field_untyped=false;
	if ((_1b2db4581_Enum((*_154445_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1b2db3ccd_Prim((*((*(_1b2db4581_Enum((*(_154445_d))._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1b2dbcc0a_IsStr(_1b2db3ccd_Prim((*((*(_1b2db4581_Enum((*(_154445_d))._field_Kind.ptr())))._field_Kind))._field_Kind).ptr()))))) {
			_1b2d80ecb_pushErr(_self_, _154455_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_154445_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_154427_t.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else if (((_1b2db3ccd_Prim((*_154445_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1b2dbcc0a_IsStr(_1b2db3ccd_Prim((*(_154445_d))._field_Kind).ptr()))))) {
		_1b2d80ecb_pushErr(_self_, _154455_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_154445_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_154427_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_154427_t=(*(_1b2db4d34_Slc(_154427_t.ptr())))._field_Elem;
	jule::Ptr<_1b2db9740_Prim> _15603_prim = _1b2db3ccd_Prim(_154427_t);;
	if (((_15603_prim == nullptr) || ((!(_1b2dbb16a_IsU8(_15603_prim.ptr()))) && (!(_1b2dbab4d_IsI32(_15603_prim.ptr())))))) {
		_1b2d80ecb_pushErr(_self_, _154455_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*_154445_d.alloc)._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_154427_t), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((_15453_c != nullptr)) {
		{
			
			if (_1b2dbb16a_IsU8(_15603_prim.ptr())) {
				_case_begin_1b718771d:;
				{
					jule::Str _15705_s = _1b2bc3e40_ReadStr(_15453_c);;
					jule::Ptr<_1b2bd09c9_SliceExprModel> _15719_model = jule::new_ptr<_1b2bd09c9_SliceExprModel>(_1b2bd09c9_SliceExprModel{._field_ElemKind=_154427_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15705_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15705_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b71890b0:;
						if (it != expr_end) {
							jule::U8 *_157512_b = it;
							{
								jule::Ptr<_1b2b6c23a_Const> _157610_bc = static__1b2bc24c1_NewU64(static_cast<jule::U64>((*(_157512_b))));;
								(*(_157610_bc))._field_Kind=(*(_15603_prim))._field_Kind;
								(*(_15719_model))._field_Elems=jule::append((*_15719_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_157610_bc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1b71890b0:;
							++it;
							goto _iter_begin_1b71890b0;
						}
						_iter_end_1b71890b0:;
					};
					(*_154445_d.alloc)._field_Model=jule::Any(_15719_model, &__jule_any_type79);
					(*_154445_d.alloc)._field_Decl=true;
				}
			}
			else if (_1b2dbab4d_IsI32(_15603_prim.ptr())) {
				_case_begin_1b71877b7:;
				{
					jule::Slice<jule::I32> _15835_runes = __jule_strToRunes(_1b2bc3e40_ReadStr(_15453_c));;
					jule::Ptr<_1b2bd09c9_SliceExprModel> _15849_model = jule::new_ptr<_1b2bd09c9_SliceExprModel>(_1b2bd09c9_SliceExprModel{._field_ElemKind=_154427_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15835_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15835_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b718c4e2:;
						if (it != expr_end) {
							jule::I32 *_158812_r = it;
							{
								jule::Ptr<_1b2b6c23a_Const> _158910_rc = static__1b2bc22e5_NewI64(static_cast<jule::I64>((*(_158812_r))));;
								(*(_158910_rc))._field_Kind=(*(_15603_prim))._field_Kind;
								(*(_15849_model))._field_Elems=jule::append((*_15849_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_158910_rc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1b718c4e2:;
							++it;
							goto _iter_begin_1b718c4e2;
						}
						_iter_end_1b718c4e2:;
					};
					(*_154445_d.alloc)._field_Model=jule::Any(_15849_model, &__jule_any_type79);
					(*_154445_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1b7187630:;
		};
	};
}



inline void _1b2d90cbb_castStr(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data> _159927_d, jule::Ptr<_1b2ac7eba_Token> _159937_errorToken) {
	if ((_1b2db4581_Enum((*(_159927_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2be887c_Enum> _16018_e = _1b2db4581_Enum((*(_159927_d))._field_Kind);;
		if (((_1b2db3ccd_Prim((*((*(_16018_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1b2dbcc0a_IsStr(_1b2db3ccd_Prim((*((*(_16018_e))._field_Kind))._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b2b6c23a_Const> _16073_c = (*_159927_d.alloc)._field_Constant;;
	(*_159927_d.alloc)._field_Constant=nullptr;
	(*_159927_d.alloc)._field_untyped=false;
	if ((_1b2db3ccd_Prim((*(_159927_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1b2db9740_Prim> _16114_prim = _1b2db3ccd_Prim((*(_159927_d))._field_Kind);;
		if (((!(_1b2dbb16a_IsU8(_16114_prim.ptr()))) && (!(_1b2dbab4d_IsI32(_16114_prim))))) {
			_1b2d80ecb_pushErr(_self_, _159937_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_159927_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
			return;;
		};
		if ((_16073_c != nullptr)) {
			{
				
				if (_1b2dbb16a_IsU8(_16114_prim)) {
					_case_begin_1b7195154:;
					{
						(*_159927_d.alloc)._field_Constant=static__1b2bc2a54_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1b2bc46e3_AsU64(_16073_c))));
						(*_159927_d.alloc)._field_Model=jule::Any((*_159927_d.alloc)._field_Constant, &__jule_any_type15);
						(*_159927_d.alloc)._field_Decl=true;
					}
				}
				else if (_1b2dbab4d_IsI32(_16114_prim)) {
					_case_begin_1b71951ed:;
					{
						(*_159927_d.alloc)._field_Constant=static__1b2bc2a54_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1b2bc445c_AsI64(_16073_c))));
						(*_159927_d.alloc)._field_Model=jule::Any((*_159927_d.alloc)._field_Constant, &__jule_any_type15);
						(*_159927_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1b7195044:;
			};
		};
		return;;
	};
	jule::Ptr<_1b2dbdc3e_Slc> _16327_s = _1b2db4d34_Slc((*(_159927_d))._field_Kind);;
	if ((_16327_s == nullptr)) {
		_1b2d80ecb_pushErr(_self_, _159937_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_159927_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1b2db1627_TypeKind> _16387_t = (*(_16327_s))._field_Elem;;
	jule::Ptr<_1b2db9740_Prim> _16393_prim = _1b2db3ccd_Prim(_16387_t.ptr());;
	if (((_16393_prim == nullptr) || ((!(_1b2dbb16a_IsU8(_16393_prim.ptr()))) && (!(_1b2dbab4d_IsI32(_16393_prim.ptr())))))) {
		_1b2d80ecb_pushErr(_self_, _159937_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_159927_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return;;
	};
}



inline void _1b2d911d9_castInt(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _164627_t, jule::Ptr<_1b2d7dc21_Data> _164645_d, jule::Ptr<_1b2ac7eba_Token> _164655_errorToken) {
	if (_1b2d7e65b_IsConst(_164645_d.ptr())) {
		jule::Ptr<_1b2db9740_Prim> _16484_prim = _1b2db3ccd_Prim(_164627_t.ptr());;
		{
			
			if (_1b2c74a7e_IsSigInt((*(_16484_prim))._field_Kind)) {
				_case_begin_1b719d888:;
				{
					_1b2bc4c32_SetI64((*_164645_d.alloc)._field_Constant.ptr(), _1b2bc445c_AsI64((*(_164645_d))._field_Constant));
				}
			}
			else if (_1b2c74d8c_IsUnsigInt((*(_16484_prim))._field_Kind)) {
				_case_begin_1b719d932:;
				{
					_1b2bc4eda_SetU64((*_164645_d.alloc)._field_Constant.ptr(), _1b2bc46e3_AsU64((*(_164645_d))._field_Constant));
				}
			}
			_match_end_1b719d800:;
		};
	} else {
		(*(_164645_d))._field_Constant=nullptr;
		(*_164645_d.alloc)._field_untyped=false;
	};
	if ((_1b2db4581_Enum((*(_164645_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2be887c_Enum> _16614_e = _1b2db4581_Enum((*(_164645_d))._field_Kind);;
		if (_1b2c7572d_IsNum(_1b2db1a23_Str((*((*(_16614_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1b2db4064_Sptr((*(_164645_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1b2db9740_Prim> _16684_prim = _1b2db3ccd_Prim(_164627_t.ptr());;
		if ((!(_1b2dbc6dd_IsUintptr(_16684_prim.ptr())))) {
			_1b2d80ecb_pushErr(_self_, _164655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_164645_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_164627_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((_1b2db42ea_Ptr((*(_164645_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1b2db9740_Prim> _16754_prim = _1b2db3ccd_Prim(_164627_t);;
		if (_1b2dbc6dd_IsUintptr(_16754_prim.ptr())) {
		} else if ((!(_1b2d819c1_isUnsafe(_self_)))) {
			_1b2d80ecb_pushErr(_self_, _164655_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1b2db9740_Prim> _16843_prim = _1b2db3ccd_Prim((*(_164645_d))._field_Kind);;
	if (((_16843_prim != nullptr) && _1b2c7572d_IsNum(_1b2db9ab4_Str(_16843_prim)))) {
		return;;
	};
	_1b2d80ecb_pushErr(_self_, _164655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_164645_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_164627_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1b2d91607_castNum(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _169227_t, jule::Ptr<_1b2d7dc21_Data> _169245_d, jule::Ptr<_1b2ac7eba_Token> _169255_errorToken) {
	if (_1b2d7e65b_IsConst(_169245_d.ptr())) {
		jule::Ptr<_1b2db9740_Prim> _16944_prim = _1b2db3ccd_Prim(_169227_t.ptr());;
		{
			
			if (_1b2c75497_IsFloat((*(_16944_prim))._field_Kind)) {
				_case_begin_1b71a9c90:;
				{
					_1b2bc5804_SetF64((*_169245_d.alloc)._field_Constant.ptr(), _1b2bc4979_AsF64((*(_169245_d))._field_Constant));
				}
			}
			else if (_1b2c74a7e_IsSigInt((*(_16944_prim))._field_Kind)) {
				_case_begin_1b71a9d39:;
				{
					_1b2bc4c32_SetI64((*_169245_d.alloc)._field_Constant.ptr(), _1b2bc445c_AsI64((*(_169245_d))._field_Constant));
				}
			}
			else if (_1b2c74d8c_IsUnsigInt((*(_16944_prim))._field_Kind)) {
				_case_begin_1b71a9da0:;
				{
					_1b2bc4eda_SetU64((*_169245_d.alloc)._field_Constant.ptr(), _1b2bc46e3_AsU64((*(_169245_d))._field_Constant));
				}
			}
			_match_end_1b71a9bb3:;
		};
	} else {
		(*(_169245_d))._field_Constant=nullptr;
		(*_169245_d.alloc)._field_untyped=false;
	};
	if ((_1b2db4581_Enum((*(_169245_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2be887c_Enum> _17094_e = _1b2db4581_Enum((*(_169245_d))._field_Kind);;
		if (_1b2c7572d_IsNum(_1b2db1a23_Str((*((*(_17094_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b2db9740_Prim> _17153_prim = _1b2db3ccd_Prim((*(_169245_d))._field_Kind);;
	if (((_17153_prim != nullptr) && _1b2c7572d_IsNum(_1b2db9ab4_Str(_17153_prim)))) {
		return;;
	};
	_1b2d80ecb_pushErr(_self_, _169255_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_169245_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_169227_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1b2d91a25_castPrim(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _172328_t, jule::Ptr<_1b2d7dc21_Data> _172346_d, jule::Ptr<_1b2ac7eba_Token> _172356_errorToken) {
	jule::Ptr<_1b2db9740_Prim> _17243_prim = _1b2db3ccd_Prim(_172328_t.ptr());;
	{
		
		if (_1b2dbce91_IsAny(_17243_prim.ptr())) {
			_case_begin_1b71b32b5:;
			{
				__jule_panic_s(jule::Str::lit("sema: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1727:4"));;
			}
		}
		else if (_1b2dbcc0a_IsStr(_17243_prim.ptr())) {
			_case_begin_1b71b2e63:;
			{
				_1b2d90cbb_castStr(_self_, _172346_d, _172356_errorToken);
			}
		}
		else if (_1b2c75156_IsInt(_1b2db9ab4_Str(_17243_prim.ptr()))) {
			_case_begin_1b71b2ec9:;
			{
				_1b2d911d9_castInt(_self_, _172328_t, _172346_d, _172356_errorToken);
			}
		}
		else if (_1b2c7572d_IsNum(_1b2db9ab4_Str(_17243_prim.ptr()))) {
			_case_begin_1b71b3040:;
			{
				_1b2d91607_castNum(_self_, _172328_t, _172346_d, _172356_errorToken);
			}
		}
		else {
			_case_begin_1b71b2dec:;
			{
				_1b2d80ecb_pushErr(_self_, _172356_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str(_172328_t), &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1b71b2d75:;
	};
}



inline void _1b2d91d88_castConstant(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind>* _173933_t, jule::Ptr<_1b2d7dc21_Data>* _173952_d) {
	if ((((*(_173952_d)) == nullptr) || (!(_1b2d7e65b_IsConst((*(_173952_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1b2db9740_Prim> _17433_prim = _1b2db3ccd_Prim((*(_173933_t)).ptr());;
	_1b2dac029_castConstByType(&((*(_17433_prim))._field_Kind), _173952_d);
	(*((*(_173952_d))))._field_Model=jule::Any((*((*(_173952_d))))._field_Constant, &__jule_any_type15);
}



inline void _1b2d922a6_castTypeEnum(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind>* _174833_t, jule::Ptr<_1b2d7dc21_Data>* _174852_d, jule::Ptr<_1b2ac7eba_Token>* _174867_errorToken) {
	jule::I64 _17493_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1b2d0dde3_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_174852_d))))._field_Kind), _174833_t, _174867_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17493_n);;
		_1b2d80ecb_pushErr(_self_, (*(_174867_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_174852_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_174833_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_174852_d))))._field_Constant=nullptr;
	(*((*(_174852_d))))._field_untyped=false;
}



inline void _1b2d926c4_castTypeEnumT(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind>* _175834_t, jule::Ptr<_1b2d7dc21_Data>* _175853_d, jule::Ptr<_1b2ac7eba_Token>* _175868_errorToken) {
	jule::I64 _17593_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1b2d0dde3_checkTypeCompatibility((*(_self_))._field_s, _175834_t, &((*((*(_175853_d))))._field_Kind), _175868_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17593_n);;
		_1b2d80ecb_pushErr(_self_, (*(_175868_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_175853_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_175834_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_175853_d))))._field_Constant=nullptr;
	(*((*(_175853_d))))._field_untyped=false;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d92b7a_evalCastByTypeNData(_1b2d80948_eval* _self_, jule::Ptr<_1b2db1627_TypeKind> _176839_t, jule::Ptr<_1b2d7dc21_Data> _176857_d, jule::Ptr<_1b2ac7eba_Token> _176871_errorToken) {
	if (((_176857_d != nullptr) && (*_176857_d.alloc)._field_Decl)) {
		_1b2d80ecb_pushErr(_self_, _176871_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1b2d7e13e_IsNil(_176857_d)) {
			_case_begin_1b71c0cd9:;
			{
				if ((!(_1b2db352a_NilCompatible(_176839_t.ptr())))) {
					_1b2d80ecb_pushErr(_self_, _176871_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_176839_t), &__jule_any_type5); __jule_collection; }));
				};
				(*_176857_d.alloc)._field_Constant=nullptr;
				(*_176857_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1b2db3ccd_Prim((*_176857_d.alloc)._field_Kind.ptr()) != nullptr) && _1b2dbce91_IsAny(_1b2db3ccd_Prim((*(_176857_d))._field_Kind).ptr()))) {
			_case_begin_1b71c0a75:;
			{
				if ((_1b2db4581_Enum(_176839_t.ptr()) != nullptr)) {
					_1b2d80ecb_pushErr(_self_, _176871_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
					_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("try cast to type of enum fields instead of enum", 47)), jule::Slice<jule::Any>());
				} else if ((_1b2db4817_TypeEnum(_176839_t.ptr()) != nullptr)) {
					_1b2d80ecb_pushErr(_self_, _176871_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
				};
				(*_176857_d.alloc)._field_Constant=nullptr;
				(*_176857_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1b2db3ccd_Prim(_176839_t.ptr()) != nullptr) && _1b2dbce91_IsAny(_1b2db3ccd_Prim(_176839_t).ptr()))) {
			_case_begin_1b71c0adb:;
			{
				(*_176857_d.alloc)._field_Constant=nullptr;
				(*_176857_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1b2db4817_TypeEnum((*_176857_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b71c0b52:;
			{
				_1b2d922a6_castTypeEnum(_self_, &(_176839_t), &(_176857_d), &(_176871_errorToken));
			}
		}
		else if ((_1b2db4817_TypeEnum(_176839_t.ptr()) != nullptr)) {
			_case_begin_1b71c0bb8:;
			{
				_1b2d926c4_castTypeEnumT(_self_, &(_176839_t), &(_176857_d), &(_176871_errorToken));
			}
		}
		else if ((_1b2db42ea_Ptr(_176839_t.ptr()) != nullptr)) {
			_case_begin_1b71c19aa:;
			{
				_1b2d8ebee_castPtr(_self_, _176839_t, _176857_d, _176871_errorToken);
			}
		}
		else if ((_1b2db4064_Sptr(_176839_t.ptr()) != nullptr)) {
			_case_begin_1b71c1a21:;
			{
				_1b2d9053a_castRef(_self_, _176839_t, _176857_d, _176871_errorToken);
			}
		}
		else if ((_1b2db4d34_Slc(_176839_t.ptr()) != nullptr)) {
			_case_begin_1b71c1a87:;
			{
				_1b2d90958_castSlc(_self_, _176839_t, _176857_d, _176871_errorToken);
			}
		}
		else if ((_1b2db5351_Struct(_176839_t.ptr()) != nullptr)) {
			_case_begin_1b71c1aed:;
			{
				_1b2d9011c_castStruct(_self_, _176839_t, _176857_d, _176871_errorToken);
			}
		}
		else if ((_1b2db3ccd_Prim(_176839_t.ptr()) != nullptr)) {
			_case_begin_1b71c1b64:;
			{
				_1b2d91a25_castPrim(_self_, _176839_t, _176857_d, _176871_errorToken);
				_1b2d91d88_castConstant(_self_, &(_176839_t), &(_176857_d));
			}
		}
		else {
			_case_begin_1b71c0943:;
			{
				_1b2d80ecb_pushErr(_self_, _176871_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str(_176839_t.ptr()), &__jule_any_type5); __jule_collection; }));
				_176857_d=nullptr;
			}
		}
		_match_end_1b71c08bb:;
	};
	if ((_176857_d == nullptr)) {
		return nullptr;;
	};
	(*_176857_d.alloc)._field_Mutable=((*_176857_d.alloc)._field_Mutable || (!(_1b2db300d_Mutable((*_176857_d.alloc)._field_Kind.ptr()))));
	if (((!((*_176857_d.alloc)._field_Decl)) && ((_1b2db4581_Enum((*(_176857_d))._field_Kind) == nullptr) || (!(_1b2db1d64_Equal((*((*(_1b2db4581_Enum((*(_176857_d))._field_Kind)))._field_Kind))._field_Kind, _176839_t)))))) {
		_1b2daad08_applyCastKind(&((*(_self_))._field_s), &(_176857_d), &(_176839_t), &(_176871_errorToken), _1b2d83ece_getOwnerRefers(_self_));
		(*((*_176857_d.alloc)._field_Model.cast_ptr<_1b2bcec4d_CastingExprModel>(&__jule_any_type95)))._field_Token=_176871_errorToken;
	} else {
		(*_176857_d.alloc)._field_Kind=_176839_t;
	};
	(*_176857_d.alloc)._field_Decl=false;
	(*_176857_d.alloc)._field_Lvalue=false;
	(*_176857_d.alloc)._field_untyped=false;
	if (_1b2d7e65b_IsConst(_176857_d)) {
		(*((*_176857_d.alloc)._field_Constant))._field_Kind=(*(_1b2db3ccd_Prim(_176839_t.ptr())))._field_Kind;
	};
	return _176857_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d93131_evalCastT(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2db1627_TypeKind>* _184531_t, jule::Ptr<_1b2ae2721_Expr>* _184550_e, jule::Ptr<_1b2ac7eba_Token>* _184570_et) {
	jule::Ptr<_1b2db1627_TypeKind> _18467_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18467_prefix;
	});;
	if ((_1b2db4d34_Slc((*(_184531_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_184550_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1b71d37d0:;
				{
					(*_self_.alloc)._field_prefix=(*(_184531_t));
				}
			}
			_match_end_1b71d3758:;
		};
	};
	jule::Ptr<_1b2d7dc21_Data> _18557_d = _1b2d9e7ad_evalExpr(_self_, (*(_184550_e)));;
	if (((_18557_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18557_d;;
	};
	return _1b2d92b7a_evalCastByTypeNData(_self_, (*(_184531_t)), _18557_d, (*(_184570_et)));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d93472_evalCast(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae5081_CastExpr> _186229_c) {
	jule::Ptr<_1b2db8d38_TypeSymbol> _18637_t = _1b2cc476b_buildType((*(_186229_c))._field_Kind);;
	jule::Bool _18643_ok = _1b2d0b088_checkType((*(_self_))._field_s, &(_18637_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18643_ok))) {
		return nullptr;;
	};
	return _1b2d93131_evalCastT(_self_, &((*(_18637_t))._field_Kind), &((*_186229_c.alloc)._field_Expr), &((*((*_186229_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d937b3_evalNamespace(_1b2d80948_eval* _self_, jule::Ptr<_1b2ae545a_NamespaceExpr> _187133_s) {
	jule::Ptr<_1b2cd4e1e_ImportInfo> _18727_imp = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dcece9_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>>((void*)__jule_anon_1b71db167, jule::Ptr<__jule_anon_1b71db167_ctx>::make(__jule_anon_1b71db167_ctx{._187133_s=_187133_s}).as<jule::Uintptr>(), __jule_anon_1b71db167_ctx_handler));;
	if ((_18727_imp == nullptr)) {
		_1b2d80ecb_pushErr(_self_, (*_187133_s.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_187133_s))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _18817_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18727_imp, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data2);
	;
	_1b2d8173a_disallowBuiltin(_self_);
	jule::Any _18867_def = _1b2d83c48_getDef(_self_, &((*((*_187133_s.alloc)._field_Ident))._field_Kind), false);;
	_1b2d8153c_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18817_lookup;
	jule::Ptr<_1b2d7dc21_Data> _18897_d = _1b2d87e06_evalDef(_self_, &(_18867_def), (*_187133_s.alloc)._field_Ident);;
	return _18897_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d93c69_evalStructLitExplicit(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2b119c6_StructIns> _189342_s, jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _18947_exprs, jule::Ptr<_1b2ac7eba_Token> _189432_errorToken) {
	jule::Bool _18953_ok = _1b2d074c4_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_189342_s))._field_Decl))._field_Generics.len(), (*_189342_s.alloc)._field_Generics.len(), _189432_errorToken);;
	if ((!(_18953_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_189342_s.alloc)._field_Decl))) {
		_1b2d80ecb_pushErr(_self_, _189432_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_189342_s))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	_1b7173165_pushReference(_self_, &(_189342_s));
	_1b2d86102_checkDeprecated(_self_, &((*(*(_189342_s))._field_Decl.alloc)._field_Directives), _189432_errorToken);
	_1b2d76741_structLitChecker _19087_slc = _1b2d76741_structLitChecker{._field_e=_self_, ._field_errorToken=_189432_errorToken, ._field_s=_189342_s, ._field_args=jule::Slice<jule::Ptr<_1b2bce027_StructArgExprModel>>(nullptr)};;
	_1b2d77eb2_check(&_19087_slc, &(_18947_exprs));
	jule::Ptr<_1b2d7dc21_Data> _19157_d = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_189342_s, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1b2bce3bd_StructLitExprModel>(_1b2bce3bd_StructLitExprModel{._field_Strct=_189342_s, ._field_Args=_19087_slc._field_args}), &__jule_any_type97), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
	if ((*(*(_189342_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_19157_d))._field_Kind))._field_BindIdent=(*(*(_189342_s))._field_Decl.alloc)._field_Ident;
	};
	return _19157_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d940aa_evalStructLit(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae776a_StructLit> _193134_lit) {
	jule::Ptr<_1b2db8d38_TypeSymbol> _19327_t = _1b2cc476b_buildType((*(_193134_lit))._field_Kind);;
	jule::Bool _19333_ok = _1b2d0b088_checkType((*(_self_))._field_s, &(_19327_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19333_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _19387_s = _1b2db5351_Struct((*(_19327_t))._field_Kind.ptr());;
	if ((_19387_s == nullptr)) {
		if ((_1b2db4064_Sptr((*(_19327_t))._field_Kind) != nullptr)) {
			_19387_s=_1b2db5351_Struct((*(_1b2db4064_Sptr((*(_19327_t))._field_Kind)))._field_Elem.ptr());
			if ((_19387_s != nullptr)) {
				goto _julec_label_1b720204b;
			};
		};
		_1b2d80ecb_pushErr(_self_, (*((*_193134_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1b720204b:;
	jule::Ptr<_1b2d7dc21_Data> _19517_d = _1b2d93c69_evalStructLitExplicit(_self_, _19387_s, (*_193134_lit.alloc)._field_Exprs, (*(*(_193134_lit))._field_Kind.alloc)._field_Token);;
	if ((_1b2db4064_Sptr((*(_19327_t))._field_Kind) != nullptr)) {
		jule::Ptr<_1b2bce3bd_StructLitExprModel> _19538_model = (*(_19517_d))._field_Model.cast_ptr<_1b2bce3bd_StructLitExprModel>(&__jule_any_type97);;
		_1b2da8b4c_makeStructLitAlloc(&(_19517_d), &(_19538_model));
	};
	return _19517_d;;
}



inline _1b2dc3a24_typeChecker _1b2d94341_typeChecker(_1b2d80948_eval* _self_) {
	return _1b2d09d34_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d94682_evalType(_1b2d80948_eval* _self_, jule::Ptr<_1b2add3dc_TypeDecl> _196328_t) {
	jule::Ptr<_1b2db8d38_TypeSymbol> _19647_tk = _1b2cc476b_buildType(_196328_t);;
	jule::Bool _19653_ok = _1b2d0b088_checkType((*(_self_))._field_s, &(_19647_tk), (*(_self_))._field_lookup);;
	if ((!(_19653_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=(*(_19647_tk))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19647_tk.alloc)._field_Kind, &__jule_any_type86), ._field_Decl=true, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline void _1b2d949e5_callTypeFn(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae644a_FnCallExpr>* _197632_fc, jule::Ptr<_1b2d7dc21_Data>* _197659_d) {
	if (((*((*(_197632_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr(_self_.ptr(), (*((*(_197632_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
	} else if (((*((*(_197632_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr(_self_.ptr(), (*((*((*(_197632_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_197659_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
	} else if ((*((*(_197632_fc))))._field_IsCo) {
		_1b2d80ecb_pushErr(_self_.ptr(), (*((*(_197632_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_197659_d))=nullptr;
		return;;
	} else if (((*((*(_197632_fc))))._field_Exception != nullptr)) {
		_1b2d80ecb_pushErr(_self_.ptr(), (*((*(_197632_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_197659_d))=nullptr;
		return;;
	};
	if (((*((*(_197632_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1b2ae2721_Expr> _19928_arg = (*((*(_197632_fc))))._field_Args[0LL];;
		(*(_197659_d))=_1b2d93131_evalCastT(_self_, &((*((*(_197659_d))))._field_Kind), &(_19928_arg), &((*(_19928_arg))._field_Token));
		return;;
	};
	if (((*(_197659_d)) != nullptr)) {
		(*((*(_197659_d))))._field_Decl=false;
	};
}



inline void _1b2d94d58_callBuiltinFn(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae644a_FnCallExpr>* _200235_fc, jule::Ptr<_1b2d7dc21_Data>* _200262_d) {
	if ((!(_1b2ae6802_Unhandled((*(_200235_fc)).ptr())))) {
		_1b2d80ecb_pushErr(_self_.ptr(), (*((*(_200235_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_200262_d))=(*(_1b2db50ba_Fn((*((*(_200262_d))))._field_Kind.ptr())))._field_caller(&(_self_), _200235_fc, _200262_d);
	if (((*(_200262_d)) == nullptr)) {
		return;;
	};
	(*((*(_200262_d))))._field_Mutable=true;
}



inline void _1b2d951bb_checkFnOfConcurrentCall(_1b2d80948_eval* _self_, jule::Ptr<_1b2bdda70_FnIns>* _201440_f, jule::Ptr<_1b2ac7eba_Token> _201451_errorToken) {
	if (_1b2d819c1_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_201440_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b721109e:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdc91a_ParamIns> *_201810_p = it;
			{
				if (_1b2bd963c_IsSelf((*((*(_201810_p))))._field_Decl.ptr())) {
					if ((!(_1b2bd98c3_IsRef((*((*(_201810_p))))._field_Decl)))) {
						_1b2d80ecb_pushErr(_self_, _201451_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_201810_p))))._field_Decl.alloc)._field_Reference) {
					_1b2d80ecb_pushErr(_self_, _201451_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1b721109e:;
			++it;
			goto _iter_begin_1b721109e;
		}
		_iter_end_1b721109e:;
	};
}



inline void _1b2d955d9_processExceptionalHandler(_1b2d80948_eval* _self_, jule::Ptr<_1b2bdda70_FnIns>* _203346_f, jule::Ptr<_1b2ae644a_FnCallExpr>* _203362_fc, jule::Ptr<_1b2d7dc21_Data>* _203389_d) {
	jule::Bool _20343_resultNeeded = ((!(_1b2bdae68_IsVoid((*((*(_203346_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1b2cab830_scopeChecker> _203511_csc = nullptr;;
	jule::Ptr<_1b2ca4592_Scope> _203611_ch = nullptr;;
	jule::Ptr<_1b2bd0600_FnCallExprModel> _20387_model = (*((*(_203389_d))))._field_Model.cast_ptr<_1b2bd0600_FnCallExprModel>(&__jule_any_type30);;
	jule::Ptr<_1b2cab830_scopeChecker> _20427_sc = (*(_self_))._field_lookup.cast_ptr<_1b2cab830_scopeChecker>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1);;
	_203511_csc=_1b2cbdc3d_newChildChecker(_20427_sc);
	if (_20343_resultNeeded) {
		(*(_203511_csc))._field_result=(*(_203346_f));
	};
	_203611_ch=_1b2cb1ed9_getChild(_20427_sc);
	(*((*((*(_203362_fc))))._field_Exception))._field_Parent=(*_20427_sc.alloc)._field_tree;
	(*((*_203511_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_203511_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b2da8ec1_buildErrorVar(&(_203611_ch), _203362_fc); __jule_collection; }));
	_1b2cb2407_checkChildSsc(_20427_sc, &((*((*(_203362_fc))))._field_Exception), &(_203611_ch), &(_203511_csc));
	(*(_20387_model))._field_Assigned=_20343_resultNeeded;
	(*_20387_model.alloc)._field_Except=_203611_ch;
	if ((_20343_resultNeeded && ((*_203511_csc.alloc)._field_result != nullptr))) {
		_1b2d80ecb_pushErr(_self_, (*((*(_203362_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1b2d9594c_callFn(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae644a_FnCallExpr>* _206028_fc, jule::Ptr<_1b2d7dc21_Data>* _206055_d) {
	jule::Ptr<_1b2bdda70_FnIns> _20617_f = _1b2db50ba_Fn((*((*(_206055_d))))._field_Kind.ptr());;
	if (_1b2be0038_IsBuiltin(_20617_f.ptr())) {
		_1b2d94d58_callBuiltinFn(_self_, _206028_fc, _206055_d);
		return;;
	};
	if (((!(_1b2bdb1ee_IsMethod((*_20617_f.alloc)._field_Decl.ptr()))) && _1b2dccb93_hasDirective(&((*(*(_20617_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1b2d80ecb_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_206055_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_206055_d))))._field_Mutable)) && _1b2bdb1ee_IsMethod((*(_20617_f))._field_Decl)) && (!((*(*(_20617_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20617_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1b2d80ecb_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1b2bce3bd_StructLitExprModel> _20815_lit = _1b2dad1a1_isLitBased(&((*((*(_206055_d))))._field_Model));;
			if ((_20815_lit == nullptr)) {
				_1b2d80ecb_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1b2d76257_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_20815_lit));
			};
		};
	} else if (((!(_1b2d819c1_isUnsafe(_self_))) && (*(*(_20617_f))._field_Decl.alloc)._field_Unsafety)) {
		_1b2d80ecb_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _20937_dynamicAnnotation = ((((*(*(_20617_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_20617_f.alloc)._field_Generics.len() == 0LL)) && ((*_20617_f.alloc)._field_Params.len() > 0LL));;
	if (_20937_dynamicAnnotation) {
		(*_20617_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>::alloc((*(*(_20617_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20617_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2daee72_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20617_f.alloc)._field_Generics.len() != (*(*(_20617_f))._field_Decl.alloc)._field_Generics.len())) {
		_1b2d074c4_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_20617_f))._field_Decl.alloc)._field_Generics.len(), (*_20617_f.alloc)._field_Generics.len(), (*((*(_206028_fc))))._field_Token);
		(*(_206055_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b2d03091_sema> _21027_old = (*_self_.alloc)._field_s;;
	if (((*(*(_20617_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20617_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_21027_old != (*_self_.alloc)._field_s)) {
			(*(_21027_old))._field_errors=jule::append((*_21027_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_21027_old;
	});;
	_1b2d73809_fnCallArgChecker _21157_fcac = _1b2d73809_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_206028_fc))))._field_Args, ._field_errorToken=(*((*(_206028_fc))))._field_Token, ._field_f=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_dynamicAnnotation=_20937_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr)};;
	if ((!(_20937_dynamicAnnotation))) {
		if ((!((*_20617_f.alloc)._field_reloaded))) {
			jule::Bool _21245_ok = _1b2d11d08_reloadFnInsTypes((*(_self_))._field_s, _20617_f);;
			(*_20617_f.alloc)._field_reloaded=true;
			if ((!(_21245_ok))) {
				(*(_206055_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1b2bdda70_FnIns> _21318_existInstance = _1b2bdc563_appendInstance((*(_20617_f))._field_Decl, &(_20617_f));;
		if ((_21318_existInstance != nullptr)) {
			_20617_f=_21318_existInstance;
		};
	} else if ((!(_1b2d10169_buildFnNonGenericTypeKinds((*(_self_))._field_s, _20617_f, &(_21157_fcac._field_ignored))))) {
		(*(_206055_d))=nullptr;
		return;;
	};
	_21157_fcac._field_f=_20617_f;
	jule::Bool _21427_ok = false;;
	if (((*(*(_20617_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_21027_old, (*_self_.alloc)._field_s);
		_21427_ok=_1b2d75de4_check(&_21157_fcac);
		std::swap(_21027_old, (*_self_.alloc)._field_s);
	} else {
		_21427_ok=_1b2d75de4_check(&_21157_fcac);
	};
	if (_20937_dynamicAnnotation) {
		if ((!(_21427_ok))) {
			(*(_206055_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b2d8cceb_checkGenericFn(_self_, &(_20617_f), &((*((*(_206028_fc))))._field_Token), &((*((*(_206055_d))))._field_Model));
			_21427_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21427_ok))) {
			(*(_206055_d))=nullptr;
			return;;
		};
	};
	jule::Any _21637_callModel = (*((*(_206055_d))))._field_Model;;
	if (_1b2bdae68_IsVoid((*(_20617_f))._field_Decl)) {
		(*(_206055_d))=_1b2dab017_buildVoidData();
	} else {
		(*((*(_206055_d))))._field_Kind=(*_20617_f.alloc)._field_Result;
		(*((*(_206055_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1b2bd0600_FnCallExprModel> _21727_model = jule::new_ptr<_1b2bd0600_FnCallExprModel>(_1b2bd0600_FnCallExprModel{._field_Token=(*((*(_206028_fc))))._field_Token, ._field_Func=_20617_f, ._field_IsCo=(*((*(_206028_fc))))._field_IsCo, ._field_Expr=_21637_callModel, ._field_Args=_21157_fcac._field_argModels, ._field_Except=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_206055_d))))._field_Model=jule::Any(_21727_model, &__jule_any_type30);
	(*((*(_206055_d))))._field_Mutable=true;
	if ((*(*(_20617_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_206028_fc))))._field_IsCo) {
			_1b2d05e95_pushErr((*(_self_))._field_s, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1b2d06308_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1b2ae6802_Unhandled((*(_206028_fc)).ptr())) {
				_case_begin_1b7236a0e:;
				{
					_1b2d80ecb_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1b2ae6a88_Ignored((*(_206028_fc)).ptr())) {
				_case_begin_1b72366e0:;
				{
					goto _match_end_1b72350e5;
				}
			}
			else {
				_case_begin_1b723518e:;
				{
					_1b2d955d9_processExceptionalHandler(_self_, &(_20617_f), _206028_fc, _206055_d);
				}
			}
			_match_end_1b72350e5:;
		};
	} else if ((!(_1b2ae6802_Unhandled((*(_206028_fc)).ptr())))) {
		_1b2d80ecb_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_206028_fc))))._field_IsCo) {
		(*((*(_21727_model))._field_Func))._field_AsAnon=true;
		(*(*(_21727_model))._field_Func.alloc)._field_CalledCo=true;
		_1b2d951bb_checkFnOfConcurrentCall(_self_, &((*_21727_model.alloc)._field_Func), (*((*(_206028_fc))))._field_Token);
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d95c8d_evalFnCall(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae644a_FnCallExpr> _220931_fc) {
	jule::Ptr<_1b2db1627_TypeKind> _22107_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_22107_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_220931_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b723beba:;
			{
				if (((*((*((*(_220931_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1b2e96c7e_builtinCallerError(&(_self_), &(_220931_fc));;
				};
			}
		}
		_match_end_1b723be43:;
	};
	jule::Ptr<_1b2d7dc21_Data> _22237_d = _1b2d9d999_evalExprKind(_self_, (*(*(_220931_fc))._field_Expr.alloc)._field_Kind);;
	if ((_22237_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22237_d))._field_Decl) {
		_1b2d949e5_callTypeFn(_self_, &(_220931_fc), &(_22237_d));
		return _22237_d;;
	};
	if ((_1b2db50ba_Fn((*(_22237_d))._field_Kind.ptr()) == nullptr)) {
		_1b2d80ecb_pushErr(_self_, (*_220931_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b2d9594c_callFn(_self_, &(_220931_fc), &(_22237_d));
	return _22237_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d96189_evalEnumStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2be887c_Enum> _224234_enm, jule::Ptr<_1b2ac7eba_Token> _224250_ident) {
	jule::Ptr<_1b2be7d32_EnumItem> _22437_item = _1b2be94a4_FindItem(_224234_enm.ptr(), (*(_224250_ident))._field_Kind);;
	if ((_22437_item == nullptr)) {
		_1b2d80ecb_pushErr(_self_, _224250_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_224234_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_224250_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _1b2dacdd7_evalEnumStatic(&((*(_self_))._field_s), &(_224234_enm), &(_22437_item), &(_224250_ident), _1b2d83ece_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d96585_evalTypeEnumStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2bea087_TypeEnum> _225038_enm, jule::Ptr<_1b2ac7eba_Token> _225054_ident) {
	jule::Ptr<_1b2be99b0_TypeEnumItem> _22517_item = _1b2beab7b_FindItem(_225038_enm.ptr(), (*(_225054_ident))._field_Kind);;
	if ((_22517_item == nullptr)) {
		_1b2d80ecb_pushErr(_self_, _225054_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_225038_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_225054_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1b2db4581_Enum((*((*(_22517_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7245cc6:;
			{
				return _1b2d845c8__evalEnum(_self_, _1b2db4581_Enum((*((*(_22517_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1b2db4817_TypeEnum((*((*(_22517_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7243e4a:;
			{
				return _1b2d84d15__evalTypeEnum(_self_, _1b2db4817_TypeEnum((*((*(_22517_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1b2db5351_Struct((*((*(_22517_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7243eb1:;
			{
				return _1b2d85552__evalStruct(_self_, _1b2db5351_Struct((*((*(_22517_item))._field_Kind))._field_Kind));;
			}
		}
		else {
			_case_begin_1b7243dd4:;
			{
				jule::Ptr<_1b2d7dc21_Data> _22648_d = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=(*((*(_22517_item))._field_Kind))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
				(*(_22648_d))._field_Model=jule::Any((*_22648_d.alloc)._field_Kind, &__jule_any_type86);
				return _22648_d;;
			}
		}
		_match_end_1b724409e:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d96981_evalStructStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2b119c6_StructIns> _227336_s, jule::Ptr<_1b2ac7eba_Token> _227351_ident) {
	jule::Ptr<_1b2d7dc21_Data> _22747_d = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
	;
	jule::Ptr<_1b2bda9b2_Fn> _22787_method = _1b2b12a71_FindMethod(_227336_s.ptr(), (*(_227351_ident))._field_Kind, true);;
	if ((_22787_method != nullptr)) {
		if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22787_method.alloc)._field_Public, (*_22787_method.alloc)._field_Token)))) {
			_1b2d80ecb_pushErr(_self_, _227351_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_227351_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b2bdda70_FnIns> _22858_ins = _1b2bdc255_instance(_22787_method);;
		(*(_22858_ins))._field_Owner=_227336_s;
		_1b7070c77_pushReference(_self_, &(_22858_ins));
		(*_22747_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b2bd3537_StructStaticIdentExprModel>(_1b2bd3537_StructStaticIdentExprModel{._field_Structure=_227336_s, ._field_Expr=(*_22747_d.alloc)._field_Model, ._field_Method=_22858_ins}), &__jule_any_type98);
		(*_22747_d.alloc)._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_22858_ins, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1)});
		return _22747_d;;
	};
	jule::Ptr<_1b2d26ca7_Var> _22997_sttc = _1b2b13203_FindStatic(_227336_s, (*_227351_ident.alloc)._field_Kind);;
	if ((_22997_sttc != nullptr)) {
		return _1b2d8760e_evalVar(_self_, _22997_sttc, _227351_ident);;
	};
	_1b2d80ecb_pushErr(_self_, _227351_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_227336_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_227351_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d96e37_evalTraitSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data> _230837_d, jule::Ptr<_1b2be61c6_Trait> _230851_trt, jule::Ptr<_1b2ac7eba_Token> _230868_ident) {
	jule::Ptr<_1b2bda9b2_Fn> _23097_f = _1b2be6da8_FindMethod(_230851_trt.ptr(), (*(_230868_ident))._field_Kind);;
	if ((_23097_f == nullptr)) {
		_1b2d80ecb_pushErr(_self_, _230868_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_230851_trt.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_230868_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2bdc255_instance(_23097_f), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1)}), ._field_Mutable=(*(_230837_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1b2bd2800_TraitSubIdentExprModel>(_1b2bd2800_TraitSubIdentExprModel{._field_Token=_230868_ident, ._field_Expr=(*_230837_d.alloc)._field_Model, ._field_Method=_23097_f, ._field_Trt=_230851_trt}), &__jule_any_type99), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d97498_evalStructSubIdentField(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _233044_d, jule::Ptr<_1b2b119c6_StructIns>* _233059_s, jule::Ptr<_1b2ac7eba_Token>* _233079_tok, jule::Ptr<_1b2b10e26_FieldIns>* _2330104_f) {
	jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _23317_model = jule::new_ptr<_1b2bd3191_StructSubIdentExprModel>(_1b2bd3191_StructSubIdentExprModel{._field_Token=(*(_233079_tok)), ._field_Expr=jule::new_ptr<_1b2d7dc21_Data>((*((*(_233044_d))))), ._field_Method=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Field=(*(_2330104_f)), ._field_Owner=(*(_233059_s))});;
	(*((*(_233044_d))))._field_Model=jule::Any(_23317_model, &__jule_any_type100);
	(*((*(_233044_d))))._field_Kind=(*((*(_2330104_f))))._field_Kind;
	(*((*(_233044_d))))._field_Lvalue=true;
	if (((*((*((*(_2330104_f))))._field_Decl))._field_Mutable && (!((*((*(_233044_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)) {
				_case_begin_1b725a626:;
				{
					jule::Ptr<_1b2cab830_scopeChecker> _23465_scope = _1b2caee93_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1b2cab830_scopeChecker>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1));;
					(*((*(_233044_d))))._field_Mutable=(((*(_23465_scope))._field_owner != nullptr) && ((*(*(_23465_scope))._field_owner.alloc)._field_Owner == (*(_233059_s))));
				}
			}
			_match_end_1b725a5b0:;
		};
	};
	return (*(_233044_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d97ab4_evalStructSubIdentMethod(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _235545_d, jule::Ptr<_1b2b119c6_StructIns>* _235560_s, jule::Ptr<_1b2ac7eba_Token>* _235580_tok, jule::Ptr<_1b2bda9b2_Fn>* _2355105_m, jule::Bool _2355113_ref) {
	if ((_1b2bd98c3_IsRef((*((*(_2355105_m))))._field_Params[0LL].ptr()) && (!(_2355113_ref)))) {
		_1b2d80ecb_pushErr(_self_, (*(_235580_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1b2d86102_checkDeprecated(_self_, &((*((*(_2355105_m))))._field_Directives), (*(_235580_tok)));
	jule::Ptr<_1b2bdda70_FnIns> _23627_ins = _1b2bdc255_instance((*(_2355105_m)));;
	(*(_23627_ins))._field_Owner=(*(_235560_s));
	_1b7070c77_pushReference(_self_, &(_23627_ins));
	jule::Ptr<_1b2d7dc21_Data> _23657_model = jule::new_ptr<_1b2d7dc21_Data>((*((*(_235545_d)))));;
	(*((*(_235545_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd3191_StructSubIdentExprModel>(_1b2bd3191_StructSubIdentExprModel{._field_Token=(*(_235580_tok)), ._field_Expr=_23657_model, ._field_Method=_23627_ins, ._field_Field=jule::Ptr<_1b2b10e26_FieldIns>(nullptr), ._field_Owner=(*(_235560_s))}), &__jule_any_type100);
	(*((*(_235545_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23627_ins, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1)});
	return (*(_235545_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d98125_evalStructSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data> _237638_d, jule::Ptr<_1b2b119c6_StructIns> _237652_s, jule::Ptr<_1b2ae5834_SubIdentExpr> _237671_si, jule::Bool _237695_ref) {
	jule::Ptr<_1b2b10e26_FieldIns> _23777_f = _1b2b12db2_FindField(_237652_s.ptr(), (*((*(_237671_si))._field_Ident))._field_Kind);;
	if ((_23777_f != nullptr)) {
		if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23777_f.alloc)._field_Decl))._field_Public, (*(*(_23777_f))._field_Decl.alloc)._field_Token)))) {
			_1b2d80ecb_pushErr(_self_, (*_237671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23777_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _1b2d97498_evalStructSubIdentField(_self_, &(_237638_d), &(_237652_s), &((*_237671_si.alloc)._field_Ident), &(_23777_f));;
	};
	;
	jule::Ptr<_1b2bda9b2_Fn> _23877_m = _1b2b12a71_FindMethod(_237652_s, (*(*(_237671_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_23877_m == nullptr)) {
		_1b2d80ecb_pushErr(_self_, (*_237671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_237652_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_237671_si))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s, (*(_23877_m))._field_Public, (*(_23877_m))._field_Token)))) {
		_1b2d80ecb_pushErr(_self_, (*_237671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_23877_m))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1b2d8133e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1b2d97ab4_evalStructSubIdentMethod(_self_, &(_237638_d), &(_237652_s), &((*_237671_si.alloc)._field_Ident), &(_23877_m), _237695_ref);;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d98466_evalIntTypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _240033_ident) {
	;
	{
		auto &_match_expr{ (*(_240033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b726ab53:;
			{
				jule::Ptr<_1b2b6c23a_Const> _24048_c = static__1b2bc22e5_NewI64(_1b2c730bb_MaxI(jule::Str::lit("int", 3)));;
				(*(_24048_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e932ec_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24048_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24048_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b726b769:;
			{
				jule::Ptr<_1b2b6c23a_Const> _24138_c = static__1b2bc22e5_NewI64(static_cast<jule::I64>(_1b2c736c6_Min(jule::Str::lit("int", 3))));;
				(*(_24138_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e932ec_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24138_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24138_c});;
			}
		}
		else {
			_case_begin_1b726a526:;
			{
				_1b2d80ecb_pushErr(_self_, _240033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type5); (*it++) = jule::Any((*(_240033_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b726a779:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d987a7_evalUintTypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _242734_ident) {
	;
	{
		auto &_match_expr{ (*(_242734_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b726ecbc:;
			{
				jule::Ptr<_1b2b6c23a_Const> _24318_c = static__1b2bc24c1_NewU64(_1b2c73385_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24318_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e92e34_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24318_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24318_c});;
			}
		}
		else {
			_case_begin_1b726e6b2:;
			{
				_1b2d80ecb_pushErr(_self_, _242734_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type5); (*it++) = jule::Any((*(_242734_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b726e8e3:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d98ae8_evalI8TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _244532_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_244532_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b7273210:;
			{
				jule::Ptr<_1b2b6c23a_Const> _24518_c = static__1b2bc22e5_NewI64(127LL);;
				(*(_24518_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e9353e_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24518_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24518_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b7273d26:;
			{
				jule::Ptr<_1b2b6c23a_Const> _24608_c = static__1b2bc22e5_NewI64(-128LL);;
				(*(_24608_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e9353e_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24608_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24608_c});;
			}
		}
		else {
			_case_begin_1b72728e6:;
			{
				_1b2d80ecb_pushErr(_self_, _244532_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_244532_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b7272d47:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d98e39_evalI16TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _247433_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_247433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b7277863:;
			{
				jule::Ptr<_1b2b6c23a_Const> _24808_c = static__1b2bc22e5_NewI64(32767LL);;
				(*(_24808_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e937d6_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24808_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24808_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b7278479:;
			{
				jule::Ptr<_1b2b6c23a_Const> _24898_c = static__1b2bc22e5_NewI64(-32768LL);;
				(*(_24898_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e937d6_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24898_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24898_c});;
			}
		}
		else {
			_case_begin_1b7277049:;
			{
				_1b2d80ecb_pushErr(_self_, _247433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_247433_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b727749a:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9927a_evalI32TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _250333_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_250333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b727beb6:;
			{
				jule::Ptr<_1b2b6c23a_Const> _25098_c = static__1b2bc22e5_NewI64(2147483647LL);;
				(*(_25098_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e93a8e_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25098_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25098_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b727cacc:;
			{
				jule::Ptr<_1b2b6c23a_Const> _25188_c = static__1b2bc22e5_NewI64(-2147483648LL);;
				(*(_25188_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e93a8e_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25188_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25188_c});;
			}
		}
		else {
			_case_begin_1b727b69c:;
			{
				_1b2d80ecb_pushErr(_self_, _250333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_250333_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b727baed:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d995bb_evalI64TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _253233_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_253233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b7281619:;
			{
				jule::Ptr<_1b2b6c23a_Const> _25388_c = static__1b2bc22e5_NewI64(jule::MAX_I64);;
				(*(_25388_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e93d47_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25388_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25388_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b7282230:;
			{
				jule::Ptr<_1b2b6c23a_Const> _25478_c = static__1b2bc22e5_NewI64(jule::MIN_I64);;
				(*(_25478_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e93d47_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25478_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25478_c});;
			}
		}
		else {
			_case_begin_1b7280d00:;
			{
				_1b2d80ecb_pushErr(_self_, _253233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_253233_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b7281251:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9990c_evalU8TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _256132_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_256132_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b72858d7:;
			{
				jule::Ptr<_1b2b6c23a_Const> _25668_c = static__1b2bc24c1_NewU64(255LLU);;
				(*(_25668_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e94100_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25668_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25668_c});;
			}
		}
		else {
			_case_begin_1b7284d6a:;
			{
				_1b2d80ecb_pushErr(_self_, _256132_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_256132_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b7285475:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d99c4d_evalU16TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _258033_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_258033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b7288896:;
			{
				jule::Ptr<_1b2b6c23a_Const> _25858_c = static__1b2bc24c1_NewU64(65535LLU);;
				(*(_25858_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e943a8_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25858_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25858_c});;
			}
		}
		else {
			_case_begin_1b7287d29:;
			{
				_1b2d80ecb_pushErr(_self_, _258033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_258033_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b7288434:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9a08e_evalU32TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _259933_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_259933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b728b855:;
			{
				jule::Ptr<_1b2b6c23a_Const> _26048_c = static__1b2bc24c1_NewU64(4294967295LLU);;
				(*(_26048_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e94661_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26048_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26048_c});;
			}
		}
		else {
			_case_begin_1b728acd8:;
			{
				_1b2d80ecb_pushErr(_self_, _259933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_259933_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b728b3e3:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9a3d0_evalU64TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _261833_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_261833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b728e814:;
			{
				jule::Ptr<_1b2b6c23a_Const> _26238_c = static__1b2bc24c1_NewU64(jule::MAX_U64);;
				(*(_26238_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e94b4a_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26238_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26238_c});;
			}
		}
		else {
			_case_begin_1b728dc97:;
			{
				_1b2d80ecb_pushErr(_self_, _261833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_261833_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b728e3a2:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9a721_evalF32TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _263733_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_263733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b7292e99:;
			{
				jule::Ptr<_1b2b6c23a_Const> _26448_c = static__1b2bc2d1d_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26448_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e94d8c_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26448_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26448_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b7293ab0:;
			{
				jule::Ptr<_1b2b6c23a_Const> _26538_c = static__1b2bc2d1d_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_26538_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e94d8c_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26538_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26538_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1b7293b26:;
			{
				jule::Ptr<_1b2b6c23a_Const> _26628_c = static__1b2bc2d1d_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26628_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e94d8c_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26628_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26628_c});;
			}
		}
		else {
			_case_begin_1b729273a:;
			{
				_1b2d80ecb_pushErr(_self_, _263733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_263733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b7292ac0:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9aa62_evalF64TypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2ac7eba_Token> _267633_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_267633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b7298ad7:;
			{
				jule::Ptr<_1b2b6c23a_Const> _26838_c = static__1b2bc2d1d_NewF64(jule::MAX_F64);;
				(*(_26838_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e9509b_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26838_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26838_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b72996ed:;
			{
				jule::Ptr<_1b2b6c23a_Const> _26928_c = static__1b2bc2d1d_NewF64(jule::MIN_F64);;
				(*(_26928_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e9509b_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26928_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26928_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1b7299764:;
			{
				jule::Ptr<_1b2b6c23a_Const> _27018_c = static__1b2bc2d1d_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_27018_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=true, ._field_Kind=_1b2e9509b_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27018_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27018_c});;
			}
		}
		else {
			_case_begin_1b7298378:;
			{
				_1b2d80ecb_pushErr(_self_, _267633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_267633_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b729870d:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9ae5d_evalPrimStatic(_1b2d80948_eval* _self_, jule::Str _271530_kind, jule::Ptr<_1b2ac7eba_Token> _271541_ident) {
	{
		auto &_match_expr{ _271530_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1b729d59d:;
			{
				return _1b2d98466_evalIntTypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1b729e15e:;
			{
				return _1b2d987a7_evalUintTypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1b729e1c5:;
			{
				return _1b2d98ae8_evalI8TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1b729d25c:;
			{
				return _1b2d98e39_evalI16TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1b729d2c3:;
			{
				return _1b2d9927a_evalI32TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1b729d339:;
			{
				return _1b2d995bb_evalI64TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1b729d3a0:;
			{
				return _1b2d9990c_evalU8TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1b729e2b3:;
			{
				return _1b2d99c4d_evalU16TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1b729e329:;
			{
				return _1b2d9a08e_evalU32TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1b729e390:;
			{
				return _1b2d9a3d0_evalU64TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1b729e406:;
			{
				return _1b2d9a721_evalF32TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1b729e46c:;
			{
				return _1b2d9aa62_evalF64TypeStatic(_self_, _271541_ident);;
			}
		}
		else {
			_case_begin_1b7299940:;
			{
				_1b2d80ecb_pushErr(_self_, _271541_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_271530_kind, &__jule_any_type5); (*it++) = jule::Any((*(_271541_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b72999b7:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9b359_evalTypeStatic(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data> _274734_d, jule::Ptr<_1b2ae5834_SubIdentExpr> _274748_si) {
	{
		
		if ((_1b2db3ccd_Prim((*(_274734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72a43d9:;
			{
				return _1b2d9ae5d_evalPrimStatic(_self_, _1b2db9ab4_Str(_1b2db3ccd_Prim((*(_274734_d))._field_Kind).ptr()), (*(_274748_si))._field_Ident);;
			}
		}
		else if ((_1b2db4581_Enum((*(_274734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72a5374:;
			{
				return _1b2d96189_evalEnumStatic(_self_, _1b2db4581_Enum((*(_274734_d))._field_Kind), (*(_274748_si))._field_Ident);;
			}
		}
		else if ((_1b2db4817_TypeEnum((*(_274734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72a53da:;
			{
				return _1b2d96585_evalTypeEnumStatic(_self_, _1b2db4817_TypeEnum((*(_274734_d))._field_Kind), (*(_274748_si))._field_Ident);;
			}
		}
		else if ((_1b2db5351_Struct((*(_274734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72a4076:;
			{
				return _1b2d96981_evalStructStatic(_self_, _1b2db5351_Struct((*(_274734_d))._field_Kind), (*(_274748_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1b72a4010:;
			{
				_1b2d80ecb_pushErr(_self_, (*(_274748_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_274734_d))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b72a3e55:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b72ac25a_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c86aa2_comptimeTypeInfo>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1b2d7dc21_Data> _27647_cd = _1b2c8c8cc_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1b2d80ecb_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1b2d7dc21_Data> _1b72b1a23_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c7770d_comptimeStructField>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1b2d7dc21_Data> _27647_cd = _1b2c78b4e_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1b2d80ecb_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1b2d7dc21_Data> _1b72b6297_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c7db54_comptimeEnumField>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1b2d7dc21_Data> _27647_cd = _1b2c7eb88_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1b2d80ecb_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1b2d7dc21_Data> _1b72baa60_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c8196a_comptimeParam>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1b2d7dc21_Data> _27647_cd = _1b2c832b8_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1b2d80ecb_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1b2d7dc21_Data> _1b72c0427_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c7a931_comptimeStatic>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1b2d7dc21_Data> _27647_cd = _1b2c7bd72_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1b2d80ecb_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1b2d7dc21_Data> _1b72c4b9b_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c8cba7_comptimeValue>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1b2d7dc21_Data> _27647_cd = _1b2c90638_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1b2d80ecb_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1b2d7dc21_Data> _1b72c9420_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c92382_comptimeFile>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1b2d7dc21_Data> _27647_cd = _1b2c93bd0_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1b2d80ecb_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1b2d7dc21_Data> _1b72cdc2c_comptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2c96298_comptimeDecl>* _276354_ct, jule::Ptr<_1b2d7dc21_Data>* _276374_d, jule::Ptr<_1b2ae5834_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1b2d7dc21_Data> _27647_cd = _1b2c9a104_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1b2d80ecb_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}



inline __jule_tuple_x_1b2d7dc21_Data__jule_tuple_bool _1b2d9bc0b_tryComptimeObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data>* _277143_d, jule::Ptr<_1b2ae5834_SubIdentExpr> _277157_si) {
	__jule_tuple_x_1b2d7dc21_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1b2db7694_comptimeTypeInfo((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72aa665:;
			{
				jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _27748_ct = _1b2db7694_comptimeTypeInfo((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b72ac25a_comptimeObjSubIdent(_self_, &(_27748_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b2db63a7_comptimeStructField((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72aa19d:;
			{
				jule::Ptr<_1b2c7770d_comptimeStructField> _27778_ct = _1b2db63a7_comptimeStructField((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b72b1a23_comptimeObjSubIdent(_self_, &(_27778_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b2db68c4_comptimeEnumField((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72aa225:;
			{
				jule::Ptr<_1b2c7db54_comptimeEnumField> _27808_ct = _1b2db68c4_comptimeEnumField((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b72b6297_comptimeObjSubIdent(_self_, &(_27808_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b2db6de1_comptimeParam((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72aa29c:;
			{
				jule::Ptr<_1b2c8196a_comptimeParam> _27838_ct = _1b2db6de1_comptimeParam((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b72baa60_comptimeObjSubIdent(_self_, &(_27838_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b2db7bb1_comptimeStatic((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72aa324:;
			{
				jule::Ptr<_1b2c7a931_comptimeStatic> _27868_ct = _1b2db7bb1_comptimeStatic((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b72c0427_comptimeObjSubIdent(_self_, &(_27868_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b2db7e47_comptimeValue((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72aa39b:;
			{
				jule::Ptr<_1b2c8cba7_comptimeValue> _27898_ct = _1b2db7e47_comptimeValue((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b72c4b9b_comptimeObjSubIdent(_self_, &(_27898_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b2db86ea_comptimeFile((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72aa8c9:;
			{
				jule::Ptr<_1b2c92382_comptimeFile> _27928_ct = _1b2db86ea_comptimeFile((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b72c9420_comptimeObjSubIdent(_self_, &(_27928_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b2db81cd_comptimeDecl((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72aa940:;
			{
				jule::Ptr<_1b2c96298_comptimeDecl> _27958_ct = _1b2db81cd_comptimeDecl((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b72cdc2c_comptimeObjSubIdent(_self_, &(_27958_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b72aa137:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b72aa07c:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9c107_evalObjSubIdent(_1b2d80948_eval* _self_, jule::Ptr<_1b2d7dc21_Data> _280235_d, jule::Ptr<_1b2ae5834_SubIdentExpr> _280249_si) {
	if (_1b2aca8a2_IsIgnoreIdent((*((*(_280249_si))._field_Ident))._field_Kind)) {
		_1b2d80ecb_pushErr(_self_, (*_280249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1b2d7dc21_Data> _28098_compData;
		jule::Bool _280918_ok;
		({
			__jule_tuple_x_1b2d7dc21_Data__jule_tuple_bool __jule_assign_result = _1b2d9bc0b_tryComptimeObjSubIdent(_self_, &(_280235_d), _280249_si);
			_28098_compData = __jule_assign_result.__jule_result_arg0;
			_280918_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_280918_ok) {
			return _28098_compData;;
		};
	};
	jule::Ptr<_1b2db1627_TypeKind> _28157_kind = (*(_280235_d))._field_Kind;;
	{
		
		if ((_1b2db42ea_Ptr((*_280235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72d4062:;
			{
				jule::Ptr<_1b2dc1a33_Ptr> _28184_ptr = _1b2db42ea_Ptr((*(_280235_d))._field_Kind);;
				if (_1b2dc25a0_IsUnsafe(_28184_ptr.ptr())) {
					goto _match_end_1b72d3eda;
				};
				if ((!(_1b2d819c1_isUnsafe(_self_)))) {
					_1b2d80ecb_pushErr(_self_, (*_280249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28157_kind=(*(_1b2db42ea_Ptr((*(_280235_d))._field_Kind)))._field_Elem;
				_1b2dad48c_makeImplicitDeref(&(_280235_d), (*_280249_si.alloc)._field_Ident);
			}
		}
		else if ((_1b2db4064_Sptr((*_280235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72d410b:;
			{
				_28157_kind=(*(_1b2db4064_Sptr((*(_280235_d))._field_Kind)))._field_Elem;
				_1b2dad48c_makeImplicitDeref(&(_280235_d), (*_280249_si.alloc)._field_Ident);
			}
		}
		_match_end_1b72d3eda:;
	};
	{
		
		if ((_1b2db55d7_Trait((*_280235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b72d45c3:;
			{
				return _1b2d96e37_evalTraitSubIdent(_self_, _280235_d, _1b2db55d7_Trait((*(_280235_d))._field_Kind), (*_280249_si.alloc)._field_Ident);;
			}
		}
		else if ((_1b2db5351_Struct(_28157_kind.ptr()) != nullptr)) {
			_case_begin_1b72d78e5:;
			{
				jule::Ptr<_1b2b119c6_StructIns> _28364_s = _1b2db5351_Struct(_28157_kind);;
				if (_1b2da99d8_isInstancedStruct(_28364_s)) {
					jule::Bool _28389_usedReferenceElem = (_1b2db4064_Sptr((*_280235_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1b2d98125_evalStructSubIdent(_self_, _280235_d, _1b2db5351_Struct(_28157_kind), _280249_si, _28389_usedReferenceElem);;
				};
			}
		}
		_match_end_1b72d787e:;
	};
	_1b2d80ecb_pushErr(_self_, (*_280249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*_280235_d.alloc)._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9c448_evalSubIdent(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae5834_SubIdentExpr> _284633_si) {
	jule::Ptr<_1b2db1627_TypeKind> _28477_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28477_prefix;
	});;
	jule::Ptr<_1b2d7dc21_Data> _28507_d = _1b2d9d999_evalExprKind(_self_, (*((*(_284633_si))._field_Expr))._field_Kind);;
	if ((_28507_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28507_d))._field_Decl) {
		return _1b2d9b359_evalTypeStatic(_self_, _28507_d, _284633_si);;
	};
	return _1b2d9c107_evalObjSubIdent(_self_, _28507_d, _284633_si);;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9c789_evalTuple(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae3315_TupleExpr> _286030_tup) {
	jule::Ptr<_1b2dbe833_Tuple> _28617_tupT = jule::new_ptr<_1b2dbe833_Tuple>(_1b2dbe833_Tuple{._field_Types=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr)});;
	(*_28617_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(0LL, (*(_286030_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2db1627_TypeKind>(nullptr); __jule_collection; });
	jule::Ptr<_1b2bd3c0d_TupleExprModel> _28647_model = jule::new_ptr<_1b2bd3c0d_TupleExprModel>(_1b2bd3c0d_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d7dc21_Data>>::alloc(0LL, (*_286030_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2d7dc21_Data>(nullptr); __jule_collection; })});;
	jule::Bool _28687_ok = true;;
	{
		auto expr = &((*_286030_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72e279b:;
		if (it != expr_end) {
			jule::Ptr<_1b2ae2721_Expr> _286915_expr = *it;
			{
				jule::Ptr<_1b2d7dc21_Data> _28708_d = _1b2d9e7ad_evalExpr(_self_, _286915_expr);;
				if ((_28708_d == nullptr)) {
					_28687_ok=false;
					goto _iter_next_1b72e279b;
				};
				(*_28617_tupT.alloc)._field_Types=jule::append((*_28617_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_28708_d))._field_Kind; __jule_collection; }));
				(*(_28647_model))._field_Datas=jule::append((*_28647_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d7dc21_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28708_d; __jule_collection; }));
			}
			_iter_next_1b72e279b:;
			++it;
			goto _iter_begin_1b72e279b;
		}
		_iter_end_1b72e279b:;
	};
	if ((!(_28687_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_28617_tupT, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28647_model, &__jule_any_type83), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9cb85_evalMap(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2dc03d3_Map> _288928_m, jule::Ptr<_1b2ae7c21_BraceLit> _288941_lit) {
	jule::Ptr<_1b2bd1bd9_MapExprModel> _28907_model = jule::new_ptr<_1b2bd1bd9_MapExprModel>(_1b2bd1bd9_MapExprModel{._field_Kind=_288928_m, ._field_Entries=jule::Slice<jule::Ptr<_1b2bd1810_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_288941_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72e60da:;
		if (it != expr_end) {
			jule::Ptr<_1b2ae2721_Expr> _289415_expr = *it;
			{
				{
					auto &_match_expr{ (*(_289415_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1b72e6706:;
						{
							goto _match_end_1b72e69e2;
						}
					}
					else {
						_case_begin_1b72e6a58:;
						{
							_1b2d80ecb_pushErr(_self_.ptr(), (*(_288941_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1b72e69e2:;
				};
				jule::Ptr<_1b2ae854b_KeyValPair> _29048_pair = (*(_289415_expr))._field_Kind.cast_ptr<_1b2ae854b_KeyValPair>(&__jule_any_type81);;
				jule::Ptr<_1b2d7dc21_Data> _29068_key = _1b2d9e7ad_evalExpr(_self_, (*(_29048_pair))._field_Key);;
				if ((_29068_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1b2d7dc21_Data> _29118_val = _1b2d9e7ad_evalExpr(_self_, (*_29048_pair.alloc)._field_Val);;
				if ((_29118_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1b2d12c1b_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_288928_m))._field_Key), &(_29068_key), &((*((*_29048_pair.alloc)._field_Key))._field_Token))) {
					_1b2d0d486_checkAssignType((*(_self_))._field_s, false, &((*_288928_m.alloc)._field_Key), &(_29068_key), (*(*(_29048_pair))._field_Key.alloc)._field_Token, _1b2d83ece_getOwnerRefers(_self_));
				};
				if (_1b2d12c1b_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_288928_m.alloc)._field_Val), &(_29118_val), &((*((*_29048_pair.alloc)._field_Val))._field_Token))) {
					_1b2d0d486_checkAssignType((*(_self_))._field_s, false, &((*_288928_m.alloc)._field_Val), &(_29118_val), (*(*(_29048_pair))._field_Val.alloc)._field_Token, _1b2d83ece_getOwnerRefers(_self_));
				};
				(*(_28907_model))._field_Entries=jule::append((*_28907_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2bd1810_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1b2bd1810_KeyValPairExprModel>(_1b2bd1810_KeyValPairExprModel{._field_Key=(*(_29068_key))._field_Model, ._field_Val=(*(_29118_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1b72e60da:;
			++it;
			goto _iter_begin_1b72e60da;
		}
		_iter_end_1b72e60da:;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_288928_m, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28907_model, &__jule_any_type101), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9cec6_evalBraceLit(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae7c21_BraceLit> _293733_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1b730349e:;
			{
				_1b2d80ecb_pushErr(_self_, (*(_293733_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b2db586d_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b73033b1:;
			{
				return _1b2d9cb85_evalMap(_self_, _1b2db586d_Map((*(_self_))._field_prefix), _293733_lit);;
			}
		}
		else if ((_1b2db5351_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b7303427:;
			{
				return _1b2d93c69_evalStructLitExplicit(_self_, _1b2db5351_Struct((*(_self_))._field_prefix), (*(_293733_lit))._field_Exprs, (*_293733_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1b7300d09:;
			{
				_1b2d80ecb_pushErr(_self_.ptr(), (*(_293733_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b72eec92:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9d317_evalAnonFunc(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2b0009c_FnDecl> _295233_decl) {
	_1b2dc3a24_typeChecker _29537_tc = _1b2dc3a24_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1b2dc2a34_referencer>(nullptr), ._field_refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1b2db0835_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1b2bdda70_FnIns> _29587_ins = _1b2dcab3b_buildFunc(&_29537_tc, _295233_decl);;
	if ((_29587_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29587_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _29637_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2d26ca7_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)) {
			_case_begin_1b7308d56:;
			{
				jule::Ptr<_1b2cab830_scopeChecker> _29668_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1b2cab830_scopeChecker>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1);;
				jule::Ptr<_1b2cab830_scopeChecker> _29678_scc = _1b2cbdc3d_newChildChecker(_29668_sc);;
				(*(_29678_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1b2caa840_scopeLabel>>>(nullptr);
				(*_29678_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1b2ca774e_GotoSt>>>(nullptr);
				(*_29678_scc.alloc)._field_owner=_29587_ins;
				(*_29678_scc.alloc)._field_childIndex=0LL;
				(*_29678_scc.alloc)._field_it=0LLU;
				(*_29678_scc.alloc)._field_cse=0LLU;
				(*_29678_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1b2d26ca7_Var>>>)((&(_29637_captured))));
				_1b2d211e1_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29587_ins), &(_29678_scc));
			}
		}
		else {
			_case_begin_1b7309939:;
			{
				_1b2d2180c_checkFnIns((*_self_.alloc)._field_s, &(_29587_ins));
			}
		}
		_match_end_1b73098c3:;
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29587_ins, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1b2bd1436_AnonFnExprModel>(_1b2bd1436_AnonFnExprModel{._field_Captured=_29637_captured, ._field_Func=_29587_ins, ._field_Global=_1b2d81c57_isGlobal(_self_)}), &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9d658_evalBinary(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae5cda_BinaryExpr> _299031_op) {
	_1b2da1bcd_binaryEval _29917_bs = static__1b2da22b6_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1b2db9740_Prim> _29944_prim = _1b2db3ccd_Prim((*(_self_))._field_prefix);;
		if (((_29944_prim == nullptr) || (!(_1b2c7572d_IsNum(_1b2db9ab4_Str(_29944_prim.ptr())))))) {
			jule::Ptr<_1b2db1627_TypeKind> _29969_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29969_prefix;
			});;
			return _1b2da7d27_eval(&_29917_bs, &(_299031_op));;
		};
	};
	return _1b2da7d27_eval(&_29917_bs, &(_299031_op));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9d999_evalExprKind(jule::Ptr<_1b2d80948_eval> _self_, jule::Any _300533_kind) {
	{
		auto &_match_expr{ _300533_kind };
		
		if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b731599a:;
			{
				jule::Ptr<_1b2ae29da_RangeExpr> _30088_e = _300533_kind.unsafe_cast_ptr<_1b2ae29da_RangeExpr>();;
				return _1b2d9d999_evalExprKind(_self_, (*((*(_30088_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b7315cca:;
			{
				return _1b2d8350b_evalLit(_self_.ptr(), _300533_kind.cast_ptr<_1b2ae36ab_LitExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b7315d41:;
			{
				return _1b2d88247_evalIdent(_self_.ptr(), _300533_kind.cast_ptr<_1b2ae403b_IdentExpr>(&__jule_any_type41));;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b7315da7:;
			{
				return _1b2d88588_evalUnary(_self_, _300533_kind.cast_ptr<_1b2ae47cd_UnaryExpr>(&__jule_any_type90));;
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b7315e1d:;
			{
				return _1b2d888c9_evalVariadic(_self_, _300533_kind.cast_ptr<_1b2ae4ba7_VariadicExpr>(&__jule_any_type78));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1b7315e84:;
			{
				return _1b2d88c1a_evalUnsafe(_self_, _300533_kind.cast_ptr<_1b2ae3a85_UnsafeExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b7315eea:;
			{
				return _1b2d89853_evalSliceExpr(_self_, _300533_kind.cast_ptr<_1b2ae8c77_SliceExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1b73163e6:;
			{
				return _1b2d8d4a0_evalIndexing(_self_, _300533_kind.cast_ptr<_1b2ae96d4_IndexingExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1b731645c:;
			{
				return _1b2d8e7d1_evalSlicing(_self_, _300533_kind.cast_ptr<_1b2ae9d44_SlicingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1b73164c3:;
			{
				return _1b2d93472_evalCast(_self_, _300533_kind.cast_ptr<_1b2ae5081_CastExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b7316539:;
			{
				return _1b2d937b3_evalNamespace(_self_.ptr(), _300533_kind.cast_ptr<_1b2ae545a_NamespaceExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1b73165b1:;
			{
				return _1b2d940aa_evalStructLit(_self_, _300533_kind.cast_ptr<_1b2ae776a_StructLit>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b7316638:;
			{
				return _1b2d94682_evalType(_self_.ptr(), _300533_kind.cast_ptr<_1b2add3dc_TypeDecl>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1b73166b0:;
			{
				return _1b2d95c8d_evalFnCall(_self_, _300533_kind.cast_ptr<_1b2ae644a_FnCallExpr>(&__jule_any_type84));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b7316737:;
			{
				return _1b2d9c448_evalSubIdent(_self_, _300533_kind.cast_ptr<_1b2ae5834_SubIdentExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b73167ae:;
			{
				return _1b2d9c789_evalTuple(_self_, _300533_kind.cast_ptr<_1b2ae3315_TupleExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b7316836:;
			{
				return _1b2d9cec6_evalBraceLit(_self_, _300533_kind.cast_ptr<_1b2ae7c21_BraceLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b73168ad:;
			{
				return _1b2d9d317_evalAnonFunc(_self_, _300533_kind.cast_ptr<_1b2b0009c_FnDecl>(&__jule_any_type67));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b7316935:;
			{
				return _1b2d9d658_evalBinary(_self_, _300533_kind.cast_ptr<_1b2ae5cda_BinaryExpr>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1b7315c64:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7315bed:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9dcda_eval1(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae2721_Expr> _305326_expr) {
	jule::Ptr<_1b2d7dc21_Data> _30547_d = _1b2d9d999_evalExprKind(_self_, (*(_305326_expr))._field_Kind);;
	if (((_30547_d == nullptr) || ((*(_30547_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1b2db50ba_Fn((*(_30547_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b733b85b:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _30628_f = _1b2db50ba_Fn((*(_30547_d))._field_Kind.ptr());;
				if (_1b2be0038_IsBuiltin(_30628_f.ptr())) {
					_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*_305326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1b733976b;
				};
				jule::I64 _30674_required = (*((*_30628_f.alloc)._field_Decl))._field_Generics.len();;
				jule::I64 _30684_given = (*_30628_f.alloc)._field_Generics.len();;
				if ((!(_1b2d074c4_checkGenericQuantity((*(_self_))._field_s, _30674_required, _30684_given, (*_305326_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_30628_f))._field_Decl.alloc)._field_Statically)) && _1b2bdb1ee_IsMethod((*(_30628_f))._field_Decl))) {
					_1b2d05e95_pushErr((*(_self_))._field_s, (*_305326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1b2da8223_findDirective(&((*(*(_30628_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1b2d05e95_pushErr((*(_self_))._field_s, (*_305326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_30628_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				} else {
					(*_30628_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_30547_d))._field_Decl) {
			_case_begin_1b733b8c2:;
			{
				jule::Ptr<_1b2b119c6_StructIns> _30818_s = _1b2db5351_Struct((*(_30547_d))._field_Kind.ptr());;
				if ((_30818_s == nullptr)) {
					goto _match_end_1b733976b;
				};
				jule::I64 _30854_required = (*((*(_30818_s))._field_Decl))._field_Generics.len();;
				jule::I64 _30864_given = (*(_30818_s))._field_Generics.len();;
				if ((!(_1b2d074c4_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _30854_required, _30864_given, (*_305326_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1b733976b:;
	};
	return _30547_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9e12b_eval(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae2721_Expr> _309825_expr) {
	jule::Ptr<_1b2d7dc21_Data> _30997_d = _1b2d9dcda_eval1(_self_, _309825_expr);;
	if ((_30997_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1b2db5d8a_comptime((*(_30997_d))._field_Kind.ptr()))) {
		_1b2d05e95_pushErr((*_self_.alloc)._field_s.ptr(), (*(_309825_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30997_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9e46c_evalExpr1(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae2721_Expr> _311330_expr) {
	jule::Ptr<_1b2d7dc21_Data> _31147_d = _1b2d9dcda_eval1(_self_, _311330_expr);;
	{
		
		if ((_31147_d == nullptr)) {
			_case_begin_1b73499ce:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31147_d))._field_Decl) {
			_case_begin_1b7349a78:;
			{
				_1b2d80ecb_pushErr(_self_, (*(_311330_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b7349957:;
			{
				return _31147_d;;
			}
		}
		_match_end_1b73498d0:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2d9e7ad_evalExpr(jule::Ptr<_1b2d80948_eval> _self_, jule::Ptr<_1b2ae2721_Expr> _312929_expr) {
	jule::Ptr<_1b2d7dc21_Data> _31307_d = _1b2d9e12b_eval(_self_, _312929_expr);;
	{
		
		if ((_31307_d == nullptr)) {
			_case_begin_1b734ba47:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31307_d))._field_Decl) {
			_case_begin_1b734bae1:;
			{
				_1b2d80ecb_pushErr(_self_, (*(_312929_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b734b9c0:;
			{
				return _31307_d;;
			}
		}
		_match_end_1b734b948:;
	};
}








inline jule::Bool _1b2d9ec42_unaryEval_eq(_1b2d9ec42_unaryEval *_self_, _1b2d9ec42_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1b2d9ec42_unaryEval static__1b2da01b5_new(jule::Ptr<_1b2d80948_eval> _315020_e) {
	return _1b2d9ec42_unaryEval{._field_e=_315020_e, ._field_d=jule::Ptr<_1b2d7dc21_Data>(nullptr), ._field_u=jule::Ptr<_1b2ae47cd_UnaryExpr>(nullptr)};;
}



inline void _1b2da03b3_minus(_1b2d9ec42_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b734d8d4:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b2db3ccd_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7353b2b:;
			{
				if ((!(_1b2c7572d_IsNum(_1b2db1a23_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b2db5351_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b734d5a4:;
			{
				if (((*(_1b2db5351_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b734d53d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b734d450:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1b2d7e65b_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b2bc67c2_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b7358009:;
				{
					_1b2bc5804_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1b2bc41c6_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1b2bc5c88_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b73580e7:;
				{
					_1b2bc4c32_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1b2bc368c_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1b2bc601e_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b7357ba7:;
				{
					_1b2bc4c32_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1b2bc445c_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1b7357b30:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unary.minus, this panic call should be unreachable", 88) + jule::Str("\nlocation: std/jule/sema/eval.jule:3188:5"));;
				}
			}
			_match_end_1b7357a53:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b2bcd9e9_UnaryExprModel>(_1b2bcd9e9_UnaryExprModel{._field_Expr=jule::new_ptr<_1b2d7dc21_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1b2da05b1_plus(_1b2d9ec42_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b735d53c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b2db3ccd_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b735d927:;
			{
				if ((!(_1b2c7572d_IsNum(_1b2db1a23_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b2db5351_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b735d1da:;
			{
				if (((*(_1b2db5351_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b735d174:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b735d064:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1b2d7e65b_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b2bc67c2_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b7362d05:;
				{
					_1b2bc5804_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1b2bc41c6_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1b2bc5c88_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b7362de3:;
				{
					_1b2bc4c32_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1b2bc368c_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1b2bc601e_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b73629a3:;
				{
					_1b2bc4c32_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1b2bc445c_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1b736292b:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unary.plus, this panic call should be unreachable", 87) + jule::Str("\nlocation: std/jule/sema/eval.jule:3233:5"));;
				}
			}
			_match_end_1b736284e:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b2bcd9e9_UnaryExprModel>(_1b2bcd9e9_UnaryExprModel{._field_Expr=jule::new_ptr<_1b2d7dc21_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1b2da07ae_caret(_1b2d9ec42_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b7368338:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b2db3ccd_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7368723:;
			{
				if ((!(_1b2c75156_IsInt(_1b2db1a23_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b2db5351_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7367ed6:;
			{
				if (((*(_1b2db5351_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b7367e70:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b7367d60:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1b2d7e65b_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b2bc5c88_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b736cae0:;
				{
					_1b2bc4c32_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1b2bc368c_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1b2bc601e_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b736cbcd:;
				{
					_1b2bc4eda_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1b2bc3923_ReadU64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1b736c727:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unary.caret, this panic call should be unreachable", 88) + jule::Str("\nlocation: std/jule/sema/eval.jule:3276:5"));;
				}
			}
			_match_end_1b736c64a:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b2bcd9e9_UnaryExprModel>(_1b2bcd9e9_UnaryExprModel{._field_Expr=jule::new_ptr<_1b2d7dc21_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1b2da09ac_excl(_1b2d9ec42_unaryEval* _self_) {
	jule::Ptr<_1b2db9740_Prim> _32903_t = _1b2db3ccd_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32903_t == nullptr) || (!(_1b2dbc974_IsBool(_32903_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1b2d7e65b_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b2bc62a5_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b7373c8e:;
				{
					_1b2bc5293_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1b2bc3ba9_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1b73738c6:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unary.excl, this panic call should be unreachable", 87) + jule::Str("\nlocation: std/jule/sema/eval.jule:3304:5"));;
				}
			}
			_match_end_1b73737e9:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b2bcd9e9_UnaryExprModel>(_1b2bcd9e9_UnaryExprModel{._field_Expr=jule::new_ptr<_1b2d7dc21_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1b2da0baa_star(_1b2d9ec42_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1b2bcd9e9_UnaryExprModel>(_1b2bcd9e9_UnaryExprModel{._field_Expr=jule::new_ptr<_1b2d7dc21_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
	{
		
		if ((_1b2db42ea_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b73775de:;
			{
				if ((!(_1b2d819c1_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1b2d80ecb_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1b2dc1a33_Ptr> _33298_t = _1b2db42ea_Ptr((*((*(_self_))._field_d))._field_Kind);;
				if (_1b2dc25a0_IsUnsafe(_33298_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_33298_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1b2db4064_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7377666:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1b2db4064_Sptr((*((*(_self_))._field_d))._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1b7377237:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b7376225:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1b2da0da8_amper(_1b2d9ec42_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b7380d67:;
			{
				jule::Ptr<_1b2bce3bd_StructLitExprModel> _33518_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1b2bce3bd_StructLitExprModel>();;
				_1b2da8b4c_makeStructLitAlloc(&((*(_self_))._field_d), &(_33518_lit));
			}
		}
		else {
			_case_begin_1b737d2c6:;
			{
				{
					
					if (_1b2dcce5c_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1b737dbbc:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2dc1a33_Ptr>(_1b2dc1a33_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1b2bcd9e9_UnaryExprModel>(_1b2bcd9e9_UnaryExprModel{._field_Expr=jule::new_ptr<_1b2d7dc21_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
						}
					}
					else {
						_case_begin_1b737cdb9:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1b737d76b:;
				};
			}
		}
		_match_end_1b737d260:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1b2da10a6_typeDecl(_1b2d9ec42_unaryEval* _self_) {
	_1b2dc3a24_typeChecker _33767_tc = _1b2dc3a24_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1b2dc2a34_referencer>(nullptr), ._field_refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1b2db0835_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b73848a4:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dc9354_buildPtrFromType(&_33767_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b7384563:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dc8bc2_buildSptrFromType(&_33767_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		else {
			_case_begin_1b7383e9c:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b73844db:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1b2da12a4_evalData(_1b2d9ec42_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b738a1b2:;
			{
				jule::Ptr<_1b2db1627_TypeKind> _34018_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1b2d9e12b_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34018_prefix;
			}
		}
		else {
			_case_begin_1b73845c9:;
			{
				(*(_self_))._field_d=_1b2d9e12b_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1b7389c94:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da15e5_eval(_1b2d9ec42_unaryEval* _self_, jule::Ptr<_1b2ae47cd_UnaryExpr> _341024_u) {
	(*(_self_))._field_u=_341024_u;
	_1b2da12a4_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1b2da10a6_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1b2db1627_TypeKind> _34213_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b738e87b:;
			{
				_1b2da03b3_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b738e8e2:;
			{
				_1b2da05b1_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b738e958:;
			{
				_1b2da07ae_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1b738e9be:;
			{
				_1b2da09ac_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b738ea35:;
			{
				_1b2da0baa_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b738ea9b:;
			{
				_1b2da0da8_amper(_self_);
			}
		}
		else {
			_case_begin_1b738e33c:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1b738e804:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b73900a7:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str(_34213_kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1b2d7e65b_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1b738d00b:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type15);
			}
		}
		_match_end_1b7391a8c:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1b2da1bcd_binaryEval_eq(_1b2da1bcd_binaryEval *_self_, _1b2da1bcd_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1b2da1bcd_binaryEval static__1b2da22b6_newPlain(jule::Ptr<_1b2d80948_eval> _345825_e) {
	return _1b2da1bcd_binaryEval{._field_e=_345825_e, ._field_l=jule::Ptr<_1b2d7dc21_Data>(nullptr), ._field_r=jule::Ptr<_1b2d7dc21_Data>(nullptr), ._field_op=jule::Ptr<_1b2ac7eba_Token>(nullptr)};;
}



inline _1b2da1bcd_binaryEval static__1b2da263a_new(jule::Ptr<_1b2d80948_eval> _346420_e, jule::Ptr<_1b2ac7eba_Token> _346434_op) {
	return _1b2da1bcd_binaryEval{._field_e=_346420_e, ._field_l=jule::Ptr<_1b2d7dc21_Data>(nullptr), ._field_r=jule::Ptr<_1b2d7dc21_Data>(nullptr), ._field_op=_346434_op};;
}



inline jule::Bool _1b2da28c1_checkTypeCompatibility(_1b2da1bcd_binaryEval* _self_) {
	return _1b2d0e7b7_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1b2da2b57_checkStructCommonOperatorCompatibility(_1b2da1bcd_binaryEval* _self_) {
	jule::Ptr<_1b2bdda70_FnIns> _347811_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b73973ab:;
			{
				_347811_overload=(*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b7397059:;
			{
				_347811_overload=(*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b73970c0:;
			{
				_347811_overload=(*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b7397136:;
			{
				_347811_overload=(*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b739719c:;
			{
				_347811_overload=(*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b7397213:;
			{
				_347811_overload=(*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b7397279:;
			{
				_347811_overload=(*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b73989b7:;
			{
				_347811_overload=(*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1b7398a2d:;
			{
				_347811_overload=(*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b7398a94:;
			{
				_347811_overload=(*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1b7396ae7:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1b7396ed2:;
	};
	if ((_347811_overload == nullptr)) {
		_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1b2bdc91a_ParamIns> _35107_p = (*(_347811_overload))._field_Params[1LL];;
	return _1b2d0d486_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_35107_p))._field_Decl))._field_Reference, &((*_35107_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op, _1b2d83ece_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da2ddd_evalComptimeTypeInfo(_1b2da1bcd_binaryEval* _self_) {
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _35157_r = _1b2db7694_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_35157_r == nullptr)) {
		_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _35207_l = _1b2db7694_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b73a7d39:;
			{
				jule::Ptr<_1b2b6c23a_Const> _35238_constant = static__1b2bc278a_NewBool(_1b2db1d64_Equal((*(_35207_l))._field_base, (*(_35157_r))._field_base));;
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35238_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35238_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b73a92d0:;
			{
				jule::Ptr<_1b2b6c23a_Const> _35308_constant = static__1b2bc278a_NewBool((!(_1b2db1d64_Equal((*(_35207_l))._field_base, (*(_35157_r))._field_base))));;
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35308_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35308_constant});;
			}
		}
		else {
			_case_begin_1b73a5b4a:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b73a7960:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da3174_evalNil(_1b2da1bcd_binaryEval* _self_) {
	if ((!(_1b2db352a_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b73add84:;
			{
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b73ac16d:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b73ad9aa:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da340a_evalEnum(_1b2da1bcd_binaryEval* _self_) {
	jule::Ptr<_1b2be887c_Enum> _35617_enm = _1b2db4581_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b73b12b5:;
			{
				jule::Ptr<_1b2db1627_TypeKind> _35658_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1b2db4581_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
					_35658_rkind=(*((*(_1b2db4581_Enum((*((*(_self_))._field_r))._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1b2d0dde3_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_35617_enm))._field_Kind.alloc)._field_Kind), &(_35658_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		_match_end_1b73b123d:;
	};
	if (((_1b2db4581_Enum((*((*(_self_))._field_r))._field_Kind) == nullptr) || (_35617_enm != _1b2db4581_Enum((*((*(_self_))._field_r))._field_Kind)))) {
		_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_35617_enm))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b73b6e14:;
			{
				if ((!(_1b2c7572d_IsNum(_1b2db1a23_Str((*(*(_35617_enm))._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35617_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b73b8058:;
			{
				jule::Ptr<_1b2be7d32_EnumItem> _35954_first = (*_35617_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1b2bc5c88_IsI64((*((*((*(_35954_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1b73bb941:;
						{
							if ((_1b2bc368c_ReadI64((*((*((*(_35954_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1b73bdd1c;
							};
							goto _julec_label_1b73bed2e;
						}
					}
					else if (_1b2bc601e_IsU64((*((*((*(_35954_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1b73bba2e:;
						{
							if ((_1b2bc3923_ReadU64((*((*((*(_35954_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1b73bdd1c;
							};
							goto _julec_label_1b73bed2e;
						}
					}
					else {
						_case_begin_1b73bb578:;
						{
							__jule_panic_s(jule::Str::lit("sema: unimplemented enum type, this panic call should be unreachable", 68) + jule::Str("\nlocation: std/jule/sema/eval.jule:3608:5"));;
						}
					}
					_match_end_1b73bb501:;
				};
				_julec_label_1b73bed2e:;
				_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_35617_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1b2d8133e_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1b73bdd1c:;
				goto _case_begin_1b73b80be;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b73b80be:;
			{
				if (((_1b2db3ccd_Prim((*(*(_35617_enm))._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1b2c75156_IsInt(_1b2db9ab4_Str(_1b2db3ccd_Prim((*((*(_35617_enm))._field_Kind))._field_Kind).ptr())))))) {
					_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35617_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b73b132b:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35617_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b73b6a5c:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da3691_evalTypeEnum(_1b2da1bcd_binaryEval* _self_) {
	jule::Ptr<_1b2bea087_TypeEnum> _36287_enm = _1b2db4817_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1b2da28c1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b73c50dc:;
			{
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b73c441b:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2bea40b_Str(_36287_enm.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b73c4b7a:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da3927_evalSptr(_1b2da1bcd_binaryEval* _self_) {
	if ((!(_1b2da28c1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b73c760b:;
			{
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b73c650b:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b73c7232:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da3bad_evalPtr(_1b2da1bcd_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b73c99d7:;
			{
				if ((!(_1b2da28c1_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b73cae4a:;
			{
				if ((_1b2db42ea_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1b2dc25a0_IsUnsafe(_1b2db42ea_Ptr((*((*(_self_))._field_l))._field_Kind).ptr())) {
					_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
				};
				if ((!(_1b2da9cd5_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b73c9069:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b73c8e8c:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da3e44_evalArr(_1b2da1bcd_binaryEval* _self_) {
	if ((!(_1b2da28c1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b73d2acd:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1b2bdda70_FnIns> _37059_f = _1b2bdbebe_instanceForce(_1b27811e5_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37059_f))._field_Generics=jule::append((*_37059_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1b2daee72_InsGeneric>(_1b2daee72_InsGeneric{._field_Kind=(*(_1b2db4a9d_Arr((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr)}); __jule_collection; }));
					jule::Bool _37075_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b2d1d9e6_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37059_f), &((*(_self_))._field_op));
						_37075_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37075_ok))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/eval.jule:3709:6"));;
					};
					_1b7070c77_pushReference((*(_self_))._field_e, &(_37059_f));
				};
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b73cbb71:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b73d2704:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da41ca_evalStruct(_1b2da1bcd_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b73d4481:;
			{
				if (((*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b73d4519:;
			{
				if (((*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1b73d8a90:;
			{
				if (((*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b73d8b06:;
			{
				if (((*(_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b73d8b6c:;
			{
				if ((!(_1b2da28c1_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		_match_end_1b73d43a4:;
	};
	if ((!(_1b2da2b57_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da4461_evalTrait(_1b2da1bcd_binaryEval* _self_) {
	if ((!(_1b2da28c1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b73e51c8:;
			{
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b73e457e:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b73e4cee:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da46e7_evalAny(_1b2da1bcd_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b73e75a4:;
			{
				_1b2dce425_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op), _1b2d83ece_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b73e6b36:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b73e6a59:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da497d_evalBool(_1b2da1bcd_binaryEval* _self_) {
	if ((!(_1b2da28c1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b73ea73e:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b73e88b3:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b73ea365:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da4c14_evalStr(_1b2da1bcd_binaryEval* _self_) {
	jule::Str _38217_rk = _1b2db1a23_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_38217_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_38217_rk, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b73ee9c9:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b73ee8db:;
			{
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b73ed49a:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b73ee534:;
	};
}



inline void _1b2da4e12_setTypeToGreater(_1b2da1bcd_binaryEval* _self_) {
	jule::Ptr<_1b2db9740_Prim> _38463_lp = _1b2db3ccd_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1b2db9740_Prim> _38473_rp = _1b2db3ccd_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38473_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38463_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38463_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1b2da51ba_checkModData(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _386333_d) {
	if ((!(_1b2d7e65b_IsConst((*(_386333_d)).ptr())))) {
		if (((_1b2db3ccd_Prim((*((*(_386333_d))))._field_Kind.ptr()) == nullptr) || (!(_1b2c75156_IsInt((*(_1b2db3ccd_Prim((*((*(_386333_d))))._field_Kind)))._field_Kind))))) {
			_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1b2d646b8_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _386333_d)) {
			_case_begin_1b740b024:;
			{
				_1b2bc4c32_SetI64((*((*(_386333_d))))._field_Constant.ptr(), _1b2bc445c_AsI64((*((*(_386333_d))))._field_Constant));
			}
		}
		else if (_1b2d64a81_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _386333_d)) {
			_case_begin_1b740ac05:;
			{
				_1b2bc4eda_SetU64((*((*(_386333_d))))._field_Constant.ptr(), _1b2bc46e3_AsU64((*((*(_386333_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1b740ab8e:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b740ab28:;
	};
}



inline void _1b2da53b8_mod(_1b2da1bcd_binaryEval* _self_) {
	_1b2da51ba_checkModData(_self_, &((*(_self_))._field_l));
	_1b2da51ba_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1b2da57b4_numbersAreCompatibile(_1b2da1bcd_binaryEval* _self_, jule::Str* _388534_lk, jule::Str* _388544_rk) {
	if ((!(_1b2c7572d_IsNum((*(_388544_rk)))))) {
		return false;;
	};
	if ((_1b2d7e65b_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_388534_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1b2d7e65b_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1b2d64344_floatAssignable(_388534_lk, &((*(_self_))._field_r));;
		};
		return ((*(_388544_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_388534_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1b2d7e65b_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1b2d64344_floatAssignable(_388534_lk, &((*(_self_))._field_r));;
		};
		return ((*(_388544_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_1b2d7e65b_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1b2d64e05_intAssignable((*(_388534_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_388534_lk)) == (*(_388544_rk)));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da5a4a_shift(_1b2da1bcd_binaryEval* _self_) {
	jule::Ptr<_1b2db9740_Prim> _39133_lk = _1b2db3ccd_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((_39133_lk == nullptr)) {
		_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2db9740_Prim> _39183_rk = _1b2db3ccd_Prim((*((*(_self_))._field_r))._field_Kind);;
	if ((_39183_rk == nullptr)) {
		_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1b2c7572d_IsNum((*(_39133_lk))._field_Kind))) || (!(_1b2c7572d_IsNum((*(_39183_rk))._field_Kind))))) {
		_1b2d0e311_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1b2c75156_IsInt((*(_39133_lk))._field_Kind)))) {
		if (((!(_1b2d7e65b_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39133_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39183_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1b2d64e05_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1b2bc4c32_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1b2bc445c_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1b2e93d47_primI64;
		} else if (_1b2d64e05_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1b2bc4eda_SetU64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1b2bc46e3_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1b2e94b4a_primU64;
		};
	};
	if ((!(_1b2c75156_IsInt((*(_39183_rk))._field_Kind)))) {
		if (((!(_1b2d7e65b_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39133_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39183_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1b2d64e05_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1b2bc4c32_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1b2bc445c_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1b2e93d47_primI64;
		} else if (_1b2d64e05_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1b2bc4eda_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), _1b2bc46e3_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1b2e94b4a_primU64;
		};
	};
	if ((!(_1b2da960e_isOkForShifting(&((*(_self_))._field_r))))) {
		_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da5cd1_evalFloat(_1b2da1bcd_binaryEval* _self_) {
	jule::Str _39683_lk = (*(_1b2db3ccd_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39693_rk = (*(_1b2db3ccd_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1b2da57b4_numbersAreCompatibile(_self_, &(_39683_lk), &(_39693_rk))))) {
		_1b2d0e311_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b742701d:;
			{
				_1b2da4e12_setTypeToGreater(_self_);
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		_match_end_1b7426e96:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b74289e2:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:3993:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b742988e:;
			{
				_1b2da4e12_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b7429905:;
			{
				_1b2da4e12_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b7427e64:;
			{
				if ((!(_1b2c75156_IsInt(_39693_rk)))) {
					_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_39683_lk, &__jule_any_type5); (*it++) = jule::Any(_39693_rk, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1b2da53b8_mod(_self_);
				_1b2da4e12_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1b742710b:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b7427ded:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da6067_evalInt(_1b2da1bcd_binaryEval* _self_) {
	jule::Str _40173_lk = (*(_1b2db3ccd_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40183_rk = (*(_1b2db3ccd_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1b2da57b4_numbersAreCompatibile(_self_, &(_40173_lk), &(_40183_rk))))) {
		_1b2d0e311_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b7430730:;
			{
				return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e928c3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
			}
		}
		_match_end_1b74306a8:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b7432017:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4042:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b7432db4:;
			{
				_1b2da4e12_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b7432e2a:;
			{
				_1b2da4e12_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b7431610:;
			{
				_1b2da53b8_mod(_self_);
				_1b2da4e12_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b743081d:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b7431aa5:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da62ed_evalPrim(_1b2da1bcd_binaryEval* _self_) {
	jule::Ptr<_1b2db9740_Prim> _40653_prim = _1b2db3ccd_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1b2dbc974_IsBool(_40653_prim.ptr())) {
			_case_begin_1b74361d6:;
			{
				return _1b2da497d_evalBool(_self_);;
			}
		}
		else if (_1b2dbcc0a_IsStr(_40653_prim.ptr())) {
			_case_begin_1b7436280:;
			{
				return _1b2da4c14_evalStr(_self_);;
			}
		}
		_match_end_1b743614d:;
	};
	if ((_1b2db3ccd_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db9ab4_Str(_40653_prim.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1b2c75497_IsFloat((*_40653_prim.alloc)._field_Kind)) {
			_case_begin_1b743900d:;
			{
				return _1b2da5cd1_evalFloat(_self_);;
			}
		}
		else if (_1b2c75156_IsInt((*_40653_prim.alloc)._field_Kind)) {
			_case_begin_1b7439096:;
			{
				return _1b2da6067_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1b7438e97:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74373c4:;
	};
}



inline jule::Bool _1b2da6584_checkSpecialCases(_1b2da1bcd_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _40903_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));;
	if ((!(_40903_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1b2db2c77_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1b2db275a_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1b2db2c77_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1b2db275a_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da681a_evalOp(_1b2da1bcd_binaryEval* _self_) {
	jule::Bool _41053_ok = _1b2da6584_checkSpecialCases(_self_);;
	if ((!(_41053_ok))) {
		return nullptr;;
	};
	if ((_1b2db5351_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
		return _1b2da41ca_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(57LLU)))) {
		return _1b2da5a4a_shift(_self_);;
	};
	{
		
		if (_1b2db29e1_Void((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1b744317c:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1b2db7694_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b7443336:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b74431e3;
			}
		}
		else if ((_1b2db7694_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b74431e3:;
			{
				return _1b2da2ddd_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1b2db3ccd_Prim((*((*(_self_))._field_r))._field_Kind) != nullptr) && _1b2dbce91_IsAny(_1b2db3ccd_Prim((*((*(_self_))._field_r))._field_Kind).ptr()))) {
			_case_begin_1b7443259:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b74447cc;
			}
		}
		else if (_1b2db275a_IsNil((*((*(_self_))._field_r))._field_Kind)) {
			_case_begin_1b74447cc:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b7444843;
			}
		}
		else if (_1b2db275a_IsNil((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1b7444843:;
			{
				return _1b2da3174_evalNil(_self_);;
			}
		}
		else if (((_1b2db3ccd_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr) && _1b2dbce91_IsAny(_1b2db3ccd_Prim((*((*(_self_))._field_l))._field_Kind).ptr()))) {
			_case_begin_1b7444942:;
			{
				return _1b2da46e7_evalAny(_self_);;
			}
		}
		else if ((_1b2db4817_TypeEnum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b74449a8:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b7444a1e;
			}
		}
		else if ((_1b2db4817_TypeEnum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b7444a1e:;
			{
				return _1b2da3691_evalTypeEnum(_self_);;
			}
		}
		else if ((_1b2db4581_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b7444a85:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b7444aeb;
			}
		}
		else if ((_1b2db4581_Enum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b7444aeb:;
			{
				return _1b2da340a_evalEnum(_self_);;
			}
		}
		else if ((_1b2db4064_Sptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b7444b62:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b7444bc8;
			}
		}
		else if ((_1b2db4064_Sptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b7444bc8:;
			{
				return _1b2da3927_evalSptr(_self_);;
			}
		}
		else if ((_1b2db42ea_Ptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b7444c3e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b7444ca5;
			}
		}
		else if ((_1b2db42ea_Ptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b7444ca5:;
			{
				return _1b2da3bad_evalPtr(_self_);;
			}
		}
		else if ((_1b2db4a9d_Arr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b7444d1b:;
			{
				return _1b2da3e44_evalArr(_self_);;
			}
		}
		else if ((_1b2db55d7_Trait((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b7444dd7:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b7444e4d;
			}
		}
		else if ((_1b2db55d7_Trait((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b7444e4d:;
			{
				return _1b2da4461_evalTrait(_self_);;
			}
		}
		else if ((_1b2db3ccd_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b7444eb4:;
			{
				return _1b2da62ed_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1b7442ea1:;
			{
				_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b7442544:;
	};
}



inline void _1b2da6ac3_evalConst(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _417530_d) {
	{
		
		if (((*(_417530_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1b7456a0e:;
			{
				return;;
			}
		}
		else if ((!(_1b2d7e65b_IsConst((*(_self_))._field_l.ptr()))) || (!(_1b2d7e65b_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1b74570b4:;
			{
				(*((*(_417530_d))))._field_Constant=nullptr;
				(*((*(_417530_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1b74568ee:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b7457191:;
			{
				(*((*(_417530_d))))._field_Constant=static__1b2bc278a_NewBool(_1b2bc786c_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b74595e4:;
			{
				(*((*(_417530_d))))._field_Constant=static__1b2bc278a_NewBool((!(_1b2bc786c_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b745965a:;
			{
				(*((*(_417530_d))))._field_Constant=static__1b2bc278a_NewBool(_1b2bc752b_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b74596c1:;
			{
				(*((*(_417530_d))))._field_Constant=static__1b2bc278a_NewBool(_1b2bc71da_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b7459737:;
			{
				(*((*(_417530_d))))._field_Constant=static__1b2bc278a_NewBool(_1b2bc8340_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1b74597ae:;
			{
				(*((*(_417530_d))))._field_Constant=static__1b2bc278a_NewBool(_1b2bc7bad_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b7459836:;
			{
				(*((*(_417530_d))))._field_Constant=static__1b2bc278a_NewBool(_1b2bc8681_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b74598ad:;
			{
				(*((*(_417530_d))))._field_Constant=static__1b2bc278a_NewBool(_1b2bc7eee_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b7459935:;
			{
				_1b2bc89c2_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b74599ac:;
			{
				_1b2bc8d13_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b7459a34:;
			{
				_1b2bc9154_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b7459aab:;
			{
				jule::Bool _42154_ok = _1b2bc9495_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42154_ok)) && (_1b2bc4979_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1b2db9740_Prim> _42208_prim = _1b2db3ccd_Prim((*((*(_417530_d))))._field_Kind.ptr());;
				{
					
					if (_1b2c74a7e_IsSigInt((*(_42208_prim))._field_Kind)) {
						_case_begin_1b746abbb:;
						{
							_1b2bc4c32_SetI64((*((*(_417530_d))))._field_Constant, _1b2bc445c_AsI64((*((*(_417530_d))))._field_Constant));
						}
					}
					else if (_1b2c74d8c_IsUnsigInt((*(_42208_prim))._field_Kind)) {
						_case_begin_1b746ac65:;
						{
							_1b2bc4eda_SetU64((*((*(_417530_d))))._field_Constant, _1b2bc46e3_AsU64((*((*(_417530_d))))._field_Constant));
						}
					}
					_match_end_1b746ab44:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b7459b33:;
			{
				jule::Bool _42284_ok = _1b2bc97d6_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42284_ok)) && (_1b2bc4979_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1b7459baa:;
			{
				_1b2bc9e68_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b7459c32:;
			{
				_1b2bc9b27_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b7459ca9:;
			{
				_1b2bca2a9_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b7459d31:;
			{
				_1b2bca5ea_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b7459da8:;
			{
				_1b2bca93b_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1b74588ce:;
	};
	(*((*(_417530_d))))._field_Model=jule::Any((*((*(_417530_d))))._field_Constant, &__jule_any_type15);
	_1b2daba0c_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _417530_d, _1b2db4581_Enum((*((*(_417530_d))))._field_Kind.ptr()), &((*(_self_))._field_op), _1b2d83ece_getOwnerRefers((*(_self_))._field_e));
}



inline void _1b2da6d7b_checkData(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _425330_d) {
	jule::Ptr<_1b2bdda70_FnIns> _42543_f = _1b2db50ba_Fn((*((*(_425330_d))))._field_Kind.ptr());;
	if ((((_42543_f != nullptr) && ((*_42543_f.alloc)._field_Decl != nullptr)) && _1b2bdb1ee_IsMethod((*(_42543_f))._field_Decl))) {
		_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1b2da7079_checkDatas(_1b2da1bcd_binaryEval* _self_) {
	_1b2da6d7b_checkData(_self_, &((*(_self_))._field_l));
	_1b2da6d7b_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1b2da7332_setModel(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _426529_d) {
	if (_1b2d7e65b_IsConst((*(_426529_d)).ptr())) {
		if (((_1b2d7e65b_IsConst((*(_self_))._field_l.ptr()) && _1b2d7e65b_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1b2d7dc21_Data> _42767_l;
	jule::Ptr<_1b2d7dc21_Data> _427614_r;
	({
		jule::Ptr<_1b2d7dc21_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1b2d7dc21_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_42767_l = ___jule_assign_arg;
		_427614_r = _1___jule_assign_arg;
	});
	if ((!(_1b2d7e99c_GoodOperand(_42767_l, &(_427614_r))))) {
		std::swap(_42767_l, _427614_r);
	};
	(*((*(_426529_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bcd620_BinaryExprModel>(_1b2bcd620_BinaryExprModel{._field_Left=jule::new_ptr<_1b2bcd125_OperandExprModel>(_1b2bcd125_OperandExprModel{._field_Kind=(*_42767_l.alloc)._field_Kind, ._field_Model=(*_42767_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1b2bcd125_OperandExprModel>(_1b2bcd125_OperandExprModel{._field_Kind=(*_427614_r.alloc)._field_Kind, ._field_Model=(*_427614_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type113);
}



inline void _1b2da75da_postEval(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _429429_d) {
	(*((*(_429429_d))))._field_Lvalue=false;
	_1b2da7332_setModel(_self_, _429429_d);
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da79d6_solveExplicit(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2d7dc21_Data>* _429934_l, jule::Ptr<_1b2d7dc21_Data>* _429949_r) {
	({
		jule::Ptr<_1b2d7dc21_Data> ___jule_assign_arg = (*(_429934_l));
		jule::Ptr<_1b2d7dc21_Data> _1___jule_assign_arg = (*(_429949_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1b2da7079_checkDatas(_self_);
	jule::Ptr<_1b2d7dc21_Data> _43047_d = _1b2da681a_evalOp(_self_);;
	({
		jule::Ptr<_1b2d7dc21_Data> ___jule_assign_arg = (*(_429934_l));
		jule::Ptr<_1b2d7dc21_Data> _1___jule_assign_arg = (*(_429949_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1b2da6ac3_evalConst(_self_, &(_43047_d));
	if ((_43047_d != nullptr)) {
		(*_43047_d.alloc)._field_Mutable=true;
		_1b2da75da_postEval(_self_, &(_43047_d));
	};
	return _43047_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2da7d27_eval(_1b2da1bcd_binaryEval* _self_, jule::Ptr<_1b2ae5cda_BinaryExpr>* _431925_op) {
	if (((*((*((*(_431925_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1b2d80ecb_pushErr((*(_self_))._field_e.ptr(), (*((*(_431925_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1b2d8133e_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2d7dc21_Data> _43267_l = _1b2d9e46c_evalExpr1((*(_self_))._field_e, (*((*(_431925_op))))._field_Left);;
	if (((_43267_l == nullptr) || ((*(_43267_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1b2db1627_TypeKind> _43317_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43267_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43317_prefix;
	});;
	jule::Ptr<_1b2d7dc21_Data> _43347_r = _1b2d9e46c_evalExpr1((*(_self_))._field_e, (*((*(_431925_op))))._field_Right);;
	if (((_43347_r == nullptr) || ((*(_43347_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_431925_op))))._field_Op;
	jule::Ptr<_1b2d7dc21_Data> _43417_d = _1b2da79d6_solveExplicit(_self_, &(_43267_l), &(_43347_r));;
	if ((((_43417_d != nullptr) && (*(_43267_l))._field_IsRune) && (*(_43347_r))._field_IsRune)) {
		(*_43417_d.alloc)._field_IsRune=true;
	};
	return _43417_d;;
}
















inline jule::Bool _1b2db1627_TypeKind_eq(_1b2db1627_TypeKind *_self_, _1b2db1627_TypeKind _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1b2db1a23_Str(_1b2db1627_TypeKind* _self_) {
	if (_1b2db275a_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_20d8ca601_Builder _567_kind = static__20d8cb1c3_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_20d8d4ac2_WriteStr(&_567_kind, jule::Str::lit("...", 3));
	};
	if (_1b2db24c4_Binded(_self_)) {
		_20d8d4ac2_WriteStr(&_567_kind, jule::Str::lit("cpp.", 4));
		_20d8d4ac2_WriteStr(&_567_kind, (*(_self_))._field_BindIdent);
	} else {
		_20d8d4ac2_WriteStr(&_567_kind, ((_1b2db1171_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1b2db0bcb_Str((*(_self_))._field_Kind.data));
	};
	return _20d8d53b9_Str(&_567_kind);;
}



inline jule::Bool _1b2db1d64_Equal(jule::Ptr<_1b2db1627_TypeKind> _self_, jule::Ptr<_1b2db1627_TypeKind> _7218_other) {
	if (_1b2db275a_IsNil(_self_.ptr())) {
		return _1b2db275a_IsNil(_7218_other.ptr());;
	};
	if (_1b2db24c4_Binded(_self_)) {
		return (_1b2db24c4_Binded(_7218_other) && ((*_self_.alloc)._field_BindIdent == (*_7218_other.alloc)._field_BindIdent));;
	};
	return ((_1b2db1171_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1b2db101c_Equal((*_self_.alloc)._field_Kind.data, _7218_other);;
}



inline jule::Bool _1b2db24c4_Binded(_1b2db1627_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1b2db275a_IsNil(_1b2db1627_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1b2db29e1_Void(_1b2db1627_TypeKind* _self_) {
	jule::Ptr<_1b2db9740_Prim> _923_prim = _1b2db3ccd_Prim(_self_);;
	return ((_923_prim != nullptr) && (*(_923_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1b2db2c77_Comparable(_1b2db1627_TypeKind* _self_) {
	{
		_1b2db1627_TypeKind* _998__self = _self_;;
		if ((_1b2db5351_Struct(_998__self) != nullptr)) {
			return (*(_1b2db5351_Struct(_998__self)))._field_Comparable;;
		};
		if ((_1b2db4a9d_Arr(_998__self) != nullptr)) {
			return _1b2db2c77_Comparable((*(_1b2db4a9d_Arr(_998__self)))._field_Elem.ptr());;
		};
		return (((_1b2db586d_Map(_998__self) == nullptr) && (_1b2db4d34_Slc(_998__self) == nullptr)) && (_1b2db50ba_Fn(_998__self) == nullptr));;
	};
}



inline jule::Bool _1b2db300d_Mutable(_1b2db1627_TypeKind* _self_) {
	{
		_1b2db1627_TypeKind* _1138__self = _self_;;
		if ((_1b2db5351_Struct(_1138__self) != nullptr)) {
			return (*(_1b2db5351_Struct(_1138__self)))._field_Mutable;;
		};
		if ((_1b2db55d7_Trait(_1138__self) != nullptr)) {
			return true;;
		};
		if ((_1b2db3ccd_Prim(_1138__self) != nullptr)) {
			jule::Ptr<_1b2db9740_Prim> _1215_p = _1b2db3ccd_Prim(_1138__self);;
			return _1b2dbce91_IsAny(_1215_p.ptr());;
		};
		if ((_1b2db4a9d_Arr(_1138__self) != nullptr)) {
			return _1b2db300d_Mutable((*(_1b2db4a9d_Arr(_1138__self)))._field_Elem.ptr());;
		};
		return (((_1b2db4d34_Slc(_1138__self) != nullptr) || (_1b2db42ea_Ptr(_1138__self) != nullptr)) || (_1b2db4064_Sptr(_1138__self) != nullptr));;
	};
}



inline jule::Bool _1b2db3294_Ordered(_1b2db1627_TypeKind* _self_) {
	{
		_1b2db1627_TypeKind* _1368__self = _self_;;
		jule::Ptr<_1b2db9740_Prim> _1374_prim = _1b2db3ccd_Prim(_1368__self);;
		if ((_1374_prim != nullptr)) {
			return (_1b2c7572d_IsNum((*_1374_prim.alloc)._field_Kind) || _1b2dbcc0a_IsStr(_1374_prim));;
		};
		if ((_1b2db42ea_Ptr(_1368__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1b2b119c6_StructIns> _1444_s = _1b2db5351_Struct(_1368__self);;
		if ((_1444_s != nullptr)) {
			return (((((*_1444_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1444_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1b2be887c_Enum> _1514_enm = _1b2db4581_Enum(_1368__self);;
		if ((_1514_enm != nullptr)) {
			return _1b2c7572d_IsNum(_1b2db1a23_Str((*((*_1514_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1b2db352a_NilCompatible(_1b2db1627_TypeKind* _self_) {
	{
		_1b2db1627_TypeKind* _1628__self = _self_;;
		jule::Ptr<_1b2db9740_Prim> _1644_prim = _1b2db3ccd_Prim(_1628__self);;
		if (((_1644_prim != nullptr) && _1b2dbce91_IsAny(_1644_prim))) {
			return true;;
		};
		return (((((((_1b2db275a_IsNil(_1628__self) || (_1b2db50ba_Fn(_1628__self) != nullptr)) || (_1b2db4064_Sptr(_1628__self) != nullptr)) || (_1b2db42ea_Ptr(_1628__self) != nullptr)) || (_1b2db55d7_Trait(_1628__self) != nullptr)) || (_1b2db4d34_Slc(_1628__self) != nullptr)) || (_1b2db586d_Map(_1628__self) != nullptr)) || (_1b2db4817_TypeEnum(_1628__self) != nullptr));;
	};
}



inline jule::Bool _1b2db37b1_GC(_1b2db1627_TypeKind* _self_) {
	{
		_1b2db1627_TypeKind* _1838__self = _self_;;
		jule::Ptr<_1b2db9740_Prim> _1844_prim = _1b2db3ccd_Prim(_1838__self);;
		if ((_1844_prim != nullptr)) {
			return (_1b2dbce91_IsAny(_1844_prim) || _1b2dbcc0a_IsStr(_1844_prim));;
		};
		return ((((_1b2db4064_Sptr(_1838__self) != nullptr) || (_1b2db4d34_Slc(_1838__self) != nullptr)) || (_1b2db55d7_Trait(_1838__self) != nullptr)) || (_1b2db4817_TypeEnum(_1838__self) != nullptr));;
	};
}



inline jule::Bool _1b2db3a47_Variadicable(_1b2db1627_TypeKind* _self_) {
	{
		_1b2db1627_TypeKind* _1968__self = _self_;;
		return (_1b2db4d34_Slc(_1968__self) != nullptr);;
	};
}



inline jule::Ptr<_1b2db9740_Prim> _1b2db3ccd_Prim(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)) {
			_case_begin_1b74a3cc0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2db9740_Prim>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1b74bd108:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74bd092:;
	};
}



inline jule::Ptr<_1b2dbd26b_Sptr> _1b2db4064_Sptr(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data23)) {
			_case_begin_1b74bdc96:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2dbd26b_Sptr>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1b74bdee9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74bde83:;
	};
}



inline jule::Ptr<_1b2dc1a33_Ptr> _1b2db42ea_Ptr(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data28)) {
			_case_begin_1b74bea00:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2dc1a33_Ptr>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1b74bec53:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74bebdc:;
	};
}



inline jule::Ptr<_1b2be887c_Enum> _1b2db4581_Enum(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data3)) {
			_case_begin_1b74c0759:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2be887c_Enum>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1b74c09ac:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74c0946:;
	};
}



inline jule::Ptr<_1b2bea087_TypeEnum> _1b2db4817_TypeEnum(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data4)) {
			_case_begin_1b74c14b3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2bea087_TypeEnum>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1b74c1716:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74c16a0:;
	};
}



inline jule::Ptr<_1b2dc1060_Arr> _1b2db4a9d_Arr(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data27)) {
			_case_begin_1b74c221c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2dc1060_Arr>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1b74c2470:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74c2409:;
	};
}



inline jule::Ptr<_1b2dbdc3e_Slc> _1b2db4d34_Slc(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data24)) {
			_case_begin_1b74c2e76:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2dbdc3e_Slc>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1b74c31c9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74c3163:;
	};
}



inline jule::Ptr<_1b2bdda70_FnIns> _1b2db50ba_Fn(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1)) {
			_case_begin_1b74c3bd0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2bdda70_FnIns>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1b74c3e33:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74c3dbc:;
	};
}



inline jule::Ptr<_1b2b119c6_StructIns> _1b2db5351_Struct(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)) {
			_case_begin_1b74c4939:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2b119c6_StructIns>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1b74c4b8c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74c4b26:;
	};
}



inline jule::Ptr<_1b2be61c6_Trait> _1b2db55d7_Trait(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data2)) {
			_case_begin_1b74c5693:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2be61c6_Trait>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1b74c58e6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74c5880:;
	};
}



inline jule::Ptr<_1b2dc03d3_Map> _1b2db586d_Map(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data26)) {
			_case_begin_1b74c63ec:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2dc03d3_Map>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1b74c6650:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74c65d9:;
	};
}



inline jule::Ptr<_1b2dbe833_Tuple> _1b2db5b04_Tup(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data25)) {
			_case_begin_1b74c7156:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2dbe833_Tuple>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1b74c73a9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74c7343:;
	};
}



inline jule::Bool _1b2db5d8a_comptime(_1b2db1627_TypeKind* _self_) {
	return (((((((((((((((_1b2db740d_comptimeTypeInfos(_self_) != nullptr) || (_1b2db7694_comptimeTypeInfo(_self_) != nullptr)) || (_1b2db6121_comptimeStructFields(_self_) != nullptr)) || (_1b2db63a7_comptimeStructField(_self_) != nullptr)) || (_1b2db663d_comptimeEnumFields(_self_) != nullptr)) || (_1b2db68c4_comptimeEnumField(_self_) != nullptr)) || (_1b2db792a_comptimeStatics(_self_) != nullptr)) || (_1b2db7bb1_comptimeStatic(_self_) != nullptr)) || (_1b2db6b5a_comptimeParams(_self_) != nullptr)) || (_1b2db6de1_comptimeParam(_self_) != nullptr)) || (_1b2db7e47_comptimeValue(_self_) != nullptr)) || (_1b2db8981_comptimeFiles(_self_) != nullptr)) || (_1b2db86ea_comptimeFile(_self_) != nullptr)) || (_1b2db81cd_comptimeDecl(_self_) != nullptr)) || (_1b2db8464_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1b2c78ea1_comptimeStructFields> _1b2db6121_comptimeStructFields(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data7)) {
			_case_begin_1b74c809c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c78ea1_comptimeStructFields>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1b74cc16c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74cc106:;
	};
}



inline jule::Ptr<_1b2c7770d_comptimeStructField> _1b2db63a7_comptimeStructField(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data6)) {
			_case_begin_1b74cc7bb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c7770d_comptimeStructField>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1b74cca1e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74cc9a8:;
	};
}



inline jule::Ptr<_1b2c7ee63_comptimeEnumFields> _1b2db663d_comptimeEnumFields(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data11)) {
			_case_begin_1b74cd525:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c7ee63_comptimeEnumFields>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1b74cd778:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74cd712:;
	};
}



inline jule::Ptr<_1b2c7db54_comptimeEnumField> _1b2db68c4_comptimeEnumField(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data10)) {
			_case_begin_1b74ce27e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c7db54_comptimeEnumField>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1b74ce4d2:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74ce46b:;
	};
}



inline jule::Ptr<_1b2c837c4_comptimeParams> _1b2db6b5a_comptimeParams(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data13)) {
			_case_begin_1b74ceed8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c837c4_comptimeParams>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1b74d023b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d01c5:;
	};
}



inline jule::Ptr<_1b2c8196a_comptimeParam> _1b2db6de1_comptimeParam(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data12)) {
			_case_begin_1b74d0c42:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c8196a_comptimeParam>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1b74d0e95:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d0e2e:;
	};
}



inline jule::Ptr<_1b2c76ba2_comptimeRange> _1b2db7177_comptimeRange(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data5)) {
			_case_begin_1b74d199b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c76ba2_comptimeRange>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1b74d1bee:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d1b88:;
	};
}



inline jule::Ptr<_1b2c85133_comptimeTypeInfos> _1b2db740d_comptimeTypeInfos(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data14)) {
			_case_begin_1b74d2705:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c85133_comptimeTypeInfos>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1b74d2958:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d28e2:;
	};
}



inline jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _1b2db7694_comptimeTypeInfo(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data15)) {
			_case_begin_1b74d345e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c86aa2_comptimeTypeInfo>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1b74d36b2:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d364b:;
	};
}



inline jule::Ptr<_1b2c7c1d5_comptimeStatics> _1b2db792a_comptimeStatics(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data9)) {
			_case_begin_1b74d41b8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c7c1d5_comptimeStatics>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1b74d441b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d43a5:;
	};
}



inline jule::Ptr<_1b2c7a931_comptimeStatic> _1b2db7bb1_comptimeStatic(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data8)) {
			_case_begin_1b74d4e22:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c7a931_comptimeStatic>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1b74d5175:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d510e:;
	};
}



inline jule::Ptr<_1b2c8cba7_comptimeValue> _1b2db7e47_comptimeValue(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data16)) {
			_case_begin_1b74d5b7b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c8cba7_comptimeValue>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1b74d5dce:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d5d68:;
	};
}



inline jule::Ptr<_1b2c96298_comptimeDecl> _1b2db81cd_comptimeDecl(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data20)) {
			_case_begin_1b74d68d5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c96298_comptimeDecl>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1b74d6b38:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d6ac2:;
	};
}



inline jule::Ptr<_1b2c93eaa_comptimeDecls> _1b2db8464_comptimeDecls(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data19)) {
			_case_begin_1b74d763e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c93eaa_comptimeDecls>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1b74d7892:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d782b:;
	};
}



inline jule::Ptr<_1b2c92382_comptimeFile> _1b2db86ea_comptimeFile(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data18)) {
			_case_begin_1b74d8398:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c92382_comptimeFile>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1b74d85eb:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d8585:;
	};
}



inline jule::Ptr<_1b2c90913_comptimeFiles> _1b2db8981_comptimeFiles(_1b2db1627_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data17)) {
			_case_begin_1b74d9102:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b2c90913_comptimeFiles>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1b74d9355:;
			{
				return nullptr;;
			}
		}
		_match_end_1b74d92de:;
	};
}








inline jule::Bool _1b2db8d38_TypeSymbol_eq(_1b2db8d38_TypeSymbol *_self_, _1b2db8d38_TypeSymbol _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Bool _1b2db91e0_checked(_1b2db8d38_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}








inline jule::Bool _1b2db9740_Prim_eq(_1b2db9740_Prim *_self_, _1b2db9740_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1b2db9ab4_Str(_1b2db9740_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1b2db9e05_Equal(jule::Ptr<_1b2db9740_Prim> _self_, jule::Ptr<_1b2db1627_TypeKind> _51418_other) {
	jule::Ptr<_1b2db9740_Prim> _5153_prim = _1b2db3ccd_Prim(_51418_other.ptr());;
	if ((_5153_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5153_prim))._field_Kind);;
}



inline jule::Bool _1b2dba39a_IsConstraint(_1b2db9740_Prim* _self_) {
	return ((((!(_1b2dbcc0a_IsStr(_self_))) && (!(_1b2dbce91_IsAny(_self_)))) && (!(_1b2dbc974_IsBool(_self_)))) && (!(_1b2c7572d_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1b2dba631_IsI8(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1b2dba8b7_IsI16(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1b2dbab4d_IsI32(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1b2dbadd4_IsI64(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1b2dbb16a_IsU8(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1b2dbb401_IsU16(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1b2dbb687_IsU32(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1b2dbb91d_IsU64(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1b2dbbba4_IsF32(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1b2dbbe3a_IsF64(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1b2dbc1c1_IsInt(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1b2dbc457_IsUint(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1b2dbc6dd_IsUintptr(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1b2dbc974_IsBool(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1b2dbcc0a_IsStr(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1b2dbce91_IsAny(_1b2db9740_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1b2dbd26b_Sptr_eq(_1b2dbd26b_Sptr *_self_, _1b2dbd26b_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1b2dbd623_Str(_1b2dbd26b_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1b2db1a23_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b2dbd964_Equal(jule::Ptr<_1b2dbd26b_Sptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _59118_other) {
	jule::Ptr<_1b2dbd26b_Sptr> _5923_sptr = _1b2db4064_Sptr(_59118_other.ptr());;
	if ((_5923_sptr == nullptr)) {
		return false;;
	};
	return _1b2db1d64_Equal((*(_self_))._field_Elem, (*(_5923_sptr))._field_Elem);;
}








inline jule::Bool _1b2dbdc3e_Slc_eq(_1b2dbdc3e_Slc *_self_, _1b2dbdc3e_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1b2dbe206_Str(_1b2dbdc3e_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1b2db1a23_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b2dbe547_Equal(jule::Ptr<_1b2dbdc3e_Slc> _self_, jule::Ptr<_1b2db1627_TypeKind> _61018_other) {
	jule::Ptr<_1b2dbdc3e_Slc> _6113_slc = _1b2db4d34_Slc(_61018_other.ptr());;
	if ((_6113_slc == nullptr)) {
		return false;;
	};
	return _1b2db1d64_Equal((*(_self_))._field_Elem, (*(_6113_slc))._field_Elem);;
}







inline jule::Str _1b2dbebda_Str(_1b2dbe833_Tuple* _self_) {
	_20d8ca601_Builder _6277_s = static__20d8cb1c3_New(16LL);;
	_20d8d4d7a_WriteByte(&_6277_s, '(');
	_20d8d4ac2_WriteStr(&_6277_s, _1b2db1a23_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b74ea630:;
		if (it != expr_end) {
			jule::Ptr<_1b2db1627_TypeKind> *_63010_t = it;
			{
				_20d8d4d7a_WriteByte(&_6277_s, ',');
				_20d8d4ac2_WriteStr(&_6277_s, _1b2db1a23_Str((*(_63010_t)).ptr()));
			}
			_iter_next_1b74ea630:;
			++it;
			goto _iter_begin_1b74ea630;
		}
		_iter_end_1b74ea630:;
	};
	_20d8d4d7a_WriteByte(&_6277_s, ')');
	return _20d8d53b9_Str(&_6277_s);;
}



inline jule::Bool _1b2dc002b_Equal(jule::Ptr<_1b2dbe833_Tuple> _self_, jule::Ptr<_1b2db1627_TypeKind> _63918_other) {
	jule::Ptr<_1b2dbe833_Tuple> _6403_tup = _1b2db5b04_Tup(_63918_other.ptr());;
	if ((_6403_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6403_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6477_i = 0LL;;
	for (; (_6477_i < (*_self_.alloc)._field_Types.len()); (_6477_i)++) {
		{
			if ((!(_1b2db1d64_Equal((*(_self_))._field_Types[_6477_i], (*(_6403_tup))._field_Types[_6477_i])))) {
				return false;;
			};
		}
	_iter_next_1b74ed5cd:;
	}
	_iter_end_1b74ed5cd:;;
	return true;;
}








inline jule::Bool _1b2dc03d3_Map_eq(_1b2dc03d3_Map *_self_, _1b2dc03d3_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1b2dc078a_Str(_1b2dc03d3_Map* _self_) {
	_20d8ca601_Builder _6677_s = static__20d8cb1c3_New(16LL);;
	_20d8d4ac2_WriteStr(&_6677_s, jule::Str::lit("map[", 4));
	_20d8d4ac2_WriteStr(&_6677_s, _1b2db1a23_Str((*(_self_))._field_Key.ptr()));
	_20d8d4d7a_WriteByte(&_6677_s, ']');
	_20d8d4ac2_WriteStr(&_6677_s, _1b2db1a23_Str((*(_self_))._field_Val.ptr()));
	return _20d8d53b9_Str(&_6677_s);;
}



inline jule::Bool _1b2dc0acb_Equal(jule::Ptr<_1b2dc03d3_Map> _self_, jule::Ptr<_1b2db1627_TypeKind> _67618_other) {
	jule::Ptr<_1b2dc03d3_Map> _6773_m = _1b2db586d_Map(_67618_other.ptr());;
	if ((_6773_m == nullptr)) {
		return false;;
	};
	return (_1b2db1d64_Equal((*(_self_))._field_Key, (*(_6773_m))._field_Key) && _1b2db1d64_Equal((*_self_.alloc)._field_Val, (*(_6773_m))._field_Val));;
}








inline jule::Bool _1b2dc1060_Arr_eq(_1b2dc1060_Arr *_self_, _1b2dc1060_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1b2dc1417_Str(_1b2dc1060_Arr* _self_) {
	_20d8ca601_Builder _6957_s = static__20d8cb1c3_New(16LL);;
	_20d8d4d7a_WriteByte(&_6957_s, '[');
	_20d8d4ac2_WriteStr(&_6957_s, _1cab29113_Itoa((*(_self_))._field_N));
	_20d8d4d7a_WriteByte(&_6957_s, ']');
	_20d8d4ac2_WriteStr(&_6957_s, _1b2db1a23_Str((*(_self_))._field_Elem.ptr()));
	return _20d8d53b9_Str(&_6957_s);;
}



inline jule::Bool _1b2dc1758_Equal(jule::Ptr<_1b2dc1060_Arr> _self_, jule::Ptr<_1b2db1627_TypeKind> _70418_other) {
	jule::Ptr<_1b2dc1060_Arr> _7053_arr = _1b2db4a9d_Arr(_70418_other.ptr());;
	if ((_7053_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7053_arr))._field_N) && _1b2db1d64_Equal((*_self_.alloc)._field_Elem, (*(_7053_arr))._field_Elem));;
}








inline jule::Bool _1b2dc1a33_Ptr_eq(_1b2dc1a33_Ptr *_self_, _1b2dc1a33_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1b2dc1dda_Str(_1b2dc1a33_Ptr* _self_) {
	if (_1b2dc25a0_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1b2db1a23_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b2dc222b_Equal(jule::Ptr<_1b2dc1a33_Ptr> _self_, jule::Ptr<_1b2db1627_TypeKind> _72818_other) {
	jule::Ptr<_1b2dc1a33_Ptr> _7293_ptr = _1b2db42ea_Ptr(_72818_other.ptr());;
	{
		
		if ((_7293_ptr == nullptr)) {
			_case_begin_1b75096c7:;
			{
				return false;;
			}
		}
		else if (_1b2dc25a0_IsUnsafe(_self_.ptr())) {
			_case_begin_1b7509078:;
			{
				return _1b2dc25a0_IsUnsafe(_7293_ptr.ptr());;
			}
		}
		else if (_1b2dc25a0_IsUnsafe(_7293_ptr.ptr())) {
			_case_begin_1b75090de:;
			{
				return _1b2dc25a0_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1b7508b05:;
			{
				return _1b2db1d64_Equal((*(_self_))._field_Elem, (*(_7293_ptr))._field_Elem);;
			}
		}
		_match_end_1b7508a7d:;
	};
}



inline jule::Bool _1b2dc25a0_IsUnsafe(_1b2dc1a33_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1b2dc2a34_referencer_eq(_1b2dc2a34_referencer *_self_, _1b2dc2a34_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1b2dc42a5_pushErr(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ac7eba_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args) {
	_1b2d05e95_pushErr((*(_self_))._field_s.ptr(), _82023_token, _82045_fmt, _82065_args);
}



inline void _1b2dc44a3_allowBuiltin(_1b2dc3a24_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1b2dc46a1_disallowBuiltin(_1b2dc3a24_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1b750e0d3_pushReference(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2b119c6_StructIns>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b717562e_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1b2cc3c10_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type64));
}

inline void _1b7511aa8_pushReference(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2be61c6_Trait>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b75137ad_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1b2cc3c10_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type11));
}



inline void _1b2dc4c12_pushReferenceByKind(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2db1627_TypeKind>* _84240_k) {
	{
		
		if ((_1b2db5351_Struct((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1b750cbe7:;
			{
				jule::Ptr<_1b2b119c6_StructIns> _8458_t = _1b2db5351_Struct((*(_84240_k)).ptr());;
				_1b750e0d3_pushReference(_self_, &(_8458_t));
			}
		}
		else if ((_1b2db55d7_Trait((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1b750cc91:;
			{
				jule::Ptr<_1b2be61c6_Trait> _8488_t = _1b2db55d7_Trait((*(_84240_k)).ptr());;
				_1b7511aa8_pushReference(_self_, &(_8488_t));
			}
		}
		_match_end_1b750cac6:;
	};
}



inline void _1b2dc5130_pushCycleError(_1b2dc3a24_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _20d8ca601_Builder* _85353_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8553_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1b7515b78, nullptr, nullptr);;
	jule::Str _8653_m = _20d8d53b9_Str(_85353_message);;
	jule::Str _8663_def1Ident = _8553_getIdent(&(_85326_def1));;
	jule::Str _8673_def2Ident = _8553_getIdent(&(_85337_def2));;
	jule::Str _8683_refersTo = _20daa6403_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8663_def1Ident, &__jule_any_type5); (*it++) = jule::Any(_8673_def2Ident, &__jule_any_type5); __jule_collection; }));;
	_20d8d4ac2_WriteStr(_85353_message, _20d8b7302_Repeat(jule::Str::lit(" ", 1), 7LL));
	_20d8d4ac2_WriteStr(_85353_message, _8683_refersTo);
	_20d8d4d7a_WriteByte(_85353_message, '\n');
	_20d8d4ac2_WriteStr(_85353_message, _8653_m);
}



inline jule::Bool _1b2dc552b_checkCrossCycle(_1b2dc3a24_typeChecker* _self_, jule::Any _87527_decl, _20d8ca601_Builder* _87543_message) {
	{
		auto &_match_expr{ _87527_decl };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b751a0de:;
			{
				jule::Ptr<_1b2db0835_TypeAlias> _8784_ta = _87527_decl.unsafe_cast_ptr<_1b2db0835_TypeAlias>();;
				{
					auto expr = &((*(_8784_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b751b0ac:;
					if (it != expr_end) {
						jule::Any *_87911_d = it;
						{
							{
								
								if (((*(_87911_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1b751b8b5:;
									{
										_1b2dc5130_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								else if ((!(_1b2dc552b_checkCrossCycle(_self_, (*(_87911_d)), _87543_message)))) {
									_case_begin_1b751b94d:;
									{
										_1b2dc5130_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								_match_end_1b751b7a5:;
							};
						}
						_iter_next_1b751b0ac:;
						++it;
						goto _iter_begin_1b751b0ac;
					}
					_iter_end_1b751b0ac:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b7519e46:;
			{
				jule::Ptr<_1b2b0db6b_Struct> _8904_s = _87527_decl.unsafe_cast_ptr<_1b2b0db6b_Struct>();;
				{
					auto expr = &((*(_8904_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b751d444:;
					if (it != expr_end) {
						jule::Ptr<_1b2b0db6b_Struct> *_89111_d = it;
						{
							{
								
								if ((jule::Any((*(_89111_d)), &__jule_any_type9) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1b751dc5d:;
									{
										_1b2dc5130_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								else if ((!(_1b2dc552b_checkCrossCycle(_self_, jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message)))) {
									_case_begin_1b751dce6:;
									{
										_1b2dc5130_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								_match_end_1b751db4d:;
							};
						}
						_iter_next_1b751d444:;
						++it;
						goto _iter_begin_1b751d444;
					}
					_iter_end_1b751d444:;
				};
			}
		}
		_match_end_1b751a078:;
	};
	return true;;
}



inline jule::Bool _1b2dc5927_checkIllegalCycles(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90967_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b7521090:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1b2b0db6b_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b7520ea2:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1b2db0835_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b751d82e:;
	};
	if ((_90967_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1b2dc42a5_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_20d8ca601_Builder _9327_message = static__20d8cb1c3_New(32LL);;
	if ((!(_1b2dc552b_checkCrossCycle(_self_, _90967_decl, &(_9327_message))))) {
		jule::Str _9358_errMsg = _20d8d53b9_Str(&_9327_message);;
		_20d8d55b7_Clear(&_9327_message);
		_1b2dc5130_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90967_decl, &(_9327_message));
		_9358_errMsg+=_20d8d53b9_Str(&_9327_message);
		_1b2dc42a5_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9358_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b7525dca:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90967_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b752534c:;
			{
				{
					auto &_match_expr{ _90967_decl };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1b752668e:;
						{
							jule::Ptr<_1b2b0db6b_Struct> _9519_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1b2b0db6b_Struct>();;
							(*(_9519_s))._field_Depends=jule::append((*_9519_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90967_decl.cast_ptr<_1b2b0db6b_Struct>(&__jule_any_type9); __jule_collection; }));
						}
					}
					_match_end_1b75264e6:;
				};
			}
		}
		_match_end_1b7525d42:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1b2dc5d23_fromTypeAlias(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _95930_decl, jule::Ptr<_1b2db0835_TypeAlias>* _95962_ta) {
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95962_ta))))._field_Public, (*((*(_95962_ta))))._field_Token)))) {
		_1b2dc42a5_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_95962_ta))))._field_Used=true;
	if (((*((*(_95930_decl))))._field_Generics.len() > 0LL)) {
		_1b2dc42a5_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b752bd15:;
			if (it != expr_end) {
				jule::Ptr<_1b2db0835_TypeAlias> _97611_bg = *it;
				{
					if (((_97611_bg == (*(_95962_ta))) || (((*((*((*(_95962_ta))))._field_Kind))._field_Kind != nullptr) && _1b2db1d64_Equal((*((*((*(_95962_ta))))._field_Kind))._field_Kind, (*(*(_97611_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1b752bd15;
					};
				}
				_iter_next_1b752bd15:;
				++it;
				goto _iter_begin_1b752bd15;
			}
			_iter_end_1b752bd15:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b752e125:;
			if (it != expr_end) {
				jule::Ptr<_1b2db0835_TypeAlias> _98711_bg = *it;
				{
					if ((_98711_bg == (*(_95962_ta)))) {
						_1b2dc42a5_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95962_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b752ea2c:;
						if (it != expr_end) {
							jule::Ptr<_1b2db0835_TypeAlias> _99212_dg = *it;
							{
								if ((_98711_bg == _99212_dg)) {
									_1b2dc42a5_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1b752ea2c:;
							++it;
							goto _iter_begin_1b752ea2c;
						}
						_iter_end_1b752ea2c:;
					};
				}
				_iter_next_1b752e125:;
				++it;
				goto _iter_begin_1b752e125;
			}
			_iter_end_1b752e125:;
		};
	};
	if (((*(*((*(_95962_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		jule::Bool _10034_ok = _1b2d13117_checkTypeAliasDeclKind((*(_self_))._field_s, _95962_ta, (*(_self_))._field_lookup);;
		if ((!(_10034_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_95962_ta))))._field_Kind))._field_Kind))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)) {
			_case_begin_1b7533129:;
			{
				jule::Bool _10114_ok = _1b2dc5927_checkIllegalCycles(_self_, _95930_decl, jule::Any((*((*(*((*((*(_95962_ta))))._field_Kind))._field_Kind.alloc)._field_Kind.cast_ptr<_1b2b119c6_StructIns>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)))._field_Decl, &__jule_any_type9));;
				if ((!(_10114_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1b75330a2:;
	};
	if (((*((*(_95962_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_95962_ta)); __jule_collection; }));
	};
	jule::Ptr<_1b2db1627_TypeKind> _10237_tk = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_95962_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_95962_ta))))._field_Kind))._field_Kind.alloc)._field_Kind});;
	_1b2dc4c12_pushReferenceByKind(_self_, &(_10237_tk));
	if ((*((*(_95962_ta))))._field_Binded) {
		(*(_10237_tk))._field_BindIdent=(*((*(_95962_ta))))._field_Ident;
	} else {
		(*(_10237_tk))._field_BindIdent=(*(*((*((*(_95962_ta))))._field_Kind))._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_10237_tk, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data21);;
}



inline jule::Ptr<_1b2be887c_Enum> _1b2dc621e_fromEnum(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _103625_decl, jule::Ptr<_1b2be887c_Enum>* _103657_e) {
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103657_e))))._field_Public, (*((*(_103657_e))))._field_Token)))) {
		_1b2dc42a5_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103625_decl))))._field_Generics.len() > 0LL)) {
		_1b2dc42a5_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_103657_e));;
}



inline jule::Ptr<_1b2bea087_TypeEnum> _1b2dc661a_fromTypeEnum(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _104829_decl, jule::Ptr<_1b2bea087_TypeEnum>* _104861_e) {
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104861_e))))._field_Public, (*((*(_104861_e))))._field_Token)))) {
		_1b2dc42a5_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104829_decl))))._field_Generics.len() > 0LL)) {
		_1b2dc42a5_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_104861_e));;
}



inline jule::Ptr<_1b2be61c6_Trait> _1b2dc6a16_fromTrait(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _106026_decl, jule::Ptr<_1b2be61c6_Trait>* _106058_t) {
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106058_t))))._field_Public, (*((*(_106058_t))))._field_Token)))) {
		_1b2dc42a5_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106026_decl))))._field_Generics.len() > 0LL)) {
		_1b2dc42a5_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1b7511aa8_pushReference(_self_, _106058_t);
	return (*(_106058_t));;
}



inline jule::Bool _1b2dc6e12_checkStructIns(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2b119c6_StructIns>* _107335_ins, jule::Ptr<_1b2ac7eba_Token>* _107357_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_107335_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_107335_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_107335_ins))))._field_Decl, &__jule_any_type9) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1b2d1eb07_precheckStructIns((*(_self_))._field_s, _107335_ins, (*(_107357_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_107335_ins))))._field_Generics.len() > 0LL)) {
		_1b2d2061e_checkStructInsOperators((*(_self_))._field_s, (*(_107335_ins)));
		_1b2d1edb0_checkStructIns((*(_self_))._field_s, _107335_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b2dc71ba_appendUsedStructReference(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2b0db6b_Struct>* _109446_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b7545b86:;
			{
				jule::Ptr<_1b2b0db6b_Struct> _11008_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1b2b0db6b_Struct>();;
				if ((!(_1b2b1062e_IsUses(_11008_refS.ptr(), (*(_109446_s)))))) {
					(*_11008_refS.alloc)._field_Uses=jule::append((*_11008_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_109446_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1b7545b20:;
	};
}



inline jule::Ptr<_1b2b119c6_StructIns> _1b2dc75b6_buildStructInstance(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _110740_decl, jule::Ptr<_1b2b0db6b_Struct>* _110772_s) {
	jule::Ptr<_1b2dc2a34_referencer> _11097_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> _11117_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)) {
				_case_begin_1b7548bbc:;
				{
					jule::Ptr<_1b2cab830_scopeChecker> _11189_sc = (*(_self_))._field_lookup.cast_ptr<_1b2cab830_scopeChecker>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1);;
					jule::Ptr<_1b2cab830_scopeChecker> _11199_hard = _1b2caee93_getHardRoot(_11189_sc);;
					if ((((*((*(_11199_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_110772_s))))) {
						goto _match_end_1b7548b56;
					};
					jule::I64 _11235_n = ((*(*(_11199_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11199_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11235_n);
				}
			}
			_match_end_1b7548b56:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11337_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1b2b119c6_StructIns> _11377_ins = _1b2b0e111_instance((*(_110772_s)));;
	(*(_11377_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>::alloc(0LL, (*((*(_110740_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2daee72_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_110740_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b754de9c:;
		if (it != expr_end) {
			jule::Ptr<_1b2add3dc_TypeDecl> _113915_g = *it;
			{
				jule::Ptr<_1b2db1627_TypeKind> _11408_kind = _1b2dcb2bd_build(_self_, &((*(_113915_g))._field_Kind));;
				if ((_11408_kind == nullptr)) {
					return nullptr;;
				};
				(*_11377_ins.alloc)._field_Generics=jule::append((*_11377_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1b2daee72_InsGeneric>(_1b2daee72_InsGeneric{._field_Kind=_11408_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1b754de9c:;
			++it;
			goto _iter_begin_1b754de9c;
		}
		_iter_end_1b754de9c:;
	};
	(*(_self_))._field_lookup=_11337_lookup;
	(*(_self_))._field_bannedGenerics=_11117_bannedGenerics;
	(*(_self_))._field_referencer=_11097_referencer;
	return _11377_ins;;
}



inline jule::Ptr<_1b2b119c6_StructIns> _1b2dc79b2_fromStructIns(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2b119c6_StructIns>* _115534_ins, jule::Ptr<_1b2ac7eba_Token> _115555_token) {
	jule::Ptr<_1b2b119c6_StructIns> _11567_existInstance = _1b2b0e41e_appendInstance((*((*(_115534_ins))))._field_Decl.ptr(), _115534_ins);;
	if ((_11567_existInstance != nullptr)) {
		if ((!(_1b2d10e17_checkConstraintsStruct((*(_self_))._field_s, _115534_ins, &(_115555_token), _11567_existInstance)))) {
			return nullptr;;
		};
		_1b750e0d3_pushReference(_self_, &(_11567_existInstance));
		return _11567_existInstance;;
	};
	if ((!(_1b2dc6e12_checkStructIns(_self_, _115534_ins, &(_115555_token))))) {
		return nullptr;;
	};
	_1b750e0d3_pushReference(_self_, _115534_ins);
	return (*(_115534_ins));;
}



inline jule::Ptr<_1b2b119c6_StructIns> _1b2dc7dad_fromStruct(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _117331_decl, jule::Ptr<_1b2b0db6b_Struct>* _117363_s) {
	if ((!(_1b2d06704_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_117363_s))))._field_Public, (*((*(_117363_s))))._field_Token)))) {
		_1b2dc42a5_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_117331_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_117331_decl))))._field_Generics.len() > 0LL)) {
			_1b2dc42a5_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1b2b119c6_StructIns>(_1b2b119c6_StructIns{._field_Checked=false, ._field_Decl=(*(_117363_s)), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1b2b10e26_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Operators=_1b2b0cc58_Operators{._field_Eq=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Add=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Div=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1b2bdda70_FnIns>(nullptr)}});;
	};
	jule::Bool _11917_ok = _1b2dc5927_checkIllegalCycles(_self_, _117331_decl, jule::Any((*(_117363_s)), &__jule_any_type9));;
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	_1b2dc71ba_appendUsedStructReference(_self_, _117363_s);
	jule::Ptr<_1b2b119c6_StructIns> _11977_ins = _1b2dc75b6_buildStructInstance(_self_, _117331_decl, _117363_s);;
	if ((_11977_ins == nullptr)) {
		return nullptr;;
	};
	_11917_ok=_1b2d074c4_checkGenericQuantity((*(_self_))._field_s, (*((*(_11977_ins))._field_Decl))._field_Generics.len(), (*(_11977_ins))._field_Generics.len(), (*((*(_117331_decl))))._field_Token);
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	return _1b2dc79b2_fromStructIns(_self_, &(_11977_ins), (*((*(_117331_decl))))._field_Token);;
}



inline jule::Trait _1b2dc81ee_getDef(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl>* _121727_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b755944c:;
		if (it != expr_end) {
			jule::Ptr<_1b2aea5e7_GenericDecl> _121810_g = *it;
			{
				if (((*(_121810_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					return jule::Trait(_1b2dcdab7_buildPrimType((*_121810_g.alloc)._field_Ident), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22);;
				};
			}
			_iter_next_1b755944c:;
			++it;
			goto _iter_begin_1b755944c;
		}
		_iter_end_1b755944c:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75597b0:;
		if (it != expr_end) {
			jule::Ptr<_1b2db0835_TypeAlias> _122415_g = *it;
			{
				if (((*(_122415_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					if (((*((*(_121727_decl))))._field_Generics.len() > 0LL)) {
						_1b2dc42a5_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1b2b119c6_StructIns> _12309_st = _1b2db5351_Struct((*((*_122415_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_12309_st != nullptr)) {
						jule::Bool _12326_ok = _1b2dc5927_checkIllegalCycles(_self_, _121727_decl, jule::Any((*_12309_st.alloc)._field_Decl, &__jule_any_type9));;
						if ((!(_12326_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_122415_g))._field_Kind))._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1b75597b0:;
			++it;
			goto _iter_begin_1b75597b0;
		}
		_iter_end_1b75597b0:;
	};
	if ((!((*((*(_121727_decl))))._field_Binded))) {
		jule::Ptr<_1b2be887c_Enum> _12428_e = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dd156a_FindEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12428_e != nullptr)) {
			return jule::Trait(_1b2dc621e_fromEnum(_self_, _121727_decl, &(_12428_e)), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data3);;
		};
		jule::Ptr<_1b2bea087_TypeEnum> _12478_te = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dd18ab_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12478_te != nullptr)) {
			return jule::Trait(_1b2dc661a_fromTypeEnum(_self_, _121727_decl, &(_12478_te)), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data4);;
		};
		jule::Ptr<_1b2be61c6_Trait> _12528_t = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dd1229_FindTrait((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12528_t != nullptr)) {
			return jule::Trait(_1b2dc6a16_fromTrait(_self_, _121727_decl, &(_12528_t)), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1b2dc42a5_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2b0db6b_Struct> _12617_s = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dd09dc_FindStruct((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if ((_12617_s != nullptr)) {
		return jule::Trait(_1b2dc7dad_fromStruct(_self_, _121727_decl, &(_12617_s)), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0);;
	};
	jule::Ptr<_1b2db0835_TypeAlias> _12667_ta = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dd05e1_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if (((_12667_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12667_ta=_1b2e95651_findBuiltinTypeAlias((*((*(_121727_decl))))._field_Ident);
	};
	if ((_12667_ta != nullptr)) {
		return _1b2dc5d23_fromTypeAlias(_self_, _121727_decl, &(_12667_ta));;
	};
	_1b2dc42a5_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1b2dc8540_buildIdent(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add9e7_IdentTypeDecl> _127830_decl) {
	return _1b2dc81ee_getDef(_self_, &(_127830_decl));;
}



inline jule::Trait _1b2dc8881_buildSubIdent(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2addcb1_SubIdentTypeDecl> _128233_decl) {
	jule::Trait _12837_ident = _1b2dc8540_buildIdent(_self_, (*(_128233_decl))._field_Idents[0LL]);;
	if ((_12837_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12837_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data4)) {
			_case_begin_1b7567768:;
			{
				goto _match_end_1b7567c96;
			}
		}
		else {
			_case_begin_1b7567812:;
			{
				_1b2dc42a5_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7567c96:;
	};
	jule::Ptr<_1b2bea087_TypeEnum> _12947_t = _12837_ident.cast_ptr<_1b2bea087_TypeEnum>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1b2add9e7_IdentTypeDecl>> _12957_idents = (*_128233_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12957_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75689cd:;
		if (it != expr_end) {
			jule::I64 _12967_i = it - expr->begin();
			jule::Ptr<_1b2add9e7_IdentTypeDecl> _129610_id = *it;
			{
				jule::Ptr<_1b2be99b0_TypeEnumItem> _12978_item = _1b2beab7b_FindItem(_12947_t.ptr(), (*(_129610_id))._field_Ident);;
				if ((_12978_item == nullptr)) {
					_1b2dc42a5_pushErr(_self_, (*_129610_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_12947_t.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_129610_id.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				if (((_12957_idents.len() - _12967_i) == 1LL)) {
					_1b2dc4c12_pushReferenceByKind(_self_, &((*((*(_12978_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_12978_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data21);;
				};
				_12947_t=_1b2db4817_TypeEnum((*(*(_12978_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_12947_t == nullptr)) {
					_1b2dc42a5_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1b75689cd:;
			++it;
			_12967_i++;
			goto _iter_begin_1b75689cd;
		}
		_iter_end_1b75689cd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2dbd26b_Sptr> _1b2dc8bc2_buildSptrFromType(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2db1627_TypeKind>* _131638_elem) {
	{
		
		if (((*(_131638_elem)) == nullptr)) {
			_case_begin_1b756debc:;
			{
				return nullptr;;
			}
		}
		else if ((_1b2db5351_Struct((*(_131638_elem)).ptr()) != nullptr)) {
			_case_begin_1b756e044:;
			{
				jule::Ptr<_1b2b119c6_StructIns> _13224_s = _1b2db5351_Struct((*(_131638_elem)).ptr());;
				if ((((*(_13224_s))._field_Decl != nullptr) && (*(*(_13224_s))._field_Decl.alloc)._field_Binded)) {
					_1b2dc42a5_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1b2db4a9d_Arr((*(_131638_elem)).ptr()) != nullptr) && (*(_1b2db4a9d_Arr((*(_131638_elem)).ptr())))._field_Auto)) {
			_case_begin_1b756e0aa:;
			{
				_1b2dc42a5_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b756d5b5:;
	};
	return jule::new_ptr<_1b2dbd26b_Sptr>(_1b2dbd26b_Sptr{._field_Elem=(*(_131638_elem))});;
}



inline jule::Ptr<_1b2dbd26b_Sptr> _1b2dc9013_buildSptr(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ade487_SptrTypeDecl> _133629_decl) {
	jule::Bool _13373_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13373_cycleRisk;
	});;
	jule::Ptr<_1b2db1627_TypeKind> _13417_elem = _1b2dcb60e_checkDecl(_self_, &((*(_133629_decl))._field_Elem));;
	return _1b2dc8bc2_buildSptrFromType(_self_, &(_13417_elem));;
}



inline jule::Ptr<_1b2dc1a33_Ptr> _1b2dc9354_buildPtrFromType(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2db1627_TypeKind>* _134537_elem) {
	{
		
		if (((*(_134537_elem)) == nullptr)) {
			_case_begin_1b7574357:;
			{
				return nullptr;;
			}
		}
		else if (((_1b2db4a9d_Arr((*(_134537_elem)).ptr()) != nullptr) && (*(_1b2db4a9d_Arr((*(_134537_elem)).ptr())))._field_Auto)) {
			_case_begin_1b7574401:;
			{
				_1b2dc42a5_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1b2dc1a33_Ptr>(_1b2dc1a33_Ptr{._field_Elem=jule::Ptr<_1b2db1627_TypeKind>(nullptr)});;
			}
		}
		_match_end_1b7574236:;
	};
	return jule::new_ptr<_1b2dc1a33_Ptr>(_1b2dc1a33_Ptr{._field_Elem=(*(_134537_elem))});;
}



inline jule::Ptr<_1b2dc1a33_Ptr> _1b2dc9695_buildPtr(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2adee16_PtrTypeDecl> _136028_decl) {
	jule::Bool _13613_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13613_cycleRisk;
	});;
	jule::Ptr<_1b2db1627_TypeKind> _136511_elem = nullptr;;
	if ((!(_1b2ae02ac_IsUnsafe(_136028_decl.ptr())))) {
		_136511_elem=_1b2dcb60e_checkDecl(_self_, &((*_136028_decl.alloc)._field_Elem));
		return _1b2dc9354_buildPtrFromType(_self_, &(_136511_elem));;
	};
	return jule::new_ptr<_1b2dc1a33_Ptr>(_1b2dc1a33_Ptr{._field_Elem=_136511_elem});;
}



inline jule::Ptr<_1b2dbdc3e_Slc> _1b2dc99d6_buildSlc(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ade81c_SlcTypeDecl> _137728_decl) {
	jule::Bool _13783_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13783_cycleRisk;
	});;
	jule::Ptr<_1b2db1627_TypeKind> _13827_elem = _1b2dcb60e_checkDecl(_self_, &((*(_137728_decl))._field_Elem));;
	{
		
		if ((_13827_elem == nullptr)) {
			_case_begin_1b7579637:;
			{
				return nullptr;;
			}
		}
		else if (((_1b2db4a9d_Arr(_13827_elem.ptr()) != nullptr) && (*(_1b2db4a9d_Arr(_13827_elem)))._field_Auto)) {
			_case_begin_1b757969d:;
			{
				_1b2dc42a5_pushErr(_self_, (*((*_137728_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b75795c1:;
	};
	return jule::new_ptr<_1b2dbdc3e_Slc>(_1b2dbdc3e_Slc{._field_Elem=_13827_elem});;
}



inline jule::Ptr<_1b2dc1060_Arr> _1b2dc9d27_buildArr(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ae06a8_ArrTypeDecl> _139828_decl) {
	jule::I64 _13997_n = 0LL;;
	if ((!(_1b2ae0a4e_AutoSized(_139828_decl.ptr())))) {
		jule::Ptr<_1b2d7dc21_Data> _14028_size = _1b2d9e7ad_evalExpr(_1b2d0cd6a_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_139828_decl.alloc)._field_Size);;
		if ((_14028_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1b2d7e65b_IsConst(_14028_size.ptr())))) {
			_1b2dc42a5_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1b2db3ccd_Prim((*(_14028_size))._field_Kind.ptr()) == nullptr) || (!(_1b2c75156_IsInt((*(_1b2db3ccd_Prim((*(_14028_size))._field_Kind)))._field_Kind))))) {
			_1b2dc42a5_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13997_n=static_cast<jule::I64>(_1b2bc445c_AsI64((*(_14028_size))._field_Constant.ptr()));
		if ((_13997_n < 0LL)) {
			_1b2dc42a5_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14205_max = _1b2c730bb_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1b2c6b191_BitSize != 64LL) && (static_cast<jule::I64>(_13997_n) > _14205_max))) {
				_1b2dc42a5_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2dac843_constoa(&((*(_14028_size))._field_Constant)), &__jule_any_type5); (*it++) = jule::Any(_1cab28d49_FmtInt(_14205_max, 10LL), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1b2db1627_TypeKind> _14297_elem = _1b2dcb60e_checkDecl(_self_, &((*_139828_decl.alloc)._field_Elem));;
	{
		
		if ((_14297_elem == nullptr)) {
			_case_begin_1b75848b7:;
			{
				return nullptr;;
			}
		}
		else if (((_1b2db4a9d_Arr(_14297_elem.ptr()) != nullptr) && (*(_1b2db4a9d_Arr(_14297_elem)))._field_Auto)) {
			_case_begin_1b7584961:;
			{
				_1b2dc42a5_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7584840:;
	};
	return jule::new_ptr<_1b2dc1060_Arr>(_1b2dc1060_Arr{._field_Auto=_1b2ae0a4e_AutoSized(_139828_decl), ._field_N=_13997_n, ._field_Elem=_14297_elem});;
}



inline jule::Ptr<_1b2dc03d3_Map> _1b2dca168_buildMap(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ae0e06_MapTypeDecl> _144728_decl) {
	jule::Bool _14483_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14483_cycleRisk;
	});;
	jule::Ptr<_1b2db1627_TypeKind> _14527_key = _1b2dcb60e_checkDecl(_self_, &((*(_144728_decl))._field_Key));;
	if ((_14527_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2db1627_TypeKind> _14577_val = _1b2dcb60e_checkDecl(_self_, &((*_144728_decl.alloc)._field_Val));;
	if ((_14577_val == nullptr)) {
		return nullptr;;
	};
	if ((_1b2db4581_Enum(_14577_val.ptr()) != nullptr)) {
		_1b2dc42a5_pushErr(_self_, (*((*_144728_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1b2b0db6b_Struct> _14668_s = _1b2781745_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1b2dc71ba_appendUsedStructReference(_self_, &(_14668_s));
		jule::Ptr<_1b2b119c6_StructIns> _14688_ins = _1b2b0e111_instance(_14668_s);;
		(*(_14688_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1b2daee72_InsGeneric>(_1b2daee72_InsGeneric{._field_Kind=_14527_key, ._field_Constraint=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr)}); (*it++) = jule::new_ptr<_1b2daee72_InsGeneric>(_1b2daee72_InsGeneric{._field_Kind=_14577_val, ._field_Constraint=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr)}); __jule_collection; });
		_1b2dc79b2_fromStructIns(_self_, &(_14688_ins), (*((*_144728_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1b2dc03d3_Map>(_1b2dc03d3_Map{._field_Key=_14527_key, ._field_Val=_14577_val});;
}



inline jule::Ptr<_1b2dbe833_Tuple> _1b2dca4a9_buildTuple(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2adeb19_TupleTypeDecl> _147930_decl) {
	jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _14807_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(0LL, (*(_147930_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2db1627_TypeKind>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_147930_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b758db68:;
		if (it != expr_end) {
			jule::Ptr<_1b2add3dc_TypeDecl> _148115_t = *it;
			{
				jule::Ptr<_1b2db1627_TypeKind> _14828_kind = _1b2dcb60e_checkDecl(_self_, &(_148115_t));;
				if ((_14828_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> &__jule_push_dest = _14807_types; __jule_push_dest.push(_14828_kind); };
			}
			_iter_next_1b758db68:;
			++it;
			goto _iter_begin_1b758db68;
		}
		_iter_end_1b758db68:;
	};
	return jule::new_ptr<_1b2dbe833_Tuple>(_1b2dbe833_Tuple{._field_Types=_14807_types});;
}



inline jule::Bool _1b2dca7ea_checkFuncTypes(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2bdda70_FnIns>* _149235_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_149235_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75906a3:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdc91a_ParamIns> _149315_p = *it;
			{
				(*(_149315_p))._field_Kind=_1b2dcb2bd_build(_self_, &((*((*((*((*_149315_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_149315_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1b2d119b7_checkFnParamKind((*(_self_))._field_s, &(_149315_p));
			}
			_iter_next_1b75906a3:;
			++it;
			goto _iter_begin_1b75906a3;
		}
		_iter_end_1b75906a3:;
	};
	if ((!(_1b2bdae68_IsVoid((*((*(_149235_f))))._field_Decl.ptr())))) {
		(*((*(_149235_f))))._field_Result=_1b2dcb2bd_build(_self_, &((*(*((*((*((*((*(_149235_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_149235_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2bdda70_FnIns> _1b2dcab3b_buildFunc(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2b0009c_FnDecl> _151029_decl) {
	jule::Bool _15113_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15113_cycleRisk;
	});;
	if (((*(_151029_decl))._field_Generics.len() > 0LL)) {
		_1b2dc42a5_pushErr(_self_, (*_151029_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2bda9b2_Fn> _15207_f = _1b2cc6383_buildFunc(_151029_decl);;
	jule::I64 _15223_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1b2d1acac_checkAnonFuncDecl((*(_self_))._field_s, &(_15207_f));
	if ((_15223_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _15287_ins = _1b2bdbebe_instanceForce(_15207_f);;
	(*(_15287_ins))._field_Anon=true;
	(*_15287_ins.alloc)._field_AsAnon=true;
	jule::Bool _15323_ok = _1b2dca7ea_checkFuncTypes(_self_, &(_15287_ins));;
	if ((!(_15323_ok))) {
		return nullptr;;
	};
	return _15287_ins;;
}



inline jule::Trait _1b2dcae7c_buildNamespace(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2ade18a_NamespaceTypeDecl> _154034_ns) {
	jule::Ptr<_1b2cd4e1e_ImportInfo> _15417_imp = ((_1b2dd1a10_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1b2dcece9_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>>((void*)__jule_anon_1b7599833, jule::Ptr<__jule_anon_1b7599833_ctx>::make(__jule_anon_1b7599833_ctx{._154034_ns=_154034_ns}).as<jule::Uintptr>(), __jule_anon_1b7599833_ctx_handler));;
	if (((_15417_imp == nullptr) || (!(_1b2cd73b6_isLookupable(_15417_imp.ptr()))))) {
		_1b2dc42a5_pushErr(_self_, (*_154034_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_154034_ns))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1b2dc46a1_disallowBuiltin(_self_);
	jule::Trait _15517_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15417_imp, (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data2);
	jule::Ptr<_1b2db1627_TypeKind> _15537_kind = _1b2dcb60e_checkDecl(_self_, &((*_154034_ns.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15517_lookup;
	_1b2dc44a3_allowBuiltin(_self_);
	return jule::Trait(_15537_kind, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data21);;
}



inline jule::Ptr<_1b2db1627_TypeKind> _1b2dcb2bd_build(_1b2dc3a24_typeChecker* _self_, jule::Any* _155926_declKind) {
	jule::Trait _156011_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155926_declKind)) };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b759dc22:;
			{
				jule::Trait _15638_t = _1b2dc8540_buildIdent(_self_, (*(_155926_declKind)).cast_ptr<_1b2add9e7_IdentTypeDecl>(&__jule_any_type77));;
				if ((_15638_t != nullptr)) {
					_156011_kind=_15638_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b759e8e3:;
			{
				jule::Trait _15688_t = _1b2dc8881_buildSubIdent(_self_, (*(_155926_declKind)).cast_ptr<_1b2addcb1_SubIdentTypeDecl>(&__jule_any_type89));;
				if ((_15688_t != nullptr)) {
					_156011_kind=_15688_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b759dd76:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b2dbd26b_Sptr> _15748_t = _1b2dc9013_buildSptr(_self_, (*(_155926_declKind)).cast_ptr<_1b2ade487_SptrTypeDecl>(&__jule_any_type74));;
				if ((_15748_t != nullptr)) {
					_156011_kind=jule::Trait(_15748_t, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b759dddc:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b2dc1a33_Ptr> _15808_t = _1b2dc9695_buildPtr(_self_, (*(_155926_declKind)).cast_ptr<_1b2adee16_PtrTypeDecl>(&__jule_any_type73));;
				if ((_15808_t != nullptr)) {
					_156011_kind=jule::Trait(_15808_t, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b759de53:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b2dbdc3e_Slc> _15868_t = _1b2dc99d6_buildSlc(_self_, (*(_155926_declKind)).cast_ptr<_1b2ade81c_SlcTypeDecl>(&__jule_any_type72));;
				if ((_15868_t != nullptr)) {
					_156011_kind=jule::Trait(_15868_t, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b759deb9:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b2dc1060_Arr> _15928_t = _1b2dc9d27_buildArr(_self_, (*(_155926_declKind)).cast_ptr<_1b2ae06a8_ArrTypeDecl>(&__jule_any_type71));;
				if ((_15928_t != nullptr)) {
					_156011_kind=jule::Trait(_15928_t, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b759e030:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b2dc03d3_Map> _15988_t = _1b2dca168_buildMap(_self_, (*(_155926_declKind)).cast_ptr<_1b2ae0e06_MapTypeDecl>(&__jule_any_type75));;
				if ((_15988_t != nullptr)) {
					_156011_kind=jule::Trait(_15988_t, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b759e096:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b2dbe833_Tuple> _16048_t = _1b2dca4a9_buildTuple(_self_, (*(_155926_declKind)).cast_ptr<_1b2adeb19_TupleTypeDecl>(&__jule_any_type76));;
				if ((_16048_t != nullptr)) {
					_156011_kind=jule::Trait(_16048_t, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b759ea14:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b2bdda70_FnIns> _16108_t = _1b2dcab3b_buildFunc(_self_, (*(_155926_declKind)).cast_ptr<_1b2b0009c_FnDecl>(&__jule_any_type67));;
				if ((_16108_t != nullptr)) {
					_156011_kind=jule::Trait(_16108_t, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b759ea7a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16168_t = _1b2dcae7c_buildNamespace(_self_, (*(_155926_declKind)).cast_ptr<_1b2ade18a_NamespaceTypeDecl>(&__jule_any_type93));;
				if ((_16168_t != nullptr)) {
					_156011_kind=_16168_t;
				};
			}
		}
		else {
			_case_begin_1b759dd10:;
			{
				_1b2dc42a5_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b759dc99:;
	};
	if ((_156011_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _156011_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data21)) {
			_case_begin_1b75ace1d:;
			{
				return _156011_kind.cast_ptr<_1b2db1627_TypeKind>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1b75a9711:;
			{
				jule::Ptr<_1b2db1627_TypeKind> _16318_tk = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_156011_kind});;
				{
					auto &_match_expr{ _156011_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)) {
						_case_begin_1b75ab2c3:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16318_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)) {
						_case_begin_1b75ab14c:;
						{
							jule::Ptr<_1b2b119c6_StructIns> _16385_s = _156011_kind.cast_ptr<_1b2b119c6_StructIns>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0);;
							if ((((*(_16385_s))._field_Decl != nullptr) && (*(*(_16385_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16318_tk))._field_BindIdent=(*(*(_16385_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1b75ab25c:;
				};
				return _16318_tk;;
			}
		}
		_match_end_1b75aa514:;
	};
}



inline jule::Ptr<_1b2db1627_TypeKind> _1b2dcb60e_checkDecl(_1b2dc3a24_typeChecker* _self_, jule::Ptr<_1b2add3dc_TypeDecl>* _164730_decl) {
	jule::Ptr<_1b2ac7eba_Token> _16497_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_164730_decl))))._field_Token;
	jule::Ptr<_1b2db1627_TypeKind> _16527_kind = _1b2dcb2bd_build(_self_, &((*((*(_164730_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16497_errorToken;
	return _16527_kind;;
}








inline jule::Bool _1b2dcbad7_identTypeLookup_eq(_1b2dcbad7_identTypeLookup *_self_, _1b2dcbad7_identTypeLookup _other_) { return true; }

inline jule::Bool static__1b2dcc05a_prim(jule::Str* _167418_ident, jule::Ptr<_1b2db9740_Prim> _167430_t) {
	return ((*(_167430_t))._field_Kind == (*(_167418_ident)));;
}



inline jule::Bool static__1b2dcc3ce_exist(jule::Str* _167819_ident, jule::Ptr<_1b2db1627_TypeKind>* _167836_k) {
	{
		
		if ((_1b2db3ccd_Prim((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1b75b2c69:;
			{
				return static__1b2dcc05a_prim(_167819_ident, _1b2db3ccd_Prim((*(_167836_k)).ptr()));;
			}
		}
		else if ((_1b2db4064_Sptr((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1b75b2ce1:;
			{
				jule::Ptr<_1b2dbd26b_Sptr> _16838_sptr = _1b2db4064_Sptr((*(_167836_k)).ptr());;
				return static__1b2dcc3ce_exist(_167819_ident, &((*(_16838_sptr))._field_Elem));;
			}
		}
		else if ((_1b2db42ea_Ptr((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1b75b2d68:;
			{
				jule::Ptr<_1b2dc1a33_Ptr> _16868_ptr = _1b2db42ea_Ptr((*(_167836_k)).ptr());;
				return static__1b2dcc3ce_exist(_167819_ident, &((*(_16868_ptr))._field_Elem));;
			}
		}
		else if ((_1b2db4d34_Slc((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1b75b2de0:;
			{
				jule::Ptr<_1b2dbdc3e_Slc> _16898_slc = _1b2db4d34_Slc((*(_167836_k)).ptr());;
				return static__1b2dcc3ce_exist(_167819_ident, &((*(_16898_slc))._field_Elem));;
			}
		}
		else if ((_1b2db4a9d_Arr((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1b75b30bb:;
			{
				jule::Ptr<_1b2dc1060_Arr> _16928_arr = _1b2db4a9d_Arr((*(_167836_k)).ptr());;
				return static__1b2dcc3ce_exist(_167819_ident, &((*(_16928_arr))._field_Elem));;
			}
		}
		else if ((_1b2db586d_Map((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1b75b3132:;
			{
				jule::Ptr<_1b2dc03d3_Map> _16958_m = _1b2db586d_Map((*(_167836_k)).ptr());;
				return (static__1b2dcc3ce_exist(_167819_ident, &((*(_16958_m))._field_Key)) || static__1b2dcc3ce_exist(_167819_ident, &((*_16958_m.alloc)._field_Val)));;
			}
		}
		else if ((_1b2db5351_Struct((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1b75b3198:;
			{
				jule::Ptr<_1b2b119c6_StructIns> _16998_s = _1b2db5351_Struct((*(_167836_k)).ptr());;
				{
					auto expr = &((*(_16998_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b75ba2e3:;
					if (it != expr_end) {
						jule::Ptr<_1b2daee72_InsGeneric> _170016_g = *it;
						{
							if (static__1b2dcc3ce_exist(_167819_ident, &((*(_170016_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b75ba2e3:;
						++it;
						goto _iter_begin_1b75ba2e3;
					}
					_iter_end_1b75ba2e3:;
				};
				return false;;
			}
		}
		else if ((_1b2db50ba_Fn((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1b75b320e:;
			{
				jule::Ptr<_1b2bdda70_FnIns> _17078_f = _1b2db50ba_Fn((*(_167836_k)).ptr());;
				{
					auto expr = &((*(_17078_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b75bbd1c:;
					if (it != expr_end) {
						jule::Ptr<_1b2bdc91a_ParamIns> _170816_p = *it;
						{
							if (_1b2bd963c_IsSelf((*(_170816_p))._field_Decl.ptr())) {
								goto _iter_next_1b75bbd1c;
							};
							if (static__1b2dcc3ce_exist(_167819_ident, &((*_170816_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b75bbd1c:;
						++it;
						goto _iter_begin_1b75bbd1c;
					}
					_iter_end_1b75bbd1c:;
				};
				if (((*_17078_f.alloc)._field_Result != nullptr)) {
					return static__1b2dcc3ce_exist(_167819_ident, &((*_17078_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1b2db5b04_Tup((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1b75b3286:;
			{
				jule::Ptr<_1b2dbe833_Tuple> _17218_tup = _1b2db5b04_Tup((*(_167836_k)).ptr());;
				{
					auto expr = &((*(_17218_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b75be68d:;
					if (it != expr_end) {
						jule::Ptr<_1b2db1627_TypeKind> _172216_t = *it;
						{
							if (static__1b2dcc3ce_exist(_167819_ident, &(_172216_t))) {
								return true;;
							};
						}
						_iter_next_1b75be68d:;
						++it;
						goto _iter_begin_1b75be68d;
					}
					_iter_end_1b75be68d:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1b75b2b48:;
			{
				return false;;
			}
		}
		_match_end_1b75b2a38:;
	};
}















inline void _1b382e935_stop(_1b382e281_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1b382ebbb_stopped(_1b382e281_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1b382ee52_finished(_1b382e281_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1b38301d8_isLastSt(_1b382e281_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1b383054b_pushErr(_1b382e281_scopeParser* _self_, jule::Ptr<_1b2ac7eba_Token> _15323_token, jule::Str _15345_fmt) {
	_1b384ce5e_pushErr((*(_self_))._field_p.ptr(), _15323_token, _15345_fmt, jule::Slice<jule::Any>());
}



inline void _1b38308ae_pushSuggestion(_1b382e281_scopeParser* _self_, jule::Str _15830_fmt, jule::Slice<jule::Any> _15850_args) {
	_1b384d2c2_pushSuggestion((*(_self_))._field_p.ptr(), _15830_fmt, _15850_args);
}



inline void _1b3830b67_insertAsNext(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _16233_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1b382d8e0_stmt>(_1b382d8e0_stmt{._field_tokens=(*(_16233_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1b382d8e0_stmt> _1b3830ded_next(_1b382e281_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1b2aed40d_ScopeTree> _1b38312e9_buildScope(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _17231_tokens, jule::Ptr<_1b2ac7eba_Token> _17260_end) {
	jule::Ptr<_1b2aed40d_ScopeTree> _1737_s = _1b382c67a_newScope();;
	(*(_1737_s))._field_Parent=(*(_self_))._field_s;
	(*_1737_s.alloc)._field_End=_17260_end;
	_1b382e281_scopeParser _1767_ssp = _1b382e281_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1b382d8e0_stmt>>(nullptr), ._field_pos=0};;
	_1b383b16c_build(&_1767_ssp, _17231_tokens, &(_1737_s));
	return _1737_s;;
}



inline jule::Ptr<_1b2b01257_VarDecl> _1b383163a_buildVarSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _18331_tokens) {
	jule::Ptr<_1b2b01257_VarDecl> _1847_v = _1b3850c31_buildVar((*(_self_))._field_p, (*(_18331_tokens)));;
	if ((_1847_v != nullptr)) {
		(*_1847_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _1847_v;;
}



inline jule::Ptr<_1b2b01631_RetSt> _1b383197b_buildRetSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _19130_tokens) {
	jule::Ptr<_1b2b01631_RetSt> _1927_st = jule::new_ptr<_1b2b01631_RetSt>(_1b2b01631_RetSt{._field_Token=_19130_tokens[0LL], ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
	if ((_19130_tokens.len() > 1LL)) {
		(_19130_tokens).mut_slice(1LL);;
		(*(_1927_st))._field_Expr=_1b384d613_buildExpr((*(_self_))._field_p, &(_19130_tokens));
	};
	return _1927_st;;
}



inline jule::Ptr<_1b2b01da1_Iter> _1b3831cbc_buildWhileNextIter(_1b382e281_scopeParser* _self_, jule::Ptr<_1b382d8e0_stmt>* _20239_s) {
	jule::Ptr<_1b2b01da1_Iter> _2037_it = jule::new_ptr<_1b2b01da1_Iter>(_1b2b01da1_Iter{._field_Comptime=false, ._field_Token=(*((*(_20239_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _2067_tokens = (*((*(_20239_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1b2b026cb_WhileKind> _2077_kind = jule::new_ptr<_1b2b026cb_WhileKind>(_1b2b026cb_WhileKind{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1b2ac7eba_Token>(nullptr)});;
	if ((_2067_tokens.len() > 0LL)) {
		(*_2077_kind.alloc)._field_Expr=_1b384d613_buildExpr((*(_self_))._field_p, &(_2067_tokens));
	};
	if (_1b38301d8_isLastSt(_self_)) {
		_1b383054b_pushErr(_self_, (*(_2037_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2067_tokens=(*(_1b3830ded_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _2197_stTokens = _1b38478b5_getBlockExpr(&(_2067_tokens));;
	if ((_2197_stTokens.len() > 0LL)) {
		jule::Ptr<_1b382d8e0_stmt> _2218_stmt = jule::new_ptr<_1b382d8e0_stmt>(_1b382d8e0_stmt{._field_tokens=_2197_stTokens, ._field_terminated=(*((*(_20239_s))))._field_terminated});;
		(*_2077_kind.alloc)._field_NextToken=_2197_stTokens[0LL];
		(*_2077_kind.alloc)._field_Next=_1b383ad09_buildSt(_self_, &(_2218_stmt));
	};
	jule::I64 _2297_i = _2197_stTokens.len();;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _2307_blockTokens = _1b384ab2c_range(&(_2297_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2067_tokens));;
	if ((_2307_blockTokens == nullptr)) {
		_1b382e935_stop(_self_);
		_1b383054b_pushErr(_self_, (*_2037_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1b38308ae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2297_i < _2067_tokens.len())) {
		_1b383054b_pushErr(_self_, _2067_tokens[_2297_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_2037_it.alloc)._field_Scope=_1b38312e9_buildScope(_self_, &(_2307_blockTokens), _2067_tokens[(_2297_i - 1LL)]);
	(*_2037_it.alloc)._field_Kind=jule::Any(_2077_kind, &__jule_any_type33);
	return _2037_it;;
}



inline jule::Ptr<_1b2b026cb_WhileKind> _1b383210d_buildWhileIterKind(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _24739_tokens) {
	return jule::new_ptr<_1b2b026cb_WhileKind>(_1b2b026cb_WhileKind{._field_Expr=_1b384d613_buildExpr((*(_self_))._field_p, _24739_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1b2ac7eba_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1b383244e_getRangeKindKeysTokens(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _25343_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _2547_vars;
	jule::Slice<_20daa5e91_Log> _25413_errs;
	({
		__jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b384b39c_parts(_25343_toks, static_cast<jule::U64>(5LLU), true);
		_2547_vars = __jule_assign_result.__jule_result_arg0;
		_25413_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_25413_errs);
	return _2547_vars;;
}



inline jule::Ptr<_1b2b01257_VarDecl> _1b3832790_buildRangeKindKey(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _25938_tokens) {
	if (((*(_25938_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1b2b01257_VarDecl> _2637_key = jule::new_ptr<_1b2b01257_VarDecl>(_1b2b01257_VarDecl{._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_Token=(*(_25938_tokens))[0LL], ._field_Setter=(*(_25938_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
	if (((*((*(_2637_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2637_key.alloc)._field_Mutable=true;
		if (((*(_25938_tokens)).len() == 1LL)) {
			_1b383054b_pushErr(_self_, (*_2637_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2637_key.alloc)._field_Token=(*(_25938_tokens))[1LL];
	} else if (((*(_25938_tokens)).len() > 1LL)) {
		_1b383054b_pushErr(_self_, (*(_25938_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2637_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b383054b_pushErr(_self_, (*_2637_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1b38308ae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2637_key.alloc)._field_Ident=(*(*(_2637_key))._field_Token.alloc)._field_Kind;
	return _2637_key;;
}



inline jule::Slice<jule::Ptr<_1b2b01257_VarDecl>> _1b3832ad1_buildRangeKindKeys(_1b382e281_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>>* _28539_parts) {
	jule::Slice<jule::Ptr<_1b2b01257_VarDecl>> _28611_keys = nullptr;;
	{
		auto expr = _28539_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77a5016:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _28715_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1b2b01257_VarDecl>> &__jule_push_dest = _28611_keys; __jule_push_dest.push(_1b3832790_buildRangeKindKey(_self_, &(_28715_tokens))); };
			}
			_iter_next_1b77a5016:;
			++it;
			goto _iter_begin_1b77a5016;
		}
		_iter_end_1b77a5016:;
	};
	return _28611_keys;;
}



inline void _1b3832e44_setupRangeKindKeysPlain(_1b382e281_scopeParser* _self_, jule::Ptr<_1b2b030d3_RangeKind>* _29344_rng, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _29371_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _2947_keyTokens = _1b383244e_getRangeKindKeysTokens(_self_, _29371_tokens);;
	if ((_2947_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_2947_keyTokens.len() > 2LL)) {
		_1b383054b_pushErr(_self_, (*((*(_29344_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1b2b01257_VarDecl>> _3017_keys = _1b3832ad1_buildRangeKindKeys(_self_, &(_2947_keyTokens));;
	(*((*(_29344_rng))))._field_KeyA=_3017_keys[0LL];
	if ((_3017_keys.len() > 1LL)) {
		(*((*(_29344_rng))))._field_KeyB=_3017_keys[1LL];
	};
}



inline void _1b38332a7_setupRangeKindKeysExplicit(_1b382e281_scopeParser* _self_, jule::Ptr<_1b2b030d3_RangeKind>* _30847_rng, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _30874_tokens) {
	jule::I64 _3097_i = 0LL;;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _3107_rang = _1b384ab2c_range(&(_3097_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _30874_tokens);;
	if ((_3097_i < (*(_30874_tokens)).len())) {
		_1b383054b_pushErr(_self_, (*((*(_30847_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1b3832e44_setupRangeKindKeysPlain(_self_, _30847_rng, &(_3107_rang));
}



inline void _1b383361a_setupRangeKindKeys(_1b382e281_scopeParser* _self_, jule::Ptr<_1b2b030d3_RangeKind>* _31739_rng, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _31766_tokens) {
	if (((*((*(_31766_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1b38332a7_setupRangeKindKeysExplicit(_self_, _31739_rng, _31766_tokens);
		return;;
	};
	_1b3832e44_setupRangeKindKeysPlain(_self_, _31739_rng, _31766_tokens);
}



inline jule::Ptr<_1b2b030d3_RangeKind> _1b3833ac1_buildRangeIterKind(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _32539_varTokens, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _3268_exprTokens, jule::Ptr<_1b2ac7eba_Token>* _32642_inToken) {
	jule::Ptr<_1b2b030d3_RangeKind> _3277_rng = jule::new_ptr<_1b2b030d3_RangeKind>(_1b2b030d3_RangeKind{._field_InToken=(*(_32642_inToken)), ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1b2b01257_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1b2b01257_VarDecl>(nullptr)});;
	if (((*(_3268_exprTokens)).len() == 0LL)) {
		_1b383054b_pushErr(_self_, (*(_3277_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3277_rng;;
	};
	(*_3277_rng.alloc)._field_Expr=_1b384d613_buildExpr((*(_self_))._field_p, _3268_exprTokens);
	if (((*(_32539_varTokens)).len() > 0LL)) {
		_1b383361a_setupRangeKindKeys(_self_, &(_3277_rng), _32539_varTokens);
	};
	return _3277_rng;;
}



inline jule::Any _1b3833ebc_buildCommonIterKind(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _34140_tokens, jule::Ptr<_1b2ac7eba_Token>* _34166_errTok) {
	jule::I64 _3427_braceN = 0LL;;
	{
		auto expr = _34140_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77b0d13:;
		if (it != expr_end) {
			jule::I64 _3438_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> _34315_tok = *it;
			{
				{
					auto &_match_expr{ (*(_34315_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b77b16d7:;
						{
							(_3427_braceN)++;
							goto _iter_next_1b77b0d13;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b77b1ac2:;
						{
							(_3427_braceN)--;
						}
					}
					_match_end_1b77b19c3:;
				};
				if ((_3427_braceN != 0LL)) {
					goto _iter_next_1b77b0d13;
				};
				{
					auto &_match_expr{ (*(_34315_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1b77b2bb1:;
						{
							jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _3609_declTokens = (*(_34140_tokens)).slice(0LL, _3438_i);;
							jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _3619_exprTokens = (*(_34140_tokens)).slice((_3438_i + 1LL));;
							return jule::Any(_1b3833ac1_buildRangeIterKind(_self_, &(_3609_declTokens), &(_3619_exprTokens), &(_34315_tok)), &__jule_any_type35);;
						}
					}
					_match_end_1b77b32dd:;
				};
			}
			_iter_next_1b77b0d13:;
			++it;
			_3438_i++;
			goto _iter_begin_1b77b0d13;
		}
		_iter_end_1b77b0d13:;
	};
	return jule::Any(_1b383210d_buildWhileIterKind(_self_, _34140_tokens), &__jule_any_type33);;
}



inline jule::Ptr<_1b2b01da1_Iter> _1b383430d_buildCommonIter(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _36835_tokens) {
	jule::Ptr<_1b2b01da1_Iter> _3697_it = jule::new_ptr<_1b2b01da1_Iter>(_1b2b01da1_Iter{._field_Comptime=false, ._field_Token=_36835_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr)});;
	(_36835_tokens).mut_slice(1LL);;
	if ((_36835_tokens.len() == 0LL)) {
		_1b382e935_stop(_self_);
		_1b383054b_pushErr(_self_, (*(_3697_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1b38308ae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _3797_exprTokens = _1b38478b5_getBlockExpr(&(_36835_tokens));;
	if ((_3797_exprTokens.len() > 0LL)) {
		(*_3697_it.alloc)._field_Kind=_1b3833ebc_buildCommonIterKind(_self_, &(_3797_exprTokens), &((*_3697_it.alloc)._field_Token));
	};
	jule::I64 _3837_i = _3797_exprTokens.len();;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _3847_scopeTokens = _1b384ab2c_range(&(_3837_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_36835_tokens));;
	if ((_3847_scopeTokens == nullptr)) {
		_1b382e935_stop(_self_);
		_1b383054b_pushErr(_self_, (*_3697_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1b38308ae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_3837_i < _36835_tokens.len())) {
		_1b383054b_pushErr(_self_, _36835_tokens[_3837_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3697_it.alloc)._field_Scope=_1b38312e9_buildScope(_self_, &(_3847_scopeTokens), _36835_tokens[(_3837_i - 1LL)]);
	return _3697_it;;
}



inline jule::Ptr<_1b2b01da1_Iter> _1b383464e_buildIterSt(_1b382e281_scopeParser* _self_, jule::Ptr<_1b382d8e0_stmt>* _39832_st) {
	if ((*((*(_39832_st))))._field_terminated) {
		return _1b3831cbc_buildWhileNextIter(_self_, _39832_st);;
	};
	return _1b383430d_buildCommonIter(_self_, (*((*(_39832_st))))._field_tokens);;
}



inline jule::Ptr<_1b2b034ac_BreakSt> _1b3834990_buildBreakSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _40533_tokens) {
	jule::Ptr<_1b2b034ac_BreakSt> _4067_brk = jule::new_ptr<_1b2b034ac_BreakSt>(_1b2b034ac_BreakSt{._field_Token=(*(_40533_tokens))[0LL], ._field_Label=jule::Ptr<_1b2ac7eba_Token>(nullptr)});;
	if (((*(_40533_tokens)).len() > 1LL)) {
		if (((*((*(_40533_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1b383054b_pushErr(_self_, (*(_40533_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1b38308ae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4067_brk))._field_Label=(*(_40533_tokens))[1LL];
			if (((*(_40533_tokens)).len() > 2LL)) {
				_1b383054b_pushErr(_self_, (*(_40533_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4067_brk;;
}



inline jule::Ptr<_1b2b03886_ContSt> _1b3834cd1_buildContSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _42332_tokens) {
	jule::Ptr<_1b2b03886_ContSt> _4247_cont = jule::new_ptr<_1b2b03886_ContSt>(_1b2b03886_ContSt{._field_Token=(*(_42332_tokens))[0LL], ._field_Label=jule::Ptr<_1b2ac7eba_Token>(nullptr)});;
	if (((*(_42332_tokens)).len() > 1LL)) {
		if (((*((*(_42332_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1b383054b_pushErr(_self_, (*(_42332_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1b38308ae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4247_cont))._field_Label=(*(_42332_tokens))[1LL];
			if (((*(_42332_tokens)).len() > 2LL)) {
				_1b383054b_pushErr(_self_, (*(_42332_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4247_cont;;
}



inline jule::Ptr<_1b2b03d3c_If> _1b3835122_buildIf(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _44128_tokens) {
	jule::Ptr<_1b2b03d3c_If> _4427_model = jule::new_ptr<_1b2b03d3c_If>(_1b2b03d3c_If{._field_Token=(*(_44128_tokens))[0LL], ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr)});;
	((*(_44128_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _4467_exprTokens = _1b38478b5_getBlockExpr(_44128_tokens);;
	jule::I64 _4477_i = 0LL;;
	if ((_4467_exprTokens.len() == 0LL)) {
		_1b383054b_pushErr(_self_, (*(_4427_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4477_i=_4467_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _4537_scopeTokens = _1b384ab2c_range(&(_4477_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _44128_tokens);;
	if ((_4537_scopeTokens == nullptr)) {
		_1b382e935_stop(_self_);
		_1b383054b_pushErr(_self_, (*(_4427_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1b38308ae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2ac7eba_Token> _4607_end = (*(_44128_tokens))[(_4477_i - 1LL)];;
	if ((_4477_i < (*(_44128_tokens)).len())) {
		if (((*((*(_44128_tokens))[_4477_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_44128_tokens))).mut_slice(_4477_i);;
		} else {
			_1b383054b_pushErr(_self_, (*(_44128_tokens))[_4477_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_44128_tokens))=nullptr;
		};
	};
	(*_4427_model.alloc)._field_Expr=_1b384d613_buildExpr((*(_self_))._field_p, &(_4467_exprTokens));
	(*_4427_model.alloc)._field_Scope=_1b38312e9_buildScope(_self_, &(_4537_scopeTokens), _4607_end);
	return _4427_model;;
}



inline jule::Ptr<_1b2b04216_Else> _1b3835463_buildElse(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _47430_tokens) {
	jule::Ptr<_1b2b04216_Else> _4757_els = jule::new_ptr<_1b2b04216_Else>(_1b2b04216_Else{._field_Token=(*(_47430_tokens))[0LL], ._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr)});;
	((*(_47430_tokens))).mut_slice(1LL);;
	jule::I64 _4797_i = 0LL;;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _4807_scopeTokens = _1b384ab2c_range(&(_4797_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47430_tokens);;
	if ((_4807_scopeTokens == nullptr)) {
		if ((_4797_i < (*(_47430_tokens)).len())) {
			_1b383054b_pushErr(_self_, (*(_4757_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1b382e935_stop(_self_);
			_1b383054b_pushErr(_self_, (*(_4757_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1b38308ae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_4797_i < (*(_47430_tokens)).len())) {
		_1b383054b_pushErr(_self_, (*(_47430_tokens))[_4797_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_4757_els))._field_Scope=_1b38312e9_buildScope(_self_, &(_4807_scopeTokens), (*(_47430_tokens))[(_4797_i - 1LL)]);
	return _4757_els;;
}



inline jule::Ptr<_1b2b046bc_Conditional> _1b38357a4_buildIfElseChain(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _49836_tokens) {
	jule::Ptr<_1b2b046bc_Conditional> _4997_chain = jule::new_ptr<_1b2b046bc_Conditional>(_1b2b046bc_Conditional{._field_Head=_1b3835122_buildIf(_self_, &(_49836_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1b2b03d3c_If>>(nullptr), ._field_Default=jule::Ptr<_1b2b04216_Else>(nullptr)});;
	if (((*(_4997_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_49836_tokens.len() != 0LL)) {
		{
			if (((*(_49836_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1b77cea35;
			};
			if (((_49836_tokens.len() > 1LL) && ((*(_49836_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_49836_tokens).mut_slice(1LL);;
				jule::Ptr<_1b2b03d3c_If> _5119_elif = _1b3835122_buildIf(_self_, &(_49836_tokens));;
				(*_4997_chain.alloc)._field_Tail=jule::append((*_4997_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b03d3c_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5119_elif; __jule_collection; }));
				goto _iter_next_1b77cea35;
			};
			(*_4997_chain.alloc)._field_Default=_1b3835463_buildElse(_self_, &(_49836_tokens));
			goto _iter_end_1b77cea35;
		}
	_iter_next_1b77cea35:;
	}
	_iter_end_1b77cea35:;;
	return _4997_chain;;
}



inline jule::Ptr<_1b2ae2721_Expr> _1b3835ae5_buildCoCallSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _52133_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _5223_token = _52133_tokens[0LL];;
	(_52133_tokens).mut_slice(1LL);;
	jule::Ptr<_1b2ae2721_Expr> _5247_e = _1b384d613_buildExpr((*(_self_))._field_p, &(_52133_tokens));;
	if ((_5247_e == nullptr)) {
		return _5247_e;;
	};
	{
		auto &_match_expr{ (*(_5247_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1b77d3b27:;
			{
				(*((*(_5247_e))._field_Kind.unsafe_cast_ptr<_1b2ae644a_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1b77d41ee:;
			{
				_1b383054b_pushErr(_self_, _5223_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1b77d4188:;
	};
	return _5247_e;;
}



inline jule::Ptr<_1b2aead9a_GotoSt> _1b3835e36_buildGotoSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _53732_tokens) {
	jule::Ptr<_1b2aead9a_GotoSt> _5387_gt = jule::new_ptr<_1b2aead9a_GotoSt>(_1b2aead9a_GotoSt{._field_Token=(*(_53732_tokens))[0LL], ._field_Label=jule::Ptr<_1b2ac7eba_Token>(nullptr)});;
	if (((*(_53732_tokens)).len() == 1LL)) {
		_1b383054b_pushErr(_self_, (*(_5387_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_53732_tokens)).len() > 2LL)) {
		_1b383054b_pushErr(_self_, (*(_53732_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1b2ac7eba_Token> _5477_identToken = (*(_53732_tokens))[1LL];;
	if (((*(_5477_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b383054b_pushErr(_self_, _5477_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1b38308ae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5387_gt;;
	};
	(*(_5387_gt))._field_Label=_5477_identToken;
	return _5387_gt;;
}



inline jule::Ptr<_1b2aeb197_FallSt> _1b3836277_buildFallSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _55732_tokens) {
	jule::Ptr<_1b2aeb197_FallSt> _5587_fll = jule::new_ptr<_1b2aeb197_FallSt>(_1b2aeb197_FallSt{._field_Token=(*(_55732_tokens))[0LL]});;
	if (((*(_55732_tokens)).len() > 1LL)) {
		_1b383054b_pushErr(_self_, (*(_55732_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5587_fll;;
}



inline jule::Ptr<_1b2b04e09_TypeAliasDecl> _1b38365b8_buildTypeAliasSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _56737_tokens) {
	jule::Ptr<_1b2b04e09_TypeAliasDecl> _5687_tad = _1b384eda6_buildTypeAliasDecl((*(_self_))._field_p, _56737_tokens);;
	(*(_5687_tad))._field_Scope=(*(_self_))._field_s;
	return _5687_tad;;
}



inline void _1b3836a91_pushCaseExpr(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _57332_tokens, jule::Ptr<_1b2ac7eba_Token> _57361_token, jule::Bool _5743_typeMatch, jule::Slice<jule::Ptr<_1b2ae2721_Expr>>* _57425_exprs) {
	if ((_57332_tokens.len() == 0LL)) {
		return;;
	};
	if (_5743_typeMatch) {
		jule::I64 _5798_i = 0LL;;
		jule::Ptr<_1b2add3dc_TypeDecl> _5808_t;
		jule::Bool _58011_ok;
		({
			__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType((*(_self_))._field_p, &(_57332_tokens), (&(_5798_i)), true);
			_5808_t = __jule_assign_result.__jule_result_arg0;
			_58011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_58011_ok) {
			{ jule::Slice<jule::Ptr<_1b2ae2721_Expr>> &__jule_push_dest = (*(_57425_exprs)); __jule_push_dest.push(jule::new_ptr<_1b2ae2721_Expr>(_1b2ae2721_Expr{._field_Token=_57332_tokens[0LL], ._field_End=_57332_tokens[(_57332_tokens.len() - 1LL)], ._field_Kind=jule::Any(_5808_t, &__jule_any_type91)})); };
			if ((_5798_i < _57332_tokens.len())) {
				_1b383054b_pushErr(_self_, _57332_tokens[_5798_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1b2ae2721_Expr>> &__jule_push_dest = (*(_57425_exprs)); __jule_push_dest.push(_1b384d613_buildExpr((*(_self_))._field_p, &(_57332_tokens))); };
}



inline __jule_tuple_sx_1b2ae2721_Expr__jule_tuple_bool _1b3837047_buildCaseExprs(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _59635_tokens, jule::Ptr<_1b2ac7eba_Token>* _59665_colon, jule::Bool _59687_typeMatch) {
	__jule_tuple_sx_1b2ae2721_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _5977_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ae2721_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2ae2721_Expr>(nullptr); __jule_collection; });;
	jule::I64 _5987_braceN = 0LL;;
	jule::I64 _5997_j = 0LL;;
	{
		auto expr = _59635_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77e0aac:;
		if (it != expr_end) {
			jule::I64 _6008_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> _60015_tok = *it;
			{
				{
					auto &_match_expr{ (*(_60015_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b77e231c:;
						{
							(_5987_braceN)++;
							goto _iter_next_1b77e0aac;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1b77e2707:;
						{
							(_5987_braceN)--;
							goto _iter_next_1b77e0aac;
						}
					}
					_match_end_1b77e2608:;
				};
				if ((_5987_braceN != 0LL)) {
					goto _iter_next_1b77e0aac;
				};
				{
					
					if (((*(_60015_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1b77e3dbd:;
						{
							jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _6195_exprTokens = (*(_59635_tokens)).slice(_5997_j, _6008_i);;
							if ((_6195_exprTokens.len() == 0LL)) {
								_1b383054b_pushErr(_self_, _60015_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1b3836a91_pushCaseExpr(_self_, (*(_59635_tokens)).slice(_5997_j, _6008_i), _60015_tok, _59687_typeMatch, &(_5977_exprs));
							};
							_5997_j=(_6008_i + 1LL);
						}
					}
					else if (((*(_60015_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1b77e3e34:;
						{
							(*(_59665_colon))=_60015_tok;
							_1b3836a91_pushCaseExpr(_self_, (*(_59635_tokens)).slice(_5997_j, _6008_i), _60015_tok, _59687_typeMatch, &(_5977_exprs));
							((*(_59635_tokens))).mut_slice((_6008_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _5977_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6008_i - _5997_j) == 0LL) || (_5977_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1b77e38e5:;
				};
			}
			_iter_next_1b77e0aac:;
			++it;
			_6008_i++;
			goto _iter_begin_1b77e0aac;
		}
		_iter_end_1b77e0aac:;
	};
	_1b383054b_pushErr(_self_, (*(_59635_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_59635_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2aed40d_ScopeTree> _1b3837388_buildCaseScope(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _63835_tokens) {
	jule::I64 _6397_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6418_i = 0LL;;
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _6428_next;
			({
				__jule_tuple_sx_1b2ac7eba_Token__jule_tuple_bool __jule_assign_result = _1b382d5b0_skipSt(&(_6418_i), (*(_63835_tokens)).slice(_6397_n));
				_6428_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6428_next.len() == 0LL)) {
				goto _iter_end_1b77e7bb3;
			};
			jule::Ptr<_1b2ac7eba_Token> _6464_tok = _6428_next[0LL];;
			if (((*(_6464_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6397_n+=_6418_i;
				goto _iter_next_1b77e7bb3;
			};
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _6518_scopeTokens = (*(_63835_tokens)).slice(0LL, _6397_n);;
			jule::Ptr<_1b2aed40d_ScopeTree> _6528_scope = _1b38312e9_buildScope(_self_, &(_6518_scopeTokens), (*(_63835_tokens))[_6397_n]);;
			((*(_63835_tokens))).mut_slice(_6397_n);;
			return _6528_scope;;
		}
	_iter_next_1b77e7bb3:;
	}
	_iter_end_1b77e7bb3:;;
	jule::Ptr<_1b2ac7eba_Token> _65611_end;;
	if (((*(_63835_tokens)).len() > 0LL)) {
		_65611_end=(*(_63835_tokens))[((*(_63835_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1b2aed40d_ScopeTree> _6607_scope = _1b38312e9_buildScope(_self_, _63835_tokens, _65611_end);;
	(*(_63835_tokens))=nullptr;
	return _6607_scope;;
}



inline __jule_tuple_x_1b2b053b0_Case__jule_tuple_bool _1b3837784_buildCase(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _66530_tokens, jule::Bool _66555_typeMatch) {
	__jule_tuple_x_1b2b053b0_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b2b053b0_Case> _6667_c = jule::new_ptr<_1b2b053b0_Case>(_1b2b053b0_Case{._field_Token=(*(_66530_tokens))[0LL], ._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1b2ae2721_Expr>>(nullptr)});;
	((*(_66530_tokens))).mut_slice(1LL);;
	jule::Ptr<_1b2ac7eba_Token> _67011_colon = nullptr;;
	if (((*(_66530_tokens)).len() == 0LL)) {
		_1b383054b_pushErr(_self_, (*(_6667_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _67512_ok;
	({
		__jule_tuple_sx_1b2ae2721_Expr__jule_tuple_bool __jule_assign_result = _1b3837047_buildCaseExprs(_self_, _66530_tokens, &(_67011_colon), _66555_typeMatch);
		(*_6667_c.alloc)._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_67512_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_6667_c.alloc)._field_Scope=_1b3837388_buildCaseScope(_self_, _66530_tokens);
	if (((*((*_6667_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6667_c))._field_Scope.alloc)._field_End=_67011_colon;
	};
	jule::Bool _6803_isDefault = (_67512_ok && ((*_6667_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6667_c;
	__jule_func_result.__jule_result_arg1 = _6803_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1b2b053b0_Case__jule_tuple_x_1b2b04216_Else _1b3837b80_buildCases(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _68430_tokens, jule::Bool _68455_typeMatch) {
	__jule_tuple_sx_1b2b053b0_Case__jule_tuple_x_1b2b04216_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1b2b053b0_Case>> _68511_cases = nullptr;;
	jule::Ptr<_1b2b04216_Else> _68611_def = nullptr;;
	jule::Bool _6877_defNotLast = false;;
	while ((_68430_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1b2ac7eba_Token> _6898_tok = _68430_tokens[0LL];;
			if (((*(_6898_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1b383054b_pushErr(_self_, _6898_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1b78020c9;
			};
			jule::Ptr<_1b2b053b0_Case> _6948_c;
			jule::Bool _69411_isDefault;
			({
				__jule_tuple_x_1b2b053b0_Case__jule_tuple_bool __jule_assign_result = _1b3837784_buildCase(_self_, &(_68430_tokens), _68455_typeMatch);
				_6948_c = __jule_assign_result.__jule_result_arg0;
				_69411_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_69411_isDefault) {
				(*(_6948_c))._field_Token=_6898_tok;
				if ((_68611_def == nullptr)) {
					_68611_def=jule::new_ptr<_1b2b04216_Else>(_1b2b04216_Else{._field_Token=(*_6948_c.alloc)._field_Token, ._field_Scope=(*_6948_c.alloc)._field_Scope});
				} else {
					_1b383054b_pushErr(_self_, _6898_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_6877_defNotLast=(_6877_defNotLast || (_68611_def != nullptr));
				{ jule::Slice<jule::Ptr<_1b2b053b0_Case>> &__jule_push_dest = _68511_cases; __jule_push_dest.push(_6948_c); };
			};
		}
	_iter_next_1b78020c9:;
	}
	_iter_end_1b78020c9:;;
	if (_6877_defNotLast) {
		_1b383054b_pushErr(_self_, (*(_68611_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _68511_cases;
	__jule_func_result.__jule_result_arg1 = _68611_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2b05bc9_MatchCase> _1b3837ec1_buildMatchCase(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _71834_tokens) {
	jule::Ptr<_1b2b05bc9_MatchCase> _7197_m = jule::new_ptr<_1b2b05bc9_MatchCase>(_1b2b05bc9_MatchCase{._field_Comptime=false, ._field_Token=_71834_tokens[0LL], ._field_End=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1b2b053b0_Case>>(nullptr), ._field_Default=jule::Ptr<_1b2b04216_Else>(nullptr)});;
	(_71834_tokens).mut_slice(1LL);;
	if (((_71834_tokens.len() > 0LL) && ((*(_71834_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7197_m))._field_TypeMatch=true;
		(_71834_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _7297_exprTokens = _1b38478b5_getBlockExpr(&(_71834_tokens));;
	if ((_7297_exprTokens.len() > 0LL)) {
		(*_7197_m.alloc)._field_Expr=_1b384d613_buildExpr((*(_self_))._field_p, &(_7297_exprTokens));
	} else if ((*_7197_m.alloc)._field_TypeMatch) {
		_1b383054b_pushErr(_self_, (*_7197_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I64 _7367_i = _7297_exprTokens.len();;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _7377_blockToks = _1b384ab2c_range(&(_7367_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_71834_tokens));;
	if ((_7377_blockToks == nullptr)) {
		_1b382e935_stop(_self_);
		_1b383054b_pushErr(_self_, (*_7197_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1b38308ae_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7367_i < _71834_tokens.len())) {
		_1b383054b_pushErr(_self_, _71834_tokens[_7367_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_7197_m.alloc)._field_End=_71834_tokens[(_7367_i - 1LL)];
	({
		__jule_tuple_sx_1b2b053b0_Case__jule_tuple_x_1b2b04216_Else __jule_assign_result = _1b3837b80_buildCases(_self_, _7377_blockToks, (*_7197_m.alloc)._field_TypeMatch);
		(*_7197_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7197_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7197_m;;
}



inline jule::Ptr<_1b2aed40d_ScopeTree> _1b3838312_buildScopeSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _75132_tokens) {
	jule::Bool _7527_isUnsafe = false;;
	jule::Bool _7537_isDeferred = false;;
	jule::Ptr<_1b2ac7eba_Token> _7547_token = _75132_tokens[0LL];;
	if (((*(_7547_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7527_isUnsafe=true;
		(_75132_tokens).mut_slice(1LL);;
		if ((_75132_tokens.len() == 0LL)) {
			_1b383054b_pushErr(_self_, _7547_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7547_token=_75132_tokens[0LL];
		if (((*_7547_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7537_isDeferred=true;
			(_75132_tokens).mut_slice(1LL);;
			if ((_75132_tokens.len() == 0LL)) {
				_1b383054b_pushErr(_self_, _7547_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7547_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7537_isDeferred=true;
		(_75132_tokens).mut_slice(1LL);;
		if ((_75132_tokens.len() == 0LL)) {
			_1b383054b_pushErr(_self_, _7547_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I64 _7807_i = 0LL;;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _7817_scopeTokens = _1b384ab2c_range(&(_7807_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_75132_tokens));;
	if ((_7817_scopeTokens == nullptr)) {
		_1b383054b_pushErr(_self_, _7547_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_7807_i < _75132_tokens.len())) {
		_1b383054b_pushErr(_self_, _75132_tokens[_7807_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1b2aed40d_ScopeTree> _7887_scope = _1b38312e9_buildScope(_self_, &(_7817_scopeTokens), _75132_tokens[(_7807_i - 1LL)]);;
	(*(_7887_scope))._field_Unsafety=_7527_isUnsafe;
	(*_7887_scope.alloc)._field_Deferred=_7537_isDeferred;
	return _7887_scope;;
}



inline jule::Ptr<_1b2aea9c1_LabelSt> _1b3838653_buildLabelSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _79433_tokens) {
	jule::Ptr<_1b2aea9c1_LabelSt> _7957_lbl = jule::new_ptr<_1b2aea9c1_LabelSt>(_1b2aea9c1_LabelSt{._field_Token=(*(_79433_tokens))[0LL], ._field_Ident=(*((*(_79433_tokens))[0LL]))._field_Kind});;
	if (((*(_79433_tokens)).len() > 2LL)) {
		((*(_79433_tokens))).mut_slice(2LL);;
		_1b3830b67_insertAsNext(_self_, _79433_tokens);
	};
	return _7957_lbl;;
}



inline __jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool _1b3838994_buildIdSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _80930_tokens) {
	__jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_80930_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1b2ac7eba_Token> _8147_token = (*(_80930_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8147_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1b7818b90:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1b3838653_buildLabelSt(_self_, _80930_tokens), &__jule_any_type55);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b78193ee:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b384929b_assignInfo> _1b3838cd5_buildAssignInfo(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _82336_tokens) {
	jule::Ptr<_1b384929b_assignInfo> _8247_info = jule::new_ptr<_1b384929b_assignInfo>(_1b384929b_assignInfo{._field_l=jule::Slice<jule::Ptr<_1b2ac7eba_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1b2ac7eba_Token>>(nullptr), ._field_setter=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_ok=true});;
	jule::I64 _8277_braceN = 0LL;;
	{
		auto expr = _82336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b781abc5:;
		if (it != expr_end) {
			jule::I64 _8288_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> _82815_token = *it;
			{
				{
					auto &_match_expr{ (*(_82815_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b781b610:;
						{
							(_8277_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b781b995:;
						{
							(_8277_braceN)--;
						}
					}
					_match_end_1b781b896:;
				};
				{
					
					if ((_8277_braceN > 0LL)) {
						_case_begin_1b781cb61:;
						{
							goto _iter_next_1b781abc5;
						}
					}
					else if (((!(_1b2acd0d0_IsAssignOp((*(_82815_token))._field_Id))) && ((*_82815_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1b781cbc7:;
						{
							goto _iter_next_1b781abc5;
						}
					}
					_match_end_1b781cab7:;
				};
				(*(_8247_info))._field_l=(*(_82336_tokens)).slice(0LL, _8288_i);
				if (((*_8247_info.alloc)._field_l.len() == 0LL)) {
					(*_8247_info.alloc)._field_ok=false;
				};
				(*_8247_info.alloc)._field_setter=_82815_token;
				if (((_8288_i + 1LL) >= (*(_82336_tokens)).len())) {
					(*_8247_info.alloc)._field_r=nullptr;
					(*_8247_info.alloc)._field_ok=_1b2accd16_IsPostfixOp((*((*_8247_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1b781abc5;
				};
				(*_8247_info.alloc)._field_r=(*(_82336_tokens)).slice((_8288_i + 1LL));
				if (_1b2accd16_IsPostfixOp((*(*(_8247_info))._field_setter.alloc)._field_Id)) {
					if (((*_8247_info.alloc)._field_r.len() > 0LL)) {
						_1b383054b_pushErr(_self_, (*(_8247_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8247_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1b781abc5;
			}
			_iter_next_1b781abc5:;
			++it;
			_8288_i++;
			goto _iter_begin_1b781abc5;
		}
		_iter_end_1b781abc5:;
	};
	return _8247_info;;
}



inline jule::Ptr<_1b2aeb807_AssignLeft> _1b3839126_buildAssignL(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _86833_tokens) {
	jule::Ptr<_1b2aeb807_AssignLeft> _8697_l = jule::new_ptr<_1b2aeb807_AssignLeft>(_1b2aeb807_AssignLeft{._field_Token=(*(_86833_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
	if (((*((*(_86833_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_8697_l))._field_Ident=(*((*_8697_l.alloc)._field_Token))._field_Kind;
	};
	(*_8697_l.alloc)._field_Expr=_1b384d613_buildExpr((*(_self_))._field_p, _86833_tokens);
	return _8697_l;;
}



inline jule::Slice<jule::Ptr<_1b2aeb807_AssignLeft>> _1b3839467_buildAssignLs(_1b382e281_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>>* _87934_parts) {
	jule::Slice<jule::Ptr<_1b2aeb807_AssignLeft>> _88011_lefts = nullptr;;
	{
		auto expr = _87934_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b782500e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _88115_part = *it;
			{
				jule::Ptr<_1b2aeb807_AssignLeft> _8828_l = _1b3839126_buildAssignL(_self_, &(_88115_part));;
				{ jule::Slice<jule::Ptr<_1b2aeb807_AssignLeft>> &__jule_push_dest = _88011_lefts; __jule_push_dest.push(_8828_l); };
			}
			_iter_next_1b782500e:;
			++it;
			goto _iter_begin_1b782500e;
		}
		_iter_end_1b782500e:;
	};
	return _88011_lefts;;
}



inline __jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool _1b38397a8_buildPlainAssign(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _88837_tokens) {
	__jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b384929b_assignInfo> _8897_info = _1b3838cd5_buildAssignInfo(_self_, _88837_tokens);;
	if ((!((*(_8897_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2aebd8a_AssignSt> _8947_assign = jule::new_ptr<_1b2aebd8a_AssignSt>(_1b2aebd8a_AssignSt{._field_Declarative=false, ._field_Setter=(*_8897_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1b2aeb807_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
	if (((*((*_8897_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_8947_assign))._field_Declarative=true;
		(*_8947_assign.alloc)._field_Right=_1b384d613_buildExpr((*(_self_))._field_p, &((*_8897_info.alloc)._field_r));
		jule::Bool _9024_ok = _1b3839ba4_buildDeclAssign1(_self_, &((*_8897_info.alloc)._field_l), &(_8947_assign));;
		if ((!(_9024_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_8947_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_8947_assign, &__jule_any_type57);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1b2aeb807_AssignLeft> _9118_left = (*(_8947_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9118_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1b782b2ce:;
				{
					jule::Ptr<_1b2b01257_VarDecl> _9149_decl = jule::new_ptr<_1b2b01257_VarDecl>(_1b2b01257_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9118_left))._field_Token, ._field_Setter=(*_8947_assign.alloc)._field_Setter, ._field_Ident=(*_9118_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9118_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9118_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Expr=(*_8947_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9149_decl, &__jule_any_type49);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_1b782b268:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_8947_assign, &__jule_any_type57);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _9287_parts;
	jule::Slice<_20daa5e91_Log> _92814_errs;
	({
		__jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b384b39c_parts(&((*_8897_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9287_parts = __jule_assign_result.__jule_result_arg0;
		_92814_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_92814_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_92814_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_8947_assign.alloc)._field_Left=_1b3839467_buildAssignLs(_self_, &(_9287_parts));
	if (((*_8897_info.alloc)._field_r != nullptr)) {
		(*_8947_assign.alloc)._field_Right=_1b384d613_buildExpr((*(_self_))._field_p, &((*_8897_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_8947_assign, &__jule_any_type57);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1b3839ba4_buildDeclAssign1(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _94237_lefts, jule::Ptr<_1b2aebd8a_AssignSt>* _94266_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _9447_parts;
	jule::Slice<_20daa5e91_Log> _94414_errs;
	({
		__jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b384b39c_parts(_94237_lefts, static_cast<jule::U64>(5LLU), true);
		_9447_parts = __jule_assign_result.__jule_result_arg0;
		_94414_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_94414_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_94414_errs);
		return false;;
	};
	{
		auto expr = &(_9447_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b78322a2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _95015_part = *it;
			{
				jule::Bool _9518_isMut = false;;
				jule::Bool _9528_isRef = false;;
				jule::Ptr<_1b2ac7eba_Token> _9544_token = _95015_part[0LL];;
				if (((*(_9544_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9518_isMut=true;
					(_95015_part).mut_slice(1LL);;
					if ((_95015_part.len() == 0LL)) {
						_1b383054b_pushErr(_self_, _9544_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_95015_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9528_isRef=true;
					(_95015_part).mut_slice(1LL);;
					if ((_95015_part.len() == 0LL)) {
						_1b383054b_pushErr(_self_, _9544_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_95015_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_95015_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1b383054b_pushErr(_self_, _9544_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1b2aeb807_AssignLeft> _9788_l = _1b3839126_buildAssignL(_self_, &(_95015_part));;
				if (((*(_9788_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*_9788_l.alloc)._field_Mutable=_9518_isMut;
				(*_9788_l.alloc)._field_Reference=_9528_isRef;
				{ jule::Slice<jule::Ptr<_1b2aeb807_AssignLeft>> &__jule_push_dest = (*((*(_94266_assign))))._field_Left; __jule_push_dest.push(_9788_l); };
			}
			_iter_next_1b78322a2:;
			++it;
			goto _iter_begin_1b78322a2;
		}
		_iter_end_1b78322a2:;
	};
	return true;;
}



inline __jule_tuple_x_1b2aebd8a_AssignSt__jule_tuple_bool _1b3839ee5_buildDeclAssign(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _99035_tokens) {
	__jule_tuple_x_1b2aebd8a_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99035_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99035_tokens).mut_slice(1LL);;
	jule::Ptr<_1b2ac7eba_Token> _9967_token = _99035_tokens[0LL];;
	if (((*(_9967_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2aebd8a_AssignSt> _10017_assign = jule::new_ptr<_1b2aebd8a_AssignSt>(_1b2aebd8a_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1b2aeb807_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
	jule::I64 _10057_i = 0LL;;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _10067_rang = _1b384ab2c_range(&(_10057_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99035_tokens));;
	if ((_10067_rang == nullptr)) {
		_1b383054b_pushErr(_self_, _9967_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10057_i + 1LL) < _99035_tokens.len())) {
		(*(_10017_assign))._field_Setter=_99035_tokens[_10057_i];
		if (((*((*_10017_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1b383054b_pushErr(_self_, (*_10017_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10057_i)++;
		jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _10168_exprTokens = _99035_tokens.slice(_10057_i);;
		(*_10017_assign.alloc)._field_Right=_1b384d613_buildExpr((*(_self_))._field_p, &(_10168_exprTokens));
	};
	jule::Bool _10203_ok = _1b3839ba4_buildDeclAssign1(_self_, &(_10067_rang), &(_10017_assign));;
	__jule_func_result.__jule_result_arg0 = _10017_assign;
	__jule_func_result.__jule_result_arg1 = _10203_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool _1b383a336_buildAssignSt(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _102434_tokens) {
	__jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1b3849653_checkAssignTokens(_102434_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102434_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b784304e:;
			{
				({
					__jule_tuple_x_1b2aebd8a_AssignSt__jule_tuple_bool __jule_assign_result = _1b3839ee5_buildDeclAssign(_self_, (*(_102434_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type57);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b78421c4:;
			{
				({
					__jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool __jule_assign_result = _1b38397a8_buildPlainAssign(_self_, _102434_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b7842636:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b2ae30e5_UseExpr> _1b383a677_buildUseExpr(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _103733_tokens) {
	if (((*(_103733_tokens)).len() == 1LL)) {
		_1b383054b_pushErr(_self_, (*(_103733_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1b2ae30e5_UseExpr> _10427_ue = jule::new_ptr<_1b2ae30e5_UseExpr>(_1b2ae30e5_UseExpr{._field_Token=(*(_103733_tokens))[0LL], ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
	((*(_103733_tokens))).mut_slice(1LL);;
	(*(_10427_ue))._field_Expr=_1b384d613_buildExpr((*(_self_))._field_p, _103733_tokens);
	return _10427_ue;;
}



inline jule::Any _1b383a9b8_buildConstSt(_1b382e281_scopeParser* _self_, jule::Ptr<_1b382d8e0_stmt>* _105033_st) {
	if (((*((*(_105033_st))))._field_tokens.len() == 1LL)) {
		_1b383054b_pushErr(_self_, (*((*(_105033_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_105033_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b784766e:;
			{
				((*((*(_105033_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1b2b01da1_Iter> _10588_iter = _1b383464e_buildIterSt(_self_, _105033_st);;
				if ((_10588_iter != nullptr)) {
					(*_10588_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10588_iter, &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b7847460:;
			{
				((*((*(_105033_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1b2b05bc9_MatchCase> _10658_mt = _1b3837ec1_buildMatchCase(_self_, (*((*(_105033_st))))._field_tokens);;
				if ((_10658_mt != nullptr)) {
					(*_10658_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10658_mt, &__jule_any_type58);;
			}
		}
		else {
			_case_begin_1b784676c:;
			{
				return jule::Any(_1b383163a_buildVarSt(_self_, &((*((*(_105033_st))))._field_tokens)), &__jule_any_type49);;
			}
		}
		_match_end_1b7846ea9:;
	};
}



inline jule::Any _1b383ad09_buildSt(_1b382e281_scopeParser* _self_, jule::Ptr<_1b382d8e0_stmt>* _107528_st) {
	jule::Ptr<_1b2ac7eba_Token> _10767_token = (*((*(_107528_st))))._field_tokens[0LL];;
	if (((*(_10767_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _10788_s;
		jule::Bool _107811_ok;
		({
			__jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool __jule_assign_result = _1b3838994_buildIdSt(_self_, &((*((*(_107528_st))))._field_tokens));
			_10788_s = __jule_assign_result.__jule_result_arg0;
			_107811_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_107811_ok) {
			return _10788_s;;
		};
	};
	jule::Any _10847_s;
	jule::Bool _108410_ok;
	({
		__jule_tuple__1b2aeca4a_StmtData__jule_tuple_bool __jule_assign_result = _1b383a336_buildAssignSt(_self_, &((*((*(_107528_st))))._field_tokens));
		_10847_s = __jule_assign_result.__jule_result_arg0;
		_108410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_108410_ok) {
		return _10847_s;;
	};
	{
		auto &_match_expr{ (*(_10767_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1b784d598:;
			{
				return jule::Any(_1b383a677_buildUseExpr(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b784d422:;
			{
				return _1b383a9b8_buildConstSt(_self_, _107528_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1b784d80c:;
			{
				return jule::Any(_1b383163a_buildVarSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b784d873:;
			{
				return jule::Any(_1b383197b_buildRetSt(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b784d8d9:;
			{
				return jule::Any(_1b383464e_buildIterSt(_self_, _107528_st), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b784d950:;
			{
				return jule::Any(_1b3834990_buildBreakSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1b784d9b6:;
			{
				return jule::Any(_1b3834cd1_buildContSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1b784da3d:;
			{
				return jule::Any(_1b38357a4_buildIfElseChain(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1b784dab5:;
			{
				return jule::Any(_1b3835ae5_buildCoCallSt(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1b784db3c:;
			{
				return jule::Any(_1b3835e36_buildGotoSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1b784dbb4:;
			{
				return jule::Any(_1b3836277_buildFallSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b784dc3b:;
			{
				return jule::Any(_1b38365b8_buildTypeAliasSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b784dcb3:;
			{
				return jule::Any(_1b3837ec1_buildMatchCase(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b784dd3a:;
			{
				if (((*((*(_107528_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1b784d257;
				};
				if ((((*((*((*(_107528_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_107528_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1b3838312_buildScopeSt(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type48);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b784ddb2:;
			{
				return jule::Any(_1b3838312_buildScopeSt(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type48);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1b784de39:;
			{
				return jule::Any(_1b3838312_buildScopeSt(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type48);;
			}
		}
		_match_end_1b784d257:;
	};
	jule::Ptr<_1b2ae2721_Expr> _11317_expr = _1b384d613_buildExpr((*(_self_))._field_p, &((*((*(_107528_st))))._field_tokens));;
	if ((_11317_expr != nullptr)) {
		return jule::Any(_11317_expr, &__jule_any_type51);;
	};
	_1b383054b_pushErr(_self_, _10767_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1b383b16c_build(_1b382e281_scopeParser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _113926_tokens, jule::Ptr<_1b2aed40d_ScopeTree>* _113956_s) {
	if (((*(_113956_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1b382dc97_splitStmts(_113926_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_113956_s));
	while (((!(_1b38301d8_isLastSt(_self_))) && (!(_1b382ee52_finished(_self_))))) {
		{
			jule::Ptr<_1b382d8e0_stmt> _11478_st = _1b3830ded_next(_self_);;
			jule::Any _11488_data = _1b383ad09_buildSt(_self_, &(_11478_st));;
			if ((_11488_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1b2aecc9d_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b2aecc9d_Stmt{._field_Token=(*(_11478_st))._field_tokens[0LL], ._field_Data=_11488_data}; __jule_collection; }));
			};
			if (_1b382ebbb_stopped(_self_)) {
				goto _iter_end_1b785b188;
			};
		}
	_iter_next_1b785b188:;
	}
	_iter_end_1b785b188:;;
}








inline jule::Bool _1b383bbb7_exprBuilder_eq(_1b383bbb7_exprBuilder *_self_, _1b383bbb7_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1b383c3b0_pushErr(_1b383bbb7_exprBuilder* _self_, jule::Ptr<_1b2ac7eba_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args) {
	_1b384ce5e_pushErr((*(_self_))._field_p.ptr(), _1423_token, _1445_fmt, _1465_args);
}



inline void _1b383c723_pushSuggestion(_1b383bbb7_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args) {
	_1b384d2c2_pushSuggestion((*(_self_))._field_p.ptr(), _1930_fmt, _1950_args);
}



inline jule::Ptr<_1b2ae3315_TupleExpr> _1b383ca64_buildTuple(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>>* _2331_parts) {
	jule::Ptr<_1b2ae3315_TupleExpr> _247_tuple = jule::new_ptr<_1b2ae3315_TupleExpr>(_1b2ae3315_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ae2721_Expr>>::alloc(0LL, (*(_2331_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2ae2721_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _2331_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7880289:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _2715_part = *it;
			{
				(*(_247_tuple))._field_Expr=jule::append((*_247_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ae2721_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b3846e58_buildFromTokens(_self_, _2715_part); __jule_collection; }));
			}
			_iter_next_1b7880289:;
			++it;
			goto _iter_begin_1b7880289;
		}
		_iter_end_1b7880289:;
	};
	return _247_tuple;;
}



inline jule::Ptr<_1b2ae36ab_LitExpr> _1b383cda5_buildLit(_1b383bbb7_exprBuilder* _self_, jule::Ptr<_1b2ac7eba_Token> _3324_token) {
	return jule::new_ptr<_1b2ae36ab_LitExpr>(_1b2ae36ab_LitExpr{._field_Token=_3324_token, ._field_Value=(*(_3324_token))._field_Kind});;
}



inline jule::Any _1b383d537_buildSingle(_1b383bbb7_exprBuilder* _self_, jule::Ptr<_1b2ac7eba_Token> _4431_token) {
	{
		auto &_match_expr{ (*(_4431_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1b7882e7e:;
			{
				return jule::Any(_1b383cda5_buildLit(_self_, _4431_token), &__jule_any_type104);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1b7883006:;
			{
				return jule::Any(jule::new_ptr<_1b2ae4ba7_VariadicExpr>(_1b2ae4ba7_VariadicExpr{._field_Token=_4431_token, ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr)}), &__jule_any_type78);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1b788306c:;
			{
				return jule::Any(_1b3848311_buildIdentExpr(&(_4431_token)), &__jule_any_type41);;
			}
		}
		_match_end_1b7882db3:;
	};
	_1b383c3b0_pushErr(_self_, _4431_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1b2ae403b_IdentExpr> _1b383d878_buildBindIdent(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _6135_tokens) {
	if (((*((*(_6135_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_6135_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1b383c3b0_pushErr(_self_, (*(_6135_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2ac7eba_Token> _697_token = (*(_6135_tokens))[2LL];;
	if (((*(_697_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b383c3b0_pushErr(_self_, (*(_6135_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2ae403b_IdentExpr> _757_expr = _1b3848311_buildIdentExpr(&(_697_token));;
	(*(_757_expr))._field_Binded=true;
	return _757_expr;;
}



inline jule::Ptr<_1b2ae47cd_UnaryExpr> _1b383dbb9_buildUnary(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _8030_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _817_op = _8030_tokens[0LL];;
	if ((_8030_tokens.len() == 1LL)) {
		_1b383c3b0_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1b2ac8707_IsUnaryOp((*(_817_op))._field_Id)))) {
		_1b383c3b0_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_817_op.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(_8030_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1b2ae47cd_UnaryExpr>(_1b2ae47cd_UnaryExpr{._field_Op=_817_op, ._field_Expr=_1b3846e58_buildFromTokens(_self_, _8030_tokens)});;
}



inline jule::Ptr<_1b2ae5834_SubIdentExpr> _1b383e00a_buildObjSubIdent(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _10136_tokens) {
	jule::I64 _1027_i = (_10136_tokens.len() - 1LL);;
	jule::Ptr<_1b2ac7eba_Token> _1037_identToken = _10136_tokens[_1027_i];;
	(_1027_i)--;
	(_10136_tokens).mut_slice(0LL, _1027_i);;
	if ((_10136_tokens.len() == 0LL)) {
		_1b383c3b0_pushErr(_self_, _1037_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b2ae5834_SubIdentExpr>(_1b2ae5834_SubIdentExpr{._field_Expr=_1b3846e58_buildFromTokens(_self_, _10136_tokens), ._field_Ident=_1037_identToken});;
}



inline jule::Ptr<_1b2ae545a_NamespaceExpr> _1b383e34b_buildNamespace(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _11635_tokens) {
	jule::Ptr<_1b2ae545a_NamespaceExpr> _1177_ns = jule::new_ptr<_1b2ae545a_NamespaceExpr>(_1b2ae545a_NamespaceExpr{._field_Namespace=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Ident=jule::Ptr<_1b2ac7eba_Token>(nullptr)});;
	if (((*(_11635_tokens)).len() > 3LL)) {
		_1b383c3b0_pushErr(_self_, (*(_11635_tokens))[3LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_1177_ns.alloc)._field_Namespace=(*(_11635_tokens))[0LL];
	if ((((*((*_1177_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_1177_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U64>(31LLU)))) {
		_1b383c3b0_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	if (((*(_11635_tokens)).len() < 2LL)) {
		_1b383c3b0_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_11635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(19LLU))) {
		_1b383c3b0_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_11635_tokens)).len() < 3LL)) {
		_1b383c3b0_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_1177_ns.alloc)._field_Ident=(*(_11635_tokens))[2LL];
	if (((*((*_1177_ns.alloc)._field_Ident))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b383c3b0_pushErr(_self_, (*_1177_ns.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1177_ns;;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b383e68c_buildType(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _15030_tokens) {
	jule::I64 _1517_i = 0LL;;
	jule::Ptr<_1b2add3dc_TypeDecl> _1527_t;
	jule::Bool _15210_ok;
	({
		__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType((*(_self_))._field_p, _15030_tokens, (&(_1517_i)), false);
		_1527_t = __jule_assign_result.__jule_result_arg0;
		_15210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_15210_ok))) {
		_1b383c3b0_pushErr(_self_, (*(_15030_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1517_i < (*(_15030_tokens)).len())) {
		_1b383c3b0_pushErr(_self_, (*(_15030_tokens))[_1517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1527_t;;
}



inline jule::Any _1b383e9cd_buildSubIdent(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _16434_tokens) {
	jule::I64 _1653_i = ((*(_16434_tokens)).len() - 2LL);;
	jule::Ptr<_1b2ac7eba_Token> _1663_token = (*(_16434_tokens))[_1653_i];;
	{
		auto &_match_expr{ (*(_1663_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1b789a5e5:;
			{
				return jule::Any(_1b383e00a_buildObjSubIdent(_self_, (*(_16434_tokens))), &__jule_any_type88);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b789ac22:;
			{
				return jule::Any(_1b383e34b_buildNamespace(_self_, _16434_tokens), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b789ac88:;
			{
				return jule::Any(_1b383e68c_buildType(_self_, _16434_tokens), &__jule_any_type91);;
			}
		}
		_match_end_1b789ab01:;
	};
	if (_1b38489a4_isAnonFnHead(_16434_tokens)) {
		return jule::Any(_1b383e68c_buildType(_self_, _16434_tokens), &__jule_any_type91);;
	};
	_1b383c3b0_pushErr(_self_, _1663_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1b2ae4ba7_VariadicExpr> _1b383ed1e_buildVariadic(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _18633_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _1877_token = _18633_tokens[(_18633_tokens.len() - 1LL)];;
	(_18633_tokens).mut_slice(0LL, (_18633_tokens.len() - 1LL));;
	return jule::new_ptr<_1b2ae4ba7_VariadicExpr>(_1b2ae4ba7_VariadicExpr{._field_Token=_1877_token, ._field_Expr=_1b3846e58_buildFromTokens(_self_, _18633_tokens)});;
}



inline jule::Ptr<_1b2ae29da_RangeExpr> _1b3840160_buildBetweenParentheses(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _19543_tokens) {
	if ((_19543_tokens.len() == 2LL)) {
		_1b383c3b0_pushErr(_self_, _19543_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_19543_tokens).mut_slice(1LL, (_19543_tokens.len() - 1LL));;
	return jule::new_ptr<_1b2ae29da_RangeExpr>(_1b2ae29da_RangeExpr{._field_Expr=_1b3846e58_buildFromTokens(_self_, _19543_tokens)});;
}



inline jule::Ptr<_1b2ae5081_CastExpr> _1b38404a1_tryBuildCast(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _20733_tokens) {
	jule::I64 _2087_rangeN = 0LL;;
	{
		auto expr = _20733_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b78a181b:;
		if (it != expr_end) {
			jule::I64 _2097_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> _20910_token = *it;
			{
				{
					auto &_match_expr{ (*(_20910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b78a21ac:;
						{
							(_2087_rangeN)++;
							goto _iter_next_1b78a181b;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b78a2597:;
						{
							(_2087_rangeN)--;
						}
					}
					_match_end_1b78a2498:;
				};
				if ((_2087_rangeN > 0LL)) {
					goto _iter_next_1b78a181b;
				} else if (((_2097_i + 1LL) == (*(_20733_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _2288_typeTokens = (*(_20733_tokens)).slice(0LL, (_2097_i + 1LL));;
				jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _2298_exprTokens = (*(_20733_tokens)).slice((_2097_i + 1LL));;
				if ((_2298_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1b2ac7eba_Token> _2364_tok = _2298_exprTokens[0LL];;
				if (((*(_2364_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1b2ae5081_CastExpr> _2418_cast = jule::new_ptr<_1b2ae5081_CastExpr>(_1b2ae5081_CastExpr{._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
				if ((_2298_exprTokens.len() == 2LL)) {
					_1b383c3b0_pushErr(_self_, _2298_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2288_typeTokens.len() == 2LL)) {
					_1b383c3b0_pushErr(_self_, _2288_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2288_typeTokens).mut_slice(1LL, (_2288_typeTokens.len() - 1LL));;
					jule::I64 _2559_typeIndex = 0LL;;
					jule::Ptr<_1b2add3dc_TypeDecl> _2569_t;
					jule::Bool _25612_ok;
					({
						__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType((*(_self_))._field_p, &(_2288_typeTokens), (&(_2559_typeIndex)), true);
						_2569_t = __jule_assign_result.__jule_result_arg0;
						_25612_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_25612_ok && (_2559_typeIndex < _2288_typeTokens.len()))) {
						_1b383c3b0_pushErr(_self_, _2288_typeTokens[_2559_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_25612_ok))) {
						return _2418_cast;;
					};
					(*(_2418_cast))._field_Kind=_2569_t;
					if ((_2298_exprTokens.len() > 2LL)) {
						jule::I64 _26610_j = 0LL;;
						_1b384ab2c_range(&(_26610_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2298_exprTokens));
						if ((_26610_j < _2298_exprTokens.len())) {
							return nullptr;;
						};
						(_2298_exprTokens).mut_slice(0LL, _26610_j);;
						(*_2418_cast.alloc)._field_Expr=_1b3846e58_buildFromTokens(_self_, _2298_exprTokens);
					};
				};
				return _2418_cast;;
			}
			_iter_next_1b78a181b:;
			++it;
			_2097_i++;
			goto _iter_begin_1b78a181b;
		}
		_iter_end_1b78a181b:;
	};
	return nullptr;;
}



inline void _1b38408be_pushArg(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ae2721_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _28152_tokens, jule::Ptr<_1b2ac7eba_Token> _28177_errToken) {
	if ((_28152_tokens.len() == 0LL)) {
		_1b383c3b0_pushErr(_self_, _28177_errToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1b2ae2721_Expr>> &__jule_push_dest = (*(_28128_args)); __jule_push_dest.push(_1b3846e58_buildFromTokens(_self_, _28152_tokens)); };
}



inline jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _1b3840c10_buildArgs(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _29029_tokens) {
	if ((_29029_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _29611_args = nullptr;;
	jule::I64 _2977_last = 0LL;;
	jule::I64 _2987_rangeN = 0LL;;
	(_29029_tokens).mut_slice(1LL, (_29029_tokens.len() - 1LL));;
	{
		auto expr = &(_29029_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b78b0231:;
		if (it != expr_end) {
			jule::I64 _3007_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> _30010_token = *it;
			{
				{
					auto &_match_expr{ (*(_30010_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b78b0e13:;
						{
							(_2987_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b78b12ed:;
						{
							(_2987_rangeN)--;
						}
					}
					_match_end_1b78b11ee:;
				};
				if (((_2987_rangeN > 0LL) || ((*(_30010_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1b78b0231;
				};
				_1b38408be_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last, _3007_i), _30010_token);
				_2977_last=(_3007_i + 1LL);
			}
			_iter_next_1b78b0231:;
			++it;
			_3007_i++;
			goto _iter_begin_1b78b0231;
		}
		_iter_end_1b78b0231:;
	};
	if ((_2977_last < _29029_tokens.len())) {
		if ((_2977_last == 0LL)) {
			if ((_29029_tokens.len() > 0LL)) {
				_1b38408be_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[_2977_last]);
			};
		} else {
			_1b38408be_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[(_2977_last - 1LL)]);
		};
	};
	return _29611_args;;
}



inline jule::Ptr<_1b2ae644a_FnCallExpr> _1b3841507_buildFnCall(_1b383bbb7_exprBuilder* _self_, jule::Ptr<_1b2ac7eba_Token>* _35632_token, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _35687_args) {
	return jule::new_ptr<_1b2ae644a_FnCallExpr>(_1b2ae644a_FnCallExpr{._field_Token=(*(_35632_token)), ._field_Expr=_1b3846e58_buildFromTokens(_self_, (*(_35659_expr))), ._field_Args=_1b3840c10_buildArgs(_self_, (*(_35687_args))), ._field_Exception=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1b3841848_buildParenthesesRange(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _36442_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _3657_token = (*(_36442_tokens))[0LL];;
	if (((*(_3657_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1b2ae5081_CastExpr> _3678_expr = _1b38404a1_tryBuildCast(_self_, _36442_tokens);;
		if ((_3678_expr != nullptr)) {
			return jule::Any(_3678_expr, &__jule_any_type108);;
		};
	};
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _3727_exprTokens;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _37223_argsTokens;
	({
		__jule_tuple_sx_1b2ac7eba_Token__jule_tuple_sx_1b2ac7eba_Token __jule_assign_result = _1b384ade6_rangeLast(_36442_tokens);
		_3727_exprTokens = __jule_assign_result.__jule_result_arg0;
		_37223_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3727_exprTokens.len() == 0LL)) {
		return jule::Any(_1b3840160_buildBetweenParentheses(_self_, _37223_argsTokens), &__jule_any_type103);;
	};
	if (_1b38489a4_isAnonFnHead(&(_3727_exprTokens))) {
		return jule::Any(_1b383e68c_buildType(_self_, _36442_tokens), &__jule_any_type91);;
	};
	return jule::Any(_1b3841507_buildFnCall(_self_, &(_3657_token), &(_3727_exprTokens), &(_37223_argsTokens)), &__jule_any_type84);;
}



inline jule::Ptr<_1b2ae3a85_UnsafeExpr> _1b3841b89_buildUnsafeExpr(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _38635_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _3877_token = _38635_tokens[0LL];;
	(_38635_tokens).mut_slice(1LL);;
	jule::I64 _3897_i = 0LL;;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _3907_rangeTokens = _1b384ab2c_range(&(_3897_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_38635_tokens));;
	if ((_3907_rangeTokens.len() == 0LL)) {
		_1b383c3b0_pushErr(_self_, _38635_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b2ae3a85_UnsafeExpr>(_1b2ae3a85_UnsafeExpr{._field_Token=_3877_token, ._field_Expr=_1b3846e58_buildFromTokens(_self_, _3907_rangeTokens)});;
}



inline jule::Ptr<_1b2b0009c_FnDecl> _1b3841eca_buildAnonFn(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _40132_tokens) {
	jule::Ptr<_1b2b0009c_FnDecl> _4027_f = _1b38540ec_buildFn((*(_self_))._field_p, _40132_tokens, false, false);;
	if ((!(_1b2b00443_IsAnon(_4027_f.ptr())))) {
		_1b383c3b0_pushErr(_self_, (*_4027_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4027_f;;
}



inline jule::Any _1b384231b_buildUnsafe(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _41032_tokens) {
	{
		auto &_match_expr{ (*((*(_41032_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b78c3d49:;
			{
				return jule::Any(_1b3841eca_buildAnonFn(_self_, _41032_tokens), &__jule_any_type67);;
			}
		}
		else {
			_case_begin_1b78c31de:;
			{
				return jule::Any(_1b3841b89_buildUnsafeExpr(_self_, (*(_41032_tokens))), &__jule_any_type105);;
			}
		}
		_match_end_1b78c362e:;
	};
}



inline void _1b3842739_pushRangeLitPart(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _42036_part, jule::Ptr<_1b2ac7eba_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>>* _42135_parts) {
	if ((_42036_part.len() == 0LL)) {
		_1b383c3b0_pushErr(_self_, _4213_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> &__jule_push_dest = (*(_42135_parts)); __jule_push_dest.push(_42036_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1b3842a7a_getBraceRangeLitExprParts(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _43145_tokens) {
	if ((_43145_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _43711_parts = nullptr;;
	jule::I64 _4397_last = 0LL;;
	jule::I64 _4407_rangeN = 0LL;;
	(_43145_tokens).mut_slice(1LL, (_43145_tokens.len() - 1LL));;
	{
		auto expr = &(_43145_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b78c75cd:;
		if (it != expr_end) {
			jule::I64 _4427_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> _44210_token = *it;
			{
				{
					auto &_match_expr{ (*(_44210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b78c82b0:;
						{
							(_4407_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b78c869a:;
						{
							(_4407_rangeN)--;
						}
					}
					_match_end_1b78c859b:;
				};
				if (((_4407_rangeN > 0LL) || ((*(_44210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1b78c75cd;
				};
				_1b3842739_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last, _4427_i), _44210_token, &(_43711_parts));
				_4397_last=(_4427_i + 1LL);
			}
			_iter_next_1b78c75cd:;
			++it;
			_4427_i++;
			goto _iter_begin_1b78c75cd;
		}
		_iter_end_1b78c75cd:;
	};
	if ((_4397_last < _43145_tokens.len())) {
		if ((_4397_last == 0LL)) {
			if ((_43145_tokens.len() > 0LL)) {
				_1b3842739_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[_4397_last], &(_43711_parts));
			};
		} else {
			_1b3842739_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[(_4397_last - 1LL)], &(_43711_parts));
		};
	};
	return _43711_parts;;
}



inline jule::Ptr<_1b2ae6e40_FieldExprPair> _1b3842dbb_buildFieldExprPair(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _47338_tokens) {
	if (((_47338_tokens.len() - 2LL) == 0LL)) {
		_1b383c3b0_pushErr(_self_, _47338_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2ae6e40_FieldExprPair> _4787_pair = jule::new_ptr<_1b2ae6e40_FieldExprPair>(_1b2ae6e40_FieldExprPair{._field_Field=_47338_tokens[0LL], ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
	(_47338_tokens).mut_slice(2LL);;
	(*(_4787_pair))._field_Expr=_1b3846e58_buildFromTokens(_self_, _47338_tokens);
	return _4787_pair;;
}



inline jule::Ptr<_1b2ae2721_Expr> _1b384320c_buildStructLitExpr(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _48639_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _4877_token = (*(_48639_tokens))[0LL];;
	if ((((*(_4877_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_48639_tokens)).len() > 1LL))) {
		_4877_token=(*(_48639_tokens))[1LL];
		if (((*_4877_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1b2ae2721_Expr>(_1b2ae2721_Expr{._field_Token=_4877_token, ._field_End=(*(_48639_tokens))[((*(_48639_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1b3842dbb_buildFieldExprPair(_self_, (*(_48639_tokens))), &__jule_any_type80)});;
		};
	};
	return _1b3846e58_buildFromTokens(_self_, (*(_48639_tokens)));;
}



inline jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _1b384354d_buildStructLitExprs(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _50140_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _5027_parts = _1b3842a7a_getBraceRangeLitExprParts(_self_, (*(_50140_tokens)));;
	if ((_5027_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2ae2721_Expr>> _5077_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ae2721_Expr>>::alloc(0LL, _5027_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2ae2721_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5027_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b78d6d18:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _50815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b2ae2721_Expr>> &__jule_push_dest = _5077_pairs; __jule_push_dest.push(_1b384320c_buildStructLitExpr(_self_, &(_50815_part))); };
			}
			_iter_next_1b78d6d18:;
			++it;
			goto _iter_begin_1b78d6d18;
		}
		_iter_end_1b78d6d18:;
	};
	return _5077_pairs;;
}



inline jule::Ptr<_1b2ae776a_StructLit> _1b384388e_buildTypedStructLiteral(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _51443_tokens) {
	jule::I64 _5157_i = 0LL;;
	jule::Ptr<_1b2add3dc_TypeDecl> _5167_t;
	jule::Bool _51610_ok;
	({
		__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType((*(_self_))._field_p, &(_51443_tokens), (&(_5157_i)), true);
		_5167_t = __jule_assign_result.__jule_result_arg0;
		_51610_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_51610_ok))) {
		return nullptr;;
	} else if ((_5157_i >= _51443_tokens.len())) {
		_1b383c3b0_pushErr(_self_, _51443_tokens[_5157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51443_tokens).mut_slice(_5157_i);;
	jule::Ptr<_1b2ac7eba_Token> _5253_token = _51443_tokens[0LL];;
	if (((*(_5253_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1b383c3b0_pushErr(_self_, _5253_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b2ae776a_StructLit>(_1b2ae776a_StructLit{._field_End=_51443_tokens[(_51443_tokens.len() - 1LL)], ._field_Kind=_5167_t, ._field_Exprs=_1b384354d_buildStructLitExprs(_self_, &(_51443_tokens))});;
}



inline jule::Ptr<_1b2ae2721_Expr> _1b3843bd0_buildBraceLitPart(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _53838_tokens) {
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _5397_l;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _53914_r;
	({
		__jule_tuple_sx_1b2ac7eba_Token__jule_tuple_sx_1b2ac7eba_Token __jule_assign_result = _1b3847c7d_splitDelim(_53838_tokens, static_cast<jule::U64>(8LLU));
		_5397_l = __jule_assign_result.__jule_result_arg0;
		_53914_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5397_l != nullptr)) {
		return jule::new_ptr<_1b2ae2721_Expr>(_1b2ae2721_Expr{._field_Token=(*(_53838_tokens))[0LL], ._field_End=(*(_53838_tokens))[((*(_53838_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1b2ae854b_KeyValPair>(_1b2ae854b_KeyValPair{._field_Key=_1b3846e58_buildFromTokens(_self_, _5397_l), ._field_Val=_1b3846e58_buildFromTokens(_self_, _53914_r), ._field_Colon=(*(_53838_tokens))[_5397_l.len()]}), &__jule_any_type81)});;
	};
	return _1b3846e58_buildFromTokens(_self_, (*(_53838_tokens)));;
}



inline jule::Ptr<_1b2ae7c21_BraceLit> _1b3844021_buildBraceLit(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _55534_tokens) {
	jule::Ptr<_1b2ae7c21_BraceLit> _5567_lit = jule::new_ptr<_1b2ae7c21_BraceLit>(_1b2ae7c21_BraceLit{._field_Token=(*(_55534_tokens))[0LL], ._field_End=(*(_55534_tokens))[((*(_55534_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1b2ae2721_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _5617_parts = _1b3842a7a_getBraceRangeLitExprParts(_self_, (*(_55534_tokens)));;
	if ((_5617_parts == nullptr)) {
		return _5567_lit;;
	};
	(*(_5567_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ae2721_Expr>>::alloc(0LL, _5617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2ae2721_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b78e1a15:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _56715_part = *it;
			{
				(*_5567_lit.alloc)._field_Exprs=jule::append((*_5567_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ae2721_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b3843bd0_buildBraceLitPart(_self_, &(_56715_part)); __jule_collection; }));
			}
			_iter_next_1b78e1a15:;
			++it;
			goto _iter_begin_1b78e1a15;
		}
		_iter_end_1b78e1a15:;
	};
	return _5567_lit;;
}



inline jule::Any _1b3844362_buildBraceRange(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _57436_tokens) {
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _5757_exprTokens;
	jule::I64 _57519_rangeN;
	({
		__jule_tuple_sx_1b2ac7eba_Token__jule_tuple_int __jule_assign_result = _1b38485ca_getRangeExprTokens(_57436_tokens);
		_5757_exprTokens = __jule_assign_result.__jule_result_arg0;
		_57519_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5757_exprTokens.len() == 0LL)) {
			_case_begin_1b78e3462:;
			{
				return jule::Any(_1b3844021_buildBraceLit(_self_, _57436_tokens), &__jule_any_type110);;
			}
		}
		else if ((_57519_rangeN > 0LL)) {
			_case_begin_1b78e34ea:;
			{
				_1b383c3b0_pushErr(_self_, (*(_57436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b78e33eb:;
	};
	jule::Ptr<_1b2ac7eba_Token> _5863_elseToken = _5757_exprTokens[(_5757_exprTokens.len() - 1LL)];;
	if (((*(_5757_exprTokens[(_5757_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5757_exprTokens).mut_slice(0LL, (_5757_exprTokens.len() - 1LL));;
		jule::Any _5898_d = _1b38467c6_build(_self_, &(_5757_exprTokens));;
		if ((_5898_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _5898_d };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1b78e6344:;
				{
					((*(_57436_tokens))).mut_slice((_5757_exprTokens.len() + 1LL));;
					jule::I64 _5969_i = 0LL;;
					jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _5979_rangeTokens = _1b384ab2c_range(&(_5969_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _57436_tokens);;
					jule::Ptr<_1b2ae644a_FnCallExpr> _5989_model = _5898_d.unsafe_cast_ptr<_1b2ae644a_FnCallExpr>();;
					if (_1b2ae6a88_Ignored(_5989_model.ptr())) {
						_1b383c3b0_pushErr(_self_, _5863_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*_5989_model.alloc)._field_Exception=_1b384e108_buildScope((*(_self_))._field_p, &(_5979_rangeTokens), (*(_57436_tokens))[(_5969_i - 1LL)]);
					return _5898_d;;
				}
			}
			else {
				_case_begin_1b78e5e9d:;
				{
					_1b383c3b0_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1b78e63dd:;
		};
	};
	{
		auto &_match_expr{ (*(_5757_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b78eab95:;
			{
				return _1b384231b_buildUnsafe(_self_, _57436_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b78eb448:;
			{
				return jule::Any(_1b3841eca_buildAnonFn(_self_, _57436_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b78eb4ae:;
			{
				return jule::Any(_1b384388e_buildTypedStructLiteral(_self_, (*(_57436_tokens))), &__jule_any_type109);;
			}
		}
		else {
			_case_begin_1b78e8ca3:;
			{
				_1b383c3b0_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b78ea788:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1b38446a3_getEnumerableParts(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _62638_tokens) {
	(_62638_tokens).mut_slice(1LL, (_62638_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _6287_parts;
	jule::Slice<_20daa5e91_Log> _62814_errors;
	({
		__jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b384b39c_parts(&(_62638_tokens), static_cast<jule::U64>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_62814_errors);
	return _6287_parts;;
}



inline jule::Ptr<_1b2ae8c77_SliceExpr> _1b38449e4_buildSlice(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _63330_tokens) {
	jule::Ptr<_1b2ae8c77_SliceExpr> _6347_slc = jule::new_ptr<_1b2ae8c77_SliceExpr>(_1b2ae8c77_SliceExpr{._field_Token=_63330_tokens[0LL], ._field_End=_63330_tokens[(_63330_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1b2ae2721_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _6397_parts = _1b38446a3_getEnumerableParts(_self_, _63330_tokens);;
	if ((_6397_parts.len() == 0LL)) {
		return _6347_slc;;
	};
	(*(_6347_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ae2721_Expr>>::alloc(0LL, _6397_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2ae2721_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6397_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b790133d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _64515_p = *it;
			{
				if ((_64515_p.len() == 0LL)) {
					goto _iter_next_1b790133d;
				};
				(*_6347_slc.alloc)._field_Exprs=jule::append((*_6347_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ae2721_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b3846e58_buildFromTokens(_self_, _64515_p); __jule_collection; }));
			}
			_iter_next_1b790133d:;
			++it;
			goto _iter_begin_1b790133d;
		}
		_iter_end_1b790133d:;
	};
	return _6347_slc;;
}



inline jule::Ptr<_1b2ae96d4_IndexingExpr> _1b3844e9a_buildIndexing(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _6567_tokens, jule::Ptr<_1b2ac7eba_Token> _65636_errorToken) {
	jule::Ptr<_1b2ac7eba_Token> _6577_end = _6567_tokens[(_6567_tokens.len() - 1LL)];;
	(_6567_tokens).mut_slice(1LL, (_6567_tokens.len() - 1LL));;
	if ((_6567_tokens.len() == 0LL)) {
		_1b383c3b0_pushErr(_self_, _65636_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2ae2721_Expr> _6637_expr = _1b3846e58_buildFromTokens(_self_, _65533_exprTokens);;
	if ((_6637_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2ae2721_Expr> _6677_index = _1b3846e58_buildFromTokens(_self_, _6567_tokens);;
	if ((_6677_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2ae96d4_IndexingExpr>(_1b2ae96d4_IndexingExpr{._field_Token=_65636_errorToken, ._field_End=_6577_end, ._field_Expr=_6637_expr, ._field_Index=_6677_index});;
}



inline jule::Ptr<_1b2ae9d44_SlicingExpr> _1b38455b6_buildSlicing(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _67967_start, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _6808_to, jule::Ptr<_1b2ac7eba_Token>* _68034_errorToken, jule::Ptr<_1b2ac7eba_Token> _68065_end) {
	jule::Ptr<_1b2ae9d44_SlicingExpr> _6817_slc = jule::new_ptr<_1b2ae9d44_SlicingExpr>(_1b2ae9d44_SlicingExpr{._field_Token=(*(_68034_errorToken)), ._field_End=_68065_end, ._field_Expr=_1b3846e58_buildFromTokens(_self_, (*(_67933_exprTokens))), ._field_Start=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_To=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
	if (((*(_67967_start)).len() > 0LL)) {
		(*(_6817_slc))._field_Start=_1b3846e58_buildFromTokens(_self_, (*(_67967_start)));
	};
	if (((*(_6808_to)).len() > 0LL)) {
		(*_6817_slc.alloc)._field_To=_1b3846e58_buildFromTokens(_self_, (*(_6808_to)));
	};
	return _6817_slc;;
}



inline jule::Any _1b3845907_buildBracketRange(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _69537_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _6967_errorToken = _69537_tokens[0LL];;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _6977_exprTokens;
	jule::I64 _69719_rangeN;
	({
		__jule_tuple_sx_1b2ac7eba_Token__jule_tuple_int __jule_assign_result = _1b38485ca_getRangeExprTokens(&(_69537_tokens));
		_6977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_69719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_6977_exprTokens.len() == 0LL)) {
		return jule::Any(_1b38449e4_buildSlice(_self_, _69537_tokens), &__jule_any_type96);;
	} else if ((_69719_rangeN > 0LL)) {
		_1b383c3b0_pushErr(_self_, _6967_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_69537_tokens).mut_slice(_6977_exprTokens.len());;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _7127_splitTokens = _69537_tokens.slice(1LL, (_69537_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _7137_start;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _71318_to;
	({
		__jule_tuple_sx_1b2ac7eba_Token__jule_tuple_sx_1b2ac7eba_Token __jule_assign_result = _1b3847c7d_splitDelim(&(_7127_splitTokens), static_cast<jule::U64>(8LLU));
		_7137_start = __jule_assign_result.__jule_result_arg0;
		_71318_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7137_start != nullptr) || (_71318_to != nullptr))) {
		return jule::Any(_1b38455b6_buildSlicing(_self_, &(_6977_exprTokens), &(_7137_start), &(_71318_to), &(_6967_errorToken), _69537_tokens[(_69537_tokens.len() - 1LL)]), &__jule_any_type107);;
	};
	return jule::Any(_1b3844e9a_buildIndexing(_self_, _6977_exprTokens, _69537_tokens, _6967_errorToken), &__jule_any_type106);;
}



inline jule::Any _1b3845c48_buildExclRight(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _72035_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _7213_token = (*(_72035_tokens))[((*(_72035_tokens)).len() - 1LL)];;
	((*(_72035_tokens))).mut_slice(0LL, ((*(_72035_tokens)).len() - 1LL));;
	jule::Any _7237_d = _1b38467c6_build(_self_, _72035_tokens);;
	if ((_7237_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7237_d };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1b790de1c:;
			{
				(*(_7237_d.unsafe_cast_ptr<_1b2ae644a_FnCallExpr>()))._field_Exception=jule::new_ptr<_1b2aed40d_ScopeTree>(_1b2aed40d_ScopeTree{._field_Parent=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1b2aecc9d_Stmt>(nullptr), ._field_End=jule::Ptr<_1b2ac7eba_Token>(nullptr)});
				return _7237_d;;
			}
		}
		_match_end_1b790e307:;
	};
	_1b383c3b0_pushErr(_self_, _7213_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1b3846089_buildData(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _73830_tokens) {
	{
		auto _match_expr{ (*(_73830_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b7910a23:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b7910a89:;
			{
				return _1b383d537_buildSingle(_self_, (*(_73830_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b7910b00:;
			{
				if (((*((*(_73830_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1b383d878_buildBindIdent(_self_, _73830_tokens), &__jule_any_type41);;
				};
			}
		}
		_match_end_1b79108e1:;
	};
	jule::Ptr<_1b2ac7eba_Token> _7507_token = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
	if (((*(_7507_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1b383ed1e_buildVariadic(_self_, (*(_73830_tokens))), &__jule_any_type78);;
	};
	_7507_token=(*(_73830_tokens))[0LL];
	if (_1b2ac8707_IsUnaryOp((*_7507_token.alloc)._field_Id)) {
		if (((*(_73830_tokens)).len() > 1LL)) {
			_7507_token=(*(_73830_tokens))[1LL];
			if (((*_7507_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1b383e68c_buildType(_self_, _73830_tokens), &__jule_any_type91);;
			};
		};
		return jule::Any(_1b383dbb9_buildUnary(_self_, (*(_73830_tokens))), &__jule_any_type90);;
	};
	if (((*(_73830_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7507_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1b79153b8:;
				{
					if (((*(_73830_tokens)).len() > 3LL)) {
						jule::Ptr<_1b2ac7eba_Token> _7766_t = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
						if (((*(_7766_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1b7915693;
						};
					};
					jule::Ptr<_1b2ac7eba_Token> _7825_next = (*(_73830_tokens))[1LL];;
					if (((*(_7825_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1b7915693;
					};
					return jule::Any(_1b383e68c_buildType(_self_, _73830_tokens), &__jule_any_type91);;
				}
			}
			_match_end_1b7915693:;
		};
	};
	_7507_token=(*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7507_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b7918894:;
			{
				return _1b383e9cd_buildSubIdent(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1b791890a:;
			{
				return _1b3845c48_buildExclRight(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1b7918971:;
			{
				return _1b3841848_buildParenthesesRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b79189d7:;
			{
				return _1b3844362_buildBraceRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b7918a4d:;
			{
				return _1b3845907_buildBracketRange(_self_, (*(_73830_tokens)));;
			}
		}
		_match_end_1b791882d:;
	};
	_1b383c3b0_pushErr(_self_, _7507_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1b3846485_buildBinary(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _80732_tokens, jule::I64 _80757_i) {
	jule::Ptr<_1b2ac7eba_Token> _8087_op = (*(_80732_tokens))[_80757_i];;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _8097_leftTokens = (*(_80732_tokens)).slice(0LL, _80757_i);;
	if ((_1b38472dd_isTypeOp(&((*(_8087_op))._field_Id)) && _1b38475eb_isTypeRange(&(_8097_leftTokens)))) {
		return jule::Any(_1b383e68c_buildType(_self_, _80732_tokens), &__jule_any_type91);;
	};
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _8147_rightTokens = (*(_80732_tokens)).slice((_80757_i + 1LL));;
	if ((_8097_leftTokens.len() == 0LL)) {
		_1b383c3b0_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8147_rightTokens.len() == 0LL)) {
		_1b383c3b0_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b383c723_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1b2ae5cda_BinaryExpr>(_1b2ae5cda_BinaryExpr{._field_Left=_1b3846e58_buildFromTokens(_self_, _8097_leftTokens), ._field_Right=_1b3846e58_buildFromTokens(_self_, _8147_rightTokens), ._field_Op=_8087_op}), &__jule_any_type111);;
}



inline jule::Any _1b38467c6_build(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _83226_tokens) {
	if (((*((*(_83226_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1b383e68c_buildType(_self_, _83226_tokens), &__jule_any_type91);;
	};
	jule::I64 _8363_i = _1b3848047_findLowestPrecOp(_83226_tokens);;
	if ((_8363_i == -1LL)) {
		return _1b3846089_buildData(_self_, _83226_tokens);;
	};
	return _1b3846485_buildBinary(_self_, _83226_tokens, _8363_i);;
}



inline jule::Any _1b3846b17_buildKind(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _84330_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _8447_parts;
	jule::Slice<_20daa5e91_Log> _84414_errors;
	({
		__jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b384b39c_parts(_84330_tokens, static_cast<jule::U64>(5LLU), true);
		_8447_parts = __jule_assign_result.__jule_result_arg0;
		_84414_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_84414_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_84414_errors);
		return nullptr;;
	} else if ((_8447_parts.len() > 1LL)) {
		return jule::Any(_1b383ca64_buildTuple(_self_, &(_8447_parts)), &__jule_any_type82);;
	};
	return _1b38467c6_build(_self_, _84330_tokens);;
}



inline jule::Ptr<_1b2ae2721_Expr> _1b3846e58_buildFromTokens(_1b383bbb7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _85435_tokens) {
	if ((_85435_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8587_kind = _1b3846b17_buildKind(_self_, &(_85435_tokens));;
	if ((_8587_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2ae2721_Expr>(_1b2ae2721_Expr{._field_Token=_85435_tokens[0LL], ._field_End=_85435_tokens[(_85435_tokens.len() - 1LL)], ._field_Kind=_8587_kind});;
}











inline void _1b384c7aa_stop(_1b384c47a_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1b384ca41_stopped(_1b384c47a_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1b384ce5e_pushErr(_1b384c47a_parser* _self_, jule::Ptr<_1b2ac7eba_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args) {
	{ jule::Slice<_20daa5e91_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b384ba62_compilerErr(&(_16923_token), &(_16945_fmt), _16965_args)); };
}



inline void _1b384d2c2_pushSuggestion(_1b384c47a_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args) {
	{
		_1b384be08_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _17430_fmt, _17450_args);
	};
}



inline jule::Ptr<_1b2ae2721_Expr> _1b384d613_buildExpr(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _17831_tokens) {
	return _1b3846e58_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_17831_tokens)));;
}



inline jule::Ptr<_1b2adc809_Directive> _1b384d954_buildDirective(_1b384c47a_parser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _18234_tokens) {
	if ((_18234_tokens.len() == 1LL)) {
		_1b384ce5e_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_18234_tokens[1LL]))._field_Column != ((*(_18234_tokens[0LL]))._field_Column + 1LL))) {
		_1b384ce5e_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b2adc809_Directive>(_1b2adc809_Directive{._field_Tag=_18234_tokens[1LL], ._field_Args=_18234_tokens.slice(2LL)});;
}



inline void _1b384dc0c_pushDirective(_1b384c47a_parser* _self_, jule::Ptr<_1b2adc809_Directive> _19733_d) {
	if ((_19733_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7945edc:;
		if (it != expr_end) {
			jule::Ptr<_1b2adc809_Directive> _20210_pd = *it;
			{
				if (((*((*(_19733_d))._field_Tag))._field_Kind == (*(*(_20210_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1b7945edc:;
			++it;
			goto _iter_begin_1b7945edc;
		}
		_iter_end_1b7945edc:;
	};
	{ jule::Slice<jule::Ptr<_1b2adc809_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_19733_d); };
}



inline jule::Ptr<_1b2aed40d_ScopeTree> _1b384e108_buildScope(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _21032_tokens, jule::Ptr<_1b2ac7eba_Token> _21061_end) {
	jule::Ptr<_1b2aed40d_ScopeTree> _2117_s = _1b382c67a_newScope();;
	(*(_2117_s))._field_End=_21061_end;
	_1b382e281_scopeParser _2137_sp = _1b382e281_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1b382d8e0_stmt>>(nullptr), ._field_pos=0};;
	_1b383b16c_build(&_2137_sp, _21032_tokens, &(_2117_s));
	return _2117_s;;
}



inline __jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool _1b384e5ae__buildType(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _22039_tokens, jule::I64* _2217_i, jule::Bool _22116_err) {
	__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1b385d634_typeBuilder _2227_tb = _1b385d634_typeBuilder{._field_p=_self_, ._field_tokens=(*(_22039_tokens)), ._field_i=_2217_i, ._field_err=_22116_err};;
	__jule_func_result = std::move(_1b3861648_build(&_2227_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool _1b384ea65_buildType(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _23238_tokens, jule::I64* _2337_i, jule::Bool _23316_err) {
	__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b2ac7eba_Token> _2343_token = (*(_23238_tokens))[(*(_2337_i))];;
	jule::Ptr<_1b2add3dc_TypeDecl> _2357_t;
	jule::Bool _23510_ok;
	({
		__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384e5ae__buildType(_self_, _23238_tokens, _2337_i, _23316_err);
		_2357_t = __jule_assign_result.__jule_result_arg0;
		_23510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_23316_err && (!(_23510_ok)))) {
		_1b384ce5e_pushErr(_self_, _2343_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2357_t;
	__jule_func_result.__jule_result_arg1 = _23510_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2b04e09_TypeAliasDecl> _1b384eda6_buildTypeAliasDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _24240_tokens) {
	jule::I64 _2437_i = 1LL;;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1b384ce5e_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2b04e09_TypeAliasDecl> _2487_tad = jule::new_ptr<_1b2b04e09_TypeAliasDecl>(_1b2b04e09_TypeAliasDecl{._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_24240_tokens))[1LL], ._field_Ident=(*((*(_24240_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr)});;
	jule::Ptr<_1b2ac7eba_Token> _2527_token = (*(_24240_tokens))[_2437_i];;
	if (((*(_2527_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b384ce5e_pushErr(_self_, _2527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1b384ce5e_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	_2527_token=(*(_24240_tokens))[_2437_i];
	if (((*_2527_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1b384ce5e_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1b384ce5e_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	jule::Ptr<_1b2add3dc_TypeDecl> _2737_t;
	jule::Bool _27310_ok;
	({
		__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, _24240_tokens, (&(_2437_i)), true);
		_2737_t = __jule_assign_result.__jule_result_arg0;
		_27310_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2487_tad))._field_Kind=_2737_t;
	if ((_27310_ok && (_2437_i < (*(_24240_tokens)).len()))) {
		_1b384ce5e_pushErr(_self_, (*(_24240_tokens))[_2437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2487_tad.alloc)._field_Public=_1b2d0029c_IsPub((*_2487_tad.alloc)._field_Ident);
	return _2487_tad;;
}



inline void _1b3850219_buildVarTypeAndExpr(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2b01257_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _28264_tokens) {
	jule::I64 _2837_i = 0LL;;
	jule::Ptr<_1b2ac7eba_Token> _2847_tok = (*(_28264_tokens))[_2837_i];;
	if (((*(_2847_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_2837_i)++;
		if (((_2837_i >= (*(_28264_tokens)).len()) || ((*((*(_28264_tokens))[_2837_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1b384ce5e_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1b2add3dc_TypeDecl> _2918_t;
		jule::Bool _29111_ok;
		({
			__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, _28264_tokens, (&(_2837_i)), true);
			_2918_t = __jule_assign_result.__jule_result_arg0;
			_29111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_29111_ok) {
			(*((*(_28241_v))))._field_Kind=_2918_t;
			if ((_2837_i >= (*(_28264_tokens)).len())) {
				return;;
			};
			_2847_tok=(*(_28264_tokens))[_2837_i];
		};
	};
	if (((*_2847_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1b384ce5e_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Setter=_2847_tok;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _3077_exprTokens = (*(_28264_tokens)).slice((_2837_i + 1LL));;
	if ((_3077_exprTokens.len() == 0LL)) {
		_1b384ce5e_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Expr=_1b384d613_buildExpr(_self_, &(_3077_exprTokens));
}



inline void _1b385057c_buildVarCommon(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2b01257_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _31558_tokens) {
	(*((*(_31536_v))))._field_Token=_31558_tokens[0LL];
	if (((*((*((*(_31536_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b384ce5e_pushErr(_self_.ptr(), (*((*(_31536_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_31536_v))))._field_Ident=(*(*((*(_31536_v))))._field_Token.alloc)._field_Kind;
	(*((*(_31536_v))))._field_Public=_1b2d0029c_IsPub((*((*(_31536_v))))._field_Ident);
	(*((*(_31536_v))))._field_Kind=nullptr;
	if ((_31558_tokens.len() > 1LL)) {
		(_31558_tokens).mut_slice(1LL);;
		_1b3850219_buildVarTypeAndExpr(_self_, _31536_v, &(_31558_tokens));
	};
}



inline void _1b38508e0_buildVarBegin(_1b384c47a_parser* _self_, jule::Ptr<_1b2b01257_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _33157_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _3323_tok = (*(_33157_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3323_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b79628dd:;
			{
				(*((*(_33134_v))))._field_Statically=true;
				goto _case_begin_1b796259c;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b796259c:;
			{
				if (((*(_33157_tokens)).len() == 1LL)) {
					(*(_33157_tokens))=nullptr;
					_1b384ce5e_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_33157_tokens))).mut_slice(1LL);;
				if (((*((*(_33157_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_33134_v))))._field_Mutable=true;
					((*(_33157_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b7962613:;
			{
				(*((*(_33134_v))))._field_Constant=true;
				((*(_33157_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1b796228e:;
			{
				(*(_33157_tokens))=nullptr;
				_1b384ce5e_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b7962536:;
	};
}



inline jule::Ptr<_1b2b01257_VarDecl> _1b3850c31_buildVar(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _35929_tokens) {
	jule::Ptr<_1b2b01257_VarDecl> _3607_v = jule::new_ptr<_1b2b01257_VarDecl>(_1b2b01257_VarDecl{._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_Token=_35929_tokens[0LL], ._field_Setter=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
	_1b38508e0_buildVarBegin(_self_.ptr(), &(_3607_v), &(_35929_tokens));
	if ((_35929_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_35929_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3607_v))._field_Reference=true;
		if ((_35929_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_35929_tokens).mut_slice(1LL);;
	};
	_1b385057c_buildVarCommon(_self_, &(_3607_v), _35929_tokens);
	return _3607_v;;
}



inline jule::Ptr<_1b2aea5e7_GenericDecl> _1b3851072_buildGeneric(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _37834_tokens) {
	jule::Ptr<_1b2aea5e7_GenericDecl> _3797_g = jule::new_ptr<_1b2aea5e7_GenericDecl>(_1b2aea5e7_GenericDecl{._field_Token=(*(_37834_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1b2aea141_Constraint>(nullptr)});;
	if (((*((*(_3797_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b384ce5e_pushErr(_self_.ptr(), (*_3797_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_3797_g.alloc)._field_Ident=(*(*(_3797_g))._field_Token.alloc)._field_Kind;
	if (((*(_37834_tokens)).len() > 1LL)) {
		if (((*((*(_37834_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1b384ce5e_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_37834_tokens)).len() == 2LL)) {
			_1b384ce5e_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _3968_constraintTokens = (*(_37834_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _3978_parts;
		jule::Slice<_20daa5e91_Log> _39715_errors;
		({
			__jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b384b39c_parts(&(_3968_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_3978_parts = __jule_assign_result.__jule_result_arg0;
			_39715_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_39715_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_39715_errors);
			return nullptr;;
		};
		(*_3797_g.alloc)._field_Constraint=jule::new_ptr<_1b2aea141_Constraint>(_1b2aea141_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>::alloc(0LL, _3978_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2add3dc_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_3978_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b79707b9:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _40316_part = *it;
				{
					jule::I64 _4049_i = 0LL;;
					jule::Ptr<_1b2add3dc_TypeDecl> _4059_kind;
					({
						__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, &(_40316_part), (&(_4049_i)), true);
						_4059_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_3797_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_3797_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4059_kind; __jule_collection; }));
					if ((_4049_i < _40316_part.len())) {
						_1b384ce5e_pushErr(_self_, _40316_part[_4049_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b79707b9:;
				++it;
				goto _iter_begin_1b79707b9;
			}
			_iter_end_1b79707b9:;
		};
	};
	return _3797_g;;
}



inline jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> _1b385146d_buildGenerics(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _41535_tokens, jule::Ptr<_1b2ac7eba_Token>* _41561_errorToken) {
	if (((*(_41535_tokens)).len() == 0LL)) {
		_1b384ce5e_pushErr(_self_.ptr(), (*(_41561_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _4217_parts;
	jule::Slice<_20daa5e91_Log> _42114_errors;
	({
		__jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b384b39c_parts(_41535_tokens, static_cast<jule::U64>(5LLU), true);
		_4217_parts = __jule_assign_result.__jule_result_arg0;
		_42114_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_42114_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_42114_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> _4277_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>::alloc(0LL, _4217_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2aea5e7_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7975d41:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _42815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>> &__jule_push_dest = _4277_generics; __jule_push_dest.push(_1b3851072_buildGeneric(_self_, &(_42815_part))); };
			}
			_iter_next_1b7975d41:;
			++it;
			goto _iter_begin_1b7975d41;
		}
		_iter_end_1b7975d41:;
	};
	return _4277_generics;;
}



inline jule::Ptr<_1b2aedb4a_ParamDecl> _1b38517ae_buildSelfParam(_1b384c47a_parser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _43534_tokens) {
	if ((_43534_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1b2aedb4a_ParamDecl> _4407_param = jule::new_ptr<_1b2aedb4a_ParamDecl>(_1b2aedb4a_ParamDecl{._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4407_param.alloc)._field_Mutable=true;
		if ((_43534_tokens.len() == 1LL)) {
			_1b384ce5e_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	_20d8ca601_Builder _4527_ident = static__20d8cb1c3_New(5LL);;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_20d8d4ac2_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
		if ((_43534_tokens.len() == 1LL)) {
			_1b384ce5e_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_20d8d4ac2_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("self", 4)));
		(*_4407_param.alloc)._field_Token=_43534_tokens[0LL];
		if ((_43534_tokens.len() != 1LL)) {
			_1b384ce5e_pushErr(_self_, _43534_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4407_param.alloc)._field_Ident=_20d8d53b9_Str(&_4527_ident);
	return _4407_param;;
}



inline void _1b3851bcc_paramTypeBegin(_1b384c47a_parser* _self_, jule::Ptr<_1b2aedb4a_ParamDecl>* _47535_param, jule::I64* _47564_i, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _47573_tokens) {
	for (; ((*(_47564_i)) < (*(_47573_tokens)).len()); ((*(_47564_i)))++) {
		{
			jule::Ptr<_1b2ac7eba_Token> _4774_token = (*(_47573_tokens))[(*(_47564_i))];;
			if (((*(_4774_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_47535_param))))._field_Variadic) {
				_1b384ce5e_pushErr(_self_, _4774_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1b797d91a;
			};
			(*((*(_47535_param))))._field_Variadic=true;
		}
	_iter_next_1b797d91a:;
	}
	_iter_end_1b797d91a:;;
}



inline void _1b3852040_buildParamType(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2aedb4a_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _49065_tokens) {
	jule::I64 _4917_i = 0LL;;
	_1b3851bcc_paramTypeBegin(_self_.ptr(), _49036_param, &(_4917_i), _49065_tokens);
	if ((_4917_i >= (*(_49065_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, _49065_tokens, (&(_4917_i)), true);
		(*((*(_49036_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_4917_i < (*(_49065_tokens)).len())) {
		_1b384ce5e_pushErr(_self_, (*(_49065_tokens))[_4917_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1b38523a3_buildParamBody(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2aedb4a_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _50364_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _5047_tok = _50364_tokens[0LL];;
	if ((_50364_tokens.len() == 1LL)) {
		(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
		return;;
	} else if ((_50364_tokens.len() < 3LL)) {
		_1b384ce5e_pushErr(_self_.ptr(), _5047_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_50364_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_50336_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1b3852040_buildParamType(_self_, _50336_param, &(_50364_tokens));
		return;;
	};
	(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
	(_50364_tokens).mut_slice(2LL);;
	_1b3852040_buildParamType(_self_, _50336_param, &(_50364_tokens));
}



inline jule::Ptr<_1b2aedb4a_ParamDecl> _1b38526e4_buildParam(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _52331_tokens) {
	jule::Ptr<_1b2aedb4a_ParamDecl> _5247_param = jule::new_ptr<_1b2aedb4a_ParamDecl>(_1b2aedb4a_ParamDecl{._field_Token=_52331_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5247_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5247_param.alloc)._field_Mutable=true;
		if ((_52331_tokens.len() == 1LL)) {
			_1b384ce5e_pushErr(_self_.ptr(), _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_52331_tokens).mut_slice(1LL);;
		(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
	};
	if ((_52331_tokens.len() >= 3LL)) {
		if (((*(*(_5247_param))._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_52331_tokens.len() == 1LL)) {
				_1b384ce5e_pushErr(_self_, _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_52331_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_52331_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5247_param.alloc)._field_Reference=true;
				(_52331_tokens).mut_slice(1LL);;
				(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
			};
		};
	};
	if (((*(*(_5247_param))._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5247_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1b3852040_buildParamType(_self_, &(_5247_param), &(_52331_tokens));
	} else {
		_1b38523a3_buildParamBody(_self_, &(_5247_param), _52331_tokens);
	};
	return _5247_param;;
}



inline void _1b385299c_checkParams(_1b384c47a_parser* _self_, jule::Slice<jule::Ptr<_1b2aedb4a_ParamDecl>>* _56632_params) {
	{
		auto expr = _56632_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b798e2cc:;
		if (it != expr_end) {
			jule::Ptr<_1b2aedb4a_ParamDecl> _56715_param = *it;
			{
				if ((_1b2aee002_IsSelf(_56715_param.ptr()) || ((*_56715_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1b798e2cc;
				};
				if (((*_56715_param.alloc)._field_Token == nullptr)) {
					_1b384ce5e_pushErr(_self_, (*_56715_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*_56715_param.alloc)._field_Kind=jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1b2add9e7_IdentTypeDecl>(_1b2add9e7_IdentTypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Ident=(*((*_56715_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>(nullptr)}), &__jule_any_type77)});
					(*_56715_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1b798e2cc:;
			++it;
			goto _iter_begin_1b798e2cc;
		}
		_iter_end_1b798e2cc:;
	};
}



inline jule::Slice<jule::Ptr<_1b2aedb4a_ParamDecl>> _1b3852d98_buildParams(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _58633_tokens, jule::Bool _58658_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _5877_parts;
	jule::Slice<_20daa5e91_Log> _58714_errs;
	({
		__jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b384b39c_parts(_58633_tokens, static_cast<jule::U64>(5LLU), true);
		_5877_parts = __jule_assign_result.__jule_result_arg0;
		_58714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_58714_errs);
	if ((_5877_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2aedb4a_ParamDecl>> _59311_params = nullptr;;
	if ((_58658_method && (_5877_parts.len() > 0LL))) {
		jule::Ptr<_1b2aedb4a_ParamDecl> _5958_param = _1b38517ae_buildSelfParam(_self_, _5877_parts[0LL]);;
		if (((_5958_param != nullptr) && _1b2aee002_IsSelf(_5958_param))) {
			{ jule::Slice<jule::Ptr<_1b2aedb4a_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_5958_param); };
			(_5877_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_5877_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7995da5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _60215_part = *it;
			{
				if ((_60215_part.len() == 0LL)) {
					goto _iter_next_1b7995da5;
				};
				jule::Ptr<_1b2aedb4a_ParamDecl> _6068_param = _1b38526e4_buildParam(_self_, _60215_part);;
				if ((_6068_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1b2aedb4a_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_6068_param); };
				};
			}
			_iter_next_1b7995da5:;
			++it;
			goto _iter_begin_1b7995da5;
		}
		_iter_end_1b7995da5:;
	};
	_1b385299c_checkParams(_self_, &(_59311_params));
	return _59311_params;;
}



inline __jule_tuple_x_1b2ae12d0_RetTypeDecl__jule_tuple_bool _1b3853294_buildMultiRetType(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _61639_tokens, jule::I64* _61669_i) {
	__jule_tuple_x_1b2ae12d0_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1b2ae12d0_RetTypeDecl>(_1b2ae12d0_RetTypeDecl{._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1b2ac7eba_Token>>(nullptr)});
	((*(_61669_i)))++;
	if (((*(_61669_i)) >= (*(_61639_tokens)).len())) {
		((*(_61669_i)))--;
		({
			__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, _61639_tokens, (&((*(_61669_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_61669_i)))--;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _6267_rangeTokens = _1b384ab2c_range(_61669_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _61639_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _6287_parts;
	jule::Slice<_20daa5e91_Log> _62814_errs;
	({
		__jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b384b39c_parts(&(_6267_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_62814_errs);
	if ((_6287_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> _6347_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2add3dc_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ac7eba_Token>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2ac7eba_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6287_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b799be88:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _63615_part = *it;
			{
				if ((_63615_part.len() == 0LL)) {
					goto _iter_next_1b799be88;
				};
				jule::Ptr<_1b2ac7eba_Token> _6408_token = _63615_part[0LL];;
				jule::I64 _6418_offset = 0LL;;
				if ((_63615_part.len() > 1LL)) {
					_6408_token=_63615_part[1LL];
					if (((*(_6408_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6418_offset=2LL;
						if ((_63615_part.len() < 3LL)) {
							_1b384ce5e_pushErr(_self_, _6408_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1b799be88;
						};
					};
				};
				_6408_token=_63615_part[0LL];
				if ((_6418_offset != 2LL)) {
					jule::Ptr<_1b2ac7eba_Token> _6579_newToken = jule::new_ptr<_1b2ac7eba_Token>((*_6408_token.alloc));;
					(*_6579_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ac7eba_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6579_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ac7eba_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6408_token; __jule_collection; }));
				};
				jule::Ptr<_1b2add3dc_TypeDecl> _6648_tk;
				({
					__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, &(_63615_part), (&(_6418_offset)), true);
					_6648_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6418_offset < _63615_part.len())) {
					_1b384ce5e_pushErr(_self_, _63615_part[_6418_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> &__jule_push_dest = _6347_types; __jule_push_dest.push(_6648_tk); };
			}
			_iter_next_1b799be88:;
			++it;
			goto _iter_begin_1b799be88;
		}
		_iter_end_1b799be88:;
	};
	if ((_6347_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=(*(_61639_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1b2adeb19_TupleTypeDecl>(_1b2adeb19_TupleTypeDecl{._field_Types=_6347_types}), &__jule_any_type76)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6347_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b2ae12d0_RetTypeDecl__jule_tuple_bool _1b3853690_buildRetType(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _68734_tokens, jule::I64* _68764_i) {
	__jule_tuple_x_1b2ae12d0_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1b2ae12d0_RetTypeDecl>(_1b2ae12d0_RetTypeDecl{._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1b2ac7eba_Token>>(nullptr)});
	if (((*(_68764_i)) >= (*(_68734_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1b2ac7eba_Token> _6937_token = (*(_68734_tokens))[(*(_68764_i))];;
	{
		auto &_match_expr{ (*(_6937_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1b79a602a:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1b79a60a2:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1b79a6118:;
			{
				if ((((*(_68764_i)) + 1LL) >= (*(_68734_tokens)).len())) {
					_1b384ce5e_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_68764_i)))++;
				_6937_token=(*(_68734_tokens))[(*(_68764_i))];
				{
					auto &_match_expr{ (*(_6937_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b79a6ec6:;
						{
							({
								__jule_tuple_x_1b2ae12d0_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b3853294_buildMultiRetType(_self_, _68734_tokens, _68764_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b79a813c:;
						{
							_1b384ce5e_pushErr(_self_, _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1b79a8093:;
				};
				({
					__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, _68734_tokens, (&((*(_68764_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1b79a5eb4:;
	};
	((*(_68764_i)))++;
	_1b384ce5e_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1b2b0009c_FnDecl> _1b3853b46_buildFnPrototype(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _72638_tokens, jule::I64* _72668_i, jule::Bool _72676_method) {
	jule::Ptr<_1b2b0009c_FnDecl> _7277_f = jule::new_ptr<_1b2b0009c_FnDecl>(_1b2b0009c_FnDecl{._field_Token=(*(_72638_tokens))[(*(_72668_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1b2ae12d0_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2aedb4a_ParamDecl>>(nullptr)});;
	if (((*((*(_7277_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7277_f.alloc)._field_Statically=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1b384ce5e_pushErr(_self_.ptr(), (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	if (((*(*(_7277_f))._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7277_f.alloc)._field_Unsafety=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1b384ce5e_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	((*(_72668_i)))++;
	if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
		_1b384ce5e_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2ac7eba_Token> _7603_tok = (*(_72638_tokens))[(*(_72668_i))];;
	if (((*(_7603_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1b384ce5e_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Ident=(*_7603_tok.alloc)._field_Kind;
	} else {
		(*_7277_f.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1b2ac7eba_Token> _7723_errorToken = (*(_72638_tokens))[(*(_72668_i))];;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _7737_genericsTokens = _1b384ab2c_range(_72668_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _72638_tokens);;
	if ((_7737_genericsTokens != nullptr)) {
		(*_7277_f.alloc)._field_Generics=_1b385146d_buildGenerics(_self_, &(_7737_genericsTokens), &(_7723_errorToken));
	};
	if (((*((*(_72638_tokens))[(*(_72668_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1b384ce5e_pushErr(_self_, (*(_72638_tokens))[(*(_72668_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _7837_paramsToks = _1b384ab2c_range(_72668_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _72638_tokens);;
	if ((_7837_paramsToks.len() > 0LL)) {
		(*_7277_f.alloc)._field_Params=_1b3852d98_buildParams(_self_, &(_7837_paramsToks), _72676_method);
	};
	if (((*(_72668_i)) < (*(_72638_tokens)).len())) {
		jule::Ptr<_1b2ac7eba_Token> _7894_token = (*(_72638_tokens))[(*(_72668_i))];;
		if (((*(_7894_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7277_f.alloc)._field_Exceptional=true;
			((*(_72668_i)))++;
		};
	};
	(*_7277_f.alloc)._field_Public=_1b2d0029c_IsPub((*_7277_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1b2ae12d0_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b3853690_buildRetType(_self_, _72638_tokens, _72668_i);
		(*_7277_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7277_f;;
}



inline jule::Ptr<_1b2b0009c_FnDecl> _1b38540ec_buildFn(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype) {
	jule::I64 _8047_i = 0LL;;
	jule::Ptr<_1b2b0009c_FnDecl> _8057_f = _1b3853b46_buildFnPrototype(_self_, _80329_tokens, &(_8047_i), _80354_method);;
	if (_80368_prototype) {
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1b384ce5e_pushErr(_self_, (*(_80329_tokens))[(_8047_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8057_f;;
	} else if ((_8057_f == nullptr)) {
		return _8057_f;;
	};
	if ((_8047_i >= (*(_80329_tokens)).len())) {
		_1b384c7aa_stop(_self_);
		_1b384ce5e_pushErr(_self_, (*(_8057_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _8217_blockTokens = _1b384ab2c_range(&(_8047_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _80329_tokens);;
	if ((_8217_blockTokens != nullptr)) {
		(*_8057_f.alloc)._field_Scope=_1b384e108_buildScope(_self_, &(_8217_blockTokens), (*(_80329_tokens))[(_8047_i - 1LL)]);
		(*((*_8057_f.alloc)._field_Scope))._field_Unsafety=(*_8057_f.alloc)._field_Unsafety;
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1b384ce5e_pushErr(_self_, (*(_80329_tokens))[_8047_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1b384c7aa_stop(_self_);
		_1b384ce5e_pushErr(_self_, (*_8057_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8057_f;;
}



inline void _1b3854460_buildBindUseDecl(_1b384c47a_parser* _self_, jule::Ptr<_1b2b0625c_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _83763_tokens) {
	if (((*(_83763_tokens)).len() > 1LL)) {
		_1b384ce5e_pushErr(_self_, (*(_83763_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b2ac7eba_Token> _8417_token = (*(_83763_tokens))[0LL];;
	if ((((*(_8417_token))._field_Id != static_cast<jule::U64>(4LLU)) || (!(_1b2ac9120_IsStr((*_8417_token.alloc)._field_Kind))))) {
		_1b384ce5e_pushErr(_self_, _8417_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_83737_decl))))._field_Binded=true;
	(*((*(_83737_decl))))._field_Path=_8417_token;
}



inline void _1b38547c3_parseUseDecl(_1b384c47a_parser* _self_, jule::Ptr<_1b2b0625c_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _85058_tokens) {
	if ((*((*(_85033_decl))))._field_Binded) {
		_1b3854460_buildBindUseDecl(_self_, _85033_decl, &(_85058_tokens));
		return;;
	};
	jule::Ptr<_1b2ac7eba_Token> _8567_token = _85058_tokens[0LL];;
	if (((((*(_8567_token))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8567_token.alloc)._field_Id != static_cast<jule::U64>(4LLU))) && (!(_1b2ac9120_IsStr((*_8567_token.alloc)._field_Kind))))) {
		_1b384ce5e_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_8567_token.alloc)._field_Id == static_cast<jule::U64>(1LLU))) {
		(*((*(_85033_decl))))._field_Alias=_8567_token;
		(_85058_tokens).mut_slice(1LL);;
		if ((_85058_tokens.len() == 0LL)) {
			_1b384ce5e_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
		_8567_token=_85058_tokens[0LL];
		if ((((*_8567_token.alloc)._field_Id != static_cast<jule::U64>(4LLU)) || (!(_1b2ac9120_IsStr((*_8567_token.alloc)._field_Kind))))) {
			_1b384ce5e_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
	};
	(*((*(_85033_decl))))._field_Path=_8567_token;
}



inline jule::Ptr<_1b2b0625c_UseDecl> _1b3854bbe_buildUseDecl(_1b384c47a_parser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _87932_tokens, jule::Bool _87957_binded) {
	jule::Ptr<_1b2b0625c_UseDecl> _8807_decl = jule::new_ptr<_1b2b0625c_UseDecl>(_1b2b0625c_UseDecl{._field_Token=_87932_tokens[0LL], ._field_Path=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Alias=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Binded=_87957_binded});;
	if ((_87932_tokens.len() < 2LL)) {
		_1b384ce5e_pushErr(_self_, (*(_8807_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_87932_tokens).mut_slice(1LL);;
	_1b38547c3_parseUseDecl(_self_, &(_8807_decl), _87932_tokens);
	return _8807_decl;;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b38550ba_buildTypeEnumItemKind(jule::Ptr<_1b384c47a_parser> _self_, jule::I64* _89343_i, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _89356_tokens) {
	jule::I64 _8947_braceN = 0LL;;
	jule::I64 _8953_exprStart = (*(_89343_i));;
	for (; ((*(_89343_i)) < (*(_89356_tokens)).len()); ((*(_89343_i)))++) {
		{
			jule::Ptr<_1b2ac7eba_Token> _8974_t = (*(_89356_tokens))[(*(_89343_i))];;
			{
				auto &_match_expr{ (*(_8974_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b79cc6a0:;
					{
						(_8947_braceN)++;
						goto _iter_next_1b79cbb33;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b79cc9d0:;
					{
						(_8947_braceN)--;
					}
				}
				_match_end_1b79cc727:;
			};
			if ((_8947_braceN > 0LL)) {
				goto _iter_next_1b79cbb33;
			};
			if ((((*(_8974_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_89343_i)) + 1LL) >= (*(_89356_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _91313_kindTokens = nullptr;;
				if (((*_8974_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_91313_kindTokens=(*(_89356_tokens)).slice(_8953_exprStart, (*(_89343_i)));
				} else {
					_91313_kindTokens=(*(_89356_tokens)).slice(_8953_exprStart);
				};
				jule::I64 _9199_j = 0LL;;
				jule::Ptr<_1b2add3dc_TypeDecl> _9209_kind;
				({
					__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, &(_91313_kindTokens), (&(_9199_j)), true);
					_9209_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_9199_j < _91313_kindTokens.len())) {
					_1b384ce5e_pushErr(_self_, _91313_kindTokens[_9199_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _9209_kind;;
			};
		}
	_iter_next_1b79cbb33:;
	}
	_iter_end_1b79cbb33:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1b2b07aee_TypeEnumItemDecl>> _1b385540b_buildTypeEnumItems(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _93040_tokens) {
	jule::Slice<jule::Ptr<_1b2b07aee_TypeEnumItemDecl>> _9317_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b07aee_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2b07aee_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _9327_i = 0LL;;
	for (; (_9327_i < (*(_93040_tokens)).len()); (_9327_i)++) {
		{
			jule::Ptr<_1b2ac7eba_Token> _9348_t = (*(_93040_tokens))[_9327_i];;
			jule::Ptr<_1b2b07aee_TypeEnumItemDecl> _9358_item = jule::new_ptr<_1b2b07aee_TypeEnumItemDecl>(_1b2b07aee_TypeEnumItemDecl{._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr)});;
			(*_9358_item.alloc)._field_Token=_9348_t;
			if ((((*((*_9358_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_93040_tokens)).len() - _9327_i) > 2LL))) {
				_9348_t=(*(_93040_tokens))[(_9327_i + 1LL)];
				if (((*(_9348_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_9358_item.alloc)._field_Ident=(*(*(_9358_item))._field_Token.alloc)._field_Kind;
					_9327_i+=2LL;
					if (((_9327_i >= (*(_93040_tokens)).len()) || ((*((*(_93040_tokens))[_9327_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1b384ce5e_pushErr(_self_.ptr(), _9348_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1b79d2980;
					};
				};
			};
			(*_9358_item.alloc)._field_Kind=_1b38550ba_buildTypeEnumItemKind(_self_, &(_9327_i), _93040_tokens);
			{ jule::Slice<jule::Ptr<_1b2b07aee_TypeEnumItemDecl>> &__jule_push_dest = _9317_items; __jule_push_dest.push(_9358_item); };
		}
	_iter_next_1b79d2980:;
	}
	_iter_end_1b79d2980:;;
	return _9317_items;;
}



inline jule::Ptr<_1b2b0825e_TypeEnumDecl> _1b385574c_buildTypeEnumDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _95439_tokens) {
	jule::I64 _9557_i = 1LL;;
	jule::Ptr<_1b2b0825e_TypeEnumDecl> _9567_e = jule::new_ptr<_1b2b0825e_TypeEnumDecl>(_1b2b0825e_TypeEnumDecl{._field_Token=(*(_95439_tokens))[_9557_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1b2b07aee_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1b2ac7eba_Token>(nullptr)});;
	if (((*((*(_9567_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b384ce5e_pushErr(_self_.ptr(), (*_9567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_9567_e.alloc)._field_Ident=(*(*(_9567_e))._field_Token.alloc)._field_Kind;
	_9557_i+=3LL;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _9667_itemTokens = _1b384ab2c_range(&(_9557_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _95439_tokens);;
	if ((_9667_itemTokens == nullptr)) {
		_1b384c7aa_stop(_self_);
		_1b384ce5e_pushErr(_self_, (*_9567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _9567_e;;
	} else if ((_9557_i < (*(_95439_tokens)).len())) {
		_1b384ce5e_pushErr(_self_, (*(_95439_tokens))[_9557_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_9567_e.alloc)._field_Public=_1b2d0029c_IsPub((*_9567_e.alloc)._field_Ident);
	(*_9567_e.alloc)._field_End=(*(_95439_tokens))[(_9557_i - 1LL)];
	(*_9567_e.alloc)._field_Items=_1b385540b_buildTypeEnumItems(_self_, &(_9667_itemTokens));
	return _9567_e;;
}



inline jule::Ptr<_1b2ae2721_Expr> _1b3855b48_buildEnumItemExpr(jule::Ptr<_1b384c47a_parser> _self_, jule::I64* _98139_i, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _98152_tokens) {
	jule::I64 _9827_braceN = 0LL;;
	jule::I64 _9833_exprStart = (*(_98139_i));;
	for (; ((*(_98139_i)) < (*(_98152_tokens)).len()); ((*(_98139_i)))++) {
		{
			jule::Ptr<_1b2ac7eba_Token> _9854_t = (*(_98152_tokens))[(*(_98139_i))];;
			{
				auto &_match_expr{ (*(_9854_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b79e0d56:;
					{
						(_9827_braceN)++;
						goto _iter_next_1b79e02d9;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b79e1186:;
					{
						(_9827_braceN)--;
					}
				}
				_match_end_1b79e0dcd:;
			};
			if ((_9827_braceN > 0LL)) {
				goto _iter_next_1b79e02d9;
			};
			if ((((*(_9854_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_98139_i)) + 1LL) >= (*(_98152_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _100113_exprTokens = nullptr;;
				if (((*_9854_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_100113_exprTokens=(*(_98152_tokens)).slice(_9833_exprStart, (*(_98139_i)));
				} else {
					_100113_exprTokens=(*(_98152_tokens)).slice(_9833_exprStart);
				};
				return _1b384d613_buildExpr(_self_, &(_100113_exprTokens));;
			};
		}
	_iter_next_1b79e02d9:;
	}
	_iter_end_1b79e02d9:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1b2b06713_EnumItemDecl>> _1b3855e89_buildEnumItems(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _101336_tokens) {
	jule::Slice<jule::Ptr<_1b2b06713_EnumItemDecl>> _10147_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b06713_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2b06713_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _10157_i = 0LL;;
	for (; (_10157_i < (*(_101336_tokens)).len()); (_10157_i)++) {
		{
			jule::Ptr<_1b2ac7eba_Token> _10178_t = (*(_101336_tokens))[_10157_i];;
			jule::Ptr<_1b2b06713_EnumItemDecl> _10188_item = jule::new_ptr<_1b2b06713_EnumItemDecl>(_1b2b06713_EnumItemDecl{._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
			(*_10188_item.alloc)._field_Token=_10178_t;
			if (((*((*_10188_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1b384ce5e_pushErr(_self_.ptr(), (*_10188_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_10188_item.alloc)._field_Ident=(*(*(_10188_item))._field_Token.alloc)._field_Kind;
			if ((((_10157_i + 1LL) >= (*(_101336_tokens)).len()) || ((*((*(_101336_tokens))[(_10157_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_10157_i + 1LL) < (*(_101336_tokens)).len())) {
					(_10157_i)++;
				};
				{ jule::Slice<jule::Ptr<_1b2b06713_EnumItemDecl>> &__jule_push_dest = _10147_items; __jule_push_dest.push(_10188_item); };
				goto _iter_next_1b79e4c17;
			};
			(_10157_i)++;
			_10178_t=(*(_101336_tokens))[_10157_i];
			(_10157_i)++;
			if (((*(_10178_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1b384ce5e_pushErr(_self_, _10178_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1b79e4c17;
			};
			if (((_10157_i >= (*(_101336_tokens)).len()) || ((*((*(_101336_tokens))[_10157_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1b384ce5e_pushErr(_self_, _10178_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1b79e4c17;
			};
			(*_10188_item.alloc)._field_Expr=_1b3855b48_buildEnumItemExpr(_self_, &(_10157_i), _101336_tokens);
			{ jule::Slice<jule::Ptr<_1b2b06713_EnumItemDecl>> &__jule_push_dest = _10147_items; __jule_push_dest.push(_10188_item); };
		}
	_iter_next_1b79e4c17:;
	}
	_iter_end_1b79e4c17:;;
	return _10147_items;;
}



inline jule::Ptr<_1b2b072c4_EnumDecl> _1b38562ca_buildEnumDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _105035_tokens) {
	if (((*(_105035_tokens)).len() < 3LL)) {
		_1b384ce5e_pushErr(_self_.ptr(), (*(_105035_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2b072c4_EnumDecl> _10557_e = jule::new_ptr<_1b2b072c4_EnumDecl>(_1b2b072c4_EnumDecl{._field_Token=(*(_105035_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1b2b06713_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1b2ac7eba_Token>(nullptr)});;
	if (((*((*(_10557_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b384ce5e_pushErr(_self_, (*_10557_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_10557_e.alloc)._field_Ident=(*(*(_10557_e))._field_Token.alloc)._field_Kind;
	jule::I64 _10637_i = 2LL;;
	if (((*((*(_105035_tokens))[_10637_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_10637_i)++;
		if ((_10637_i >= (*(_105035_tokens)).len())) {
			_1b384ce5e_pushErr(_self_, (*(_105035_tokens))[(_10637_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _10557_e;;
		};
		({
			__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, _105035_tokens, (&(_10637_i)), true);
			(*_10557_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_10637_i >= (*(_105035_tokens)).len())) {
			_1b384c7aa_stop(_self_);
			_1b384ce5e_pushErr(_self_, (*_10557_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _10557_e;;
		};
	} else {
		(*_10557_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _10807_itemTokens = _1b384ab2c_range(&(_10637_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _105035_tokens);;
	if ((_10807_itemTokens == nullptr)) {
		_1b384c7aa_stop(_self_);
		_1b384ce5e_pushErr(_self_, (*_10557_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _10557_e;;
	} else if ((_10637_i < (*(_105035_tokens)).len())) {
		_1b384ce5e_pushErr(_self_, (*(_105035_tokens))[_10637_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_10557_e.alloc)._field_Public=_1b2d0029c_IsPub((*_10557_e.alloc)._field_Ident);
	(*_10557_e.alloc)._field_End=(*(_105035_tokens))[(_10637_i - 1LL)];
	(*_10557_e.alloc)._field_Items=_1b3855e89_buildEnumItems(_self_, &(_10807_itemTokens));
	return _10557_e;;
}



inline jule::Any _1b385661b_buildNodeEnumDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _109539_tokens) {
	if ((((*(_109539_tokens)).len() > 3LL) && ((*((*(_109539_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_109539_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1b385574c_buildTypeEnumDecl(_self_, _109539_tokens), &__jule_any_type70);;
		};
	};
	return jule::Any(_1b38562ca_buildEnumDecl(_self_, _109539_tokens), &__jule_any_type69);;
}



inline jule::Ptr<_1b2b08528_FieldDecl> _1b385695c_buildField(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _110431_tokens) {
	jule::Ptr<_1b2b08528_FieldDecl> _11057_f = jule::new_ptr<_1b2b08528_FieldDecl>(_1b2b08528_FieldDecl{._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
	(*_11057_f.alloc)._field_Mutable=((*(_110431_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_11057_f.alloc)._field_Mutable) {
		if ((_110431_tokens.len() == 1LL)) {
			_1b384ce5e_pushErr(_self_.ptr(), _110431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110431_tokens).mut_slice(1LL);;
	};
	(*_11057_f.alloc)._field_Token=_110431_tokens[0LL];
	if (((*((*_11057_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b384ce5e_pushErr(_self_, (*_11057_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_11057_f.alloc)._field_Ident=(*(*(_11057_f))._field_Token.alloc)._field_Kind;
	if ((_110431_tokens.len() == 1LL)) {
		_1b384ce5e_pushErr(_self_, _110431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_110431_tokens.len() < 3LL) || ((*(_110431_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1b384ce5e_pushErr(_self_, _110431_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_110431_tokens).mut_slice(2LL);;
	jule::I64 _11337_i = 0LL;;
	({
		__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, &(_110431_tokens), (&(_11337_i)), true);
		(*_11057_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_11337_i < _110431_tokens.len())) {
		jule::Ptr<_1b2ac7eba_Token> _11364_token = _110431_tokens[_11337_i];;
		if (((*(_11364_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1b384ce5e_pushErr(_self_, _110431_tokens[_11337_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_11337_i)++;
		if ((_11337_i >= _110431_tokens.len())) {
			_1b384ce5e_pushErr(_self_, _11364_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110431_tokens).mut_slice(_11337_i);;
		(*_11057_f.alloc)._field_Default=_1b384d613_buildExpr(_self_, &(_110431_tokens));
	};
	(*_11057_f.alloc)._field_Public=_1b2d0029c_IsPub((*_11057_f.alloc)._field_Ident);
	return _11057_f;;
}



inline jule::Slice<jule::Ptr<_1b2b08528_FieldDecl>> _1b3856c9d_buildStructDeclFields(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _115342_tokens) {
	jule::Slice<jule::Ptr<_1b2b08528_FieldDecl>> _115411_fields = nullptr;;
	jule::Slice<jule::Ptr<_1b382d8e0_stmt>> _11557_stmts = _1b382dc97_splitStmts(&(_115342_tokens));;
	{
		auto expr = &(_11557_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a16b18:;
		if (it != expr_end) {
			jule::Ptr<_1b382d8e0_stmt> _115615_stmt = *it;
			{
				_115342_tokens=(*(_115615_stmt))._field_tokens;
				jule::Ptr<_1b2b08528_FieldDecl> _11588_f = _1b385695c_buildField(_self_, _115342_tokens);;
				{ jule::Slice<jule::Ptr<_1b2b08528_FieldDecl>> &__jule_push_dest = _115411_fields; __jule_push_dest.push(_11588_f); };
			}
			_iter_next_1b7a16b18:;
			++it;
			goto _iter_begin_1b7a16b18;
		}
		_iter_end_1b7a16b18:;
	};
	return _115411_fields;;
}



inline jule::Ptr<_1b2b08e1e_StructDecl> _1b38570de_buildStructDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _116437_tokens) {
	if (((*(_116437_tokens)).len() < 3LL)) {
		_1b384ce5e_pushErr(_self_.ptr(), (*(_116437_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _11707_i = 1LL;;
	jule::Ptr<_1b2b08e1e_StructDecl> _11717_s = jule::new_ptr<_1b2b08e1e_StructDecl>(_1b2b08e1e_StructDecl{._field_Token=(*(_116437_tokens))[_11707_i], ._field_End=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1b2b08528_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>(nullptr)});;
	if (((*((*(_11717_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b384ce5e_pushErr(_self_, (*_11717_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_11707_i)++;
	if ((_11707_i >= (*(_116437_tokens)).len())) {
		_1b384ce5e_pushErr(_self_, (*(_116437_tokens))[_11707_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _11717_s;;
	};
	(*_11717_s.alloc)._field_Ident=(*(*(_11717_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1b2ac7eba_Token> _11853_errorToken = (*(_116437_tokens))[_11707_i];;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _11867_genericsTokens = _1b384ab2c_range(&(_11707_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _116437_tokens);;
	if ((_11867_genericsTokens != nullptr)) {
		(*_11717_s.alloc)._field_Generics=_1b385146d_buildGenerics(_self_, &(_11867_genericsTokens), &(_11853_errorToken));
	};
	if ((_11707_i >= (*(_116437_tokens)).len())) {
		_1b384ce5e_pushErr(_self_, (*(_116437_tokens))[(_11707_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11717_s;;
	};
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _11967_bodyTokens = _1b384ab2c_range(&(_11707_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _116437_tokens);;
	if ((_11967_bodyTokens == nullptr)) {
		_1b384c7aa_stop(_self_);
		_1b384ce5e_pushErr(_self_, (*_11717_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11717_s;;
	};
	if ((_11707_i < (*(_116437_tokens)).len())) {
		_1b384ce5e_pushErr(_self_, (*(_116437_tokens))[_11707_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11717_s.alloc)._field_Public=_1b2d0029c_IsPub((*_11717_s.alloc)._field_Ident);
	(*_11717_s.alloc)._field_Fields=_1b3856c9d_buildStructDeclFields(_self_, _11967_bodyTokens);
	(*_11717_s.alloc)._field_End=(*(_116437_tokens))[(_11707_i - 1LL)];
	return _11717_s;;
}



inline void _1b3857397_checkMethodReceiver(_1b384c47a_parser* _self_, jule::Ptr<_1b2b0009c_FnDecl>* _121236_f) {
	if ((*((*(_121236_f))))._field_Statically) {
		if ((((*((*(_121236_f))))._field_Params.len() > 0LL) && _1b2aee002_IsSelf((*((*(_121236_f))))._field_Params[0LL].ptr()))) {
			_1b384ce5e_pushErr(_self_, (*((*(_121236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_121236_f))))._field_Params.len() == 0LL)) {
		_1b384ce5e_pushErr(_self_, (*((*(_121236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b2aedb4a_ParamDecl> _12243_param = (*((*(_121236_f))))._field_Params[0LL];;
	if ((!(_1b2aee002_IsSelf(_12243_param.ptr())))) {
		_1b384ce5e_pushErr(_self_, (*((*(_121236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1b385770a_buildTraitBody(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2b0965b_TraitDecl>* _123136_t, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _123160_tokens) {
	jule::Slice<jule::Ptr<_1b382d8e0_stmt>> _12327_stmts = _1b382dc97_splitStmts(&(_123160_tokens));;
	{
		auto expr = &(_12327_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a28476:;
		if (it != expr_end) {
			jule::Ptr<_1b382d8e0_stmt> _123315_stmt = *it;
			{
				_123160_tokens=(*(_123315_stmt))._field_tokens;
				if ((_123160_tokens.len() == 0LL)) {
					goto _iter_next_1b7a28476;
				};
				{
					auto &_match_expr{ (*(_123160_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1b7a2c0e5:;
						{
							jule::Ptr<_1b2b0009c_FnDecl> _12409_f = _1b38540ec_buildFn(_self_, &(_123160_tokens), true, true);;
							if ((_12409_f == nullptr)) {
								goto _match_end_1b7a29741;
							};
							_1b3857397_checkMethodReceiver(_self_, &(_12409_f));
							if (((*(_12409_f))._field_Generics.len() > 0LL)) {
								_1b384ce5e_pushErr(_self_, (*(_12409_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1b2b0009c_FnDecl>> &__jule_push_dest = (*((*(_123136_t))))._field_Methods; __jule_push_dest.push(_12409_f); };
						}
					}
					else {
						_case_begin_1b7a29037:;
						{
							jule::I64 _12509_i = 0LL;;
							jule::Ptr<_1b2add3dc_TypeDecl> _12519_ti;
							jule::Bool _125113_ok;
							({
								__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, &(_123160_tokens), (&(_12509_i)), true);
								_12519_ti = __jule_assign_result.__jule_result_arg0;
								_125113_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_125113_ok))) {
								goto _match_end_1b7a29741;
							};
							if ((_12509_i < _123160_tokens.len())) {
								_1b384ce5e_pushErr(_self_, _123160_tokens[_12509_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> &__jule_push_dest = (*((*(_123136_t))))._field_Inherits; __jule_push_dest.push(_12519_ti); };
						}
					}
					_match_end_1b7a29741:;
				};
			}
			_iter_next_1b7a28476:;
			++it;
			goto _iter_begin_1b7a28476;
		}
		_iter_end_1b7a28476:;
	};
}



inline jule::Ptr<_1b2b0965b_TraitDecl> _1b3857a4b_buildTraitDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _126336_tokens) {
	if (((*(_126336_tokens)).len() < 3LL)) {
		_1b384ce5e_pushErr(_self_.ptr(), (*(_126336_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2b0965b_TraitDecl> _12687_t = jule::new_ptr<_1b2b0965b_TraitDecl>(_1b2b0965b_TraitDecl{._field_Token=(*(_126336_tokens))[1LL], ._field_End=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1b2b0009c_FnDecl>>(nullptr)});;
	if (((*((*(_12687_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b384ce5e_pushErr(_self_, (*_12687_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_12687_t.alloc)._field_Ident=(*(*(_12687_t))._field_Token.alloc)._field_Kind;
	jule::I64 _12767_i = 2LL;;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _12777_bodyTokens = _1b384ab2c_range(&(_12767_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _126336_tokens);;
	if ((_12777_bodyTokens == nullptr)) {
		_1b384c7aa_stop(_self_);
		_1b384ce5e_pushErr(_self_, (*_12687_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_12767_i < (*(_126336_tokens)).len())) {
		_1b384ce5e_pushErr(_self_, (*(_126336_tokens))[_12767_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12687_t.alloc)._field_Public=_1b2d0029c_IsPub((*_12687_t.alloc)._field_Ident);
	_1b385770a_buildTraitBody(_self_, &(_12687_t), _12777_bodyTokens);
	(*_12687_t.alloc)._field_End=(*(_126336_tokens))[(_12767_i - 1LL)];
	return _12687_t;;
}



inline jule::Ptr<_1b2b0009c_FnDecl> _1b3857d8c_buildBindFn(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _129332_tokens) {
	(_129332_tokens).mut_slice(1LL);;
	jule::Ptr<_1b2b0009c_FnDecl> _12957_f = _1b38540ec_buildFn(_self_, &(_129332_tokens), false, true);;
	if ((_12957_f != nullptr)) {
		(*_12957_f.alloc)._field_Public=false;
		(*_12957_f.alloc)._field_Binded=true;
	};
	return _12957_f;;
}



inline jule::Ptr<_1b2b01257_VarDecl> _1b38581cd_buildBindVar(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _130333_tokens) {
	(_130333_tokens).mut_slice(1LL);;
	jule::Ptr<_1b2b01257_VarDecl> _13057_v = _1b3850c31_buildVar(_self_, _130333_tokens);;
	if ((_13057_v != nullptr)) {
		(*_13057_v.alloc)._field_Public=false;
		(*_13057_v.alloc)._field_Binded=true;
		if (((*_13057_v.alloc)._field_Expr != nullptr)) {
			_1b384ce5e_pushErr(_self_, (*_13057_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _13057_v;;
}



inline jule::Ptr<_1b2b08e1e_StructDecl> _1b385851e_buildBindStruct(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _131636_tokens) {
	(_131636_tokens).mut_slice(1LL);;
	jule::Ptr<_1b2b08e1e_StructDecl> _13187_s = _1b38570de_buildStructDecl(_self_, &(_131636_tokens));;
	if ((_13187_s != nullptr)) {
		(*_13187_s.alloc)._field_Public=false;
		{
			auto expr = &((*_13187_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7a419bc:;
			if (it != expr_end) {
				jule::Ptr<_1b2b08528_FieldDecl> _132116_f = *it;
				{
					(*(_132116_f))._field_Public=true;
				}
				_iter_next_1b7a419bc:;
				++it;
				goto _iter_begin_1b7a419bc;
			}
			_iter_end_1b7a419bc:;
		};
		(*_13187_s.alloc)._field_Binded=true;
	};
	return _13187_s;;
}



inline jule::Ptr<_1b2b04e09_TypeAliasDecl> _1b3858860_buildBindTypeAlias(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _133039_tokens) {
	(_133039_tokens).mut_slice(1LL);;
	jule::Ptr<_1b2b04e09_TypeAliasDecl> _13327_t = _1b384eda6_buildTypeAliasDecl(_self_, &(_133039_tokens));;
	if ((_13327_t != nullptr)) {
		(*_13327_t.alloc)._field_Public=false;
		(*_13327_t.alloc)._field_Binded=true;
	};
	return _13327_t;;
}



inline jule::Ptr<_1b2b0625c_UseDecl> _1b3858ba1_buildBindUse(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _134033_tokens) {
	if ((_134033_tokens.len() == 1LL)) {
		_1b384ce5e_pushErr(_self_.ptr(), _134033_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_134033_tokens).mut_slice(1LL);;
	;
	return _1b3854bbe_buildUseDecl(_self_, _134033_tokens, true);;
}



inline jule::Any _1b3858ee2_buildBind(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _135131_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _13527_token = (*(_135131_tokens))[0LL];;
	if (((*(_135131_tokens)).len() == 1LL)) {
		_1b384ce5e_pushErr(_self_.ptr(), _13527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_13527_token=(*(_135131_tokens))[1LL];
	{
		auto &_match_expr{ (*(_13527_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b7a47a8e:;
			{
				return jule::Any(_1b3857d8c_buildBindFn(_self_, (*(_135131_tokens))), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b7a476d7:;
			{
				return jule::Any(_1b38581cd_buildBindVar(_self_, (*(_135131_tokens))), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1b7a4774d:;
			{
				return jule::Any(_1b385851e_buildBindStruct(_self_, (*(_135131_tokens))), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b7a477b4:;
			{
				return jule::Any(_1b3858860_buildBindTypeAlias(_self_, (*(_135131_tokens))), &__jule_any_type50);;
			}
		}
		else {
			_case_begin_1b7a4696c:;
			{
				_1b384ce5e_pushErr(_self_, _13527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b7a47671:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2b0009c_FnDecl> _1b3859333_getMethod(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _137531_tokens) {
	jule::I64 _13767_i = 0LL;;
	jule::Ptr<_1b2ac7eba_Token> _13777_token = (*(_137531_tokens))[_13767_i];;
	if (((*(_13777_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_13767_i + 1LL) >= (*(_137531_tokens)).len())) {
			_1b384ce5e_pushErr(_self_.ptr(), _13777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13767_i)++;
		_13777_token=(*(_137531_tokens))[_13767_i];
	};
	if (((*_13777_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_13767_i + 1LL) >= (*(_137531_tokens)).len())) {
			_1b384ce5e_pushErr(_self_, _13777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13767_i)++;
		_13777_token=(*(_137531_tokens))[_13767_i];
	};
	if (((*_13777_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1b384ce5e_pushErr(_self_, _13777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b38540ec_buildFn(_self_, _137531_tokens, true, false);;
}



inline void _1b3859696_parseImplBody(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2b09cbb_Impl>* _140435_ipl, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _140457_tokens) {
	jule::Slice<jule::Ptr<_1b382d8e0_stmt>> _14057_stmts = _1b382dc97_splitStmts(_140457_tokens);;
	{
		auto expr = &(_14057_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a509dc:;
		if (it != expr_end) {
			jule::Ptr<_1b382d8e0_stmt> _140615_stmt = *it;
			{
				(*(_140457_tokens))=(*(_140615_stmt))._field_tokens;
				jule::Ptr<_1b2ac7eba_Token> _14088_token = (*(_140457_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_14088_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1b7a519dd:;
						{
							_1b384dc0c_pushDirective(_self_.ptr(), _1b384d954_buildDirective(_self_, (*(_140457_tokens))));
							goto _iter_next_1b7a509dc;
						}
					}
					_match_end_1b7a51c30:;
				};
				{
					auto &_match_expr{ (*(_14088_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1b7a52ea6:;
						{
							jule::Ptr<_1b2b01257_VarDecl> _14179_v = _1b3850c31_buildVar(_self_, (*(_140457_tokens)));;
							if ((_14179_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1b2b01257_VarDecl>> &__jule_push_dest = (*((*(_140435_ipl))))._field_Statics; __jule_push_dest.push(_14179_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1b7a52bdc:;
						{
							jule::Ptr<_1b2b0009c_FnDecl> _14249_f = _1b3859333_getMethod(_self_, _140457_tokens);;
							if ((_14249_f != nullptr)) {
								_1b3857397_checkMethodReceiver(_self_, &(_14249_f));
								_1b385a0d1_applyFnMeta(_self_, &(_14249_f));
								{ jule::Slice<jule::Ptr<_1b2b0009c_FnDecl>> &__jule_push_dest = (*((*(_140435_ipl))))._field_Methods; __jule_push_dest.push(_14249_f); };
							};
						}
					}
					else {
						_case_begin_1b7a51d84:;
						{
							_1b384ce5e_pushErr(_self_, _14088_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1b7a509dc;
						}
					}
					_match_end_1b7a5237e:;
				};
			}
			_iter_next_1b7a509dc:;
			++it;
			goto _iter_begin_1b7a509dc;
		}
		_iter_end_1b7a509dc:;
	};
}



inline jule::Ptr<_1b2b09cbb_Impl> _1b38599d7_buildImpl(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _143730_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _14387_token = _143730_tokens[0LL];;
	if ((_143730_tokens.len() < 2LL)) {
		_1b384ce5e_pushErr(_self_.ptr(), _14387_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _14447_i = 1LL;;
	jule::Ptr<_1b2add3dc_TypeDecl> _14467_base;
	jule::Bool _144617_ok;
	({
		__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, &(_143730_tokens), (&(_14447_i)), true);
		_14467_base = __jule_assign_result.__jule_result_arg0;
		_144617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144617_ok))) {
		return nullptr;;
	};
	if ((_14447_i >= _143730_tokens.len())) {
		_1b384ce5e_pushErr(_self_, _14387_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2b09cbb_Impl> _14557_ipl = jule::new_ptr<_1b2b09cbb_Impl>(_1b2b09cbb_Impl{._field_End=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Base=_14467_base, ._field_Dest=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1b2b0009c_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1b2b01257_VarDecl>>(nullptr)});;
	_14387_token=_143730_tokens[_14447_i];
	if (((*(_14387_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_14387_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_14557_ipl))._field_Base, (*_14557_ipl.alloc)._field_Dest);
			goto _julec_label_1b7a5ebd8;
		};
		_1b384c7aa_stop(_self_);
		_1b384ce5e_pushErr(_self_, _14387_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_14447_i)++;
	if ((_14447_i >= _143730_tokens.len())) {
		_1b384c7aa_stop(_self_);
		_1b384ce5e_pushErr(_self_, _14387_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType(_self_, &(_143730_tokens), (&(_14447_i)), true);
		(*_14557_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_144617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144617_ok))) {
		return nullptr;;
	};
	if ((_14447_i >= _143730_tokens.len())) {
		_1b384c7aa_stop(_self_);
		_1b384ce5e_pushErr(_self_, _14387_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1b7a5ebd8:;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _14937_bodyTokens = _1b384ab2c_range(&(_14447_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_143730_tokens));;
	if ((_14937_bodyTokens == nullptr)) {
		_1b384c7aa_stop(_self_);
		_1b384ce5e_pushErr(_self_, _14387_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14447_i < _143730_tokens.len())) {
		_1b384ce5e_pushErr(_self_, _143730_tokens[_14447_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_14557_ipl.alloc)._field_End=_143730_tokens[(_14447_i - 1LL)];
	_1b3859696_parseImplBody(_self_, &(_14557_ipl), &(_14937_bodyTokens));
	return _14557_ipl;;
}



inline jule::Any _1b3859d28_buildNodeData(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _150835_tokens) {
	jule::Ptr<_1b2ac7eba_Token> _15097_token = (*(_150835_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_15097_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b7a64da8:;
			{
				jule::Ptr<_1b2b0009c_FnDecl> _15138_f = _1b38540ec_buildFn(_self_, _150835_tokens, false, false);;
				if ((_15138_f != nullptr)) {
					(*_15138_f.alloc)._field_Global=true;
				};
				return jule::Any(_15138_f, &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b7a65590:;
			{
				return jule::Any(_1b3850c31_buildVar(_self_, (*(_150835_tokens))), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b7a65606:;
			{
				return jule::Any(_1b384eda6_buildTypeAliasDecl(_self_, _150835_tokens), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1b7a649bd:;
			{
				return _1b385661b_buildNodeEnumDecl(_self_, _150835_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1b7a64a34:;
			{
				return jule::Any(_1b38570de_buildStructDecl(_self_, _150835_tokens), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1b7a64a9a:;
			{
				return jule::Any(_1b3857a4b_buildTraitDecl(_self_, _150835_tokens), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1b7a64b11:;
			{
				return jule::Any(_1b38599d7_buildImpl(_self_, (*(_150835_tokens))), &__jule_any_type65);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b7a64b88:;
			{
				return _1b3858ee2_buildBind(_self_, _150835_tokens);;
			}
		}
		else {
			_case_begin_1b7a646c1:;
			{
				_1b384ce5e_pushErr(_self_.ptr(), _15097_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7a64957:;
	};
}



inline void _1b385a0d1_applyFnMeta(_1b384c47a_parser* _self_, jule::Ptr<_1b2b0009c_FnDecl>* _154132_f) {
	(*((*(_154132_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1b385a389_applyMeta(_1b384c47a_parser* _self_, _1b2adc3db_Node* _154630_node) {
	{
		auto &_match_expr{ (*(_154630_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b7a6b772:;
			{
				jule::Ptr<_1b2b01257_VarDecl> _15498_v = (*(_154630_node))._field_Data.unsafe_cast_ptr<_1b2b01257_VarDecl>();;
				if ((_15498_v == nullptr)) {
					return;;
				};
				(*(_15498_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b7a6b4ca:;
			{
				jule::Ptr<_1b2b0009c_FnDecl> _15568_f = (*(_154630_node))._field_Data.unsafe_cast_ptr<_1b2b0009c_FnDecl>();;
				if ((_15568_f == nullptr)) {
					return;;
				};
				_1b385a0d1_applyFnMeta(_self_, &(_15568_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b7a6b81b:;
			{
				jule::Ptr<_1b2b08e1e_StructDecl> _15628_sd = (*(_154630_node))._field_Data.unsafe_cast_ptr<_1b2b08e1e_StructDecl>();;
				if ((_15628_sd == nullptr)) {
					return;;
				};
				(*(_15628_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1b7a6b6d9:;
	};
}



inline void _1b385a642_pushUseDecl(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2b0625c_UseDecl>* _157133_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b0625c_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_157133_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1b384ce5e_pushErr(_self_, (*((*(_157133_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1b384d2c2_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b385a983_pushMetaNodes(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _157935_tokens) {
	{
		auto &_match_expr{ (*((*(_157935_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1b7a72db6:;
			{
				;
				jule::Ptr<_1b2b0625c_UseDecl> _15838_decl = _1b3854bbe_buildUseDecl(_self_.ptr(), (*(_157935_tokens)), false);;
				_1b385a642_pushUseDecl(_self_, &(_15838_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b7a72e3d:;
			{
				if ((((*(_157935_tokens)).len() > 1LL) && ((*((*(_157935_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1b2b0625c_UseDecl> _15889_decl = _1b3858ba1_buildBindUse(_self_, (*(_157935_tokens)));;
					_1b385a642_pushUseDecl(_self_, &(_15889_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1b7a72ea4:;
			{
				_1b384dc0c_pushDirective(_self_.ptr(), _1b384d954_buildDirective(_self_, (*(_157935_tokens))));
				return true;;
			}
		}
		_match_end_1b7a72ca6:;
	};
	return false;;
}



inline _1b2adc3db_Node _1b385acc4_parseNode(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _159931_st) {
	_1b2adc3db_Node _16007_node = _1b2adc3db_Node{._field_Token=(*(_159931_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1b385a983_pushMetaNodes(_self_, _159931_st)) {
		return _16007_node;;
	};
	jule::Any _16087_data = _1b3859d28_buildNodeData(_self_, _159931_st);;
	if ((_16087_data == nullptr)) {
		return _16007_node;;
	};
	_16007_node._field_Data=_16087_data;
	_1b385a389_applyMeta(_self_, &(_16007_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1b384ce5e_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _16007_node;;
}



inline void _1b385b07c_appendNode(jule::Ptr<_1b384c47a_parser> _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _162332_st) {
	if (((*(_162332_st)).len() == 0LL)) {
		return;;
	};
	_1b2adc3db_Node _16277_node = _1b385acc4_parseNode(_self_, _162332_st);;
	if (((_16277_node._field_Data != nullptr) && (!(_1b384ca41_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1b2adc3db_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16277_node; __jule_collection; }));
	};
}



inline void _1b385b555_removeRange(_1b384c47a_parser* _self_, jule::I64 _163327_i, jule::U64 _163335_id, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _163351_tokens, jule::Slice<jule::I64>* _163381_ranges) {
	jule::U64 _16343_close = _1b384b633_getCloseOfBrace(_163335_id);;
	for (; (_163327_i >= 0LL); (_163327_i)--) {
		{
			jule::Ptr<_1b2ac7eba_Token> _16364_tok = (*(_163351_tokens))[(*(_163381_ranges))[_163327_i]];;
			if (((*(_16364_tok))._field_Id != _16343_close)) {
				goto _iter_next_1b7a7d146;
			};
			(*(_163381_ranges))=jule::append((*(_163381_ranges)).slice(0LL, _163327_i),(*(_163381_ranges)).slice((_163327_i + 1LL)));
			goto _iter_end_1b7a7d146;
		}
	_iter_next_1b7a7d146:;
	}
	_iter_end_1b7a7d146:;;
}



inline void _1b385b973_pushWrongOrderCloseErr(_1b384c47a_parser* _self_, jule::Ptr<_1b2ac7eba_Token>* _164539_t, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _164558_tokens, jule::Slice<jule::I64>* _164584_ranges) {
	{
		auto &_match_expr{ (*((*(_164558_tokens))[(*(_164584_ranges))[((*(_164584_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1b7a80555:;
			{
				_1b384ce5e_pushErr(_self_, (*(_164539_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1b7a805cc:;
			{
				_1b384ce5e_pushErr(_self_, (*(_164539_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1b7a80643:;
			{
				_1b384ce5e_pushErr(_self_, (*(_164539_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b7a80445:;
	};
}



inline void _1b385be4b_pushRangeClose(_1b384c47a_parser* _self_, jule::Ptr<_1b2ac7eba_Token> _165630_t, jule::U64 _165648_left, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _165666_tokens, jule::Slice<jule::I64>* _165696_ranges) {
	jule::I64 _16573_n = (*(_165696_ranges)).len();;
	if ((_16573_n == 0LL)) {
		{
			auto &_match_expr{ (*(_165630_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1b7a83657:;
				{
					_1b384ce5e_pushErr(_self_, _165630_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1b7a836ce:;
				{
					_1b384ce5e_pushErr(_self_, _165630_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1b7a83745:;
				{
					_1b384ce5e_pushErr(_self_, _165630_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1b7a8358b:;
		};
		return;;
	} else if (((*((*(_165666_tokens))[(*(_165696_ranges))[(_16573_n - 1LL)]]))._field_Id != _165648_left)) {
		_1b385b973_pushWrongOrderCloseErr(_self_, &(_165630_t), _165666_tokens, _165696_ranges);
	};
	_1b385b555_removeRange(_self_, (_16573_n - 1LL), (*(_165630_t))._field_Id, _165666_tokens, _165696_ranges);
}



inline void _1b385c204_checkRanges(_1b384c47a_parser* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _167428_tokens) {
	jule::Slice<jule::I64> _167511_ranges = nullptr;;
	{
		auto expr = _167428_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a86a23:;
		if (it != expr_end) {
			jule::I64 _16777_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> *_167710_token = it;
			{
				{
					auto &_match_expr{ (*((*(_167710_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b7a878c0:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _167511_ranges; __jule_push_dest.push(_16777_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b7a87958:;
						{
							_1b385be4b_pushRangeClose(_self_, (*(_167710_token)), static_cast<jule::U64>(74LLU), _167428_tokens, &(_167511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1b7a879be:;
						{
							_1b385be4b_pushRangeClose(_self_, (*(_167710_token)), static_cast<jule::U64>(72LLU), _167428_tokens, &(_167511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1b7a87a35:;
						{
							_1b385be4b_pushRangeClose(_self_, (*(_167710_token)), static_cast<jule::U64>(76LLU), _167428_tokens, &(_167511_ranges));
						}
					}
					_match_end_1b7a87804:;
				};
			}
			_iter_next_1b7a86a23:;
			++it;
			_16777_i++;
			goto _iter_begin_1b7a86a23;
		}
		_iter_end_1b7a86a23:;
	};
	{
		auto expr = &(_167511_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a86b00:;
		if (it != expr_end) {
			jule::I64 _169210_i = *it;
			{
				jule::Ptr<_1b2ac7eba_Token> _16934_token = (*(_167428_tokens))[_169210_i];;
				{
					auto &_match_expr{ (*(_16934_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b7a8a8e5:;
						{
							_1b384ce5e_pushErr(_self_, _16934_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b7a8a95b:;
						{
							_1b384ce5e_pushErr(_self_, _16934_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b7a8a9c2:;
						{
							_1b384ce5e_pushErr(_self_, _16934_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1b7a8a65e:;
				};
			}
			_iter_next_1b7a86b00:;
			++it;
			goto _iter_begin_1b7a86b00;
		}
		_iter_end_1b7a86b00:;
	};
}



inline void _1b385c4ac_parse(jule::Ptr<_1b384c47a_parser> _self_, jule::Ptr<_1b2acd872_Fileset>* _170527_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1b2adb52d_AST>(_1b2adb52d_AST{._field_File=(*(_170527_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1b2b0625c_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1b2adc3db_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1b383bbb7_exprBuilder>(_1b383bbb7_exprBuilder{._field_p=_self_});
	_1b385c204_checkRanges(_self_, &((*((*(_170527_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b382d8e0_stmt>> _17187_stmts = _1b382dc97_splitStmts(&((*((*(_170527_f))))._field_Tokens));;
	jule::I64 _17217_i = 0LL;;
	for (; (_17217_i < _17187_stmts.len()); (_17217_i)++) {
		{
			jule::Ptr<_1b382d8e0_stmt> _17238_stmt = _17187_stmts[_17217_i];;
			if (((*(_17238_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_17238_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1b7a8e795;
			};
			if ((!(_20daa7c95_IsTopDirective((*((*_17238_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1b7a8e795;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2adc809_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b384d954_buildDirective(_self_, (*_17238_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1b7a8e795:;
	}
	_iter_end_1b7a8e795:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_17217_i < _17187_stmts.len()) && (!(_1b384ca41_stopped(_self_)))); (_17217_i)++) {
		{
			jule::Ptr<_1b382d8e0_stmt> _17408_stmt = _17187_stmts[_17217_i];;
			_1b385b07c_appendNode(_self_, &((*(_17408_stmt))._field_tokens));
		}
	_iter_next_1b7a92798:;
	}
	_iter_end_1b7a92798:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1b384ce5e_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1b385dc0b_pushErr(_1b385d634_typeBuilder* _self_, jule::Ptr<_1b2ac7eba_Token> _3123_token, jule::Str _3145_fmt) {
	if ((*(_self_))._field_err) {
		_1b384ce5e_pushErr((*(_self_))._field_p.ptr(), _3123_token, _3145_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1b385e06e_pushSuggestion(_1b385d634_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args) {
	if ((*(_self_))._field_err) {
		_1b384d2c2_pushSuggestion((*(_self_))._field_p.ptr(), _3830_fmt, _3850_args);
	};
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b385e305_buildNamespace(_1b385d634_typeBuilder* _self_) {
	jule::Ptr<_1b2add3dc_TypeDecl> _457_t = jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1b2ade18a_NamespaceTypeDecl> _487_ns = jule::new_ptr<_1b2ade18a_NamespaceTypeDecl>(_1b2ade18a_NamespaceTypeDecl{._field_Namespace=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Kind=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr)});;
	(*_487_ns.alloc)._field_Namespace=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((((*((*_487_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_487_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U64>(31LLU)))) {
		_1b385dc0b_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1b385e06e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1b385dc0b_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1b385e06e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(19LLU))) {
		_1b385dc0b_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1b385e06e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1b385dc0b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1b385e06e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_487_ns.alloc)._field_Kind=_1b385eaa8_buildIdent(_self_);
	(*(_457_t))._field_Kind=jule::Any(_487_ns, &__jule_any_type93);
	return _457_t;;
}



inline jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> _1b385e58b_buildGenerics(_1b385d634_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1b2ac7eba_Token> _803_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_803_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _857_parts = _1b385e822_identGenerics(_self_);;
	if ((_857_parts.len() == 0LL)) {
		_1b385dc0b_pushErr(_self_, _803_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> _917_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>::alloc(0LL, _857_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2add3dc_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7aa2cb4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _9215_part = *it;
			{
				jule::I64 _938_j = 0LL;;
				jule::Ptr<_1b2add3dc_TypeDecl> _948_t;
				({
					__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType((*(_self_))._field_p, &(_9215_part), (&(_938_j)), true);
					_948_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_938_j < _9215_part.len())) {
					_1b385dc0b_pushErr(_self_, _9215_part[_938_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>> &__jule_push_dest = _917_types; __jule_push_dest.push(_948_t); };
			}
			_iter_next_1b7aa2cb4:;
			++it;
			goto _iter_begin_1b7aa2cb4;
		}
		_iter_end_1b7aa2cb4:;
	};
	return _917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1b385e822_identGenerics(_1b385d634_typeBuilder* _self_) {
	jule::I64 _1043_first = (*((*(_self_))._field_i));;
	jule::I64 _1057_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1b2ac7eba_Token> _1074_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1074_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1b7aa6e83:;
					{
						(_1057_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1b7aa72b3:;
					{
						(_1057_rangeN)--;
					}
				}
				_match_end_1b7aa700a:;
			};
			if ((_1057_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1b7aa615d;
			};
		}
	_iter_next_1b7aa615d:;
	}
	_iter_end_1b7aa615d:;;
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _1197_tokens = (*(_self_))._field_tokens.slice((_1043_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1207_parts;
	jule::Slice<_20daa5e91_Log> _12014_errors;
	({
		__jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b384b39c_parts(&(_1197_tokens), static_cast<jule::U64>(5LLU), true);
		_1207_parts = __jule_assign_result.__jule_result_arg0;
		_12014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12014_errors);
	};
	return _1207_parts;;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b385eaa8_buildIdent(_1b385d634_typeBuilder* _self_) {
	jule::Bool _1287_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1287_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1b385e305_buildNamespace(_self_);;
	};
	jule::Ptr<_1b2ac7eba_Token> _1327_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1b2add9e7_IdentTypeDecl> _1337_it = jule::new_ptr<_1b2add9e7_IdentTypeDecl>(_1b2add9e7_IdentTypeDecl{._field_Token=_1327_token, ._field_Ident=(*(_1327_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b2add3dc_TypeDecl> _1397_itd = jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1337_it, &__jule_any_type77)});;
	if (((!(_1287_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1337_it))._field_Generics=_1b385e58b_buildGenerics(_self_);
		return _1397_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1b385dc0b_pushErr(_self_, _1327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b385dc0b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	jule::Ptr<_1b2addcb1_SubIdentTypeDecl> _1567_sit = jule::new_ptr<_1b2addcb1_SubIdentTypeDecl>(_1b2addcb1_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1b2add9e7_IdentTypeDecl>>(nullptr)});;
	(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2add9e7_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1337_it; __jule_collection; }));
	jule::Ptr<_1b2add3dc_TypeDecl> _1587_ident = _1b385eaa8_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1587_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b7ab2e39:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2add9e7_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1587_ident))._field_Kind.cast_ptr<_1b2add9e7_IdentTypeDecl>(&__jule_any_type77); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b7aac340:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,(*((*(_1587_ident))._field_Kind.unsafe_cast_ptr<_1b2addcb1_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1b7ab2db2:;
	};
	return jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1567_sit, &__jule_any_type89)});;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b385ed3e_buildCppLink(_1b385d634_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1b385dc0b_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1b2add3dc_TypeDecl> _1777_t = _1b385eaa8_buildIdent(_self_);;
	(*((*(_1777_t))._field_Kind.cast_ptr<_1b2add9e7_IdentTypeDecl>(&__jule_any_type77)))._field_Binded=true;
	return _1777_t;;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b38600c5_buildFn(_1b385d634_typeBuilder* _self_) {
	jule::Ptr<_1b2ac7eba_Token> _1837_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1b2b0009c_FnDecl> _1847_f = _1b3853b46_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1847_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b2b00443_IsAnon(_1847_f.ptr())))) {
		_1b385dc0b_pushErr(_self_, (*(_1847_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=_1837_token, ._field_Kind=jule::Any(_1847_f, &__jule_any_type67)});;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b386035b_buildPtr(_1b385d634_typeBuilder* _self_) {
	jule::Ptr<_1b2ac7eba_Token> _1987_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1b385dc0b_pushErr(_self_, _1987_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1b2adee16_PtrTypeDecl>(_1b2adee16_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type73)});;
	};
	jule::Ptr<_1b2add3dc_TypeDecl> _2157_elem = _1b38613b2_step(_self_);;
	if ((_2157_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1b2adee16_PtrTypeDecl>(_1b2adee16_PtrTypeDecl{._field_Elem=_2157_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b38605e2_buildSptr(_1b385d634_typeBuilder* _self_) {
	jule::Ptr<_1b2ac7eba_Token> _2297_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1b385dc0b_pushErr(_self_, _2297_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b2add3dc_TypeDecl> _2367_elem = _1b38613b2_step(_self_);;
	if ((_2367_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=_2297_token, ._field_Kind=jule::Any(jule::new_ptr<_1b2ade487_SptrTypeDecl>(_1b2ade487_SptrTypeDecl{._field_Elem=_2367_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b3860878_buildSlc(_1b385d634_typeBuilder* _self_) {
	jule::Ptr<_1b2ac7eba_Token> _2507_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b2add3dc_TypeDecl> _2527_elem = _1b38613b2_step(_self_);;
	if ((_2527_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=_2507_token, ._field_Kind=jule::Any(jule::new_ptr<_1b2ade81c_SlcTypeDecl>(_1b2ade81c_SlcTypeDecl{._field_Elem=_2527_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b3860b0e_buildArr(_1b385d634_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _2657_exprTokens = _1b384ab2c_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b385dc0b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1b2add3dc_TypeDecl> _2717_elem = _1b38613b2_step(_self_);;
	if ((_2717_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2ae06a8_ArrTypeDecl> _2767_arrt = jule::new_ptr<_1b2ae06a8_ArrTypeDecl>(_1b2ae06a8_ArrTypeDecl{._field_Elem=_2717_elem, ._field_Size=jule::Ptr<_1b2ae2721_Expr>(nullptr)});;
	jule::Ptr<_1b2ac7eba_Token> _2807_token = _2657_exprTokens[0LL];;
	if (((_2657_exprTokens.len() == 1LL) && ((*(_2807_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2767_arrt))._field_Size=_1b384d613_buildExpr((*(_self_))._field_p, &(_2657_exprTokens));
	};
	return jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=_2807_token, ._field_Kind=jule::Any(_2767_arrt, &__jule_any_type71)});;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b3860d95_buildMap(_1b385d634_typeBuilder* _self_) {
	jule::Ptr<_1b2ac7eba_Token> _2947_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b385dc0b_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _3027_keyTokens = _1b384ab2c_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b385dc0b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3027_keyTokens.len() == 0LL)) {
		_1b385dc0b_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1b2ae0e06_MapTypeDecl> _3117_mapt = jule::new_ptr<_1b2ae0e06_MapTypeDecl>(_1b2ae0e06_MapTypeDecl{._field_Key=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr)});;
	jule::I64 _3127_j = 0LL;;
	jule::Ptr<_1b2add3dc_TypeDecl> _3137_keyt;
	jule::Bool _31317_ok;
	({
		__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType((*(_self_))._field_p, &(_3027_keyTokens), (&(_3127_j)), (*(_self_))._field_err);
		_3137_keyt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	} else if ((_3127_j < _3027_keyTokens.len())) {
		_1b385dc0b_pushErr(_self_, _3027_keyTokens[_3127_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3117_mapt.alloc)._field_Key=_3137_keyt;
	jule::Ptr<_1b2add3dc_TypeDecl> _3217_valt;
	({
		__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_assign_result = _1b384ea65_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3217_valt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	};
	(*_3117_mapt.alloc)._field_Val=_3217_valt;
	return jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=_2947_mapToken, ._field_Kind=jule::Any(_3117_mapt, &__jule_any_type75)});;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b386112b_buildEnumerable(_1b385d634_typeBuilder* _self_) {
	jule::Ptr<_1b2ac7eba_Token> _3337_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1b385dc0b_pushErr(_self_, _3337_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3337_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3337_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1b3860878_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1b3860b0e_buildArr(_self_);;
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b38613b2_step(_1b385d634_typeBuilder* _self_) {
	jule::Ptr<_1b2ac7eba_Token> _3483_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3483_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b7ad3443:;
			{
				return _1b385eaa8_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b7ad382d:;
			{
				return _1b385ed3e_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b7ad3894:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1b2add3dc_TypeDecl> _3589_f = _1b38600c5_buildFn(_self_);;
					if ((_3589_f != nullptr)) {
						(*((*_3589_f.alloc)._field_Kind.cast_ptr<_1b2b0009c_FnDecl>(&__jule_any_type67)))._field_Unsafety=true;
					};
					return _3589_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b7ad390a:;
			{
				return _1b38600c5_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b7ad3971:;
			{
				return _1b386035b_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b7ad39e8:;
			{
				return _1b38605e2_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b7ad3a70:;
			{
				return jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1b2ade487_SptrTypeDecl>(_1b2ade487_SptrTypeDecl{._field_Elem=_1b38605e2_buildSptr(_self_)}), &__jule_any_type74)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1b7ad3ae7:;
			{
				return _1b386112b_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1b7ad3b6e:;
			{
				return _1b3860d95_buildMap(_self_);;
			}
		}
		_match_end_1b7ad34ba:;
	};
	((*((*(_self_))._field_i)))++;
	_1b385dc0b_pushErr(_self_, _3483_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool _1b3861648_build(_1b385d634_typeBuilder* _self_) {
	__jule_tuple_x_1b2add3dc_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b2add3dc_TypeDecl> _3897_root = _1b38613b2_step(_self_);;
	if ((_3897_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1b385cd81_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3897_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1b30508c6_CompileInfo_eq(_1b30508c6_CompileInfo *_self_, _1b30508c6_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1b3052323_pushErr(_1b3051ca1_directiveEval* _self_, jule::Ptr<_1b2ac7eba_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args) {
	{ jule::Slice<_20daa5e91_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_20daa5e91_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_20daa6403_Logf(_2141_fmt, _2161_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1b305271e_splitOperans(_1b3051ca1_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _3348_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1b2ac7eba_Token>>(nullptr); __jule_collection; });;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3348_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1b2ac7eba_Token> _394_b = (*(_3348_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b7b0c439:;
					{
						(_367_rangeN)++;
						goto _iter_next_1b7b0b9aa;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b7b0c769:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1b7b0c4b1:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1b7b0b9aa;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1b7b0b9aa:;
	}
	_iter_end_1b7b0b9aa:;;
	if ((_377_last < (*(_3348_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last)); };
	} else {
		_1b3052323_pushErr(_self_, (*(_3348_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1b3052a60_evalDirectiveIdent(_1b3051ca1_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b1032c:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1b7b1032c:;
			++it;
			goto _iter_begin_1b7b1032c;
		}
		_iter_end_1b7b1032c:;
	};
	return false;;
}



inline jule::Bool _1b3052da1_evalDirectivePart(_1b3051ca1_directiveEval* _self_, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1b3052323_pushErr(_self_, _7837_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1b3052a60_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1b3053137_eval(_1b3051ca1_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1b3052323_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1047_logicalOrParts = _1b305271e_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b15d49:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> _1118_logicalAndParts = _1b305271e_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7b17873:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1b2ac7eba_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1b2ac7eba_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1b3052323_pushErr(_self_, _1175_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1b3052da1_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1b7b17873:;
						++it;
						goto _iter_begin_1b7b17873;
					}
					_iter_end_1b7b17873:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1b7b15d49:;
			++it;
			goto _iter_begin_1b7b15d49;
		}
		_iter_end_1b7b15d49:;
	};
	return _1027_result;;
}







inline jule::Ptr<_1b3862627_Importer> static__1b3862a56_New(_1b30508c6_CompileInfo _4516_info) {
	jule::Ptr<_1b3862627_Importer> _467_imp = jule::new_ptr<_1b3862627_Importer>(_1b3862627_Importer{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20dbb9d85_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1b3051256_initVars(&((*(_467_imp))._field_vars), &(_4516_info));
	return _467_imp;;
}



inline jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>> _1b3862cdc_AllPackages(_1b3862627_Importer* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1b386322c_SetModPath(_1b3862627_Importer* _self_, jule::Str _6226_path) {
	(*(_self_))._field_mod=_6226_path;
}



inline jule::Str _1b38634b3_GetModPath(_1b3862627_Importer* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1b3863804_ModById(_1b3862627_Importer* _self_, jule::I64 _7019_id) {
	return (*(_self_))._field_mods[_7019_id];;
}



inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b3863b45_GetImport(_1b3862627_Importer* _self_, jule::Str _7425_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b1dcec:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _7515_p = *it;
			{
				if (_227d31ed3_EqualFold((*(_7515_p))._field_Path, _7425_path)) {
					return _7515_p;;
				};
			}
			_iter_next_1b7b1dcec:;
			++it;
			goto _iter_begin_1b7b1dcec;
		}
		_iter_end_1b7b1dcec:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log _1b3864041_ImportPackage(_1b3862627_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod) {
	__jule_tuple_sx_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log __jule_func_result;
	jule::Slice<jule::Ptr<_20c648c55_DirEntry>> _857_dirents = ({
		auto except = static__227d37071_Read(_8429_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_20daa5e91_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b386213d_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _8429_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_20c648c55_DirEntry>>(nullptr);});
	});;
	if (_8440_updateMod) {
		jule::Str _904_newMod = _1b2cee730_FindModuleFileDeep(_8429_path);;
		if ((_904_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_904_newMod;
			jule::Slice<_20daa5e91_Log> _939_errs = _1b2cee9e9_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_939_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _939_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1b2adb52d_AST>> _1007_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2adb52d_AST>>::alloc(0LL, _857_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2adb52d_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b21030:;
		if (it != expr_end) {
			jule::Ptr<_20c648c55_DirEntry> _10110_dirent = *it;
			{
				if ((_20c64cc6a_IsDir((*(_10110_dirent))._field_Stat.ptr()) || (!(_20d8b79d9_HasSuffix((*_10110_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1b7b21030;
				};
				jule::Str _1074__path = _227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _8429_path; (*it++) = (*_10110_dirent.alloc)._field_Name; __jule_collection; }));;
				jule::Ptr<_1b2acd872_Fileset> _1088_file = static__1b2acdcd4_New(_1074__path);;
				_1b2ace08c_Fill(_1088_file.ptr(), _1b3861d30_readBuff((*_1088_file.alloc)._field_Path));
				jule::Slice<_20daa5e91_Log> _1108_errors = _1b2adb0cc_Lex(_1088_file, static_cast<jule::I64>(0LL));;
				if ((_1108_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1108_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1b37ca35e_FileInfo> _1158_finfo = _1b37cd1a8_ParseFile(_1088_file);;
				if (((*(_1158_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1158_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1b3035658_isPassFileAnnotation((*_10110_dirent.alloc)._field_Name)))) {
					goto _iter_next_1b7b21030;
				};
				jule::Bool _1254_r;
				jule::Slice<_20daa5e91_Log> _12511_logs;
				({
					__jule_tuple_bool__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b3864728_isPassBuildDirectives(_self_, &((*_1158_finfo.alloc)._field_Ast));
					_1254_r = __jule_assign_result.__jule_result_arg0;
					_12511_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_12511_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12511_logs;
					return __jule_func_result;;
				};
				if ((!(_1254_r))) {
					goto _iter_next_1b7b21030;
				};
				{ jule::Slice<jule::Ptr<_1b2adb52d_AST>> &__jule_push_dest = _1007_asts; __jule_push_dest.push((*_1158_finfo.alloc)._field_Ast); };
			}
			_iter_next_1b7b21030:;
			++it;
			goto _iter_begin_1b7b21030;
		}
		_iter_end_1b7b21030:;
	};
	__jule_func_result.__jule_result_arg0 = _1007_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b38642e9_Imported(_1b3862627_Importer* _self_, jule::Ptr<_1b2cd4e1e_ImportInfo> _14128_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b23164:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _14310_p = *it;
			{
				if ((((*(_14310_p))._field_Binded == (*(_14128_imp))._field_Binded) && _227d31ed3_EqualFold((*_14310_p.alloc)._field_Path, (*_14128_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_1b7b23164:;
			++it;
			goto _iter_begin_1b7b23164;
		}
		_iter_end_1b7b23164:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7b2a80e:;
			if (it != expr_end) {
				jule::I64 _1518_i = it - expr->begin();
				jule::Str _15111_mod = *it;
				{
					if (((*(_self_))._field_mod == _15111_mod)) {
						(*_14128_imp.alloc)._field_ModId=_1518_i;
						goto _julec_label_1b7b29e5c;
					};
				}
				_iter_next_1b7b2a80e:;
				++it;
				_1518_i++;
				goto _iter_begin_1b7b2a80e;
			}
			_iter_end_1b7b2a80e:;
		};
		(*_14128_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1b7b29e5c:;
	};
	{ jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_14128_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_20daa5e91_Log _1b3864728_isPassBuildDirectives(_1b3862627_Importer* _self_, jule::Ptr<_1b2adb52d_AST>* _16842_file) {
	__jule_tuple_bool__jule_tuple_s_20daa5e91_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_16842_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b23120:;
		if (it != expr_end) {
			jule::Ptr<_1b2adc809_Directive> _16915_td = *it;
			{
				if (((*((*(_16915_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1b7b23120;
				};
				_1b3051ca1_directiveEval _1738_de = _1b3051ca1_directiveEval{._field_logs=jule::Slice<_20daa5e91_Log>(nullptr), ._field_d=_16915_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1774_result = _1b3053137_eval(&_1738_de);;
				if ((_1738_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1738_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1774_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1b7b23120:;
			++it;
			goto _iter_begin_1b7b23120;
		}
		_iter_end_1b7b23120:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline jule::Ptr<_1b3868e8b_ExprInspector> static__1b38692aa_New(void) {
	return jule::new_ptr<_1b3868e8b_ExprInspector>(_1b3868e8b_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1b3869563_args(_1b3868e8b_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args) {
	{
		auto expr = &(_2224_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b7543b:;
		if (it != expr_end) {
			jule::Any _2315_arg = *it;
			{
				_1b386981b_inspect(_self_, &(_2315_arg));
			}
			_iter_next_1b7b7543b:;
			++it;
			goto _iter_begin_1b7b7543b;
		}
		_iter_end_1b7b7543b:;
	};
}



inline void _1b386981b_inspect(_1b3868e8b_ExprInspector* _self_, jule::Any* _2828_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_2828_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_2828_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b7b7685a:;
			{
				jule::Ptr<_1b2bcd620_BinaryExprModel> _368_b = (*(_2828_m)).cast_ptr<_1b2bcd620_BinaryExprModel>(&__jule_any_type113);;
				_1b386981b_inspect(_self_, &((*((*(_368_b))._field_Left))._field_Model));
				_1b386981b_inspect(_self_, &((*((*_368_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b7b769d1:;
			{
				jule::Ptr<_1b2bcd9e9_UnaryExprModel> _408_u = (*(_2828_m)).cast_ptr<_1b2bcd9e9_UnaryExprModel>(&__jule_any_type112);;
				_1b386981b_inspect(_self_, &((*((*(_408_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b7b768c1:;
			{
				jule::Ptr<_1b2bce3bd_StructLitExprModel> _438_lit = (*(_2828_m)).cast_ptr<_1b2bce3bd_StructLitExprModel>(&__jule_any_type97);;
				{
					auto expr = &((*(_438_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7b7acd2:;
					if (it != expr_end) {
						jule::Ptr<_1b2bce027_StructArgExprModel> _4416_arg = *it;
						{
							_1b386981b_inspect(_self_, &((*((*(_4416_arg))._field_Expr))._field_Model));
						}
						_iter_next_1b7b7acd2:;
						++it;
						goto _iter_begin_1b7b7acd2;
					}
					_iter_end_1b7b7acd2:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b7b76c9a:;
			{
				jule::Ptr<_1b2bce3bd_StructLitExprModel> _488_lit = (*((*(_2828_m)).cast_ptr<_1b2bce6ba_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
				{
					auto expr = &((*(_488_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7b7c498:;
					if (it != expr_end) {
						jule::Ptr<_1b2bce027_StructArgExprModel> _4916_arg = *it;
						{
							_1b386981b_inspect(_self_, &((*((*(_4916_arg))._field_Expr))._field_Model));
						}
						_iter_next_1b7b7c498:;
						++it;
						goto _iter_begin_1b7b7c498;
					}
					_iter_end_1b7b7c498:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b7b76d11:;
			{
				jule::Ptr<_1b2bcec4d_CastingExprModel> _538_c = (*(_2828_m)).cast_ptr<_1b2bcec4d_CastingExprModel>(&__jule_any_type95);;
				_1b386981b_inspect(_self_, &((*((*(_538_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b7b76d77:;
			{
				jule::Ptr<_1b2bd0600_FnCallExprModel> _568_fc = (*(_2828_m)).cast_ptr<_1b2bd0600_FnCallExprModel>(&__jule_any_type30);;
				_1b386981b_inspect(_self_, &((*(_568_fc))._field_Expr));
				_1b3869563_args(_self_, (*_568_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b7b76ddd:;
			{
				jule::Ptr<_1b2bd09c9_SliceExprModel> _608_s = (*(_2828_m)).cast_ptr<_1b2bd09c9_SliceExprModel>(&__jule_any_type79);;
				_1b3869563_args(_self_, (*(_608_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b7b76e54:;
			{
				jule::Ptr<_1b2bd3911_ArrayExprModel> _638_a = (*(_2828_m)).cast_ptr<_1b2bd3911_ArrayExprModel>(&__jule_any_type87);;
				_1b3869563_args(_self_, (*(_638_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b7b76ecb:;
			{
				jule::Ptr<_1b2bd0e80_IndexingExprModel> _668_i = (*(_2828_m)).cast_ptr<_1b2bd0e80_IndexingExprModel>(&__jule_any_type42);;
				_1b386981b_inspect(_self_, &((*((*(_668_i))._field_Expr))._field_Model));
				_1b386981b_inspect(_self_, &((*((*_668_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b7b77053:;
			{
				jule::Ptr<_1b2bd1bd9_MapExprModel> _708_mp = (*(_2828_m)).cast_ptr<_1b2bd1bd9_MapExprModel>(&__jule_any_type101);;
				{
					auto expr = &((*(_708_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7b83966:;
					if (it != expr_end) {
						jule::Ptr<_1b2bd1810_KeyValPairExprModel> _7116_entry = *it;
						{
							_1b386981b_inspect(_self_, &((*(_7116_entry))._field_Key));
							_1b386981b_inspect(_self_, &((*_7116_entry.alloc)._field_Val));
						}
						_iter_next_1b7b83966:;
						++it;
						goto _iter_begin_1b7b83966;
					}
					_iter_end_1b7b83966:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b7b770ca:;
			{
				jule::Ptr<_1b2bd226c_SlicingExprModel> _768_s = (*(_2828_m)).cast_ptr<_1b2bd226c_SlicingExprModel>(&__jule_any_type94);;
				_1b386981b_inspect(_self_, &((*(_768_s))._field_Expr));
				_1b386981b_inspect(_self_, &((*_768_s.alloc)._field_Left));
				if (((*_768_s.alloc)._field_Right != nullptr)) {
					_1b386981b_inspect(_self_, &((*_768_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b7b77152:;
			{
				jule::Ptr<_1b2bd2800_TraitSubIdentExprModel> _838_t = (*(_2828_m)).cast_ptr<_1b2bd2800_TraitSubIdentExprModel>(&__jule_any_type99);;
				_1b386981b_inspect(_self_, &((*(_838_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b7b771c9:;
			{
				jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _868_s = (*(_2828_m)).cast_ptr<_1b2bd3191_StructSubIdentExprModel>(&__jule_any_type100);;
				_1b386981b_inspect(_self_, &((*((*(_868_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b7b77251:;
			{
				jule::Ptr<_1b2bd3c0d_TupleExprModel> _898_t = (*(_2828_m)).cast_ptr<_1b2bd3c0d_TupleExprModel>(&__jule_any_type83);;
				{
					auto expr = &((*(_898_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7b884c6:;
					if (it != expr_end) {
						jule::Ptr<_1b2d7dc21_Data> _9016_d = *it;
						{
							_1b386981b_inspect(_self_, &((*(_9016_d))._field_Model));
						}
						_iter_next_1b7b884c6:;
						++it;
						goto _iter_begin_1b7b884c6;
					}
					_iter_end_1b7b884c6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b7b772c8:;
			{
				jule::Ptr<_1b2bd488a_BuiltinNewCallExprModel> _948_b = (*(_2828_m)).cast_ptr<_1b2bd488a_BuiltinNewCallExprModel>(&__jule_any_type115);;
				if (((*(_948_b))._field_Init != nullptr)) {
					_1b386981b_inspect(_self_, &((*_948_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b7b77350:;
			{
				jule::Ptr<_1b2bd40d7_BuiltinOutCallExprModel> _998_c = (*(_2828_m)).cast_ptr<_1b2bd40d7_BuiltinOutCallExprModel>(&__jule_any_type24);;
				_1b386981b_inspect(_self_, &((*((*(_998_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b7b773c7:;
			{
				jule::Ptr<_1b2bd44b1_BuiltinOutlnCallExprModel> _1028_c = (*(_2828_m)).cast_ptr<_1b2bd44b1_BuiltinOutlnCallExprModel>(&__jule_any_type25);;
				_1b386981b_inspect(_self_, &((*((*(_1028_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b7b7744e:;
			{
				jule::Ptr<_1b2bd4c64_BuiltinPanicCallExprModel> _1058_c = (*(_2828_m)).cast_ptr<_1b2bd4c64_BuiltinPanicCallExprModel>(&__jule_any_type26);;
				_1b386981b_inspect(_self_, &((*(_1058_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b7b774c6:;
			{
				jule::Ptr<_1b2bd686a_BuiltinErrorCallExprModel> _1088_c = (*(_2828_m)).cast_ptr<_1b2bd686a_BuiltinErrorCallExprModel>(&__jule_any_type20);;
				_1b386981b_inspect(_self_, &((*((*(_1088_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b7b7754d:;
			{
				jule::Ptr<_1b2bd521a_BuiltinMakeCallExprModel> _1118_b = (*(_2828_m)).cast_ptr<_1b2bd521a_BuiltinMakeCallExprModel>(&__jule_any_type116);;
				if (((*(_1118_b))._field_Len != nullptr)) {
					_1b386981b_inspect(_self_, &((*_1118_b.alloc)._field_Len));
				};
				if (((*_1118_b.alloc)._field_Cap != nullptr)) {
					_1b386981b_inspect(_self_, &((*_1118_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b7b775c5:;
			{
				jule::Ptr<_1b2bd55e4_BuiltinAppendCallExprModel> _1198_b = (*(_2828_m)).cast_ptr<_1b2bd55e4_BuiltinAppendCallExprModel>(&__jule_any_type23);;
				_1b386981b_inspect(_self_, &((*(_1198_b))._field_Dest));
				_1b386981b_inspect(_self_, &((*_1198_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b7b7764c:;
			{
				jule::Ptr<_1b2bd58e1_BuiltinLenCallExprModel> _1238_l = (*(_2828_m)).cast_ptr<_1b2bd58e1_BuiltinLenCallExprModel>(&__jule_any_type117);;
				_1b386981b_inspect(_self_, &((*((*(_1238_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b7b776c4:;
			{
				jule::Ptr<_1b2bd5bdd_BuiltinCapCallExprModel> _1268_c = (*(_2828_m)).cast_ptr<_1b2bd5bdd_BuiltinCapCallExprModel>(&__jule_any_type118);;
				_1b386981b_inspect(_self_, &((*((*(_1268_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b7b7774b:;
			{
				jule::Ptr<_1b2bd60b7_BuiltinDeleteCallExprModel> _1298_b = (*(_2828_m)).cast_ptr<_1b2bd60b7_BuiltinDeleteCallExprModel>(&__jule_any_type28);;
				_1b386981b_inspect(_self_, &((*((*(_1298_b))._field_Dest))._field_Model));
				if (((*_1298_b.alloc)._field_Key != nullptr)) {
					_1b386981b_inspect(_self_, &((*(*(_1298_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b7b777c3:;
			{
				jule::Ptr<_1b2bd6b67_SizeofExprModel> _1358_s = (*(_2828_m)).cast_ptr<_1b2bd6b67_SizeofExprModel>(&__jule_any_type119);;
				_1b386981b_inspect(_self_, &((*(_1358_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b7b7784a:;
			{
				jule::Ptr<_1b2bd731b_AlignofExprModel> _1388_a = (*(_2828_m)).cast_ptr<_1b2bd731b_AlignofExprModel>(&__jule_any_type120);;
				_1b386981b_inspect(_self_, &((*(_1388_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b7b778c2:;
			{
				jule::Ptr<_1b2bd7b79_FreeExprModel> _1418_f = (*(_2828_m)).cast_ptr<_1b2bd7b79_FreeExprModel>(&__jule_any_type29);;
				_1b386981b_inspect(_self_, &((*(_1418_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b7b77949:;
			{
				jule::Ptr<_1b2bd787c_BackendEmitExprModel> _1448_e = (*(_2828_m)).cast_ptr<_1b2bd787c_BackendEmitExprModel>(&__jule_any_type22);;
				_1b3869563_args(_self_, (*(_1448_e))._field_Exprs);
			}
		}
		_match_end_1b7b767e4:;
	};
}



inline void _1b3869b7e_Inspect(_1b3868e8b_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f) {
	(*(_self_))._field_handler=_15248_f;
	_1b386981b_inspect(_self_, _15228_m);
}












inline jule::Bool _1b4826dc1_specialCaseDefines_eq(_1b4826dc1_specialCaseDefines *_self_, _1b4826dc1_specialCaseDefines _other_) {
	return 
		(_self_->_field_runtime_Map == _other_._field_runtime_Map) &&
		(_self_->_field_runtime_mapIterator == _self_->_field_runtime_mapIterator);
}

inline jule::Bool _1b482a26a_isAllMethodsLive(_1b4826dc1_specialCaseDefines* _self_, jule::Ptr<_1b2b0db6b_Struct> _1928_s) {
	return ((_1928_s == (*(_self_))._field_runtime_Map) || (_1928_s == (*(_self_))._field_runtime_mapIterator));;
}











inline jule::Ptr<_1b482acc6_ObjectDeadCode> static__1b482b348_new(jule::Ptr<_1b3865075_IR>* _3921_ir) {
	return jule::new_ptr<_1b482acc6_ObjectDeadCode>(_1b482acc6_ObjectDeadCode{._field_live=_1b482a820_liveTable{._field_vars=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1b2bdda70_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1b2b119c6_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1b2be61c6_Trait>>(nullptr)}, ._field_ir=(*(_3921_ir)), ._field_scd=_1b4826dc1_specialCaseDefines{._field_runtime_Map=jule::Ptr<_1b2b0db6b_Struct>(nullptr), ._field_runtime_mapIterator=jule::Ptr<_1b2b0db6b_Struct>(nullptr)}});;
}



inline jule::Bool _1b7be3157_isLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2b119c6_StructIns>* _4527_t) {
	jule::Slice<jule::Ptr<_1b2b119c6_StructIns>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1b7be4d4b:;
			{
				_4611_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1b7be4c19:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7be4c80:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1b7be4c80:;
			++it;
			_577_i++;
			goto _iter_begin_1b7be4c80;
		}
		_iter_end_1b7be4c80:;
	};
	return false;;
}

inline jule::Bool _1b7bea04e_isLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2bdda70_FnIns>* _4527_t) {
	jule::Slice<jule::Ptr<_1b2bdda70_FnIns>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1b7bebb88:;
			{
				_4611_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1b7bebabc:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bebb33:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1b7bebb33:;
			++it;
			_577_i++;
			goto _iter_begin_1b7bebb33;
		}
		_iter_end_1b7bebb33:;
	};
	return false;;
}

inline jule::Bool _1b7c21b7a_isLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2be61c6_Trait>* _4527_t) {
	jule::Slice<jule::Ptr<_1b2be61c6_Trait>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1b7c238d5:;
			{
				_4611_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1b7c2373c:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c249a2:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1b7c249a2:;
			++it;
			_577_i++;
			goto _iter_begin_1b7c249a2;
		}
		_iter_end_1b7c249a2:;
	};
	return false;;
}

inline jule::Bool _1b7c2bda5_isLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2d26ca7_Var>* _4527_t) {
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1b7c2d7be:;
			{
				_4611_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1b7c2d923:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c2e45c:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1b7c2e45c:;
			++it;
			_577_i++;
			goto _iter_begin_1b7c2e45c;
		}
		_iter_end_1b7c2e45c:;
	};
	return false;;
}



inline void _1b7be3ad6_pushLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2b119c6_StructIns> _6532_t) {
	{
		
{
			_case_begin_1b7be71e4:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b119c6_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1b7be5e4b:;
	};
}

inline void _1b7bed739_pushLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2bdda70_FnIns> _6532_t) {
	{
		
{
			_case_begin_1b7bee6a2:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2bdda70_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1b7beda9c:;
	};
}

inline void _1b7c22609_pushLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2be61c6_Trait> _6532_t) {
	{
		
{
			_case_begin_1b7c25a6e:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2be61c6_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1b7c24320:;
	};
}

inline void _1b7c3031a_pushLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2d26ca7_Var> _6532_t) {
	{
		
{
			_case_begin_1b7c31052:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1b7c2ea9a:;
	};
}



inline void _1b482bbb7_pushStructAsLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2b119c6_StructIns>* _7838_s) {
	if (_1b7be3157_isLive(_self_, _7838_s)) {
		return;;
	};
	_1b7be3ad6_pushLive(_self_, (*(_7838_s)));
	_1b482be70_setReferencesAsLive(_self_, &((*((*(_7838_s))))._field_Refers));
	jule::Bool _843_allLive = _1b482a26a_isAllMethodsLive(&(*_self_.alloc)._field_scd, (*((*(_7838_s))))._field_Decl);;
	{
		auto expr = &((*((*(_7838_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7be8668:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _8515_m = *it;
			{
				{
					auto expr = &((*(_8515_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7be903c:;
					if (it != expr_end) {
						jule::Ptr<_1b2bdda70_FnIns> _8616_ins = *it;
						{
							if (_1b7bea04e_isLive(_self_, &(_8616_ins))) {
								goto _iter_next_1b7be903c;
							};
							if (_843_allLive) {
								_1b7bed739_pushLive(_self_, _8616_ins);
								_1b482be70_setReferencesAsLive(_self_, &((*(_8616_ins))._field_Refers));
								goto _iter_next_1b7be903c;
							};
							if (_1b386b7da_IsTraitMethod(_7838_s, &(_8616_ins))) {
								_1b7bed739_pushLive(_self_, _8616_ins);
								_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
							};
							;
							;
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Eq)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Gt)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_GtEq)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Lt)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_LtEq)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Shl)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Shr)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Add)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Sub)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Div)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Mul)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Mod)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitAnd)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitOr)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitXor)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Neg)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Pos)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitNot)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_AddAssign)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_SubAssign)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_DivAssign)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_MulAssign)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ModAssign)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ShlAssign)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ShrAssign)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitOrAssign)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitAndAssign)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitXorAssign)) {
									_1b7bed739_pushLive(_self_, _8616_ins);
									_1b482be70_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							;
							jule::Ptr<_1b2bda9b2_Fn> _1249_dispose = _1b2b12a71_FindMethod((*(_7838_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
							if (((_1249_dispose != nullptr) && static__1b2d28281_Dispose(_1249_dispose))) {
								jule::Ptr<_1b2bdda70_FnIns> _12610_fins = (*_1249_dispose.alloc)._field_Instances[0LL];;
								_1b7bed739_pushLive(_self_, _12610_fins);
								_1b482be70_setReferencesAsLive(_self_, &((*(_12610_fins))._field_Refers));
							};
							jule::Ptr<_1b2bda9b2_Fn> _1319__str = _1b2b12a71_FindMethod((*(_7838_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1319__str != nullptr) && static__1b2d2854a_Str(_1319__str))) {
								jule::Ptr<_1b2bdda70_FnIns> _13310_fins = (*(_1319__str))._field_Instances[0LL];;
								_1b7bed739_pushLive(_self_, _13310_fins);
								_1b482be70_setReferencesAsLive(_self_, &((*(_13310_fins))._field_Refers));
							};
						}
						_iter_next_1b7be903c:;
						++it;
						goto _iter_begin_1b7be903c;
					}
					_iter_end_1b7be903c:;
				};
			}
			_iter_next_1b7be8668:;
			++it;
			goto _iter_begin_1b7be8668;
		}
		_iter_end_1b7be8668:;
	};
}



inline void _1b482be70_setReferencesAsLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2cc3094_ReferenceStack>* _14141_rs) {
	if (((*(_14141_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _1457_i = 0LL;;
	for (; (_1457_i < _1b2cc3616_Len((*(_14141_rs)).ptr())); (_1457_i)++) {
		{
			jule::Any _1478_ref = _1b2cc3957_At((*(_14141_rs)).ptr(), _1457_i);;
			{
				auto &_match_expr{ _1478_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1b7c2086b:;
					{
						jule::Ptr<_1b2be61c6_Trait> _1509_t = _1478_ref.unsafe_cast_ptr<_1b2be61c6_Trait>();;
						if (_1b7c21b7a_isLive(_self_, &(_1509_t))) {
							goto _iter_next_1b7c1ea13;
						};
						_1b7c22609_pushLive(_self_, _1509_t);
						{
							auto expr = &((*(_1509_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b7c21592:;
							if (it != expr_end) {
								jule::Ptr<_1b2bda9b2_Fn> _15517_ins = *it;
								{
									{
										auto expr = &((*(_15517_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b7c25761:;
										if (it != expr_end) {
											jule::Ptr<_1b2bdda70_FnIns> _15618_mins = *it;
											{
												if (_1b7bea04e_isLive(_self_, &(_15618_mins))) {
													goto _iter_next_1b7c25761;
												};
												_1b7bed739_pushLive(_self_, _15618_mins);
												_1b482be70_setReferencesAsLive(_self_, &((*(_15618_mins))._field_Refers));
											}
											_iter_next_1b7c25761:;
											++it;
											goto _iter_begin_1b7c25761;
										}
										_iter_end_1b7c25761:;
									};
								}
								_iter_next_1b7c21592:;
								++it;
								goto _iter_begin_1b7c21592;
							}
							_iter_end_1b7c21592:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type63) {
					_case_begin_1b7c206a1:;
					{
						jule::Ptr<_1b2bdda70_FnIns> _1659_f = _1478_ref.unsafe_cast_ptr<_1b2bdda70_FnIns>();;
						if (_1b7bea04e_isLive(_self_, &(_1659_f))) {
							goto _match_end_1b7c20728;
						};
						if ((((*(_1659_f))._field_Owner != nullptr) && (!((*((*_1659_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1b7be3157_isLive(_self_, &((*_1659_f.alloc)._field_Owner))))) {
								_1b7be3ad6_pushLive(_self_, (*_1659_f.alloc)._field_Owner);
								_1b482be70_setReferencesAsLive(_self_, &((*(*(_1659_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1b7bed739_pushLive(_self_, _1659_f);
						_1b482be70_setReferencesAsLive(_self_, &((*_1659_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1b7c208d2:;
					{
						jule::Ptr<_1b2d26ca7_Var> _1789_v = _1478_ref.unsafe_cast_ptr<_1b2d26ca7_Var>();;
						if (_1b7c2bda5_isLive(_self_, &(_1789_v))) {
							goto _match_end_1b7c20728;
						};
						_1b7c3031a_pushLive(_self_, _1789_v);
						_1b482be70_setReferencesAsLive(_self_, &((*(_1789_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type64) {
					_case_begin_1b7c20948:;
					{
						jule::Ptr<_1b2b119c6_StructIns> _1859_s = _1478_ref.unsafe_cast_ptr<_1b2b119c6_StructIns>();;
						_1b482bbb7_pushStructAsLive(_self_, &(_1859_s));
					}
				}
				_match_end_1b7c20728:;
			};
		}
	_iter_next_1b7c1ea13:;
	}
	_iter_end_1b7c1ea13:;;
}



inline void _1b482c228_inits(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2cd7691_Package>* _19127_pkg) {
	{
		auto expr = &((*((*(_19127_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c1eded:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _19215_file = *it;
			{
				{
					auto expr = &((*(_19215_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7c3341c:;
					if (it != expr_end) {
						jule::Ptr<_1b2bda9b2_Fn> _19316_f = *it;
						{
							if ((*(_19316_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1b2bdda70_FnIns> _19510_ins = (*(_19316_f))._field_Instances[0LL];;
								if ((!(_1b7bea04e_isLive(_self_, &(_19510_ins))))) {
									_1b7bed739_pushLive(_self_, _19510_ins);
								};
								_1b482be70_setReferencesAsLive(_self_, &((*(_19510_ins))._field_Refers));
							};
						}
						_iter_next_1b7c3341c:;
						++it;
						goto _iter_begin_1b7c3341c;
					}
					_iter_end_1b7c3341c:;
				};
			}
			_iter_next_1b7c1eded:;
			++it;
			goto _iter_begin_1b7c1eded;
		}
		_iter_end_1b7c1eded:;
	};
}



inline void _1b482c4d1_collectLivePackage(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2cd7691_Package>* _20540_pkg) {
	_1b482c228_inits(_self_, _20540_pkg);
	_1b3867bd2_IterFiles(_20540_pkg, jule::__new_closure<void,jule::Ptr<_1b2be1cb5_SymTab>*>((void*)__jule_anon_1b7c36200, jule::Ptr<__jule_anon_1b7c36200_ctx>::make(__jule_anon_1b7c36200_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b7c36200_ctx_handler));
	if (_20dbc261d_Test) {
		if ((((*((*(_20540_pkg))))._field_Files.len() > 0LL) && _1b386bb5e_IsStdPackage((*((*((*((*(_20540_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1b2b0db6b_Struct> _2359_s = _1b2cd885c_FindStruct((*(_20540_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1b2b119c6_StructIns> _2369_ins = (*(_2359_s))._field_Instances[0LL];;
			_1b482bbb7_pushStructAsLive(_self_, &(_2369_ins));
			{
				auto expr = &((*(_2369_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b7c3c745:;
				if (it != expr_end) {
					jule::Ptr<_1b2bda9b2_Fn> _23817_m = *it;
					{
						{
							auto expr = &((*(_23817_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b7c3d2b2:;
							if (it != expr_end) {
								jule::Ptr<_1b2bdda70_FnIns> _23918_mins = *it;
								{
									if (_1b7bea04e_isLive(_self_, &(_23918_mins))) {
										goto _iter_next_1b7c3d2b2;
									};
									_1b7bed739_pushLive(_self_, _23918_mins);
									_1b482be70_setReferencesAsLive(_self_, &((*(_23918_mins))._field_Refers));
								}
								_iter_next_1b7c3d2b2:;
								++it;
								goto _iter_begin_1b7c3d2b2;
							}
							_iter_end_1b7c3d2b2:;
						};
					}
					_iter_next_1b7c3c745:;
					++it;
					goto _iter_begin_1b7c3c745;
				}
				_iter_end_1b7c3c745:;
			};
		};
		{
			auto expr = &((*((*(_20540_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7c3939b:;
			if (it != expr_end) {
				jule::Ptr<_1b2be1cb5_SymTab> _24816_file = *it;
				{
					{
						auto expr = &((*(_24816_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b7c40979:;
						if (it != expr_end) {
							jule::Ptr<_1b2bda9b2_Fn> _24917_f = *it;
							{
								if (_1b386cdb3_HasDirective(&((*(_24917_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1b2bdda70_FnIns> _25111_ins = (*_24917_f.alloc)._field_Instances[0LL];;
									if ((!(_1b7bea04e_isLive(_self_, &(_25111_ins))))) {
										_1b7bed739_pushLive(_self_, _25111_ins);
									};
									_1b482be70_setReferencesAsLive(_self_, &((*(_25111_ins))._field_Refers));
								};
							}
							_iter_next_1b7c40979:;
							++it;
							goto _iter_begin_1b7c40979;
						}
						_iter_end_1b7c40979:;
					};
				}
				_iter_next_1b7c3939b:;
				++it;
				goto _iter_begin_1b7c3939b;
			}
			_iter_end_1b7c3939b:;
		};
	};
}



inline void _1b482c6ce_collectLive(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c4210c:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _26315_used = *it;
			{
				if ((!((*(_26315_used))._field_Binded))) {
					_1b482c4d1_collectLivePackage(_self_, &((*_26315_used.alloc)._field_Package));
				};
			}
			_iter_next_1b7c4210c:;
			++it;
			goto _iter_begin_1b7c4210c;
		}
		_iter_end_1b7c4210c:;
	};
	_1b482c4d1_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1b2bda9b2_Fn> _2717_main = _1b2cd8c58_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2717_main != nullptr)) {
		jule::Ptr<_1b2bdda70_FnIns> _2738_ins = (*_2717_main.alloc)._field_Instances[0LL];;
		if ((!(_1b7bea04e_isLive(_self_, &(_2738_ins))))) {
			_1b7bed739_pushLive(_self_, _2738_ins);
		};
		_1b482be70_setReferencesAsLive(_self_, &((*(_2738_ins))._field_Refers));
	};
}



inline void _1b482c987_removeDeadGlobals(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2d26ca7_Var>>* _28139_vars) {
	jule::I64 _2827_i = 0LL;;
	while ((_2827_i < (*(_28139_vars)).len())) {
		{
			jule::Ptr<_1b2d26ca7_Var> _2844_v = (*(_28139_vars))[_2827_i];;
			if (_1b7c2bda5_isLive(_self_, &(_2844_v))) {
				(_2827_i)++;
				goto _iter_next_1b7c473a9;
			};
			(*(_28139_vars))=jule::append((*(_28139_vars)).slice(0LL, _2827_i),(*(_28139_vars)).slice((_2827_i + 1LL)));
		}
	_iter_next_1b7c473a9:;
	}
	_iter_end_1b7c473a9:;;
}



inline void _1b482cc40_removeDeadFns(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>* _29335_funcs) {
	jule::I64 _2947_i = 0LL;;
	while ((_2947_i < (*(_29335_funcs)).len())) {
		{
			jule::Ptr<_1b2bda9b2_Fn> _2968_f = (*(_29335_funcs))[_2947_i];;
			jule::I64 _2978_j = 0LL;;
			while ((_2978_j < (*(_2968_f))._field_Instances.len())) {
				{
					jule::Ptr<_1b2bdda70_FnIns> _2995_ins = (*(_2968_f))._field_Instances[_2978_j];;
					if (_1b7bea04e_isLive(_self_, &(_2995_ins))) {
						(_2978_j)++;
						goto _iter_next_1b7c49c5d;
					};
					(*_2968_f.alloc)._field_Instances=jule::append((*_2968_f.alloc)._field_Instances.slice(0LL, _2978_j),(*_2968_f.alloc)._field_Instances.slice((_2978_j + 1LL)));
				}
			_iter_next_1b7c49c5d:;
			}
			_iter_end_1b7c49c5d:;;
			if (((*_2968_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_29335_funcs))=jule::append((*(_29335_funcs)).slice(0LL, _2947_i),(*(_29335_funcs)).slice((_2947_i + 1LL)));
				goto _iter_next_1b7c48e16;
			};
			(_2947_i)++;
		}
	_iter_next_1b7c48e16:;
	}
	_iter_end_1b7c48e16:;;
}



inline void _1b482cee8_removeDeadStructs(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>* _31439_structs) {
	jule::I64 _3157_i = 0LL;;
	while ((_3157_i < (*(_31439_structs)).len())) {
		{
			jule::Ptr<_1b2b0db6b_Struct> _3178_s = (*(_31439_structs))[_3157_i];;
			jule::I64 _3188_j = 0LL;;
			while ((_3188_j < (*(_3178_s))._field_Instances.len())) {
				{
					jule::Ptr<_1b2b119c6_StructIns> _3209_ins = (*(_3178_s))._field_Instances[_3188_j];;
					_1b482cc40_removeDeadFns(_self_, &((*(_3209_ins))._field_Methods));
					if ((((*_3209_ins.alloc)._field_Methods.len() != 0LL) || _1b7be3157_isLive(_self_, &(_3209_ins)))) {
						(_3188_j)++;
						goto _iter_next_1b7c4d910;
					};
					(*_3178_s.alloc)._field_Instances=jule::append((*_3178_s.alloc)._field_Instances.slice(0LL, _3188_j),(*_3178_s.alloc)._field_Instances.slice((_3188_j + 1LL)));
				}
			_iter_next_1b7c4d910:;
			}
			_iter_end_1b7c4d910:;;
			if (((*_3178_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_31439_structs))=jule::append((*(_31439_structs)).slice(0LL, _3157_i),(*(_31439_structs)).slice((_3157_i + 1LL)));
				goto _iter_next_1b7c4cab8;
			};
			(_3157_i)++;
		}
	_iter_next_1b7c4cab8:;
	}
	_iter_end_1b7c4cab8:;;
}



inline void _1b482d2a1_removeDeadTraits(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b2be61c6_Trait>>* _33638_traits) {
	jule::I64 _3377_i = 0LL;;
	while ((_3377_i < (*(_33638_traits)).len())) {
		{
			jule::Ptr<_1b2be61c6_Trait> _3398_t = (*(_33638_traits))[_3377_i];;
			if ((!(_1b7c21b7a_isLive(_self_, &(_3398_t))))) {
				(*(_33638_traits))=jule::append((*(_33638_traits)).slice(0LL, _3377_i),(*(_33638_traits)).slice((_3377_i + 1LL)));
				goto _iter_next_1b7c522c6;
			};
			jule::I64 _3448_j = 0LL;;
			while ((_3448_j < (*(_3398_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1b2b0db6b_Struct> _3465_s = (*(_3398_t))._field_Implemented[_3448_j];;
					if (((*(_3465_s))._field_Instances.len() > 0LL)) {
						(_3448_j)++;
						goto _iter_next_1b7c52c22;
					};
					(*_3398_t.alloc)._field_Implemented=jule::append((*_3398_t.alloc)._field_Implemented.slice(0LL, _3448_j),(*_3398_t.alloc)._field_Implemented.slice((_3448_j + 1LL)));
				}
			_iter_next_1b7c52c22:;
			}
			_iter_end_1b7c52c22:;;
			(_3377_i)++;
		}
	_iter_next_1b7c522c6:;
	}
	_iter_end_1b7c522c6:;;
}



inline void _1b482d559_removeDeadsFile(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2be1cb5_SymTab>* _35737_file) {
	_1b482cc40_removeDeadFns(_self_, &((*((*(_35737_file))))._field_Funcs));
	_1b482cee8_removeDeadStructs(_self_, &((*((*(_35737_file))))._field_Structs));
	_1b482d2a1_removeDeadTraits(_self_, &((*((*(_35737_file))))._field_Traits));
	_1b482c987_removeDeadGlobals(_self_, &((*((*(_35737_file))))._field_Vars));
}



inline void _1b482d812_removeDeadsPackage(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_, jule::Ptr<_1b2cd7691_Package>* _36440_pkg) {
	{
		auto expr = &((*((*(_36440_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c577d7:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _36515_file = *it;
			{
				_1b482d559_removeDeadsFile(_self_, &(_36515_file));
			}
			_iter_next_1b7c577d7:;
			++it;
			goto _iter_begin_1b7c577d7;
		}
		_iter_end_1b7c577d7:;
	};
}



inline void _1b482da10_removeDeads(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c58079:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _37115_used = *it;
			{
				if ((!((*(_37115_used))._field_Binded))) {
					_1b482d812_removeDeadsPackage(_self_, &((*_37115_used.alloc)._field_Package));
				};
			}
			_iter_next_1b7c58079:;
			++it;
			goto _iter_begin_1b7c58079;
		}
		_iter_end_1b7c58079:;
	};
	_1b482d812_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1b482dc0d_collectSpecialCaseDefines(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_) {
	(*(_self_))._field_scd._field_runtime_Map=_1b2ea145e_RuntimeFindStruct(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));
	(*_self_.alloc)._field_scd._field_runtime_mapIterator=_1b2ea145e_RuntimeFindStruct(&((*(*(_self_))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));
}



inline void _1b482de0b_elimanate(jule::Ptr<_1b482acc6_ObjectDeadCode> _self_) {
	_1b482dc0d_collectSpecialCaseDefines(_self_);
	_1b482c6ce_collectLive(_self_);
	_1b482da10_removeDeads(_self_);
}








inline jule::Bool _1b482ed41_scopeDeadCode_eq(_1b482ed41_scopeDeadCode *_self_, _1b482ed41_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1b483035d_optimizeChild(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca4592_Scope>* _1935_s) {
	jule::Ptr<_1b482ed41_scopeDeadCode> _207_sdc = jule::new_ptr<_1b482ed41_scopeDeadCode>(_1b482ed41_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_1935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1b4832c78_optimizeStmts(_207_sdc);
	};
}



inline void _1b4830616_optimizeBodyChildExceptional(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca4592_Scope>* _2950_s) {
	jule::Ptr<_1b482ed41_scopeDeadCode> _307_sdc = jule::new_ptr<_1b482ed41_scopeDeadCode>(_1b482ed41_scopeDeadCode{._field_parent=jule::Ptr<_1b482ed41_scopeDeadCode>(nullptr), ._field_s=(*(_2950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1b4832c78_optimizeStmts(_307_sdc);
	};
}



inline void _1b48308be_optimizeBodyChild(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca4592_Scope>* _3939_s) {
	jule::Ptr<_1b482ed41_scopeDeadCode> _407_sdc = jule::new_ptr<_1b482ed41_scopeDeadCode>(_1b482ed41_scopeDeadCode{._field_parent=jule::Ptr<_1b482ed41_scopeDeadCode>(nullptr), ._field_s=(*(_3939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1b4832c78_optimizeStmts(_407_sdc);
	};
}



inline void _1b4830b77_optimizeExprModel(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Any* _4839_model) {
	_1b48343c8_exprDeadCode _493_edc = static__1b48347e6_new(&(_self_));;
	_1b4834a9e_optimize(&_493_edc, _4839_model);
}



inline void _1b4830d75_eliminateFollowed(_1b482ed41_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1b482ed41_scopeDeadCode> _607_parent = (*(_self_))._field_parent;;
	while ((_607_parent != nullptr)) {
		{
			{
				((*((*(_607_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_607_parent))._field_i + 1LL));;
			};
			_607_parent=(*_607_parent.alloc)._field_parent;
		}
	_iter_next_1b7c6a410:;
	}
	_iter_end_1b7c6a410:;;
}



inline void _1b483112d_pushGoto(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca774e_GotoSt> _6929_gt) {
	jule::I64 _707_i = 0LL;;
	for (; (_707_i < (*((*(_self_))._field_labels)).len()); (_707_i)++) {
		{
			if (((*(_6929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_707_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1b7c6d743:;
	}
	_iter_end_1b7c6d743:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ca774e_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6929_gt; __jule_collection; }));
}



inline void _1b48313d6_pushLabel(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca70de_Label> _7930_l) {
	jule::I64 _807_i = 0LL;;
	while ((_807_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_7930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_807_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_807_i), (*((*(_self_))._field_gotos)).slice((_807_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1b7c70943;
			};
			(_807_i)++;
		}
	_iter_next_1b7c70943:;
	}
	_iter_end_1b7c70943:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ca70de_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7930_l; __jule_collection; }));
}



inline void _1b483168e_optimizeRangeIter(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca63c9_RangeIter> _9238_it) {
	_1b4830b77_optimizeExprModel(_self_, &((*((*(_9238_it))._field_Expr))._field_Model));
	_1b48308be_optimizeBodyChild(_self_, &((*_9238_it.alloc)._field_Scope));
}



inline void _1b4831947_optimizeWhileIter(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca597d_WhileIter> _9738_it) {
	_1b4830b77_optimizeExprModel(_self_, &((*(_9738_it))._field_Expr));
	if (((*_9738_it.alloc)._field_Next != nullptr)) {
		_1b4832a7a_optimizeStmt(_self_, (*_9738_it.alloc)._field_Next);
	};
	_1b48308be_optimizeBodyChild(_self_, &((*_9738_it.alloc)._field_Scope));
}



inline void _1b4831c00_optimizeInfIter(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca54c7_InfIter> _10536_it) {
	_1b48308be_optimizeBodyChild(_self_, &((*(_10536_it))._field_Scope));
}



inline void _1b4831ea8_optimizeConditional(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca51ca_Conditional> _10940_c) {
	{
		auto expr = &((*(_10940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c77708:;
		if (it != expr_end) {
			jule::Ptr<_1b2ca49b0_If> _11015_case = *it;
			{
				if ((_11015_case != nullptr)) {
					_1b4830b77_optimizeExprModel(_self_, &((*_11015_case.alloc)._field_Expr));
					_1b48308be_optimizeBodyChild(_self_, &((*_11015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1b7c77708:;
			++it;
			goto _iter_begin_1b7c77708;
		}
		_iter_end_1b7c77708:;
	};
	if (((*_10940_c.alloc)._field_Default != nullptr)) {
		if (((*_10940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1b483035d_optimizeChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1b48308be_optimizeBodyChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1b4832261_optimizeMatch(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca8cc2_Match> _12734_m) {
	{
		auto expr = &((*(_12734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c7ac8e:;
		if (it != expr_end) {
			jule::Ptr<_1b2ca97ea_Case> _12815_case = *it;
			{
				{
					auto expr = &((*(_12815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7c7b71d:;
					if (it != expr_end) {
						jule::Ptr<_1b2d7dc21_Data> _12916_expr = *it;
						{
							_1b4830b77_optimizeExprModel(_self_, &((*(_12916_expr))._field_Model));
						}
						_iter_next_1b7c7b71d:;
						++it;
						goto _iter_begin_1b7c7b71d;
					}
					_iter_end_1b7c7b71d:;
				};
				_1b48308be_optimizeBodyChild(_self_, &((*_12815_case.alloc)._field_Scope));
			}
			_iter_next_1b7c7ac8e:;
			++it;
			goto _iter_begin_1b7c7ac8e;
		}
		_iter_end_1b7c7ac8e:;
	};
	if (((*_12734_m.alloc)._field_Default != nullptr)) {
		if (((*_12734_m.alloc)._field_Cases.len() == 0LL)) {
			_1b483035d_optimizeChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1b48308be_optimizeBodyChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1b4832519_optimizeAssign(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca80ce_Assign> _14535_assign) {
	_1b4830b77_optimizeExprModel(_self_, &((*((*(_14535_assign))._field_Left))._field_Model));
	_1b4830b77_optimizeExprModel(_self_, &((*((*_14535_assign.alloc)._field_Right))._field_Model));
}



inline void _1b48327c2_optimizeMultiAssign(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Ptr<_1b2ca8585_MultiAssign> _15040_assign) {
	{
		auto expr = &((*(_15040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c80ada:;
		if (it != expr_end) {
			jule::Ptr<_1b2d7dc21_Data> _15115_l = *it;
			{
				if ((_15115_l != nullptr)) {
					_1b4830b77_optimizeExprModel(_self_, &((*_15115_l.alloc)._field_Model));
				};
			}
			_iter_next_1b7c80ada:;
			++it;
			goto _iter_begin_1b7c80ada;
		}
		_iter_end_1b7c80ada:;
	};
	_1b4830b77_optimizeExprModel(_self_, &((*_15040_assign.alloc)._field_Right));
}



inline void _1b4832a7a_optimizeStmt(jule::Ptr<_1b482ed41_scopeDeadCode> _self_, jule::Any _15933_st) {
	{
		auto &_match_expr{ _15933_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b7c8278a:;
			{
				jule::Ptr<_1b2ca4592_Scope> _1628_scope = _15933_st.unsafe_cast_ptr<_1b2ca4592_Scope>();;
				if ((*(_1628_scope))._field_Deferred) {
					_1b4833075_eliminateDeadCodeOfScope(_1628_scope);
				} else {
					_1b483035d_optimizeChild(_self_, &(_1628_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b7c82504:;
			{
				_1b483168e_optimizeRangeIter(_self_, _15933_st.cast_ptr<_1b2ca63c9_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b7c82812:;
			{
				_1b4831947_optimizeWhileIter(_self_, _15933_st.cast_ptr<_1b2ca597d_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b7c82889:;
			{
				_1b4831c00_optimizeInfIter(_self_, _15933_st.cast_ptr<_1b2ca54c7_InfIter>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b7c82911:;
			{
				_1b4831ea8_optimizeConditional(_self_, _15933_st.cast_ptr<_1b2ca51ca_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b7c82988:;
			{
				_1b4832261_optimizeMatch(_self_, _15933_st.cast_ptr<_1b2ca8cc2_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b7c82a10:;
			{
				_1b4832519_optimizeAssign(_self_, _15933_st.cast_ptr<_1b2ca80ce_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b7c82a87:;
			{
				_1b48327c2_optimizeMultiAssign(_self_, _15933_st.cast_ptr<_1b2ca8585_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b7c82b0e:;
			{
				jule::Ptr<_1b2d7dc21_Data> _1838_d = _15933_st.unsafe_cast_ptr<_1b2d7dc21_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1b7c82636;
				};
				{
					auto &_match_expr{ (*(_1838_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20 || _match_expr.type == &__jule_any_type26) {
						_case_begin_1b7c88373:;
						{
							_1b4830d75_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1b7c889e4:;
						{
							_1b4830b77_optimizeExprModel(_self_, &((*(_1838_d))._field_Model));
						}
					}
					_match_end_1b7c8897d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b7c82b86:;
			{
				_1b4830d75_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b7c82c0d:;
			{
				_1b483112d_pushGoto(_self_, _15933_st.cast_ptr<_1b2ca774e_GotoSt>(&__jule_any_type38));
				_1b4830d75_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1b7c82c85:;
			{
				_1b48313d6_pushLabel(_self_, _15933_st.cast_ptr<_1b2ca70de_Label>(&__jule_any_type18));
			}
		}
		_match_end_1b7c82636:;
	};
}



inline void _1b4832c78_optimizeStmts(jule::Ptr<_1b482ed41_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1b4832a7a_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1b7c8b662:;
	}
	_iter_end_1b7c8b662:;;
}








inline jule::Bool _1b48343c8_exprDeadCode_eq(_1b48343c8_exprDeadCode *_self_, _1b48343c8_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1b48343c8_exprDeadCode static__1b48347e6_new(jule::Ptr<_1b482ed41_scopeDeadCode>* _1421_s) {
	return _1b48343c8_exprDeadCode{._field_s=(*(_1421_s))};;
}



inline void _1b4834a9e_optimize(_1b48343c8_exprDeadCode* _self_, jule::Any* _2025_model) {
	jule::Ptr<_1b3868e8b_ExprInspector> _217_inspector = static__1b38692aa_New();;
	_1b3869b7e_Inspect(_217_inspector.ptr(), _2025_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1b7c8e2ad, jule::Ptr<__jule_anon_1b7c8e2ad_ctx>::make(__jule_anon_1b7c8e2ad_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b7c8e2ad_ctx_handler));
}








inline jule::Bool _1b46d471d_ExceptionalForwardingExprModel_eq(_1b46d471d_ExceptionalForwardingExprModel *_self_, _1b46d471d_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1b46d4993_SwapExprModel_eq(_1b46d4993_SwapExprModel *_self_, _1b46d4993_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1b46d4d6c_EmptyCompareExprModel_eq(_1b46d4d6c_EmptyCompareExprModel *_self_, _1b46d4d6c_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1b46d51e1_RefExprModel_eq(_1b46d51e1_RefExprModel *_self_, _1b46d51e1_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1b46d5664_StrCompExprModel_eq(_1b46d5664_StrCompExprModel *_self_, _1b46d5664_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1b46d5be7_MutSlicingExprModel_eq(_1b46d5be7_MutSlicingExprModel *_self_, _1b46d5be7_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1b46d5ee4_UnsafeBinaryExprModel_eq(_1b46d5ee4_UnsafeBinaryExprModel *_self_, _1b46d5ee4_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1b46d6379_UnsafeIndexingExprModel_eq(_1b46d6379_UnsafeIndexingExprModel *_self_, _1b46d6379_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1b46d6753_PushToSliceExprModel_eq(_1b46d6753_PushToSliceExprModel *_self_, _1b46d6753_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1b46d6b2c_AppendToSliceExprModel_eq(_1b46d6b2c_AppendToSliceExprModel *_self_, _1b46d6b2c_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1b46d7006_StrRuneIter_eq(_1b46d7006_StrRuneIter *_self_, _1b46d7006_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1b46d7303_UnsafeDerefExprModel_eq(_1b46d7303_UnsafeDerefExprModel *_self_, _1b46d7303_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1b46d7600_UnsafeCastingExprModel_eq(_1b46d7600_UnsafeCastingExprModel *_self_, _1b46d7600_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1b46dd0b7_nilVar_eq(_1b46dd0b7_nilVar *_self_, _1b46dd0b7_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1b46dd86a_pushVar(_1b46dd3c5_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe) {
	if (((!(_1b47059e7_Access)) || (_2323_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ce0ba0:;
		if (it != expr_end) {
			_1b46dd0b7_nilVar _2815_v = *it;
			{
				if ((_2815_v._field_var == _2323_var)) {
					_2815_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1b7ce0ba0:;
			++it;
			goto _iter_begin_1b7ce0ba0;
		}
		_iter_end_1b7ce0ba0:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ce1a4c:;
		if (it != expr_end) {
			_1b46dd0b7_nilVar _3515_v = *it;
			{
				if ((_3515_v._field_var == 0LLU)) {
					_3515_v._field_var=_2323_var;
					_3515_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1b7ce1a4c:;
			++it;
			goto _iter_begin_1b7ce1a4c;
		}
		_iter_end_1b7ce1a4c:;
	};
	{ jule::Slice<_1b46dd0b7_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1b46dd0b7_nilVar{._field_var=_2323_var, ._field_safe=_2337_safe}); };
}



inline jule::Bool _1b46ddbab_removeVar(_1b46dd3c5_nils* _self_, jule::Uintptr _4625_var) {
	if ((_4625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7ce3a71:;
			if (it != expr_end) {
				_1b46dd0b7_nilVar _4816_v = *it;
				{
					if ((_4816_v._field_var == _4625_var)) {
						_4816_v._field_var=0LLU;
						_4816_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1b7ce3a71:;
				++it;
				goto _iter_begin_1b7ce3a71;
			}
			_iter_end_1b7ce3a71:;
		};
	};
	return false;;
}



inline jule::Bool _1b46ddeec_isSafe(_1b46dd3c5_nils* _self_, jule::Uintptr _6022_var) {
	if ((_6022_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7ce5215:;
			if (it != expr_end) {
				_1b46dd0b7_nilVar _6211_v = *it;
				{
					if ((_6211_v._field_var == _6022_var)) {
						return _6211_v._field_safe;;
					};
				}
				_iter_next_1b7ce5215:;
				++it;
				goto _iter_begin_1b7ce5215;
			}
			_iter_end_1b7ce5215:;
		};
	};
	return false;;
}








inline jule::Bool _1b46e1043_scopeOptimizer_eq(_1b46e1043_scopeOptimizer *_self_, _1b46e1043_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1b46e1043_scopeOptimizer> static__1b46e1593_new(jule::Ptr<_1b2ca4592_Scope> _2320_scope) {
	jule::Ptr<_1b46e1043_scopeOptimizer> _247_sc = jule::new_ptr<_1b46e1043_scopeOptimizer>(_1b46e1043_scopeOptimizer{._field_parent=jule::Ptr<_1b46e1043_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_2320_scope, ._field_data=jule::new_ptr<_1b4700915_data>(_1b4700915_data{._field_boundary=jule::new_ptr<_1b47021ec_boundary>(_1b47021ec_boundary{._field_vars=jule::Slice<_1b4701dab_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1b46dd3c5_nils>(_1b46dd3c5_nils{._field_vars=jule::Slice<_1b46dd0b7_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1b46eccdb_dynamic>(_1b46eccdb_dynamic{._field_vars=jule::Slice<_1b46ec99a_dynamicVar>(nullptr)})})});;
	return _247_sc;;
}



inline void _1b46e184b_setCurrentStmt(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Any _3535_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_3535_stmt))))));
}



inline void _1b46e1a49_removeCurrent(jule::Ptr<_1b46e1043_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1b46e1cd0_isLastStmt(jule::Ptr<_1b46e1043_scopeOptimizer> _self_) {
	jule::Ptr<_1b46e1043_scopeOptimizer> _457_r = _self_;;
	for (; (_457_r != nullptr); _457_r=(*_457_r.alloc)._field_parent) {
		{
			if ((((*((*_457_r.alloc)._field_scope))._field_Stmts.len() - (*_457_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1b7d07238:;
	}
	_iter_end_1b7d07238:;;
	return true;;
}



inline jule::Bool _1b46e2066_isIter(jule::Ptr<_1b46e1043_scopeOptimizer> _self_) {
	jule::Ptr<_1b46e1043_scopeOptimizer> _557_r = (*(_self_))._field_parent;;
	for (; (_557_r != nullptr); _557_r=(*_557_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_557_r))._field_scope))._field_Stmts[(*(_557_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type32) {
					_case_begin_1b7d09a87:;
					{
						return true;;
					}
				}
				_match_end_1b7d099dd:;
			};
		}
	_iter_next_1b7d08668:;
	}
	_iter_end_1b7d08668:;;
	return false;;
}



inline void _1b46e231e_optimizeData(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2d7dc21_Data> _6733_d) {
	{
		auto &_match_expr{ (*(_6733_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b7d0ac53:;
			{
				jule::Ptr<_1b2bd0600_FnCallExprModel> _708_m = (*(_6733_d))._field_Model.unsafe_cast_ptr<_1b2bd0600_FnCallExprModel>();;
				if (_20dbc2ed1_Production) {
					if (((!(_1b2be0038_IsBuiltin((*(_708_m))._field_Func.ptr()))) && _1b386bb5e_IsStdPackage((*((*((*((*(*(_708_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1b46e184b_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1b46e7e7e_optimizeData(&((*(_6733_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1b4706e6b_Exceptional && (*(*((*(_708_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_708_m.alloc)._field_Except != nullptr)) && ((*(*(_708_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1b386a8e9_IsForwarded(&((*_708_m.alloc)._field_Except))) && _1b46e1cd0_isLastStmt(_self_)) && (!(_1b46e2066_isIter(_self_))))) {
					_1b46e184b_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b46d471d_ExceptionalForwardingExprModel>(_1b46d471d_ExceptionalForwardingExprModel{._field_Expr=_708_m}), &__jule_any_type121));
				};
				return;;
			}
		}
		_match_end_1b7d0abcb:;
	};
	static__1b46e7e7e_optimizeData(&((*_6733_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1b46e25c7_optimizeVar(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2d26ca7_Var> _9332_v) {
	if (((*(_9332_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1b46dea36_isNilValidType((*((*_9332_v.alloc)._field_Kind))._field_Kind)) && _1b46de76c_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_9332_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1b46dd86a_pushVar((*((*(_self_))._field_data))._field_nils, _1b46ded77_getNilVar(jule::Any(_9332_v, &__jule_any_type7)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1b2db1627_TypeKind> _1029_kind = _1b46ee5b2_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_9332_v))._field_Kind.alloc)._field_Kind, (*(*((*(_9332_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1029_kind != nullptr)) {
				if (_1b46ee183_isDynamicValidType((*(*(_9332_v))._field_Kind.alloc)._field_Kind)) {
					_1b46ed281_pushVar((*((*(_self_))._field_data))._field_dynamic, _1b46ee903_getDynamicVar(jule::Any(_9332_v, &__jule_any_type7)), _1029_kind);
				};
			};
		};
		static__1b46e7e7e_optimizeData(&((*(*((*(_9332_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1b46e2880_optimizeConditional(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca51ca_Conditional> _11440_c) {
	_1b470041a_dataCheckpoint _1157_checkpoint = _1b4700cbc_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_11440_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d1bd74:;
		if (it != expr_end) {
			jule::Ptr<_1b2ca49b0_If> _11615_elif = *it;
			{
				static__1b46e7e7e_optimizeData(&((*(_11615_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1b46e550e_optimizeChild(_self_, (*_11615_elif.alloc)._field_Scope);
				if ((((*(_11440_c))._field_Elifs.len() > 1LL) || ((*_11440_c.alloc)._field_Default != nullptr))) {
					_1b4701075_loadCheckpoint((*(_self_))._field_data, &(_1157_checkpoint));
				};
			}
			_iter_next_1b7d1bd74:;
			++it;
			goto _iter_begin_1b7d1bd74;
		}
		_iter_end_1b7d1bd74:;
	};
	if (((*_11440_c.alloc)._field_Default != nullptr)) {
		_1b46e550e_optimizeChild(_self_, (*(*(_11440_c))._field_Default.alloc)._field_Scope);
		_1b4701075_loadCheckpoint((*(_self_))._field_data, &(_1157_checkpoint));
	};
	if ((!(_1b4706421_Cond))) {
		return;;
	};
	jule::Bool _1327_constCase = false;;
	{
		auto expr = &((*_11440_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d20a04:;
		if (it != expr_end) {
			jule::I64 _1358_i = it - expr->begin();
			jule::Ptr<_1b2ca49b0_If> _13515_elif = *it;
			{
				if ((!(_1b46e5a92_isConstantValidConditionalCase(&(_13515_elif))))) {
					goto _iter_next_1b7d20a04;
				};
				_1327_constCase=true;
				((*(_11440_c))._field_Elifs).mut_slice(0LL, _1358_i);;
				(*_11440_c.alloc)._field_Default=jule::new_ptr<_1b2ca4cac_Else>(_1b2ca4cac_Else{._field_Scope=(*(_13515_elif))._field_Scope});
				goto _iter_end_1b7d20a04;
			}
			_iter_next_1b7d20a04:;
			++it;
			_1358_i++;
			goto _iter_begin_1b7d20a04;
		}
		_iter_end_1b7d20a04:;
	};
	if (((*_11440_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1b2ca49b0_If>* _1527_i = (&((*(_11440_c))._field_Elifs[0LL]));;
	jule::Ptr<_1b2ca49b0_If>* _1533_end = (&((*_11440_c.alloc)._field_Elifs[((*_11440_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1527_i <= _1533_end); (_1527_i)++) {
		{
			{
				if (_1b46e64aa_isUnreachableConditionalCase(&((*(_1527_i))))) {
					(*(_1527_i))=nullptr;
				};
			};
		}
	_iter_next_1b7d240ac:;
	}
	_iter_end_1b7d240ac:;;
	if (((*_11440_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1327_constCase))) {
		return;;
	};
	jule::I64 _1717_only = -1LL;;
	{
		auto expr = &((*_11440_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d259b5:;
		if (it != expr_end) {
			jule::I64 _1727_j = it - expr->begin();
			jule::Ptr<_1b2ca49b0_If> _17210_elif = *it;
			{
				if ((_17210_elif != nullptr)) {
					if ((_1717_only != -1LL)) {
						return;;
					};
					_1717_only=_1727_j;
				};
			}
			_iter_next_1b7d259b5:;
			++it;
			_1727_j++;
			goto _iter_begin_1b7d259b5;
		}
		_iter_end_1b7d259b5:;
	};
	if ((_1717_only != -1LL)) {
		_1b46e184b_setCurrentStmt(_self_, jule::Any((*((*_11440_c.alloc)._field_Elifs[_1717_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1b46e2c9d_buildDefaultConstantTrueCase(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca97ea_Case> _18849_case, jule::I64* _18873_i, jule::Ptr<_1b2ca8cc2_Match>* _18886_m) {
	(*(_18849_case))._field_Exprs=nullptr;
	jule::I64 _1903_start = (*(_18873_i));;
	_julec_label_1b7d288b9:;
	for (;;) {
		{
			if (((*((*_18849_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1b7d28864;
			};
			jule::Any *_1969_stmt = &((*(*(_18849_case))._field_Scope.alloc)._field_Stmts[((*(*(_18849_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_1969_stmt)) };
				
				if (_match_expr.type == &__jule_any_type45) {
					_case_begin_1b7d2a7cd:;
					{
						((*(_18873_i)))++;
						if (((*(_18873_i)) >= (*((*(_18886_m))))._field_Cases.len())) {
							(*(_1969_stmt))=jule::Any((*((*((*(_18886_m))))._field_Default))._field_Scope, &__jule_any_type19);
							goto _iter_end_1b7d28864;
						};
						_18849_case=(*((*(_18886_m))))._field_Cases[(*(_18873_i))];
						(*(_1969_stmt))=jule::Any((*_18849_case.alloc)._field_Scope, &__jule_any_type19);
					}
				}
				else {
					_case_begin_1b7d2a8aa:;
					{
						goto _iter_end_1b7d28864;
					}
				}
				_match_end_1b7d2a767:;
			};
		}
	_iter_next_1b7d28864:;
	}
	_iter_end_1b7d28864:;;
	(*((*(_18886_m))))._field_Default=(*((*(_18886_m))))._field_Cases[_1903_start];
	((*((*(_18886_m))))._field_Cases).mut_slice(0LL, _1903_start);;
}



inline void _1b46e3056_optimizeMatch(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca8cc2_Match> _21434_m) {
	jule::Uintptr _2157_var = 0LLU;;
	if ((_1b47074cc_Dynamic && (*(_21434_m))._field_TypeMatch)) {
		_2157_var=_1b46ee903_getDynamicVar((*((*_21434_m.alloc)._field_Expr))._field_Model);
	};
	_1b470041a_dataCheckpoint _2197_checkpoint = _1b4700cbc_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_21434_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d2e727:;
		if (it != expr_end) {
			jule::Ptr<_1b2ca97ea_Case> _22015_case = *it;
			{
				{
					auto expr = &((*(_22015_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7d3011d:;
					if (it != expr_end) {
						jule::Ptr<_1b2d7dc21_Data> _22116_expr = *it;
						{
							static__1b46e7e7e_optimizeData(&((*(_22116_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1b7d3011d:;
						++it;
						goto _iter_begin_1b7d3011d;
					}
					_iter_end_1b7d3011d:;
				};
				if ((((*_22015_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1b2db1627_TypeKind> _2269_kind = _1b46ee5b2_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_22015_case))._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_2269_kind != nullptr)) {
						_1b46ed281_pushVar((*((*(_self_))._field_data))._field_dynamic, _2157_var, _2269_kind);
					} else {
						_1b46ed5c2_removeVar((*((*(_self_))._field_data))._field_dynamic, _2157_var);
					};
				};
				_1b46e550e_optimizeChild(_self_, (*_22015_case.alloc)._field_Scope);
				if ((((*_21434_m.alloc)._field_Cases.len() > 1LL) || ((*_21434_m.alloc)._field_Default != nullptr))) {
					_1b4701075_loadCheckpoint((*(_self_))._field_data, &(_2197_checkpoint));
				};
			}
			_iter_next_1b7d2e727:;
			++it;
			goto _iter_begin_1b7d2e727;
		}
		_iter_end_1b7d2e727:;
	};
	if (((*_21434_m.alloc)._field_Default != nullptr)) {
		_1b46e550e_optimizeChild(_self_, (*(*(_21434_m))._field_Default.alloc)._field_Scope);
		_1b4701075_loadCheckpoint((*(_self_))._field_data, &(_2197_checkpoint));
	};
	if ((!(_1b4706421_Cond))) {
		return;;
	};
	jule::Bool _2477_constCase = false;;
	{
		auto expr = &((*_21434_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d36ad6:;
		if (it != expr_end) {
			jule::I64 _25012_i = it - expr->begin();
			jule::Ptr<_1b2ca97ea_Case> _25019_case = *it;
			{
				if ((!(_1b46e6169_isConstantValidMatchCase(&(_25019_case))))) {
					goto _iter_next_1b7d36ad6;
				};
				_2477_constCase=true;
				_1b46e2c9d_buildDefaultConstantTrueCase(_self_, _25019_case, &(_25012_i), &(_21434_m));
				goto _iter_end_1b7d36ad6;
			}
			_iter_next_1b7d36ad6:;
			++it;
			_25012_i++;
			goto _iter_begin_1b7d36ad6;
		}
		_iter_end_1b7d36ad6:;
	};
	if (((*_21434_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1b2ca97ea_Case>* _2647_i = (&((*(_21434_m))._field_Cases[0LL]));;
	jule::Ptr<_1b2ca97ea_Case>* _2653_end = (&((*_21434_m.alloc)._field_Cases[((*_21434_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2647_i <= _2653_end); (_2647_i)++) {
		{
			{
				if (_1b46e6741_isUnreachableMatchCase(&((*(_2647_i))))) {
					(*(_2647_i))=nullptr;
				};
			};
		}
	_iter_next_1b7d39699:;
	}
	_iter_end_1b7d39699:;;
	if ((!(_2477_constCase))) {
		return;;
	};
	jule::I64 _2797_only = -1LL;;
	{
		auto expr = &((*_21434_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d3a975:;
		if (it != expr_end) {
			jule::I64 _2807_j = it - expr->begin();
			jule::Ptr<_1b2ca97ea_Case> _28010_case = *it;
			{
				if ((_28010_case != nullptr)) {
					if ((_2797_only != -1LL)) {
						return;;
					};
					_2797_only=_2807_j;
				};
			}
			_iter_next_1b7d3a975:;
			++it;
			_2807_j++;
			goto _iter_begin_1b7d3a975;
		}
		_iter_end_1b7d3a975:;
	};
	if ((_2797_only != -1LL)) {
		_1b46e184b_setCurrentStmt(_self_, jule::Any((*((*_21434_m.alloc)._field_Cases[_2797_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1b46e330e_optimizeRangeIter(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca63c9_RangeIter> _29638_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_29638_it))._field_KeyA != nullptr))) {
		_1b4702692_pushVar((*((*(_self_))._field_data))._field_boundary, _1b470462d_getBoundaryVar((*((*_29638_it.alloc)._field_Expr))._field_Model), jule::Any((*_29638_it.alloc)._field_KeyA, &__jule_any_type7));
	};
	_1b46e550e_optimizeChild(_self_, (*_29638_it.alloc)._field_Scope);
	if (_1b4707224_Iter) {
		{
			auto &_match_expr{ (*((*(_29638_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type95) {
				_case_begin_1b7d4068e:;
				{
					jule::Ptr<_1b2bcec4d_CastingExprModel> _3089_cem = (*((*(_29638_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1b2bcec4d_CastingExprModel>();;
					jule::Ptr<_1b2db9740_Prim> _3095_eprim = _1b2db3ccd_Prim((*(_3089_cem))._field_ExprKind.ptr());;
					if (((_3095_eprim == nullptr) || (!(_1b2dbcc0a_IsStr(_3095_eprim.ptr()))))) {
						goto _match_end_1b7d40617;
					};
					jule::Ptr<_1b2dbdc3e_Slc> _3139_s = _1b2db4d34_Slc((*_3089_cem.alloc)._field_Kind.ptr());;
					if ((_3139_s == nullptr)) {
						goto _match_end_1b7d40617;
					};
					jule::Ptr<_1b2db9740_Prim> _3175_prim = _1b2db3ccd_Prim((*(_3139_s))._field_Elem.ptr());;
					if ((_3175_prim == nullptr)) {
						goto _match_end_1b7d40617;
					};
					{
						
						if (_1b2dbb16a_IsU8(_3175_prim.ptr())) {
							_case_begin_1b7d44077:;
							{
								(*_29638_it.alloc)._field_Expr=(*_3089_cem.alloc)._field_Expr;
							}
						}
						else if (_1b2dbab4d_IsI32(_3175_prim.ptr())) {
							_case_begin_1b7d44253:;
							{
								static__1b46e7e7e_optimizeData(&((*((*_3089_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1b46e184b_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b46d7006_StrRuneIter>(_1b46d7006_StrRuneIter{._field_Expr=(*_3089_cem.alloc)._field_Expr, ._field_Base=_29638_it}), &__jule_any_type122));
								return;;
							}
						}
						_match_end_1b7d43d8a:;
					};
				}
			}
			_match_end_1b7d40617:;
		};
	};
	static__1b46e7e7e_optimizeData(&((*(*(_29638_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1b46e35b7_optimizeWhileIter(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca597d_WhileIter> _34138_it) {
	static__1b46e7e7e_optimizeData(&((*(_34138_it))._field_Expr), &((*(_self_))._field_data));
	_1b46e5256_optimizeStmt(_self_, (*_34138_it.alloc)._field_Next);
	_1b46e550e_optimizeChild(_self_, (*_34138_it.alloc)._field_Scope);
}



inline jule::Bool _1b46e3908_substr(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca80ce_Assign> _34727_a) {
	if (((*((*(_34727_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_34727_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b7d4b9ec:;
			{
				jule::Ptr<_1b2bd226c_SlicingExprModel> _3538_sem = (*((*(_34727_a))._field_Right))._field_Model.unsafe_cast_ptr<_1b2bd226c_SlicingExprModel>();;
				if (_1b46d3b90_equalModels((*((*_34727_a.alloc)._field_Left))._field_Model, (*(_3538_sem))._field_Expr)) {
					_1b46e184b_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b46d5be7_MutSlicingExprModel>(_1b46d5be7_MutSlicingExprModel{._field_Token=(*_3538_sem.alloc)._field_Token, ._field_Expr=(*_3538_sem.alloc)._field_Expr, ._field_Left=(*_3538_sem.alloc)._field_Left, ._field_Right=(*_3538_sem.alloc)._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1b7d4b975:;
	};
	return false;;
}



inline jule::Bool _1b46e3c49_strAssign(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca80ce_Assign> _36730_a) {
	if ((!(_1b4706663_Str))) {
		return false;;
	};
	jule::Ptr<_1b2db9740_Prim> _3713_lp = _1b2db3ccd_Prim((*((*(_36730_a))._field_Left))._field_Kind.ptr());;
	if (((_3713_lp == nullptr) || (!(_1b2dbcc0a_IsStr(_3713_lp.ptr()))))) {
		return false;;
	};
	return _1b46e3908_substr(_self_, _36730_a);;
}



inline jule::Bool _1b46e408a_sliceAssign(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca80ce_Assign> _37832_a) {
	if (((!(_1b470690a_Slice)) || (_1b2db4d34_Slc((*((*(_37832_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1b46e3908_substr(_self_, _37832_a);;
}



inline void _1b46e4343_optimizePostfix(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca7b28_Postfix> _38636_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1b4703cd1_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_38636_postfix))._field_Expr);
	};
	static__1b46e7e7e_optimizeData(&((*_38636_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1b46e45eb_optimizeAssign(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca80ce_Assign> _39335_assign) {
	if ((((*((*(_39335_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1b46d3b90_equalModels((*((*_39335_assign.alloc)._field_Left))._field_Model, (*((*_39335_assign.alloc)._field_Right))._field_Model))) {
		_1b46e1a49_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1b470409a_isBoundaryRiskyType((*(*(_39335_assign))._field_Left.alloc)._field_Kind)) {
			_1b4703cd1_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_39335_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1b46de76c_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_39335_assign))._field_Right.alloc)._field_Model)) {
			if (_1b46dea36_isNilValidType((*(*(_39335_assign))._field_Left.alloc)._field_Kind)) {
				;
				_1b46dd86a_pushVar((*((*(_self_))._field_data))._field_nils, _1b46ded77_getNilVar((*(*(_39335_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1b46de3a4_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_39335_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1b2db1627_TypeKind> _4178_kind = _1b46ee5b2_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_39335_assign))._field_Right.alloc)._field_Kind, (*(*(_39335_assign))._field_Right.alloc)._field_Model);;
		if ((_4178_kind != nullptr)) {
			if (_1b46ee183_isDynamicValidType((*(*(_39335_assign))._field_Left.alloc)._field_Kind)) {
				_1b46ed281_pushVar((*((*(_self_))._field_data))._field_dynamic, _1b46ee903_getDynamicVar((*(*(_39335_assign))._field_Left.alloc)._field_Model), _4178_kind);
			};
		} else {
			_1b46edd75_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_39335_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1b46e3c49_strAssign(_self_, _39335_assign) || _1b46e408a_sliceAssign(_self_, _39335_assign)) {
			_case_begin_1b7d5daa8:;
			{
				return;;
			}
		}
		_match_end_1b7d60758:;
	};
	static__1b46e7e7e_optimizeData(&((*(*(_39335_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1b46e7e7e_optimizeData(&((*(*(_39335_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_39335_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU) || _match_expr == static_cast<jule::U64>(45LLU) || _match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b7d64372:;
			{
				if (((!(_1b470573e_Math)) || (_1b2db5351_Struct((*(*(_39335_assign))._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1b7d642ea;
				};
				jule::U64 _4434_oldId;
				jule::Str _44311_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*(_39335_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_39335_assign))._field_Op.alloc)._field_Kind;
					_4434_oldId = ___jule_assign_arg;
					_44311_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_39335_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1b7d675ea:;
						{
							(*(*(_39335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_39335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1b7d67661:;
						{
							(*(*(_39335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_39335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(45LLU)) {
						_case_begin_1b7d67276:;
						{
							(*(*(_39335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
							(*(*(_39335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(46LLU)) {
						_case_begin_1b7d672ed:;
						{
							(*(*(_39335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
							(*(*(_39335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else {
						_case_begin_1b7d66d03:;
						{
							__jule_panic_s(jule::Str::lit("opt: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/opt/scope.jule:458:5"));;
						}
					}
					_match_end_1b7d67133:;
				};
				jule::Ptr<_1b2bcd620_BinaryExprModel> _4608_b = jule::new_ptr<_1b2bcd620_BinaryExprModel>(_1b2bcd620_BinaryExprModel{._field_Left=(*_39335_assign.alloc)._field_Left, ._field_Right=(*_39335_assign.alloc)._field_Right, ._field_Op=(*_39335_assign.alloc)._field_Op});;
				jule::Any _4658_model = jule::Any(_4608_b, &__jule_any_type113);;
				static__1b46e7e7e_optimizeData(&(_4658_model), &((*_self_.alloc)._field_data));
				if ((!__jule_any_type113_compare(_4658_model, _4608_b))) {
					(*_39335_assign.alloc)._field_Right=jule::new_ptr<_1b2bcd125_OperandExprModel>((*(*(_39335_assign))._field_Right.alloc));
					(*(_4608_b))._field_Op=jule::new_ptr<_1b2ac7eba_Token>((*(*(_4608_b))._field_Op.alloc));
					(*(*(_39335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
					(*(*(_39335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_39335_assign))._field_Right.alloc)._field_Model=_4658_model;
					return;;
				};
				(*(*(_39335_assign))._field_Op.alloc)._field_Id=_4434_oldId;
				(*(*(_39335_assign))._field_Op.alloc)._field_Kind=_44311_oldKind;
				return;;
			}
		}
		_match_end_1b7d642ea:;
	};
	if (_1b4705442_Append) {
		{
			auto &_match_expr{ (*((*(_39335_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type23) {
				_case_begin_1b7d714e4:;
				{
					jule::Ptr<_1b2bd55e4_BuiltinAppendCallExprModel> _4859_m = (*(*(_39335_assign))._field_Right.alloc)._field_Model.cast_ptr<_1b2bd55e4_BuiltinAppendCallExprModel>(&__jule_any_type23);;
					if ((!(_1b46ebcb8_areSameLvalueExprModel(&((*(*(_39335_assign))._field_Left.alloc)._field_Model), &((*(_4859_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_4859_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type79) {
							_case_begin_1b7d74030:;
							{
								_1b46e184b_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b46d6753_PushToSliceExprModel>(_1b46d6753_PushToSliceExprModel{._field_Dest=(*_4859_m.alloc)._field_Dest, ._field_Elems=(*(_4859_m))._field_Elements.unsafe_cast_ptr<_1b2bd09c9_SliceExprModel>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_1b7d73073:;
							{
								_1b46e184b_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b46d6b2c_AppendToSliceExprModel>(_1b46d6b2c_AppendToSliceExprModel{._field_Dest=(*(*(_39335_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_4859_m.alloc)._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_1b7d7300c:;
					};
				}
			}
			_match_end_1b7d7146c:;
		};
	};
}



inline jule::Bool _1b46e493c_tryOptimizeSwap(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca8585_MultiAssign>* _50737_assign) {
	if (((((!(_1b4706bb3_Assign)) || ((*((*(_50737_assign))))._field_Left.len() != 2LL)) || ((*((*(_50737_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_50737_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1b2bd3c0d_TupleExprModel> _51211_tup;;
	{
		auto &_match_expr{ (*((*(_50737_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b7d7a83e:;
			{
				_51211_tup=(*((*(_50737_assign))))._field_Right.unsafe_cast_ptr<_1b2bd3c0d_TupleExprModel>();
			}
		}
		_match_end_1b7d7a7b7:;
	};
	if (((_51211_tup == nullptr) || ((*(_51211_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1b46d3b90_equalModels((*((*((*(_50737_assign))))._field_Left[0LL]))._field_Model, (*((*(_51211_tup))._field_Datas[0LL]))._field_Model) && _1b46d3b90_equalModels((*((*((*(_50737_assign))))._field_Left[1LL]))._field_Model, (*((*(_51211_tup))._field_Datas[1LL]))._field_Model))) {
		_1b46e1a49_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1b46d3b90_equalModels((*((*((*(_50737_assign))))._field_Left[0LL]))._field_Model, (*((*(_51211_tup))._field_Datas[1LL]))._field_Model))) || (!(_1b46d3b90_equalModels((*((*((*(_50737_assign))))._field_Left[1LL]))._field_Model, (*((*(_51211_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1b46d4993_SwapExprModel> _5347_model = jule::new_ptr<_1b46d4993_SwapExprModel>(_1b46d4993_SwapExprModel{._field_Left=(*((*(_50737_assign))))._field_Left[0LL], ._field_Right=(*((*(_50737_assign))))._field_Left[1LL]});;
	static__1b46e7e7e_optimizeData(&((*((*(_5347_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1b46e7e7e_optimizeData(&((*((*_5347_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1b46e184b_setCurrentStmt(_self_, jule::Any(_5347_model, &__jule_any_type126));
	return true;;
}



inline void _1b46e4be5_optimizeMultiAssign(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca8585_MultiAssign> _54440_assign) {
	if (_1b46e493c_tryOptimizeSwap(_self_, &(_54440_assign))) {
		return;;
	};
	jule::Ptr<_1b2bd3c0d_TupleExprModel> _5517_tup = static_cast<jule::Ptr<_1b2bd3c0d_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_54440_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b7d86ce0:;
			{
				_5517_tup=(*(_54440_assign))._field_Right.unsafe_cast_ptr<_1b2bd3c0d_TupleExprModel>();
			}
		}
		_match_end_1b7d86c68:;
	};
	{
		auto expr = &((*(_54440_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d84e75:;
		if (it != expr_end) {
			jule::I64 _5568_i = it - expr->begin();
			jule::Ptr<_1b2d7dc21_Data> _55615_l = *it;
			{
				if ((_55615_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1b470409a_isBoundaryRiskyType((*_55615_l.alloc)._field_Kind)) {
							_1b4703cd1_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_55615_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5517_tup != nullptr) && _1b46de76c_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5517_tup.alloc)._field_Datas[_5568_i]))._field_Model))) {
							if (_1b46dea36_isNilValidType((*_55615_l.alloc)._field_Kind)) {
								;
								_1b46dd86a_pushVar((*((*(_self_))._field_data))._field_nils, _1b46ded77_getNilVar((*_55615_l.alloc)._field_Model), true);
							};
						} else {
							_1b46de3a4_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_55615_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5517_tup != nullptr))) {
						jule::Ptr<_1b2db1627_TypeKind> _57410_kind = _1b46ee5b2_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5517_tup.alloc)._field_Datas[_5568_i]))._field_Kind, (*((*(_5517_tup))._field_Datas[_5568_i]))._field_Model);;
						if ((_57410_kind != nullptr)) {
							if (_1b46ee183_isDynamicValidType((*_55615_l.alloc)._field_Kind)) {
								_1b46ed281_pushVar((*((*(_self_))._field_data))._field_dynamic, _1b46ee903_getDynamicVar((*_55615_l.alloc)._field_Model), _57410_kind);
							};
						} else {
							_1b46edd75_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_55615_l.alloc)._field_Model);
						};
					};
					static__1b46e7e7e_optimizeData(&((*_55615_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1b7d84e75:;
			++it;
			_5568_i++;
			goto _iter_begin_1b7d84e75;
		}
		_iter_end_1b7d84e75:;
	};
	static__1b46e7e7e_optimizeData(&((*_54440_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1b46e4e9d_optimizeRet(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2caa389_RetSt> _59032_r) {
	static__1b46e7e7e_optimizeData(&((*(_59032_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1b4706e6b_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_59032_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b7d9454a:;
			{
				goto _match_end_1b7d94605;
			}
		}
		else {
			_case_begin_1b7d9466b:;
			{
				return;;
			}
		}
		_match_end_1b7d94605:;
	};
	jule::Ptr<_1b2bd0600_FnCallExprModel> _6047_fc = (*_59032_r.alloc)._field_Expr.cast_ptr<_1b2bd0600_FnCallExprModel>(&__jule_any_type30);;
	if (((((!((*((*((*(_6047_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6047_fc.alloc)._field_Except == nullptr)) || ((*((*_6047_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1b386a8e9_IsForwarded(&((*_6047_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1b46e184b_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b46d471d_ExceptionalForwardingExprModel>(_1b46d471d_ExceptionalForwardingExprModel{._field_Expr=_6047_fc}), &__jule_any_type121));
}



inline void _1b46e5256_optimizeStmt(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Any _61433_stmt) {
	{
		auto &_match_expr{ _61433_stmt };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b7d97a8c:;
			{
				_1b46e550e_optimizeChild(_self_, _61433_stmt.cast_ptr<_1b2ca4592_Scope>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b7d97817:;
			{
				_1b46e231e_optimizeData(_self_, _61433_stmt.cast_ptr<_1b2d7dc21_Data>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b7d97b25:;
			{
				_1b46e25c7_optimizeVar(_self_, _61433_stmt.cast_ptr<_1b2d26ca7_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b7d97bbe:;
			{
				_1b46e2880_optimizeConditional(_self_, _61433_stmt.cast_ptr<_1b2ca51ca_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b7d97c35:;
			{
				_1b46e330e_optimizeRangeIter(_self_, _61433_stmt.cast_ptr<_1b2ca63c9_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b7d97c9b:;
			{
				_1b46e35b7_optimizeWhileIter(_self_, _61433_stmt.cast_ptr<_1b2ca597d_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b7d97d23:;
			{
				_1b46e550e_optimizeChild(_self_, (*(_61433_stmt.unsafe_cast_ptr<_1b2ca54c7_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b7d97d9a:;
			{
				_1b46e45eb_optimizeAssign(_self_, _61433_stmt.cast_ptr<_1b2ca80ce_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b7d97e22:;
			{
				_1b46e4be5_optimizeMultiAssign(_self_, _61433_stmt.cast_ptr<_1b2ca8585_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b7d97e99:;
			{
				_1b46e3056_optimizeMatch(_self_, _61433_stmt.cast_ptr<_1b2ca8cc2_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b7d98021:;
			{
				_1b46e4e9d_optimizeRet(_self_, _61433_stmt.cast_ptr<_1b2caa389_RetSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b7d98098:;
			{
				_1b46e4343_optimizePostfix(_self_, _61433_stmt.cast_ptr<_1b2ca7b28_Postfix>(&__jule_any_type39));
			}
		}
		_match_end_1b7d97938:;
	};
}



inline void _1b46e550e_optimizeChild(jule::Ptr<_1b46e1043_scopeOptimizer> _self_, jule::Ptr<_1b2ca4592_Scope> _64334_child) {
	jule::Ptr<_1b46e1043_scopeOptimizer> _6447_so = static__1b46e1593_new(_64334_child);;
	(*(_6447_so))._field_parent=_self_;
	(*_6447_so.alloc)._field_data=(*(_self_))._field_data;
	_1b46e570c_optimize(_6447_so);
}



inline void _1b46e570c_optimize(jule::Ptr<_1b46e1043_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1b46e5256_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1b7da10c3:;
	}
	_iter_end_1b7da10c3:;;
}








inline jule::Bool _1b46e76dc_exprOptimizer_eq(_1b46e76dc_exprOptimizer *_self_, _1b46e76dc_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1b46e7b93_optimize(jule::Any* _2126_model) {
	static__1b46e7e7e_optimizeData(_2126_model, &(_1b47000b8_emptyData));
}



inline void static__1b46e7e7e_optimizeData(jule::Any* _2530_model, jule::Ptr<_1b4700915_data>* _2559_d) {
	if (_1b4835154_exprEnabled) {
		jule::Ptr<_1b46e76dc_exprOptimizer> _288_exop = jule::new_ptr<_1b46e76dc_exprOptimizer>(_1b46e76dc_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_2530_model)), ._field_data=(*(_2559_d)), ._field_inspector=static__1b38692aa_New()});;
		_1b46eb4b0_do(_288_exop.ptr());
	};
}



inline jule::Bool _1b46e82c0_selfCmpCond(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _3728_m) {
	if ((!(_1b46d3b90_equalModels((*((*((*(_3728_m))))._field_Left))._field_Model, (*((*((*(_3728_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_3728_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b7db0ad8:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b2bc278a_NewBool(true), &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b7db0ee5:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b2bc278a_NewBool(false), &__jule_any_type15);
				return true;;
			}
		}
		else {
			_case_begin_1b7dae9a5:;
			{
				return false;;
			}
		}
		_match_end_1b7db0a61:;
	};
}



inline jule::Bool _1b46e8611_boolCond(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _6125_m) {
	jule::Ptr<_1b2db9740_Prim> _623_lp = _1b2db3ccd_Prim((*((*((*(_6125_m))))._field_Left))._field_Kind.ptr());;
	if (((_623_lp == nullptr) || (!(_1b2dbc974_IsBool(_623_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_6125_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b7db5428:;
			{
				std::swap((*((*(_6125_m))))._field_Left, (*((*(_6125_m))))._field_Right);
			}
		}
		else {
			_case_begin_1b7db4603:;
			{
				{
					auto &_match_expr{ (*((*((*(_6125_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1b7db38dd:;
						{
							goto _match_end_1b7db4e2d;
						}
					}
					else {
						_case_begin_1b7db4e94:;
						{
							return false;;
						}
					}
					_match_end_1b7db4e2d:;
				};
			}
		}
		_match_end_1b7db458c:;
	};
	jule::Ptr<_1b2b6c23a_Const> _797_c = (*((*((*(_6125_m))))._field_Right))._field_Model.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_6125_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b7db7073:;
			{
				if (_1b2bc3ba9_ReadBool(_797_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_6125_m))))._field_Left.alloc)._field_Model;
				} else {
					_1b2bc5293_SetBool(_797_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_797_c, &__jule_any_type15);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b7db711c:;
			{
				if (_1b2bc3ba9_ReadBool(_797_c.ptr())) {
					_1b2bc5293_SetBool(_797_c, true);
					(*((*(_self_))._field_model))=jule::Any(_797_c, &__jule_any_type15);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_6125_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1b7db51e7:;
		}
		_match_end_1b7db6eda:;
	};
	return false;;
}



inline jule::Bool _1b46e8952_strCond(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel> _11423_m) {
	jule::Ptr<_1b2db9740_Prim> _1153_lp = _1b2db3ccd_Prim((*((*(_11423_m))._field_Left))._field_Kind.ptr());;
	if (((_1153_lp == nullptr) || (!(_1b2dbcc0a_IsStr(_1153_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_11423_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*(_11423_m))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_11423_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b7dbdc6c:;
			{
				std::swap((*_11423_m.alloc)._field_Left, (*_11423_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1b7dbce47:;
			{
				{
					auto &_match_expr{ (*((*(_11423_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1b7dbb9c3:;
						{
							goto _match_end_1b7dbd772;
						}
					}
					else {
						_case_begin_1b7dbd7d8:;
						{
							return false;;
						}
					}
					_match_end_1b7dbd772:;
				};
			}
		}
		_match_end_1b7dbcdd1:;
	};
	jule::Ptr<_1b2b6c23a_Const> _1357_c = (*((*_11423_m.alloc)._field_Right))._field_Model.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*(_11423_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b7dbda4c:;
			{
				if ((_1b2bc3e40_ReadStr(_1357_c.ptr())).empty()) {
					jule::Any _1399_model = jule::Any(jule::new_ptr<_1b46d4d6c_EmptyCompareExprModel>(_1b46d4d6c_EmptyCompareExprModel{._field_Expr=(*(*(_11423_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1399_model))))));
					goto _match_end_1b7dc07b8;
				};
				jule::Any _1468_model = jule::Any(jule::new_ptr<_1b46d5664_StrCompExprModel>(_1b46d5664_StrCompExprModel{._field_Left=(*(*(_11423_m))._field_Left.alloc)._field_Model, ._field_Right=_1357_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1468_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b7dc0873:;
			{
				if ((_1b2bc3e40_ReadStr(_1357_c.ptr())).empty()) {
					jule::Any _1549_model = jule::Any(jule::new_ptr<_1b46d4d6c_EmptyCompareExprModel>(_1b46d4d6c_EmptyCompareExprModel{._field_Expr=(*(*(_11423_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1549_model))))));
					goto _match_end_1b7dc07b8;
				};
				jule::Any _1618_model = jule::Any(jule::new_ptr<_1b46d5664_StrCompExprModel>(_1b46d5664_StrCompExprModel{._field_Left=(*(*(_11423_m))._field_Left.alloc)._field_Model, ._field_Right=_1357_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1618_model))))));
			}
		}
		_match_end_1b7dc07b8:;
	};
	return true;;
}



inline jule::Bool _1b46e8e08_tryNeutralElement1(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _17135_m, jule::Ptr<_1b2b6c23a_Const> _17166_c, jule::Ptr<_1b2bcd125_OperandExprModel>* _17188_nc) {
	if (_1b2bc653b_IsStr(_17166_c.ptr())) {
		if ((!(_1b4706663_Str))) {
			return false;;
		};
		if (((_1b2bc3e40_ReadStr(_17166_c.ptr())).empty() && ((*((*((*(_17135_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_17188_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1b470573e_Math)) || (_1b2bc4979_AsF64(_17166_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_17135_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b7dce9e7:;
			{
				if (((*(_17188_nc)) == (*((*(_17135_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_17188_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_17166_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b7dd0630:;
			{
				_1b2bc4c32_SetI64(_17166_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_17166_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b7dd0696:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_17188_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1b7dd04dc:;
	};
	return false;;
}



inline jule::Bool _1b46e9249_tryNeutralElement(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _21534_m) {
	{
		auto &_match_expr{ (*((*((*(_21534_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b7dd3cb5:;
			{
				jule::Ptr<_1b2b6c23a_Const> _2198_c = (*((*((*(_21534_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1b2b6c23a_Const>();;
				return _1b46e8e08_tryNeutralElement1(_self_, _21534_m, _2198_c, &((*((*(_21534_m))))._field_Right));;
			}
		}
		_match_end_1b7dd3c3d:;
	};
	{
		auto &_match_expr{ (*((*((*(_21534_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b7dd42d2:;
			{
				jule::Ptr<_1b2b6c23a_Const> _2248_c = (*((*((*(_21534_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1b2b6c23a_Const>();;
				return _1b46e8e08_tryNeutralElement1(_self_, _21534_m, _2248_c, &((*((*(_21534_m))))._field_Left));;
			}
		}
		_match_end_1b7dd426b:;
	};
	return false;;
}



inline void _1b46e9502_checkBinaryForBoundary(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _23039_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_23039_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b7dd7736:;
			{
				jule::Ptr<_1b2bd58e1_BuiltinLenCallExprModel> _2368_blc = (*((*((*(_23039_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1b2bd58e1_BuiltinLenCallExprModel>();;
				if ((!(_1b4704364_isBoundaryValidType((*((*(_2368_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_23039_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_23039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_23039_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_23039_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1b7ddaa14:;
							{
								jule::Ptr<_1b2b6c23a_Const> _24810_c = jule::new_ptr<_1b2b6c23a_Const>((*((*((*((*(_23039_m))))._field_Right))._field_Model.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15))));;
								_1b2bc8d13_Sub(_24810_c, (*(static__1b2bc22e5_NewI64(1LL))));
								_1b4702692_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1b470462d_getBoundaryVar((*(*(_2368_blc))._field_Expr.alloc)._field_Model), jule::Any(_24810_c, &__jule_any_type15));
							}
						}
						_match_end_1b7dda98c:;
					};
					return;;
				};
				_1b4702692_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1b470462d_getBoundaryVar((*(*(_2368_blc))._field_Expr.alloc)._field_Model), (*(*((*(_23039_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1b7dd76ae:;
	};
	{
		auto &_match_expr{ (*((*((*(_23039_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b7dd7da7:;
			{
				jule::Ptr<_1b2bd58e1_BuiltinLenCallExprModel> _2598_blc = (*((*((*(_23039_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1b2bd58e1_BuiltinLenCallExprModel>();;
				if ((!(_1b4704364_isBoundaryValidType((*(*(_2598_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_23039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_23039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_23039_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_23039_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1b7de2653:;
							{
								jule::Ptr<_1b2b6c23a_Const> _27110_c = jule::new_ptr<_1b2b6c23a_Const>((*((*((*((*(_23039_m))))._field_Left))._field_Model.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15))));;
								_1b2bc8d13_Sub(_27110_c, (*(static__1b2bc22e5_NewI64(1LL))));
								_1b4702692_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1b470462d_getBoundaryVar((*(*(_2598_blc))._field_Expr.alloc)._field_Model), jule::Any(_27110_c, &__jule_any_type15));
							}
						}
						_match_end_1b7de25cb:;
					};
					return;;
				};
				_1b4702692_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1b470462d_getBoundaryVar((*(*(_2598_blc))._field_Expr.alloc)._field_Model), (*(*((*(_23039_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1b7dd7d30:;
	};
}



inline void _1b46e97aa_checkBinaryForNil(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel>* _28234_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _2867_var = _1b46ded77_getNilVar((*((*((*(_28234_m))))._field_Left))._field_Model);;
	if ((_2867_var != 0LLU)) {
		if ((!(_1b46dea36_isNilValidType((*(*((*(_28234_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_28234_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1b7de800a:;
				{
					_1b46dd86a_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _2867_var, ((*((*((*(_28234_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1b7de7e83:;
		};
		return;;
	};
	_2867_var=_1b46ded77_getNilVar((*((*((*(_28234_m))))._field_Right))._field_Model);
	if ((_2867_var != 0LLU)) {
		if ((!(_1b46dea36_isNilValidType((*(*((*(_28234_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_28234_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1b7dea6e4:;
				{
					_1b46dd86a_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _2867_var, ((*(*((*(_28234_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1b7dea66c:;
		};
		return;;
	};
}



inline void _1b46e9a63_binary(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd620_BinaryExprModel> _31422_m) {
	_1b46e9502_checkBinaryForBoundary(_self_, &(_31422_m));
	_1b46e97aa_checkBinaryForNil(_self_, &(_31422_m));
	if (_1b4706421_Cond) {
		{
			
			if (_1b46e8952_strCond(_self_, _31422_m) || _1b46e8611_boolCond(_self_, &(_31422_m)) || _1b46e82c0_selfCmpCond(_self_, &(_31422_m))) {
				_case_begin_1b7dec64c:;
				{
					return;;
				}
			}
			_match_end_1b7dec509:;
		};
	};
	if (_1b46e9249_tryNeutralElement(_self_, &(_31422_m))) {
		return;;
	};
	if ((!(_1b470573e_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_31422_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b7ded5b5:;
			{
				goto _match_end_1b7ded84b;
			}
		}
		else {
			_case_begin_1b7ded8b2:;
			{
				return;;
			}
		}
		_match_end_1b7ded84b:;
	};
	jule::Ptr<_1b2db9740_Prim> _3473_lp = _1b2db3ccd_Prim((*((*(_31422_m))._field_Left))._field_Kind.ptr());;
	if ((_3473_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1b2db9740_Prim> _3513_rp = _1b2db3ccd_Prim((*((*(_31422_m))._field_Right))._field_Kind);;
	if ((_3513_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_31422_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b7e01189:;
			{
				jule::Bool _3584_ok;
				jule::U64 _3588_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1b46eb900_checkForBitShiftOpt(&((*_31422_m.alloc)._field_Left), &((*_31422_m.alloc)._field_Right));
					_3584_ok = __jule_assign_result.__jule_result_arg0;
					_3588_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3584_ok) {
					(*_31422_m.alloc)._field_Op=jule::new_ptr<_1b2ac7eba_Token>((*(*(_31422_m))._field_Op.alloc));
					(*(*(_31422_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
					(*(*(_31422_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1b2b6c23a_Const> _3639_c = (*((*_31422_m.alloc)._field_Right))._field_Model.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15);;
					_1b2bc4eda_SetU64(_3639_c.ptr(), _3588_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b7e01200:;
			{
				jule::Bool _3704_ok;
				jule::U64 _3708_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1b46eb900_checkForBitShiftOpt(&((*_31422_m.alloc)._field_Left), &((*_31422_m.alloc)._field_Right));
					_3704_ok = __jule_assign_result.__jule_result_arg0;
					_3708_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3704_ok) {
					(*_31422_m.alloc)._field_Op=jule::new_ptr<_1b2ac7eba_Token>((*(*(_31422_m))._field_Op.alloc));
					(*(*(_31422_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
					(*(*(_31422_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1b2b6c23a_Const> _3759_c = (*((*_31422_m.alloc)._field_Right))._field_Model.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15);;
					_1b2bc4eda_SetU64(_3759_c.ptr(), _3708_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b7e01266:;
			{
				jule::Ptr<_1b2b6c23a_Const> _3828_c = (*((*_31422_m.alloc)._field_Right))._field_Model.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15);;
				if ((_1b2bc4979_AsF64(_3828_c.ptr()) == 2LL)) {
					(*_31422_m.alloc)._field_Op=jule::new_ptr<_1b2ac7eba_Token>((*(*(_31422_m))._field_Op.alloc));
					(*(*(_31422_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(65LLU);
					(*(*(_31422_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1b2bc4c32_SetI64(_3828_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b7e012cc:;
			{
				jule::I64 _3944_z = _1b2c6c0d7_BitSizeOf((*(_3473_lp))._field_Kind);;
				jule::U64 _3954_s = _1b2bc46e3_AsU64((*((*_31422_m.alloc)._field_Right))._field_Model.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15).ptr());;
				if ((_3954_s >= static_cast<jule::U64>(_3944_z))) {
					(*((*(_self_))._field_model))=jule::Any(static__1b2bc24c1_NewU64(0LLU), &__jule_any_type15);
					return;;
				};
			}
		}
		else {
			_case_begin_1b7e00ce3:;
			{
				return;;
			}
		}
		_match_end_1b7e01112:;
	};
	jule::Any _4087_model = jule::Any(jule::new_ptr<_1b46d5ee4_UnsafeBinaryExprModel>(_1b46d5ee4_UnsafeBinaryExprModel{._field_Node=_31422_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4087_model))))));
}



inline void _1b46e9d1b_unary(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcd9e9_UnaryExprModel> _41221_m) {
	if ((!(_1b4706058_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41221_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b7e10583:;
			{
				{
					auto &_match_expr{ (*((*(_41221_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1b7e12992:;
						{
							jule::Ptr<_1b2bcd9e9_UnaryExprModel> _4209_um = (*((*(_41221_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1b2bcd9e9_UnaryExprModel>();;
							if (((*((*(_4209_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4209_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1b7e1291a:;
				};
				if ((!(_1b47059e7_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1b46dea36_isNilValidType((*(*(_41221_m))._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _4345_var = _1b46ded77_getNilVar((*(*(_41221_m))._field_Expr.alloc)._field_Model);;
					if (_1b46ddeec_isSafe((*((*(_self_))._field_data))._field_nils, _4345_var)) {
						jule::Any _43610_model = jule::Any(jule::new_ptr<_1b46d7303_UnsafeDerefExprModel>(_1b46d7303_UnsafeDerefExprModel{._field_Base=_41221_m}), &__jule_any_type130);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_43610_model))))));
						return;;
					};
					_1b46dd86a_pushVar((*((*(_self_))._field_data))._field_nils, _4345_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b7e105e9:;
			{
				{
					auto &_match_expr{ (*((*(_41221_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_1b7e1ae51:;
						{
							jule::Ptr<_1b2d26ca7_Var> _4469_v = (*((*(_41221_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1b2d26ca7_Var>();;
							if ((*(_4469_v))._field_Reference) {
								jule::Any _44810_model = jule::Any(jule::new_ptr<_1b46d51e1_RefExprModel>(_1b46d51e1_RefExprModel{._field_Var=_4469_v}), &__jule_any_type131);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_44810_model))))));
							};
						}
					}
					_match_end_1b7e1adc9:;
				};
			}
		}
		_match_end_1b7e1051c:;
	};
}



inline void _1b46ea0c4_structureLit(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bce3bd_StructLitExprModel> _45528_m) {
	{
		auto expr = &((*(_45528_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e20a7c:;
		if (it != expr_end) {
			jule::Ptr<_1b2bce027_StructArgExprModel> _45615_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1b470409a_isBoundaryRiskyType((*((*(_45615_arg))._field_Expr))._field_Kind)) {
						_1b4703cd1_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_45615_arg, &__jule_any_type132));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1b46de3a4_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_45615_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1b46edd75_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_45615_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1b7e20a7c:;
			++it;
			goto _iter_begin_1b7e20a7c;
		}
		_iter_end_1b7e20a7c:;
	};
}



inline void _1b46ea37c_casting(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bcec4d_CastingExprModel> _47123_m) {
	jule::Bool _4723_valid = _1b46ee183_isDynamicValidType((*(_47123_m))._field_ExprKind);;
	jule::Uintptr _4733_var = _1b46ee903_getDynamicVar((*((*_47123_m.alloc)._field_Expr))._field_Model);;
	if (((_4723_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1b46ed9bd_isFits((*((*(_self_))._field_data))._field_dynamic, _4733_var, (*_47123_m.alloc)._field_Kind))) {
		jule::Any _4758_model = jule::Any(jule::new_ptr<_1b46d7600_UnsafeCastingExprModel>(_1b46d7600_UnsafeCastingExprModel{._field_Base=_47123_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4758_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4723_valid)) {
		_1b46ed281_pushVar((*((*(_self_))._field_data))._field_dynamic, _4733_var, (*_47123_m.alloc)._field_Kind);
	};
}



inline void _1b46ea6e0_args(_1b46e76dc_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>> _48520_params, jule::Slice<jule::Any>* _48552_args) {
	{
		auto expr = _48552_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e2e272:;
		if (it != expr_end) {
			jule::I64 _4868_i = it - expr->begin();
			jule::Any _48615_arg = *it;
			{
				if ((_4868_i >= _48520_params.len())) {
					goto _iter_next_1b7e2e272;
				};
				jule::Ptr<_1b2bdc91a_ParamIns> _4908_p = _48520_params[_4868_i];;
				if (((*((*(_4908_p))._field_Decl))._field_Mutable && (*(*(_4908_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1b470409a_isBoundaryRiskyType((*_4908_p.alloc)._field_Kind)) {
							_1b4703cd1_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _48615_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1b46de3a4_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _48615_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1b46edd75_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _48615_arg);
					};
				};
			}
			_iter_next_1b7e2e272:;
			++it;
			_4868_i++;
			goto _iter_begin_1b7e2e272;
		}
		_iter_end_1b7e2e272:;
	};
}



inline void _1b46ea998_scope(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2ca4592_Scope>* _50722_s) {
	jule::Ptr<_1b46e1043_scopeOptimizer> _5087_scopt = static__1b46e1593_new((*(_50722_s)));;
	(*(_5087_scopt))._field_data=(*(_self_))._field_data;
	_1b46e570c_optimize(_5087_scopt);
}



inline void _1b46eac51_funcCall(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bd0600_FnCallExprModel> _51324_m) {
	_1b46ea6e0_args(_self_, (*((*(_51324_m))._field_Func))._field_Params, &((*_51324_m.alloc)._field_Args));
	if (((*_51324_m.alloc)._field_Except != nullptr)) {
		_1b46ea998_scope(_self_, &((*_51324_m.alloc)._field_Except));
	};
}



inline void _1b46eb009_indexing(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bd0e80_IndexingExprModel> _52024_m) {
	if ((!(_1b47059e7_Access))) {
		return;;
	};
	jule::Bool _5253_array = (_1b2db4a9d_Arr((*((*(_52024_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_5253_array && _1b2d7e65b_IsConst((*_52024_m.alloc)._field_Index.ptr()))) {
		jule::Any _5288_model = jule::Any(jule::new_ptr<_1b46d6379_UnsafeIndexingExprModel>(_1b46d6379_UnsafeIndexingExprModel{._field_Node=_52024_m}), &__jule_any_type134);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5288_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1b4704364_isBoundaryValidType((*(*(_52024_m))._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _5344_var = _1b470462d_getBoundaryVar((*(*(_52024_m))._field_Expr.alloc)._field_Model);;
		if (_1b4702dce_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5344_var, (*(*(_52024_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5369_model = jule::Any(jule::new_ptr<_1b46d6379_UnsafeIndexingExprModel>(_1b46d6379_UnsafeIndexingExprModel{._field_Node=_52024_m}), &__jule_any_type134);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5369_model))))));
			return;;
		};
		_1b4702692_pushVar((*((*(_self_))._field_data))._field_boundary, _5344_var, (*(*(_52024_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1b46eb2b2_anonFunc(_1b46e76dc_exprOptimizer* _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel> _54424_m) {
	_1b46ea998_scope(_self_, &((*((*(_54424_m))._field_Func))._field_Scope));
}



inline void _1b46eb4b0_do(_1b46e76dc_exprOptimizer* _self_) {
	_1b3869b7e_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1b7e41174, jule::Ptr<__jule_anon_1b7e41174_ctx>::make(__jule_anon_1b7e41174_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b7e41174_ctx_handler));
}








inline jule::Bool _1b46ec99a_dynamicVar_eq(_1b46ec99a_dynamicVar *_self_, _1b46ec99a_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1b46ed281_pushVar(jule::Ptr<_1b46eccdb_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1b2db1627_TypeKind> _2442_kind) {
	if (((!(_1b47074cc_Dynamic)) || (_2424_var == 0LLU))) {
		return;;
	};
	_2442_kind=_1b46ee5b2_isTypeGuaranteedDynamicData(&(_self_), _2442_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e50826:;
		if (it != expr_end) {
			_1b46ec99a_dynamicVar _3015_v = *it;
			{
				if ((_3015_v._field_var == _2424_var)) {
					_3015_v._field_kind=_2442_kind;
					return;;
				};
			}
			_iter_next_1b7e50826:;
			++it;
			goto _iter_begin_1b7e50826;
		}
		_iter_end_1b7e50826:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e5131b:;
		if (it != expr_end) {
			_1b46ec99a_dynamicVar _3715_v = *it;
			{
				if ((_3715_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _2424_var;
						jule::Ptr<_1b2db1627_TypeKind> _1___jule_assign_arg = _2442_kind;
						_3715_v._field_var = ___jule_assign_arg;
						_3715_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1b7e5131b:;
			++it;
			goto _iter_begin_1b7e5131b;
		}
		_iter_end_1b7e5131b:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1b46ec99a_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b46ec99a_dynamicVar{._field_var=_2424_var, ._field_kind=_2442_kind}; __jule_collection; }));
}



inline jule::Bool _1b46ed5c2_removeVar(_1b46eccdb_dynamic* _self_, jule::Uintptr _4725_var) {
	if ((_4725_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7e5350a:;
			if (it != expr_end) {
				_1b46ec99a_dynamicVar _4916_v = *it;
				{
					if ((_4916_v._field_var == _4725_var)) {
						_4916_v._field_var=0LLU;
						_4916_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1b7e5350a:;
				++it;
				goto _iter_begin_1b7e5350a;
			}
			_iter_end_1b7e5350a:;
		};
	};
	return false;;
}



inline jule::Bool _1b46ed9bd_isFits(_1b46eccdb_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1b2db1627_TypeKind> _6136_kind) {
	if ((_6122_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7e54dbe:;
			if (it != expr_end) {
				_1b46ec99a_dynamicVar _6311_v = *it;
				{
					if ((_6311_v._field_var == _6122_var)) {
						return ((_6311_v._field_kind != nullptr) && _1b2db1d64_Equal(_6311_v._field_kind, _6136_kind));;
					};
				}
				_iter_next_1b7e54dbe:;
				++it;
				goto _iter_begin_1b7e54dbe;
			}
			_iter_end_1b7e54dbe:;
		};
	};
	return false;;
}








inline jule::Bool _1b4700915_data_eq(_1b4700915_data *_self_, _1b4700915_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline _1b470041a_dataCheckpoint _1b4700cbc_getCheckpoint(_1b4700915_data* _self_) {
	_1b470041a_dataCheckpoint _257_c = _1b470041a_dataCheckpoint{._field_boundary=_1b47021ec_boundary{._field_vars=jule::Slice<_1b4701dab_boundaryVar>(nullptr)}, ._field_nils=_1b46dd3c5_nils{._field_vars=jule::Slice<_1b46dd0b7_nilVar>(nullptr)}, ._field_dynamic=_1b46eccdb_dynamic{._field_vars=jule::Slice<_1b46ec99a_dynamicVar>(nullptr)}};;
	_257_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1b4701dab_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b4701dab_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_257_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e56c6c:;
		if (it != expr_end) {
			jule::I64 _277_i = it - expr->begin();
			{
				_257_c._field_boundary._field_vars[_277_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_257_c._field_boundary._field_vars[_277_i]._field_maxSize);
			}
			_iter_next_1b7e56c6c:;
			++it;
			_277_i++;
			goto _iter_begin_1b7e56c6c;
		}
		_iter_end_1b7e56c6c:;
	};
	_257_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1b46dd0b7_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b46dd0b7_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_257_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1b46ec99a_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b46ec99a_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _257_c;;
}



inline void _1b4701075_loadCheckpoint(_1b4700915_data* _self_, _1b470041a_dataCheckpoint* _3535_c) {
	(*((*(_self_))._field_boundary))=(*(_3535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3535_c))._field_dynamic;
}











inline void _1b4702692_pushVar(_1b47021ec_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1b47059e7_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1b4703264_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e70d85:;
		if (it != expr_end) {
			_1b4701dab_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b7e71b77:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1b47039a1_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1b7e71b77:;
							++it;
							_349_i++;
							goto _iter_begin_1b7e71b77;
						}
						_iter_end_1b7e71b77:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1b7e70d85:;
			++it;
			goto _iter_begin_1b7e70d85;
		}
		_iter_end_1b7e70d85:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e71704:;
		if (it != expr_end) {
			_1b4701dab_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1b7e71704:;
			++it;
			goto _iter_begin_1b7e71704;
		}
		_iter_end_1b7e71704:;
	};
	{ jule::Slice<_1b4701dab_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1b4701dab_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1b4702dce_fitsMaxSize(_1b47021ec_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7e76594:;
			if (it != expr_end) {
				_1b4701dab_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1b470362c_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1b7e76594:;
				++it;
				goto _iter_begin_1b7e76594;
			}
			_iter_end_1b7e76594:;
		};
	};
	return false;;
}








inline jule::Bool _1b48354ea_Optimizer_eq(_1b48354ea_Optimizer *_self_, _1b48354ea_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1b48354ea_Optimizer> static__1b48359a1_New(jule::Ptr<_1b3865075_IR>* _2121_ir) {
	return jule::new_ptr<_1b48354ea_Optimizer>(_1b48354ea_Optimizer{._field_ir=(*(_2121_ir))});;
}



inline void _1b4835c59_optimizeGlobal(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2d26ca7_Var>* _2735_v) {
	if ((!((*((*(_2735_v))))._field_Binded))) {
		static__1b46e7b93_optimize(&((*((*((*((*(_2735_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1b4836012_optimizeFunction(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2bda9b2_Fn>* _3337_func) {
	if ((*((*(_3337_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3337_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e7b610:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdda70_FnIns> _3715_ins = *it;
			{
				jule::Ptr<_1b46e1043_scopeOptimizer> _388_so = static__1b46e1593_new((*(_3715_ins))._field_Scope);;
				_1b46e570c_optimize(_388_so);
			}
			_iter_next_1b7e7b610:;
			++it;
			goto _iter_begin_1b7e7b610;
		}
		_iter_end_1b7e7b610:;
	};
}



inline void _1b48362ba_optimizeStruct(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2b0db6b_Struct>* _4335_s) {
	if ((*((*(_4335_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e7ccd7:;
		if (it != expr_end) {
			jule::Ptr<_1b2b119c6_StructIns> _4715_ins = *it;
			{
				{
					auto expr = &((*(_4715_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7e7d6de:;
					if (it != expr_end) {
						jule::Ptr<_1b2b10e26_FieldIns> _4816_f = *it;
						{
							if (((*(_4816_f))._field_Default != nullptr)) {
								static__1b46e7b93_optimize(&((*(*(_4816_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1b7e7d6de:;
						++it;
						goto _iter_begin_1b7e7d6de;
					}
					_iter_end_1b7e7d6de:;
				};
				{
					auto expr = &((*_4715_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7e7db40:;
					if (it != expr_end) {
						jule::Ptr<_1b2bda9b2_Fn> _5316_m = *it;
						{
							_1b4836012_optimizeFunction(_self_, &(_5316_m));
						}
						_iter_next_1b7e7db40:;
						++it;
						goto _iter_begin_1b7e7db40;
					}
					_iter_end_1b7e7db40:;
				};
			}
			_iter_next_1b7e7ccd7:;
			++it;
			goto _iter_begin_1b7e7ccd7;
		}
		_iter_end_1b7e7ccd7:;
	};
}



inline void _1b4836573_optimizeGlobals(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2cd7691_Package>* _5936_p) {
	{
		auto expr = &((*((*(_5936_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e7ee82:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _6015_f = *it;
			{
				{
					auto expr = &((*(_6015_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7e80c96:;
					if (it != expr_end) {
						jule::Ptr<_1b2d26ca7_Var> _6116_v = *it;
						{
							_1b4835c59_optimizeGlobal(_self_, &(_6116_v));
						}
						_iter_next_1b7e80c96:;
						++it;
						goto _iter_begin_1b7e80c96;
					}
					_iter_end_1b7e80c96:;
				};
			}
			_iter_next_1b7e7ee82:;
			++it;
			goto _iter_begin_1b7e7ee82;
		}
		_iter_end_1b7e7ee82:;
	};
}



inline void _1b483682b_optimizeFunctions(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2cd7691_Package>* _6738_p) {
	{
		auto expr = &((*((*(_6738_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e8134b:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _6815_f = *it;
			{
				{
					auto expr = &((*(_6815_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7e821b5:;
					if (it != expr_end) {
						jule::Ptr<_1b2bda9b2_Fn> _6916_func = *it;
						{
							_1b4836012_optimizeFunction(_self_, &(_6916_func));
						}
						_iter_next_1b7e821b5:;
						++it;
						goto _iter_begin_1b7e821b5;
					}
					_iter_end_1b7e821b5:;
				};
			}
			_iter_next_1b7e8134b:;
			++it;
			goto _iter_begin_1b7e8134b;
		}
		_iter_end_1b7e8134b:;
	};
}



inline void _1b4836ad4_optimizeStructs(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2cd7691_Package>* _7536_p) {
	{
		auto expr = &((*((*(_7536_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e8276a:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _7615_f = *it;
			{
				{
					auto expr = &((*(_7615_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7e835d4:;
					if (it != expr_end) {
						jule::Ptr<_1b2b0db6b_Struct> _7716_s = *it;
						{
							_1b48362ba_optimizeStruct(_self_, &(_7716_s));
						}
						_iter_next_1b7e835d4:;
						++it;
						goto _iter_begin_1b7e835d4;
					}
					_iter_end_1b7e835d4:;
				};
			}
			_iter_next_1b7e8276a:;
			++it;
			goto _iter_begin_1b7e8276a;
		}
		_iter_end_1b7e8276a:;
	};
}



inline void _1b4836d8c_optimizePackage(_1b48354ea_Optimizer* _self_, jule::Ptr<_1b2cd7691_Package>* _8336_p) {
	_1b4836573_optimizeGlobals(_self_, _8336_p);
	_1b483682b_optimizeFunctions(_self_, _8336_p);
	_1b4836ad4_optimizeStructs(_self_, _8336_p);
}



inline void _1b483708a_Optimize(_1b48354ea_Optimizer* _self_) {
	_1b48372ee_detectEnabled();
	if (_1b4705189_Deadcode) {
		_1b482e1b4_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1b4835363_scopeEnabled || _1b4835154_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7e8563b:;
			if (it != expr_end) {
				jule::Ptr<_1b2cd4e1e_ImportInfo> _9916_u = *it;
				{
					if ((!((*(_9916_u))._field_Binded))) {
						_1b4836d8c_optimizePackage(_self_, &((*_9916_u.alloc)._field_Package));
					};
				}
				_iter_next_1b7e8563b:;
				++it;
				goto _iter_begin_1b7e8563b;
			}
			_iter_end_1b7e8563b:;
		};
		_1b4836d8c_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1b4705189_Deadcode) {
		_1b4833c13_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1b4910d01_AbsTime_eq(_1b4910d01_AbsTime *_self_, _1b4910d01_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1b49114c7_Time_eq(_1b49114c7_Time *_self_, _1b49114c7_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1b49114c7_Time static__1b49118b2_Unix(jule::U64 _9117_sec) {
	return _1b49114c7_Time{._field_sec=_9117_sec};;
}



inline _1b49114c7_Time static__1b4911ac1_Now(void) {
	return static__1b49118b2_Unix(_1b49135b7_unix());;
}



inline _1b4910d01_AbsTime _1b49132a9_Abs(_1b49114c7_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1b4910262_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1b4910262_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1b7eb279a:;
	}
	_iter_end_1b7eb279a:;;
	_1b4910d01_AbsTime _1747_t = _1b4910d01_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _1b4839202_scopeCoder_eq(_1b4839202_scopeCoder *_self_, _1b4839202_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1b4839202_scopeCoder> static__1b48398ea_new(jule::Ptr<_1b491d2d6_ObjectCoder>* _3721_oc) {
	return jule::new_ptr<_1b4839202_scopeCoder>(_1b4839202_scopeCoder{._field_oc=(*(_3721_oc))});;
}



inline void _1b8107b32_iterHead(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca63c9_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1b4704d8c_Copy && _1b4842628_isCopyOptimizable(&((*((*(_4429_it))))._field_Expr)))) {
		(*(_4441_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_4429_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1b810d1cb:;
				{
					jule::Ptr<_1b2d26ca7_Var> _535_v = (*((*((*(_4429_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1b2d26ca7_Var>();;
					if ((*(_535_v))._field_Reference) {
						_1b4858908_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
						goto _match_end_1b810b608;
					};
					goto _case_begin_1b810b66e;
				}
			}
			else {
				_case_begin_1b810b66e:;
				{
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1b4858908_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1b810b608:;
		};
	} else {
		_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_4441_ref))) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_4441_ref))) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, _4452_begin);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
}



inline void _1b483a0c1_rangeIndexIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca63c9_RangeIter>* _9336_it) {
	_20d8ca601_Builder _947_sb = static__20d8cb1c3_New(64LL);;
	static__1b4862c86_iterBegin(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _963_begin = _20d8d53b9_Str(&_947_sb);;
	_20d8d55b7_Clear(&_947_sb);
	static__1b486335d_iterNext(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _993_next = _20d8d53b9_Str(&_947_sb);;
	jule::Bool _1017_ref = false;;
	_1b8107b32_iterHead(_self_, _9336_it, &(_1017_ref), _963_begin);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		_1b492593c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1b8118648, jule::Ptr<__jule_anon_1b8118648_ctx>::make(__jule_anon_1b8118648_ctx{._self_=_self_,._1017_ref=_1017_ref}).as<jule::Uintptr>(), __jule_anon_1b8118648_ctx_handler));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1b491e3a3_indent((*(_self_))._field_oc);
	};
	if (((*((*(_9336_it))))._field_KeyB != nullptr)) {
		(*(*((*(_9336_it))))._field_KeyB.alloc)._field_Reference=(_1b4704d8c_Copy && _1b48429e1_isIterCopyOptimizable(&((*((*(_9336_it))))._field_Expr), &((*((*(_9336_it))))._field_KeyB)));
		_1b492593c_varInitExpr((*(_self_))._field_oc, &((*((*(_9336_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1b811c152, jule::Ptr<__jule_anon_1b811c152_ctx>::make(__jule_anon_1b811c152_ctx{._self_=_self_,._9336_it=_9336_it}).as<jule::Uintptr>(), __jule_anon_1b811c152_ctx_handler));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1b491e3a3_indent((*(_self_))._field_oc);
	};
	_1b48418be_scope(_self_, (*((*(_9336_it))))._field_Scope);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, _993_next);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1b491e3a3_indent((*(_self_))._field_oc);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		static__1b486299a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_9336_it))))._field_KeyA);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1b491e3a3_indent((*(_self_))._field_oc);
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1b491da01_write((*(_self_))._field_oc, _963_begin);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1b491e3a3_indent((*(_self_))._field_oc);
	static__1b4863072_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_9336_it))));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1b483a379_rangeHashmapIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca63c9_RangeIter>* _16038_it) {
	_20d8ca601_Builder _1617_sb = static__20d8cb1c3_New(64LL);;
	static__1b4862c86_iterBegin(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1633_begin = _20d8d53b9_Str(&_1617_sb);;
	_20d8d55b7_Clear(&_1617_sb);
	static__1b486335d_iterNext(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1663_next = _20d8d53b9_Str(&_1617_sb);;
	jule::Ptr<_1b2dc03d3_Map> _1687__map = _1b2db586d_Map((*((*((*(_16038_it))))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1b2b0db6b_Struct> _1697_s = _1b2ea145e_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1b2b119c6_StructIns> _1707_ins = _1b386e9a8_FindStructGenericInstance(&(_1697_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_1687__map))._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1b2bdda70_FnIns> _1727_f = (*(_1b2b12a71_FindMethod(_1707_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1b2b0db6b_Struct> _1747_itDecl = _1b2ea145e_RuntimeFindStruct(&((*(*((*(_self_))._field_oc))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));;
	jule::Ptr<_1b2b119c6_StructIns> _1757_iterator = _1b386e9a8_FindStructGenericInstance(&(_1747_itDecl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_1687__map.alloc)._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1b2bdda70_FnIns> _1767_nextCall = (*(_1b2b12a71_FindMethod(_1757_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b49314e7_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1757_iterator);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1727_f));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_16038_it))))._field_Expr.alloc)._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, _1633_begin);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b4932707_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1767_nextCall));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1767_nextCall));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	if (((*((*(_16038_it))))._field_KeyA != nullptr)) {
		_1b492593c_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1b813c738, jule::Ptr<__jule_anon_1b813c738_ctx>::make(__jule_anon_1b813c738_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b813c738_ctx_handler));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1b491e3a3_indent((*(_self_))._field_oc);
	};
	if (((*((*(_16038_it))))._field_KeyB != nullptr)) {
		_1b492593c_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1b813ec24, jule::Ptr<__jule_anon_1b813ec24_ctx>::make(__jule_anon_1b813ec24_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b813ec24_ctx_handler));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1b491e3a3_indent((*(_self_))._field_oc);
	};
	_1b48418be_scope(_self_, (*((*(_16038_it))))._field_Scope);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, _1663_next);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1b491da01_write((*(_self_))._field_oc, _1633_begin);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1b491e3a3_indent((*(_self_))._field_oc);
	static__1b4863072_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_16038_it))));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1b483a632_strRuneIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b46d7006_StrRuneIter> _24332_it) {
	_20d8ca601_Builder _2447_sb = static__20d8cb1c3_New(64LL);;
	static__1b4862c86_iterBegin(&(_2447_sb), static_cast<jule::Uintptr>((*(_24332_it))._field_Base));
	jule::Str _2463_begin = _20d8d53b9_Str(&_2447_sb);;
	_20d8d55b7_Clear(&_2447_sb);
	static__1b486335d_iterNext(&(_2447_sb), static_cast<jule::Uintptr>((*_24332_it.alloc)._field_Base));
	jule::Str _2493_next = _20d8d53b9_Str(&_2447_sb);;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	jule::Bool _2557_ref = false;;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1b4704d8c_Copy && _1b4842628_isCopyOptimizable(&((*_24332_it.alloc)._field_Expr)))) {
		_2557_ref=true;
		{
			auto &_match_expr{ (*((*(_24332_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1b814dd87:;
				{
					jule::Ptr<_1b2d26ca7_Var> _2615_v = (*((*(_24332_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1b2d26ca7_Var>();;
					if ((*(_2615_v))._field_Reference) {
						_1b4858908_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1b814c2b4;
					};
					goto _case_begin_1b814c32a;
				}
			}
			else {
				_case_begin_1b814c32a:;
				{
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1b4858908_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1b814c2b4:;
		};
	} else {
		_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2557_ref) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2557_ref) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1b491e3a3_indent((*(_self_))._field_oc);
	if (((*((*_24332_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1b492593c_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1b8158bd8, jule::Ptr<__jule_anon_1b8158bd8_ctx>::make(__jule_anon_1b8158bd8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b8158bd8_ctx_handler));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1b491e3a3_indent((*(_self_))._field_oc);
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1b491e3a3_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1b492593c_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1b491e3a3_indent((*(_self_))._field_oc);
	};
	_1b491da01_write((*(_self_))._field_oc, _2463_begin);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1b486299a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b48418be_scope(_self_, (*(*(_24332_it))._field_Base.alloc)._field_Scope);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, _2493_next);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1b491e3a3_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1b486299a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyA);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1b491e3a3_indent((*(_self_))._field_oc);
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1b491da01_write((*(_self_))._field_oc, _2463_begin);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1b483a8da_ifCase(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca49b0_If> _35527_i) {
	if (((*(_35527_i))._field_Expr != nullptr)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35527_i.alloc)._field_Expr);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1b48418be_scope(_self_, (*_35527_i.alloc)._field_Scope);
}



inline void _1b483ab93_conditional(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca51ca_Conditional> _36432_c) {
	jule::Bool _3657_writed = false;;
	{
		auto expr = &((*(_36432_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b816e24d:;
		if (it != expr_end) {
			jule::Ptr<_1b2ca49b0_If> _36615_elif = *it;
			{
				if ((_36615_elif == nullptr)) {
					goto _iter_next_1b816e24d;
				};
				if (_3657_writed) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3657_writed=true;
				_1b483a8da_ifCase(_self_, _36615_elif);
			}
			_iter_next_1b816e24d:;
			++it;
			goto _iter_begin_1b816e24d;
		}
		_iter_end_1b816e24d:;
	};
	if (((*_36432_c.alloc)._field_Default != nullptr)) {
		if (_3657_writed) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1b48418be_scope(_self_, (*(*(_36432_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1b483ae4b_infIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca54c7_InfIter> _38428_it) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b48418be_scope(_self_, (*(_38428_it))._field_Scope);
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1b491e3a3_indent((*(_self_))._field_oc);
	static__1b486335d_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38428_it));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1b491e3a3_indent((*(_self_))._field_oc);
	static__1b4863072_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38428_it));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1b483b204_whileIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca597d_WhileIter> _40130_it) {
	if ((((*(_40130_it))._field_Expr != nullptr) && ((*_40130_it.alloc)._field_Next == nullptr))) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_40130_it.alloc)._field_Expr);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_40130_it))._field_Expr != nullptr)) {
			_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_40130_it.alloc)._field_Expr);
		};
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_40130_it.alloc)._field_Next != nullptr)) {
			_1b484135d_st(_self_, (*_40130_it.alloc)._field_Next);
		};
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_40130_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b48418be_scope(_self_, (*_40130_it.alloc)._field_Scope);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	static__1b486335d_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_40130_it));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1b491e3a3_indent((*(_self_))._field_oc);
	static__1b4863072_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_40130_it));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1b483b4ac_rangeIter(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca63c9_RangeIter> _44030_it) {
	{
		
		if ((_1b2db4d34_Slc((*((*(_44030_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8184b48:;
			{
				_1b483a0c1_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		else if ((_1b2db4a9d_Arr((*((*(_44030_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b81847e6:;
			{
				_1b483a0c1_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		else if ((_1b2db586d_Map((*((*(_44030_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b818485c:;
			{
				_1b483a379_rangeHashmapIter(_self_, &(_44030_it));
			}
		}
		else {
			_case_begin_1b8184780:;
			{
				_1b483a0c1_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		_match_end_1b8184670:;
	};
}



inline void _1b483b765_cont(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca675e_ContSt> _45321_c) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1b486335d_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_45321_c))._field_It);
}



inline void _1b483ba1d_label(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca70de_Label> _45822_l) {
	static__1b4863649_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45822_l));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1b483bcc6_gotoSt(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca774e_GotoSt> _46323_gt) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1b4863649_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_46323_gt))._field_Label));
}



inline void _1b483c07e_postfix(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca7b28_Postfix> _46828_p) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46828_p))._field_Expr);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1b491da01_write((*(_self_))._field_oc, (*_46828_p.alloc)._field_Op);
}



inline void _1b483c337_assignLeft(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Any* _47532_model) {
	{
		auto &_match_expr{ (*(_47532_model)) };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b818db63:;
			{
				jule::Ptr<_1b2bd0e80_IndexingExprModel> _4788_iem = (*(_47532_model)).cast_ptr<_1b2bd0e80_IndexingExprModel>(&__jule_any_type42);;
				jule::Ptr<_1b2dc03d3_Map> _4794__map = _1b2db586d_Map((*((*(_4788_iem))._field_Expr))._field_Kind.ptr());;
				if ((_4794__map == nullptr)) {
					goto _match_end_1b818daec;
				};
				jule::Ptr<_1b2b0db6b_Struct> _4858_s = _1b2ea145e_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1b2b119c6_StructIns> _4868_ins = _1b386e9a8_FindStructGenericInstance(&(_4858_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4794__map))._field_Key; (*it++) = (*(_4794__map))._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1b2bdda70_FnIns> _4888_f = (*(_1b2b12a71_FindMethod(_4868_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4888_f));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_4788_iem))._field_Expr.alloc)._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_20dbc2ed1_Production))) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1b4921185_locInfo((*(_self_))._field_oc, &((*_4788_iem.alloc)._field_Token));
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1b484e855_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4788_iem.alloc)._field_Index))._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1b818daec:;
	};
	_1b484e855_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47532_model)));
}



inline void _1b483c5e0_shl(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca80ce_Assign> _50724_a) {
	_1b483c337_assignLeft(_self_, &((*((*(_50724_a))._field_Left))._field_Model));
	_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1b484d106_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50724_a.alloc)._field_Left), &((*_50724_a.alloc)._field_Right));
}



inline void _1b483c898_shr(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca80ce_Assign> _51324_a) {
	_1b483c337_assignLeft(_self_, &((*((*(_51324_a))._field_Left))._field_Model));
	_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1b484d469_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51324_a.alloc)._field_Left), &((*_51324_a.alloc)._field_Right));
}



inline void _1b483cb51_divByZeroAssign(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca80ce_Assign> _51936_a) {
	_1b483c337_assignLeft(_self_, &((*((*(_51936_a))._field_Left))._field_Model));
	_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1b484c2e2_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51936_a.alloc)._field_Op), &((*_51936_a.alloc)._field_Left), &((*_51936_a.alloc)._field_Right));
}



inline void _1b483d129_operatorOverloadingAssign(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _52547_s, jule::Ptr<_1b2bcd125_OperandExprModel>* _52573_l, jule::Ptr<_1b2bcd125_OperandExprModel>* _5268_r, jule::U64 _52636_op) {
	;
	jule::Ptr<_1b2bdda70_FnIns> _5287_f = _1b386e1a0_FindOperator(_52547_s, _52636_op, false);;
	if ((_5287_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:530:4"));;
	};
	static__1b4861724_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5287_f));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1b483c337_assignLeft(_self_, &((*((*(_52573_l))))._field_Model));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5268_r))))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b483d3d2_assign(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca80ce_Assign> _54027_a) {
	{
		auto &_match_expr{ (*((*(_54027_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b81a4618:;
			{
				if ((_20dbc2c8e_Safety && (_1b2db5351_Struct((*((*(_54027_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1b483cb51_divByZeroAssign(_self_, _54027_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b81a4690:;
			{
				if ((_1b2db5351_Struct((*((*(_54027_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1b483c5e0_shl(_self_, _54027_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b81a4706:;
			{
				if ((_1b2db5351_Struct((*((*(_54027_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1b483c898_shr(_self_, _54027_a);
					return;;
				};
			}
		}
		_match_end_1b81a454c:;
	};
	if ((((*((*(_54027_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1b2db5351_Struct((*((*_54027_a.alloc)._field_Left))._field_Kind.ptr()) != nullptr))) {
		jule::Ptr<_1b2b119c6_StructIns> _5638_s = _1b2db5351_Struct((*((*(_54027_a))._field_Left))._field_Kind);;
		_1b483d129_operatorOverloadingAssign(_self_, &(_5638_s), &((*_54027_a.alloc)._field_Left), &((*_54027_a.alloc)._field_Right), (*(*(_54027_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1b483c337_assignLeft(_self_, &((*(*(_54027_a))._field_Left.alloc)._field_Model));
	_1b491da01_write((*_self_.alloc)._field_oc, (*(*(_54027_a))._field_Op.alloc)._field_Kind);
	_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_54027_a.alloc)._field_Right))._field_Model);
}



inline void _1b483d68a_mapLookupAssign(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8585_MultiAssign>* _57337_a) {
	jule::Ptr<_1b2bd0e80_IndexingExprModel> _5757_iem = (*((*(_57337_a))))._field_Right.cast_ptr<_1b2bd0e80_IndexingExprModel>(&__jule_any_type42);;
	jule::Ptr<_1b2dc03d3_Map> _5767__map = _1b2db586d_Map((*((*(_5757_iem))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1b2b0db6b_Struct> _5787_s = _1b2ea145e_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1b2b119c6_StructIns> _5797_ins = _1b386e9a8_FindStructGenericInstance(&(_5787_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5767__map))._field_Key; (*it++) = (*_5767__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1b2bdda70_FnIns> _5817_f = (*(_1b2b12a71_FindMethod(_5797_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_5817_f));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b483c337_assignLeft(_self_, &((*(*(_5757_iem))._field_Expr.alloc)._field_Model));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5757_iem.alloc)._field_Index))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_57337_a))))._field_Left[0LL] != nullptr)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1b484e855_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57337_a))))._field_Left[0LL]))._field_Model);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_57337_a))))._field_Left[1LL] != nullptr)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1b484e855_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57337_a))))._field_Left[1LL]))._field_Model);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b483d943_multiAssignTup(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8585_MultiAssign>* _60636_a) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1b2bd3c0d_TupleExprModel> _6107_tup = (*((*(_60636_a))))._field_Right.cast_ptr<_1b2bd3c0d_TupleExprModel>(&__jule_any_type83);;
	{
		auto expr = &((*(_6107_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81ba134:;
		if (it != expr_end) {
			jule::I64 _6128_i = it - expr->begin();
			jule::Ptr<_1b2d7dc21_Data> _61215_r = *it;
			{
				_1b491e3a3_indent((*(_self_))._field_oc);
				jule::Ptr<_1b2d7dc21_Data> _6148_l = (*((*(_60636_a))))._field_Left[_6128_i];;
				if ((_6148_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6148_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1b81bd1ae:;
							{
								jule::Ptr<_1b2d26ca7_Var> _61810_v = (*(_6148_l))._field_Model.unsafe_cast_ptr<_1b2d26ca7_Var>();;
								if (((*(_61810_v))._field_Reference && (!(_1b2d271b4_IsInitialized(_61810_v))))) {
									static__1b486299a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _61810_v);
									_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_61215_r))._field_Model);
									_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_60636_a))))._field_Left[_6128_i]=nullptr;
									goto _iter_next_1b81ba134;
								};
							}
						}
						_match_end_1b81bd148:;
					};
					_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6148_l.alloc)._field_Kind);
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1b4860beb_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1b4838993_assignArgName, static_cast<jule::Uintptr>(_6128_i));
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1b484e855_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_61215_r.alloc)._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b81ba134:;
			++it;
			_6128_i++;
			goto _iter_begin_1b81ba134;
		}
		_iter_end_1b81ba134:;
	};
	{
		auto expr = &((*((*(_60636_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81c47e2:;
		if (it != expr_end) {
			jule::I64 _6398_i = it - expr->begin();
			jule::Ptr<_1b2d7dc21_Data> _63915_l = *it;
			{
				if ((_63915_l == nullptr)) {
					goto _iter_next_1b81c47e2;
				};
				_1b491e3a3_indent((*(_self_))._field_oc);
				_1b483c337_assignLeft(_self_, &((*(_63915_l))._field_Model));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1b4860beb_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1b4838993_assignArgName, static_cast<jule::Uintptr>(_6398_i));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b81c47e2:;
			++it;
			_6398_i++;
			goto _iter_begin_1b81c47e2;
		}
		_iter_end_1b81c47e2:;
	};
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1b483dbeb_multiAssignFn(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8585_MultiAssign>* _65535_a) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	jule::Ptr<_1b2bd0600_FnCallExprModel> _6607_f = (*((*(_65535_a))))._field_Right.cast_ptr<_1b2bd0600_FnCallExprModel>(&__jule_any_type30);;
	_1b49381e1_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6607_f))._field_Func))._field_Result));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_65535_a))))._field_Right);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1b2dbe833_Tuple> _6667_tup = _1b2db5b04_Tup((*(*(_6607_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_65535_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81cd488:;
		if (it != expr_end) {
			jule::I64 _6678_i = it - expr->begin();
			jule::Ptr<_1b2d7dc21_Data> _66715_l = *it;
			{
				if ((_66715_l == nullptr)) {
					goto _iter_next_1b81cd488;
				};
				;
				_1b491e3a3_indent((*(_self_))._field_oc);
				_1b483c337_assignLeft(_self_, &((*(_66715_l))._field_Model));
				{
					
					if (_1b2db1d64_Equal((*(_6667_tup))._field_Types[_6678_i], (*(_66715_l))._field_Kind)) {
						_case_begin_1b81d866e:;
						{
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_6678_i));
						}
					}
					else if (_1b386ad8e_IsAny(&((*(_66715_l))._field_Kind))) {
						_case_begin_1b81d557d:;
						{
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_6678_i));
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_1b4920508_pushAnyType((*(_self_))._field_oc, (*(_6667_tup))._field_Types[_6678_i])));
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1b81ce775:;
						{
							if ((_1b2db55d7_Trait((*(_6667_tup))._field_Types[_6678_i].ptr()) != nullptr)) {
								_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1b2be61c6_Trait> _68810_t1 = _1b2db55d7_Trait((*(_66715_l))._field_Kind.ptr());;
								jule::Ptr<_1b2be61c6_Trait> _68910_t2 = _1b2db55d7_Trait((*(_6667_tup))._field_Types[_6678_i].ptr());;
								_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_6678_i));
								_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1b4920dcc_pushAndWriteMaskMapper((*(_self_))._field_oc, _68810_t1, _68910_t2);
								_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1b81d0677;
							};
							jule::Ptr<_1b2be61c6_Trait> _6975_t = _1b2db55d7_Trait((*(_66715_l))._field_Kind);;
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_6678_i));
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1b4861a10_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _6975_t);
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_1b386dc71_FindTraitTypeOffset(_6975_t, (*(_6667_tup))._field_Types[_6678_i])));
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1b81d0677:;
				};
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b81cd488:;
			++it;
			_6678_i++;
			goto _iter_begin_1b81cd488;
		}
		_iter_end_1b81cd488:;
	};
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1b483dea4_multiAssign(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8585_MultiAssign> _71432_a) {
	{
		auto expr = &((*(_71432_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81de0d1:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _71715_d = *it;
			{
				_1b492593c_varInitExpr((*(_self_))._field_oc, &(_71715_d), nullptr);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1b491e3a3_indent((*(_self_))._field_oc);
			}
			_iter_next_1b81de0d1:;
			++it;
			goto _iter_begin_1b81de0d1;
		}
		_iter_end_1b81de0d1:;
	};
	{
		auto &_match_expr{ (*(_71432_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b81de7eb:;
			{
				_1b483d68a_mapLookupAssign(_self_, &(_71432_a));
				return;;
			}
		}
		_match_end_1b81de785:;
	};
	{
		auto &_match_expr{ (*(_71432_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b81de884:;
			{
				_1b483d943_multiAssignTup(_self_, &(_71432_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b81e1347:;
			{
				_1b483dbeb_multiAssignFn(_self_, &(_71432_a));
			}
		}
		else {
			_case_begin_1b81e12d1:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:736:4"));;
			}
		}
		_match_end_1b81e126a:;
	};
}



inline jule::Fn<void> _1b483e2e5_matchExpr(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8cc2_Match> _74030_m) {
	if ((!(_1b2d7e65b_IsConst((*(_74030_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1b81e3899, jule::Ptr<__jule_anon_1b81e3899_ctx>::make(__jule_anon_1b81e3899_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b81e3899_ctx_handler);;
	};
	if (((!(_1b2bc62a5_IsBool((*(*(_74030_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1b2bc3ba9_ReadBool((*((*(_74030_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1b81e4bca, jule::Ptr<__jule_anon_1b81e4bca_ctx>::make(__jule_anon_1b81e4bca_ctx{._self_=_self_,._74030_m=_74030_m}).as<jule::Uintptr>(), __jule_anon_1b81e4bca_ctx_handler);;
	};
	return nullptr;;
}



inline void _1b483e658_case(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8cc2_Match> _75025_m, jule::Ptr<_1b2ca97ea_Case> _75046_c) {
	if ((((*(_75046_c))._field_Exprs.len() != 0LL) && (!((*(_75025_m))._field_Comptime)))) {
		if ((((*_75025_m.alloc)._field_Cases.len() > 0LL) && ((*(_75025_m))._field_Cases[0LL] == _75046_c))) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_75046_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b81e8e65:;
			if (it != expr_end) {
				jule::I64 _7579_i = it - expr->begin();
				jule::Ptr<_1b2d7dc21_Data> _75716_expr = *it;
				{
					{
						
						if ((!((*_75025_m.alloc)._field_TypeMatch))) {
							_case_begin_1b8201995:;
							{
								jule::Fn<void> _7606_caseExpr = _1b483e2e5_matchExpr(_self_, _75025_m);;
								if (_1b2d7e99c_GoodOperand((*_75025_m.alloc)._field_Expr.ptr(), &(_75716_expr))) {
									if ((_7606_caseExpr != nullptr)) {
										_7606_caseExpr();
										_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_75716_expr))._field_Model);
								} else {
									_1b484e855_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_75716_expr))._field_Model);
									if ((_7606_caseExpr != nullptr)) {
										_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7606_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1b81e9a37:;
							{
								_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1b2db1627_TypeKind> _77610_tk = (*(_75716_expr))._field_Model.cast_ptr<_1b2db1627_TypeKind>(&__jule_any_type86);;
								if ((_1b2db55d7_Trait((*((*_75025_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1b484ab4d_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1b2db4064_Sptr((*(_75716_expr))._field_Kind) != nullptr));
									_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1b4861a10_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1b2db55d7_Trait((*((*(_75025_m))._field_Expr))._field_Kind));
									_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_1b386dc71_FindTraitTypeOffset(_1b2db55d7_Trait((*((*(_75025_m))._field_Expr))._field_Kind), (*_75716_expr.alloc)._field_Kind)));
									_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _7867_j = _1b4920508_pushAnyType((*(_self_))._field_oc, _77610_tk);;
									_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_7867_j));
								};
							}
						}
						_match_end_1b81e9927:;
					};
					if ((((*_75046_c.alloc)._field_Exprs.len() - _7579_i) > 1LL)) {
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1b81e8e65:;
				++it;
				_7579_i++;
				goto _iter_begin_1b81e8e65;
			}
			_iter_end_1b81e8e65:;
		};
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_75025_m))._field_Default == _75046_c) && ((*_75025_m.alloc)._field_Cases.len() != 0LL))) {
		_1b491e3a3_indent((*(_self_))._field_oc);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b491e3a3_indent((*(_self_))._field_oc);
	static__1b4863c21_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_75046_c));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_75046_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1b491e3a3_indent((*(_self_))._field_oc);
		_1b48418be_scope(_self_, (*_75046_c.alloc)._field_Scope);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1b483e911_matchSt(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca8cc2_Match> _82028_m) {
	if ((((*(_82028_m))._field_Cases.len() == 0LL) && ((*_82028_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_82028_m.alloc)._field_Comptime && (((*_82028_m.alloc)._field_Default == nullptr) || ((*((*((*_82028_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	if (((!((*_82028_m.alloc)._field_Comptime)) && (!(_1b2d7e65b_IsConst((*_82028_m.alloc)._field_Expr.ptr()))))) {
		if ((_1b4704d8c_Copy && _1b4842628_isCopyOptimizable(&((*_82028_m.alloc)._field_Expr)))) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_82028_m))._field_Expr.alloc)._field_Model);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1b491e3a3_indent((*(_self_))._field_oc);
	};
	if (((*_82028_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_82028_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b82152d3:;
			if (it != expr_end) {
				jule::Ptr<_1b2ca97ea_Case> _84816_c = *it;
				{
					if ((_84816_c == nullptr)) {
						goto _iter_next_1b82152d3;
					};
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1b491e3a3_indent((*(_self_))._field_oc);
					_1b483e658_case(_self_, _82028_m, _84816_c);
				}
				_iter_next_1b82152d3:;
				++it;
				goto _iter_begin_1b82152d3;
			}
			_iter_end_1b82152d3:;
		};
	};
	if (((*_82028_m.alloc)._field_Default != nullptr)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1b483e658_case(_self_, _82028_m, (*_82028_m.alloc)._field_Default);
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1b491e3a3_indent((*(_self_))._field_oc);
	static__1b4863935_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_82028_m));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1b483ebb9_fallSt(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca9ee3_FallSt> _87523_f) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1b4863c21_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_87523_f))._field_DestCase);
}



inline void _1b483ee72_breakSt(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca6b38_BreakSt> _88024_b) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_88024_b))._field_It != 0LLU)) {
		static__1b4863072_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_88024_b.alloc)._field_It);
	} else {
		static__1b4863935_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_88024_b))._field_Mtch);
	};
}



inline void _1b484022a_setResult(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2caa389_RetSt> _88930_r) {
	if (((*((*((*((*(_88930_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_88930_r.alloc)._field_Expr);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1b491e3a3_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_88930_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b8220167:;
			{
				jule::Slice<jule::Ptr<_1b2d7dc21_Data>> _8998_datas = (*((*(_88930_r))._field_Expr.unsafe_cast_ptr<_1b2bd3c0d_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_8998_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8228ba9:;
					if (it != expr_end) {
						jule::I64 _9008_i = it - expr->begin();
						jule::Ptr<_1b2d7dc21_Data> _90011_data = *it;
						{
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_9008_i));
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1b484e855_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_90011_data))._field_Model);
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1b491e3a3_indent((*(_self_))._field_oc);
						}
						_iter_next_1b8228ba9:;
						++it;
						_9008_i++;
						goto _iter_begin_1b8228ba9;
					}
					_iter_end_1b8228ba9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b8227b53:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1b4858908_model((*((*(_self_))._field_oc))._field_ec, (*_88930_r.alloc)._field_Expr);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1b8227768:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:913:4"));;
			}
		}
		_match_end_1b8227702:;
	};
}



inline void _1b48404d3_retSt(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2caa389_RetSt> _91726_r) {
	if (_1b2bdae68_IsVoid((*((*(_91726_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_91726_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_91726_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_91726_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_91726_r))._field_Func.alloc)._field_Result);
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91726_r.alloc)._field_Expr);
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91726_r.alloc)._field_Expr);
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_91726_r))._field_Expr != nullptr)) {
		_1b484022a_setResult(_self_, _91726_r);
	};
	if ((*((*((*_91726_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1b49381e1_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_91726_r))._field_Func.alloc)._field_Result));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1b484078b_var(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2d26ca7_Var> _95324_v) {
	if ((!((*(_95324_v))._field_Constant))) {
		_1b4925be5_var((*(_self_))._field_oc, _95324_v);
	};
}



inline void _1b4840a44_mutSlicing(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b46d5be7_MutSlicingExprModel> _95931_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_95931_m))._field_Expr);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_20dbc2ed1_Production))) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1b4921185_locInfo((*(_self_))._field_oc, &((*_95931_m.alloc)._field_Token));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1b484e855_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_95931_m.alloc)._field_Left);
	if (((*_95931_m.alloc)._field_Right != nullptr)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1b484e855_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_95931_m.alloc)._field_Right);
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1b4840cec_swap(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b46d4993_SwapExprModel> _97625_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1b484e855_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_97625_m))._field_Left))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1b484e855_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_97625_m.alloc)._field_Right))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b48410a5_exceptionalForwarding(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b46d471d_ExceptionalForwardingExprModel> _98442_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1b4851280_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_98442_m))._field_Expr));
}



inline void _1b484135d_st(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Any _99023_st) {
	if ((_99023_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _99023_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b8245d91:;
			{
				_1b48418be_scope(_self_, _99023_st.cast_ptr<_1b2ca4592_Scope>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b8246116:;
			{
				_1b484078b_var(_self_, _99023_st.cast_ptr<_1b2d26ca7_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b824617c:;
			{
				_1b4858908_model((*((*(_self_))._field_oc))._field_ec, (*(_99023_st.unsafe_cast_ptr<_1b2d7dc21_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b82468ec:;
			{
				_1b483ab93_conditional(_self_, _99023_st.cast_ptr<_1b2ca51ca_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b8246963:;
			{
				_1b483ae4b_infIter(_self_, _99023_st.cast_ptr<_1b2ca54c7_InfIter>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b82469c9:;
			{
				_1b483b204_whileIter(_self_, _99023_st.cast_ptr<_1b2ca597d_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b8246a40:;
			{
				_1b483b4ac_rangeIter(_self_, _99023_st.cast_ptr<_1b2ca63c9_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b8246aa6:;
			{
				_1b483b765_cont(_self_, _99023_st.cast_ptr<_1b2ca675e_ContSt>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1b8246b1c:;
			{
				_1b483ba1d_label(_self_, _99023_st.cast_ptr<_1b2ca70de_Label>(&__jule_any_type18));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b8246b83:;
			{
				_1b483bcc6_gotoSt(_self_, _99023_st.cast_ptr<_1b2ca774e_GotoSt>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b8246be9:;
			{
				_1b483c07e_postfix(_self_, _99023_st.cast_ptr<_1b2ca7b28_Postfix>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b8246c60:;
			{
				_1b483d3d2_assign(_self_, _99023_st.cast_ptr<_1b2ca80ce_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b8246cc6:;
			{
				_1b483dea4_multiAssign(_self_, _99023_st.cast_ptr<_1b2ca8585_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b8246d3c:;
			{
				_1b483e911_matchSt(_self_, _99023_st.cast_ptr<_1b2ca8cc2_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b8246da3:;
			{
				_1b483ebb9_fallSt(_self_, _99023_st.cast_ptr<_1b2ca9ee3_FallSt>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b8246e2a:;
			{
				_1b483ee72_breakSt(_self_, _99023_st.cast_ptr<_1b2ca6b38_BreakSt>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b8246ea2:;
			{
				_1b48404d3_retSt(_self_, _99023_st.cast_ptr<_1b2caa389_RetSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b8247029:;
			{
				_1b48563d9_pushToSlice((*((*(_self_))._field_oc))._field_ec, _99023_st.cast_ptr<_1b46d6753_PushToSliceExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1b82470a1:;
			{
				_1b4856692_appendToSlice((*((*(_self_))._field_oc))._field_ec, _99023_st.cast_ptr<_1b46d6b2c_AppendToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b8247128:;
			{
				_1b4840a44_mutSlicing(_self_, _99023_st.cast_ptr<_1b46d5be7_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1b82471a0:;
			{
				_1b4840cec_swap(_self_, _99023_st.cast_ptr<_1b46d4993_SwapExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b8247227:;
			{
				_1b48410a5_exceptionalForwarding(_self_, _99023_st.cast_ptr<_1b46d471d_ExceptionalForwardingExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b824729e:;
			{
				_1b483a632_strRuneIter(_self_, _99023_st.cast_ptr<_1b46d7006_StrRuneIter>(&__jule_any_type122));
			}
		}
		else {
			_case_begin_1b8245c09:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1b8245b93:;
	};
}



inline void _1b4841616_scopeStmts(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca4592_Scope>* _104632_s) {
	{
		auto expr = &((*((*(_104632_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8254de4:;
		if (it != expr_end) {
			jule::Any _104715_st = *it;
			{
				_1b491e3a3_indent((*(_self_))._field_oc);
				_1b484135d_st(_self_, _104715_st);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b8254de4:;
			++it;
			goto _iter_begin_1b8254de4;
		}
		_iter_end_1b8254de4:;
	};
}



inline void _1b48418be_scope(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2ca4592_Scope> _105526_s) {
	_1b491dea7_addIndent((*(_self_))._field_oc);
	if ((*(_105526_s))._field_Deferred) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b4841616_scopeStmts(_self_, &(_105526_s));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_105526_s.alloc)._field_Deferred) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1b4841b77_commonFuncScope(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2bdda70_FnIns>* _107037_f) {
	if ((!(_1b2bdae68_IsVoid((*((*(_107037_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1b2dbe833_Tuple> _10728_tup = _1b2db5b04_Tup((*((*(_107037_f))))._field_Result.ptr());;
		if ((_10728_tup != nullptr)) {
			_1b491e3a3_indent((*(_self_))._field_oc);
			_1b4937a1a_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10728_tup);
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_10728_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b825bb65:;
				if (it != expr_end) {
					jule::I64 _107710_i = it - expr->begin();
					jule::Ptr<_1b2db1627_TypeKind> _107717_t = *it;
					{
						if (_1b493a3be_shouldInitialized(&(_107717_t))) {
							_1b491e3a3_indent((*(_self_))._field_oc);
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_107710_i));
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1b4859ac4_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _107717_t);
							_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1b825bb65:;
					++it;
					_107710_i++;
					goto _iter_begin_1b825bb65;
				}
				_iter_end_1b825bb65:;
			};
		} else if (((*((*(*((*(_107037_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1b491e3a3_indent((*(_self_))._field_oc);
			_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_107037_f))))._field_Result);
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1b493a3be_shouldInitialized(&((*((*(_107037_f))))._field_Result))) {
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1b4859ac4_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_107037_f))))._field_Result);
			};
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1b4841616_scopeStmts(_self_, &((*((*(_107037_f))))._field_Scope));
	if (((*(*((*(_107037_f))))._field_Decl.alloc)._field_Exceptional && _1b2bdae68_IsVoid((*((*(_107037_f))))._field_Decl))) {
		_1b491e3a3_indent((*_self_.alloc)._field_oc);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1b4841eda_anonFuncScope(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel> _111034_m, jule::Str _111061_ident) {
	if (((*((*(_111034_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11143_closure = _1b386b1d0_IsClosure(&(_111034_m));;
	if (_11143_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1b2d26ca7_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1b2d26ca7_Var>>((void*)__jule_anon_1b826a404, jule::Ptr<__jule_anon_1b826a404_ctx>::make(__jule_anon_1b826a404_ctx{._self_=_self_,._111034_m=_111034_m}).as<jule::Uintptr>(), __jule_anon_1b826a404_ctx_handler); __jule_collection; }));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	if (_11143_closure) {
		_1b491e3a3_indent((*(_self_))._field_oc);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1b491da01_write((*(_self_))._field_oc, _111061_ident);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1b491da01_write((*(_self_))._field_oc, _111061_ident);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1b4841b77_commonFuncScope(_self_, &((*_111034_m.alloc)._field_Func));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11143_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1b4842293_funcScope(jule::Ptr<_1b4839202_scopeCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _114230_f) {
	if (((*(_114230_f))._field_Scope == nullptr)) {
		return;;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b4841b77_commonFuncScope(_self_, &(_114230_f));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1b484a1e1_exprCoder> static__1b484a5dc_new(jule::Ptr<_1b491d2d6_ObjectCoder>* _4621_oc) {
	return jule::new_ptr<_1b484a1e1_exprCoder>(_1b484a1e1_exprCoder{._field_oc=(*(_4621_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1b2d26ca7_Var>>>(nullptr)});;
}



inline void _1b484a895_string(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b6c23a_Const>* _5224_c) {
	jule::Str _533_content = _1b2bc3e40_ReadStr((*(_5224_c)).ptr());;
	if ((_533_content.len() == 0LL)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _583_len = _1cab28d49_FmtInt(static_cast<jule::I64>(_533_content.len()), 10LL);;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1b485a883_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _533_content);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1b491da01_write((*(_self_))._field_oc, _583_len);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b484ab4d_boolean(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Bool _6724_b) {
	if (_6724_b) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1b484ad4b_nilLit(jule::Ptr<_1b484a1e1_exprCoder> _self_) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1b484b18c_ftoaSpecialCases(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::F64* _7934_x) {
	{
		
		if (_1ca96ce57_IsNaN((*(_7934_x)))) {
			_case_begin_1b828e79c:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1ca96d5d9_IsInf((*(_7934_x)), 1LL)) {
			_case_begin_1b828e846:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1ca96d5d9_IsInf((*(_7934_x)), -1LL)) {
			_case_begin_1b828e8bd:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1b828e714:;
			{
				return false;;
			}
		}
		_match_end_1b828e604:;
	};
	return true;;
}



inline void _1b484b445_float32(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b6c23a_Const>* _9325_c) {
	jule::F64 _943_x = _1b2bc4979_AsF64((*(_9325_c)).ptr());;
	if (_1b484b18c_ftoaSpecialCases(_self_, &(_943_x))) {
		return;;
	};
	{
		
		if ((_943_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b8293a59:;
			{
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_943_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b8292e32:;
			{
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1b8292a9c:;
			{
				_1b485ac29_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _943_x, 32LL);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1b8292838:;
	};
}



inline void _1b484b6ed_float64(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b6c23a_Const>* _11225_c) {
	jule::F64 _1133_x = _1b2bc4979_AsF64((*(_11225_c)).ptr());;
	if (_1b484b18c_ftoaSpecialCases(_self_, &(_1133_x))) {
		return;;
	};
	{
		
		if ((_1133_x == jule::MAX_F64)) {
			_case_begin_1b8296397:;
			{
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1133_x == jule::MIN_F64)) {
			_case_begin_1b8296078:;
			{
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1b8296012:;
			{
				_1b485ac29_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1133_x, 64LL);
			}
		}
		_match_end_1b8295c9d:;
	};
}



inline void _1b484b9a6_constant(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b6c23a_Const> _13029_c) {
	{
		
		if (_1b2bc653b_IsStr(_13029_c.ptr())) {
			_case_begin_1b8298223:;
			{
				_1b484a895_string(_self_, &(_13029_c));
			}
		}
		else if (_1b2bc62a5_IsBool(_13029_c.ptr())) {
			_case_begin_1b8298289:;
			{
				_1b484ab4d_boolean(_self_, _1b2bc3ba9_ReadBool(_13029_c));
			}
		}
		else if (_1b2bc67c2_IsF64(_13029_c.ptr())) {
			_case_begin_1b8298300:;
			{
				{
					
					if (((*_13029_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1b829ac3c:;
						{
							_1b484b445_float32(_self_, &(_13029_c));
						}
					}
					else {
						_case_begin_1b829a896:;
						{
							_1b484b6ed_float64(_self_, &(_13029_c));
						}
					}
					_match_end_1b829a786:;
				};
			}
		}
		else if (_1b2bc5c88_IsI64(_13029_c.ptr())) {
			_case_begin_1b8298366:;
			{
				_1b485b015_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1b2bc368c_ReadI64(_13029_c));
			}
		}
		else if (_1b2bc601e_IsU64(_13029_c.ptr())) {
			_case_begin_1b82983cc:;
			{
				_1b485b301_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1b2bc3923_ReadU64(_13029_c));
			}
		}
		else if (_1b2bc6a58_IsNil(_13029_c.ptr())) {
			_case_begin_1b8298443:;
			{
				_1b484ad4b_nilLit(_self_);
			}
		}
		else {
			_case_begin_1b82981ac:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1b82980ad:;
	};
}



inline void _1b484bdc4_operatorOverloadingUnary(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _15446_s, jule::U64 _15467_op, jule::Any _15486_e) {
	;
	jule::Ptr<_1b2bdda70_FnIns> _1567_f = _1b386e1a0_FindOperator(_15446_s, _15467_op, true);;
	if ((_1567_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: unary operator overloading is not exist, this is an implementation mistake", 79) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:158:4"));;
	};
	static__1b4861724_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_1567_f));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1b484e855_possibleRefExpr(_self_, _15486_e);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b484c2e2_divByZeroBinary(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2ac7eba_Token>* _16633_op, jule::Ptr<_1b2bcd125_OperandExprModel>* _16657_l, jule::Ptr<_1b2bcd125_OperandExprModel>* _16690_r) {
	;
	;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16657_l))))._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1b484e855_possibleRefExpr(_self_, (*((*(_16657_l))))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1b4933241_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16690_r))))._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1b484e855_possibleRefExpr(_self_, (*((*(_16690_r))))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_20dbc2ed1_Production))) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1b4921185_locInfo((*(_self_))._field_oc, _16633_op);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1b4933241_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16657_l))))._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_16633_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b82a961e:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b82acd4d:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1b82acca4:;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1b484c9da__unsafeBinary(jule::Ptr<_1b484a1e1_exprCoder> _self_, _20d8ca601_Builder* _20535_buf, jule::Str* _20559_l, jule::Str* _20568_r, jule::Ptr<_1b2db1627_TypeKind>* _2068_lk, jule::Ptr<_1b2db1627_TypeKind>* _20634_rk, jule::U64 _20655_op, jule::Str _20670_kind) {
	if ((_1b2db5351_Struct((*(_2068_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1b2b119c6_StructIns> _2098_s = _1b2db5351_Struct((*(_2068_lk)).ptr());;
		_1b485b950_operatorOverloadingBinary(_20535_buf, &(_2098_s), _20559_l, _20568_r, _20655_op, _20670_kind);
		return;;
	};
	if (((_20655_op == static_cast<jule::U64>(50LLU)) || (_20655_op == static_cast<jule::U64>(51LLU)))) {
		{
			
			if (_1b386ad8e_IsAny(_2068_lk)) {
				_case_begin_1b82b289c:;
				{
					if (((!(_1b2db275a_IsNil((*(_20634_rk)).ptr()))) && (!(_1b386ad8e_IsAny(_20634_rk))))) {
						_20d8d4d7a_WriteByte(_20535_buf, '(');
						if ((_20655_op == static_cast<jule::U64>(51LLU))) {
							_20d8d4d7a_WriteByte(_20535_buf, '!');
						};
						jule::I64 _2256_i = _1b4920508_pushAnyType((*(_self_))._field_oc, (*(_20634_rk)));;
						_20d8d4ac2_WriteStr(_20535_buf, jule::Str::lit("__jule_any_type", 15));
						_20d8d4ac2_WriteStr(_20535_buf, _1cab29113_Itoa(_2256_i));
						_20d8d4ac2_WriteStr(_20535_buf, jule::Str::lit("_compare(", 9));
						_20d8d4ac2_WriteStr(_20535_buf, (*(_20559_l)));
						_20d8d4ac2_WriteStr(_20535_buf, jule::Str::lit(", ", 2));
						_20d8d4ac2_WriteStr(_20535_buf, (*(_20568_r)));
						_20d8d4ac2_WriteStr(_20535_buf, jule::Str::lit("))", 2));
						return;;
					};
				}
			}
			else if ((_1b2db4a9d_Arr((*(_2068_lk)).ptr()) != nullptr)) {
				_case_begin_1b82b2946:;
				{
					jule::Ptr<_1b2dc1060_Arr> _2385_arr = _1b2db4a9d_Arr((*(_2068_lk)).ptr());;
					jule::Ptr<_1b2bda9b2_Fn> _2399_f = _1b2ea0d65_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
					jule::Ptr<_1b2bdda70_FnIns> _2409_ins = _1b386e524_FindFnGenericInstance(&(_2399_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2385_arr))._field_Elem; __jule_collection; }));;
					if ((_20655_op == static_cast<jule::U64>(51LLU))) {
						_20d8d4d7a_WriteByte(_20535_buf, '!');
					};
					static__1b4861724_funcIns(_20535_buf, &(_2409_ins));
					_20d8d4d7a_WriteByte(_20535_buf, '(');
					_20d8d4ac2_WriteStr(_20535_buf, (*(_20559_l)));
					_20d8d4ac2_WriteStr(_20535_buf, jule::Str::lit(".begin(), ", 10));
					_20d8d4ac2_WriteStr(_20535_buf, (*(_20568_r)));
					_20d8d4ac2_WriteStr(_20535_buf, jule::Str::lit(".begin(), ", 10));
					_20d8d4ac2_WriteStr(_20535_buf, _1cab29113_Itoa((*_2385_arr.alloc)._field_N));
					_20d8d4d7a_WriteByte(_20535_buf, ')');
					return;;
				}
			}
			_match_end_1b82b27ae:;
		};
	};
	{
		auto &_match_expr{ _20655_op };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b82b29ce:;
			{
				jule::Ptr<_1b2db9740_Prim> _2594_lp = _1b2db3ccd_Prim((*(_2068_lk)).ptr());;
				if (((_2594_lp != nullptr) && _1b2c74d8c_IsUnsigInt((*_2594_lp.alloc)._field_Kind))) {
					_20d8d4d7a_WriteByte(_20535_buf, '(');
					_1b492dc64_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _20535_buf, _2594_lp);
					_20d8d4d7a_WriteByte(_20535_buf, ')');
				};
			}
		}
		_match_end_1b82b64e9:;
	};
	_20d8d4d7a_WriteByte(_20535_buf, '(');
	_20d8d4ac2_WriteStr(_20535_buf, (*(_20559_l)));
	_20d8d4d7a_WriteByte(_20535_buf, ' ');
	_20d8d4ac2_WriteStr(_20535_buf, _20670_kind);
	_20d8d4d7a_WriteByte(_20535_buf, ' ');
	_20d8d4ac2_WriteStr(_20535_buf, (*(_20568_r)));
	_20d8d4d7a_WriteByte(_20535_buf, ')');
}



inline void _1b484cc93_unsafeBinary(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcd620_BinaryExprModel> _27633_m) {
	jule::I64 _2773_i = _20d8d584d_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _2787_oldbuf = _20d8d5d6a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1b484e855_possibleRefExpr(_self_, (*((*(_27633_m))._field_Left))._field_Model);
	jule::Str _2803_l = __jule_bytesToStr(_20d8d5d6a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2773_i));;
	{
		_20d8d6123_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2787_oldbuf);
	};
	_1b484e855_possibleRefExpr(_self_, (*((*_27633_m.alloc)._field_Right))._field_Model);
	jule::Str _2833_r = __jule_bytesToStr(_20d8d5d6a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2773_i));;
	{
		_20d8d6123_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2787_oldbuf);
	};
	_1b484c9da__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2803_l), &(_2833_r), &((*(*(_27633_m))._field_Left.alloc)._field_Kind), &((*(*(_27633_m))._field_Right.alloc)._field_Kind), (*((*_27633_m.alloc)._field_Op))._field_Id, (*(*(_27633_m))._field_Op.alloc)._field_Kind);
}



inline void _1b484d106_shl(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcd125_OperandExprModel>* _28825_l, jule::Ptr<_1b2bcd125_OperandExprModel>* _28858_r) {
	;
	;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28825_l))))._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1b484e855_possibleRefExpr(_self_, (*((*(_28825_l))))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1b4933241_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28858_r))))._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1b484e855_possibleRefExpr(_self_, (*((*(_28858_r))))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1b4933241_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28825_l))))._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_1b2c6c0d7_BitSizeOf((*(_1b2db3ccd_Prim((*((*(_28825_l))))._field_Kind.ptr())))._field_Kind)));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1b484d469_shr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcd125_OperandExprModel>* _31625_l, jule::Ptr<_1b2bcd125_OperandExprModel>* _31658_r) {
	;
	;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31625_l))))._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1b484e855_possibleRefExpr(_self_, (*((*(_31625_l))))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1b4933241_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31658_r))))._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1b484e855_possibleRefExpr(_self_, (*((*(_31658_r))))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1b4933241_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31625_l))))._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_1b2c6c0d7_BitSizeOf((*(_1b2db3ccd_Prim((*((*(_31625_l))))._field_Kind.ptr())))._field_Kind)));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1b484d722_binary(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcd620_BinaryExprModel> _34427_m) {
	{
		auto &_match_expr{ (*((*(_34427_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b82de81e:;
			{
				if ((_20dbc2c8e_Safety && (_1b2db5351_Struct((*((*(_34427_m))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1b484c2e2_divByZeroBinary(_self_, &((*_34427_m.alloc)._field_Op), &((*_34427_m.alloc)._field_Left), &((*_34427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b82de896:;
			{
				if ((_1b2db5351_Struct((*((*(_34427_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1b484d106_shl(_self_, &((*_34427_m.alloc)._field_Left), &((*_34427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b82de90c:;
			{
				if ((_1b2db5351_Struct((*((*(_34427_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1b484d469_shr(_self_, &((*_34427_m.alloc)._field_Left), &((*_34427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1b82de753:;
	};
	_1b484cc93_unsafeBinary(_self_, _34427_m);
}



inline void _1b484d9ca_var(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2d26ca7_Var> _36824_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82e4725:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1b2d26ca7_Var>> _36910_prefix = *it;
			{
				if (_36910_prefix(_36824_m)) {
					return;;
				};
			}
			_iter_next_1b82e4725:;
			++it;
			goto _iter_begin_1b82e4725;
		}
		_iter_end_1b82e4725:;
	};
	if ((*(_36824_m))._field_Binded) {
		jule::Ptr<_1b2adc809_Directive> _3754_d = _1b386c9ea_FindDirective(&((*_36824_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_3754_d != nullptr)) {
			_1b491dca9_writeBytes((*_self_.alloc)._field_oc, _1b492ab2e_concatAllParts((*_3754_d.alloc)._field_Args));
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1b486299a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _36824_m);
}



inline void _1b484dc83_structureIns(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b119c6_StructIns> _38433_m) {
	_1b49314e7_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _38433_m);
}



inline void _1b484e03b_unary(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcd9e9_UnaryExprModel> _38826_m) {
	if ((_1b2db5351_Struct((*((*(_38826_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b2b119c6_StructIns> _3918_s = _1b2db5351_Struct((*((*(_38826_m))._field_Expr))._field_Kind);;
		_1b484bdc4_operatorOverloadingUnary(_self_, &(_3918_s), (*((*_38826_m.alloc)._field_Op))._field_Id, (*(*(_38826_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_38826_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b82eaa39:;
			{
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1b484e855_possibleRefExpr(_self_, (*(*(_38826_m))._field_Expr.alloc)._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b82eb397:;
			{
				if ((_20dbc2ed1_Production || (_1b2db4064_Sptr((*((*(_38826_m))._field_Expr))._field_Kind) == nullptr))) {
					goto _match_end_1b82eb2ed;
				};
				_1b484e855_possibleRefExpr(_self_, (*(*(_38826_m))._field_Expr.alloc)._field_Model);
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1b4921185_locInfo((*(_self_))._field_oc, &((*_38826_m.alloc)._field_Op));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1b82eb2ed:;
	};
	_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1b491da01_write((*(_self_))._field_oc, (*(*(_38826_m))._field_Op.alloc)._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b484e855_possibleRefExpr(_self_, (*(*(_38826_m))._field_Expr.alloc)._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1b484e2e4_structureLit(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bce3bd_StructLitExprModel> _41933_m) {
	if ((*((*((*(_41933_m))._field_Strct))._field_Decl))._field_Binded) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1b49314e7_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_41933_m.alloc)._field_Strct);
	if ((*(*((*(_41933_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4307_inited = false;;
	_julec_label_1b8303657:;
	{
		auto expr = &((*(*(_41933_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8306814:;
		if (it != expr_end) {
			jule::Ptr<_1b2b10e26_FieldIns> _43215_f = *it;
			{
				{
					auto expr = &((*_41933_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8307529:;
					if (it != expr_end) {
						jule::Ptr<_1b2bce027_StructArgExprModel> _43316_arg = *it;
						{
							if (((*(_43316_arg))._field_Field == _43215_f)) {
								if (_4307_inited) {
									_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1b48626ae_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_43215_f))._field_Decl));
								_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1b484e855_possibleRefExpr(_self_, (*((*_43316_arg.alloc)._field_Expr))._field_Model);
								_4307_inited=true;
								goto _iter_next_1b8306814;
							};
						}
						_iter_next_1b8307529:;
						++it;
						goto _iter_begin_1b8307529;
					}
					_iter_end_1b8307529:;
				};
				if ((*(*((*(_41933_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					_4307_inited=false;
					goto _iter_next_1b8306814;
				};
				if (_4307_inited) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4307_inited=_1b4858c49_handleFieldByDefault(_self_, &(_43215_f));
			}
			_iter_next_1b8306814:;
			++it;
			goto _iter_begin_1b8306814;
		}
		_iter_end_1b8306814:;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1b484e59c_allocStructure(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bce6ba_AllocStructLitExprModel> _46235_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1b48623c3_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_46235_m))._field_Lit))._field_Strct));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1b484e2e4_structureLit(_self_, (*_46235_m.alloc)._field_Lit);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b484e855_possibleRefExpr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Any _47032_expr) {
	{
		auto &_match_expr{ _47032_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b830ecd4:;
			{
				jule::Ptr<_1b2d26ca7_Var> _4734_v = _47032_expr.unsafe_cast_ptr<_1b2d26ca7_Var>();;
				if ((*(_4734_v))._field_Reference) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1b4858908_model(_self_, _47032_expr);
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1b830ec6d:;
	};
	_1b4858908_model(_self_, _47032_expr);
}



inline void _1b484ec73_castTraitFromTrait(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcec4d_CastingExprModel>* _48440_m, jule::Ptr<_1b2be61c6_Trait> _48472_t1, jule::Ptr<_1b2be61c6_Trait> _48494_t2) {
	_1b484e855_possibleRefExpr(_self_, (*((*((*(_48440_m))))._field_Expr))._field_Model);
	_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1b4920dcc_pushAndWriteMaskMapper((*(_self_))._field_oc, _48472_t1, _48494_t2);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b485002b_casting(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bcec4d_CastingExprModel> _49728_m) {
	{
		
		if (_1b386ad8e_IsAny(&((*(_49728_m))._field_Kind))) {
			_case_begin_1b83148cc:;
			{
				if (_1b2db275a_IsNil((*_49728_m.alloc)._field_ExprKind.ptr())) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1b2db4817_TypeEnum((*(_49728_m))._field_ExprKind) != nullptr)) {
					_1b484e855_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _5084_i = _1b4920508_pushAnyType((*(_self_))._field_oc, (*_49728_m.alloc)._field_ExprKind);;
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_49728_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1b83165b0:;
						{
							jule::Ptr<_1b2db9740_Prim> _5125_prim = _1b2db3ccd_Prim((*(_49728_m))._field_ExprKind);;
							if (((_5125_prim != nullptr) && _1b2c75156_IsInt((*_5125_prim.alloc)._field_Kind))) {
								_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1b492dc64_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5125_prim);
								_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1b484e855_possibleRefExpr(_self_, (*(*(_49728_m))._field_Expr.alloc)._field_Model);
								_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1b83187e3;
							};
							goto _case_begin_1b8318859;
						}
					}
					else {
						_case_begin_1b8318859:;
						{
							_1b484e855_possibleRefExpr(_self_, (*(*(_49728_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1b83187e3:;
				};
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_5084_i));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1b386ad8e_IsAny(&((*(_49728_m))._field_ExprKind))) {
			_case_begin_1b8314976:;
			{
				_1b484e855_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1b2db4064_Sptr((*_49728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1b2db4064_Sptr((*(_49728_m))._field_Kind)))._field_Elem);
				} else {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49728_m.alloc)._field_Kind);
				};
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_20dbc2ed1_Production))) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1b4921185_locInfo((*(_self_))._field_oc, &((*_49728_m.alloc)._field_Token));
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_1b4920508_pushAnyType((*(_self_))._field_oc, (*_49728_m.alloc)._field_Kind)));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1b2db42ea_Ptr((*(_49728_m))._field_ExprKind.ptr()) != nullptr) || (_1b2db42ea_Ptr((*_49728_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b83149dc:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49728_m.alloc)._field_Kind);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1b484e855_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1b2db55d7_Trait((*(_49728_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b8314a53:;
			{
				if ((_1b2db55d7_Trait((*_49728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1b484ec73_castTraitFromTrait(_self_, &(_49728_m), _1b2db55d7_Trait((*(_49728_m))._field_Kind), _1b2db55d7_Trait((*(_49728_m))._field_ExprKind));
					return;;
				};
				_1b484e855_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1b2db4064_Sptr((*(_49728_m))._field_Kind) != nullptr)) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1b2db4064_Sptr((*(_49728_m))._field_Kind)))._field_Elem);
				} else {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49728_m.alloc)._field_Kind);
				};
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_20dbc2ed1_Production))) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1b4921185_locInfo((*(_self_))._field_oc, &((*_49728_m.alloc)._field_Token));
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1b4861a10_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1b2db55d7_Trait((*(_49728_m))._field_ExprKind));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_1b386dc71_FindTraitTypeOffset(_1b2db55d7_Trait((*(_49728_m))._field_ExprKind), (*_49728_m.alloc)._field_Kind)));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1b2db55d7_Trait((*(_49728_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8314ab9:;
			{
				_1b4933241_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49728_m.alloc)._field_Kind);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1b484e855_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1b4861a10_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1b2db55d7_Trait((*(_49728_m))._field_Kind));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_1b386dc71_FindTraitTypeOffset(_1b2db55d7_Trait((*(_49728_m))._field_Kind), (*_49728_m.alloc)._field_ExprKind)));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1b8314745:;
	};
	jule::Ptr<_1b2db9740_Prim> _5947_prim = _1b2db3ccd_Prim((*(_49728_m))._field_Kind.ptr());;
	if (((_5947_prim != nullptr) && _1b2dbcc0a_IsStr(_5947_prim))) {
		jule::Ptr<_1b2db9740_Prim> _5968_eprim = _1b2db3ccd_Prim((*_49728_m.alloc)._field_ExprKind.ptr());;
		if (((_5968_eprim != nullptr) && (_5947_prim != nullptr))) {
			if (_1b2dbb16a_IsU8(_5968_eprim)) {
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1b484e855_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
			_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1b2dbdc3e_Slc> _6078_slc = _1b2db4d34_Slc((*(_49728_m))._field_ExprKind);;
		if ((_6078_slc != nullptr)) {
			_5968_eprim=_1b2db3ccd_Prim((*_6078_slc.alloc)._field_Elem.ptr());
			if (_1b2dbab4d_IsI32(_5968_eprim)) {
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1b484e855_possibleRefExpr(_self_, (*(*(_49728_m))._field_Expr.alloc)._field_Model);
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_5947_prim=_1b2db3ccd_Prim((*(_49728_m))._field_ExprKind);
	if (((_5947_prim != nullptr) && _1b2dbcc0a_IsStr(_5947_prim))) {
		jule::Ptr<_1b2dbdc3e_Slc> _6238_slc = _1b2db4d34_Slc((*(_49728_m))._field_Kind);;
		if ((_6238_slc != nullptr)) {
			_5947_prim=_1b2db3ccd_Prim((*(_6238_slc))._field_Elem);
			if (_1b2dbab4d_IsI32(_5947_prim)) {
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1b484e855_possibleRefExpr(_self_, (*(*(_49728_m))._field_Expr.alloc)._field_Model);
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49728_m.alloc)._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1b484e855_possibleRefExpr(_self_, (*(*(_49728_m))._field_Expr.alloc)._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b48502d4_args(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel>* _64426_m) {
	jule::I64 _6457_j = 0LL;;
	if (((((*((*((*(_64426_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_64426_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_64426_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1b2bd963c_IsSelf((*((*((*((*(_64426_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6457_j)++;
	};
	{
		auto expr = &((*((*(_64426_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b834b1e9:;
		if (it != expr_end) {
			jule::I64 _6507_i = it - expr->begin();
			jule::Any _65010_arg = *it;
			{
				jule::Ptr<_1b2bdc91a_ParamIns> _6514_p = (*(*((*(_64426_m))))._field_Func.alloc)._field_Params[_6457_j];;
				if ((((*(_6514_p))._field_Decl != nullptr) && (*(*(_6514_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _65010_arg };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1b834e021:;
							{
								jule::Ptr<_1b2d26ca7_Var> _6556_v = _65010_arg.unsafe_cast_ptr<_1b2d26ca7_Var>();;
								if ((*(_6556_v))._field_Reference) {
									_1b4858908_model(_self_, _65010_arg);
									goto _julec_label_1b8351a6d;
								};
							}
						}
						_match_end_1b834deaa:;
					};
					_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1b4858908_model(_self_, _65010_arg);
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1b8351a6d;
				};
				_1b484e855_possibleRefExpr(_self_, _65010_arg);
				_julec_label_1b8351a6d:;
				if ((((*((*(_64426_m))))._field_Args.len() - _6507_i) > 1LL)) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_6457_j)++;
			}
			_iter_next_1b834b1e9:;
			++it;
			_6507_i++;
			goto _iter_begin_1b834b1e9;
		}
		_iter_end_1b834b1e9:;
	};
}



inline void _1b485058c_modelForCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Any _67533_expr) {
	{
		auto &_match_expr{ _67533_expr };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b8352ac4:;
			{
				_1b4853b12_funcIns(_self_, _67533_expr.cast_ptr<_1b2bdda70_FnIns>(&__jule_any_type63));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b834ce87:;
			{
				jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _6818_ssie = _67533_expr.unsafe_cast_ptr<_1b2bd3191_StructSubIdentExprModel>();;
				if (((*(_6818_ssie))._field_Method != nullptr)) {
					_1b4853b12_funcIns(_self_, (*_6818_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1b8352a5d:;
	};
	_1b484e855_possibleRefExpr(_self_, _67533_expr);
}



inline void _1b4850845_pushCallInf(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel>* _69029_m) {
	if ((_20dbc2ed1_Production || (!((*((*((*(_69029_m))))._field_Func))._field_Anon)))) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_69029_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_69029_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1b8356677:;
				{
					if ((*((*((*((*((*((*(_69029_m))))._field_Expr.unsafe_cast_ptr<_1b2bd3191_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1b8356611:;
		};
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1b4921185_locInfo((*(_self_))._field_oc, &((*((*(_69029_m))))._field_Token));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_69029_m))))._field_Args.len() != 0LL)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1b4850b86_isWrapped(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel>* _71331_m) {
	if ((((!(_1b2be0038_IsBuiltin((*((*(_71331_m))))._field_Func.ptr()))) && ((*((*(*((*(_71331_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1b2bd963c_IsSelf((*((*((*((*(_71331_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_71331_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1b835b43a:;
				{
					jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _7179_ssie = (*((*(_71331_m))))._field_Expr.unsafe_cast_ptr<_1b2bd3191_StructSubIdentExprModel>();;
					{
						
						if (_1b2bd98c3_IsRef((*((*((*((*(_71331_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1b2db4064_Sptr((*((*(_7179_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b835d1d9:;
							{
								goto _match_end_1b835c392;
							}
						}
						else {
							_case_begin_1b835c419:;
							{
								if ((_1b2db5351_Struct((*((*(_7179_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*(_7179_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1b4858908_model(_self_, (*(*(_7179_ssie))._field_Expr.alloc)._field_Model);
										_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1b835c392:;
					};
				}
			}
			_match_end_1b835b3c4:;
		};
	};
	return false;;
}



inline jule::Bool _1b4850ec7_writeReceiver(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Any _73734_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _73734_m };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b8362c16:;
			{
				_1b484e855_possibleRefExpr(_self_, (*((*(_73734_m.unsafe_cast_ptr<_1b2bcd9e9_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b8362e25:;
			{
				_1b484e855_possibleRefExpr(_self_, (*((*((*(_73734_m.unsafe_cast_ptr<_1b46d7303_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b8362dae:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:746:4"));;
			}
		}
		_match_end_1b8362d48:;
	};
}



inline void _1b4851280_pureFuncCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel>* _75034_m) {
	jule::Bool _7513_wrapped = _1b4850b86_isWrapped(_self_, _75034_m);;
	_1b485058c_modelForCall(_self_, (*((*(_75034_m))))._field_Expr);
	if ((!(_1b2be0038_IsBuiltin((*((*(_75034_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_75034_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_75034_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1b386cdb3_HasDirective(&((*(*((*((*(_75034_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_75034_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b836726a:;
					if (it != expr_end) {
						jule::I64 _75711_i = it - expr->begin();
						jule::Ptr<_1b2daee72_InsGeneric> _75718_g = *it;
						{
							_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_75718_g))._field_Kind);
							if ((((*(*((*(_75034_m))))._field_Func.alloc)._field_Generics.len() - _75711_i) > 1LL)) {
								_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1b836726a:;
						++it;
						_75711_i++;
						goto _iter_begin_1b836726a;
					}
					_iter_end_1b836726a:;
				};
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1b4850845_pushCallInf(_self_, _75034_m);
	if (((*(*((*(_75034_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_75034_m))))._field_Func.alloc)._field_Anon)))) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_75034_m))))._field_Args.len() > 0LL)) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1b2be0038_IsBuiltin((*((*(_75034_m))))._field_Func))) && ((*(*((*((*(_75034_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1b2bd963c_IsSelf((*((*((*((*(_75034_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_75034_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1b836de75:;
				{
					jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _7819_ssie = (*((*(_75034_m))))._field_Expr.unsafe_cast_ptr<_1b2bd3191_StructSubIdentExprModel>();;
					{
						
						if (_1b2bd98c3_IsRef((*((*((*((*(_75034_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1b8373210:;
							{
								_1b4850ec7_writeReceiver(_self_, (*((*(_7819_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1b2db4064_Sptr((*((*(_7819_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b83747a5:;
							{
								jule::Bool _7886_safe = _1b4850ec7_writeReceiver(_self_, (*(*(_7819_ssie))._field_Expr.alloc)._field_Model);;
								if (_7886_safe) {
									_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_20dbc2ed1_Production))) {
										_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1b4921185_locInfo((*(_self_))._field_oc, &((*((*(_75034_m))))._field_Token));
										_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1b836eecb:;
							{
								if ((_1b2db5351_Struct((*((*(_7819_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_7819_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type7) {
											_case_begin_1b8370828:;
											{
												jule::Ptr<_1b2d26ca7_Var> _8028_v = (*((*(_7819_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1b2d26ca7_Var>();;
												if ((*(_8028_v))._field_Reference) {
													goto _match_end_1b8370d01;
												};
												goto _case_begin_1b8370d67;
											}
										}
										else {
											_case_begin_1b8370d67:;
											{
												_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1b8370d01:;
									};
								};
								if (_7513_wrapped) {
									_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1b2db42ea_Ptr((*((*(_7819_ssie))._field_Expr))._field_Kind) == nullptr)) {
									_1b4858908_model(_self_, (*(*(_7819_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1b484e855_possibleRefExpr(_self_, (*((*((*(*(_7819_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1b2bcd9e9_UnaryExprModel>(&__jule_any_type112)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1b836ee54:;
					};
					if (((*((*(_75034_m))))._field_Args.len() > 0LL)) {
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1b836db12:;
				{
					_1b484e855_possibleRefExpr(_self_, (*((*((*(_75034_m))))._field_Expr.unsafe_cast_ptr<_1b2bd2800_TraitSubIdentExprModel>()))._field_Expr);
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_75034_m))))._field_Args.len() > 0LL)) {
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1b836dded:;
		};
	};
	_1b48502d4_args(_self_, _75034_m);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_7513_wrapped) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1b4851538_coFuncCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel>* _84032_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _8477_i = jule::Str();;
	if ((((*((*((*(_84032_m))))._field_Func))._field_Params.len() > 0LL) || (*(*((*(_84032_m))))._field_Func.alloc)._field_AsAnon)) {
		_8477_i=_1cab29113_Itoa(_1b491ea35_pushCoSpawn((*(_self_))._field_oc, (*((*(_84032_m))))._field_Func));
		jule::Str _8504_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _8477_i);;
		_1b491da01_write((*(_self_))._field_oc, _8504_t);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_1b491da01_write((*(_self_))._field_oc, _8504_t);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_1b491e3a3_indent((*(_self_))._field_oc);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_1b485058c_modelForCall(_self_, (*((*(_84032_m))))._field_Expr);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*(*((*(_84032_m))))._field_Func.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8390282:;
			if (it != expr_end) {
				jule::I64 _8728_j = it - expr->begin();
				{
					_1b491e3a3_indent((*(_self_))._field_oc);
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_8728_j));
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1b484e855_possibleRefExpr(_self_, (*((*(_84032_m))))._field_Args[_8728_j]);
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1b8390282:;
				++it;
				_8728_j++;
				goto _iter_begin_1b8390282;
			}
			_iter_end_1b8390282:;
		};
		_1b491e3a3_indent((*(_self_))._field_oc);
	};
	if (!(_8477_i).empty()) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_8477_i).empty()) {
		static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_84032_m))))._field_Func));
	} else {
		_1b491da01_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _8477_i));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_8477_i).empty()) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_8477_i).empty()) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1b485189b_writeUseExpr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bdda70_FnIns>* _91834_f, jule::Ptr<_1b2d7dc21_Data> _91855_d) {
	if ((_1b2db5b04_Tup((*(_91855_d))._field_Kind.ptr()) == nullptr)) {
		_1b484e855_possibleRefExpr(_self_, (*_91855_d.alloc)._field_Model);
		_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1b2bd3c0d_TupleExprModel> _9247_tup = (*_91855_d.alloc)._field_Model.cast_ptr<_1b2bd3c0d_TupleExprModel>(&__jule_any_type83);;
	_1b4937a1a_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1b2db5b04_Tup((*((*(_91834_f))))._field_Result.ptr()));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_9247_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83a200d:;
		if (it != expr_end) {
			jule::I64 _9277_i = it - expr->begin();
			jule::Ptr<_1b2d7dc21_Data> _92710_data = *it;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_9277_i));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1b484e855_possibleRefExpr(_self_, (*(_92710_data))._field_Model);
				if ((((*(_9247_tup))._field_Datas.len() - _9277_i) > 1LL)) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b83a200d:;
			++it;
			_9277_i++;
			goto _iter_begin_1b83a200d;
		}
		_iter_end_1b83a200d:;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1b4851b54_funcCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0600_FnCallExprModel> _93929_m) {
	if ((*(_93929_m))._field_IsCo) {
		_1b4851538_coFuncCall(_self_, &(_93929_m));
		return;;
	};
	if (((_1b2be0038_IsBuiltin((*_93929_m.alloc)._field_Func.ptr()) || (!((*((*(*(_93929_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_93929_m.alloc)._field_Except != nullptr) && ((*(*(_93929_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1b4851280_pureFuncCall(_self_, &(_93929_m));
		return;;
	};
	_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1b4851280_pureFuncCall(_self_, &(_93929_m));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1b491e3a3_indent((*(_self_))._field_oc);
	if (((*_93929_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_93929_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_93929_m.alloc)._field_Assigned)))) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1b48418be_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_93929_m.alloc)._field_Except);
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9675_forwarded = _1b386a8e9_IsForwarded(&((*_93929_m.alloc)._field_Except));;
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9675_forwarded) {
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9729_stmt = (*(*(_93929_m))._field_Except.alloc)._field_Stmts[((*(*(_93929_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9729_stmt };
				
				if (_match_expr.type == &__jule_any_type21) {
					_case_begin_1b83ae405:;
					{
						((*((*(_93929_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_93929_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1b491dea7_addIndent((*(_self_))._field_oc);
						_1b4841616_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_93929_m.alloc)._field_Except));
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1b491e3a3_indent((*(_self_))._field_oc);
						_1b485189b_writeUseExpr(_self_, &((*_93929_m.alloc)._field_Func), _9729_stmt.cast_ptr<_1b2d7dc21_Data>(&__jule_any_type21));
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1b491e1a5_doneIndent((*(_self_))._field_oc);
						_1b491e3a3_indent((*(_self_))._field_oc);
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1b83b0868:;
					{
						_1b48418be_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_93929_m.alloc)._field_Except);
					}
				}
				_match_end_1b83b0802:;
			};
			if (_9675_forwarded) {
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1b4859ac4_initExpr(_self_, (*(*(_93929_m))._field_Func.alloc)._field_Result);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1b491e1a5_doneIndent((*(_self_))._field_oc);
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1b4921185_locInfo((*(_self_))._field_oc, &((*_93929_m.alloc)._field_Token));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1b2bdae68_IsVoid((*((*(_93929_m))._field_Func))._field_Decl)))) {
			_1b491e3a3_indent((*(_self_))._field_oc);
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1b491e1a5_doneIndent((*(_self_))._field_oc);
	};
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1b4851e0c_slice(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd09c9_SliceExprModel> _101226_m) {
	if (((*(_101226_m))._field_Elems.len() == 0LL)) {
		_1b493064a_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_101226_m.alloc)._field_ElemKind);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1b493064a_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_101226_m.alloc)._field_ElemKind);
	jule::Str _10203_size = _1cab29113_Itoa((*_101226_m.alloc)._field_Elems.len());;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1b491da01_write((*(_self_))._field_oc, _10203_size);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1b491da01_write((*(_self_))._field_oc, _10203_size);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_101226_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83c4805:;
		if (it != expr_end) {
			jule::I64 _10307_i = it - expr->begin();
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1b484e855_possibleRefExpr(_self_, (*(_101226_m))._field_Elems[_10307_i]);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1b83c4805:;
			++it;
			_10307_i++;
			goto _iter_begin_1b83c4805;
		}
		_iter_end_1b83c4805:;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1b48521b5_indexing(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd0e80_IndexingExprModel> _104129_m) {
	{
		auto &_match_expr{ (*((*(_104129_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b83c8683:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_20dbc2ed1_Production))) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1b4921185_locInfo((*(_self_))._field_oc, &((*(_104129_m))._field_Token));
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10524_s = _1b2bc3e40_ReadStr((*((*(_104129_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1b2b6c23a_Const>().ptr());;
				_1b485a883_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10524_s);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_10524_s.len()));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1b484e855_possibleRefExpr(_self_, (*((*_104129_m.alloc)._field_Index))._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1b83c861c:;
	};
	{
		
		if ((_1b2db586d_Map((*((*_104129_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b83d23e5:;
			{
				jule::Ptr<_1b2dc03d3_Map> _10658__map = _1b2db586d_Map((*((*(_104129_m))._field_Expr))._field_Kind);;
				jule::Ptr<_1b2b0db6b_Struct> _10668_s = _1b2ea145e_RuntimeFindStruct(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1b2b119c6_StructIns> _10678_ins = _1b386e9a8_FindStructGenericInstance(&(_10668_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_10658__map))._field_Key; (*it++) = (*_10658__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1b2bdda70_FnIns> _10698_f = (*(_1b2b12a71_FindMethod(_10678_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_10698_f));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1b484e855_possibleRefExpr(_self_, (*(*(_104129_m))._field_Expr.alloc)._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1b484e855_possibleRefExpr(_self_, (*(*(_104129_m))._field_Index.alloc)._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_20dbc2ed1_Production || (_1b2db42ea_Ptr((*((*_104129_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr) || _1b386aac5_IsExprComesFromBind(&((*_104129_m.alloc)._field_Expr))) {
			_case_begin_1b83cea30:;
			{
				_1b484e855_possibleRefExpr(_self_, (*(*(_104129_m))._field_Expr.alloc)._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1b484e855_possibleRefExpr(_self_, (*(*(_104129_m))._field_Index.alloc)._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1b83ce920:;
			{
				_1b484e855_possibleRefExpr(_self_, (*((*_104129_m.alloc)._field_Expr))._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1b4921185_locInfo((*(_self_))._field_oc, &((*_104129_m.alloc)._field_Token));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1b484e855_possibleRefExpr(_self_, (*(*(_104129_m))._field_Index.alloc)._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1b83cbe4a:;
	};
}



inline void _1b485246d_unsafeIndexing(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d6379_UnsafeIndexingExprModel> _109335_m) {
	_1b484e855_possibleRefExpr(_self_, (*((*((*(_109335_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_20dbc2ed1_Production || (_1b2db42ea_Ptr((*(*((*(_109335_m))._field_Node))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1b2db586d_Map((*((*((*(_109335_m))._field_Node))._field_Expr))._field_Kind) != nullptr)) {
			_case_begin_1b83dd9b7:;
			{
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1b484e855_possibleRefExpr(_self_, (*((*(*(_109335_m))._field_Node.alloc)._field_Index))._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1b83db520:;
			{
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1b484e855_possibleRefExpr(_self_, (*((*(*(_109335_m))._field_Node.alloc)._field_Index))._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1b83dc0c0:;
	};
}



inline void _1b4852726_anonFunc(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel> _111029_m) {
	jule::Bool _11113_closure = _1b386b1d0_IsClosure(&(_111029_m));;
	jule::Str _11123_ident = _1b49201b7_pushAnonFn((*(_self_))._field_oc, &(_111029_m));;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1b4932a6a_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_111029_m))._field_Func);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1b491da01_write((*(_self_))._field_oc, _11123_ident);
	if (_11113_closure) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1b491da01_write((*(_self_))._field_oc, _11123_ident);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1b491da01_write((*(_self_))._field_oc, _11123_ident);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_111029_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b83e31b4:;
			if (it != expr_end) {
				jule::I64 _11249_i = it - expr->begin();
				jule::Ptr<_1b2d26ca7_Var> _112416_v = *it;
				{
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1b486299a_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _112416_v);
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1b484d9ca_var(_self_, _112416_v);
					if ((((*_111029_m.alloc)._field_Captured.len() - _11249_i) > 1LL)) {
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1b83e31b4:;
				++it;
				_11249_i++;
				goto _iter_begin_1b83e31b4;
			}
			_iter_end_1b83e31b4:;
		};
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1b491da01_write((*(_self_))._field_oc, _11123_ident);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1b48529ce_mapExpr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd1bd9_MapExprModel> _114128_m) {
	jule::Ptr<_1b2b0db6b_Struct> _11427_s = _1b2ea145e_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1b2b119c6_StructIns> _11437_ins = _1b386e9a8_FindStructGenericInstance(&(_11427_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_114128_m))._field_Kind))._field_Key; (*it++) = (*(*(_114128_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1b2bdda70_FnIns> _11457_maker = (*(_1b2b12a71_FindMethod(_11437_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_114128_m.alloc)._field_Entries.len() == 0LL)) {
		static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11457_maker));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _11527_f = (*(_1b2b12a71_FindMethod(_11437_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1b4930d21_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_114128_m.alloc)._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11457_maker));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_114128_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8404eea:;
		if (it != expr_end) {
			jule::Ptr<_1b2bd1810_KeyValPairExprModel> _116215_pair = *it;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11527_f));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1b484e855_possibleRefExpr(_self_, (*(_116215_pair))._field_Key);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1b484e855_possibleRefExpr(_self_, (*_116215_pair.alloc)._field_Val);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1b8404eea:;
			++it;
			goto _iter_begin_1b8404eea;
		}
		_iter_end_1b8404eea:;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1b4852c87_slicing(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd226c_SlicingExprModel> _117728_m) {
	_1b484e855_possibleRefExpr(_self_, (*(_117728_m))._field_Expr);
	_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_20dbc2ed1_Production))) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1b4921185_locInfo((*(_self_))._field_oc, &((*_117728_m.alloc)._field_Token));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1b484e855_possibleRefExpr(_self_, (*_117728_m.alloc)._field_Left);
	if (((*_117728_m.alloc)._field_Right != nullptr)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1b484e855_possibleRefExpr(_self_, (*_117728_m.alloc)._field_Right);
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b4853040_traitSub(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd2800_TraitSubIdentExprModel> _119329_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1b4861a10_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_119329_m))._field_Trt);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1b484e855_possibleRefExpr(_self_, (*_119329_m.alloc)._field_Expr);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_20dbc2ed1_Production))) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1b4921185_locInfo((*(_self_))._field_oc, &((*_119329_m.alloc)._field_Token));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1b4861438_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_119329_m.alloc)._field_Method));
}



inline void _1b48532e8_structureSub(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _120933_m) {
	_1b484e855_possibleRefExpr(_self_, (*((*(_120933_m))._field_Expr))._field_Model);
	if (((*_120933_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1b48626ae_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_120933_m.alloc)._field_Field))._field_Decl));
}



inline void _1b48535a1_array(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd3911_ArrayExprModel> _121826_m) {
	if ((((*((*(_121826_m))._field_Kind))._field_N == 0LL) || (((*_121826_m.alloc)._field_Elems.len() == 0LL) && (!(_1b493a0e4_ableToInit(&((*(*(_121826_m))._field_Kind.alloc)._field_Elem))))))) {
		_1b493185a_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_121826_m.alloc)._field_Kind);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_121826_m.alloc)._field_Elems.len() == 2LL) && ((*(_121826_m))._field_Elems[1LL] == nullptr))) {
		_1b493185a_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_121826_m.alloc)._field_Kind);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1b484e855_possibleRefExpr(_self_, (*(_121826_m))._field_Elems[0LL]);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1b493185a_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_121826_m.alloc)._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_121826_m.alloc)._field_Elems.len() != (*(*(_121826_m))._field_Kind.alloc)._field_N)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_121826_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8420c5d:;
		if (it != expr_end) {
			jule::I64 _12517_i = it - expr->begin();
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1b484e855_possibleRefExpr(_self_, (*_121826_m.alloc)._field_Elems[_12517_i]);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1b8420c5d:;
			++it;
			_12517_i++;
			goto _iter_begin_1b8420c5d;
		}
		_iter_end_1b8420c5d:;
	};
	if ((((*_121826_m.alloc)._field_Elems.len() != (*(*(_121826_m))._field_Kind.alloc)._field_N) && _1b493a0e4_ableToInit(&((*(*(_121826_m))._field_Kind.alloc)._field_Elem)))) {
		_1b48592aa_fillCollectionByDefault(_self_, &((*(*(_121826_m))._field_Kind.alloc)._field_Elem));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1b4853859_funcInsCommon(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _126834_m) {
	_1b4932dcd_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _126834_m);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b4853b12_funcIns(_self_, _126834_m);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b4853b12_funcIns(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _127528_m) {
	if ((((*(_127528_m))._field_Decl != nullptr) && (*(*(_127528_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1b2adc809_Directive> _12774_d = _1b386c9ea_FindDirective(&((*(*(_127528_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_12774_d != nullptr)) {
			_1b491dca9_writeBytes((*(_self_))._field_oc, _1b492ab2e_concatAllParts((*_12774_d.alloc)._field_Args));
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_127528_m));
}



inline void _1b4853dba_tuple(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd3c0d_TupleExprModel> _128626_m) {
	{
		auto expr = &((*_128626_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b842d496:;
		if (it != expr_end) {
			jule::I64 _12878_i = it - expr->begin();
			jule::Ptr<_1b2d7dc21_Data> _128715_d = *it;
			{
				_1b484e855_possibleRefExpr(_self_, (*(_128715_d))._field_Model);
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_128626_m))._field_Datas.len() - _12878_i) > 1LL)) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1b491e3a3_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1b842d496:;
			++it;
			_12878_i++;
			goto _iter_begin_1b842d496;
		}
		_iter_end_1b842d496:;
	};
}



inline void _1b4854173_newCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd488a_BuiltinNewCallExprModel> _129728_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_129728_m))._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_129728_m.alloc)._field_Init != nullptr)) {
		_1b484e855_possibleRefExpr(_self_, (*_129728_m.alloc)._field_Init);
	} else if (_1b493a0e4_ableToInit(&((*_129728_m.alloc)._field_Kind))) {
		_1b4859ac4_initExpr(_self_, (*_129728_m.alloc)._field_Kind);
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b485442b_outCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd40d7_BuiltinOutCallExprModel> _130928_m) {
	if (((*(_130928_m))._field_Debug && _20dbc2ed1_Production)) {
		return;;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	jule::Ptr<_1b2bda9b2_Fn> _13147_decl = _1b2ea0d65_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1b2bdda70_FnIns> _13157_f = _1b386e524_FindFnGenericInstance(&(_13147_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_130928_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13157_f));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b484e855_possibleRefExpr(_self_, (*(*(_130928_m))._field_Expr.alloc)._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1b48546d4_outlnCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd44b1_BuiltinOutlnCallExprModel> _132230_m) {
	if (((*(_132230_m))._field_Debug && _20dbc2ed1_Production)) {
		return;;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	jule::Ptr<_1b2bda9b2_Fn> _13277_decl = _1b2ea0d65_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1b2bdda70_FnIns> _13287_f = _1b386e524_FindFnGenericInstance(&(_13277_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_132230_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13287_f));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b484e855_possibleRefExpr(_self_, (*(*(_132230_m))._field_Expr.alloc)._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1b485498c_panicCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd4c64_BuiltinPanicCallExprModel> _133530_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1b484e855_possibleRefExpr(_self_, (*(_133530_m))._field_Expr);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1b4921185_locInfo((*(_self_))._field_oc, &((*_133530_m.alloc)._field_Token));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1b4854c45_errorCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd686a_BuiltinErrorCallExprModel> _134330_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1b2bdae68_IsVoid((*((*(_134330_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_134330_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1b8441751:;
				{
					jule::Ptr<_1b2d26ca7_Var> _13485_v = (*((*(_134330_m))._field_Err))._field_Model.unsafe_cast_ptr<_1b2d26ca7_Var>();;
					if (((*(_13485_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1b84416da:;
		};
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1b49381e1_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_134330_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_134330_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1b8445c94:;
				{
					jule::Ptr<_1b2d26ca7_Var> _13605_v = (*((*(_134330_m))._field_Err))._field_Model.unsafe_cast_ptr<_1b2d26ca7_Var>();;
					if (((*(_13605_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1b8445c2d:;
		};
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1b484e855_possibleRefExpr(_self_, (*((*(_134330_m))._field_Err))._field_Model);
	jule::I64 _13693_i = _1b4920508_pushAnyType((*(_self_))._field_oc, (*(*(_134330_m))._field_Err.alloc)._field_Kind);;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_13693_i));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1b4854eed_copyCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd6491_BuiltinCopyCallExprModel> _137529_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1b484e855_possibleRefExpr(_self_, (*((*(_137529_m))._field_Dest))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1b484e855_possibleRefExpr(_self_, (*((*_137529_m.alloc)._field_Src))._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b48552a6_lenCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd58e1_BuiltinLenCallExprModel> _138328_m) {
	jule::Ptr<_1b2dc03d3_Map> _13847__map = _1b2db586d_Map((*((*(_138328_m))._field_Expr))._field_Kind.ptr());;
	if ((_13847__map != nullptr)) {
		jule::Ptr<_1b2b0db6b_Struct> _13868_s = _1b2ea145e_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		jule::Ptr<_1b2b119c6_StructIns> _13878_ins = _1b386e9a8_FindStructGenericInstance(&(_13868_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_13847__map.alloc)._field_Key; (*it++) = (*_13847__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1b2bdda70_FnIns> _13898_f = (*(_1b2b12a71_FindMethod(_13878_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13898_f));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1b484e855_possibleRefExpr(_self_, (*(*(_138328_m))._field_Expr.alloc)._field_Model);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1b484e855_possibleRefExpr(_self_, (*(*(_138328_m))._field_Expr.alloc)._field_Model);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1b485555e_capCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd5bdd_BuiltinCapCallExprModel> _140028_m) {
	_1b484e855_possibleRefExpr(_self_, (*((*(_140028_m))._field_Expr))._field_Model);
	_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1b4855817_deleteCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd60b7_BuiltinDeleteCallExprModel> _140531_m) {
	jule::Ptr<_1b2dc03d3_Map> _14067__map = _1b2db586d_Map((*((*(_140531_m))._field_Dest))._field_Kind.ptr());;
	if ((_14067__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1408:4"));;
	};
	jule::Ptr<_1b2b0db6b_Struct> _14107_s = _1b2ea145e_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1b2b119c6_StructIns> _14117_ins = _1b386e9a8_FindStructGenericInstance(&(_14107_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14067__map))._field_Key; (*it++) = (*(_14067__map))._field_Val; __jule_collection; }));;
	;
	if (((*_140531_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1b2bdda70_FnIns> _14148_f = (*(_1b2b12a71_FindMethod(_14117_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14148_f));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1b484e855_possibleRefExpr(_self_, (*(*(_140531_m))._field_Dest.alloc)._field_Model);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1b484e855_possibleRefExpr(_self_, (*(*(_140531_m))._field_Key.alloc)._field_Model);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1b2bdda70_FnIns> _14228_f = (*(_1b2b12a71_FindMethod(_14117_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14228_f));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1b484e855_possibleRefExpr(_self_, (*(*(_140531_m))._field_Dest.alloc)._field_Model);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1b4855ac0_makeCallSlice(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd521a_BuiltinMakeCallExprModel>* _143035_m) {
	jule::Ptr<_1b2dbdc3e_Slc> _14317_slice = _1b2db4d34_Slc((*((*(_143035_m))))._field_Kind.ptr());;
	jule::Bool _14323_init = _1b493a0e4_ableToInit(&((*(_14317_slice))._field_Elem));;
	if (_14323_init) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_143035_m))))._field_Kind);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1b484e855_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Len);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_143035_m))))._field_Cap != nullptr)) {
		_1b484e855_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Cap);
	} else {
		_1b484e855_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Len);
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14323_init))) {
		return;;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1b4859563_initCollection(_self_, &((*_14317_slice.alloc)._field_Elem));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1b4855d78_makeCallStr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd521a_BuiltinMakeCallExprModel>* _145433_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1b484e855_possibleRefExpr(_self_, (*((*(_145433_m))))._field_Len);
	if (((*((*(_145433_m))))._field_Cap != nullptr)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1b484e855_possibleRefExpr(_self_, (*((*(_145433_m))))._field_Cap);
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b4856131_makeCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd521a_BuiltinMakeCallExprModel> _146529_m) {
	if ((_1b2db4d34_Slc((*(_146529_m))._field_Kind.ptr()) != nullptr)) {
		_1b4855ac0_makeCallSlice(_self_, &(_146529_m));
		return;;
	};
	_1b4855d78_makeCallStr(_self_, &(_146529_m));
}



inline void _1b48563d9_pushToSlice(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d6753_PushToSliceExprModel> _147332_m) {
	;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1b493064a_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_147332_m))._field_Elems))._field_ElemKind);
	jule::Bool _14817_ptr = false;;
	{
		auto &_match_expr{ (*(_147332_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b846dbe0:;
			{
				jule::Ptr<_1b2bcd9e9_UnaryExprModel> _14858_u = (*(_147332_m))._field_Dest.unsafe_cast_ptr<_1b2bcd9e9_UnaryExprModel>();;
				if ((_1b2db42ea_Ptr((*((*(_14858_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1b484e855_possibleRefExpr(_self_, (*(*(_14858_u))._field_Expr.alloc)._field_Model);
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14817_ptr=true;
					goto _match_end_1b846c6d3;
				};
				goto _case_begin_1b846c749;
			}
		}
		else {
			_case_begin_1b846c749:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1b484e855_possibleRefExpr(_self_, (*_147332_m.alloc)._field_Dest);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1b846c6d3:;
	};
	if (((*(*(_147332_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14817_ptr) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1b484e855_possibleRefExpr(_self_, (*((*(_147332_m))._field_Elems))._field_Elems[0LL]);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14817_ptr) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa((*(*(_147332_m))._field_Elems.alloc)._field_Elems.len()));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_147332_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b847616a:;
		if (it != expr_end) {
			jule::Any _151915_e = *it;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14817_ptr) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1b484e855_possibleRefExpr(_self_, _151915_e);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1b847616a:;
			++it;
			goto _iter_begin_1b847616a;
		}
		_iter_end_1b847616a:;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1b4856692_appendToSlice(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d6b2c_AppendToSliceExprModel> _153334_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b484e855_possibleRefExpr(_self_, (*(_153334_m))._field_Dest);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1b484e855_possibleRefExpr(_self_, (*_153334_m.alloc)._field_Slice);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1b485694a_appendCall(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd55e4_BuiltinAppendCallExprModel> _154131_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1b484e855_possibleRefExpr(_self_, (*(_154131_m))._field_Dest);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1b484e855_possibleRefExpr(_self_, (*_154131_m.alloc)._field_Elements);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b4856c03_sizeof(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd6b67_SizeofExprModel> _154927_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1b484e855_possibleRefExpr(_self_, (*(_154927_m))._field_Expr);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b4856eab_alignof(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd731b_AlignofExprModel> _155528_m) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1b484e855_possibleRefExpr(_self_, (*(_155528_m))._field_Expr);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1b4857264_runeLit(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd7508_RuneExprModel> _156124_m) {
	if (((*(_156124_m))._field_Code <= 127LL)) {
		_20d8d4d7a_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _15648_b = _1b485a267_sbtoa(static_cast<jule::U8>((*_156124_m.alloc)._field_Code));;
		if (_15648_b.equal("'", 1)) {
			_20d8d4d7a_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
		};
		_20d8d4ac2_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15648_b);
		_20d8d4d7a_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1b485b015_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_156124_m.alloc)._field_Code));
}



inline void _1b485751c_structureStatic(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd3537_StructStaticIdentExprModel> _157536_m) {
	static__1b4861724_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_157536_m))._field_Method));
}



inline void _1b48577c5_backendEmit(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd787c_BackendEmitExprModel> _157932_m) {
	if (((*(_157932_m))._field_Exprs.len() == 0LL)) {
		_1b491da01_write((*(_self_))._field_oc, (*_157932_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _15843_n = _20d8d584d_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _15857_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_157932_m.alloc)._field_Exprs.len(), (*_157932_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_157932_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84863ab:;
		if (it != expr_end) {
			jule::I64 _15868_i = it - expr->begin();
			jule::Any _158615_expr = *it;
			{
				_1b484e855_possibleRefExpr(_self_, _158615_expr);
				jule::Slice<jule::U8> _15888_buf = _20d8d5d6a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15857_args[_15868_i]=jule::Any(__jule_bytesToStr(_15888_buf.slice(_15843_n)), &__jule_any_type5);
				{
					_20d8d6123_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15888_buf.slice(0LL, _15843_n));
				};
			}
			_iter_next_1b84863ab:;
			++it;
			_15868_i++;
			goto _iter_begin_1b84863ab;
		}
		_iter_end_1b84863ab:;
	};
	_1b491da01_write((*(_self_))._field_oc, _1b2e90c12_Format((*_157932_m.alloc)._field_Code, _15857_args));
}



inline void _1b4857a7d_free(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2bd7b79_FreeExprModel> _159525_m) {
	_1b484e855_possibleRefExpr(_self_, (*(_159525_m))._field_Expr);
	if (_20dbc28c6_RC) {
		_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1b4857d36_strComp(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d5664_StrCompExprModel> _160428_m) {
	if ((*(_160428_m))._field_NotEq) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16083_s = _1b2bc3e40_ReadStr((*_160428_m.alloc)._field_Right.ptr());;
	_1b484e855_possibleRefExpr(_self_, (*_160428_m.alloc)._field_Left);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1b485a883_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16083_s);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_16083_s.len()));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_160428_m.alloc)._field_NotEq) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1b48580de_emptyCompare(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d4d6c_EmptyCompareExprModel> _162033_m) {
	if ((*(_162033_m))._field_Neg) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b484e855_possibleRefExpr(_self_, (*_162033_m.alloc)._field_Expr);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1b4858397_unsafeDeref(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d7303_UnsafeDerefExprModel> _162932_m) {
	{
		
		if ((_1b2db4064_Sptr((*((*((*(_162932_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8494e14:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1b484e855_possibleRefExpr(_self_, (*(*((*(_162932_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1b8494a4b:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1636:4"));;
			}
		}
		_match_end_1b849493b:;
	};
}



inline void _1b4858650_unsafeCasting(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b46d7600_UnsafeCastingExprModel> _164034_m) {
	{
		
		if (_1b386ad8e_IsAny(&((*((*(_164034_m))._field_Base))._field_ExprKind))) {
			_case_begin_1b8497ae8:;
			{
				_1b484e855_possibleRefExpr(_self_, (*((*(*(_164034_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1b2db4064_Sptr((*(*(_164034_m))._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1b2db4064_Sptr((*((*(_164034_m))._field_Base))._field_Kind)))._field_Elem);
				} else {
					_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1b4933241_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_164034_m))._field_Base.alloc)._field_Kind);
				};
				_1b491da01_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1b8497730:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1653:4"));;
			}
		}
		_match_end_1b8497642:;
	};
}



inline void _1b4858908_model(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Any _165726_m) {
	{
		auto &_match_expr{ _165726_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b8498467:;
			{
				_1b491da01_write((*(_self_))._field_oc, _165726_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1b849d4a0:;
			{
				_1b491da01_write((*(_self_))._field_oc, (*(_165726_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b849d516:;
			{
				_1b4933241_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _165726_m.cast_ptr<_1b2db1627_TypeKind>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b849d57c:;
			{
				_1b484b9a6_constant(_self_, _165726_m.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b849d5e3:;
			{
				_1b484d9ca_var(_self_, _165726_m.cast_ptr<_1b2d26ca7_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b849d659:;
			{
				_1b484dc83_structureIns(_self_, _165726_m.cast_ptr<_1b2b119c6_StructIns>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b849d6c0:;
			{
				_1b4853859_funcInsCommon(_self_, _165726_m.cast_ptr<_1b2bdda70_FnIns>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1b849e32a:;
			{
				_1b484cc93_unsafeBinary(_self_, (*(_165726_m.unsafe_cast_ptr<_1b46d5ee4_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b849e391:;
			{
				_1b484d722_binary(_self_, _165726_m.cast_ptr<_1b2bcd620_BinaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b849e407:;
			{
				_1b484e03b_unary(_self_, _165726_m.cast_ptr<_1b2bcd9e9_UnaryExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b849e46d:;
			{
				_1b484e2e4_structureLit(_self_, _165726_m.cast_ptr<_1b2bce3bd_StructLitExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b849e4d4:;
			{
				_1b484e59c_allocStructure(_self_, _165726_m.cast_ptr<_1b2bce6ba_AllocStructLitExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b849e54a:;
			{
				_1b485002b_casting(_self_, _165726_m.cast_ptr<_1b2bcec4d_CastingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b849e5b1:;
			{
				_1b4851b54_funcCall(_self_, _165726_m.cast_ptr<_1b2bd0600_FnCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b849e627:;
			{
				_1b4851e0c_slice(_self_, _165726_m.cast_ptr<_1b2bd09c9_SliceExprModel>(&__jule_any_type79));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b849e69e:;
			{
				_1b48535a1_array(_self_, _165726_m.cast_ptr<_1b2bd3911_ArrayExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1b849e726:;
			{
				_1b485246d_unsafeIndexing(_self_, _165726_m.cast_ptr<_1b46d6379_UnsafeIndexingExprModel>(&__jule_any_type134));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b849e79d:;
			{
				_1b48521b5_indexing(_self_, _165726_m.cast_ptr<_1b2bd0e80_IndexingExprModel>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b849e825:;
			{
				_1b4852726_anonFunc(_self_, _165726_m.cast_ptr<_1b2bd1436_AnonFnExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b849e89c:;
			{
				_1b48529ce_mapExpr(_self_, _165726_m.cast_ptr<_1b2bd1bd9_MapExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b849e924:;
			{
				_1b4852c87_slicing(_self_, _165726_m.cast_ptr<_1b2bd226c_SlicingExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b849e99b:;
			{
				_1b4853040_traitSub(_self_, _165726_m.cast_ptr<_1b2bd2800_TraitSubIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b849ea23:;
			{
				_1b48532e8_structureSub(_self_, _165726_m.cast_ptr<_1b2bd3191_StructSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b849ea9a:;
			{
				_1b4853dba_tuple(_self_, _165726_m.cast_ptr<_1b2bd3c0d_TupleExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b849eb22:;
			{
				_1b485442b_outCall(_self_, _165726_m.cast_ptr<_1b2bd40d7_BuiltinOutCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b849eb99:;
			{
				_1b48546d4_outlnCall(_self_, _165726_m.cast_ptr<_1b2bd44b1_BuiltinOutlnCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b849ec21:;
			{
				_1b4854173_newCall(_self_, _165726_m.cast_ptr<_1b2bd488a_BuiltinNewCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b849ec98:;
			{
				_1b485498c_panicCall(_self_, _165726_m.cast_ptr<_1b2bd4c64_BuiltinPanicCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b849ed20:;
			{
				_1b4854c45_errorCall(_self_, _165726_m.cast_ptr<_1b2bd686a_BuiltinErrorCallExprModel>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b849ed97:;
			{
				_1b4856131_makeCall(_self_, _165726_m.cast_ptr<_1b2bd521a_BuiltinMakeCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b849ee1e:;
			{
				_1b485694a_appendCall(_self_, _165726_m.cast_ptr<_1b2bd55e4_BuiltinAppendCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b849ee96:;
			{
				_1b4854eed_copyCall(_self_, _165726_m.cast_ptr<_1b2bd6491_BuiltinCopyCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b84a001d:;
			{
				_1b48552a6_lenCall(_self_, _165726_m.cast_ptr<_1b2bd58e1_BuiltinLenCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b84a0095:;
			{
				_1b485555e_capCall(_self_, _165726_m.cast_ptr<_1b2bd5bdd_BuiltinCapCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b84a011c:;
			{
				_1b4855817_deleteCall(_self_, _165726_m.cast_ptr<_1b2bd60b7_BuiltinDeleteCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b84a0194:;
			{
				_1b4856c03_sizeof(_self_, _165726_m.cast_ptr<_1b2bd6b67_SizeofExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b84a021b:;
			{
				_1b4856eab_alignof(_self_, _165726_m.cast_ptr<_1b2bd731b_AlignofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b84a0293:;
			{
				_1b4857264_runeLit(_self_, _165726_m.cast_ptr<_1b2bd7508_RuneExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b84a031a:;
			{
				_1b485751c_structureStatic(_self_, _165726_m.cast_ptr<_1b2bd3537_StructStaticIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b84a0392:;
			{
				_1b48577c5_backendEmit(_self_, _165726_m.cast_ptr<_1b2bd787c_BackendEmitExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b84a0419:;
			{
				_1b4857a7d_free(_self_, _165726_m.cast_ptr<_1b2bd7b79_FreeExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1b84a0491:;
			{
				_1b4857d36_strComp(_self_, _165726_m.cast_ptr<_1b46d5664_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1b84a0518:;
			{
				_1b484d9ca_var(_self_, (*(_165726_m.unsafe_cast_ptr<_1b46d51e1_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1b84a0590:;
			{
				_1b48580de_emptyCompare(_self_, _165726_m.cast_ptr<_1b46d4d6c_EmptyCompareExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b84a0617:;
			{
				_1b4858397_unsafeDeref(_self_, _165726_m.cast_ptr<_1b46d7303_UnsafeDerefExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1b84a068e:;
			{
				_1b4858650_unsafeCasting(_self_, _165726_m.cast_ptr<_1b46d7600_UnsafeCastingExprModel>(&__jule_any_type133));
			}
		}
		else {
			_case_begin_1b849d439:;
			{
				_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1b849d34b:;
	};
}



inline jule::Bool _1b4858c49_handleFieldByDefault(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b10e26_FieldIns>* _175742_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_175742_f))))._field_Default != nullptr)) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1b48626ae_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_175742_f))))._field_Decl));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1b484e855_possibleRefExpr(_self_, (*(*((*(_175742_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1b493a0e4_ableToInit(&((*((*(_175742_f))))._field_Kind))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1b48626ae_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_175742_f))))._field_Decl));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1b4859ac4_initExpr(_self_, (*((*(_175742_f))))._field_Kind);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b4859002_initStructLit(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _177835_s) {
	if ((*((*((*(_177835_s))))._field_Decl))._field_Binded) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1b49314e7_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_177835_s)));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1b49314e7_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_177835_s)));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _17877_inited = false;;
	{
		auto expr = &((*((*(_177835_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84c2617:;
		if (it != expr_end) {
			jule::Ptr<_1b2b10e26_FieldIns> _178815_f = *it;
			{
				if (_17877_inited) {
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_17877_inited=_1b4858c49_handleFieldByDefault(_self_, &(_178815_f));
			}
			_iter_next_1b84c2617:;
			++it;
			goto _iter_begin_1b84c2617;
		}
		_iter_end_1b84c2617:;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1b48592aa_fillCollectionByDefault(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2db1627_TypeKind>* _180045_elem) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1b4859ac4_initExpr(_self_, (*(_180045_elem)));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1b4859563_initCollection(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2db1627_TypeKind>* _181536_elem) {
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1b48592aa_fillCollectionByDefault(_self_, _181536_elem);
}



inline void _1b485981b_initArray(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2dc1060_Arr>* _182931_arr) {
	if (((*((*(_182931_arr))))._field_N == 0LL)) {
		_1b493185a_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_182931_arr)));
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1b493185a_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_182931_arr)));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1b4859563_initCollection(_self_, &((*((*(_182931_arr))))._field_Elem));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1b4859ac4_initExpr(jule::Ptr<_1b484a1e1_exprCoder> _self_, jule::Ptr<_1b2db1627_TypeKind> _184329_t) {
	if (_1b2db352a_NilCompatible(_184329_t.ptr())) {
		if ((_1b2db586d_Map(_184329_t) != nullptr)) {
			_1b4933241_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _184329_t);
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1b2db42ea_Ptr(_184329_t) != nullptr)) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1b4933241_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _184329_t);
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1b2dbe833_Tuple> _18587_tup = _1b2db5b04_Tup(_184329_t);;
	if ((_18587_tup != nullptr)) {
		_1b4937a1a_tup((*(*((*(_self_))._field_oc))._field_tc.alloc)._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18587_tup);
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_18587_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b84e0b41:;
			if (it != expr_end) {
				jule::I64 _18629_i = it - expr->begin();
				jule::Ptr<_1b2db1627_TypeKind> _186216_tt = *it;
				{
					if ((!(_1b493a3be_shouldInitialized(&(_186216_tt))))) {
						goto _iter_next_1b84e0b41;
					};
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1b491da01_write((*(_self_))._field_oc, _1cab29113_Itoa(_18629_i));
					_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1b4859ac4_initExpr(_self_, _186216_tt);
					if ((((*_18587_tup.alloc)._field_Types.len() - _18629_i) > 1LL)) {
						_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1b84e0b41:;
				++it;
				_18629_i++;
				goto _iter_begin_1b84e0b41;
			}
			_iter_end_1b84e0b41:;
		};
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1b2be887c_Enum> _18777_enm = _1b2db4581_Enum(_184329_t);;
	if ((_18777_enm != nullptr)) {
		_1b4858908_model(_self_, (*((*((*((*_18777_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1b2db9740_Prim> _18823_prim = _1b2db3ccd_Prim(_184329_t);;
	if ((_18823_prim != nullptr)) {
		if (_1b2c7572d_IsNum((*_18823_prim.alloc)._field_Kind)) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1b2dbc974_IsBool(_18823_prim)) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1b2dbcc0a_IsStr(_18823_prim)) {
			_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1b2db4a9d_Arr(_184329_t) != nullptr)) {
		jule::Ptr<_1b2dc1060_Arr> _18948_arr = _1b2db4a9d_Arr(_184329_t);;
		_1b485981b_initArray(_self_, &(_18948_arr));
		return;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _18987_s = _1b2db5351_Struct(_184329_t);;
	if ((_18987_s != nullptr)) {
		_1b4859002_initStructLit(_self_, &(_18987_s));
		return;;
	};
	_1b4933241_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _184329_t);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1b485c6ba_TestCoder_eq(_1b485c6ba_TestCoder *_self_, _1b485c6ba_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1b485c6ba_TestCoder> static__1b485cb71_New(jule::Ptr<_1b491d2d6_ObjectCoder>* _2021_oc) {
	return jule::new_ptr<_1b485c6ba_TestCoder>(_1b485c6ba_TestCoder{._field_t=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_oc=(*(_2021_oc))});;
}



inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b485ce07_findTestingPackage(jule::Ptr<_1b485c6ba_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84eb5db:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _2715_imp = *it;
			{
				if ((*(_2715_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _2715_imp;;
				};
			}
			_iter_next_1b84eb5db:;
			++it;
			goto _iter_begin_1b84eb5db;
		}
		_iter_end_1b84eb5db:;
	};
	return nullptr;;
}



inline void _1b485d1b0_appendTest(jule::Ptr<_1b485c6ba_TestCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _3531_f) {
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b485d8ec_callTmReset(_self_);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1b485a883_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_3531_f))._field_Decl))._field_Ident);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1b491e3a3_indent((*(_self_))._field_oc);
	static__1b4861724_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3531_f));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1b485d468_appendPackageTests(jule::Ptr<_1b485c6ba_TestCoder> _self_, jule::Ptr<_1b2cd7691_Package>* _5040_p) {
	{
		auto expr = &((*((*(_5040_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8502db7:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _5115_file = *it;
			{
				{
					auto expr = &((*(_5115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8503846:;
					if (it != expr_end) {
						jule::Ptr<_1b2bda9b2_Fn> _5216_f = *it;
						{
							if (_1b386cdb3_HasDirective(&((*(_5216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1b485d1b0_appendTest(_self_, (*_5216_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1b8503846:;
						++it;
						goto _iter_begin_1b8503846;
					}
					_iter_end_1b8503846:;
				};
			}
			_iter_next_1b8502db7:;
			++it;
			goto _iter_begin_1b8502db7;
		}
		_iter_end_1b8502db7:;
	};
}



inline jule::Bool _1b485d6ee_readyTestingPackage(jule::Ptr<_1b485c6ba_TestCoder> _self_) {
	jule::Ptr<_1b2cd4e1e_ImportInfo> _617_p = _1b485ce07_findTestingPackage(_self_);;
	if ((_617_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1b2cd612e_FindStruct(_617_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1b2b12a71_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1b2b12a71_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1b2b12a71_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1b485d8ec_callTmReset(jule::Ptr<_1b485c6ba_TestCoder> _self_) {
	static__1b4861438_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1b485daea_callTmFailed(jule::Ptr<_1b485c6ba_TestCoder> _self_) {
	static__1b4861438_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1b485dce8_callTmSkipped(jule::Ptr<_1b485c6ba_TestCoder> _self_) {
	static__1b4861438_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1b485dee6_Serialize(jule::Ptr<_1b485c6ba_TestCoder> _self_) {
	_1b492a59b_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1b4929d3c_end((*(_self_))._field_oc);
	});;
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	if ((!(_1b485d6ee_readyTestingPackage(_self_)))) {
		_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1b491e1a5_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_20d8ca601_Builder _1117_tb = static__20d8cb1c3_New(40LL);;
	_1b49314e7_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1117_tb), (*_self_.alloc)._field_t);
	_1b492e43a_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _20d8d5d6a_Buf(&_1117_tb));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1b491dca9_writeBytes((*(_self_))._field_oc, _20d8d5d6a_Buf(&_1117_tb));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1b491dea7_addIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1b485daea_callTmFailed(_self_);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1b485dce8_callTmSkipped(_self_);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1b485d468_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1b491e1a5_doneIndent((*(_self_))._field_oc);
	_1b491e3a3_indent((*(_self_))._field_oc);
	_1b491da01_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}








inline jule::Bool _1b4860349_identCoder_eq(_1b4860349_identCoder *_self_, _1b4860349_identCoder _other_) { return true; }

inline void static__1b4860855_writeIdentTo(_20d8ca601_Builder* _2630_buf, jule::Str* _2654_ident) {
	{
		auto expr = _2654_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85249cc:;
		if (it != expr_end) {
			jule::U8 *_2710_b = it;
			{
				if (((*(_2710_b)) >= 128LLU)) {
					goto _julec_label_1b8524d51;
				};
			}
			_iter_next_1b85249cc:;
			++it;
			goto _iter_begin_1b85249cc;
		}
		_iter_end_1b85249cc:;
	};
	_20d8d4ac2_WriteStr(_2630_buf, (*(_2654_ident)));
	return;;
	_julec_label_1b8524d51:;
	{
		auto expr = _2654_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _3710_r;
		_iter_begin_1b852588a:;
		__jule_runeStep(it, end - it, &_3710_r, &len);
		if (it < end) {
			{
				if ((_3710_r < 128LL)) {
					_20d8d4d7a_WriteByte(_2630_buf, static_cast<jule::U8>(_3710_r));
					goto _iter_next_1b852588a;
				};
				_20d8d4ac2_WriteStr(_2630_buf, _1cab28d49_FmtInt(static_cast<jule::I64>(_3710_r), 15LL));
			}
			_iter_next_1b852588a:;
			it += len;
			goto _iter_begin_1b852588a;
		}
	};
}



inline void static__1b4860beb_toOut(_20d8ca601_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr) {
	_20d8d4d7a_WriteByte(_5423_buf, '_');
	if ((_5458_addr != 0LLU)) {
		_20d8d4ac2_WriteStr(_5423_buf, _1cab28981_FmtUint(static_cast<jule::U64>(_5458_addr), 15LL));
		_20d8d4d7a_WriteByte(_5423_buf, '_');
	};
	static__1b4860855_writeIdentTo(_5423_buf, &(_5446_ident));
}



inline void static__1b486114c_toLocal(_20d8ca601_Builder* _6925_buf, jule::I64 _6948_row, jule::I64 _6958_col, jule::Str* _6969_ident) {
	_20d8d4d7a_WriteByte(_6925_buf, '_');
	_20d8d4ac2_WriteStr(_6925_buf, _1cab29113_Itoa(_6948_row));
	_20d8d4ac2_WriteStr(_6925_buf, _1cab29113_Itoa(_6958_col));
	_20d8d4d7a_WriteByte(_6925_buf, '_');
	static__1b4860855_writeIdentTo(_6925_buf, _6969_ident);
}



inline void static__1b4861438_func(_20d8ca601_Builder* _7722_buf, jule::Ptr<_1b2bda9b2_Fn>* _7750_f) {
	{
		
		if ((*((*(_7750_f))))._field_Binded) {
			_case_begin_1b8529cbd:;
			{
				_20d8d4ac2_WriteStr(_7722_buf, (*((*(_7750_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_7750_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1b8529d67:;
			{
				_20d8d4ac2_WriteStr(_7722_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1b2bdb1ee_IsMethod((*(_7750_f)).ptr())) {
			_case_begin_1b8529dcd:;
			{
				if ((*((*(_7750_f))))._field_Statically) {
					_20d8d4ac2_WriteStr(_7722_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1b8529b58:;
	};
	jule::Ptr<_1b2adc809_Directive> _903_export = _1b386c9ea_FindDirective(&((*((*(_7750_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_903_export != nullptr)) {
		_20d8d4ac2_WriteStr(_7722_buf, (*((*_903_export.alloc)._field_Args[0LL]))._field_Kind);
		return;;
	};
	static__1b4860beb_toOut(_7722_buf, (*((*(_7750_f))))._field_Ident, static_cast<jule::Uintptr>((*(_7750_f))));
}



inline void static__1b4861724_funcIns(_20d8ca601_Builder* _9825_buf, jule::Ptr<_1b2bdda70_FnIns>* _9853_f) {
	if (_1b2be0038_IsBuiltin((*(_9853_f)).ptr())) {
		_20d8d4ac2_WriteStr(_9825_buf, jule::Str::lit("jule::", 6));
		_20d8d4ac2_WriteStr(_9825_buf, (*((*((*(_9853_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_9853_f))))._field_Decl.alloc)._field_Binded || ((*((*(_9853_f))))._field_Generics.len() == 0LL))) {
		static__1b4861438_func(_9825_buf, &((*((*(_9853_f))))._field_Decl));
		return;;
	};
	static__1b4860beb_toOut(_9825_buf, (*(*((*(_9853_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_9853_f))));
}



inline void static__1b4861a10_traitDecl(_20d8ca601_Builder* _11327_buf, jule::Ptr<_1b2be61c6_Trait> _11350_t) {
	static__1b4860beb_toOut(_11327_buf, (*(_11350_t))._field_Ident, static_cast<jule::Uintptr>(_11350_t));
}



inline void static__1b4861ceb_param(_20d8ca601_Builder* _11723_buf, jule::Ptr<_1b2bd8edd_Param>* _11747_p) {
	if ((_1b2acab6b_IsAnonIdent((*((*(_11747_p))))._field_Ident) || _1b2aca8a2_IsIgnoreIdent((*((*(_11747_p))))._field_Ident))) {
		return;;
	};
	if (_1b2bd963c_IsSelf((*(_11747_p)).ptr())) {
		_20d8d4ac2_WriteStr(_11723_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_11747_p))))._field_Token == nullptr)) {
		static__1b486114c_toLocal(_11723_buf, 0LL, 0LL, &((*((*(_11747_p))))._field_Ident));
		return;;
	};
	static__1b486114c_toLocal(_11723_buf, (*((*((*(_11747_p))))._field_Token))._field_Row, (*((*((*(_11747_p))))._field_Token))._field_Column, &((*((*(_11747_p))))._field_Ident));
}



inline void static__1b48620d7_structure(_20d8ca601_Builder* _13227_buf, jule::Ptr<_1b2b0db6b_Struct>* _13251_s) {
	if ((*((*(_13251_s))))._field_Binded) {
		if ((!(_1b386cdb3_HasDirective(&((*((*(_13251_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			_20d8d4ac2_WriteStr(_13227_buf, jule::Str::lit("struct ", 7));
		};
		_20d8d4ac2_WriteStr(_13227_buf, (*((*(_13251_s))))._field_Ident);
		return;;
	};
	static__1b4860beb_toOut(_13227_buf, (*((*(_13251_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13251_s))));
}



inline void static__1b48623c3_structureIns(_20d8ca601_Builder* _14330_buf, jule::Ptr<_1b2b119c6_StructIns>* _14354_s) {
	if (((*((*((*(_14354_s))))._field_Decl))._field_Binded || ((*((*(_14354_s))))._field_Generics.len() == 0LL))) {
		static__1b48620d7_structure(_14330_buf, &((*((*(_14354_s))))._field_Decl));
		return;;
	};
	static__1b4860beb_toOut(_14330_buf, (*(*((*(_14354_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14354_s))));
}



inline void static__1b48626ae_field(_20d8ca601_Builder* _15123_buf, jule::Ptr<_1b2b0ac78_Field>* _15147_f) {
	if ((*((*((*(_15147_f))))._field_Owner))._field_Binded) {
		_20d8d4ac2_WriteStr(_15123_buf, (*((*(_15147_f))))._field_Ident);
		return;;
	};
	_20d8d4ac2_WriteStr(_15123_buf, jule::Str::lit("_field_", 7));
	static__1b4860855_writeIdentTo(_15123_buf, &((*((*(_15147_f))))._field_Ident));
}



inline void static__1b486299a_var(_20d8ca601_Builder* _16121_buf, jule::Ptr<_1b2d26ca7_Var> _16148_v) {
	{
		
		if ((*(_16148_v))._field_Binded) {
			_case_begin_1b853b8d4:;
			{
				_20d8d4ac2_WriteStr(_16121_buf, (*_16148_v.alloc)._field_Ident);
			}
		}
		else if (((*(_16148_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1b853ab03:;
			{
				_20d8d4ac2_WriteStr(_16121_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if (((*(_16148_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1b8539b8a:;
			{
				_20d8d4ac2_WriteStr(_16121_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16148_v))._field_RetOrder == -1LL)) {
			_case_begin_1b8539c01:;
			{
				_20d8d4ac2_WriteStr(_16121_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16148_v))._field_RetOrder >= 0LL)) {
			_case_begin_1b8539c67:;
			{
				_20d8d4ac2_WriteStr(_16121_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_20d8d4ac2_WriteStr(_16121_buf, _1cab29113_Itoa((*_16148_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16148_v))._field_Scope != nullptr)) {
			_case_begin_1b8539ccd:;
			{
				static__1b486114c_toLocal(_16121_buf, (*((*_16148_v.alloc)._field_Token))._field_Row, (*(*(_16148_v))._field_Token.alloc)._field_Column, &((*_16148_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1b8539b24:;
			{
				jule::Ptr<_1b2adc809_Directive> _1794_export = _1b386c9ea_FindDirective(&((*(_16148_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1794_export != nullptr)) {
					_20d8d4ac2_WriteStr(_16121_buf, (*((*_1794_export.alloc)._field_Args[0LL]))._field_Kind);
					return;;
				};
				static__1b4860beb_toOut(_16121_buf, (*_16148_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_16148_v));
			}
		}
		_match_end_1b8539a14:;
	};
}



inline void static__1b4862c86_iterBegin(_20d8ca601_Builder* _18827_buf, jule::Uintptr _18850_it) {
	_20d8d4ac2_WriteStr(_18827_buf, jule::Str::lit("_iter_begin_", 12));
	_20d8d4ac2_WriteStr(_18827_buf, _1cab28981_FmtUint(static_cast<jule::U64>(_18850_it), 15LL));
}



inline void static__1b4863072_iterEnd(_20d8ca601_Builder* _19325_buf, jule::Uintptr _19348_it) {
	_20d8d4ac2_WriteStr(_19325_buf, jule::Str::lit("_iter_end_", 10));
	_20d8d4ac2_WriteStr(_19325_buf, _1cab28981_FmtUint(static_cast<jule::U64>(_19348_it), 15LL));
}



inline void static__1b486335d_iterNext(_20d8ca601_Builder* _19826_buf, jule::Uintptr _19849_it) {
	_20d8d4ac2_WriteStr(_19826_buf, jule::Str::lit("_iter_next_", 11));
	_20d8d4ac2_WriteStr(_19826_buf, _1cab28981_FmtUint(static_cast<jule::U64>(_19849_it), 15LL));
}



inline void static__1b4863649_label(_20d8ca601_Builder* _20323_buf, jule::Uintptr _20346_u) {
	_20d8d4ac2_WriteStr(_20323_buf, jule::Str::lit("_julec_label_", 13));
	_20d8d4ac2_WriteStr(_20323_buf, _1cab28981_FmtUint(static_cast<jule::U64>(_20346_u), 15LL));
}



inline void static__1b4863935_matchEnd(_20d8ca601_Builder* _20826_buf, jule::Uintptr _20849_m) {
	_20d8d4ac2_WriteStr(_20826_buf, jule::Str::lit("_match_end_", 11));
	_20d8d4ac2_WriteStr(_20826_buf, _1cab28981_FmtUint(static_cast<jule::U64>(_20849_m), 15LL));
}



inline void static__1b4863c21_caseBegin(_20d8ca601_Builder* _21327_buf, jule::Uintptr _21350_c) {
	_20d8d4ac2_WriteStr(_21327_buf, jule::Str::lit("_case_begin_", 12));
	_20d8d4ac2_WriteStr(_21327_buf, _1cab28981_FmtUint(static_cast<jule::U64>(_21350_c), 15LL));
}








inline jule::Bool _1b491aed7_SerializationInfo_eq(_1b491aed7_SerializationInfo *_self_, _1b491aed7_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1b491b405_traitCast_eq(_1b491b405_traitCast *_self_, _1b491b405_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1b491b7ce_anonHash_eq(_1b491b7ce_anonHash *_self_, _1b491b7ce_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}






inline jule::Bool _1b491bb53_metadata_eq(_1b491bb53_metadata *_self_, _1b491bb53_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_1b491d2d6_ObjectCoder> static__1b491d748_New(jule::Ptr<_1b3865075_IR>* _11321_ir, _1b491aed7_SerializationInfo _11335_info) {
	jule::Ptr<_1b491d2d6_ObjectCoder> _1147_oc = jule::new_ptr<_1b491d2d6_ObjectCoder>(_1b491d2d6_ObjectCoder{._field_Buf=_20d8ca601_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_20d8ca601_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_20d8ca601_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_20d8ca601_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_20d8ca601_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_20d8ca601_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_11321_ir)), ._field_info=_11335_info, ._field_anons=jule::Slice<jule::Ptr<_1b491b7ce_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1b7ed217c_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr), ._field_traitCastMap=jule::Slice<_1b491b405_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_1b2bdda70_FnIns>>(nullptr), ._field_traitMetMap=static__1b802cae0_make(), ._field_ec=jule::Ptr<_1b484a1e1_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1b4839202_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1b492d03d_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_1b491bb53_metadata{._field_concurrent=false}});;
	(*(_1147_oc))._field_ec=static__1b484a5dc_new(&(_1147_oc));
	(*_1147_oc.alloc)._field_sc=static__1b48398ea_new(&(_1147_oc));
	(*_1147_oc.alloc)._field_tc=static__1b492d58d_new(&(_1147_oc));
	return _1147_oc;;
}



inline void _1b491da01_write(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Str _12622_s) {
	_20d8d4ac2_WriteStr(&(*(_self_))._field_Buf, _12622_s);
}



inline void _1b491dca9_writeBytes(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Slice<jule::U8> _13027_b) {
	_20d8d4819_Write(&(*(_self_))._field_Buf, _13027_b);
}



inline void _1b491dea7_addIndent(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1b491e1a5_doneIndent(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1b491e3a3_indent(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_20d8d4819_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1b491e6e4_findAnyType(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2db1627_TypeKind>* _14933_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8551465:;
		if (it != expr_end) {
			jule::I64 _1508_i = it - expr->begin();
			jule::Ptr<_1b2db1627_TypeKind> _15015_at = *it;
			{
				if (_1b2db1d64_Equal(_15015_at, (*(_14933_t)))) {
					return _1508_i;;
				};
			}
			_iter_next_1b8551465:;
			++it;
			_1508_i++;
			goto _iter_begin_1b8551465;
		}
		_iter_end_1b8551465:;
	};
	return -1LL;;
}



inline jule::I64 _1b491ea35_pushCoSpawn(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _15832_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8552026:;
		if (it != expr_end) {
			jule::I64 _1597_i = it - expr->begin();
			jule::Ptr<_1b2bdda70_FnIns> _15910_sf = *it;
			{
				if (((*(_15910_sf))._field_Params.len() == (*(_15832_f))._field_Params.len())) {
					{
						auto expr = &((*_15910_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b8553a50:;
						if (it != expr_end) {
							jule::I64 _1619_j = it - expr->begin();
							jule::Ptr<_1b2bdc91a_ParamIns> *_16112_sp = it;
							{
								if ((!(_1b2db1d64_Equal((*((*(_16112_sp))))._field_Kind, (*((*(_15910_sf))._field_Params[_1619_j]))._field_Kind)))) {
									goto _iter_end_1b8553a50;
								};
							}
							_iter_next_1b8553a50:;
							++it;
							_1619_j++;
							goto _iter_begin_1b8553a50;
						}
						_iter_end_1b8553a50:;
					};
					return _1597_i;;
				};
			}
			_iter_next_1b8552026:;
			++it;
			_1597_i++;
			goto _iter_begin_1b8552026;
		}
		_iter_end_1b8552026:;
	};
	jule::I64 _1693_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1703_is = _1cab29113_Itoa(_1693_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2bdda70_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15832_f; __jule_collection; }));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1703_is);
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_1b4932dcd_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _15832_f);
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
	{
		auto expr = &((*_15832_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8558d52:;
		if (it != expr_end) {
			jule::I64 _1868_j = it - expr->begin();
			jule::Ptr<_1b2bdc91a_ParamIns> _18615_p = *it;
			{
				_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_1b4933241_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_18615_p))._field_Kind);
				_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1cab29113_Itoa(_1868_j));
				_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
				_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
			}
			_iter_next_1b8558d52:;
			++it;
			_1868_j++;
			goto _iter_begin_1b8558d52;
		}
		_iter_end_1b8558d52:;
	};
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
	{
		
		if ((_20dbba902_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1b855de78:;
			{
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
			}
		}
		else if (_20daaa3e6_IsUnix(_20dbba902_Os)) {
			_case_begin_1b855e055:;
			{
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
			}
		}
		else {
			_case_begin_1b855bb79:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:205:4"));;
			}
		}
		_match_end_1b855d8b2:;
	};
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1703_is);
	;
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1703_is);
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1703_is);
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
	{
		auto expr = &((*_15832_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8566942:;
		if (it != expr_end) {
			jule::I64 _2317_j = it - expr->begin();
			{
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1cab29113_Itoa(_2317_j));
				if ((((*_15832_f.alloc)._field_Params.len() - _2317_j) > 1LL)) {
					_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b8566942:;
			++it;
			_2317_j++;
			goto _iter_begin_1b8566942;
		}
		_iter_end_1b8566942:;
	};
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
	{
		
		if ((_20dbba902_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1b856b00c:;
			{
				_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
			}
		}
		else if (_20daaa3e6_IsUnix(_20dbba902_Os)) {
			_case_begin_1b856b0d9:;
			{
				_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
			}
		}
		else {
			_case_begin_1b85672b1:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:254:4"));;
			}
		}
		_match_end_1b856ab44:;
	};
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
	return _1693_i;;
}



inline jule::I64 _1b491ed76_pushDealloc(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2db1627_TypeKind> _26132_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b856d570:;
		if (it != expr_end) {
			jule::I64 _2627_i = it - expr->begin();
			jule::Ptr<_1b2db1627_TypeKind> _26210_dt = *it;
			{
				if (_1b2db1d64_Equal(_26210_dt, _26132_t)) {
					return _2627_i;;
				};
			}
			_iter_next_1b856d570:;
			++it;
			_2627_i++;
			goto _iter_begin_1b856d570;
		}
		_iter_end_1b856d570:;
	};
	jule::I64 _2673_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _26132_t; __jule_collection; }));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_deallocObj, _1cab29113_Itoa(_2673_i));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1b4933241_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _26132_t);
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _2673_i;;
}



inline jule::Str _1b49201b7_pushAnonFn(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel>* _27732_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_27732_m))))._field_Func))._field_CalledCo);
	jule::Bool _2803_closure = _1b386b1d0_IsClosure(_27732_m);;
	if (_2803_closure) {
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I64 _2844_l = _20d8d584d_Len(&(*_self_.alloc)._field_anonObj);;
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anonObj, _1cab28981_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_27732_m))))._field_Func)), 15LL));
		__jule_func_result=__jule_bytesToStr(_20d8d5d6a_Buf(&(*_self_.alloc)._field_anonObj).slice(_2844_l));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_27732_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8575b2c:;
			if (it != expr_end) {
				jule::Ptr<_1b2d26ca7_Var> _28916_v = *it;
				{
					_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1b4933241_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_28916_v))._field_Kind))._field_Kind);
					_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_28916_v.alloc)._field_Reference) {
						_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1b486299a_var(&((*_self_.alloc)._field_anonObj), _28916_v);
					_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1b8575b2c:;
				++it;
				goto _iter_begin_1b8575b2c;
			}
			_iter_end_1b8575b2c:;
		};
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1cab28981_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_27732_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b491b7ce_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1b491b7ce_anonHash>(_1b491b7ce_anonHash{._field_expr=(*(_27732_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1b4926058_anonFuncInsDecl(_self_, _27732_m, __jule_func_result);
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1b4920508_pushAnyType(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2db1627_TypeKind> _31932_t) {
	jule::Ptr<_1b2db1627_TypeKind> _3207_orig = _31932_t;;
	if ((_1b2db4581_Enum(_31932_t.ptr()) != nullptr)) {
		_31932_t=(*((*(_1b2db4581_Enum(_31932_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _3247_i = _1b491e6e4_findAnyType(_self_, &(_31932_t));;
	if ((_3247_i != -1LL)) {
		return _3247_i;;
	};
	_3247_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _31932_t; __jule_collection; }));
	jule::Str _3303_si = _1cab29113_Itoa(_3247_i);;
	if ((_1b2db4064_Sptr(_31932_t) != nullptr)) {
		_20d8ca601_Builder _3328_elemKind = static__20d8cb1c3_New(40LL);;
		_1b4933241_kind((*_self_.alloc)._field_tc.ptr(), &(_3328_elemKind), (*(_1b2db4064_Sptr(_31932_t)))._field_Elem);
		jule::I64 _3364_di = _1b491ed76_pushDealloc(_self_, (*(_1b2db4064_Sptr(_31932_t)))._field_Elem);;
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _1cab29113_Itoa(_3364_di));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1b492e43a_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _20d8d5d6a_Buf(&_3328_elemKind));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
	} else {
		_20d8ca601_Builder _3558_kindB = static__20d8cb1c3_New(40LL);;
		_1b4933241_kind((*_self_.alloc)._field_tc.ptr(), &(_3558_kindB), _31932_t);
		jule::Str _3574_kind = _20d8d53b9_Str(&_3558_kindB);;
		jule::I64 _3604_di = _1b491ed76_pushDealloc(_self_, _31932_t);;
		jule::Str _3658_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
		_3658_lmodel+=_3574_kind;
		_3658_lmodel+=jule::Str::lit("*>(", 3);
		jule::Str _3688_rmodel = _3658_lmodel;;
		_3688_rmodel+=jule::Str::lit("other)", 6);
		_3658_lmodel+=jule::Str::lit("alloc)", 6);
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { ", 41));
		if (_1b2db2c77_Comparable(_31932_t)) {
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("return ", 7));
			_1b484c9da__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3658_lmodel), &(_3688_rmodel), &(_31932_t), &(_31932_t), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
		} else {
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_panic((", 14));
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::U8", 8));
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*)\"runtime: comparing uncomparable type \" \"", 43));
			jule::I64 _3839_n = _20d8d584d_Len(&(*_self_.alloc)._field_anyObj);;
			_1b485a553_cstrBytes(&((*_self_.alloc)._field_anyObj), _1b2db1a23_Str(_31932_t));
			_3839_n=(_20d8d584d_Len(&(*_self_.alloc)._field_anyObj) - _3839_n);
			_3839_n+=37LL;
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("\", ", 3));
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _1cab29113_Itoa(_3839_n));
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("); return false; }\n", 19));
		};
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
		jule::Ptr<_1b2bda9b2_Fn> _3968_decl = _1b2ea0d65_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
		jule::Ptr<_1b2bdda70_FnIns> _3978_f = _1b386e524_FindFnGenericInstance(&(_3968_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _3207_orig; __jule_collection; }));;
		static__1b4861724_funcIns(&((*_self_.alloc)._field_anyObj), &(_3978_f));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
		if ((_1b2db42ea_Ptr(_31932_t) == nullptr)) {
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _3574_kind);
		} else {
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _3574_kind);
			_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _1cab29113_Itoa(_3604_di));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_any_type", 21));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, .to_str=__jule_any_type", 28));
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
	};
	return _3247_i;;
}



inline void _1b49207b1_pushResultIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bdda70_FnIns>* _42435_f) {
	jule::Str _4253_s = __jule_bytesToStr(_1b49384ee_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_42435_f))))._field_Result)));;
	jule::Bool _4266_ok;
	_1b7ed2842_lookup((*_self_.alloc)._field_resultMap, _4253_s, nullptr, &(_4266_ok));
	if (_4266_ok) {
		return;;
	};
	(*_1b7ed2aea_set(((*_self_.alloc)._field_resultMap).ptr(), _4253_s))=false;
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_resultDecls, _4253_s);
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1b2db5b04_Tup((*((*(_42435_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b859bcb8:;
		if (it != expr_end) {
			jule::I64 _4348_i = it - expr->begin();
			jule::Ptr<_1b2db1627_TypeKind> _43415_t = *it;
			{
				_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1b4933241_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _43415_t);
				_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_resultDecls, _1cab29113_Itoa(_4348_i));
				_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b859bcb8:;
			++it;
			_4348_i++;
			goto _iter_begin_1b859bcb8;
		}
		_iter_end_1b859bcb8:;
	};
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1b4920a69_pushResult(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bda9b2_Fn>* _44532_f) {
	if ((_1b2bdae68_IsVoid((*(_44532_f)).ptr()) || ((*((*((*(_44532_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _4497_n = (*((*(_44532_f))))._field_Instances.len();;
	if (((*((*(_44532_f))))._field_Generics.len() == 0LL)) {
		_4497_n=1LL;
	};
	{
		auto expr = (*((*(_44532_f))))._field_Instances.slice(0LL, _4497_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b85a1d9a:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdda70_FnIns> _45315_ins = *it;
			{
				_1b49207b1_pushResultIns(_self_, &(_45315_ins));
			}
			_iter_next_1b85a1d9a:;
			++it;
			goto _iter_begin_1b85a1d9a;
		}
		_iter_end_1b85a1d9a:;
	};
}



inline void _1b4920dcc_pushAndWriteMaskMapper(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2be61c6_Trait> _45843_t1, jule::Ptr<_1b2be61c6_Trait> _45865_t2) {
	_20d8ca601_Builder _4597_ident = static__20d8cb1c3_New(32LL);;
	_20d8d4ac2_WriteStr(&_4597_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_20d8d4ac2_WriteStr(&_4597_ident, _1cab28981_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_45865_t2)), 15LL));
	_20d8d4ac2_WriteStr(&_4597_ident, jule::Str::lit("_to_", 4));
	_20d8d4ac2_WriteStr(&_4597_ident, _1cab28981_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_45843_t1)), 15LL));
	_20d8d4819_Write(&(*(_self_))._field_Buf, _20d8d5d6a_Buf(&_4597_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85a4c27:;
		if (it != expr_end) {
			_1b491b405_traitCast _46710_m = *it;
			{
				if (((_46710_m._field_t1 == _45843_t1) && (_46710_m._field_t2 == _45865_t2))) {
					return;;
				};
			}
			_iter_next_1b85a4c27:;
			++it;
			goto _iter_begin_1b85a4c27;
		}
		_iter_end_1b85a4c27:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1b491b405_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b491b405_traitCast{._field_t1=_45843_t1, ._field_t2=_45865_t2}; __jule_collection; }));
	;
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_20d8d4819_Write(&(*_self_.alloc)._field_anyObj, _20d8d5d6a_Buf(&_4597_ident));
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_20d8ca601_Builder _4817_t1Ident = static__20d8cb1c3_New(16LL);;
	_20d8ca601_Builder _4827_t2Ident = static__20d8cb1c3_New(16LL);;
	static__1b4861a10_traitDecl(&(_4817_t1Ident), _45843_t1);
	static__1b4861a10_traitDecl(&(_4827_t2Ident), _45865_t2);
	{
		auto expr = &((*(_45843_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85a5354:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _48615_s1 = *it;
			{
				{
					auto expr = &((*(_45865_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b85a9336:;
					if (it != expr_end) {
						jule::Ptr<_1b2b0db6b_Struct> _48711_s2 = *it;
						{
							if ((_48615_s1 == _48711_s2)) {
								{
									auto expr = &((*(_48615_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b85aa227:;
									if (it != expr_end) {
										jule::Ptr<_1b2b119c6_StructIns> _48918_s1i = *it;
										{
											jule::I64 _4907_i1 = _1b386d8ec_FindTraitTypeOffsetS(_45843_t1, _48918_s1i);;
											jule::I64 _4917_i2 = _1b386d8ec_FindTraitTypeOffsetS(_45865_t2, _48918_s1i);;
											_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_20d8d4819_Write(&(*_self_.alloc)._field_anyObj, _20d8d5d6a_Buf(&_4827_t2Ident));
											_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _1cab29113_Itoa(_4917_i2));
											_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_20d8d4819_Write(&(*_self_.alloc)._field_anyObj, _20d8d5d6a_Buf(&_4817_t1Ident));
											_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, _1cab29113_Itoa(_4907_i1));
											_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1b85aa227:;
										++it;
										goto _iter_begin_1b85aa227;
									}
									_iter_end_1b85aa227:;
								};
							};
						}
						_iter_next_1b85a9336:;
						++it;
						goto _iter_begin_1b85a9336;
					}
					_iter_end_1b85a9336:;
				};
			}
			_iter_next_1b85a5354:;
			++it;
			goto _iter_begin_1b85a5354;
		}
		_iter_end_1b85a5354:;
	};
	_20d8d4ac2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
}



inline void _1b4921185_locInfo(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2ac7eba_Token>* _50925_t) {
	jule::Str *_5104_loc = &((*((*((*(_50925_t))))._field_File))._field_Path);;
	if (_20dbc2ed1_Production) {
		{
			
			if (_20d8b7665_HasPrefix((*(_5104_loc)), _20dbb9d85_PathStdlib)) {
				_case_begin_1b85b0716:;
				{
					_1b485a553_cstrBytes(&((*(_self_))._field_Buf), (*(_5104_loc)).slice((_227d34c61_Dir(_20dbb9d85_PathStdlib).len() + 1LL)));
				}
			}
			else if (_20d8b7665_HasPrefix((*(_5104_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1b85b07e3:;
				{
					_1b485a553_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5104_loc)).slice((_227d34c61_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1b85b034d:;
				{
					_1b485a553_cstrBytes(&((*(_self_))._field_Buf), (*(_5104_loc)));
				}
			}
			_match_end_1b85b0271:;
		};
	} else {
		_1b485a553_cstrBytes(&((*(_self_))._field_Buf), (*(_5104_loc)));
	};
	_1b491da01_write(_self_, jule::Str::lit(":", 1));
	_1b491da01_write(_self_, _1cab29113_Itoa((*((*(_50925_t))))._field_Row));
	_1b491da01_write(_self_, jule::Str::lit(":", 1));
	_1b491da01_write(_self_, _1cab29113_Itoa((*((*(_50925_t))))._field_Column));
}



inline void _1b4921383_head(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_1b49114c7_Time _5363_time = static__1b4911ac1_Now();;
	_1b4910d01_AbsTime _5373_abs = _1b49132a9_Abs(&_5363_time);;
	_1b491da01_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1b491da01_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1b491da01_write(_self_, jule::Str::lit("jule0.1.1 @master", 17));
	_1b491da01_write(_self_, jule::Str::lit("\n", 1));
	_1b491da01_write(_self_, jule::Str::lit("// Date: ", 9));
	_1b491da01_write(_self_, _1cab28981_FmtUint(_5373_abs._field_Day, 10LL));
	_1b491da01_write(_self_, jule::Str::lit("/", 1));
	_1b491da01_write(_self_, _1cab28981_FmtUint(_5373_abs._field_Month, 10LL));
	_1b491da01_write(_self_, jule::Str::lit("/", 1));
	_1b491da01_write(_self_, _1cab28981_FmtUint(_5373_abs._field_Year, 10LL));
	_1b491da01_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1b491da01_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1b491da01_write(_self_, jule::Str::lit(" ", 1));
	_1b491da01_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
	if (_20dbc2ed1_Production) {
		_1b491da01_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_20dbc28c6_RC))) {
		_1b491da01_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_20dbc2c8e_Safety))) {
		_1b491da01_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1b492163b_links(_self_, true);
	_1b491da01_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1b491da01_write(_self_, _20dbba649_PathApi);
	_1b491da01_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1b492163b_links(_self_, false);
}



inline void _1b492163b_links(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Bool _57622_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85bc415:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _57710_used = *it;
			{
				{
					
					if ((!((*(_57710_used))._field_Binded))) {
						_case_begin_1b85bd24b:;
						{
							goto _iter_next_1b85bc415;
						}
					}
					else if (_20da98846_IsStdHeaderPath((*(_57710_used))._field_Path)) {
						_case_begin_1b85bd2d4:;
						{
							if ((!(_57622_std))) {
								goto _iter_next_1b85bc415;
							};
							_1b491da01_write(_self_, jule::Str::lit("#include ", 9));
							_1b491da01_write(_self_, (*_57710_used.alloc)._field_Path);
							_1b491da01_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_20da98b21_IsValidHeaderExt(_227d34304_Ext((*(_57710_used))._field_Path))) {
						_case_begin_1b85bd34a:;
						{
							if (_57622_std) {
								goto _iter_next_1b85bc415;
							};
							_1b491da01_write(_self_, jule::Str::lit("#include \"", 10));
							_1b491da01_write(_self_, (*_57710_used.alloc)._field_Path);
							_1b491da01_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1b85bd0e7:;
				};
			}
			_iter_next_1b85bc415:;
			++it;
			goto _iter_begin_1b85bc415;
		}
		_iter_end_1b85bc415:;
	};
}



inline void _1b49218e4_prepareStructure(_1b491d2d6_ObjectCoder* _self_, jule::Ptr<_1b2b0db6b_Struct>* _59937_s) {
	{
		auto expr = &((*((*(_59937_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85bcda5:;
		if (it != expr_end) {
			jule::Ptr<_1b2b119c6_StructIns> _60015_ins = *it;
			{
				{
					auto expr = &((*(_60015_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b85c1edb:;
					if (it != expr_end) {
						jule::Ptr<_1b2bda9b2_Fn> _60116_m = *it;
						{
							if ((*(_60116_m))._field_Statically) {
								goto _iter_next_1b85c1edb;
							};
							{
								auto expr = &((*_60116_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b85c2a9c:;
								if (it != expr_end) {
									jule::Ptr<_1b2bdda70_FnIns> _60517_mins = *it;
									{
										jule::Ptr<_1b2bdc91a_ParamIns> _60610_p = (*(_60517_mins))._field_Params[0LL];;
										_20d8ca601_Builder _60710_kind = static__20d8cb1c3_New(40LL);;
										_1b4933241_kind((*(_self_))._field_tc.ptr(), &(_60710_kind), (*(_60610_p))._field_Kind);
										if ((!(_1b2bd98c3_IsRef((*_60610_p.alloc)._field_Decl.ptr())))) {
											_20d8d4ac2_WriteStr(&_60710_kind, jule::Str::lit("*", 1));
										};
										(*_60610_p.alloc)._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b492c449_customType>(_1b492c449_customType{._field_kind=_20d8d53b9_Str(&_60710_kind)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data29)});
									}
									_iter_next_1b85c2a9c:;
									++it;
									goto _iter_begin_1b85c2a9c;
								}
								_iter_end_1b85c2a9c:;
							};
						}
						_iter_next_1b85c1edb:;
						++it;
						goto _iter_begin_1b85c1edb;
					}
					_iter_end_1b85c1edb:;
				};
			}
			_iter_next_1b85bcda5:;
			++it;
			goto _iter_begin_1b85bcda5;
		}
		_iter_end_1b85bcda5:;
	};
}



inline void _1b4921ae2_prepareStructures(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85bbdb5:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _62315_s = *it;
			{
				if (((*(_62315_s))._field_Token != nullptr)) {
					_1b49218e4_prepareStructure(_self_.ptr(), &(_62315_s));
				};
			}
			_iter_next_1b85bbdb5:;
			++it;
			goto _iter_begin_1b85bbdb5;
		}
		_iter_end_1b85bbdb5:;
	};
}



inline void _1b4921d9a_structurePlainDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b0db6b_Struct>* _63040_s) {
	{
		auto expr = &((*((*(_63040_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85c7189:;
		if (it != expr_end) {
			jule::Ptr<_1b2b119c6_StructIns> _63115_ins = *it;
			{
				_1b491da01_write(_self_, jule::Str::lit("struct ", 7));
				static__1b48623c3_structureIns(&((*_self_.alloc)._field_Buf), &(_63115_ins));
				_1b491da01_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b85c7189:;
			++it;
			goto _iter_begin_1b85c7189;
		}
		_iter_end_1b85c7189:;
	};
}



inline void _1b4922098_structurePlainDecls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85c87a6:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _63915_s = *it;
			{
				if (((*(_63915_s))._field_Token != nullptr)) {
					_1b4921d9a_structurePlainDecl(_self_, &(_63915_s));
				};
			}
			_iter_next_1b85c87a6:;
			++it;
			goto _iter_begin_1b85c87a6;
		}
		_iter_end_1b85c87a6:;
	};
}



inline void _1b4922351_fieldDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b10e26_FieldIns>* _64631_f) {
	_1b4933241_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_64631_f))))._field_Kind);
	_1b491da01_write(_self_, jule::Str::lit(" ", 1));
	static__1b48626ae_field(&((*_self_.alloc)._field_Buf), &((*((*(_64631_f))))._field_Decl));
	_1b491da01_write(_self_, jule::Str::lit(";", 1));
}



inline void _1b4922609_structureDestructor(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _65341_s) {
	;
	jule::Ptr<_1b2bda9b2_Fn> _6567_disposeMethod = _1b2b12a71_FindMethod((*(_65341_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _6577_disposed = static__1b2d28281_Dispose(_6567_disposeMethod);;
	if ((!(_6577_disposed))) {
		return;;
	};
	_1b491da01_write(_self_, jule::Str::lit("~", 1));
	static__1b48623c3_structureIns(&((*_self_.alloc)._field_Buf), _65341_s);
	_1b491da01_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1b4861438_func(&((*_self_.alloc)._field_Buf), &(_6567_disposeMethod));
	_1b491da01_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1b4922a27_structureOperatorEq(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Str _66936_ident, jule::Ptr<_1b2b119c6_StructIns>* _66953_s, jule::Bool _66974_decl) {
	if ((!(_1b492b206_defaultEq(_66953_s)))) {
		return;;
	};
	_1b491da01_write(_self_, jule::Str::lit("\n", 1));
	if (_1b4705ca0_Inline) {
		_1b491da01_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1b491da01_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1b491da01_write(_self_, _66936_ident);
	_1b491da01_write(_self_, jule::Str::lit("_eq", 3));
	_1b491da01_write(_self_, jule::Str::lit("(", 1));
	_1b491da01_write(_self_, _66936_ident);
	_1b491da01_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1b491da01_write(_self_, _66936_ident);
	_1b491da01_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_66974_decl) {
		_1b491da01_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1b491da01_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_66953_s))))._field_Fields.len() == 0LL)) {
		_1b491da01_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1b491dea7_addIndent(_self_);
	_1b491da01_write(_self_, jule::Str::lit("\n", 1));
	_1b491e3a3_indent(_self_);
	_1b491da01_write(_self_, jule::Str::lit("return ", 7));
	_1b491dea7_addIndent(_self_);
	jule::Bool _7007_writed = false;;
	jule::Str _7037_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _7047_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_66953_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85d651c:;
		if (it != expr_end) {
			jule::Ptr<_1b2b10e26_FieldIns> _70615_f = *it;
			{
				jule::Ptr<_1b2b119c6_StructIns> _7084_strct = _1b2db5351_Struct((*(_70615_f))._field_Kind.ptr());;
				if ((((_7084_strct != nullptr) && ((*_7084_strct.alloc)._field_Decl != nullptr)) && (*(*(_7084_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1b85d651c;
				};
				if (_7007_writed) {
					_1b491da01_write(_self_, jule::Str::lit(" &&", 3));
				};
				_7007_writed=true;
				_1b491da01_write(_self_, jule::Str::lit("\n", 1));
				_1b491e3a3_indent(_self_);
				_20d8ca601_Builder _7198_fIdent = static__20d8cb1c3_New((*((*_70615_f.alloc)._field_Decl))._field_Ident.len());;
				static__1b48626ae_field(&(_7198_fIdent), &((*_70615_f.alloc)._field_Decl));
				_7037_lmodel+=_227e7c66c_BytesStr(_20d8d5d6a_Buf(&_7198_fIdent));
				_7047_rmodel+=_227e7c66c_BytesStr(_20d8d5d6a_Buf(&_7198_fIdent));
				_1b484c9da__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_7037_lmodel), &(_7047_rmodel), &((*_70615_f.alloc)._field_Kind), &((*_70615_f.alloc)._field_Kind), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_7037_lmodel).mut_slice(0LL, (_7037_lmodel.len() - _20d8d584d_Len(&_7198_fIdent)));;
				_7047_rmodel=_7037_lmodel.slice(0LL, (_7047_rmodel.len() - _20d8d584d_Len(&_7198_fIdent)));
			}
			_iter_next_1b85d651c:;
			++it;
			goto _iter_begin_1b85d651c;
		}
		_iter_end_1b85d651c:;
	};
	_1b491e1a5_doneIndent(_self_);
	if ((!(_7007_writed))) {
		_1b491da01_write(_self_, jule::Str::lit("true", 4));
	};
	_1b491da01_write(_self_, jule::Str::lit(";\n", 2));
	_1b491e1a5_doneIndent(_self_);
	_1b491e3a3_indent(_self_);
	_1b491da01_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1b4922d8a_structureOperators(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _73740_s, jule::Bool _73761_decl) {
	_20d8ca601_Builder _7387_sb = static__20d8cb1c3_New(40LL);;
	static__1b48623c3_structureIns(&(_7387_sb), _73740_s);
	jule::Str _7403_ident = _20d8d53b9_Str(&_7387_sb);;
	_1b4922a27_structureOperatorEq(_self_, _7403_ident, _73740_s, _73761_decl);
}



inline void _1b4923143_structureInsDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _74638_s) {
	{
		auto expr = &((*((*(_74638_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85e0735:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _74715_m = *it;
			{
				if (_1b492ae3c_isHeadDecl(&(_74715_m))) {
					_1b4924496_funcDecl(_self_, &(_74715_m), false);
				};
			}
			_iter_next_1b85e0735:;
			++it;
			goto _iter_begin_1b85e0735;
		}
		_iter_end_1b85e0735:;
	};
	_1b491da01_write(_self_, jule::Str::lit("struct ", 7));
	static__1b48623c3_structureIns(&((*_self_.alloc)._field_Buf), _74638_s);
	_1b491da01_write(_self_, jule::Str::lit(" {\n", 3));
	_1b491dea7_addIndent(_self_);
	{
		auto expr = &((*((*(_74638_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85e213d:;
		if (it != expr_end) {
			jule::Ptr<_1b2b10e26_FieldIns> _75815_f = *it;
			{
				_1b491e3a3_indent(_self_);
				_1b4922351_fieldDecl(_self_, &(_75815_f));
				_1b491da01_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1b85e213d:;
			++it;
			goto _iter_begin_1b85e213d;
		}
		_iter_end_1b85e213d:;
	};
	_1b491e3a3_indent(_self_);
	_1b4922609_structureDestructor(_self_, _74638_s);
	_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
	_1b491e1a5_doneIndent(_self_);
	_1b491e3a3_indent(_self_);
	_1b491da01_write(_self_, jule::Str::lit("};", 2));
	;
	_1b4922d8a_structureOperators(_self_, _74638_s, true);
}



inline void _1b49233eb_structureDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b0db6b_Struct>* _77635_s) {
	{
		auto expr = &((*((*(_77635_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85e5b9c:;
		if (it != expr_end) {
			jule::Ptr<_1b2b119c6_StructIns> _77715_ins = *it;
			{
				_1b4923143_structureInsDecl(_self_, &(_77715_ins));
			}
			_iter_next_1b85e5b9c:;
			++it;
			goto _iter_begin_1b85e5b9c;
		}
		_iter_end_1b85e5b9c:;
	};
}



inline void _1b49235e9_structureDecls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85e643e:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _78315_s = *it;
			{
				if (((*(_78315_s))._field_Token != nullptr)) {
					_1b49233eb_structureDecl(_self_, &(_78315_s));
					_1b491da01_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1b85e643e:;
			++it;
			goto _iter_begin_1b85e643e;
		}
		_iter_end_1b85e643e:;
	};
}



inline void _1b49237e7_structureMethodDecls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85e7462:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _79215_s = *it;
			{
				if (((*(_79215_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_79215_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b85e9585:;
						if (it != expr_end) {
							jule::Ptr<_1b2b119c6_StructIns> _79417_ins = *it;
							{
								{
									auto expr = &((*(_79417_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b85e9ed1:;
									if (it != expr_end) {
										jule::Ptr<_1b2bda9b2_Fn> _79518_m = *it;
										{
											if ((!(_1b492ae3c_isHeadDecl(&(_79518_m))))) {
												_1b4920a69_pushResult(_self_, &(_79518_m));
												_1b4924496_funcDecl(_self_, &(_79518_m), false);
											};
										}
										_iter_next_1b85e9ed1:;
										++it;
										goto _iter_begin_1b85e9ed1;
									}
									_iter_end_1b85e9ed1:;
								};
							}
							_iter_next_1b85e9585:;
							++it;
							goto _iter_begin_1b85e9585;
						}
						_iter_end_1b85e9585:;
					};
				};
			}
			_iter_next_1b85e7462:;
			++it;
			goto _iter_begin_1b85e7462;
		}
		_iter_end_1b85e7462:;
	};
}



inline void _1b4923cc0_funcHead(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, _20d8ca601_Builder* _81030_buf, jule::Ptr<_1b2bdda70_FnIns>* _81058_f, jule::Bool _81075_ptr, jule::Str _81086_ident) {
	if ((((!(_81075_ptr)) && _1b4705ca0_Inline) && (!(_1b2bdb485_IsEntryPoint((*((*(_81058_f))))._field_Decl.ptr()))))) {
		_20d8d4ac2_WriteStr(_81030_buf, jule::Str::lit("inline ", 7));
	};
	_1b4932707_funcInsResult((*(_self_))._field_tc.ptr(), _81030_buf, _81058_f);
	if (_81075_ptr) {
		_20d8d4ac2_WriteStr(_81030_buf, jule::Str::lit("(*", 2));
		static__1b4861724_funcIns(_81030_buf, _81058_f);
		_20d8d4d7a_WriteByte(_81030_buf, ')');
	} else {
		_20d8d4d7a_WriteByte(_81030_buf, ' ');
		if ((_81086_ident).empty()) {
			static__1b4861724_funcIns(_81030_buf, _81058_f);
		} else {
			_20d8d4ac2_WriteStr(_81030_buf, _81086_ident);
		};
	};
}



inline void _1b4924133_funcDeclIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bdda70_FnIns>* _82933_f, jule::Bool _82950_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_82933_f))))._field_CalledCo);
	_1b491e3a3_indent(_self_);
	_1b4923cc0_funcHead(_self_, &((*_self_.alloc)._field_Buf), _82933_f, _82950_ptr, jule::Str());
	_1b49255c9_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _82933_f);
	_1b491da01_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1b4924496_funcDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bda9b2_Fn>* _83730_f, jule::Bool _83744_ptr) {
	{
		auto expr = &((*((*(_83730_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8601b42:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdda70_FnIns> _83815_c = *it;
			{
				_1b4924133_funcDeclIns(_self_, &(_83815_c), _83744_ptr);
			}
			_iter_next_1b8601b42:;
			++it;
			goto _iter_begin_1b8601b42;
		}
		_iter_end_1b8601b42:;
	};
}



inline void _1b492474e_funcDeclTrait(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bda9b2_Fn>* _84335_f) {
	{
		auto expr = &((*((*(_84335_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8602a77:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdda70_FnIns> _84415_c = *it;
			{
				jule::Ptr<_1b2db1627_TypeKind> _8458_k = (*((*(_84415_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_84415_c))._field_Params[0LL]))._field_Kind=_1b491ac0c_generalGCPtr;
				_1b4924133_funcDeclIns(_self_, &(_84415_c), true);
				(*((*(_84415_c))._field_Params[0LL]))._field_Kind=_8458_k;
			}
			_iter_next_1b8602a77:;
			++it;
			goto _iter_begin_1b8602a77;
		}
		_iter_end_1b8602a77:;
	};
}



inline void _1b492494c_funcDecls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_1b386796d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1b2cd7691_Package>*>((void*)__jule_anon_1b86057a0, jule::Ptr<__jule_anon_1b86057a0_ctx>::make(__jule_anon_1b86057a0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b86057a0_ctx_handler));
}



inline void _1b4924c05_traitDataTypeMethods(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2be61c6_Trait>* _86542_t) {
	_1b386874e_IterTraitMethods(_86542_t, jule::__new_closure<void,jule::Ptr<_1b2bda9b2_Fn>*>((void*)__jule_anon_1b8606c79, jule::Ptr<__jule_anon_1b8606c79_ctx>::make(__jule_anon_1b8606c79_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b8606c79_ctx_handler));
}



inline void _1b4924e03_traitDataTypes(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_1b386796d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1b2cd7691_Package>*>((void*)__jule_anon_1b860c3de, jule::Ptr<__jule_anon_1b860c3de_ctx>::make(__jule_anon_1b860c3de_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b860c3de_ctx_handler));
}



inline void _1b4925266_paramIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, _20d8ca601_Builder* _90130_buf, jule::Ptr<_1b2bdc91a_ParamIns>* _90158_p) {
	_1b4932031_paramIns((*(_self_))._field_tc.ptr(), _90130_buf, _90158_p);
	_20d8d4d7a_WriteByte(_90130_buf, ' ');
	static__1b4861ceb_param(_90130_buf, &((*((*(_90158_p))))._field_Decl));
}



inline void _1b49255c9_paramsIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, _20d8ca601_Builder* _90731_buf, jule::Ptr<_1b2bdda70_FnIns>* _90759_f) {
	if (((!((*((*(_90759_f))))._field_AsAnon)) && ((*((*(_90759_f))))._field_Params.len() == 0LL))) {
		_20d8d4ac2_WriteStr(_90731_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_20d8d4d7a_WriteByte(_90731_buf, '(');
	if ((*((*(_90759_f))))._field_AsAnon) {
		_20d8d4ac2_WriteStr(_90731_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_90759_f))))._field_Params.len() > 0LL)) {
			_20d8d4ac2_WriteStr(_90731_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_90759_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b86156d3:;
		if (it != expr_end) {
			jule::I64 _9198_i = it - expr->begin();
			jule::Ptr<_1b2bdc91a_ParamIns> _91915_p = *it;
			{
				_1b4925266_paramIns(_self_, _90731_buf, &(_91915_p));
				if ((((*((*(_90759_f))))._field_Params.len() - _9198_i) > 1LL)) {
					_20d8d4ac2_WriteStr(_90731_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b86156d3:;
			++it;
			_9198_i++;
			goto _iter_begin_1b86156d3;
		}
		_iter_end_1b86156d3:;
	};
	_20d8d4d7a_WriteByte(_90731_buf, ')');
}



inline void _1b492593c_varInitExpr(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2d26ca7_Var>* _92833_v, jule::Fn<void> _92848_init) {
	if ((*((*(_92833_v))))._field_Statically) {
		_1b491da01_write(_self_, jule::Str::lit("static ", 7));
	};
	_1b4933241_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_92833_v))))._field_Kind))._field_Kind);
	_1b491da01_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_92833_v))))._field_Reference) {
		_1b491da01_write(_self_, jule::Str::lit("*", 1));
	};
	static__1b486299a_var(&((*_self_.alloc)._field_Buf), (*(_92833_v)));
	if ((_92848_init != nullptr)) {
		_1b491da01_write(_self_, jule::Str::lit(" = ", 3));
		_92848_init();
	};
	_1b491da01_write(_self_, jule::Str::lit(";", 1));
}



inline void _1b4925be5_var(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2d26ca7_Var> _94624_v) {
	if (_1b2aca8a2_IsIgnoreIdent((*(_94624_v))._field_Ident)) {
		return;;
	};
	if ((((*_94624_v.alloc)._field_Value != nullptr) && ((*(*(_94624_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_94624_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_94624_v.alloc)._field_Reference) {
				_1b492593c_varInitExpr(_self_, &(_94624_v), jule::__new_closure<void>((void*)__jule_anon_1b861ca92, jule::Ptr<__jule_anon_1b861ca92_ctx>::make(__jule_anon_1b861ca92_ctx{._self_=_self_,._94624_v=_94624_v}).as<jule::Uintptr>(), __jule_anon_1b861ca92_ctx_handler));
			} else {
				_1b492593c_varInitExpr(_self_, &(_94624_v), jule::__new_closure<void>((void*)__jule_anon_1b861eb82, jule::Ptr<__jule_anon_1b861eb82_ctx>::make(__jule_anon_1b861eb82_ctx{._self_=_self_,._94624_v=_94624_v}).as<jule::Uintptr>(), __jule_anon_1b861eb82_ctx_handler));
			};
			return;;
		};
		_1b492593c_varInitExpr(_self_, &(_94624_v), nullptr);
		return;;
	};
	if ((*_94624_v.alloc)._field_Reference) {
		_1b492593c_varInitExpr(_self_, &(_94624_v), jule::__new_closure<void>((void*)__jule_anon_1b862238d, jule::Ptr<__jule_anon_1b862238d_ctx>::make(__jule_anon_1b862238d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b862238d_ctx_handler));
		return;;
	};
	if (_1b493a3be_shouldInitialized(&((*((*_94624_v.alloc)._field_Kind))._field_Kind))) {
		_1b492593c_varInitExpr(_self_, &(_94624_v), jule::__new_closure<void>((void*)__jule_anon_1b8623537, jule::Ptr<__jule_anon_1b8623537_ctx>::make(__jule_anon_1b8623537_ctx{._self_=_self_,._94624_v=_94624_v}).as<jule::Uintptr>(), __jule_anon_1b8623537_ctx_handler));
		return;;
	};
	_1b492593c_varInitExpr(_self_, &(_94624_v), nullptr);
}



inline void _1b4926058_anonFuncInsDecl(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel>* _97737_m, jule::Str _97764_ident) {
	_1b4923cc0_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_97737_m))))._field_Func), false, _97764_ident);
	_1b49255c9_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_97737_m))))._field_Func));
	_20d8d4d7a_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1b49263bb_anonFuncIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bd1436_AnonFnExprModel>* _98333_m, jule::Str _98360_ident) {
	_1b4923cc0_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_98333_m))))._field_Func), false, _98360_ident);
	_1b49255c9_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_98333_m))))._field_Func));
	_1b491da01_write(_self_, jule::Str::lit(" ", 1));
	_1b4841eda_anonFuncScope((*_self_.alloc)._field_sc, (*(_98333_m)), _98360_ident);
	if (((*((*((*(_98333_m))))._field_Func))._field_Scope != nullptr)) {
		_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1b492672e_funcIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bdda70_FnIns> _99328_f, jule::Str _99345_ident) {
	_1b4923cc0_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_99328_f), false, _99345_ident);
	_1b49255c9_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_99328_f));
	_1b491da01_write(_self_, jule::Str::lit(" ", 1));
	_1b4842293_funcScope((*_self_.alloc)._field_sc, _99328_f);
	if (((*(_99328_f))._field_Scope != nullptr)) {
		_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1b49269d7_func(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bda9b2_Fn>* _100326_f) {
	{
		auto expr = &((*((*(_100326_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b862bd6a:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdda70_FnIns> _100415_ins = *it;
			{
				_1b492672e_funcIns(_self_, _100415_ins, jule::Str());
			}
			_iter_next_1b862bd6a:;
			++it;
			goto _iter_begin_1b862bd6a;
		}
		_iter_end_1b862bd6a:;
	};
}



inline void _1b4926d4a_funcTrait(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _100927_s, jule::Ptr<_1b2bdda70_FnIns>* _100953_f) {
	(*((*(_100953_f))))._field_Scope=nullptr;
	_20d8ca601_Builder _10127_nident = static__20d8cb1c3_New(30LL);;
	_20d8d4ac2_WriteStr(&_10127_nident, jule::Str::lit("__jule_trait_method_", 20));
	_20d8d4ac2_WriteStr(&_10127_nident, _1cab28981_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_100953_f)))), 15LL));
	_20d8d4ac2_WriteStr(&_10127_nident, jule::Str::lit("_", 1));
	_20d8d4ac2_WriteStr(&_10127_nident, _1cab28981_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_100927_s)))), 15LL));
	jule::Ptr<_1b2db1627_TypeKind> _10187_k = (*((*((*(_100953_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_100953_f))))._field_Params[0LL]))._field_Kind=_1b491ac0c_generalGCPtr;
	_1b492672e_funcIns(_self_, (*(_100953_f)), _20d8d53b9_Str(&_10127_nident));
	(*((*((*(_100953_f))))._field_Params[0LL]))._field_Kind=_10187_k;
}



inline __jule_tuple_x_1b2bdda70_FnIns__jule_tuple_bool _1b492718b_findTraitMetMap(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2bda9b2_Fn>* _102437_m) {
	__jule_tuple_x_1b2bdda70_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b2bdda70_FnIns> _10257_mins = (*((*(_102437_m))))._field_Instances[0LL];;
	{
		_1b8036b1b_mapIterator it = _1b802dc23_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1b8632645:;
		__jule_tuple_px_1b2bdda70_FnIns__jule_tuple_psuintptr __iterator_result = _1b8037303_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1b2bdda70_FnIns> _102612_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_102612_f))._field_Decl))._field_Public == (*((*(_102437_m))))._field_Public) && ((*(*(_102612_f))._field_Decl.alloc)._field_Ident == (*((*(_102437_m))))._field_Ident)) && _1b2bde6ca_EqualFn(_102612_f, &(_10257_mins)))) {
					__jule_func_result.__jule_result_arg0 = _102612_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b8632645:;
			goto _iter_begin_1b8632645;
		}
		_iter_end_1b8632645:;
	};
	__jule_func_result.__jule_result_arg0 = _10257_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1b49274ee_traitWrapper(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2be61c6_Trait>* _103634_t, jule::Ptr<_1b2bda9b2_Fn>* _103656_m) {
	_julec_label_1b8634d73:;
	{
		auto expr = &((*((*(_103634_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b863502c:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _103815_imp = *it;
			{
				jule::Ptr<_1b2bdda70_FnIns> _10398_mepf;
				jule::Bool _103914_exist;
				({
					__jule_tuple_x_1b2bdda70_FnIns__jule_tuple_bool __jule_assign_result = _1b492718b_findTraitMetMap(_self_, _103656_m);
					_10398_mepf = __jule_assign_result.__jule_result_arg0;
					_103914_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_103914_exist) {
					jule::Slice<jule::Uintptr> _10429_vals = _1b802d409_get((*_self_.alloc)._field_traitMetMap, _10398_mepf);;
					{
						auto expr = &(_10429_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b863700c:;
						if (it != expr_end) {
							jule::Uintptr _104312_val = *it;
							{
								if ((_104312_val == static_cast<jule::Uintptr>(_103815_imp))) {
									goto _iter_next_1b863502c;
								};
							}
							_iter_next_1b863700c:;
							++it;
							goto _iter_begin_1b863700c;
						}
						_iter_end_1b863700c:;
					};
					(*_1b802d55d_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10398_mepf))=jule::append(_10429_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_103815_imp); __jule_collection; }));
				} else {
					(*_1b802d55d_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10398_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_103815_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_103815_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8637c44:;
					if (it != expr_end) {
						jule::Ptr<_1b2b119c6_StructIns> _105316_ins = *it;
						{
							_1b4926d4a_funcTrait(_self_, &(_105316_ins), &(_10398_mepf));
							;
							jule::Ptr<_1b2bda9b2_Fn> _10579_sm = _1b2b12a71_FindMethod(_105316_ins.ptr(), (*((*(_103656_m))))._field_Ident, false);;
							if (((_10579_sm == nullptr) || ((*(_10579_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1b491dea7_addIndent(_self_);
							_1b491da01_write(_self_, jule::Str::lit("{\n", 2));
							_1b491e3a3_indent(_self_);
							if (((*((*(_103656_m))))._field_Exceptional || (!(_1b2bdae68_IsVoid((*(_103656_m)).ptr()))))) {
								_1b491da01_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1b4861438_func(&((*_self_.alloc)._field_Buf), &(_10579_sm));
							_1b491da01_write(_self_, jule::Str::lit("(", 1));
							_1b491da01_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1b49314e7_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _105316_ins);
							_1b491da01_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10745_ptr = (!(_1b2bd98c3_IsRef((*((*(_103656_m))))._field_Params[0LL].ptr())));;
							if (_10745_ptr) {
								_1b491da01_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_103656_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1b863eb2a:;
								if (it != expr_end) {
									jule::Ptr<_1b2bd8edd_Param> _107812_mp = *it;
									{
										_1b491da01_write(_self_, jule::Str::lit(", ", 2));
										static__1b4861ceb_param(&((*_self_.alloc)._field_Buf), &(_107812_mp));
									}
									_iter_next_1b863eb2a:;
									++it;
									goto _iter_begin_1b863eb2a;
								}
								_iter_end_1b863eb2a:;
							};
							_1b491da01_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1b491e1a5_doneIndent(_self_);
						}
						_iter_next_1b8637c44:;
						++it;
						goto _iter_begin_1b8637c44;
					}
					_iter_end_1b8637c44:;
				};
			}
			_iter_next_1b863502c:;
			++it;
			goto _iter_begin_1b863502c;
		}
		_iter_end_1b863502c:;
	};
}



inline void _1b49276ec_traitWrappers(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_1b386796d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1b2cd7691_Package>*>((void*)__jule_anon_1b86416ed, jule::Ptr<__jule_anon_1b86416ed_ctx>::make(__jule_anon_1b86416ed_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b86416ed_ctx_handler));
}



inline void _1b4927a60_traitDataMethods(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2be61c6_Trait>* _110338_t, jule::Ptr<_1b2b119c6_StructIns> _110355_s) {
	_1b386874e_IterTraitMethods(_110338_t, jule::__new_closure<void,jule::Ptr<_1b2bda9b2_Fn>*>((void*)__jule_anon_1b8641b60, jule::Ptr<__jule_anon_1b8641b60_ctx>::make(__jule_anon_1b8641b60_ctx{._self_=_self_,._110355_s=_110355_s}).as<jule::Uintptr>(), __jule_anon_1b8641b60_ctx_handler));
}



inline void _1b4927e7d_traitData(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2be61c6_Trait>* _112031_t, jule::I64 _112048_i, jule::Ptr<_1b2b119c6_StructIns>* _112061_s) {
	_20d8ca601_Builder _11217_ident = static__20d8cb1c3_New((*((*(_112031_t))))._field_Ident.len());;
	static__1b4861a10_traitDecl(&(_11217_ident), (*(_112031_t)));
	_1b491da01_write(_self_, jule::Str::lit("static ", 7));
	_1b491dca9_writeBytes(_self_, _20d8d5d6a_Buf(&_11217_ident));
	_1b491da01_write(_self_, jule::Str::lit("MptrData ", 9));
	_1b491dca9_writeBytes(_self_, _20d8d5d6a_Buf(&_11217_ident));
	_1b491da01_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1b491da01_write(_self_, _1cab29113_Itoa(_112048_i));
	_1b491da01_write(_self_, jule::Str::lit(" {\n", 3));
	_1b491dea7_addIndent(_self_);
	_1b491e3a3_indent(_self_);
	_1b491da01_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1b491da01_write(_self_, _1cab29113_Itoa(_1b491ed76_pushDealloc(_self_, jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_112061_s)), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)}))));
	_1b491da01_write(_self_, jule::Str::lit(",\n", 2));
	_1b4927a60_traitDataMethods(_self_, _112031_t, (*(_112061_s)));
	_1b491e1a5_doneIndent(_self_);
	_1b491da01_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1b492817b_traitDatas(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_1b386796d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1b2cd7691_Package>*>((void*)__jule_anon_1b865525b, jule::Ptr<__jule_anon_1b865525b_ctx>::make(__jule_anon_1b865525b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b865525b_ctx_handler));
}



inline void _1b4928379_globalDecls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b86571d6:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _115715_v = *it;
			{
				_1b4933241_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_115715_v))._field_Kind))._field_Kind);
				_1b491da01_write(_self_, jule::Str::lit(" ", 1));
				static__1b486299a_var(&((*_self_.alloc)._field_Buf), _115715_v);
				_1b491da01_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b86571d6:;
			++it;
			goto _iter_begin_1b86571d6;
		}
		_iter_end_1b86571d6:;
	};
}



inline void _1b4928577_decls(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_1b4922098_structurePlainDecls(_self_);
	_1b49235e9_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_20d8d584d_Len(&(*_self_.alloc)._field_Buf);
	_1b49237e7_structureMethodDecls(_self_);
	_1b492494c_funcDecls(_self_);
	_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
	_1b4924e03_traitDataTypes(_self_);
	_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_20d8d584d_Len(&(*_self_.alloc)._field_Buf);
	_1b49276ec_traitWrappers(_self_);
	_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
	_1b492817b_traitDatas(_self_);
	_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_20d8d584d_Len(&(*_self_.alloc)._field_Buf);
	_1b4928379_globalDecls(_self_);
}



inline void _1b4928830_structureMethods(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _118338_s) {
	{
		auto expr = &((*((*(_118338_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8660046:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _118415_f = *it;
			{
				_1b49269d7_func(_self_, &(_118415_f));
				_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1b8660046:;
			++it;
			goto _iter_begin_1b8660046;
		}
		_iter_end_1b8660046:;
	};
}



inline void _1b4928ad8_structureIns(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b119c6_StructIns>* _119034_s) {
	;
	_1b4922d8a_structureOperators(_self_, _119034_s, false);
	_1b4928830_structureMethods(_self_, _119034_s);
}



inline void _1b4928d91_structure(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2b0db6b_Struct>* _119631_s) {
	{
		auto expr = &((*((*(_119631_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8662521:;
		if (it != expr_end) {
			jule::Ptr<_1b2b119c6_StructIns> _119715_ins = *it;
			{
				_1b4928ad8_structureIns(_self_, &(_119715_ins));
				_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1b8662521:;
			++it;
			goto _iter_begin_1b8662521;
		}
		_iter_end_1b8662521:;
	};
}



inline void _1b492908e_structures(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8662c5d:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _120415_s = *it;
			{
				if (((*(_120415_s))._field_Token != nullptr)) {
					_1b4928d91_structure(_self_, &(_120415_s));
					_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1b8662c5d:;
			++it;
			goto _iter_begin_1b8662c5d;
		}
		_iter_end_1b8662c5d:;
	};
}



inline void _1b492928c_funcs(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_1b386796d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1b2cd7691_Package>*>((void*)__jule_anon_1b8665887, jule::Ptr<__jule_anon_1b8665887_ctx>::make(__jule_anon_1b8665887_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b8665887_ctx_handler));
}



inline void _1b4929545_pushInit(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, jule::Ptr<_1b2cd7691_Package>* _123530_pkg) {
	_1b3867bd2_IterFiles(_123530_pkg, jule::__new_closure<void,jule::Ptr<_1b2be1cb5_SymTab>*>((void*)__jule_anon_1b8666d61, jule::Ptr<__jule_anon_1b8666d61_ctx>::make(__jule_anon_1b8666d61_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b8666d61_ctx_handler));
}



inline void _1b4929743_anonHashes(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_julec_label_1b866b6a1:;
	jule::Slice<jule::Ptr<_1b491b7ce_anonHash>> _12527_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12527_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b866d230:;
		if (it != expr_end) {
			jule::Ptr<_1b491b7ce_anonHash> _125415_h = *it;
			{
				_1b49263bb_anonFuncIns(_self_, &((*(_125415_h))._field_expr), (*_125415_h.alloc)._field_ident);
			}
			_iter_next_1b866d230:;
			++it;
			goto _iter_begin_1b866d230;
		}
		_iter_end_1b866d230:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1b866b6a1;
	};
}



inline void _1b4929941_initGlobals(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b866e74d:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _126315_v = *it;
			{
				_20d8d4d7a_WriteByte(&(*(_self_))._field_Buf, 9LLU);
				static__1b486299a_var(&((*_self_.alloc)._field_Buf), _126315_v);
				_1b491da01_write(_self_, jule::Str::lit(" = ", 3));
				_1b4858908_model((*_self_.alloc)._field_ec, (*((*((*(_126315_v))._field_Value))._field_Data))._field_Model);
				_1b491da01_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b866e74d:;
			++it;
			goto _iter_begin_1b866e74d;
		}
		_iter_end_1b866e74d:;
	};
}



inline void _1b4929b3e_initCaller(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_1b491da01_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1b491dea7_addIndent(_self_);
	_1b386796d_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1b2cd7691_Package>*>((void*)__jule_anon_1b8673202, jule::Ptr<__jule_anon_1b8673202_ctx>::make(__jule_anon_1b8673202_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b8673202_ctx_handler));
	_1b491e1a5_doneIndent(_self_);
	_1b491da01_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1b4929d3c_end(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_1b491da01_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
	_1b4929941_initGlobals(_self_);
	_1b491da01_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_20dbc261d_Test) {
		_1b491da01_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1b491da01_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1b491da01_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1b492a1a0_insertBuf(jule::Ptr<_1b491d2d6_ObjectCoder> _self_, _20d8ca601_Builder* _130631_buf, jule::I64 _130654_pos) {
	if ((_20d8d584d_Len(_130631_buf) > 0LL)) {
		jule::Slice<jule::U8> _13088_head = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_20d8d584d_Len(&(*(_self_))._field_Buf) + _20d8d584d_Len(_130631_buf))); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
		(_13088_head).append(_20d8d5d6a_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _130654_pos));;
		(_13088_head).append(_20d8d5d6a_Buf(_130631_buf));;
		(_13088_head).append(_20d8d5d6a_Buf(&(*_self_.alloc)._field_Buf).slice(_130654_pos));;
		{
			_20d8d6123_SetBuf(&(*_self_.alloc)._field_Buf, _13088_head);
		};
	};
}



inline void _1b492a39d_implementRC(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_1b492672e_funcIns(_self_, (*(_1b2ea0d65_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAddAtomic", 12)))))._field_Instances[0LL], jule::Str::lit("__jule_RCAdd", 12));
		_1b492672e_funcIns(_self_, (*(_1b2ea0d65_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoadAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCLoad", 13));
		_1b492672e_funcIns(_self_, (*(_1b2ea0d65_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDropAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_1b492672e_funcIns(_self_, (*(_1b2ea0d65_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAdd", 6)))))._field_Instances[0LL], jule::Str());
		_1b492672e_funcIns(_self_, (*(_1b2ea0d65_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoad", 7)))))._field_Instances[0LL], jule::Str());
		_1b492672e_funcIns(_self_, (*(_1b2ea0d65_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDrop", 7)))))._field_Instances[0LL], jule::Str());
	};
}



inline void _1b492a59b_serializeHead(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_1b4921ae2_prepareStructures(_self_);
	_1b4921383_head(_self_);
	_1b491da01_write(_self_, jule::Str::lit("\n", 1));
	_1b4928577_decls(_self_);
	_1b492a1a0_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_20d8d584d_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_20d8d584d_Len(&(*_self_.alloc)._field_resultDecls);
	_1b491da01_write(_self_, jule::Str::lit("\n", 1));
	_1b492908e_structures(_self_);
	_1b492928c_funcs(_self_);
	_1b4929b3e_initCaller(_self_);
	_1b491da01_write(_self_, jule::Str::lit("\n\n", 2));
	_1b4929743_anonHashes(_self_);
	_1b492a39d_implementRC(_self_);
	_1b492a1a0_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_20d8d584d_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_20d8d584d_Len(&(*_self_.alloc)._field_deallocObj);
	_1b492a1a0_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_20d8d584d_Len(&(*_self_.alloc)._field_anyObj);
	_1b492a1a0_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_20d8d584d_Len(&(*_self_.alloc)._field_anonObj);
	_1b492a1a0_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_20d8d584d_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _1b492a799_Serialize(jule::Ptr<_1b491d2d6_ObjectCoder> _self_) {
	_1b492a59b_serializeHead(_self_);
	_1b4929d3c_end(_self_);
}








inline jule::Bool _1b492c449_customType_eq(_1b492c449_customType *_self_, _1b492c449_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1b492c801_Str(_1b492c449_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1b492cb42_Equal(jule::Ptr<_1b492c449_customType> _self_, jule::Ptr<_1b2db1627_TypeKind> _2518_k) {
	return false;;
}








inline jule::Bool _1b492d03d_typeCoder_eq(_1b492d03d_typeCoder *_self_, _1b492d03d_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1b492d03d_typeCoder> static__1b492d58d_new(jule::Ptr<_1b491d2d6_ObjectCoder>* _5021_oc) {
	jule::Ptr<_1b492d03d_typeCoder> _517_tc = jule::new_ptr<_1b492d03d_typeCoder>(_1b492d03d_typeCoder{._field_oc=(*(_5021_oc)), ._field_rc=jule::Ptr<_1b4935b28_resultCoder>(nullptr)});;
	(*(_517_tc))._field_rc=static__1b4936134_new(&(_517_tc));
	return _517_tc;;
}



inline void _1b492d901_toType(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _5727_buf, jule::Str _5754_id) {
	if ((_5754_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_5754_id=_1b2c6bd1d_RealKindOf(_5754_id);
	};
	_20d8d4ac2_WriteStr(_5727_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _5754_id[0LL]) && (_5754_id[0LL] <= 122LLU))) {
		_20d8d4d7a_WriteByte(_5727_buf, (jule::U8)(_5754_id[0LL] - 32LLU));
	} else {
		_20d8d4d7a_WriteByte(_5727_buf, _5754_id[0LL]);
	};
	_20d8d4ac2_WriteStr(_5727_buf, _5754_id.slice(1LL));
}



inline void _1b492dc64_prim(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _7125_buf, jule::Ptr<_1b2db9740_Prim> _7148_p) {
	_1b492d901_toType(_self_, _7125_buf, (*(_7148_p))._field_Kind);
}



inline void _1b492e0c7_tuple(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _7626_buf, jule::Ptr<_1b2dbe833_Tuple> _7653_t) {
	_20d8d4ac2_WriteStr(_7626_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_7653_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b86949e8:;
		if (it != expr_end) {
			jule::I64 _788_i = it - expr->begin();
			jule::Ptr<_1b2db1627_TypeKind> _7815_tk = *it;
			{
				_1b4933241_kind(_self_, _7626_buf, _7815_tk);
				if ((((*(_7653_t))._field_Types.len() - _788_i) > 1LL)) {
					_20d8d4d7a_WriteByte(_7626_buf, ',');
				};
			}
			_iter_next_1b86949e8:;
			++it;
			_788_i++;
			goto _iter_begin_1b86949e8;
		}
		_iter_end_1b86949e8:;
	};
	_20d8d4d7a_WriteByte(_7626_buf, '>');
}



inline void _1b492e43a_asSptr(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem) {
	_20d8d4ac2_WriteStr(_8827_buf, jule::Str::lit("jule::Ptr<", 10));
	_20d8d4819_Write(_8827_buf, _8850_elem);
	_20d8d4d7a_WriteByte(_8827_buf, '>');
}



inline void _1b492e79d_sptr(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _9525_buf, jule::Ptr<_1b2dbd26b_Sptr> _9552_sptr) {
	_20d8d4ac2_WriteStr(_9525_buf, jule::Str::lit("jule::Ptr<", 10));
	_1b4933241_kind(_self_, _9525_buf, (*(_9552_sptr))._field_Elem);
	_20d8d4d7a_WriteByte(_9525_buf, '>');
}



inline void _1b492eb11_ptr(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _10224_buf, jule::Ptr<_1b2dc1a33_Ptr> _10251_p) {
	;
	if (_1b2dc25a0_IsUnsafe(_10251_p.ptr())) {
		_20d8d4ac2_WriteStr(_10224_buf, jule::Str::lit("void*", 5));
	} else {
		_1b4933241_kind(_self_, _10224_buf, (*(_10251_p))._field_Elem);
		_20d8d4ac2_WriteStr(_10224_buf, jule::Str::lit("*", 1));
	};
}



inline void _1b492ee74_enumDecl(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _11329_buf, jule::Ptr<_1b2be887c_Enum> _11356_e) {
	_1b4933241_kind(_self_, _11329_buf, (*((*(_11356_e))._field_Kind))._field_Kind);
}



inline void _1b49302d7_typeEnumDecl(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _11833_buf, jule::Ptr<_1b2bea087_TypeEnum> _11860_e) {
	_20d8d4ac2_WriteStr(_11833_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1b493064a_asSlice(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _12228_buf, jule::Ptr<_1b2db1627_TypeKind> _12255_elem) {
	_20d8d4ac2_WriteStr(_12228_buf, jule::Str::lit("jule::Slice<", 12));
	_1b4933241_kind(_self_, _12228_buf, _12255_elem);
	_20d8d4d7a_WriteByte(_12228_buf, '>');
}



inline void _1b49309ad_slice(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _12926_buf, jule::Ptr<_1b2dbdc3e_Slc> _12953_s) {
	_1b493064a_asSlice(_self_, _12926_buf, (*(_12953_s))._field_Elem);
}



inline void _1b4930d21_mapType(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _13428_buf, jule::Ptr<_1b2dc03d3_Map> _13455_m) {
	jule::Ptr<_1b2b0db6b_Struct> _1357_s = _1b2ea145e_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1b2b119c6_StructIns> _1367_ins = _1b386e9a8_FindStructGenericInstance(&(_1357_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13455_m))._field_Key; (*it++) = (*_13455_m.alloc)._field_Val; __jule_collection; }));;
	_20d8d4ac2_WriteStr(_13428_buf, jule::Str::lit("jule::Ptr<", 10));
	static__1b48623c3_structureIns(_13428_buf, &(_1367_ins));
	_20d8d4ac2_WriteStr(_13428_buf, jule::Str::lit(">", 1));
}



inline void _1b49314e7_structureIns(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _14833_buf, jule::Ptr<_1b2b119c6_StructIns> _14860_s) {
	if ((!((*((*(_14860_s))._field_Decl))._field_Binded))) {
		static__1b48623c3_structureIns(_14833_buf, &(_14860_s));
		return;;
	};
	jule::Ptr<_1b2adc809_Directive> _1533_d = _1b386c9ea_FindDirective(&((*(*(_14860_s))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1533_d != nullptr)) {
		_20d8d4819_Write(_14833_buf, _1b492ab2e_concatAllParts((*_1533_d.alloc)._field_Args));
		_20d8d4ac2_WriteStr(_14833_buf, jule::Str::lit("::", 2));
	};
	static__1b48623c3_structureIns(_14833_buf, &(_14860_s));
	if (((*_14860_s.alloc)._field_Generics.len() > 0LL)) {
		_20d8d4d7a_WriteByte(_14833_buf, '<');
		{
			auto expr = &((*_14860_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b86a31dd:;
			if (it != expr_end) {
				jule::I64 _1619_i = it - expr->begin();
				jule::Ptr<_1b2daee72_InsGeneric> _16116_g = *it;
				{
					_1b4933241_kind(_self_, _14833_buf, (*(_16116_g))._field_Kind);
					if ((((*_14860_s.alloc)._field_Generics.len() - _1619_i) > 1LL)) {
						_20d8d4d7a_WriteByte(_14833_buf, ',');
					};
				}
				_iter_next_1b86a31dd:;
				++it;
				_1619_i++;
				goto _iter_begin_1b86a31dd;
			}
			_iter_end_1b86a31dd:;
		};
		_20d8d4d7a_WriteByte(_14833_buf, '>');
	};
}



inline void _1b493185a_array(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _17226_buf, jule::Ptr<_1b2dc1060_Arr> _17253_a) {
	_20d8d4ac2_WriteStr(_17226_buf, jule::Str::lit("jule::Array<", 12));
	_1b4933241_kind(_self_, _17226_buf, (*(_17253_a))._field_Elem);
	_20d8d4d7a_WriteByte(_17226_buf, ',');
	_20d8d4ac2_WriteStr(_17226_buf, _1cab29113_Itoa((*_17253_a.alloc)._field_N));
	_20d8d4d7a_WriteByte(_17226_buf, '>');
}



inline void _1b4932031_paramIns(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _19529_buf, jule::Ptr<_1b2bdc91a_ParamIns>* _19557_p) {
	if ((*((*((*(_19557_p))))._field_Decl))._field_Variadic) {
		_20d8d4ac2_WriteStr(_19529_buf, jule::Str::lit("jule::Slice<", 12));
		_1b4933241_kind(_self_, _19529_buf, (*((*(_19557_p))))._field_Kind);
		_20d8d4d7a_WriteByte(_19529_buf, '>');
	} else {
		_1b4933241_kind(_self_, _19529_buf, (*((*(_19557_p))))._field_Kind);
	};
	if ((*((*((*(_19557_p))))._field_Decl))._field_Reference) {
		_20d8d4d7a_WriteByte(_19529_buf, '*');
	};
}



inline void _1b4932707_funcInsResult(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _22734_s, jule::Ptr<_1b2bdda70_FnIns>* _22760_f) {
	if (_1b2bdae68_IsVoid((*((*(_22760_f))))._field_Decl.ptr())) {
		if ((*(*((*(_22760_f))))._field_Decl.alloc)._field_Exceptional) {
			_20d8d4ac2_WriteStr(_22734_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_20d8d4ac2_WriteStr(_22734_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_22760_f))))._field_Decl.alloc)._field_Exceptional) {
		_20d8d4ac2_WriteStr(_22734_s, jule::Str::lit("jule::Exceptional<", 18));
		_1b49381e1_codeMut1((*(_self_))._field_rc.ptr(), _22734_s, &((*((*(_22760_f))))._field_Result));
		_20d8d4d7a_WriteByte(_22734_s, '>');
		return;;
	};
	_1b49381e1_codeMut1((*(_self_))._field_rc, _22734_s, &((*((*(_22760_f))))._field_Result));
}



inline void _1b4932a6a_anonFunc(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _24529_buf, jule::Ptr<_1b2bdda70_FnIns> _24556_f) {
	if ((((*(_24556_f))._field_Result != nullptr) && (_1b2db5b04_Tup((*(_24556_f))._field_Result) != nullptr))) {
		_1b49207b1_pushResultIns((*(_self_))._field_oc, &(_24556_f));
	};
	_1b4932707_funcInsResult(_self_, _24529_buf, &(_24556_f));
	if (((*_24556_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_20d8d4d7a_WriteByte(_24529_buf, ',');
	{
		auto expr = &((*_24556_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b86b4bc2:;
		if (it != expr_end) {
			jule::I64 _2548_i = it - expr->begin();
			jule::Ptr<_1b2bdc91a_ParamIns> _25415_param = *it;
			{
				if (_1b2bd963c_IsSelf((*(_25415_param))._field_Decl.ptr())) {
					goto _iter_next_1b86b4bc2;
				};
				_1b4932031_paramIns(_self_, _24529_buf, &(_25415_param));
				if ((((*_24556_f.alloc)._field_Params.len() - _2548_i) > 1LL)) {
					_20d8d4d7a_WriteByte(_24529_buf, ',');
				};
			}
			_iter_next_1b86b4bc2:;
			++it;
			_2548_i++;
			goto _iter_begin_1b86b4bc2;
		}
		_iter_end_1b86b4bc2:;
	};
}



inline void _1b4932dcd_func(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _26625_buf, jule::Ptr<_1b2bdda70_FnIns> _26652_f) {
	_20d8d4ac2_WriteStr(_26625_buf, jule::Str::lit("jule::Fn<", 9));
	_1b4932a6a_anonFunc(_self_, _26625_buf, _26652_f);
	_20d8d4d7a_WriteByte(_26625_buf, '>');
}



inline void _1b4933241_kind(_1b492d03d_typeCoder* _self_, _20d8ca601_Builder* _27325_buf, jule::Ptr<_1b2db1627_TypeKind> _27352_k) {
	{
		
		if ((_1b2db5351_Struct(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b8214:;
			{
				_1b49314e7_structureIns(_self_, _27325_buf, _1b2db5351_Struct(_27352_k));
				return;;
			}
		}
		else if (_1b2db24c4_Binded(_27352_k.ptr())) {
			_case_begin_1b86b82ad:;
			{
				_20d8d4ac2_WriteStr(_27325_buf, (*_27352_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1b2db3ccd_Prim(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b8324:;
			{
				_1b492dc64_prim(_self_, _27325_buf, _1b2db3ccd_Prim(_27352_k));
				return;;
			}
		}
		else if ((_1b2db5b04_Tup(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b838a:;
			{
				_1b492e0c7_tuple(_self_, _27325_buf, _1b2db5b04_Tup(_27352_k));
				return;;
			}
		}
		else if ((_1b2db4064_Sptr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b8401:;
			{
				_1b492e79d_sptr(_self_, _27325_buf, _1b2db4064_Sptr(_27352_k));
				return;;
			}
		}
		else if ((_1b2db42ea_Ptr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b8478:;
			{
				_1b492eb11_ptr(_self_, _27325_buf, _1b2db42ea_Ptr(_27352_k));
				return;;
			}
		}
		else if ((_1b2db4581_Enum(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b8500:;
			{
				_1b492ee74_enumDecl(_self_, _27325_buf, _1b2db4581_Enum(_27352_k));
				return;;
			}
		}
		else if ((_1b2db4817_TypeEnum(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b8577:;
			{
				_1b49302d7_typeEnumDecl(_self_, _27325_buf, _1b2db4817_TypeEnum(_27352_k));
				return;;
			}
		}
		else if ((_1b2db4d34_Slc(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b85ee:;
			{
				_1b49309ad_slice(_self_, _27325_buf, _1b2db4d34_Slc(_27352_k));
				return;;
			}
		}
		else if ((_1b2db586d_Map(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b8676:;
			{
				_1b4930d21_mapType(_self_, _27325_buf, _1b2db586d_Map(_27352_k));
				return;;
			}
		}
		else if ((_1b2db55d7_Trait(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b86ed:;
			{
				_20d8d4ac2_WriteStr(_27325_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1b2db4a9d_Arr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b8775:;
			{
				_1b493185a_array(_self_, _27325_buf, _1b2db4a9d_Arr(_27352_k));
				return;;
			}
		}
		else if ((_1b2db50ba_Fn(_27352_k.ptr()) != nullptr)) {
			_case_begin_1b86b87ec:;
			{
				_1b4932dcd_func(_self_, _27325_buf, _1b2db50ba_Fn(_27352_k));
				return;;
			}
		}
		_match_end_1b86b8027:;
	};
	{
		auto &_match_expr{ (*(_27352_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data29)) {
			_case_begin_1b86b8885:;
			{
				_20d8d4ac2_WriteStr(_27325_buf, (*((*(_27352_k))._field_Kind.cast_ptr<_1b492c449_customType>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data29)))._field_kind);
			}
		}
		else {
			_case_begin_1b86c1e43:;
			{
				_20d8d4ac2_WriteStr(_27325_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1b86c1dcc:;
	};
}








inline jule::Bool _1b4935b28_resultCoder_eq(_1b4935b28_resultCoder *_self_, _1b4935b28_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1b4935b28_resultCoder> static__1b4936134_new(jule::Ptr<_1b492d03d_typeCoder>* _34121_tc) {
	return jule::new_ptr<_1b4935b28_resultCoder>(_1b4935b28_resultCoder{._field_tc=(*(_34121_tc))});;
}



inline void _1b4936497_ptr(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _34524_s, jule::Ptr<_1b2dc1a33_Ptr> _34549_p) {
	_20d8d4ac2_WriteStr(_34524_s, jule::Str::lit("p", 1));
	_1b4937d7d_codeMut(_self_, _34524_s, &((*(_34549_p))._field_Elem));
}



inline void _1b493680a_sptr(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _35025_s, jule::Ptr<_1b2dbd26b_Sptr> _35050_p) {
	_20d8d4ac2_WriteStr(_35025_s, jule::Str::lit("x", 1));
	_1b4937d7d_codeMut(_self_, _35025_s, &((*(_35050_p))._field_Elem));
}



inline void _1b4936b6d_mapType(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _35528_s, jule::Ptr<_1b2dc03d3_Map> _35553_p) {
	_20d8d4ac2_WriteStr(_35528_s, jule::Str::lit("m", 1));
	_1b4937d7d_codeMut(_self_, _35528_s, &((*(_35553_p))._field_Key));
	_1b4937d7d_codeMut(_self_, _35528_s, &((*_35553_p.alloc)._field_Val));
}



inline void _1b4936ed1_slice(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _36126_s, jule::Ptr<_1b2dbdc3e_Slc> _36151_slc) {
	_20d8d4ac2_WriteStr(_36126_s, jule::Str::lit("s", 1));
	_1b4937d7d_codeMut(_self_, _36126_s, &((*(_36151_slc))._field_Elem));
}



inline void _1b4937344_arr(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _36624_s, jule::Ptr<_1b2dc1060_Arr> _36649_arr) {
	_20d8d4ac2_WriteStr(_36624_s, jule::Str::lit("a", 1));
	_20d8d4ac2_WriteStr(_36624_s, _1cab28d49_FmtInt(static_cast<jule::I64>((*(_36649_arr))._field_N), 16LL));
	_1b4937d7d_codeMut(_self_, _36624_s, &((*_36649_arr.alloc)._field_Elem));
}



inline void _1b49376a7_func(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _37225_s, jule::Ptr<_1b2bdda70_FnIns> _37250_f) {
	_20d8d4ac2_WriteStr(_37225_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_37250_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b86c93ce:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdc91a_ParamIns> _37415_p = *it;
			{
				if ((*((*(_37415_p))._field_Decl))._field_Reference) {
					_20d8d4ac2_WriteStr(_37225_s, jule::Str::lit("r", 1));
				};
				_1b4937d7d_codeMut(_self_, _37225_s, &((*_37415_p.alloc)._field_Kind));
			}
			_iter_next_1b86c93ce:;
			++it;
			goto _iter_begin_1b86c93ce;
		}
		_iter_end_1b86c93ce:;
	};
	if (((*_37250_f.alloc)._field_Result != nullptr)) {
		_1b4937d7d_codeMut(_self_, _37225_s, &((*_37250_f.alloc)._field_Result));
	};
}



inline void _1b4937a1a_tup(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _38524_s, jule::Ptr<_1b2dbe833_Tuple> _38549_tup) {
	{
		auto expr = &((*(_38549_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b86cba63:;
		if (it != expr_end) {
			jule::Ptr<_1b2db1627_TypeKind> _38615_t = *it;
			{
				_20d8d4ac2_WriteStr(_38524_s, jule::Str::lit("__jule_tuple_", 13));
				_1b4937d7d_codeMut(_self_, _38524_s, &(_38615_t));
			}
			_iter_next_1b86cba63:;
			++it;
			goto _iter_begin_1b86cba63;
		}
		_iter_end_1b86cba63:;
	};
}



inline void _1b4937d7d_codeMut(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _39228_s, jule::Ptr<_1b2db1627_TypeKind>* _39254_t) {
	if (_1b2db24c4_Binded((*(_39254_t)).ptr())) {
		_20d8d4ac2_WriteStr(_39228_s, jule::Str::lit("b", 1));
		_20d8d4ac2_WriteStr(_39228_s, (*((*(_39254_t))))._field_BindIdent);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39254_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data28)) {
			_case_begin_1b86cd207:;
			{
				_1b4936497_ptr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1b2dc1a33_Ptr>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data23)) {
			_case_begin_1b86cdd95:;
			{
				_1b493680a_sptr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1b2dbd26b_Sptr>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data26)) {
			_case_begin_1b86cde0b:;
			{
				_1b4936b6d_mapType(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1b2dc03d3_Map>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data24)) {
			_case_begin_1b86cde72:;
			{
				_1b4936ed1_slice(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1b2dbdc3e_Slc>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data27)) {
			_case_begin_1b86cded8:;
			{
				_1b4937344_arr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1b2dc1060_Arr>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1)) {
			_case_begin_1b86ce428:;
			{
				_1b49376a7_func(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1b2bdda70_FnIns>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data3)) {
			_case_begin_1b86ce48e:;
			{
				jule::Ptr<_1b2be887c_Enum> _4124_te = (*((*(_39254_t))))._field_Kind.cast_ptr<_1b2be887c_Enum>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data3);;
				static__1b4860beb_toOut(_39228_s, (*(_4124_te))._field_Ident, static_cast<jule::Uintptr>(_4124_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data4)) {
			_case_begin_1b86ce505:;
			{
				jule::Ptr<_1b2bea087_TypeEnum> _4154_te = (*((*(_39254_t))))._field_Kind.cast_ptr<_1b2bea087_TypeEnum>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data4);;
				static__1b4860beb_toOut(_39228_s, (*(_4154_te))._field_Ident, static_cast<jule::Uintptr>(_4154_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)) {
			_case_begin_1b86ce56b:;
			{
				jule::Ptr<_1b2b119c6_StructIns> _4188_si = (*((*(_39254_t))))._field_Kind.cast_ptr<_1b2b119c6_StructIns>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0);;
				static__1b48623c3_structureIns(_39228_s, &(_4188_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data2)) {
			_case_begin_1b86ce5d2:;
			{
				jule::Ptr<_1b2be61c6_Trait> _4218_trt = (*((*(_39254_t))))._field_Kind.cast_ptr<_1b2be61c6_Trait>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data2);;
				static__1b4861a10_traitDecl(_39228_s, _4218_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)) {
			_case_begin_1b86ce648:;
			{
				_20d8d4ac2_WriteStr(_39228_s, (*((*((*(_39254_t))))._field_Kind.cast_ptr<_1b2db9740_Prim>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2db1171_Kind_mptr_data25)) {
			_case_begin_1b86ce6ae:;
			{
				_1b4937a1a_tup(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1b2dbe833_Tuple>((jule::Trait::Type*)&_1b2db1171_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1b86cdd2e:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/type.jule:428:4"));;
			}
		}
		_match_end_1b86cdcb8:;
	};
}



inline void _1b49381e1_codeMut1(_1b4935b28_resultCoder* _self_, _20d8ca601_Builder* _43229_s, jule::Ptr<_1b2db1627_TypeKind>* _43255_t) {
	jule::Ptr<_1b2dbe833_Tuple> _4337_tup = _1b2db5b04_Tup((*(_43255_t)).ptr());;
	if ((_4337_tup != nullptr)) {
		_1b4937a1a_tup(_self_, _43229_s, _4337_tup);
	} else {
		_1b4933241_kind((*(_self_))._field_tc.ptr(), _43229_s, (*(_43255_t)));
	};
}



inline jule::Slice<jule::U8> _1b49384ee_code(_1b4935b28_resultCoder* _self_, jule::Ptr<_1b2db1627_TypeKind>* _44125_t) {
	_20d8ca601_Builder _4427_s = static__20d8cb1c3_New(20LL);;
	_1b4937d7d_codeMut(_self_, &(_4427_s), _44125_t);
	return _20d8d5d6a_Buf(&_4427_s);;
}








inline jule::Bool _1b86da4de_Flag_eq(_1b86da4de_Flag *_self_, _1b86da4de_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b86da346_Name(_1b86da4de_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b86da7ca_What(_1b86da4de_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b86da91d_Reset(_1b86da4de_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b86daa61_Short(_1b86da4de_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b86ddd0b_Flag_eq(_1b86ddd0b_Flag *_self_, _1b86ddd0b_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b86dd987_Name(_1b86ddd0b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b86de0e7_What(_1b86ddd0b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b86de23a_Reset(_1b86ddd0b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b86de37d_Short(_1b86ddd0b_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b86e2518_Flag_eq(_1b86e2518_Flag *_self_, _1b86e2518_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b86e2194_Name(_1b86e2518_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b86e2804_What(_1b86e2518_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b86e2947_Reset(_1b86e2518_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b86e2a8a_Short(_1b86e2518_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b86e5c69_Flag_eq(_1b86e5c69_Flag *_self_, _1b86e5c69_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b86e58e5_Name(_1b86e5c69_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b86e6055_What(_1b86e5c69_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b86e6198_Reset(_1b86e5c69_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b86e62db_Short(_1b86e5c69_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b86e9476_Flag_eq(_1b86e9476_Flag *_self_, _1b86e9476_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b86e9102_Name(_1b86e9476_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b86e9762_What(_1b86e9476_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b86e98a5_Reset(_1b86e9476_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b86e99e8_Short(_1b86e9476_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1b49a6209_FlagSet> static__1b49a6528_New(void) {
	return jule::new_ptr<_1b49a6209_FlagSet>(_1b49a6209_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1b49a69ce_FindFlag(_1b49a6209_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b87042e9:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1b49a4669_CommonFlagMptrData*)_7215_flag.safe_type())->_1b496d9a7_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1b87042e9:;
			++it;
			goto _iter_begin_1b87042e9;
		}
		_iter_end_1b87042e9:;
	};
	return nullptr;;
}



inline jule::Trait _1b49a6d20_FindFlagShort(_1b49a6209_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8704a14:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1b49a4669_CommonFlagMptrData*)_8215_flag.safe_type())->_1b496daea_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1b8704a14:;
			++it;
			goto _iter_begin_1b8704a14;
		}
		_iter_end_1b8704a14:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1b49a73e7_Parse(_1b49a6209_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1b49a8bbd_argParser _1167_ap = _1b49a8bbd_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1b49aa1ec_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1b86e9476_Flag> _1b877614b_addFlagCommon(_1b49a6209_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1b49a69ce_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1b49a6d20_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1b86e9476_Flag> _1407_flag = jule::new_ptr<_1b86e9476_Flag>(_1b86e9476_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1b86e5c69_Flag> _1b8780221_addFlagCommon(_1b49a6209_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1b49a69ce_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1b49a6d20_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1b86e5c69_Flag> _1407_flag = jule::new_ptr<_1b86e5c69_Flag>(_1b86e5c69_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1b877392e_AddVar(_1b49a6209_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1b86e9476_Flag> _1717_flag = _1b877614b_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1b877ca37_AddVar(_1b49a6209_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1b86e5c69_Flag> _1717_flag = _1b8780221_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1b870c247_parseInteger(_1b49a8bbd_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1b87102a0:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_20d8b7665_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1b870eee7:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20d8b7665_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1b870e8a9:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20d8b7665_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1b870e920:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1b870e986:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b870e843:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b870e733:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1b8714d21_parseInteger(_1b49a8bbd_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1b8717e12:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_20d8b7665_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1b8717b59:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20d8b7665_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1b871751b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20d8b7665_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1b8717582:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1b87175e8:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b87174a5:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b8717395:;
	};
	return __jule_func_result;;
}



inline jule::Str _1b49a951a_getData(_1b49a8bbd_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1b49a9790_processFlag(_1b49a8bbd_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data3)) {
			_case_begin_1b87093ed:;
			{
				jule::Ptr<_1b86e5c69_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1b86e5c69_Flag>((jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1b8709387:;
	};
	jule::Str _2203_data = _1b49a951a_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1b49a4669_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1b496d9a7_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type5)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data0)) {
			_case_begin_1b870b301:;
			{
				jule::Ptr<_1b86da4de_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1b86da4de_Flag>((jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1b870c247_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1b8710c51, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1b49a4669_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1b496d9a7_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data1)) {
			_case_begin_1b870ac5c:;
			{
				jule::Ptr<_1b86ddd0b_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1b86ddd0b_Flag>((jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b8714d21_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1b87188b3, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1b49a4669_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1b496d9a7_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data2)) {
			_case_begin_1b870b367:;
			{
				jule::Ptr<_1b86e2518_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1b86e2518_Flag>((jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1cab1e1c4_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1b49a4669_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1b496d9a7_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type5)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data4)) {
			_case_begin_1b870b3cd:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1b86e9476_Flag>((jule::Trait::Type*)&_1b49a4669_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1b870aa92:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1b49a9a48_singleDash(_1b49a8bbd_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1b871e237:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1b49a6d20_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + __jule_strFromRune(_25710_r)), &__jule_any_type5)};
				};
				({
					auto except = _1b49a9790_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1b871e237:;
			it += len;
			goto _iter_begin_1b871e237;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1b49a9d01_doubleDash(_1b49a8bbd_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	jule::Trait _2707_flag = _1b49a69ce_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type5)};
	};
	return _1b49a9790_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1b49a9eee_tryArg(_1b49a8bbd_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1b49a9d01_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1b49a9a48_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1b49aa1ec_parse(_1b49a8bbd_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1b49a9eee_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1b8723e95:;
	}
	_iter_end_1b8723e95:;;
	return jule::VoidExceptional{};
}







inline jule::Ptr<_20db5dbd6_Cmd> static__20db5e126_New(jule::Str _2616_path) {
	return jule::new_ptr<_20db5dbd6_Cmd>(_20db5dbd6_Cmd{._field_attrs=_20dbb7558_cmdAttrs{._field_pid=-1LL}, ._field_path=_2616_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _20db5e324_Spawn(_20db5dbd6_Cmd* _self_) {
	return _20dbb8306_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _20db5e7a8_Wait(_20db5dbd6_Cmd* _self_) {
	return _20dbb878a_wait(_self_);
}



inline jule::VoidExceptional _20dbb8306_spawn(_20db5dbd6_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is already spawned", 35) + jule::Str("\nlocation: std/process/cmd_unix.jule:84:4"));;
	};
	jule::Str _863_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _877_pipe;;
	if ((pipe((&(_877_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	if ((_227e32028_Fcntl(static_cast<jule::I64>(_877_pipe[1LL]), F_SETFD, (fcntl(static_cast<jule::I64>(_877_pipe[1LL]), F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_227e39eba_Close(static_cast<jule::I64>(_877_pipe[0LL]));
		_227e39eba_Close(static_cast<jule::I64>(_877_pipe[1LL]));
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1b5a17247:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b5a16433:;
			{
				_227e39eba_Close(static_cast<jule::I64>(_877_pipe[0LL]));
				jule::Slice<jule::Str> _1028_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
				_1028_args[0LL]=_863_path;
				(_1028_args).append((*(_self_))._field_Args);;
				({
					auto except = _20dbb8070_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_20dbb7d3e_execvp(&(_863_path), &(_1028_args));
				jule::Str _1074_code = _20dbb37eb_Itoa(_227d87ea1_GetLastErrno());;
				{
					_227e3a372_Write(static_cast<jule::I64>(_877_pipe[1LL]), (&(_1074_code[0LL])), static_cast<jule::U64>(_1074_code.len()));
				};
				_227e39eba_Close(static_cast<jule::I64>(_877_pipe[1LL]));
				_20dbb98ac_Exit(1LL);
			}
		}
		else {
			_case_begin_1b5a0e0a7:;
			{
				_227e39eba_Close(static_cast<jule::I64>(_877_pipe[1LL]));
				jule::Array<jule::U8,16> _11312_buf = ({ auto __jule_collection = jule::Array<jule::U8,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
				jule::I64 _1144_n = _227e39ae1_Read(static_cast<jule::I64>(_877_pipe[0LL]), (&(_11312_buf[0LL])), static_cast<jule::U64>(16LLU));;
				_227e39eba_Close(static_cast<jule::I64>(_877_pipe[0LL]));
				if ((_1144_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _1185_code;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20dbaa2a4_AtoiBp((&(_11312_buf[0LL])), _1144_n);
						_1185_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_20dbb9071_processErrorFromCode(_1185_code), &__jule_any_type0)};
				};
			}
		}
		_match_end_1b5a14123:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _20dbb878a_wait(_20db5dbd6_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is not spawned", 31) + jule::Str("\nlocation: std/process/cmd_unix.jule:136:4"));;
	};
	jule::I64 _1387_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_1387_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_20dbb91e7_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>{.result=WEXITSTATUS(_1387_stat)};;
}







inline __jule_tuple_x_1b3865075_IR__jule_tuple_s_20daa5e91_Log static__1b386554d_Build(jule::Str _3018_path, jule::I64 _3029_flags) {
	__jule_tuple_x_1b3865075_IR__jule_tuple_s_20daa5e91_Log __jule_func_result;
	jule::Ptr<_1b3862627_Importer> _317_importer = static__1b3862a56_New(_1b3867000_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1b2adb52d_AST>> _337_files;
	jule::Slice<_20daa5e91_Log> _3318_logs;
	({
		__jule_tuple_sx_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b3864041_ImportPackage(_317_importer.ptr(), _3018_path, true);
		_337_files = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Str _373_root = _3018_path;;
	if ((_337_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2adb52d_AST> _457_firstFile = _337_files[0LL];;
	_1b38672a8_pushRuntimeToAST(&(_457_firstFile));
	jule::Ptr<_1b2cd7691_Package> _487_pkg;
	({
		__jule_tuple_x_1b2cd7691_Package__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b2dd3407_AnalyzePackage(_337_files, jule::Trait(_317_importer, (jule::Trait::Type*)&_1b2cd1e1b_Importer_mptr_data0), _3029_flags);
		_487_pkg = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1b3865075_IR> _537_ir = jule::new_ptr<_1b3865075_IR>(_1b3865075_IR{._field_Root=_373_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_487_pkg, ._field_Runtime=jule::Ptr<_1b2cd4e1e_ImportInfo>(nullptr), ._field_Used=_1b3862cdc_AllPackages(_317_importer), ._field_Ordered=_1b3870129_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr)}});;
	(*(_537_ir))._field_Passes=_1b3866ce1_getAllUniquePasses(&((*_537_ir.alloc)._field_Main), (*_537_ir.alloc)._field_Used);
	(*_537_ir.alloc)._field_Runtime=(*((*(_487_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _537_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b3865a37_appendStructs(_1b3865075_IR* _self_, jule::Ptr<_1b2cd7691_Package>* _6830_p, jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>* _6854_buffer) {
	{
		auto expr = &((*((*(_6830_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b5aaa3:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _6915_f = *it;
			{
				{
					auto expr = &((*(_6915_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7b5b510:;
					if (it != expr_end) {
						jule::Ptr<_1b2b0db6b_Struct> _7016_s = *it;
						{
							if ((!((*(_7016_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push(_7016_s); };
							};
						}
						_iter_next_1b7b5b510:;
						++it;
						goto _iter_begin_1b7b5b510;
					}
					_iter_end_1b7b5b510:;
				};
			}
			_iter_next_1b7b5aaa3:;
			++it;
			goto _iter_begin_1b7b5aaa3;
		}
		_iter_end_1b7b5aaa3:;
	};
}



inline jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _1b3865cbd_GetAllStructures(_1b3865075_IR* _self_) {
	jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _8111_buffer = nullptr;;
	_1b3865a37_appendStructs(_self_, &((*(_self_))._field_Main), &(_8111_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b5c6ba:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _8315_u = *it;
			{
				if ((!((*(_8315_u))._field_Binded))) {
					_1b3865a37_appendStructs(_self_, &((*_8315_u.alloc)._field_Package), &(_8111_buffer));
				};
			}
			_iter_next_1b7b5c6ba:;
			++it;
			goto _iter_begin_1b7b5c6ba;
		}
		_iter_end_1b7b5c6ba:;
	};
	return _8111_buffer;;
}



inline void _1b3866131_appendGlobals(_1b3865075_IR* _self_, jule::Ptr<_1b2cd7691_Package>* _9130_p, jule::Slice<jule::Ptr<_1b2d26ca7_Var>>* _9154_buffer) {
	{
		auto expr = &((*((*(_9130_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b5dd4d:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _9215_f = *it;
			{
				{
					auto expr = &((*(_9215_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7b5e7aa:;
					if (it != expr_end) {
						jule::Ptr<_1b2d26ca7_Var> _9316_v = *it;
						{
							if (((((*(_9316_v))._field_Token != nullptr) && (!((*_9316_v.alloc)._field_Binded))) && (!((*_9316_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1b2d26ca7_Var>> &__jule_push_dest = (*(_9154_buffer)); __jule_push_dest.push(_9316_v); };
							};
						}
						_iter_next_1b7b5e7aa:;
						++it;
						goto _iter_begin_1b7b5e7aa;
					}
					_iter_end_1b7b5e7aa:;
				};
			}
			_iter_next_1b7b5dd4d:;
			++it;
			goto _iter_begin_1b7b5dd4d;
		}
		_iter_end_1b7b5dd4d:;
	};
}



inline jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _1b38663b7_GetAllGlobals(_1b3865075_IR* _self_) {
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _10411_buffer = nullptr;;
	_1b3866131_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10411_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b611d5:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _10615_u = *it;
			{
				if ((!((*(_10615_u))._field_Binded))) {
					_1b3866131_appendGlobals(_self_, &((*_10615_u.alloc)._field_Package), &(_10411_buffer));
				};
			}
			_iter_next_1b7b611d5:;
			++it;
			goto _iter_begin_1b7b611d5;
		}
		_iter_end_1b7b611d5:;
	};
	return _10411_buffer;;
}



inline void _1b38665b5_Order(_1b3865075_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1b38663b7_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1b3865cbd_GetAllStructures(_self_);
	_1b7b62cdb_order((*(_self_))._field_Ordered._field_Globals);
	_1b7b638be_order((*(_self_))._field_Ordered._field_Structs);
}











inline void _227de204e_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _227e22832_BytePtrToStr(jule::U8* _6524_s) {
	if ((_6524_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _696_n = 0LL;;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {};
	};
	if ((_696_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _776_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_696_n, _696_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_696_n=0LL;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {
			{
				_776_buf[_696_n]=_6524_s[_696_n];
			}
		_iter_next_1b49d3027:;
		}
		_iter_end_1b49d3027:;;
	};
	return __jule_bytesToStr(_776_buf);;
}



inline jule::Slice<jule::U8> _227e22ab8_StrToBytes(jule::Str _9015_s) {
	{
		auto expr = &(_9015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b49d3522:;
		if (it != expr_end) {
			jule::I64 _916_i = it - expr->begin();
			jule::U8 *_919_b = it;
			{
				if (((*(_919_b)) == 0LLU)) {
					jule::Slice<jule::U8> _938_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_916_i + 1LL), (_916_i + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
					jule::copy(_938_bytes, _9015_s.slice(0LL, _938_bytes.len()));
					return _938_bytes;;
				};
			}
			_iter_next_1b49d3522:;
			++it;
			_916_i++;
			goto _iter_begin_1b49d3522;
		}
		_iter_end_1b49d3522:;
	};
	jule::Slice<jule::U8> _986_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_9015_s.len() + 1LL), (_9015_s.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_986_bytes, _9015_s);
	return _986_bytes;;
}



inline jule::I64 _227d87ea1_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _227e32028_Fcntl(jule::I64 _5510_handle, jule::I64 _5523_cmd, jule::I64 _5533_arg) {
	return fcntl(_5510_handle, _5523_cmd, _5533_arg);;
}



inline jule::I64 _227e3239c_Stat(jule::U8* _6016_path, struct stat* _6033_stat) {
	return stat(((char*)(_6016_path)), _6033_stat);;
}



inline jule::I64 _227e327cb_Open(jule::U8* _6516_path, jule::I64 _6529_flag, jule::I64 _6540_mode) {
	return open(((char*)(_6516_path)), _6529_flag, _6540_mode);;
}



inline jule::U8* _227e32b50_Getcwd(jule::U8* _7118_buff, jule::U64 _7131_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7118_buff)), _7131_bufflen)));;
}



inline DIR* _227e3314a_Opendir(jule::U8* _7619_path) {
	return opendir(((char*)(_7619_path)));;
}



inline struct dirent* _227e33326_Readdir(DIR* _7923_dir) {
	return readdir(_7923_dir);;
}



inline jule::I64 _227e335bd_Closedir(DIR* _8224_dir) {
	return closedir(_8224_dir);;
}



inline jule::I64 _227e33ec5_Mkdir(jule::U8* _9117_path, jule::I64 _9130_mode) {
	return mkdir(((char*)(_9117_path)), _9130_mode);;
}



inline jule::I64 _227e3428e_Rmdir(jule::U8* _9617_path) {
	return rmdir(((char*)(_9617_path)));;
}



inline jule::I64 _227e34558_Unlink(jule::U8* _9918_path) {
	return unlink(((char*)(_9918_path)));;
}



inline jule::I64 _227e39ae1_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _227e39eba_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _227e3a372_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _227e3a5a3_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _227e71562_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1b4a3a2d2_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _227e7c3d6_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1b4a3a2d2_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _227e7c66c_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _227e71562_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _227e7c936_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline __jule_tuple_i32__jule_tuple_int _2280963ce_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _228095147_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_2280956ec_acceptRange _1962_accept = _228095a93_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _228096720_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _228095147_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_2280956ec_acceptRange _2432_accept = _228095a93_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _228096c70_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_22809848b_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1b4a7b7a7;
			};
		}
	_iter_next_1b4a7b7a7:;
	}
	_iter_end_1b4a7b7a7:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096720_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _2280977ba_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _228097b3e_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _228097b3e_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1b4a8aa3b:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1b4a896e9:;
			{
				_41242_r=128LL;
				goto _case_begin_1b4a89760;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1b4a89760:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1b4a88e8a:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1b4a88e13:;
	};
}



inline jule::I64 _2280981c2_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1b4a93d52;
			};
			jule::U8 _4823_x = _228095147_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1b4a93d52;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1b4a93d52;
			};
			_2280956ec_acceptRange _4923_accept = _228095a93_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1b4a93d52:;
	}
	_iter_end_1b4a93d52:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _22809848b_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _20c54d3eb_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _20c555c83_Len64(_6119_x));;
}



inline jule::I64 _20c54e342_TrailingZeros(jule::U64 _8318_x) {
	;
	return _20c54eee1_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _20c54ec27_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_20c54da39__DE_BRUIJN32_TAB[static_cast<jule::I64>(((jule::U32)((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _20c54eee1_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_20c54e0cd__DE_BRUIJN64_TAB[static_cast<jule::I64>(((jule::U64)((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _20c5559b9_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x=(_35214_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x=(_35214_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _20c555c83_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x=(_36614_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x=(_36614_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x=(_36614_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _20c556a20_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _20c558329_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5012_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5022_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5032_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5042_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5052_w0 = (jule::U64)(_5012_x0 * _5032_y0);;
	jule::U64 _5062_t = (jule::U64)((jule::U64)(_5022_x1 * _5032_y0) + (_5052_w0 >> 32LLU));;
	jule::U64 _5076_w1 = (_5062_t & 4294967295LLU);;
	jule::U64 _5082_w2 = (_5062_t >> 32LLU);;
	_5076_w1+=(jule::U64)(_5012_x0 * _5042_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5022_x1 * _5042_y1) + _5082_w2) + (_5076_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _22809cd0e__coSpawn(_1319_func, _1334_args);;
}



inline jule::I64 _225e8c827_randInt(jule::U64 _716_seed, jule::I64 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U64 _172_p2 = static_cast<jule::U64>(_162_p1);;
	return ({ jule::I64 __jule_x = static_cast<jule::I64>((({ jule::U64 __jule_x = _172_p2; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I64 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); });;
}



inline jule::Bool _1b4c26da3_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1b4c28b52:;
	}
	_iter_end_1b4c28b52:;;
	return true;;
}

inline jule::Bool _1b4c7a2be_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1b4c7b9b8:;
	}
	_iter_end_1b4c7b9b8:;;
	return true;;
}

inline jule::Bool _1b5cc8d11_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1b5cca4b6:;
	}
	_iter_end_1b5cca4b6:;;
	return true;;
}

inline jule::Bool _1b7ed4646_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1b7ed63a1:;
	}
	_iter_end_1b7ed63a1:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void _227e63b5e__handleRW(jule::Slice<jule::U8>* _1615_b) {
	if (((*(_1615_b)).len() > 1073741824LL)) {
		{
			((*((&((*(_1615_b))))))).mut_slice(0LL, 1073741824LLU);;
		};
	};
}



inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2520_buf) {
	if ((_2520_buf.len() == 0LL)) {
		return 0LL;;
	};
	_22809ae50_handleRW(&(_2520_buf));
	return _227e3a372_Write(static_cast<jule::I64>(_227e312ad_STDOUT), (&(_2520_buf[0LL])), static_cast<jule::U64>(_2520_buf.len()));;
}



inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3620_buf) {
	if ((_3620_buf.len() == 0LL)) {
		return 0LL;;
	};
	_22809ae50_handleRW(&(_3620_buf));
	return _227e3a372_Write(static_cast<jule::I64>(_227e31599_STDERR), (&(_3620_buf[0LL])), static_cast<jule::U64>(_3620_buf.len()));;
}



inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf) {
	if ((_4718_buf.len() == 0LL)) {
		return 0LL;;
	};
	_22809ae50_handleRW(&(_4718_buf));
	return _227e3a372_Write(static_cast<jule::I64>(_227e30e7d_STDIN), (&(_4718_buf[0LL])), static_cast<jule::U64>(_4718_buf.len()));;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n) {
	__jule_writeStderr(_227e7c3d6_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1b4a3a2d2_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_227e7c3d6_StrBytes(jule::Str::lit("\n", 1)));
	_227e3a5a3_Exit(2LL);
}



inline jule::U64 _1b4b76b16_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo) {
	jule::U64 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U64 _1b4b76cd1_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo) {
	jule::U64 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Str _227e84564_executable(void) {
	jule::Slice<jule::U8> _146_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4096LL, 4096LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::Str _152_p = jule::Str::lit("/proc/self/exe", 14);;
	jule::I64 _162_n = readlink(((char*)((&(_152_p[0LL])))), ((char*)((&(_146_buf[0LL])))), _146_buf.len());;
	if ((_162_n != -1LL)) {
		(_146_buf).mut_slice(0LL, _162_n);;
		return _227e7c936_StrFromBytes(_146_buf);;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_linux.jule:21:2"));;
}



inline jule::U64* __jule_RCNew(void) {
	;
	;
	jule::U64* _256_p = ((jule::U64*)(malloc(8LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p) {
	return _1b4b76b16_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U64* _6328_p) {
	_1b4b76cd1_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p) {
	return (_1b4b76cd1_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U64* _9219_p) {
	free(_9219_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I64>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1b4b7d326:;
	}
	_iter_end_1b4b7d326:;;
	jule::I64 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1b4b7da63:;
	}
	_iter_end_1b4b7da63:;;
	return _227e7c936_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _522_n = _227e8d66c_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _227e7c936_StrFromBytes(_516_buf);;
}



inline jule::I64 _227e8d66c_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I64 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1b4b84041:;
	}
	_iter_end_1b4b84041:;;
	jule::I64 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_227e8e816_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	if ((_8017_f > jule::MAX_F64)) {
		return jule::Str::lit("+Inf", 4);;
	};
	if ((_8017_f < jule::MIN_F64)) {
		return jule::Str::lit("-Inf", 4);;
	};
	;
	jule::I64 _942_n = 26LL;;
	jule::Slice<jule::U8> _956_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_942_n, _942_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _966_j = 0LL;;
	if ((_8017_f < 0LL)) {
		_956_buf[0LL]='-';
		(_966_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _1032_intPart = static_cast<jule::U64>(_8017_f);;
	_966_j+=_227e8d66c_u64ToBuf(_956_buf.slice(_966_j), _1032_intPart);
	_956_buf[_966_j]='.';
	jule::F64 _1076_fracPart = (_8017_f - static_cast<jule::F64>(_1032_intPart));;
	jule::I64 _1086_i = 0LL;;
	for (; (_1086_i < 4LL); (_1086_i)++) {
		{
			_1076_fracPart*=10LL;
			jule::I64 _1113_digit = static_cast<jule::I64>(_1076_fracPart);;
			(_966_j)++;
			_956_buf[_966_j]=static_cast<jule::U8>(('0' + _1113_digit));
			_1076_fracPart-=static_cast<jule::F64>(_1113_digit);
		}
	_iter_next_1b4b89d27:;
	}
	_iter_end_1b4b89d27:;;
	for (; (_966_j >= 0LL); (_966_j)--) {
		{
			if ((_956_buf[_966_j] != '0')) {
				goto _iter_end_1b4b8abb3;
			};
		}
	_iter_next_1b4b8abb3:;
	}
	_iter_end_1b4b8abb3:;;
	if ((_956_buf[_966_j] != '.')) {
		(_966_j)++;
	};
	(_956_buf).mut_slice(0LL, _966_j);;
	return _227e7c936_StrFromBytes(_956_buf);;
}



inline jule::Str _1b8745736_arrToStr(jule::Slice<jule::U8> _13316_x) {
	jule::Slice<jule::U8> _1346_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1346_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_13316_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8746a01:;
		if (it != expr_end) {
			jule::I64 _1366_i = it - expr->begin();
			jule::U8 *_1369_z = it;
			{
				if ((_1366_i > 0LL)) {
					(_1346_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1346_buf).append(_1b4c00e7b_toStr((*(_1369_z))));;
			}
			_iter_next_1b8746a01:;
			++it;
			_1366_i++;
			goto _iter_begin_1b8746a01;
		}
		_iter_end_1b8746a01:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1346_buf; __jule_push_dest.push(']'); };
	return _227e7c936_StrFromBytes(_1346_buf);;
}



inline jule::Str _1b873a5c7_structToStr(_20d8ca601_Builder _16619_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1b873d60d:;
				{
					;
					{
						
{
							_case_begin_1b873e796:;
							{
								;
								;
							}
						}
						_match_end_1b873e477:;
					};
				}
			}
			_match_end_1b873cba1:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1876_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1876_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1b8741677:;
				{
					(_1876_buf).append(_1b8741e5d_toStr(_16619_x._field_buf));;
				}
			}
			_match_end_1b87415cd:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1876_buf; __jule_push_dest.push('}'); };
	return _227e7c936_StrFromBytes(_1876_buf);;
}



inline jule::Str _1b4bda1b8_toStr(jule::Any _20713_x) {
	;
	{
		
{
			_case_begin_1b4bdb3ea:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4bdb30c:;
	};
	{
		
{
			_case_begin_1b4bdb917:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _20713_x.type->to_str(_20713_x.data.alloc);;
			}
		}
		_match_end_1b4bdb7a2:;
	};
}

inline jule::Str _1b4bdc396_toStr(jule::Str _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4bdd5d9:;
			{
				return _20713_x;;
			}
		}
		_match_end_1b4bdd573:;
	};
}

inline jule::Str _1b4bdcae4_toStr(jule::I64 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4be1125:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_20713_x));;
			}
		}
		_match_end_1b4be1037:;
	};
}

inline jule::Str _1b4be2852_toStr(jule::I8 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4be3aa6:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_20713_x));;
			}
		}
		_match_end_1b4be39b8:;
	};
}

inline jule::Str _1b4be0586_toStr(jule::I16 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4be6537:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_20713_x));;
			}
		}
		_match_end_1b4be6449:;
	};
}

inline jule::Str _1b4be7c64_toStr(jule::I32 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4be9051:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_20713_x));;
			}
		}
		_match_end_1b4be8e63:;
	};
}

inline jule::Str _1b4bea74a_toStr(jule::I64 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4beba6a:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_20713_x));;
			}
		}
		_match_end_1b4beb97c:;
	};
}

inline jule::Str _1b4bed297_toStr(jule::U64 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4bee573:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1b4bee40d:;
	};
}

inline jule::Str _1b4beacab_toStr(jule::Uintptr _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4c019b5:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1b4c01850:;
	};
}

inline jule::Str _1b4c00e7b_toStr(jule::U8 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4c03e07:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1b4c03c92:;
	};
}

inline jule::Str _1b4c033bd_toStr(jule::U16 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4c06349:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1b4c061d4:;
	};
}

inline jule::Str _1b4c05810_toStr(jule::U32 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4c0878b:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1b4c08626:;
	};
}

inline jule::Str _1b4c07c52_toStr(jule::U64 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4c0ad21:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1b4c0abab:;
	};
}

inline jule::Str _1b4c0b12e_toStr(jule::F32 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4c0d32e:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_20713_x));;
			}
		}
		_match_end_1b4c0d142:;
	};
}

inline jule::Str _1b4c0a1d8_toStr(jule::F64 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4c103a8:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_20713_x));;
			}
		}
		_match_end_1b4c101ee:;
	};
}

inline jule::Str _1b4be813d_toStr(jule::Bool _20713_x) {
	;
	;
	{
		
{
			_case_begin_1b4c12256:;
			{
				return __jule_boolToStr(_20713_x);;
			}
		}
		_match_end_1b4c11ed1:;
	};
}

inline jule::Str _1b4bdaa59_toStr(jule::I64 _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b4c13da1:;
			{
				return _1b4bdcae4_toStr(_20713_x);;
			}
		}
		_match_end_1b4c12e8d:;
	};
}

inline jule::Str _1b59c10be_toStr(jule::I64 _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b59c2ab5:;
			{
				return _1b4bdcae4_toStr(_20713_x);;
			}
		}
		_match_end_1b59c24bb:;
	};
}

inline jule::Str _1b5a0e67e_toStr(jule::I64 _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b5a11175:;
			{
				return _1b4bdcae4_toStr(_20713_x);;
			}
		}
		_match_end_1b5a10a7b:;
	};
}

inline jule::Str _1b5d68279_toStr(jule::I64 _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b5d69c70:;
			{
				return _1b4bdcae4_toStr(_20713_x);;
			}
		}
		_match_end_1b5d69676:;
	};
}

inline jule::Str _1b650db3e_toStr(jule::Ptr<_1b2d26ca7_Var> _20713_x) {
	;
	{
		
{
			_case_begin_1b650ed2c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b650ec3e:;
	};
	;
	{
		
{
			_case_begin_1b65107cd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b651049d:;
	};
}

inline jule::Str _1b6510d0b_toStr(jule::Ptr<_1b2db0835_TypeAlias> _20713_x) {
	;
	{
		
{
			_case_begin_1b651369e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b65135b1:;
	};
	;
	{
		
{
			_case_begin_1b6514150:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6513d20:;
	};
}

inline jule::Str _1b651479e_toStr(jule::Ptr<_1b2b0db6b_Struct> _20713_x) {
	;
	{
		
{
			_case_begin_1b6517087:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6516e99:;
	};
	;
	{
		
{
			_case_begin_1b6517a38:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6517708:;
	};
}

inline jule::Str _1b6518066_toStr(jule::Ptr<_1b2bda9b2_Fn> _20713_x) {
	;
	{
		
{
			_case_begin_1b651a909:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b651a81b:;
	};
	;
	{
		
{
			_case_begin_1b651b3aa:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b651b07a:;
	};
}

inline jule::Str _1b651bb08_toStr(jule::Ptr<_1b2be61c6_Trait> _20713_x) {
	;
	{
		
{
			_case_begin_1b651e4bd:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b651e3d0:;
	};
	;
	{
		
{
			_case_begin_1b651ee6e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b651eb3e:;
	};
}

inline jule::Str _1b651bde4_toStr(jule::Ptr<_1b2be887c_Enum> _20713_x) {
	;
	{
		
{
			_case_begin_1b6522a76:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6522988:;
	};
	;
	{
		
{
			_case_begin_1b6523527:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6523208:;
	};
}

inline jule::Str _1b6524acd_toStr(jule::Ptr<_1b2bea087_TypeEnum> _20713_x) {
	;
	{
		
{
			_case_begin_1b6526052:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6525e64:;
	};
	;
	{
		
{
			_case_begin_1b6526a03:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b65266d4:;
	};
}

inline jule::Str _1b6542238_toStr(jule::Ptr<_1b2b0ac78_Field> _20713_x) {
	;
	{
		
{
			_case_begin_1b6543426:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6543338:;
	};
	;
	{
		
{
			_case_begin_1b6543dc7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6543a97:;
	};
}

inline jule::Str _1b6554327_toStr(jule::Ptr<_1b2b6c23a_Const> _20713_x) {
	;
	{
		
{
			_case_begin_1b6555515:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6555427:;
	};
	;
	{
		
{
			_case_begin_1b6555eb6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6555b86:;
	};
}

inline jule::Str _1b656d52d_toStr(jule::Ptr<_1b2be7d32_EnumItem> _20713_x) {
	;
	{
		
{
			_case_begin_1b656e70a:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b656e61c:;
	};
	;
	{
		
{
			_case_begin_1b65701ab:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b656ed7b:;
	};
}

inline jule::Str _1b657eb27_toStr(jule::Ptr<_1b2bd8edd_Param> _20713_x) {
	;
	{
		
{
			_case_begin_1b4c10067:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4c0ee68:;
	};
	;
	{
		
{
			_case_begin_1b6582212:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b658191a:;
	};
}

inline jule::Str _1b66695d5_toStr(jule::Str _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b666b10e:;
			{
				return _1b4bdc396_toStr(_20713_x);;
			}
		}
		_match_end_1b666aa15:;
	};
}

inline jule::Str _1b6741206_toStr(jule::Ptr<_1b2add9e7_IdentTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b67423b1:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b67422c3:;
	};
	;
	{
		
{
			_case_begin_1b6742c85:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6743329:;
	};
}

inline jule::Str _1b675d234_toStr(jule::Ptr<_1b2bd3c0d_TupleExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b675e224:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b675e136:;
	};
	;
	{
		
{
			_case_begin_1b675ebc5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b675e895:;
	};
}

inline jule::Str _1b67606dc_toStr(jule::Ptr<_1b2ae3315_TupleExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b676306e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6762e81:;
	};
	;
	{
		
{
			_case_begin_1b6763a20:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b67636e0:;
	};
}

inline jule::Str _1b6770576_toStr(jule::Ptr<_1b2aebd8a_AssignSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b6771654:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6771566:;
	};
	;
	{
		
{
			_case_begin_1b6772105:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6771cc5:;
	};
}

inline jule::Str _1b677305c_toStr(jule::Ptr<_1b2ae2721_Expr> _20713_x) {
	;
	{
		
{
			_case_begin_1b677479a:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b67746ac:;
	};
	;
	{
		
{
			_case_begin_1b677524b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6774e1b:;
	};
}

inline jule::Str _1b6776082_toStr(jule::Ptr<_1b2ca7b28_Postfix> _20713_x) {
	;
	{
		
{
			_case_begin_1b6777b66:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6777a78:;
	};
	;
	{
		
{
			_case_begin_1b6778617:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b67782e8:;
	};
}

inline jule::Str _1b67798d2_toStr(jule::Ptr<_1b2ca80ce_Assign> _20713_x) {
	;
	{
		
{
			_case_begin_1b6779041:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6778e53:;
	};
	;
	{
		
{
			_case_begin_1b677b681:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b677912e:;
	};
}

inline jule::Str _1b6779ad0_toStr(jule::Ptr<_1b2ca8585_MultiAssign> _20713_x) {
	;
	{
		
{
			_case_begin_1b677bae3:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b677ba05:;
	};
	;
	{
		
{
			_case_begin_1b677e233:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b677bbd1:;
	};
}

inline jule::Str _1b6780234_toStr(jule::Ptr<_1b2d7dc21_Data> _20713_x) {
	;
	{
		
{
			_case_begin_1b677e83d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b677e750:;
	};
	;
	{
		
{
			_case_begin_1b6781a2c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6781686:;
	};
}

inline jule::Str _1b6782b1b_toStr(jule::Ptr<_1b2bd0600_FnCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b6784722:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6784634:;
	};
	;
	{
		
{
			_case_begin_1b67851c3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6784d93:;
	};
}

inline jule::Str _1b67b3ce5_toStr(jule::Ptr<_1b2ca70de_Label> _20713_x) {
	;
	{
		
{
			_case_begin_1b67b4ea0:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b67b4db2:;
	};
	;
	{
		
{
			_case_begin_1b67b5951:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b67b5621:;
	};
}

inline jule::Str _1b67d25b6_toStr(jule::Ptr<_1b2ca4592_Scope> _20713_x) {
	;
	{
		
{
			_case_begin_1b67d37a4:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b67d36b6:;
	};
	;
	{
		
{
			_case_begin_1b67d4255:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b67d3e25:;
	};
}

inline jule::Str _1b67dba32_toStr(jule::Ptr<_1b2bd686a_BuiltinErrorCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b67dcbba:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b67dcacc:;
	};
	;
	{
		
{
			_case_begin_1b67dd66b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b67dd33b:;
	};
}

inline jule::Str _1b67e1196_toStr(jule::Ptr<_1b2bd787c_BackendEmitExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b67e21ec:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b67e210e:;
	};
	;
	{
		
{
			_case_begin_1b67e2b9d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b67e286d:;
	};
}

inline jule::Str _1b67e186c_toStr(jule::Ptr<_1b2bd55e4_BuiltinAppendCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b67e371a:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b67e362c:;
	};
	;
	{
		
{
			_case_begin_1b67e5909:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b67e5563:;
	};
}

inline jule::Str _1b67e4221_toStr(jule::Ptr<_1b2bd40d7_BuiltinOutCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b67e62bc:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b67e61ce:;
	};
	;
	{
		
{
			_case_begin_1b67e890c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b67e63aa:;
	};
}

inline jule::Str _1b67e97ba_toStr(jule::Ptr<_1b2bd44b1_BuiltinOutlnCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b67e8d6e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b67e8c81:;
	};
	;
	{
		
{
			_case_begin_1b67eb4ae:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b67e8e5c:;
	};
}

inline jule::Str _1b67ec36c_toStr(jule::Ptr<_1b2bd4c64_BuiltinPanicCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b67eb921:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b67eb833:;
	};
	;
	{
		
{
			_case_begin_1b67ee061:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b67eba0e:;
	};
}

inline jule::Str _1b67eee1e_toStr(jule::Ptr<_1b2bd6491_BuiltinCopyCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b67ee4c3:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b67ee3d5:;
	};
	;
	{
		
{
			_case_begin_1b6801b13:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b67ee5b1:;
	};
}

inline jule::Str _1b68029c1_toStr(jule::Ptr<_1b2bd60b7_BuiltinDeleteCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b6802075:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6801e87:;
	};
	;
	{
		
{
			_case_begin_1b68046b5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6802163:;
	};
}

inline jule::Str _1b6805573_toStr(jule::Ptr<_1b2bd7b79_FreeExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b68048b3:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6804253:;
	};
	;
	{
		
{
			_case_begin_1b6806a80:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6806860:;
	};
}

inline jule::Str _1b680e945_toStr(jule::Ptr<_1b2ca51ca_Conditional> _20713_x) {
	;
	{
		
{
			_case_begin_1b6810b33:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6810a45:;
	};
	;
	{
		
{
			_case_begin_1b68115d4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b68112a4:;
	};
}

inline jule::Str _1b681a324_toStr(jule::Ptr<_1b2ca54c7_InfIter> _20713_x) {
	;
	{
		
{
			_case_begin_1b681b512:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b681b424:;
	};
	;
	{
		
{
			_case_begin_1b681beb3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b681bb83:;
	};
}

inline jule::Str _1b6821160_toStr(jule::Ptr<_1b2ca597d_WhileIter> _20713_x) {
	;
	{
		
{
			_case_begin_1b682234d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6822260:;
	};
	;
	{
		
{
			_case_begin_1b6822cee:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b68229be:;
	};
}

inline jule::Str _1b6847890_toStr(jule::Ptr<_1b2ca63c9_RangeIter> _20713_x) {
	;
	{
		
{
			_case_begin_1b6848a7d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6848990:;
	};
	;
	{
		
{
			_case_begin_1b684952e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b68491ee:;
	};
}

inline jule::Str _1b68574a4_toStr(jule::Ptr<_1b2b026cb_WhileKind> _20713_x) {
	;
	{
		
{
			_case_begin_1b685865e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6858571:;
	};
	;
	{
		
{
			_case_begin_1b6859110:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6858cd0:;
	};
}

inline jule::Str _1b6859c37_toStr(jule::Ptr<_1b2b030d3_RangeKind> _20713_x) {
	;
	{
		
{
			_case_begin_1b685c4ba:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b685c3cc:;
	};
	;
	{
		
{
			_case_begin_1b685ce6b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b685cb3b:;
	};
}

inline jule::Str _1b687669e_toStr(jule::Ptr<_1b2ca675e_ContSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b687788c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b687779e:;
	};
	;
	{
		
{
			_case_begin_1b687833d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b687800d:;
	};
}

inline jule::Str _1b6880510_toStr(jule::Ptr<_1b2ca774e_GotoSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b68816ed:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6881610:;
	};
	;
	{
		
{
			_case_begin_1b688219e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6881d6e:;
	};
}

inline jule::Str _1b68bb02e_toStr(jule::Ptr<_1b2ae403b_IdentExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b68bc1a6:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b68bc0b8:;
	};
	;
	{
		
{
			_case_begin_1b68bcb57:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b68bc827:;
	};
}

inline jule::Str _1b68d09a0_toStr(jule::Ptr<_1b2bd0e80_IndexingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b6581057:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6580e58:;
	};
	;
	{
		
{
			_case_begin_1b68d21cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b68d1781:;
	};
}

inline jule::Str _1b6928234_toStr(jule::Ptr<_1b2ca8cc2_Match> _20713_x) {
	;
	{
		
{
			_case_begin_1b6929422:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6929334:;
	};
	;
	{
		
{
			_case_begin_1b6929dc3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6929a93:;
	};
}

inline jule::Str _1b693c29d_toStr(jule::Ptr<_1b2ca9ee3_FallSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b693dc94:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b693dba6:;
	};
	;
	{
		
{
			_case_begin_1b693e745:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b693e415:;
	};
}

inline jule::Str _1b695831e_toStr(jule::Ptr<_1b2ca6b38_BreakSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b695950c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b695941e:;
	};
	;
	{
		
{
			_case_begin_1b6959ead:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6959b7d:;
	};
}

inline jule::Str _1b695e996_toStr(jule::Ptr<_1b2caa389_RetSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b6960b84:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6960a96:;
	};
	;
	{
		
{
			_case_begin_1b6961635:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6961305:;
	};
}

inline jule::Str _1b696941d_toStr(jule::Ptr<_1b2aed40d_ScopeTree> _20713_x) {
	;
	{
		
{
			_case_begin_1b696a595:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b696a4a7:;
	};
	;
	{
		
{
			_case_begin_1b696b046:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b696ac16:;
	};
}

inline jule::Str _1b696c50e_toStr(jule::Ptr<_1b2b01257_VarDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b696d763:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b696d675:;
	};
	;
	{
		
{
			_case_begin_1b696e214:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b696ddd4:;
	};
}

inline jule::Str _1b696b574_toStr(jule::Ptr<_1b2b04e09_TypeAliasDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6971931:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6971843:;
	};
	;
	{
		
{
			_case_begin_1b69723d2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b69720a2:;
	};
}

inline jule::Str _1b6972c1d_toStr(jule::Ptr<_1b2b046bc_Conditional> _20713_x) {
	;
	{
		
{
			_case_begin_1b69754c3:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b69753d5:;
	};
	;
	{
		
{
			_case_begin_1b6975e74:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6975b44:;
	};
}

inline jule::Str _1b697743c_toStr(jule::Ptr<_1b2b01da1_Iter> _20713_x) {
	;
	{
		
{
			_case_begin_1b6978691:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b69785a3:;
	};
	;
	{
		
{
			_case_begin_1b6979142:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6978d12:;
	};
}

inline jule::Str _1b69764a2_toStr(jule::Ptr<_1b2b03886_ContSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b697b85e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b697b771:;
	};
	;
	{
		
{
			_case_begin_1b697c310:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b697bed0:;
	};
}

inline jule::Str _1b697d366_toStr(jule::Ptr<_1b2aea9c1_LabelSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b697e80c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b697cba1:;
	};
	;
	{
		
{
			_case_begin_1b69802d0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b697ee28:;
	};
}

inline jule::Str _1b69810a0_toStr(jule::Ptr<_1b2aead9a_GotoSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b6982986:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6982898:;
	};
	;
	{
		
{
			_case_begin_1b6983437:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6983107:;
	};
}

inline jule::Str _1b6983b1e_toStr(jule::Ptr<_1b2b05bc9_MatchCase> _20713_x) {
	;
	{
		
{
			_case_begin_1b69863d5:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b69862e7:;
	};
	;
	{
		
{
			_case_begin_1b6986d86:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6986a56:;
	};
}

inline jule::Str _1b6987cdd_toStr(jule::Ptr<_1b2aeb197_FallSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b69895a3:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b69894b5:;
	};
	;
	{
		
{
			_case_begin_1b698a054:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6989c24:;
	};
}

inline jule::Str _1b69873b4_toStr(jule::Ptr<_1b2b034ac_BreakSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b698c771:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b698c683:;
	};
	;
	{
		
{
			_case_begin_1b698d222:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b698cde2:;
	};
}

inline jule::Str _1b698e278_toStr(jule::Ptr<_1b2b01631_RetSt> _20713_x) {
	;
	{
		
{
			_case_begin_1b699093e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6990851:;
	};
	;
	{
		
{
			_case_begin_1b69913e0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b69910b0:;
	};
}

inline jule::Str _1b698d750_toStr(jule::Ptr<_1b2ae30e5_UseExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b6993b0c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6993a1e:;
	};
	;
	{
		
{
			_case_begin_1b69945ad:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b699427d:;
	};
}

inline jule::Str _1b6a7e302_toStr(jule::Ptr<_1b2b09cbb_Impl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6a804ac:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6a803be:;
	};
	;
	{
		
{
			_case_begin_1b6a80e5d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6a80b2d:;
	};
}

inline jule::Str _1b6a83db7_toStr(jule::Ptr<_1b2b08e1e_StructDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6a84e0c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6a84d1e:;
	};
	;
	{
		
{
			_case_begin_1b6a858ad:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6a8557d:;
	};
}

inline jule::Str _1b6a8642a_toStr(jule::Ptr<_1b2b0009c_FnDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6a88b47:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6a88a59:;
	};
	;
	{
		
{
			_case_begin_1b6a895e8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6a892b8:;
	};
}

inline jule::Str _1b6a8a022_toStr(jule::Ptr<_1b2b0965b_TraitDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6a8c73e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6a8c651:;
	};
	;
	{
		
{
			_case_begin_1b6a8d1e0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6a8cdb0:;
	};
}

inline jule::Str _1b6a9149b_toStr(jule::Ptr<_1b2b072c4_EnumDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6a924e1:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6a92403:;
	};
	;
	{
		
{
			_case_begin_1b6a92e92:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6a92b62:;
	};
}

inline jule::Str _1b6a93657_toStr(jule::Ptr<_1b2b0825e_TypeEnumDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6a95d74:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6a95c86:;
	};
	;
	{
		
{
			_case_begin_1b6a96825:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6a964e5:;
	};
}

inline jule::Str _1b6abbb25_toStr(jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b6abce67:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6abcd79:;
	};
	;
	{
		
{
			_case_begin_1b6abd918:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6abd5d8:;
	};
}

inline jule::Str _1b6abc3a6_toStr(jule::Ptr<_1b2bcd9e9_UnaryExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b6ac1a4d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6ac1960:;
	};
	;
	{
		
{
			_case_begin_1b6ac24ee:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6ac21be:;
	};
}

inline jule::Str _1b6b00120_toStr(jule::Ptr<_1b2bdda70_FnIns> _20713_x) {
	;
	{
		
{
			_case_begin_1b6b0130d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6b01220:;
	};
	;
	{
		
{
			_case_begin_1b6b01cae:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6b0197e:;
	};
}

inline jule::Str _1b6db1667_toStr(jule::Ptr<_1b2ae0e06_MapTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6db2822:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6db2734:;
	};
	;
	{
		
{
			_case_begin_1b6db32c3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6db2e93:;
	};
}

inline jule::Str _1b6db6eca_toStr(jule::Ptr<_1b2adeb19_TupleTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6db8185:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6db8097:;
	};
	;
	{
		
{
			_case_begin_1b6db8b36:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6db8806:;
	};
}

inline jule::Str _1b6dca351_toStr(jule::Ptr<_1b2ae06a8_ArrTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6dcb51c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6dcb42e:;
	};
	;
	{
		
{
			_case_begin_1b6dcbebd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6dcbb8d:;
	};
}

inline jule::Str _1b6dd1775_toStr(jule::Ptr<_1b2ade81c_SlcTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6dd2941:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6dd2853:;
	};
	;
	{
		
{
			_case_begin_1b6dd33e2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6dd30b2:;
	};
}

inline jule::Str _1b6dd7b99_toStr(jule::Ptr<_1b2adee16_PtrTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6dd8d65:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6dd8c77:;
	};
	;
	{
		
{
			_case_begin_1b6dd9816:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6dd94d6:;
	};
}

inline jule::Str _1b6dddc9e_toStr(jule::Ptr<_1b2ade487_SptrTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b6ddee6a:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6dded7c:;
	};
	;
	{
		
{
			_case_begin_1b6de091b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6de05db:;
	};
}

inline jule::Str _1b6e3deca_toStr(jule::Ptr<_1b2ae4ba7_VariadicExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b6e400db:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6e3eeed:;
	};
	;
	{
		
{
			_case_begin_1b6e40a8c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6e4075c:;
	};
}

inline jule::Str _1b6e44c17_toStr(jule::Ptr<_1b2bd09c9_SliceExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b6e4692d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6e46840:;
	};
	;
	{
		
{
			_case_begin_1b6e473ce:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6e4709e:;
	};
}

inline jule::Str _1b6e5e913_toStr(jule::Ptr<_1b2ae6e40_FieldExprPair> _20713_x) {
	;
	{
		
{
			_case_begin_1b6e60abd:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6e609d0:;
	};
	;
	{
		
{
			_case_begin_1b6e6156e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6e6123e:;
	};
}

inline jule::Str _1b6e682ce_toStr(jule::Ptr<_1b2ae854b_KeyValPair> _20713_x) {
	;
	{
		
{
			_case_begin_1b6e69489:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6e6939b:;
	};
	;
	{
		
{
			_case_begin_1b6e69e3a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6e69b0a:;
	};
}

inline jule::Str _1b6ebe489_toStr(jule::Ptr<_1b2ae644a_FnCallExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b6ec0644:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6ec0556:;
	};
	;
	{
		
{
			_case_begin_1b6ec10e5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6ec0cb5:;
	};
}

inline jule::Str _1b6ed2029_toStr(jule::Ptr<_1b2bce6ba_AllocStructLitExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b6ed3217:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6ed3129:;
	};
	;
	{
		
{
			_case_begin_1b6ed3bb8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6ed3888:;
	};
}

inline jule::Str _1b6ee5092_toStr(jule::Ptr<_1b2bcec4d_CastingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b6ee6280:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b6ee6192:;
	};
	;
	{
		
{
			_case_begin_1b6ee6c31:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b6ee6901:;
	};
}

inline jule::Str _1b700c164_toStr(jule::Ptr<_1b2bd3537_StructStaticIdentExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b700d792:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b700d6a4:;
	};
	;
	{
		
{
			_case_begin_1b700e243:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b700de13:;
	};
}

inline jule::Str _1b700e94c_toStr(jule::Ptr<_1b2ae5834_SubIdentExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b7013632:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7013544:;
	};
	;
	{
		
{
			_case_begin_1b70140d3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7013ca3:;
	};
}

inline jule::Str _1b701ba58_toStr(jule::Ptr<_1b2bce3bd_StructLitExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b701cc02:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b701cb14:;
	};
	;
	{
		
{
			_case_begin_1b701d6a3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b701d373:;
	};
}

inline jule::Str _1b703c051_toStr(jule::Ptr<_1b2bd7508_RuneExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b703d23e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b703d151:;
	};
	;
	{
		
{
			_case_begin_1b703dbe0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b703d8b0:;
	};
}

inline jule::Str _1b705ecdd_toStr(jule::Ptr<_1b2b119c6_StructIns> _20713_x) {
	;
	{
		
{
			_case_begin_1b7060ecb:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7060ddd:;
	};
	;
	{
		
{
			_case_begin_1b706197c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b706164c:;
	};
}

inline jule::Str _1b70a4d11_toStr(jule::Ptr<_1b2db1627_TypeKind> _20713_x) {
	;
	{
		
{
			_case_begin_1b70a5e99:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b70a5dab:;
	};
	;
	{
		
{
			_case_begin_1b70a694a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b70a661a:;
	};
}

inline jule::Str _1b70c6d55_toStr(jule::Ptr<_1b2bd3911_ArrayExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b70c8043:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b70c7e55:;
	};
	;
	{
		
{
			_case_begin_1b70c89e4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b70c86b4:;
	};
}

inline jule::Str _1b7110cc3_toStr(jule::Ptr<_1b2addcb1_SubIdentTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b7111eb1:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7111dc3:;
	};
	;
	{
		
{
			_case_begin_1b7112962:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7112632:;
	};
}

inline jule::Str _1b71153d2_toStr(jule::Ptr<_1b2ae47cd_UnaryExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b711656a:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b711647c:;
	};
	;
	{
		
{
			_case_begin_1b711701b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7116bdb:;
	};
}

inline jule::Str _1b711e562_toStr(jule::Ptr<_1b2add3dc_TypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b711eb06:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b711ea18:;
	};
	;
	{
		
{
			_case_begin_1b71205a7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7120288:;
	};
}

inline jule::Str _1b7123eb2_toStr(jule::Ptr<_1b2ae545a_NamespaceExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b7126921:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7126833:;
	};
	;
	{
		
{
			_case_begin_1b71273c2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7127092:;
	};
}

inline jule::Str _1b712a99c_toStr(jule::Ptr<_1b2ade18a_NamespaceTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1b712bb8a:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b712ba9c:;
	};
	;
	{
		
{
			_case_begin_1b712c63b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b712c30b:;
	};
}

inline jule::Str _1b716607b_toStr(jule::Ptr<_1b2bd226c_SlicingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7167214:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7167126:;
	};
	;
	{
		
{
			_case_begin_1b7167bb5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7167885:;
	};
}

inline jule::Str _1b71d3c31_toStr(jule::Ptr<_1b2ae8c77_SliceExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b71d4ddb:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b71d4ced:;
	};
	;
	{
		
{
			_case_begin_1b71d588c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b71d555c:;
	};
}

inline jule::Str _1b7255511_toStr(jule::Ptr<_1b2bd2800_TraitSubIdentExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b72566ee:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7256611:;
	};
	;
	{
		
{
			_case_begin_1b72571a0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7256d70:;
	};
}

inline jule::Str _1b72ee9b7_toStr(jule::Ptr<_1b2bd1bd9_MapExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7301645:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7301557:;
	};
	;
	{
		
{
			_case_begin_1b73020e6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7301cb6:;
	};
}

inline jule::Str _1b730ed4b_toStr(jule::Ptr<_1b2bd1436_AnonFnExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7311039:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7310e4b:;
	};
	;
	{
		
{
			_case_begin_1b73119da:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b73116aa:;
	};
}

inline jule::Str _1b7316ddb_toStr(jule::Ptr<_1b2ae29da_RangeExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b7318096:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7317ea8:;
	};
	;
	{
		
{
			_case_begin_1b7318a47:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7318717:;
	};
}

inline jule::Str _1b731a010_toStr(jule::Ptr<_1b2ae36ab_LitExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b731b96d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b731b880:;
	};
	;
	{
		
{
			_case_begin_1b731c41e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b731c0de:;
	};
}

inline jule::Str _1b731d068_toStr(jule::Ptr<_1b2ae3a85_UnsafeExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b7321489:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b732139b:;
	};
	;
	{
		
{
			_case_begin_1b7321e3a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7321b0a:;
	};
}

inline jule::Str _1b7322e91_toStr(jule::Ptr<_1b2ae96d4_IndexingExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b7324b30:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7324a42:;
	};
	;
	{
		
{
			_case_begin_1b73255d1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b73252a1:;
	};
}

inline jule::Str _1b7326a99_toStr(jule::Ptr<_1b2ae9d44_SlicingExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b7327ccb:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7327bdd:;
	};
	;
	{
		
{
			_case_begin_1b732877c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b732844c:;
	};
}

inline jule::Str _1b7325b0e_toStr(jule::Ptr<_1b2ae5081_CastExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b732ae77:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b732ad89:;
	};
	;
	{
		
{
			_case_begin_1b732b928:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b732b5e8:;
	};
}

inline jule::Str _1b732c97e_toStr(jule::Ptr<_1b2ae776a_StructLit> _20713_x) {
	;
	{
		
{
			_case_begin_1b732e882:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b732e794:;
	};
	;
	{
		
{
			_case_begin_1b7330333:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7330003:;
	};
}

inline jule::Str _1b7330c18_toStr(jule::Ptr<_1b2ae7c21_BraceLit> _20713_x) {
	;
	{
		
{
			_case_begin_1b73349b9:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b73348ba:;
	};
	;
	{
		
{
			_case_begin_1b7335932:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b733513a:;
	};
}

inline jule::Str _1b73362a1_toStr(jule::Ptr<_1b2ae5cda_BinaryExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1b73383c4:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b73382d6:;
	};
	;
	{
		
{
			_case_begin_1b7338d75:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7338a45:;
	};
}

inline jule::Str _1b747e8d3_toStr(jule::Ptr<_1b2bcd620_BinaryExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7480ac1:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b74809d3:;
	};
	;
	{
		
{
			_case_begin_1b7481572:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7481242:;
	};
}

inline jule::Str _1b7625606_toStr(jule::Ptr<_1b2bd488a_BuiltinNewCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b76267e4:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7626706:;
	};
	;
	{
		
{
			_case_begin_1b7627295:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7626e65:;
	};
}

inline jule::Str _1b763aece_toStr(jule::Ptr<_1b2bd521a_BuiltinMakeCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b763c1bc:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b763c0ce:;
	};
	;
	{
		
{
			_case_begin_1b763cb6d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b763c83d:;
	};
}

inline jule::Str _1b76709e7_toStr(jule::Ptr<_1b2bd58e1_BuiltinLenCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7671bd5:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7671ae7:;
	};
	;
	{
		
{
			_case_begin_1b7672686:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7672356:;
	};
}

inline jule::Str _1b768a66b_toStr(jule::Ptr<_1b2bd5bdd_BuiltinCapCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b768b859:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b768b76b:;
	};
	;
	{
		
{
			_case_begin_1b768c30a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b768beca:;
	};
}

inline jule::Str _1b76d1b79_toStr(jule::Ptr<_1b2bd6b67_SizeofExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b76d2c9b:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b76d2bad:;
	};
	;
	{
		
{
			_case_begin_1b76d374c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b76d341c:;
	};
}

inline jule::Str _1b76daa2e_toStr(jule::Ptr<_1b2bd731b_AlignofExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b76dbb51:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b76dba63:;
	};
	;
	{
		
{
			_case_begin_1b76dc602:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b76dc2c2:;
	};
}

inline jule::Str _1b7b472ba_toStr(jule::Str _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b7b48ca0:;
			{
				return _1b4bdc396_toStr(_20713_x);;
			}
		}
		_match_end_1b7b486a6:;
	};
}

inline jule::Str _1b7d0e8d3_toStr(jule::Ptr<_1b46d471d_ExceptionalForwardingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7d10ac1:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7d109d3:;
	};
	;
	{
		
{
			_case_begin_1b7d11572:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7d11242:;
	};
}

inline jule::Str _1b7d468c6_toStr(jule::Ptr<_1b46d7006_StrRuneIter> _20713_x) {
	;
	{
		
{
			_case_begin_1b7d47ab4:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7d479c6:;
	};
	;
	{
		
{
			_case_begin_1b7d48565:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7d48235:;
	};
}

inline jule::Str _1b7d4e318_toStr(jule::Ptr<_1b46d5be7_MutSlicingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7d50506:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7d50418:;
	};
	;
	{
		
{
			_case_begin_1b7d50ea7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7d50b77:;
	};
}

inline jule::Str _1b7d743d7_toStr(jule::Ptr<_1b46d6b2c_AppendToSliceExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7d755c5:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7d754d7:;
	};
	;
	{
		
{
			_case_begin_1b7d76076:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7d75c46:;
	};
}

inline jule::Str _1b7d76818_toStr(jule::Ptr<_1b46d6753_PushToSliceExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7d791cd:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7d790e0:;
	};
	;
	{
		
{
			_case_begin_1b7d79b7e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7d7984e:;
	};
}

inline jule::Str _1b7d847e3_toStr(jule::Ptr<_1b46d4993_SwapExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7d859d1:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7d858e3:;
	};
	;
	{
		
{
			_case_begin_1b7d86482:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7d86152:;
	};
}

inline jule::Str _1b7dc2369_toStr(jule::Ptr<_1b46d4d6c_EmptyCompareExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7dc3557:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7dc3469:;
	};
	;
	{
		
{
			_case_begin_1b7dc4008:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7dc3bc8:;
	};
}

inline jule::Str _1b7dc4beb_toStr(jule::Ptr<_1b46d5664_StrCompExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7dc75b1:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7dc74c3:;
	};
	;
	{
		
{
			_case_begin_1b7dc8062:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7dc7c32:;
	};
}

inline jule::Str _1b7e0d1da_toStr(jule::Ptr<_1b46d5ee4_UnsafeBinaryExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7e0e3c8:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7e0e2da:;
	};
	;
	{
		
{
			_case_begin_1b7e0ed79:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7e0ea49:;
	};
}

inline jule::Str _1b7e16589_toStr(jule::Ptr<_1b46d7303_UnsafeDerefExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7e17777:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7e17689:;
	};
	;
	{
		
{
			_case_begin_1b7e18228:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7e17de8:;
	};
}

inline jule::Str _1b7e1cded_toStr(jule::Ptr<_1b46d51e1_RefExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7e1e0db:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7e1deed:;
	};
	;
	{
		
{
			_case_begin_1b7e1ea8c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7e1e75c:;
	};
}

inline jule::Str _1b7e22496_toStr(jule::Ptr<_1b2bce027_StructArgExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7e23684:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7e23596:;
	};
	;
	{
		
{
			_case_begin_1b7e24135:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7e23d05:;
	};
}

inline jule::Str _1b7e28c61_toStr(jule::Ptr<_1b46d7600_UnsafeCastingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7e29e4e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7e29d61:;
	};
	;
	{
		
{
			_case_begin_1b7e2a900:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7e2a5c0:;
	};
}

inline jule::Str _1b7e37ac7_toStr(jule::Ptr<_1b46d6379_UnsafeIndexingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1b7e38cb5:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b7e38bc7:;
	};
	;
	{
		
{
			_case_begin_1b7e39766:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b7e39436:;
	};
}

inline jule::Str _1b84a1508_toStr(jule::Ptr<jule::Str> _20713_x) {
	;
	{
		
{
			_case_begin_1b84a264c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b84a255e:;
	};
	;
	{
		
{
			_case_begin_1b84a30ed:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1b84a2cbd:;
	};
}

inline jule::Str _1b8735616_toStr(_20d8ca601_Builder _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b8738a15:;
			{
				return _1b873a5c7_structToStr(_20713_x);;
			}
		}
		_match_end_1b8738592:;
	};
}

inline jule::Str _1b8741e5d_toStr(jule::Slice<jule::U8> _20713_x) {
	;
	{
		
{
			_case_begin_1b8743305:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b874302a:;
	};
	;
	{
		
{
			_case_begin_1b8743b63:;
			{
				return _1b8745736_arrToStr(_20713_x);;
			}
		}
		_match_end_1b8743987:;
	};
}

inline jule::Str _1b873973b_toStr(jule::Str _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b8739142:;
			{
				return _1b4bdc396_toStr(_20713_x);;
			}
		}
		_match_end_1b87450b5:;
	};
}

inline jule::Str _1b8748e87_toStr(jule::Str _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b874a5a4:;
			{
				return _1b4bdc396_toStr(_20713_x);;
			}
		}
		_match_end_1b8741138:;
	};
}



inline void _227e8e816_rev(jule::Slice<jule::U8> _26012_b) {
	jule::I64 _2616_i = 0LL;;
	for (; (_2616_i < (_26012_b.len() >> 1LL)); (_2616_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _26012_b[((_26012_b.len() - 1LL) - _2616_i)];
				jule::U8 _1___jule_assign_arg = _26012_b[_2616_i];
				_26012_b[_2616_i] = ___jule_assign_arg;
				_26012_b[((_26012_b.len() - 1LL) - _2616_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1b4b8c632:;
	}
	_iter_end_1b4b8c632:;;
}



inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I64 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I64 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1b4b8e106:;
	}
	_iter_end_1b4b8e106:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _227e7c936_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, ({ jule::I64 __jule_x = _4415_runes.len(); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b92e0c:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_2280977ba_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1b4b92e0c:;
			++it;
			goto _iter_begin_1b4b92e0c;
		}
		_iter_end_1b4b92e0c:;
	};
	return _227e7c936_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _2280981c2_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I64 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096720_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1b4b940ea:;
	}
	_iter_end_1b4b940ea:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _227e7c936_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_2280977ba_AppendRune(_846_buf, _8316_r);
	return _227e7c936_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1b4a3a2d2_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2280963ce_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2280963ce_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline void _22809ae50_handleRW(jule::Slice<jule::U8>* _814_b) {
	_227e63b5e__handleRW(_814_b);
}



inline jule::Slice<jule::Str> _22809b428_args(void) {
	jule::Slice<jule::Str> _86_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_86_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b990de:;
		if (it != expr_end) {
			jule::I64 _96_i = it - expr->begin();
			{
				{
					jule::U8* _118_arg = __jule_argv[_96_i];;
					_86_args[_96_i]=_227e71562_Str(_118_arg, _22809b9de_strlen(_118_arg));
				};
			}
			_iter_next_1b4b990de:;
			++it;
			_96_i++;
			goto _iter_begin_1b4b990de;
		}
		_iter_end_1b4b990de:;
	};
	return _86_args;;
}



inline jule::I64 _22809b9de_strlen(jule::U8* _3122_p) {
	jule::I64 __jule_func_result = 0;
	for (; ((*(_3122_p)) != 0LLU); (_3122_p)++) {
		{
			(__jule_func_result)++;
		}
	_iter_next_1b4b9c884:;
	}
	_iter_end_1b4b9c884:;;
	return __jule_func_result;;
}



inline jule::Bool _22809cd0e__coSpawn(void* _1520_func, void* _1535_args) {
	pthread_t _166_t;;
	if ((pthread_create((&(_166_t)), nullptr, (void*(*)(void*))(_1520_func), _1535_args) != 0LL)) {
		return false;;
	};
	pthread_detach(_166_t);
	return true;;
}



inline jule::U64 _228104063_hash128to64(_228103bab_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _228104371_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__22810057b_DecodeU64(_5312_bytes);;
}



inline jule::U32 _22810463a_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__2280eeb52_DecodeU32(_5412_bytes);;
}



inline jule::U64 _22810497b_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _228104cbc_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _228104063_hash128to64(_228103bab_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _228105141_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _228105570_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _228105a04_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_228104371_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _228104371_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_228105141_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_228105141_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _228105570_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_22810463a_fetch32(_7517_bytes));;
		return _228105570_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_22810463a_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I64 _963_z = (_7532_n + (static_cast<jule::I64>(_943_c) << 2LL));;
		return (jule::U64)(_22810497b_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _228103bab_u128 _228105dab_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _228103bab_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I64 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_22810497b_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _228105a04_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_22810497b_shiftMix((jule::U64)(_1046_a + _228104371_fetch64(_10319_bytes)));
		} else {
			_1076_d=_22810497b_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_228104cbc_hashLen16((jule::U64)(_228104371_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_228104cbc_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _228104371_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_22810497b_shiftMix((jule::U64)(_228104371_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_22810497b_shiftMix((jule::U64)(_228104371_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1b4bb28bb;
				};
			}
		_iter_next_1b4bb28bb:;
		}
		_iter_end_1b4bb28bb:;;
	};
	_1046_a=_228104cbc_hashLen16(_1046_a, _1066_c);
	_1056_b=_228104cbc_hashLen16(_1076_d, _1056_b);
	return _228103bab_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_228104cbc_hashLen16(_1056_b, _1046_a)};;
}



inline _228103bab_u128 _22810650a_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_228105141_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_228105141_rotate64(_14563_a, 44LLU);
	return _228103bab_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _228103bab_u128 _228106939_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _22810650a_weakHashLen32WithSeeds(_228104371_fetch64(_15529_bytes), _228104371_fetch64(_15529_bytes.slice(8LL)), _228104371_fetch64(_15529_bytes.slice(16LL)), _228104371_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _228103bab_u128 _228106d68_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _228103bab_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _228105dab_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I64 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_228103bab_u128 _16910_v = _228103bab_u128{._field_hi=0, ._field_lo=0};;
	_228103bab_u128 _17010_w = _228103bab_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_228105141_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _228104371_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_228105141_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _228104371_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_228105141_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_228105141_rotate64((jule::U64)(_1716_x + _228104371_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_228105141_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _228104371_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_228105141_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _228104371_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _228104371_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_228105141_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_228106939_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_228106939_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _228104371_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_228105141_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _228104371_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_228105141_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _228104371_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _228104371_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_228105141_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_228106939_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_228106939_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _228104371_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1b4bbb078;
			};
		}
	_iter_next_1b4bbb078:;
	}
	_iter_end_1b4bbb078:;;
	_1716_x+=(jule::U64)(_228105141_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _228105141_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _228105141_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I64 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_228105141_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_228104371_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _228104371_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_228106939_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1b4bc6c65:;
	}
	_iter_end_1b4bc6c65:;;
	_1716_x=_228104cbc_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_228104cbc_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _228103bab_u128{._field_hi=(jule::U64)(_228104cbc_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_228104cbc_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _228107132_hash(jule::Slice<jule::U8> _23413_bytes) {
	_228103bab_u128 _2356_sum = _228103bab_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_228106d68_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _228103bab_u128{._field_hi=_228104371_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_228104371_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_228106d68_hashWithSeed(_23413_bytes, _23413_bytes.len(), _228103bab_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _228104063_hash128to64(_2356_sum);;
}



inline jule::U64 _20c55c99e_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _20c55d3b7_hasZeroByte((_20c55d64d_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _20c55ccac_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _20c55d3b7_hasZeroByte((_20c55d64d_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _20c55d076_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_20c54eee1_TrailingZeros64(static_cast<jule::U64>((*(_6419_b)))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _20c55d3b7_hasZeroByte(jule::U64 _7016_x) {
	return static_cast<jule::U64>((((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _20c55d64d_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I64 _20c55d917_numGroups(jule::I64 _7914_n) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result=({ jule::I64 __jule_x = ((_7914_n + 4LL) - 1LL); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _20c55db26_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4bd17ec:;
		if (it != expr_end) {
			jule::I64 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1b4bd17ec:;
			++it;
			_886_i++;
			goto _iter_begin_1b4bd17ec;
		}
		_iter_end_1b4bd17ec:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _20c55e000_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9414_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _20c55e2ec_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups) {
	return _20c55e671_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _20c55e671_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline jule::I64 _20c586d2a_getLastOsError(void) {
	jule::I64 _212_err = _227d87ea1_GetLastErrno();;
	{
		auto &_match_expr{ _212_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b4bd768d:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b4bd7050:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1b4bd70b6:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1b4bd713d:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b4bd71b5:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b4bd7380:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1b4bd73e6:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1b4bd6d41:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1b4bd6e51:;
	};
}



inline jule::Slice<jule::Str> _20c58ac74_Args(void) {
	return _22809b428_args();;
}



inline jule::Exceptional<jule::Str> _20c58b26e_WorkingDir(void) {
	return _20c58bbcb_getwd();
}



inline jule::Exceptional<jule::Str> _20c58bbcb_getwd(void) {
	jule::U8* _116_buf = _227e32b50_Getcwd(nullptr, 0LLU);;
	if ((_116_buf == nullptr)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_20c586d2a_getLastOsError(), &__jule_any_type0)};
	};
	jule::Str _152_pwd = _227e22832_BytePtrToStr(_116_buf);;
	{
		_227de204e_Free(_116_buf);
	};
	return jule::Exceptional<jule::Str>{.result=_152_pwd};;
}



inline jule::I64 _20c7d1cab_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1b4c1d509:;
	}
	_iter_end_1b4c1d509:;;
	return -1LL;;
}



inline jule::I64 _20c7d23d8_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4c1d8b1:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1b4c1d8b1:;
			++it;
			_706_i++;
			goto _iter_begin_1b4c1d8b1;
		}
		_iter_end_1b4c1d8b1:;
	};
	return -1LL;;
}



inline jule::I64 _20c7d275c_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _20c7d1cab_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Bool _20d84e60d_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_20d8ac380__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _20d8b5da0_isExcludingLatin(_20d8585d4_Letter, _7613_r);;
}



inline jule::Bool _20d8b5223_is16(jule::Slice<_20d8b3485_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b59121ec:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_20d8b3485_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1b59121ec:;
				++it;
				_1937_i++;
				goto _iter_begin_1b59121ec;
			}
			_iter_end_1b59121ec:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ({ jule::I64 __jule_x = (_2096_hi - _2086_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_20d8b3485_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1b5911031:;
	}
	_iter_end_1b5911031:;;
	return false;;
}



inline jule::Bool _20d8b5597_is32(jule::Slice<_20d8b39b3_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b59185cc:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_20d8b39b3_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1b59185cc:;
				++it;
				_2307_i++;
				goto _iter_begin_1b59185cc;
			}
			_iter_end_1b59185cc:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ({ jule::I64 __jule_x = (_2466_hi - _2456_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_20d8b39b3_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1b59152ee:;
	}
	_iter_end_1b59152ee:;;
	return false;;
}



inline jule::Bool _20d8b5da0_isExcludingLatin(jule::Ptr<_20d8b3e36_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_20d8b3485_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _20d8b5223_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_20d8b39b3_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _20d8b5597_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _20d8b60e2_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_20d8ac380__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _20d8b5da0_isExcludingLatin(_20d85e8a4_Upper, _29512_r);;
}



inline jule::I32 _20d8b67da_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_20d8b2ece_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_20d8b2ece_CaseRange> _20d8b6b5e_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_20d8b2ece_CaseRange> _33329_caseRange) {
	jule::I64 _3356_lo = 0LL;;
	jule::I64 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I64 _3383_m = static_cast<jule::I64>((static_cast<jule::U64>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_20d8b2ece_CaseRange> _3397_cr = ((jule::Ptr<_20d8b2ece_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*_3397_cr.alloc)._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_1b5929d80:;
	}
	_iter_end_1b5929d80:;;
	return nullptr;;
}



inline jule::I32 _20d8b6e28_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I64>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_20d8ae162_asciiFold[static_cast<jule::I64>(_37015_r)]);;
	};
	jule::I64 _3806_lo = 0LL;;
	jule::I64 _3816_hi = _20d8ae44d_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I64 _3833_m = static_cast<jule::I64>((static_cast<jule::U64>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_20d8ae44d_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_1b592e2a2:;
	}
	_iter_end_1b592e2a2:;;
	if (((_3806_lo < _20d8ae44d_caseOrbit.len()) && (static_cast<jule::I32>(_20d8ae44d_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_20d8ae44d_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_20d8b2ece_CaseRange> _3972_cr = _20d8b6b5e_lookupCaseRange(_37015_r, _20d8abca8_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _20d8b67da_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _20d8b67da_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::Str _20d8b7302_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I64 __jule_x = jule::MAX_I64; jule::I64 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("strings: repeat: integer buffer size overflow", 45) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_20d8ca601_Builder _186_ss = static__20d8cb1c3_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_20d8d4ac2_WriteStr(&_186_ss, _1111_s);
		}
	_iter_next_1b594c138:;
	}
	_iter_end_1b594c138:;;
	return _20d8d53b9_Str(&_186_ss);;
}



inline jule::Bool _20d8b7665_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _20d8b79d9_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _20d8b7e90_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_20d8b7665_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1b5950ceb:;
	}
	_iter_end_1b5950ceb:;;
	return -1LL;;
}



inline jule::I64 _20d8b82d1_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _20d8b7e90_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _20d8b8710_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1b5953051:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1b5952869;
					};
				}
			_iter_next_1b59547c2:;
			}
			_iter_end_1b59547c2:;;
			return _636_j;;
		}
	_iter_next_1b5952869:;
	}
	_iter_end_1b5952869:;;
	return -1LL;;
}



inline jule::I64 _20d8b8a84_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _20d8b8710_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _20d8ba36b_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _20c7d275c_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _20d8ba6e0_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096720_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1b595b92d:;
	}
	_iter_end_1b595b92d:;;
	return -1LL;;
}



inline jule::I64 _20d8bb119_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096720_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20d8ba6e0_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1b595ec3e:;
	}
	_iter_end_1b595ec3e:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _20d8bb7ac_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _20d8b7e90_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1b5964e53;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1b5964e53:;
	}
	_iter_end_1b5964e53:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Bool _20d8bbb31_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_20d8b7e90_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _20d8bc69d_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_20d8bb119_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _20d8bca22_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2686_n = 0LL;;
	jule::I64 _2696_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2713_j = _20d8b7e90_FindAt(_26410_s, _26418_sub, _2696_i);;
			if ((_2713_j == -1LL)) {
				goto _iter_end_1b59699c4;
			};
			(_2686_n)++;
			_2696_i=(_2713_j + _26418_sub.len());
		}
	_iter_next_1b59699c4:;
	}
	_iter_end_1b59699c4:;;
	return _2686_n;;
}



inline jule::Str _20d8bd00b_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2892_m = _20d8bca22_Count(_28412_s, _28420_sub);;
	if ((_2892_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2892_m < _28444_n))) {
		_28444_n=_2892_m;
	};
	_20d8ca601_Builder _2976_ss = static__20d8cb1c3_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2986_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3003_j = _20d8b7e90_FindAt(_28412_s, _28420_sub, _2986_i);;
			if ((_3003_j == -1LL)) {
				goto _iter_end_1b596d5aa;
			};
			_20d8d4ac2_WriteStr(&_2976_ss, _28412_s.slice(_2986_i, _3003_j));
			_20d8d4ac2_WriteStr(&_2976_ss, _28430_new);
			_2986_i=(_3003_j + _28420_sub.len());
		}
	_iter_next_1b596d5aa:;
	}
	_iter_end_1b596d5aa:;;
	_20d8d4ac2_WriteStr(&_2976_ss, _28412_s.slice(_2986_i));
	return _20d8d53b9_Str(&_2976_ss);;
}



inline jule::Str _20d8bdc87_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3426_i = 0LL;;
	while ((_3426_i < _34117_s.len())) {
		{
			jule::I32 _3443_r;
			jule::I64 _3446_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096720_DecodeRuneStr(_34117_s.slice(_3426_i));
				_3443_r = __jule_assign_result.__jule_result_arg0;
				_3446_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20d8ba6e0_FindRune(_34125_cutset, _3443_r) == -1LL)) {
				return _34117_s.slice(_3426_i);;
			};
			_3426_i+=_3446_n;
		}
	_iter_next_1b5973527:;
	}
	_iter_end_1b5973527:;;
	return jule::Str();;
}



inline jule::Str _20d8be10b_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3566_i = _35514_s.len();;
	while ((_3566_i > 0LL)) {
		{
			jule::I32 _3583_r;
			jule::I64 _3586_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096c70_DecodeLastRuneStr(_35514_s.slice(0LL, _3566_i));
				_3583_r = __jule_assign_result.__jule_result_arg0;
				_3586_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20d8ba6e0_FindRune(_35522_cutset, _3583_r) == -1LL)) {
				return _35514_s.slice(0LL, _3566_i);;
			};
			_3566_i-=_3586_n;
		}
	_iter_next_1b597513e:;
	}
	_iter_end_1b597513e:;;
	return jule::Str();;
}



inline jule::Str _20d8be480_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _20d8bdc87_TrimLeft(_20d8be10b_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Str _20d8be804_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep) {
	{
		auto _match_expr{ _3759_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b5976a25:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b5977240:;
			{
				return _3759_parts[0LL];;
			}
		}
		_match_end_1b59771a7:;
	};
	jule::I64 _3826_n = 0LL;;
	{
		auto expr = &(_3759_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b59772ea:;
		if (it != expr_end) {
			jule::Str *_3839_part = it;
			{
				_3826_n+=(*(_3839_part)).len();
				(_3826_n)++;
			}
			_iter_next_1b59772ea:;
			++it;
			goto _iter_begin_1b59772ea;
		}
		_iter_end_1b59772ea:;
	};
	_20d8ca601_Builder _3876_s = static__20d8cb1c3_New((_3826_n + 1LL));;
	_20d8d4ac2_WriteStr(&_3876_s, _3759_parts[0LL]);
	{
		auto expr = _3759_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b5978d02:;
		if (it != expr_end) {
			jule::Str *_3899_part = it;
			{
				_20d8d4ac2_WriteStr(&_3876_s, _37523_sep);
				_20d8d4ac2_WriteStr(&_3876_s, (*(_3899_part)));
			}
			_iter_next_1b5978d02:;
			++it;
			goto _iter_begin_1b5978d02;
		}
		_iter_end_1b5978d02:;
	};
	return _20d8d53b9_Str(&_3876_s);;
}



inline jule::Bool _227d31ed3_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I64 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_1b597beae;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_1b597c102;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_1b597c102;
			};
			return false;;
		}
	_iter_next_1b597c102:;
	}
	_iter_end_1b597c102:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_1b597beae:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_1b597ec3c:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I64 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096720_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_1b597ec3c;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_1b597ec3c;
					};
					return false;;
				};
				jule::I32 _1237_r = _20d8b6e28_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_20d8b6e28_SimpleFold(_1237_r);
					}
				_iter_next_1b5983c63:;
				}
				_iter_end_1b5983c63:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_1b597ec3c;
				};
				return false;;
			}
			_iter_next_1b597ec3c:;
			it += len;
			goto _iter_begin_1b597ec3c;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Str _227d33655_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _227d36416_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _227d35d3e_IsPathSep(_1102_originalPath[0LL])) && _227d35d3e_IsPathSep(_1102_originalPath[1LL]))) {
			return _227d33c2c_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _227d35d3e_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_227d327b9_lazyBuff _1286_out = _227d327b9_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_227d33039_append(&_1286_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_227d35d3e_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1b5992e2b:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _227d35d3e_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1b5990b3d:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _227d35d3e_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1b5990ba4:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1b5996eda:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_227d35d3e_IsPathSep(_227d32c81_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1b599776b:;
									}
									_iter_end_1b599776b:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1b5997084:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_227d33039_append(&_1286_out, 47LLU);
									};
									_227d33039_append(&_1286_out, '.');
									_227d33039_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1b5996b33:;
						};
					}
				}
				else {
					_case_begin_1b5990ac7:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_227d33039_append(&_1286_out, 47LLU);
						};
						;
						for (; ((_1336_r < _1272_n) && (!(_227d35d3e_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_227d33039_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1b5991eb3:;
						}
						_iter_end_1b5991eb3:;;
					}
				}
				_match_end_1b59907ca:;
			};
		}
	_iter_next_1b59902e1:;
	}
	_iter_end_1b59902e1:;;
	if ((_1286_out._field_w == 0LL)) {
		_227d33039_append(&_1286_out, '.');
	};
	return _227d33c2c_FromSlash(_227d332c0_string(&_1286_out));;
}



inline jule::Str _227d33c2c_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _227d3406d_Join(jule::Slice<jule::Str> _2269_elem) {
	return _227d369dd_join(_2269_elem);;
}



inline jule::Str _227d34304_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_227d35d3e_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1b599b275:;
	}
	_iter_end_1b599b275:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _227d345bd_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_227d36757_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _227d34887_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _227d35d3e_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1b599c60b:;
	}
	_iter_end_1b599c60b:;;
	(_25213_path).mut_slice(_227d34ea3_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_227d35d3e_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1b599ca29:;
	}
	_iter_end_1b599ca29:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25213_path;;
}



inline jule::Str _227d34c61_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _227d34ea3_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_227d35d3e_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1b59a0ed3:;
	}
	_iter_end_1b59a0ed3:;;
	jule::Str _2892_dir = _227d33655_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _227d34ea3_VolumeName(jule::Str _30115_path) {
	return _227d33c2c_FromSlash(_30115_path.slice(0LL, _227d36416_volumeNameLen(_30115_path)));;
}



inline jule::Bool _227d35d3e_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _227d3614c_IsAbs(jule::Str _5310_path) {
	return _20d8b7665_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _227d36416_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _227d36757_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_227d3614c_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _227d33655_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _672_wd = ({
		auto except = _20c58b26e_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _227d369dd_join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _672_wd; (*it++) = _638_path; __jule_collection; }));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _227d369dd_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b59a900d:;
		if (it != expr_end) {
			jule::I64 _746_i = it - expr->begin();
			jule::Str *_749_e = it;
			{
				if (!((*(_749_e))).empty()) {
					return _227d33655_Clean(_20d8be804_Join(_739_elem.slice(_746_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1b59a900d:;
			++it;
			_746_i++;
			goto _iter_begin_1b59a900d;
		}
		_iter_end_1b59a900d:;
	};
	return jule::Str();;
}



inline jule::I64 _20c6470d8_getLastFsError(void) {
	jule::I64 _412_err = _227d87ea1_GetLastErrno();;
	{
		auto &_match_expr{ _412_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b59b6dd9:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b59b6cda:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1b59b6713:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1b59b6779:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b59b67e0:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b59b6867:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1b59b68de:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b59b6966:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1b59b7082:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1b59b7109:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1b59b7181:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1b59b7208:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b59b7280:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1b59b7307:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1b59b737e:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1b59b7406:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1b59b747d:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b59b7505:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1b59b757c:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1b59b7604:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1b59b767b:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1b59b7703:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1b59b777a:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1b59b7802:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1b59b7879:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1b59b7901:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1b59b7978:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1b59b7a00:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1b59b658c:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1b59b669c:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _20dbaa2a4_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _86_neg = ((*(_722_b)) == '-');;
	if (_86_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>((jule::U8)((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1b59e805d:;
	}
	_iter_end_1b59e805d:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_86_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _20dbb37eb_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _20dbb3b09_Utoa(static_cast<jule::U64>((-(_89_x)))));;
	};
	return _20dbb3b09_Utoa(static_cast<jule::U64>(_89_x));;
}



inline jule::Str _20dbb3b09_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _206_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _216_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _233_q = (_1613_x / 10LLU);;
			_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _1613_x) - (jule::U64)(_233_q * 10LLU)));
			(_216_i)++;
			_1613_x=_233_q;
		}
	_iter_next_1b59eea9d:;
	}
	_iter_end_1b59eea9d:;;
	_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)('0' + _1613_x));
	(_206_buf).mut_slice(0LL, (_216_i + 1LL));;
	_20dbb3d3a_rev(&(_206_buf));
	return _227e7c936_StrFromBytes(_206_buf);;
}



inline void _20dbb3d3a_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I64 _366_i = 0LL;;
	for (; (_366_i < ((*(_3513_b)).len() >> 1LL)); (_366_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_366_i];
				(*(_3513_b))[_366_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1b5a036a6:;
	}
	_iter_end_1b5a036a6:;;
}



inline jule::Slice<char*> _20dbb79ba_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs) {
	jule::Slice<char*> _376_cs = ({ auto __jule_collection = jule::Slice<char*>::alloc(((*(_3625_s)).len() + 1LL), ((*(_3625_s)).len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = nullptr; __jule_collection; });;
	(*(_3640_bargs))=({ auto __jule_collection = jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3625_s)).len(), (*(_3625_s)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::U8>(nullptr); __jule_collection; });
	{
		auto expr = _3625_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5a20edc:;
		if (it != expr_end) {
			jule::I64 _396_i = it - expr->begin();
			jule::Str *_399_arg = it;
			{
				jule::Slice<jule::U8> _407_barg = _227e22ab8_StrToBytes((*(_399_arg)));;
				(*(_3640_bargs))[_396_i]=_407_barg;
				_376_cs[_396_i]=((char*)((&(_407_barg[0LL]))));
			}
			_iter_next_1b5a20edc:;
			++it;
			_396_i++;
			goto _iter_begin_1b5a20edc;
		}
		_iter_end_1b5a20edc:;
	};
	_376_cs[(_376_cs.len() - 1LL)]=nullptr;
	return _376_cs;;
}



inline jule::I64 _20dbb7d3e_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv) {
	jule::Slice<jule::Slice<jule::U8>> _496_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _502_cargv = _20dbb79ba_strSliceToCstrSlice(_4824_argv, &(_496_bargs));;
	jule::Slice<jule::U8> _512_s = _227e22ab8_StrToBytes((*(_4812_file)));;
	{
		return execvp(((char*)((&(_512_s[0LL])))), (char*const*)(&(_502_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _20dbb8070_setenv(jule::Slice<jule::Str>* _5712_envv) {
	;
	{
		auto expr = _5712_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5a24265:;
		if (it != expr_end) {
			jule::Str *_599_env = it;
			{
				jule::I64 _603_i = _20c7d23d8_FindByteStr((*(_599_env)), '=');;
				if ((_603_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				{
					jule::Slice<jule::U8> _654_key = _227e22ab8_StrToBytes((*(_599_env)).slice(0LL, _603_i));;
					if ((((*(_599_env)).len() - _603_i) == 1LL)) {
						jule::Str _675_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_675_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					} else {
						jule::Slice<jule::U8> _725_val = _227e22ab8_StrToBytes((*(_599_env)).slice((_603_i + 1LL)));;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_725_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					};
				};
			}
			_iter_next_1b5a24265:;
			++it;
			goto _iter_begin_1b5a24265;
		}
		_iter_end_1b5a24265:;
	};
	return jule::VoidExceptional{};
}



inline jule::I64 _20dbb9071_processErrorFromCode(jule::I64 _725_code) {
	{
		auto &_match_expr{ _725_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1b5a25277:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b5a252dd:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1b5a29d09:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1b5a299da:;
	};
}



inline jule::I64 _20dbb91e7_getLastProcessError(void) {
	return _20dbb9071_processErrorFromCode(_227d87ea1_GetLastErrno());;
}



inline void _20dbb98ac_Exit(jule::I64 _109_code) {
	_227e3a5a3_Exit(_109_code);
}



inline jule::Str _20dbb9b21_Executable(void) {
	return _227e84564_executable();;
}



inline jule::Bool _20da98846_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _20da98b21_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_20da9658b_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5a4bb0b:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1b5a4bb0b:;
			++it;
			goto _iter_begin_1b5a4bb0b;
		}
		_iter_end_1b5a4bb0b:;
	};
	return false;;
}



inline jule::Bool _20da98dda_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_20da98280_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5a4c953:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1b5a4c953:;
			++it;
			goto _iter_begin_1b5a4c953;
		}
		_iter_end_1b5a4c953:;
	};
	{
		auto expr = &(_20da9855a_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5a4c854:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1b5a4c854:;
			++it;
			goto _iter_begin_1b5a4c854;
		}
		_iter_end_1b5a4c854:;
	};
	return false;;
}



inline jule::Str _20daa6403_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args) {
	return _20daa6d93_applyFmt(_3249_fmt, _32422_args);;
}



inline jule::Str _20daa6711_argToStr(jule::Any _32813_arg) {
	{
		auto &_match_expr{ _32813_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b5a4ebec:;
			{
				return _32813_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1b5a4ee94:;
			{
				return __jule_strFromByte(_32813_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b5a5000a:;
			{
				return __jule_strFromRune(_32813_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1b5a4ee2d:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1b5a4edb7:;
	};
}



inline jule::I64 _20daa69ca_findNextFmt(jule::Str _34116_fmt) {
	{
		auto expr = &(_34116_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5a4e3d3:;
		if (it != expr_end) {
			jule::I64 _3426_i = it - expr->begin();
			jule::U8 *_3429_b = it;
			{
				if (((*(_3429_b)) == '@')) {
					return _3426_i;;
				};
			}
			_iter_next_1b5a4e3d3:;
			++it;
			_3426_i++;
			goto _iter_begin_1b5a4e3d3;
		}
		_iter_end_1b5a4e3d3:;
	};
	return -1LL;;
}



inline jule::Str _20daa6d93_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args) {
	_20d8ca601_Builder _3516_s = static__20d8cb1c3_New(32LL);;
	{
		auto expr = &(_35027_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5a52958:;
		if (it != expr_end) {
			jule::Any *_3529_arg = it;
			{
				jule::I64 _3533_i = _20daa69ca_findNextFmt(_35017_fmt);;
				if ((_3533_i == -1LL)) {
					goto _iter_end_1b5a52958;
				};
				_20d8d4ac2_WriteStr(&_3516_s, _35017_fmt.slice(0LL, _3533_i));
				_20d8d4ac2_WriteStr(&_3516_s, _20daa6711_argToStr((*(_3529_arg))));
				(_35017_fmt).mut_slice((_3533_i + 1LL));;
			}
			_iter_next_1b5a52958:;
			++it;
			goto _iter_begin_1b5a52958;
		}
		_iter_end_1b5a52958:;
	};
	_20d8d4ac2_WriteStr(&_3516_s, _35017_fmt);
	return _20d8d53b9_Str(&_3516_s);;
}



inline jule::Bool _20daa7c95_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _20daa91b4_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _20daa94c2_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _20daa978b_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _20daa9acc_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _20daa9d63_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _20daaa12c_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _20daaa3e6_IsUnix(jule::Str _5511_os) {
	return (_20daa94c2_IsDarwin(_5511_os) || _20daa978b_IsLinux(_5511_os));;
}



inline jule::Bool _20daaa7c0_Is32Bit(jule::Str _5812_arch) {
	return _20daa9acc_IsI386(_5812_arch);;
}



inline jule::Bool _20daaaa12_Is64Bit(jule::Str _6112_arch) {
	return (_20daa9d63_IsAmd64(_6112_arch) || _20daaa12c_IsArm64(_6112_arch));;
}



inline void _20dbbaced_init(void) {
	jule::Str _256_path = _20dbb9b21_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("build: executable file cannot found", 35) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_20dbba34c_PathWd=({
			auto except = _20c58b26e_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("build: working directory path cannot found", 42) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_20dbba094_PathExec=_227d34c61_Dir(_256_path);
		_20dbb9d85_PathStdlib=_227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _20dbba094_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_20dbba649_PathApi=_227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _20dbba094_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1ca964756_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1ca964a64_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1ca964d2d_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1ca96516e_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1ca9676d2_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1b5ac5206:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1ca96d5d9_IsInf(_4714_f, 0LL) || _1ca96ce57_IsNaN(_4714_f)) {
			_case_begin_1b5ac52a0:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1b5ac5118:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ca96d8a3_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1ca964d2d_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1ca96516e_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1ca96cb49_NaN(void) {
	return _1ca96516e_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1ca96ce57_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1ca96d221_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1ca96516e_F64FromBits(9218868437227405312LLU);;
	};
	return _1ca96516e_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1ca96d5d9_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1ca96d8a3_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1ca970c5c_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1ca970377_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1ca96ce57_IsNaN(_1118_x) || _1ca96d5d9_IsInf(_1118_x, 1LL)) {
			_case_begin_1b5b114c8:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1b5b11572:;
			{
				return _1ca96cb49_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1b5b115d8:;
			{
				return _1ca96d221_Inf(-1LL);;
			}
		}
		_match_end_1b5b1140c:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ca9676d2_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1ca970c5c_Abs(jule::F64 _438_x) {
	return _1ca96516e_F64FromBits((_1ca964d2d_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1caad818d_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1ca970c5c_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1b5b78ebe:;
		}
		_iter_end_1b5b78ebe:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1caad8996_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ca9676d2_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1ca970377_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1cab12580_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _227e7c936_StrFromBytes(_1cab12b68_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1cab16023_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1cab12b68_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1cab113c5_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1b5d6db0e:;
			{
				_886_bits=static_cast<jule::U64>(_1ca964756_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1cab113c5_floatInfo>)((&(_1cab1176b_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b5d6d845:;
			{
				_886_bits=_1ca964d2d_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1cab113c5_floatInfo>)((&(_1cab11a68_f64info))));
			}
		}
		else {
			_case_begin_1b5d6c602:;
			{
				__jule_panic_s(jule::Str::lit("conv: illegal bitSize", 21) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1b5d6d4c1:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (jule::U64)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>(({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_1b5d72959:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1b5d74197:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1b5d74285:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1b5d73a26:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1b5d73916:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b5d72a47:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1b5d71b12:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1b5d71caa:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1cab15198_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1cab1582a_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1cab11eec_decimalSlice _1376_digs = _1cab11eec_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1cab20ca8_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b5d76e25:;
				{
					_8758_prec=_1cab16023_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b5d77e37:;
				{
					_8758_prec=_1cab16023_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b5d77e9d:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1b5d77145:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b5d79e39:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b5d7a005:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1b5d79994:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1b5d79aa4:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1cab1e9ee_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1cab1ee94_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1cab13372_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1cab13a48_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1cab13372_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1cab113c5_floatInfo* _18824_flt) {
	_1cab24a8c_decimal _1896_d = _1cab24a8c_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1cab24e77_assign(&_1896_d, _1882_mant);
	_1cab25230_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1cab11eec_decimalSlice _1926_digs = _1cab11eec_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1cab13e66_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1cab11eec_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b5d80db8:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b5d81bbb:;
				{
					_18733_prec=_1cab16023_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b5d81c32:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1b5d81a34:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b5d80add:;
				{
					_1cab25a49_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b5d80b54:;
				{
					_1cab25a49_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b5d80bba:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1cab25a49_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1b5d8321c:;
		};
		_1926_digs=_1cab11eec_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1cab13a48_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1cab13a48_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1cab11eec_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1b5d863a7:;
			{
				return _1cab1450a_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b5d8641d:;
			{
				return _1cab149e4_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1b5d86484:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1cab1450a_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1cab149e4_fmtF(_22418_dst, _22447_neg, _2252_digs, _1cab16023_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1b5d862ec:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1cab13e66_roundShortest(_1cab24a8c_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1cab113c5_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1cab24a8c_decimal _2926_upper = _1cab24a8c_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1cab24e77_assign(&_2926_upper, (jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1cab25230_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1cab24a8c_decimal _3116_lower = _1cab24a8c_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1cab24e77_assign(&_3116_lower, (jule::U64)(({ jule::U64 __jule_x = _3026_mantlo; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1cab25230_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1b5d925b1;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1b5d97363:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1b5d9740c:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1b5d97473:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1b5d97286:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1b5d99d27:;
					{
						_1cab25a49_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1b5d99dc1:;
					{
						_1cab254d8_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1b5d99e37:;
					{
						_1cab25791_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1b5d974d9:;
			};
		}
	_iter_next_1b5d925b1:;
	}
	_iter_end_1b5d925b1:;;
}



inline jule::Slice<jule::U8> _1cab1450a_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1cab11eec_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1cab15b9e_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1b5d9dd1a:;
		}
		_iter_end_1b5d9dd1a:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1b5da1504:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1b5da16ad:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1b5da0e71:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _4306_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1b5da0d1c:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1cab149e4_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1cab11eec_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1cab15b9e_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1b5da52c7:;
		}
		_iter_end_1b5da52c7:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1b5da65d6:;
		}
		_iter_end_1b5da65d6:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1cab15198_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1cab113c5_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1cab29c7e_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1cab29c7e_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1cab1582a_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1cab113c5_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1b5dab3cc:;
	}
	_iter_end_1b5dab3cc:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>(({ jule::I64 __jule_x = _51126_prec; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1b5db1800:;
		}
		_iter_end_1b5db1800:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1b5db336d:;
		}
		_iter_end_1b5db336d:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1cab16bb1_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1b5db0700:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1b5db5d21:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1b5db545d:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1b5db52c6:;
	};
	return _51113_dst;;
}



inline jule::I64 _1cab15b9e_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1cab16023_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1cab16bb1_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__20d722dc7_ConvError _1cab17134_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__20d722dc7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1b5dbb5a7:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1b5dbb4db:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1cab16bb1_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1b5dbd059:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1cab16bb1_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1b5dbd147:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1cab16bb1_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1b5dbcc07:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1b5dbcb91:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1b5dbcab4:;
					};
				};
			}
		}
		else {
			_case_begin_1b5dba908:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1b5dbae8b:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1b5dc206e:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1b5dc1c50:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1b5dbc2ab:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1b5dc1bd9:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1b5dc1cb6:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b5dbc773:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1b5dc31b3:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5dc415e:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1b5dc5429:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1cab16bb1_lower(_1099_c)) && (_1cab16bb1_lower(_1099_c) <= 'z'))) {
						_case_begin_1b5dc535d:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1cab16bb1_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1b5dc4e51:;
						{
							goto _iter_next_1b5dc415e;
						}
					}
					else {
						_case_begin_1b5dc4dda:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1b5dc4d63:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1b5dc415e:;
			++it;
			goto _iter_begin_1b5dc415e;
		}
		_iter_end_1b5dc415e:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1cab17563_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__20d722dc7_ConvError __jule_assign_result = _1cab17134_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1cab17a19_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__20d722dc7_ConvError __jule_assign_result = _1cab17134_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = static_cast<jule::U64>((_17240_bitSize - 1LL)); ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1cab186c9_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1ca96516e_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _20c54d3eb_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U64 __jule_y = static_cast<jule::U64>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20c558329_Mul64(_4122_man, _1cab19488_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20c558329_Mul64(_4122_man, _1cab19488_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1ca96516e_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1cab18a92_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1ca964a64_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _20c54d3eb_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U64 __jule_y = static_cast<jule::U64>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20c558329_Mul64(_11022_man, _1cab19488_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20c558329_Mul64(_11022_man, _1cab19488_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1ca964a64_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1cab1a7b9_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1b5de9195:;
	}
	_iter_end_1b5de9195:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1cab1aac7_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1b5deca7d:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1b5decb05;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1b5decb05:;
			{
				jule::I64 _887_caseN = _1cab1a7b9_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1ca96d221_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1b5decb6b:;
			{
				if ((_1cab1a7b9_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1ca96cb49_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b5dec9d4:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1cab1ad91_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1b5e07bdc:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1b5e080d8:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1b5e07b76:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1cab16bb1_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1b5e0d088:;
					{
						goto _iter_next_1b5e0c51b;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1b5e0d132:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1b5e11c4b;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1b5e0c51b;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1b5e0d198:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1b5e0c51b;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b5e0c51b;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1cab16bb1_lower(_1383_c))) && (_1cab16bb1_lower(_1383_c) <= 'f'))) {
					_case_begin_1b5e0d20e:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1cab16bb1_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b5e0c51b;
					}
				}
				_match_end_1b5e0ce9a:;
			};
			goto _iter_end_1b5e0c51b;
		}
	_iter_next_1b5e0c51b:;
	}
	_iter_end_1b5e0c51b:;;
	_julec_label_1b5e11c4b:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1cab16bb1_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1b5e15403;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1b5e15403:;
		}
		_iter_end_1b5e15403:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1cab1c8dc_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U64 __jule_y = _1cab11a68_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1b5e1d42d:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1b5e1d494:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1cab1bca4_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1cab1bca4_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1b5e1d50a:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1cab1bca4_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b5e1d340:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1cab1cd1b_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U64 __jule_y = _1cab1176b_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1b5e22696:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1b5e2270c:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1cab1c0d4_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1cab1c0d4_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1b5e22773:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1cab1c0d4_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b5e225a8:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__20d722dc7_ConvError _1cab1d3b0_atofHex(_1cab113c5_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__20d722dc7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1b5e2604b:;
	}
	_iter_end_1b5e2604b:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((jule::U64)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1b5e28328:;
	}
	_iter_end_1b5e28328:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1b5e28702:;
	}
	_iter_end_1b5e28702:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1cab113c5_floatInfo_eq(&(*(_55613_flt)), _1cab1176b_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ca964a64_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1ca96516e_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__20d722dc7_ConvError _1cab1d789_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__20d722dc7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab1aac7_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab1ad91_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__20d722dc7_ConvError __jule_assign_result = _1cab1d3b0_atofHex(&(_1cab1176b_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1cab1cd1b_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1cab18a92_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1cab18a92_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1cab24a8c_decimal _6676_d = _1cab24a8c_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1cab1b556_set(&_6676_d, _227e7c3d6_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1cab1b897_floatBits(&_6676_d, &(_1cab1176b_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1ca964a64_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20d722dc7_ConvError _1cab1d9cb_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__20d722dc7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab1aac7_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab1ad91_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__20d722dc7_ConvError __jule_assign_result = _1cab1d3b0_atofHex(&(_1cab11a68_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1cab1c8dc_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1cab186c9_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1cab186c9_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1cab24a8c_decimal _7246_d = _1cab24a8c_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1cab1b556_set(&_7246_d, _227e7c3d6_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1cab1b897_floatBits(&_7246_d, &(_1cab11a68_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1ca96516e_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20d722dc7_ConvError _1cab1dd50_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__20d722dc7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__20d722dc7_ConvError __jule_assign_result = _1cab1d789_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1cab1d9cb_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1cab1e1c4_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__20d722dc7_ConvError __jule_assign_result = _1cab1dd50_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1cab1e9ee_ryuFtoaFixed32(_1cab11eec_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with negative prec", 46) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with prec > 9", 41) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _20c5559b9_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U64 __jule_y = static_cast<jule::U64>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1cab2103e_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab22936_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult64bitPow10", 54) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1cab231d9_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _942_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U64 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1cab207d0_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1cab1ee94_ryuFtoaFixed64(_1cab11eec_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed64 called with prec > 18", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _20c555c83_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U64 __jule_y = static_cast<jule::U64>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1cab2103e_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab22d65_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1cab231d9_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _1662_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U64 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1cab207d0_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1cab207d0_formatDecimal(_1cab11eec_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1cab202d5_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1b5e5d65a:;
	}
	_iter_end_1b5e5d65a:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((jule::U64)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1b5e61817:;
	}
	_iter_end_1b5e61817:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1b5e672ce:;
	}
	_iter_end_1b5e672ce:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1cab20ca8_ryuFtoaShortest(_1cab11eec_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1cab113c5_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_20c54eee1_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U64 __jule_y = static_cast<jule::U64>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1cab21d86_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1cab21737_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1cab21d86_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1cab2103e_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1cab113c5_floatInfo_eq(&(*(_26168_flt)), _1cab1176b_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab22936_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab22936_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab22936_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab22d65_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab22d65_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cab22d65_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1cab231d9_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1cab231d9_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1cab231d9_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _3252_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1cab21d86_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1cab2103e_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1cab21308_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1cab21737_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1cab113c5_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1cab21d86_ryuDigits(_1cab11eec_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1cab234a3_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1cab234a3_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1cab234a3_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1cab22507_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1cab22507_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1b5e85121:;
		}
		_iter_end_1b5e85121:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((jule::U64)(9LL - _4287_n));
		_1cab22507_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1b5e85bd2:;
	}
	_iter_end_1b5e85bd2:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1b5e87a08:;
	}
	_iter_end_1b5e87a08:;;
}



inline void _1cab22507_ryuDigits32(_1cab11eec_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1b5e8a39b;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1b5e8a39b:;
	}
	_iter_end_1b5e8a39b:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1b5e9145c:;
	}
	_iter_end_1b5e9145c:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1cab22936_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult64bitPow10: power of 10 is out of range", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1cab19488_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20c558329_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1cab21308_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1cab22d65_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult128bitPow10: power of 10 is out of range", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1cab19488_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1cab21308_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20c558329_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20c558329_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20c556a20_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1cab231d9_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1b5e9e4d1:;
	}
	_iter_end_1b5e9e4d1:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1cab234a3_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1cab263da_trim(_1cab24a8c_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1b5ea2957:;
	}
	_iter_end_1b5ea2957:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1cab266c6_rightShift(_1cab24a8c_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; (({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U64)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1b5ea5b47:;
				}
				_iter_end_1b5ea5b47:;;
				goto _iter_end_1b5ea455d;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1b5ea455d:;
	}
	_iter_end_1b5ea455d:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (jule::U64)(static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _28432_k; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1b5ea7044:;
	}
	_iter_end_1b5ea7044:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U64)(_2896_n * 10LLU);
		}
	_iter_next_1b5ea93dc:;
	}
	_iter_end_1b5ea93dc:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1cab263da_trim(_28420_a);
}



inline jule::Bool _1cab26b7c_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1b5eac126:;
	}
	_iter_end_1b5eac126:;;
	return false;;
}



inline void _1cab26e35_leftShift(_1cab24a8c_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1cab244a4_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1cab26b7c_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1cab244a4_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U64 __jule_x = (jule::U64)(static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U64 __jule_y = _35231_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1b5eb0646:;
	}
	_iter_end_1b5eb0646:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1b5eb2bcb:;
	}
	_iter_end_1b5eb2bcb:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1cab263da_trim(_35219_a);
}



inline jule::Bool _1cab272a9_shouldRoundUp(_1cab24a8c_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1cab28981_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1cab29454_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1cab29c7e_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1cab28d49_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1cab29454_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1cab29c7e_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1cab29113_Itoa(jule::I64 _819_i) {
	return _1cab28d49_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1cab29454_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _227e7c936_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1cab296da_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1cab29c7e_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("conv: illegal base", 18) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1b5ee9086:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = ({ jule::U64 __jule_x = (_1547_us % 100LL); jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1b5eeab48:;
				}
				_iter_end_1b5eeab48:;;
				jule::U64 _1643_is = ({ jule::U64 __jule_x = _1547_us; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1cab296da_isPowerOfTwo(_10541_base)) {
			_case_begin_1b5ee9790:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_20c54e342_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (jule::U64)(static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1b6003700:;
				}
				_iter_end_1b6003700:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1b5ee80eb:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1b5ee8d66:;
				}
				_iter_end_1b5ee8d66:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1b5ee83d7:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_227e7c936_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline void _1cab2b632_Throw(jule::Str _910_msg) {
	jule::outln(_1b4bdc396_toStr(_910_msg));
	_20dbb98ac_Exit(1LL);
}



inline jule::Bool _1b2ac8707_IsUnaryOp(jule::U64 _33314_id) {
	{
		auto expr = &(_1b2a29746_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6066de5:;
		if (it != expr_end) {
			jule::U64 *_3349_op = it;
			{
				if ((_33314_id == (*(_3349_op)))) {
					return true;;
				};
			}
			_iter_next_1b6066de5:;
			++it;
			goto _iter_begin_1b6066de5;
		}
		_iter_end_1b6066de5:;
	};
	return false;;
}



inline jule::Bool _1b2ac8a15_IsBinOp(jule::U64 _34312_id) {
	{
		auto expr = &(_1b2a29a10_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b60676dc:;
		if (it != expr_end) {
			jule::U64 *_3449_op = it;
			{
				if ((_34312_id == (*(_3449_op)))) {
					return true;;
				};
			}
			_iter_next_1b60676dc:;
			++it;
			goto _iter_begin_1b60676dc;
		}
		_iter_end_1b60676dc:;
	};
	return false;;
}



inline jule::Bool _1b2ac9120_IsStr(jule::Str _36310_k) {
	return (!(_36310_k).empty() && ((_36310_k[0LL] == '\"') || _1b2ac93a6_IsRawStr(_36310_k)));;
}



inline jule::Bool _1b2ac93a6_IsRawStr(jule::Str _36613_k) {
	return (!(_36613_k).empty() && (_36613_k[0LL] == '`'));;
}



inline jule::Bool _1b2ac9670_IsRune(jule::Str _37011_k) {
	return (!(_37011_k).empty() && (_37011_k[0LL] == '\''));;
}



inline jule::Bool _1b2aca055_IsFloat(jule::Str _37912_k) {
	if (_20d8b7665_HasPrefix(_37912_k, jule::Str::lit("0x", 2))) {
		return _20d8bc69d_ContainsAny(_37912_k, jule::Str::lit(".pP", 3));;
	};
	return _20d8bc69d_ContainsAny(_37912_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1b2aca31e_IsNum(jule::Str _38710_k) {
	if ((_38710_k).empty()) {
		return false;;
	};
	jule::U8 _3922_b = _38710_k[0LL];;
	return ((_3922_b == '.') || (('0' <= _3922_b) && (_3922_b <= '9')));;
}



inline jule::Bool _1b2aca8a2_IsIgnoreIdent(jule::Str _40218_ident) {
	return (_40218_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1b2acab6b_IsAnonIdent(jule::Str _40516_ident) {
	return (_40516_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1b2acb1ee_IsSpace(jule::I32 _41812_r) {
	{
		auto expr = &(_1b2a29537_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b606eccc:;
		if (it != expr_end) {
			jule::I32 *_4199_cr = it;
			{
				if ((_41812_r == (*(_4199_cr)))) {
					return true;;
				};
			}
			_iter_next_1b606eccc:;
			++it;
			goto _iter_begin_1b606eccc;
		}
		_iter_end_1b606eccc:;
	};
	return false;;
}



inline jule::Bool _1b2acb6e9_IsLetter(jule::I32 _42813_r) {
	return _20d84e60d_IsLetter(_42813_r);;
}



inline jule::Bool _1b2acbb6c_IsKeyword(jule::Str _44814_s) {
	{
		auto expr = &(_1b2ad0ca3_keywords);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6072252:;
		if (it != expr_end) {
			_1b2ad0874_kindPair *_4499_op = it;
			{
				if ((_44814_s == (*(_4499_op))._field_kind)) {
					return true;;
				};
			}
			_iter_next_1b6072252:;
			++it;
			goto _iter_begin_1b6072252;
		}
		_iter_end_1b6072252:;
	};
	return false;;
}



inline jule::Bool _1b2acbe36_IsDecimal(jule::U8 _45814_b) {
	return (('0' <= _45814_b) && (_45814_b <= '9'));;
}



inline jule::Bool _1b2acc200_IsBinary(jule::U8 _46113_b) {
	return ((_46113_b == '0') || (_46113_b == '1'));;
}



inline jule::Bool _1b2acc4b9_IsOctal(jule::U8 _46412_b) {
	return (('0' <= _46412_b) && (_46412_b <= '7'));;
}



inline jule::Bool _1b2acc783_IsHex(jule::U8 _46710_b) {
	{
		
		if ((('0' <= _46710_b) && (_46710_b <= '9'))) {
			_case_begin_1b6074287:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46710_b) && (_46710_b <= 'f'))) {
			_case_begin_1b6074331:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46710_b) && (_46710_b <= 'F'))) {
			_case_begin_1b60743a8:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6073b49:;
			{
				return false;;
			}
		}
		_match_end_1b6073c48:;
	};
}



inline jule::Bool _1b2acca4c_IsAssign(jule::U64 _48213_id) {
	return ((((((((_48213_id == static_cast<jule::U64>(1LLU)) || (_48213_id == static_cast<jule::U64>(27LLU))) || (_48213_id == static_cast<jule::U64>(30LLU))) || (_48213_id == static_cast<jule::U64>(32LLU))) || (_48213_id == static_cast<jule::U64>(24LLU))) || (_48213_id == static_cast<jule::U64>(74LLU))) || (_48213_id == static_cast<jule::U64>(62LLU))) || (_48213_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1b2accd16_IsPostfixOp(jule::U64 _49416_id) {
	{
		auto expr = &(_1b2ac249d_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b60775dc:;
		if (it != expr_end) {
			jule::U64 *_4959_op = it;
			{
				if ((_49416_id == (*(_4959_op)))) {
					return true;;
				};
			}
			_iter_next_1b60775dc:;
			++it;
			goto _iter_begin_1b60775dc;
		}
		_iter_end_1b60775dc:;
	};
	return false;;
}



inline jule::Bool _1b2acd0d0_IsAssignOp(jule::U64 _50415_id) {
	if (_1b2accd16_IsPostfixOp(_50415_id)) {
		return true;;
	};
	{
		auto expr = &(_1b2ac2789_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6077a60:;
		if (it != expr_end) {
			jule::U64 *_5089_op = it;
			{
				if ((_50415_id == (*(_5089_op)))) {
					return true;;
				};
			}
			_iter_next_1b6077a60:;
			++it;
			goto _iter_begin_1b6077a60;
		}
		_iter_end_1b6077a60:;
	};
	return false;;
}



inline _20daa5e91_Log _1b2ad1622_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1b2acd872_Fileset>* _10033_f, jule::Str _10046_fmt, jule::Slice<jule::Any> _10066_args) {
	return _20daa5e91_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_20daa6403_Logf(_10046_fmt, _10066_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1b2ad19da_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6083373:;
		if (it != expr_end) {
			jule::I64 _1146_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1146_i] != _11035_prefix[_1146_i])) {
					return false;;
				};
			}
			_iter_next_1b6083373:;
			++it;
			_1146_i++;
			goto _iter_begin_1b6083373;
		}
		_iter_end_1b6083373:;
	};
	return true;;
}



inline jule::Str _1b2ad1d5e_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1286_b = (*(_12215_txt))[_12232_i];;
	if ((_1286_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1286_b == '+') || (_1286_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1422_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1286_b=(*(_12215_txt))[_12232_i];
			if (((_1286_b != '_') && (!(_1b2acbe36_IsDecimal(_1286_b))))) {
				goto _iter_end_1b6086684;
			};
		}
	_iter_next_1b6086684:;
	}
	_iter_end_1b6086684:;;
	if ((_12232_i == _1422_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1b2ad2227_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1b2ad1d5e_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1b2ad259b_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1b60886ec:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1683_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1683_b == '_') || _1b2acbe36_IsDecimal(_1683_b)) {
					_case_begin_1b60891e2:;
					{
						goto _iter_next_1b6086ac4;
					}
				}
				else if (_1b2ad3e2c_isFloatFmtP(_1683_b, _16036_i)) {
					_case_begin_1b608928b:;
					{
						return _1b2ad2227_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1b608916a:;
					{
						goto _iter_end_1b6086ac4;
					}
				}
				_match_end_1b6089104:;
			};
		}
	_iter_next_1b6086ac4:;
	}
	_iter_end_1b6086ac4:;;
	return jule::Str();;
}



inline jule::Str _1b2ad2920_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1b2ad1d5e_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1b2ad2c94_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1b2ad1d5e_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1b2ad3228_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2013_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2013_b == 'e') || (_2013_b == 'E')))) {
				__jule_func_result = _1b2ad1d5e_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2013_b != '_') && (!(_1b2acbe36_IsDecimal(_2013_b))))) {
				goto _iter_end_1b608be81;
			};
		}
	_iter_next_1b608be81:;
	}
	_iter_end_1b608be81:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1b2ad346a_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2176_i = 0LL;;
	_julec_label_1b608e00a:;
	for (; (_2176_i < (*(_21615_txt)).len()); (_2176_i)++) {
		{
			jule::U8 _2203_b = (*(_21615_txt))[_2176_i];;
			{
				
				if ((_2203_b == '.')) {
					_case_begin_1b608ec64:;
					{
						__jule_func_result = _1b2ad3228_floatNum(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((_2203_b == '_')) {
					_case_begin_1b608ed0d:;
					{
						goto _iter_next_1b608e13c;
					}
				}
				else if (_1b2ad3aa8_isFloatFmtE(_2203_b, _2176_i)) {
					_case_begin_1b608ed74:;
					{
						__jule_func_result = _1b2ad1d5e_floatFmtE(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1b2acbe36_IsDecimal(_2203_b)))) {
					_case_begin_1b608edda:;
					{
						goto _iter_end_1b608e13c;
					}
				}
				_match_end_1b608eb87:;
			};
		}
	_iter_next_1b608e13c:;
	}
	_iter_end_1b608e13c:;;
	if ((_2176_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_21615_txt)).slice(0LL, _2176_i));
	return __jule_func_result;;
}



inline jule::Str _1b2ad3734_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1b2ad19da_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2486_i = 2LL;;
	for (; (_2486_i < (*(_23915_txt)).len()); (_2486_i)++) {
		{
			if ((((*(_23915_txt))[_2486_i] != '_') && (!(_1b2acc200_IsBinary((*(_23915_txt))[_2486_i]))))) {
				goto _iter_end_1b6092618;
			};
		}
	_iter_next_1b6092618:;
	}
	_iter_end_1b6092618:;;
	if ((_2486_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_23915_txt)).slice(0LL, _2486_i));
	return __jule_func_result;;
}



inline jule::Bool _1b2ad3aa8_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1b2ad3e2c_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1b2ad42a1_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1b609530d:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2763_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2763_b == '_') || _1b2acbe36_IsDecimal(_2763_b)) {
					_case_begin_1b60961bb:;
					{
						goto _iter_next_1b6094ede;
					}
				}
				else if (_1b2ad3e2c_isFloatFmtP(_2763_b, _26938_i)) {
					_case_begin_1b6096265:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1b6096144:;
					{
						goto _iter_end_1b6094ede;
					}
				}
				_match_end_1b60960cd:;
			};
		}
	_iter_next_1b6094ede:;
	}
	_iter_end_1b6094ede:;;
	return false;;
}



inline jule::Bool _1b2ad4625_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1b60971bc:;
			{
				goto _case_begin_1b6095918;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1b6095918:;
			{
				goto _case_begin_1b6097255;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1b6097255:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b609586e:;
			{
				return true;;
			}
		}
		_match_end_1b6095792:;
	};
}



inline jule::Bool _1b2ad4999_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1b6098ce5:;
			{
				goto _case_begin_1b6098d5b;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1b6098d5b:;
			{
				goto _case_begin_1b6098dc2;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1b6098dc2:;
			{
				goto _case_begin_1b6098e49;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1b6098e49:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b6098c29:;
			{
				return true;;
			}
		}
		_match_end_1b60987c8:;
	};
}



inline jule::Str _1b2ad4e94_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3266_octalStart = 1LL;;
	jule::Bool _3286_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3266_octalStart)++;
		_3286_o=true;
	};
	jule::I64 _3376_i = _3266_octalStart;;
	for (; (_3376_i < (*(_31814_txt)).len()); (_3376_i)++) {
		{
			jule::U8 _3393_b = (*(_31814_txt))[_3376_i];;
			if ((_3393_b == '.')) {
				if (_3286_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1b2ad3228_floatNum(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (_1b2ad3aa8_isFloatFmtE(_3393_b, _3376_i)) {
				__jule_func_result = _1b2ad1d5e_floatFmtE(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (((_3393_b != '_') && (!(_1b2acc4b9_IsOctal(_3393_b))))) {
				goto _iter_end_1b609d39e;
			};
		}
	_iter_next_1b609d39e:;
	}
	_iter_end_1b609d39e:;;
	if ((_3376_i == _3266_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_31814_txt)).slice(0LL, _3376_i));
	return __jule_func_result;;
}



inline jule::Str _1b2ad5170_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3696_i = 2LL;;
	_julec_label_1b60a1e63:;
	for (; (_3696_i < (*(_36012_txt)).len()); (_3696_i)++) {
		{
			jule::U8 _3723_b = (*(_36012_txt))[_3696_i];;
			{
				
				if (_1b2ad4625_isFloatFmtDotp(_36012_txt, _3696_i)) {
					_case_begin_1b60a2ace:;
					{
						__jule_func_result = _1b2ad2c94_floatFmtDotp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1b2ad4999_isFloatFmtDotfp(_36012_txt, _3696_i)) {
					_case_begin_1b60a2b78:;
					{
						__jule_func_result = _1b2ad2920_floatFmtDotfp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1b2ad3e2c_isFloatFmtP(_3723_b, _3696_i)) {
					_case_begin_1b60a2bde:;
					{
						__jule_func_result = _1b2ad2227_floatFmtP(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1b2ad42a1_isFloatFmtDotnp(_36012_txt, _3696_i)) {
					_case_begin_1b60a2c55:;
					{
						__jule_func_result = _1b2ad259b_floatFmtDotnp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (((_3723_b != '_') && (!(_1b2acc783_IsHex(_3723_b))))) {
					_case_begin_1b60a2cbb:;
					{
						goto _iter_end_1b60a200c;
					}
				}
				_match_end_1b60a29e1:;
			};
		}
	_iter_next_1b60a200c:;
	}
	_iter_end_1b60a200c:;;
	if ((_3696_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_36012_txt)).slice(0LL, _3696_i));
	return __jule_func_result;;
}



inline jule::Str _1b2ad54c2_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3996_i = 2LL;;
	for (; (_3996_i < _39328_n); (_3996_i)++) {
		{
			if ((!(_1b2acc783_IsHex((*(_39315_txt))[_3996_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1b60a496b:;
	}
	_iter_end_1b60a496b:;;
	__jule_func_result=__jule_bytesToStr((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1b2ad578b_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1b2ad54c2_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1b2ad5a55_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1b2ad54c2_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1b2ad5d1e_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1b2ad54c2_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1b2ad60d8_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1b2acc4b9_IsOctal((*(_42616_txt))[1LL]))) || (!(_1b2acc4b9_IsOctal((*(_42616_txt))[2LL])))) || (!(_1b2acc4b9_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_20daa5e91_Log> _1b2adb0cc_Lex(jule::Ptr<_1b2acd872_Fileset> _80612_f, jule::I64 _80625_mode) {
	if ((_80612_f == nullptr)) {
		return nullptr;;
	};
	_1b2ad6858_lex _8116_lex = _1b2ad6858_lex{._field_mode=_80625_mode, ._field_tokens=jule::Slice<jule::Ptr<_1b2ac7eba_Token>>(nullptr), ._field_file=_80612_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_20daa5e91_Log>(nullptr)};;
	_1b2ad96a2_newLine(&_8116_lex);
	_1b2ad7480_lex(&_8116_lex);
	if ((_8116_lex._field_errors.len() > 0LL)) {
		return _8116_lex._field_errors;;
	};
	(*(_80612_f))._field_Tokens=_8116_lex._field_tokens;
	return nullptr;;
}



inline void _1b2bcac9e_lshiftUnsig(_1b2b6c23a_Const* _58821_c, _1b2b6c23a_Const* _58832_x) {
	jule::U64 _5892_l = _1b2bc46e3_AsU64(_58821_c);;
	jule::U64 _5902_r = _1b2bc46e3_AsU64(_58832_x);;
	_1b2bc4eda_SetU64(_58821_c, ({ jule::U64 __jule_x = _5892_l; jule::U64 __jule_y = _5902_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1b2bcb0ce_rshiftUnsig(_1b2b6c23a_Const* _59421_c, _1b2b6c23a_Const* _59432_x) {
	jule::U64 _5952_l = _1b2bc46e3_AsU64(_59421_c);;
	jule::U64 _5962_r = _1b2bc46e3_AsU64(_59432_x);;
	_1b2bc4eda_SetU64(_59421_c, ({ jule::U64 __jule_x = _5952_l; jule::U64 __jule_y = _5962_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Str _1b2c6bd1d_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1b619ade7:;
			{
				return _1b2c6b3e4_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1b619e824:;
			{
				return _1b2c6b603_SysUint;;
			}
		}
		else {
			_case_begin_1b619b8ed:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1b619ea55:;
	};
}



inline jule::I64 _1b2c6c0d7_BitSizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1b61a07e2:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1b61a0c54:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1b61a0cba:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1b61a0858:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1b61a08be:;
			{
				return _1b2c6b191_BitSize;;
			}
		}
		else {
			_case_begin_1b61a0b66:;
			{
				return -1LL;;
			}
		}
		_match_end_1b61a0737:;
	};
}



inline jule::Str _1b2c6c428_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b61a3c46:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b61a3a48:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b61a3aae:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b61a3cac:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1b61a395a:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b61a353c:;
	};
}



inline jule::Str _1b2c6c6ae_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b61a550b:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b61a5572:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b61a55d8:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b61a564e:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1b61a3d34:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b61a5121:;
	};
}



inline jule::Str _1b2c6c978_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1b61a7024:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b61a6ce3:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1b61a4131:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b61a68d6:;
	};
}



inline jule::Bool _1b2c6d57d_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1cab1e1c4_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1b2c6d847_BitSizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1b61abe5d:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b61ab0a0:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b61aa500:;
	};
}



inline jule::I64 _1b2c6db11_BitSizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1b61acba6:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1b61ac205:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1b61ac26b:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b61ac17d:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b61ac799:;
	};
}



inline jule::I64 _1b2c6ddca_BitSizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1b61ae757:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1b61ad943:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1b61ad9a9:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b61ad8cc:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b61add2d:;
	};
}



inline void _1b2c6e073_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _20dbbabaa_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1b61b0181:;
				{
					_1b2c6b191_BitSize=64LLU;
					_1b2c6b3e4_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1b2c6b603_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1b61b07ad:;
				{
					_1b2c6b191_BitSize=32LLU;
					_1b2c6b3e4_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1b2c6b603_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1b61b06c0:;
		};
	};
}



inline void _1b2c6e1e9_init(void) {
	_1b2c6e073_UpdateTarget();
}



inline jule::I64 _1b2c72cad_MinI(jule::Str _6113_k) {
	_6113_k=_1b2c6bd1d_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1b61b2c33:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1b61b3041:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1b61b30a7:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1b61b311d:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1b61aeadc:;
			{
				return 0LL;;
			}
		}
		_match_end_1b61aeba8:;
	};
}



inline jule::I64 _1b2c730bb_MaxI(jule::Str _7913_k) {
	_7913_k=_1b2c6bd1d_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1b61b465d:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1b61b49c1:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1b61b4a48:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1b61b4ac0:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1b61b40b9:;
			{
				return 0LL;;
			}
		}
		_match_end_1b61b4053:;
	};
}



inline jule::U64 _1b2c73385_MaxU(jule::Str _9713_k) {
	_9713_k=_1b2c6bd1d_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1b61bae4a:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1b61bb2ad:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1b61bb335:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1b61bb3ac:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1b61bacd5:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b61bac6e:;
	};
}



inline jule::F64 _1b2c736c6_Min(jule::Str _11512_k) {
	_11512_k=_1b2c6bd1d_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1b2c72cad_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1b61bd986:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1b61bcdd6:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1b61bd14a:;
			{
				return 0LL;;
			}
		}
		_match_end_1b61bcd70:;
	};
}



inline jule::F64 _1b2c7395c_Max(jule::Str _13312_k) {
	_13312_k=_1b2c6bd1d_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1b2c730bb_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1b2c73385_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1b61c0e94:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1b61c036c:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1b61c0658:;
			{
				return 0LL;;
			}
		}
		_match_end_1b61c0306:;
	};
}



inline jule::Bool _1b2c74a7e_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1b2c74d8c_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1b2c75156_IsInt(jule::Str _4610_k) {
	return (_1b2c74a7e_IsSigInt(_4610_k) || _1b2c74d8c_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1b2c75497_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1b2c7572d_IsNum(jule::Str _5610_k) {
	return (_1b2c75156_IsInt(_5610_k) || _1b2c75497_IsFloat(_5610_k));;
}



inline jule::Bool _1b2c759e7_IsSigNum(jule::Str _6113_k) {
	return (_1b2c74a7e_IsSigInt(_6113_k) || _1b2c75497_IsFloat(_6113_k));;
}



inline jule::Bool _1b2cee422_FindModuleFile(jule::Slice<jule::Ptr<_20c648c55_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b61c6dce:;
		if (it != expr_end) {
			jule::Ptr<_20c648c55_DirEntry> *_149_d = it;
			{
				if (((!(_20c64cc6a_IsDir((*((*(_149_d))))._field_Stat.ptr()))) && (*((*(_149_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1b61c6dce:;
			++it;
			goto _iter_begin_1b61c6dce;
		}
		_iter_end_1b61c6dce:;
	};
	return false;;
}



inline jule::Str _1b2cee730_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_20c648c55_DirEntry>> _277_dirents = ({
				auto except = static__227d37071_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1b61c6b26;
				} jule::Slice<jule::Ptr<_20c648c55_DirEntry>>(nullptr);});
			});;
			jule::Bool _313_exist = _1b2cee422_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I64 _363_n = _2527_path.len();;
			_2527_path=_227d34c61_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1b61c6b26;
			};
		}
	_iter_next_1b61c6b26:;
	}
	_iter_end_1b61c6b26:;;
	return jule::Str();;
}



inline jule::Slice<_20daa5e91_Log> _1b2cee9e9_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__20c64b20d_Read(_227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4721_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_20daa5e91_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20daa5e91_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _20d8be480_Trim(_227e7c66c_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_20daa5e91_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20daa5e91_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1b2d0029c_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096720_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _20d8b60e2_IsUpper(_142_r);;
}



inline jule::Bool _1b2d60c03_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1b2d47e3d_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1b2d63486_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096720_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1b2d62a3a_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1b2d62d7b_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b61d43d6:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1b61d43d6;
				};
			}
			_iter_next_1b61d43d6:;
			++it;
			goto _iter_begin_1b61d43d6;
		}
		_iter_end_1b61d43d6:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1b2d6382c_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096720_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_2280977ba_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1b61d55a2:;
	}
	_iter_end_1b61d55a2:;;
	return _227e7c936_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1b2d63112_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1b61d87d6:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b61d8ee0:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b61d9056:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1b61d90bc:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1b61d9133:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b61d91aa:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1b61d9232:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1b61d92a9:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1b61d9331:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1b61d93a8:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1b61d8d58:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1b2d63486_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1b2d63112_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1b61de37a:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1cab17563_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b61dd687:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1cab17563_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b61de07d:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1cab17563_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1b61dcae8:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1cab17563_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1b61dcd3a:;
	};
}



inline void _1b2d6382c_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1b2d63486_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_2280977ba_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _1b2e2b8b2_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I64 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2280963ce_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1b61e6937:;
	}
	_iter_end_1b61e6937:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1b2e32ed4_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _292_start = (*(_2824_i));;
	jule::I64 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I64 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2280963ce_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1b61e93b8:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1b61e942e:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1b61e9583:;
			};
		}
	_iter_next_1b61e863c:;
	}
	_iter_end_1b61e863c:;;
	return nullptr;;
}



inline void _1b2e332c0_FmtByDefault(_20d8ca601_Builder* _4822_buf, jule::Any* _4846_arg) {
	if (((*(_4846_arg)) == nullptr)) {
		_20d8d4ac2_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4846_arg)) };
		
		if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1b61e8906:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, _1cab12580_FmtFloat(static_cast<jule::F64>((*(_4846_arg)).cast<jule::F32>(&__jule_any_type137)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b61eb563:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, _1cab12580_FmtFloat((*(_4846_arg)).cast<jule::F64>(&__jule_any_type6), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1b61eb5c9:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, _1cab28d49_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I8>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1b61eac38:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, _1cab28d49_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I16>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b61eac9e:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, _1cab28d49_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b61ead15:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, _1cab28d49_FmtInt((*(_4846_arg)).cast<jule::I64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1b61ead7b:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, _1cab28981_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1b61eb871:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, _1cab28981_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U16>(&__jule_any_type140)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1b61eb8d7:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, _1cab28981_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U32>(&__jule_any_type141)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b61eb94d:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, _1cab28981_FmtUint((*(_4846_arg)).cast<jule::U64>(&__jule_any_type3), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b61eb9b4:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, (*(_4846_arg)).cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b61eba2a:;
			{
				if ((*(_4846_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					_20d8d4ac2_WriteStr(_4822_buf, jule::Str::lit("true", 4));
				} else {
					_20d8d4ac2_WriteStr(_4822_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1b61ea694:;
			{
				_20d8d4ac2_WriteStr(_4822_buf, _1b4bda1b8_toStr((*(_4846_arg))));
			}
		}
		_match_end_1b61ea62d:;
	};
}



inline void _1b2e336dd_applyFmtByDefault(_20d8ca601_Builder* _8727_buf, jule::I64* _8755_j, jule::Slice<jule::Any> _8763_args) {
	jule::Any _882_arg = _8763_args[(*(_8755_j))];;
	((*(_8755_j)))++;
	_1b2e332c0_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1b2e33b0b_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _20d8ca601_Builder* _9536_buf, jule::I64* _9564_j, jule::Slice<jule::Any> _9572_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1b2e336dd_applyFmtByDefault(_9536_buf, _9564_j, _9572_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_20d8d4ac2_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_20d8d4819_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Slice<jule::U8> _1b2e33e80_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _227e7c3d6_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1216_i = _1b2e2b8b2_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1256_j = 0LL;;
	jule::I64 _1266_last = 0LL;;
	_20d8ca601_Builder _1276_buf = static__20d8cb1c3_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1b2e2b8b2_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			_20d8d4819_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
			jule::Slice<jule::U8> _1307_format = _1b2e32ed4_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1b6208ac0;
			};
			_1b2e33b0b_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				_20d8d4819_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1b6208ac0;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1b6208ac0:;
	}
	_iter_end_1b6208ac0:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		_20d8d4819_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
	};
	return _20d8d5d6a_Buf(&_1276_buf);;
}



inline jule::Str _1b2e90c12_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _227e7c936_StrFromBytes(_1b2e33e80_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b27811e5_runtimeFindFn(jule::Ptr<_1b2cd4e1e_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1b2bda9b2_Fn> _126_f = _1b2cd652a_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 109) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1b2b0db6b_Struct> _1b2781745_runtimeFindStruct(jule::Ptr<_1b2cd4e1e_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1b2b0db6b_Struct> _256_f = _1b2cd612e_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 107) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1b2be0d4c_parameterUsesGenerics(jule::Ptr<_1b2bdc91a_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>* _39546_generics) {
	if (_1b2bd963c_IsSelf((*((*(_39531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1b2dcc7ca_kindUsesGenerics(&((*((*(_39531_p))))._field_Kind), _39546_generics);;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c9a786_buildAsComptimeMethodData(jule::Ptr<_1b2bdda70_FnIns>* _203035_f) {
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2cd4e1e_ImportInfo> _1b2c9a995_findComptimePackage(jule::Ptr<_1b2d03091_sema>* _203829_s) {
	return _1b2d03569_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1b2cd4e1e_ImportInfo>>((void*)__jule_anon1b653c3ed, nullptr, nullptr));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c9ad19_buildComptimeTypeInfoData(jule::Ptr<_1b2d03091_sema>* _204435_s, jule::Ptr<_1b2db1627_TypeKind>* _204450_t) {
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2d0290e_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2c9b15a_buildComptimeValue(jule::Ptr<_1b2d7dc21_Data>* _205228_d) {
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c8cba7_comptimeValue>(_1b2c8cba7_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Str _1b2c9de82_toStrConstraints(jule::Ptr<_1b2daee72_InsGeneric> _14321_g) {
	_20d8ca601_Builder _1446_sb = static__20d8cb1c3_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6730800:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1b2db1627_TypeKind> *_1459_c = it;
			{
				_20d8d4ac2_WriteStr(&_1446_sb, _1b2db1a23_Str((*(_1459_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					_20d8d4ac2_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1b6730800:;
			++it;
			_1456_i++;
			goto _iter_begin_1b6730800;
		}
		_iter_end_1b6730800:;
	};
	return _20d8d53b9_Str(&_1446_sb);;
}



inline jule::Bool _1b2c9e34a_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1b2db1627_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1b67326ae:;
			{
				jule::Ptr<_1b2db9740_Prim> _1573_prim = _1b2db3ccd_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1b2c759e7_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1b6732725:;
			{
				jule::Ptr<_1b2db9740_Prim> _1633_prim = _1b2db3ccd_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1b2c74d8c_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1b673278b:;
			{
				jule::Ptr<_1b2db9740_Prim> _1693_prim = _1b2db3ccd_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1b2c75497_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1b6732813:;
			{
				jule::Ptr<_1b2db9740_Prim> _1753_prim = _1b2db3ccd_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1b2c7572d_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1b67329de:;
			{
				return _1b2db300d_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1b6732a55:;
			{
				return (!(_1b2db300d_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1b6732abb:;
			{
				return _1b2db2c77_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1b6732b32:;
			{
				return _1b2db3294_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1b67310c5:;
			{
				return false;;
			}
		}
		_match_end_1b673255a:;
	};
}



inline jule::Bool _1b2c9e614_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1b2c9c348_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b673863d:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1b673863d:;
			++it;
			goto _iter_begin_1b673863d;
		}
		_iter_end_1b673863d:;
	};
	return false;;
}



inline jule::Ptr<_1b2cab830_scopeChecker> _1b2ca1eeb_newScopeCheckerBase(jule::Ptr<_1b2d03091_sema>* _3229_s, jule::Ptr<_1b2bdda70_FnIns> _3243_owner) {
	return jule::new_ptr<_1b2cab830_scopeChecker>(_1b2cab830_scopeChecker{._field_calledFrom=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_s=(*(_3229_s)), ._field_owner=_3243_owner, ._field_parent=jule::Ptr<_1b2cab830_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1b2be1cb5_SymTab>(_1b2be1cb5_SymTab{._field_File=jule::Ptr<_1b2acd872_Fileset>(nullptr), ._field_Passes=jule::Slice<_1b2cc4408_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1b2be61c6_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1b2be887c_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1b2bea087_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1b2c9ee83_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_tree=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1b2d26ca7_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1b2caa840_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1b2ca774e_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1b2cab830_scopeChecker> _1b2ca23b4_newScopeChecker(jule::Ptr<_1b2d03091_sema>* _4025_s, jule::Ptr<_1b2bdda70_FnIns> _4039_owner) {
	jule::Ptr<_1b2cab830_scopeChecker> _416_base = _1b2ca1eeb_newScopeCheckerBase(_4025_s, _4039_owner);;
	(*(_416_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1b2caa840_scopeLabel>>>(nullptr);
	(*_416_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1b2ca774e_GotoSt>>>(nullptr);
	return _416_base;;
}



inline jule::Ptr<_1b2caa840_scopeLabel> _1b2ca2738_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1b2cab830_scopeChecker> _5037_scope) {
	jule::Ptr<_1b2caa840_scopeLabel> _516_label = _1b2cb0bec_findLabelScope(_5037_scope, _5021_ident);;
	while ((_516_label == nullptr)) {
		{
			if ((((*_5037_scope.alloc)._field_parent == nullptr) || ((*_5037_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_5037_scope=(*_5037_scope.alloc)._field_parent;
			_516_label=_1b2cb0bec_findLabelScope(_5037_scope, _5021_ident);
		}
	_iter_next_1b6758e22:;
	}
	_iter_end_1b6758e22:;;
	return _516_label;;
}



inline jule::Slice<jule::Ptr<_1b2d7dc21_Data>> _1b2ca2a79_getDatasFromTupleData(jule::Ptr<_1b2d7dc21_Data>* _6231_d) {
	if ((_1b2db5b04_Tup((*((*(_6231_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_6231_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type83) {
				_case_begin_1b675d6b8:;
				{
					return (*((*((*(_6231_d))))._field_Model.unsafe_cast_ptr<_1b2bd3c0d_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1b675ac6a:;
				{
					jule::Ptr<_1b2dbe833_Tuple> _688_t = _1b2db5b04_Tup((*((*(_6231_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1b2d7dc21_Data>> _698_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d7dc21_Data>>::alloc(0LL, (*(_688_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2d7dc21_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_688_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b675c563:;
						if (it != expr_end) {
							jule::Ptr<_1b2db1627_TypeKind> _7016_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1b2d7dc21_Data>> &__jule_push_dest = _698_r; __jule_push_dest.push(jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_7016_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})); };
							}
							_iter_next_1b675c563:;
							++it;
							goto _iter_begin_1b675c563;
						}
						_iter_end_1b675c563:;
					};
					return _698_r;;
				}
			}
			_match_end_1b675ac04:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d7dc21_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_6231_d)); __jule_collection; });;
	};
}



inline jule::Bool _1b2ca32e9_checkMut(jule::Ptr<_1b2d03091_sema>* _9718_s, jule::Ptr<_1b2d7dc21_Data>* _9729_left, jule::Ptr<_1b2d7dc21_Data> _9746_right, jule::Ptr<_1b2ac7eba_Token> _9760_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_9729_left))))._field_Mutable))) {
			_case_begin_1b6766bcc:;
			{
				_1b2d05e95_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_9746_right != nullptr) && (!((*_9746_right.alloc)._field_Mutable))) && _1b2db300d_Mutable((*_9746_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1b67670d9:;
			{
				if ((((*(_9760_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1b2db5351_Struct((*(_9746_right))._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1b2d05e95_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_9746_right))._field_Kind), &__jule_any_type5); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b6766b66:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b6766aab:;
	};
}



inline jule::Bool _1b2ca37d3_checkAssign(jule::Ptr<_1b2d03091_sema>* _11621_s, jule::Ptr<_1b2d7dc21_Data>* _11636_left, jule::Ptr<_1b2d7dc21_Data> _11653_right, jule::Ptr<_1b2ac7eba_Token> _11667_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b2bdda70_FnIns> _1172_f = _1b2db50ba_Fn((*((*(_11636_left))))._field_Kind.ptr());;
	if ((((_1172_f != nullptr) && ((*_1172_f.alloc)._field_Decl != nullptr)) && (*(*(_1172_f))._field_Decl.alloc)._field_Global)) {
		_1b2d05e95_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1b2d7e65b_IsConst((*(_11636_left)).ptr())) {
			_case_begin_1b676c870:;
			{
				_1b2d05e95_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1b2d06308_pushSuggestion((*(_11621_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_11636_left))))._field_Lvalue))) {
			_case_begin_1b676c919:;
			{
				_1b2d05e95_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1b2ca32e9_checkMut(_11621_s, _11636_left, _11653_right, _11667_op)))) {
			_case_begin_1b676c991:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b676c809:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b676c6a5:;
	};
}



inline jule::Bool _1b2ca3bac_isValidAstStForNextSt(jule::Any* _13831_n) {
	{
		auto &_match_expr{ (*(_13831_n)) };
		
		if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b675d93d:;
			{
				return (!((*((*(_13831_n)).cast_ptr<_1b2aebd8a_AssignSt>(&__jule_any_type57)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b676eee3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b676eda0:;
			{
				return false;;
			}
		}
		_match_end_1b676ed39:;
	};
}



inline jule::Bool _1b2ca3dee_isValidStForNextSt(jule::Any* _14924_st) {
	{
		auto &_match_expr{ (*(_14924_st)) };
		
		if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type43) {
			_case_begin_1b6776835:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b6776714:;
			{
				{
					auto &_match_expr{ (*((*(_14924_st)).cast_ptr<_1b2d7dc21_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1b677c0dd:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b6782c81:;
						{
							return false;;
						}
					}
					_match_end_1b6781983:;
				};
			}
		}
		else {
			_case_begin_1b677280e:;
			{
				return false;;
			}
		}
		_match_end_1b6774833:;
	};
}



inline jule::U64 _1b2cbe07e_removeEqFromOp(jule::U64 _214019_op) {
	{
		auto &_match_expr{ _214019_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b6786559:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1b67865c0:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1b6782478:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b67824de:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b6782e7e:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b6782ee5:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b678305b:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1b67830c2:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1b678668b:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1b6786702:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1b677515d:;
			{
				return _214019_op;;
			}
		}
		_match_end_1b6782ce7:;
	};
}



inline void _1b2cbe2b0_makeComptimeRange(jule::Ptr<_1b2d7dc21_Data>* _216927_d) {
	{
		
		if ((_1b2db6121_comptimeStructFields((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6787802:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c76ba2_comptimeRange>(_1b2c76ba2_comptimeRange{._field_kind=jule::Trait(_1b2db6121_comptimeStructFields((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data5)});
			}
		}
		else if ((_1b2db663d_comptimeEnumFields((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b678a140:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c76ba2_comptimeRange>(_1b2c76ba2_comptimeRange{._field_kind=jule::Trait(_1b2db663d_comptimeEnumFields((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data5)});
			}
		}
		else if ((_1b2db740d_comptimeTypeInfos((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b678a1a6:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c76ba2_comptimeRange>(_1b2c76ba2_comptimeRange{._field_kind=jule::Trait(_1b2db740d_comptimeTypeInfos((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data5)});
			}
		}
		else if ((_1b2db6b5a_comptimeParams((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6787868:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c76ba2_comptimeRange>(_1b2c76ba2_comptimeRange{._field_kind=jule::Trait(_1b2db6b5a_comptimeParams((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data5)});
			}
		}
		else if ((_1b2db792a_comptimeStatics((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b67878ce:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c76ba2_comptimeRange>(_1b2c76ba2_comptimeRange{._field_kind=jule::Trait(_1b2db792a_comptimeStatics((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data5)});
			}
		}
		else if ((_1b2db8981_comptimeFiles((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b6787945:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c76ba2_comptimeRange>(_1b2c76ba2_comptimeRange{._field_kind=jule::Trait(_1b2db8981_comptimeFiles((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data5)});
			}
		}
		else if ((_1b2db8464_comptimeDecls((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b678a717:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c76ba2_comptimeRange>(_1b2c76ba2_comptimeRange{._field_kind=jule::Trait(_1b2db8464_comptimeDecls((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1b2c76982_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1b678778b:;
			{
				(*((*(_216927_d))))._field_Decl=true;
			}
		}
		_match_end_1b6789d10:;
	};
}



inline jule::Bool _1b2cbe579_canComptimeMatch(jule::Ptr<_1b2d7dc21_Data>* _219226_d) {
	if ((!(_1b2d7c3e5_isGoodValueToInfer(_219226_d)))) {
		return false;;
	};
	return (_1b2d7e65b_IsConst((*(_219226_d)).ptr()) || (_1b2db7694_comptimeTypeInfo((*((*(_219226_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1b2cbe843_stmtIsDef(jule::Any* _220015_stmt) {
	{
		auto &_match_expr{ (*(_220015_stmt)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b67945ab:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b6796b96:;
			{
				jule::Ptr<_1b2ca8585_MultiAssign> _22053_ma = (*(_220015_stmt)).cast_ptr<_1b2ca8585_MultiAssign>(&__jule_any_type43);;
				return ((*(_22053_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1b6796756:;
			{
				return false;;
			}
		}
		_match_end_1b67966bd:;
	};
}



inline jule::I64 _1b2cbebb7_countMatchType(jule::Ptr<_1b2ca8cc2_Match>* _221220_m, jule::Ptr<_1b2db1627_TypeKind>* _221232_t) {
	jule::I64 _22136_n = 0LL;;
	_julec_label_1b6798307:;
	{
		auto expr = &((*((*(_221220_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6798725:;
		if (it != expr_end) {
			jule::Ptr<_1b2ca97ea_Case> *_22159_c = it;
			{
				if (((*(_22159_c)) == nullptr)) {
					goto _iter_next_1b6798725;
				};
				{
					auto expr = &((*((*(_22159_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6799528:;
					if (it != expr_end) {
						jule::Ptr<_1b2d7dc21_Data> *_221910_expr = it;
						{
							if (((*(_221910_expr)) == nullptr)) {
								goto _iter_end_1b6798725;
							};
							if (_1b2db1d64_Equal((*(_221232_t)), (*((*(_221910_expr))))._field_Model.cast_ptr<_1b2db1627_TypeKind>(&__jule_any_type86))) {
								(_22136_n)++;
							};
						}
						_iter_next_1b6799528:;
						++it;
						goto _iter_begin_1b6799528;
					}
					_iter_end_1b6799528:;
				};
			}
			_iter_next_1b6798725:;
			++it;
			goto _iter_begin_1b6798725;
		}
		_iter_end_1b6798725:;
	};
	return _22136_n;;
}



inline jule::Ptr<_1b2db8d38_TypeSymbol> _1b2cc476b_buildType(jule::Ptr<_1b2add3dc_TypeDecl> _6818_t) {
	if ((_6818_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=_6818_t, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr)});;
}



inline jule::Ptr<_1b2d7ed98_Value> _1b2cc4a79_buildExpr(jule::Ptr<_1b2ae2721_Expr> _7718_expr) {
	if ((_7718_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=_7718_expr, ._field_Data=jule::Ptr<_1b2d7dc21_Data>(nullptr)});;
}



inline jule::Ptr<_1b2db0835_TypeAlias> _1b2cc4d43_buildTypeAlias(jule::Ptr<_1b2b04e09_TypeAliasDecl> _8623_decl) {
	return jule::new_ptr<_1b2db0835_TypeAlias>(_1b2db0835_TypeAlias{._field_Scope=(*(_8623_decl))._field_Scope, ._field_Public=(*_8623_decl.alloc)._field_Public, ._field_Binded=(*_8623_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_8623_decl.alloc)._field_Token, ._field_Ident=(*_8623_decl.alloc)._field_Ident, ._field_Kind=_1b2cc476b_buildType((*_8623_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1b2b0ac78_Field> _1b2cc5184_buildField(jule::Ptr<_1b2b08528_FieldDecl> _9719_decl) {
	return jule::new_ptr<_1b2b0ac78_Field>(_1b2b0ac78_Field{._field_Owner=jule::Ptr<_1b2b0db6b_Struct>(nullptr), ._field_Token=(*(_9719_decl))._field_Token, ._field_Public=(*_9719_decl.alloc)._field_Public, ._field_Mutable=(*_9719_decl.alloc)._field_Mutable, ._field_Ident=(*_9719_decl.alloc)._field_Ident, ._field_Kind=_1b2cc476b_buildType((*_9719_decl.alloc)._field_Kind), ._field_Default=(*_9719_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1b2b0ac78_Field>> _1b2cc541a_buildFields(jule::Slice<jule::Ptr<_1b2b08528_FieldDecl>>* _10821_decls) {
	jule::Slice<jule::Ptr<_1b2b0ac78_Field>> _1096_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b0ac78_Field>>::alloc(0LL, (*(_10821_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2b0ac78_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _10821_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a12494:;
		if (it != expr_end) {
			jule::Ptr<_1b2b08528_FieldDecl> _11014_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b2b0ac78_Field>> &__jule_push_dest = _1096_fields; __jule_push_dest.push(_1b2cc5184_buildField(_11014_decl)); };
			}
			_iter_next_1b6a12494:;
			++it;
			goto _iter_begin_1b6a12494;
		}
		_iter_end_1b6a12494:;
	};
	return _1096_fields;;
}



inline jule::Ptr<_1b2b0db6b_Struct> _1b2cc56d4_buildStruct(jule::Ptr<_1b2b08e1e_StructDecl> _11620_decl) {
	return jule::new_ptr<_1b2b0db6b_Struct>(_1b2b0db6b_Struct{._field_sema=jule::Ptr<_1b2d03091_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>(nullptr), ._field_Token=(*(_11620_decl))._field_Token, ._field_Ident=(*_11620_decl.alloc)._field_Ident, ._field_Fields=_1b2cc541a_buildFields(&((*_11620_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr), ._field_Public=(*_11620_decl.alloc)._field_Public, ._field_Binded=(*_11620_decl.alloc)._field_Binded, ._field_Directives=(*_11620_decl.alloc)._field_Directives, ._field_Generics=(*_11620_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1b2be61c6_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1b2b119c6_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1b2bd8edd_Param> _1b2cc599d_buildParam(jule::Ptr<_1b2aedb4a_ParamDecl> _12819_decl) {
	return jule::new_ptr<_1b2bd8edd_Param>(_1b2bd8edd_Param{._field_Token=(*(_12819_decl))._field_Token, ._field_Mutable=(*_12819_decl.alloc)._field_Mutable, ._field_Variadic=(*_12819_decl.alloc)._field_Variadic, ._field_Reference=(*_12819_decl.alloc)._field_Reference, ._field_Kind=_1b2cc476b_buildType((*_12819_decl.alloc)._field_Kind), ._field_Ident=(*_12819_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1b2bd8edd_Param>> _1b2cc5d77_buildParams(jule::Slice<jule::Ptr<_1b2aedb4a_ParamDecl>>* _13921_decls) {
	jule::Slice<jule::Ptr<_1b2bd8edd_Param>> _1406_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2bd8edd_Param>>::alloc(0LL, (*(_13921_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2bd8edd_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _13921_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a164ba:;
		if (it != expr_end) {
			jule::Ptr<_1b2aedb4a_ParamDecl> _14114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b2bd8edd_Param>> &__jule_push_dest = _1406_params; __jule_push_dest.push(_1b2cc599d_buildParam(_14114_decl)); };
			}
			_iter_next_1b6a164ba:;
			++it;
			goto _iter_begin_1b6a164ba;
		}
		_iter_end_1b6a164ba:;
	};
	return _1406_params;;
}



inline jule::Ptr<_1b2bd876d_RetType> _1b2cc60b9_buildRetType(jule::Ptr<_1b2ae12d0_RetTypeDecl> _14721_decl) {
	if ((((*(_14721_decl))._field_Idents == nullptr) && ((*_14721_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b2bd876d_RetType>(_1b2bd876d_RetType{._field_Kind=_1b2cc476b_buildType((*_14721_decl.alloc)._field_Kind), ._field_Idents=(*_14721_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2cc6383_buildFunc(jule::Ptr<_1b2b0009c_FnDecl> _15718_decl) {
	return jule::new_ptr<_1b2bda9b2_Fn>(_1b2bda9b2_Fn{._field_sema=jule::Ptr<_1b2d03091_sema>(nullptr), ._field_Token=(*(_15718_decl))._field_Token, ._field_Global=(*_15718_decl.alloc)._field_Global, ._field_Unsafety=(*_15718_decl.alloc)._field_Unsafety, ._field_Public=(*_15718_decl.alloc)._field_Public, ._field_Binded=(*_15718_decl.alloc)._field_Binded, ._field_Statically=(*_15718_decl.alloc)._field_Statically, ._field_Exceptional=(*_15718_decl.alloc)._field_Exceptional, ._field_Ident=(*_15718_decl.alloc)._field_Ident, ._field_Directives=(*_15718_decl.alloc)._field_Directives, ._field_Scope=(*_15718_decl.alloc)._field_Scope, ._field_Generics=(*_15718_decl.alloc)._field_Generics, ._field_Result=_1b2cc60b9_buildRetType((*_15718_decl.alloc)._field_Result), ._field_Params=_1b2cc5d77_buildParams(&((*_15718_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1b2b0db6b_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1b2bdda70_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1b2bda9b2_Fn>> _1b2cc664c_buildMethods(jule::Slice<jule::Ptr<_1b2b0009c_FnDecl>>* _17522_decls) {
	jule::Slice<jule::Ptr<_1b2bda9b2_Fn>> _1766_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>::alloc(0LL, (*(_17522_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2bda9b2_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _17522_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a1b547:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0009c_FnDecl> _17714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b2bda9b2_Fn>> &__jule_push_dest = _1766_methods; __jule_push_dest.push(_1b2cc6383_buildFunc(_17714_decl)); };
			}
			_iter_next_1b6a1b547:;
			++it;
			goto _iter_begin_1b6a1b547;
		}
		_iter_end_1b6a1b547:;
	};
	return _1766_methods;;
}



inline jule::Slice<jule::Ptr<_1b2db8d38_TypeSymbol>> _1b2cc6916_buildTraitInherits(jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>* _18328_inherits) {
	jule::Slice<jule::Ptr<_1b2db8d38_TypeSymbol>> _1846_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db8d38_TypeSymbol>>::alloc(0LL, (*(_18328_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2db8d38_TypeSymbol>(nullptr); __jule_collection; });;
	{
		auto expr = _18328_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a1c68b:;
		if (it != expr_end) {
			jule::Ptr<_1b2add3dc_TypeDecl> _18514_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1b2db8d38_TypeSymbol>> &__jule_push_dest = _1846_symbols; __jule_push_dest.push(_1b2cc476b_buildType(_18514_it)); };
			}
			_iter_next_1b6a1c68b:;
			++it;
			goto _iter_begin_1b6a1c68b;
		}
		_iter_end_1b6a1c68b:;
	};
	return _1846_symbols;;
}



inline jule::Ptr<_1b2be61c6_Trait> _1b2cc6bd0_buildTrait(jule::Ptr<_1b2b0965b_TraitDecl> _19119_decl) {
	return jule::new_ptr<_1b2be61c6_Trait>(_1b2be61c6_Trait{._field_Token=(*(_19119_decl))._field_Token, ._field_Ident=(*_19119_decl.alloc)._field_Ident, ._field_Public=(*_19119_decl.alloc)._field_Public, ._field_Inherits=_1b2cc6916_buildTraitInherits(&((*_19119_decl.alloc)._field_Inherits)), ._field_Methods=_1b2cc664c_buildMethods(&((*_19119_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>(nullptr)});;
}



inline jule::Ptr<_1b2be7d32_EnumItem> _1b2cc6e99_buildEnumItem(jule::Ptr<_1b2b06713_EnumItemDecl> _20122_decl) {
	return jule::new_ptr<_1b2be7d32_EnumItem>(_1b2be7d32_EnumItem{._field_Token=(*(_20122_decl))._field_Token, ._field_Ident=(*_20122_decl.alloc)._field_Ident, ._field_Value=_1b2cc4a79_buildExpr((*_20122_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1b2be7d32_EnumItem>> _1b2cc7263_buildEnumItems(jule::Slice<jule::Ptr<_1b2b06713_EnumItemDecl>>* _20924_decls) {
	jule::Slice<jule::Ptr<_1b2be7d32_EnumItem>> _2106_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2be7d32_EnumItem>>::alloc(0LL, (*(_20924_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2be7d32_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _20924_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a20903:;
		if (it != expr_end) {
			jule::Ptr<_1b2b06713_EnumItemDecl> _21114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b2be7d32_EnumItem>> &__jule_push_dest = _2106_items; __jule_push_dest.push(_1b2cc6e99_buildEnumItem(_21114_decl)); };
			}
			_iter_next_1b6a20903:;
			++it;
			goto _iter_begin_1b6a20903;
		}
		_iter_end_1b6a20903:;
	};
	return _2106_items;;
}



inline jule::Ptr<_1b2be887c_Enum> _1b2cc775d_buildEnum(jule::Ptr<_1b2b072c4_EnumDecl> _21718_decl) {
	return jule::new_ptr<_1b2be887c_Enum>(_1b2be887c_Enum{._field_Token=(*(_21718_decl))._field_Token, ._field_Public=(*_21718_decl.alloc)._field_Public, ._field_Ident=(*_21718_decl.alloc)._field_Ident, ._field_Kind=_1b2cc476b_buildType((*_21718_decl.alloc)._field_Kind), ._field_Items=_1b2cc7263_buildEnumItems(&((*_21718_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1b2be99b0_TypeEnumItem> _1b2cc7939_buildTypeEnumItem(jule::Ptr<_1b2b07aee_TypeEnumItemDecl> _22726_decl) {
	return jule::new_ptr<_1b2be99b0_TypeEnumItem>(_1b2be99b0_TypeEnumItem{._field_Token=(*(_22726_decl))._field_Token, ._field_Ident=(*_22726_decl.alloc)._field_Ident, ._field_Kind=_1b2cc476b_buildType((*_22726_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1b2be99b0_TypeEnumItem>> _1b2cc7bd1_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b2b07aee_TypeEnumItemDecl>>* _23528_decls) {
	jule::Slice<jule::Ptr<_1b2be99b0_TypeEnumItem>> _2366_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2be99b0_TypeEnumItem>>::alloc(0LL, (*(_23528_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2be99b0_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23528_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a23b6a:;
		if (it != expr_end) {
			jule::Ptr<_1b2b07aee_TypeEnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b2be99b0_TypeEnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1b2cc7939_buildTypeEnumItem(_23714_decl)); };
			}
			_iter_next_1b6a23b6a:;
			++it;
			goto _iter_begin_1b6a23b6a;
		}
		_iter_end_1b6a23b6a:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1b2bea087_TypeEnum> _1b2cc7e9a_buildTypeEnum(jule::Ptr<_1b2b0825e_TypeEnumDecl> _24322_decl) {
	return jule::new_ptr<_1b2bea087_TypeEnum>(_1b2bea087_TypeEnum{._field_Token=(*(_24322_decl))._field_Token, ._field_Public=(*_24322_decl.alloc)._field_Public, ._field_Ident=(*_24322_decl.alloc)._field_Ident, ._field_Items=_1b2cc7bd1_buildTypeEnumItems(&((*_24322_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2cc8264_buildVar(jule::Ptr<_1b2b01257_VarDecl> _25217_decl) {
	return jule::new_ptr<_1b2d26ca7_Var>(_1b2d26ca7_Var{._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Token=(*(_25217_decl))._field_Token, ._field_Ident=(*_25217_decl.alloc)._field_Ident, ._field_Binded=(*_25217_decl.alloc)._field_Binded, ._field_Constant=(*_25217_decl.alloc)._field_Constant, ._field_Mutable=(*_25217_decl.alloc)._field_Mutable, ._field_Public=(*_25217_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_25217_decl.alloc)._field_Statically, ._field_Reference=(*_25217_decl.alloc)._field_Reference, ._field_Kind=_1b2cc476b_buildType((*_25217_decl.alloc)._field_Kind), ._field_Value=_1b2cc4a79_buildExpr((*_25217_decl.alloc)._field_Expr), ._field_Refers=static__1b2cc3281_new(), ._field_Directives=(*_25217_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _1b2cc852d_buildVars(jule::Slice<jule::Ptr<_1b2b01257_VarDecl>> _26918_decls) {
	jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _2706_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2d26ca7_Var>>::alloc(0LL, _26918_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2d26ca7_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_26918_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6a28488:;
		if (it != expr_end) {
			jule::Ptr<_1b2b01257_VarDecl> _27114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b2d26ca7_Var>> &__jule_push_dest = _2706_vars; __jule_push_dest.push(_1b2cc8264_buildVar(_27114_decl)); };
			}
			_iter_next_1b6a28488:;
			++it;
			goto _iter_begin_1b6a28488;
		}
		_iter_end_1b6a28488:;
	};
	return _2706_vars;;
}



inline jule::Ptr<_1b2c9ee83_Impl> _1b2cc87e7_buildImpl(jule::Ptr<_1b2b09cbb_Impl> _27718_decl) {
	return jule::new_ptr<_1b2c9ee83_Impl>(_1b2c9ee83_Impl{._field_Base=(*(_27718_decl))._field_Base, ._field_Dest=(*_27718_decl.alloc)._field_Dest, ._field_Methods=_1b2cc664c_buildMethods(&((*_27718_decl.alloc)._field_Methods)), ._field_Statics=_1b2cc852d_buildVars((*_27718_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1b2cd0117_isImplicitImport(jule::Ptr<_1b2cd4e1e_ImportInfo> _79021_imp) {
	return ((*((*(_79021_imp))._field_Decl))._field_Token == nullptr);;
}



inline jule::Ptr<_1b2be1cb5_SymTab> _1b2cd225c_findVarFileInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _4430_files, jule::Ptr<_1b2d26ca7_Var>* _4449_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6aa3b84:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _4514_f = *it;
			{
				if ((_1b2be435b_findVar1(_4514_f.ptr(), _4449_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1b6aa3b84:;
			++it;
			goto _iter_begin_1b6aa3b84;
		}
		_iter_end_1b6aa3b84:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2cd26d0_findVarInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6aa4e3d:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _5614_f = *it;
			{
				jule::Ptr<_1b2d26ca7_Var> _577_v = _1b2be26cd_FindVar(_5614_f.ptr(), (*(_5545_ident)), _5557_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1b6aa4e3d:;
			++it;
			goto _iter_begin_1b6aa4e3d;
		}
		_iter_end_1b6aa4e3d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2db0835_TypeAlias> _1b2cd2b0e_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6aa64e4:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _6814_f = *it;
			{
				jule::Ptr<_1b2db0835_TypeAlias> _697_ta = _1b2be2ac9_FindTypeAlias(_6814_f.ptr(), (*(_6751_ident)), _6763_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1b6aa64e4:;
			++it;
			goto _iter_begin_1b6aa64e4;
		}
		_iter_end_1b6aa64e4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2b0db6b_Struct> _1b2cd30b5_findStructInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6aa7a23:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _8014_f = *it;
			{
				jule::Ptr<_1b2b0db6b_Struct> _817_s = _1b2be2ec5_FindStruct(_8014_f.ptr(), (*(_7948_ident)), _7960_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1b6aa7a23:;
			++it;
			goto _iter_begin_1b6aa7a23;
		}
		_iter_end_1b6aa7a23:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2cd34b1_findFnInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6aa9052:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _9214_file = *it;
			{
				jule::Ptr<_1b2bda9b2_Fn> _937_f = _1b2be33c1_FindFn(_9214_file.ptr(), (*(_9144_ident)), _9156_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1b6aa9052:;
			++it;
			goto _iter_begin_1b6aa9052;
		}
		_iter_end_1b6aa9052:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2be61c6_Trait> _1b2cd3835_findTraitInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _10328_files, jule::Str* _10347_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6aa9e43:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _10414_f = *it;
			{
				jule::Ptr<_1b2be61c6_Trait> _1057_t = _1b2be3712_FindTrait(_10414_f.ptr(), (*(_10347_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1b6aa9e43:;
			++it;
			goto _iter_begin_1b6aa9e43;
		}
		_iter_end_1b6aa9e43:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2be887c_Enum> _1b2cd3ba9_findEnumInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _11527_files, jule::Str* _11546_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6aab86d:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _11614_f = *it;
			{
				jule::Ptr<_1b2be887c_Enum> _1177_e = _1b2be3a53_FindEnum(_11614_f.ptr(), (*(_11546_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1b6aab86d:;
			++it;
			goto _iter_begin_1b6aab86d;
		}
		_iter_end_1b6aab86d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b2bea087_TypeEnum> _1b2cd413d_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _12731_files, jule::Str* _12750_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6aacbc1:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _12814_f = *it;
			{
				jule::Ptr<_1b2bea087_TypeEnum> _1297_e = _1b2be3d94_FindTypeEnum(_12814_f.ptr(), (*(_12750_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1b6aacbc1:;
			++it;
			goto _iter_begin_1b6aacbc1;
		}
		_iter_end_1b6aacbc1:;
	};
	return nullptr;;
}



inline jule::Bool _1b2cd9b6b_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p) {
	return _20d8b7665_HasPrefix((*(_33318_f)), _227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _20dbb9d85_PathStdlib; (*it++) = _33326_p; __jule_collection; })));;
}



inline jule::Bool _1b2d00951_isValidModelForRef(jule::Any* _1428_m) {
	{
		auto &_match_expr{ (*(_1428_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b6abb62a:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b6abb691:;
			{
				jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _197_model = (*(_1428_m)).cast_ptr<_1b2bd3191_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_197_model))._field_Field != nullptr) && _1b2d00951_isValidModelForRef(&((*((*_197_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b6abb707:;
			{
				jule::Ptr<_1b2bcd9e9_UnaryExprModel> _227_unary = (*(_1428_m)).cast_ptr<_1b2bcd9e9_UnaryExprModel>(&__jule_any_type112);;
				if (((*((*(_227_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1b2db42ea_Ptr((*((*_227_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1b2db4064_Sptr((*((*(_227_unary))._field_Expr))._field_Kind) == nullptr)) {
					return false;;
				};
				return _1b2d00951_isValidModelForRef(&((*(*(_227_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b6abb76d:;
			{
				jule::Ptr<_1b2bd0e80_IndexingExprModel> _367_indexing = (*(_1428_m)).cast_ptr<_1b2bd0e80_IndexingExprModel>(&__jule_any_type42);;
				if ((_1b2db4a9d_Arr((*((*(_367_indexing))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1b2d00951_isValidModelForRef(&((*(*(_367_indexing))._field_Expr.alloc)._field_Model));;
			}
		}
		else {
			_case_begin_1b6abb21d:;
			{
				return false;;
			}
		}
		_match_end_1b6abad00:;
	};
}



inline _20daa5e91_Log _1b2d00e7e_compilerErr(jule::Ptr<_1b2ac7eba_Token>* _4817_token, jule::Bool _4839_line, jule::Str _4851_fmt, jule::Slice<jule::Any> _4871_args) {
	_20daa5e91_Log _496_log = _20daa5e91_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4817_token))))._field_Row, ._field_Column=(*((*(_4817_token))))._field_Column, ._field_Path=(*((*((*(_4817_token))))._field_File))._field_Path, ._field_Text=_20daa6403_Logf(_4851_fmt, _4871_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4839_line) {
		_496_log._field_Line=_1b2aceb81_GetRow((*((*(_4817_token))))._field_File, (*((*(_4817_token))))._field_Row);
	};
	return _496_log;;
}



inline void _1b2d0126a_appendRetVars(jule::Slice<jule::Ptr<_1b2d26ca7_Var>>* _6223_dest, jule::Ptr<_1b2bdda70_FnIns>* _6242_f) {
	if ((_1b2bdae68_IsVoid((*((*(_6242_f))))._field_Decl.ptr()) || ((*((*(_6242_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _676_types = _1b2bdeca2_Types((*(_6242_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6242_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6acba14:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> _6814_ident = *it;
			{
				if ((_1b2aca8a2_IsIgnoreIdent((*(_6814_ident))._field_Kind) || _1b2acab6b_IsAnonIdent((*_6814_ident.alloc)._field_Kind))) {
					goto _iter_next_1b6acba14;
				};
				{ jule::Slice<jule::Ptr<_1b2d26ca7_Var>> &__jule_push_dest = (*(_6223_dest)); __jule_push_dest.push(jule::new_ptr<_1b2d26ca7_Var>(_1b2d26ca7_Var{._field_Scope=(*((*(_6242_f))))._field_Scope, ._field_Token=_6814_ident, ._field_Ident=(*_6814_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=_676_types[_687_i]}), ._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_RetOrder=_687_i, ._field_Depends=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr)})); };
			}
			_iter_next_1b6acba14:;
			++it;
			_687_i++;
			goto _iter_begin_1b6acba14;
		}
		_iter_end_1b6acba14:;
	};
	if ((((*(*((*((*(_6242_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6223_dest)).len() == 1LL))) {
		(*((*(_6223_dest))[((*(_6223_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1b2d0159a_appendParamVars(jule::Slice<jule::Ptr<_1b2d26ca7_Var>>* _9225_dest, jule::Ptr<_1b2bdda70_FnIns>* _9244_f) {
	if (((*((*(_9244_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9244_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ad1365:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdc91a_ParamIns> _9714_p = *it;
			{
				if ((_1b2aca8a2_IsIgnoreIdent((*((*(_9714_p))._field_Decl))._field_Ident) || _1b2acab6b_IsAnonIdent((*(*(_9714_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1b6ad1365;
				};
				jule::Ptr<_1b2d26ca7_Var> _1027_v = jule::new_ptr<_1b2d26ca7_Var>(_1b2d26ca7_Var{._field_Scope=(*((*(_9244_f))))._field_Scope, ._field_Token=(*(*(_9714_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_9714_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_9714_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_9714_p))._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr)}), ._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr)});;
				{
					
					if (_1b2bd963c_IsSelf((*(_9714_p))._field_Decl)) {
						_case_begin_1b6ad5248:;
						{
							(*((*(_1027_v))._field_Kind))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9244_f))))._field_Owner, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)});
							(*_1027_v.alloc)._field_Reference=(!(_1b2bd98c3_IsRef((*(_9714_p))._field_Decl)));
							if (_1b2bd98c3_IsRef((*(_9714_p))._field_Decl)) {
								((*(_1027_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1027_v))._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1b2dbd26b_Sptr>(_1b2dbd26b_Sptr{._field_Elem=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=(*(*((*(_1027_v))._field_Kind))._field_Kind.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1027_v))._field_Kind))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_9714_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1b6ad4e29:;
						{
							(*((*(_1027_v))._field_Kind))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2dbdc3e_Slc>(_1b2dbdc3e_Slc{._field_Elem=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=(*((*_9714_p.alloc)._field_Kind))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_9714_p))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1b6ad4db3:;
						{
							(*((*(_1027_v))._field_Kind))._field_Kind=(*_9714_p.alloc)._field_Kind;
						}
					}
					_match_end_1b6ad4c81:;
				};
				{ jule::Slice<jule::Ptr<_1b2d26ca7_Var>> &__jule_push_dest = (*(_9225_dest)); __jule_push_dest.push(_1027_v); };
			}
			_iter_next_1b6ad1365:;
			++it;
			goto _iter_begin_1b6ad1365;
		}
		_iter_end_1b6ad1365:;
	};
}



inline void _1b2d01886_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>* _15234_dest, jule::Ptr<_1b2bdda70_FnIns>* _15259_f) {
	jule::I64 _1536_size = (*((*(_15259_f))))._field_Generics.len();;
	if (((*((*((*(_15259_f))))._field_Decl))._field_Owner != nullptr)) {
		_1536_size+=(*(*((*((*(_15259_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1536_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15259_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6add65d:;
		if (it != expr_end) {
			jule::I64 _1627_i = it - expr->begin();
			jule::Ptr<_1b2daee72_InsGeneric> _16214_g = *it;
			{
				if ((_16214_g == nullptr)) {
					goto _iter_next_1b6add65d;
				};
				jule::Ptr<_1b2aea5e7_GenericDecl> _1667_decl = (*(*((*(_15259_f))))._field_Decl.alloc)._field_Generics[_1627_i];;
				{ jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> &__jule_push_dest = (*(_15234_dest)); __jule_push_dest.push(jule::new_ptr<_1b2db0835_TypeAlias>(_1b2db0835_TypeAlias{._field_Scope=(*(*((*(_15259_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1667_decl.alloc)._field_Token, ._field_Ident=(*(_1667_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=(*(_16214_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1b6add65d:;
			++it;
			_1627_i++;
			goto _iter_begin_1b6add65d;
		}
		_iter_end_1b6add65d:;
	};
	if (((*(*((*(_15259_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1b2b119c6_StructIns> _1787_owner = (*((*(_15259_f))))._field_Owner;;
		{
			auto expr = &((*_1787_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6ae0000:;
			if (it != expr_end) {
				jule::I64 _1798_i = it - expr->begin();
				jule::Ptr<_1b2daee72_InsGeneric> _17915_g = *it;
				{
					jule::Ptr<_1b2aea5e7_GenericDecl> _1808_decl = (*((*(_1787_owner))._field_Decl))._field_Generics[_1798_i];;
					{ jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>> &__jule_push_dest = (*(_15234_dest)); __jule_push_dest.push(jule::new_ptr<_1b2db0835_TypeAlias>(_1b2db0835_TypeAlias{._field_Scope=(*(*((*(_15259_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1808_decl.alloc)._field_Token, ._field_Ident=(*(_1808_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=(*(_17915_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1b6ae0000:;
				++it;
				_1798_i++;
				goto _iter_begin_1b6ae0000;
			}
			_iter_end_1b6ae0000:;
		};
	};
}



inline jule::Ptr<_1b2be1cb5_SymTab> _1b2d01c0a_findFile(jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>* _19318_files, jule::Ptr<_1b2acd872_Fileset>* _19337_handler) {
	{
		auto expr = _19318_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ae40d1:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _19414_fl = *it;
			{
				if (((*(_19414_fl))._field_File == (*(_19337_handler)))) {
					return _19414_fl;;
				};
			}
			_iter_next_1b6ae40d1:;
			++it;
			goto _iter_begin_1b6ae40d1;
		}
		_iter_end_1b6ae40d1:;
	};
	return nullptr;;
}



inline void _1b2d020a1_pushSuggestion(_20daa5e91_Log* _20230_log, jule::Str _20248_fmt, jule::Slice<jule::Any> _20268_args) {
	(*(_20230_log))._field_Suggestion=_20daa6403_Logf(_20248_fmt, _20268_args);
}



inline void _1b2d24c0b_pushImplemented(jule::Ptr<_1b2be61c6_Trait> _280124_t, jule::Ptr<_1b2b0db6b_Struct>* _280140_d) {
	_julec_label_1b6ae3ba2:;
	{
		
		if (((*(_280124_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1b6ae6d09:;
			{
				{
					auto expr = &((*_280124_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6ae7766:;
					if (it != expr_end) {
						jule::Ptr<_1b2b0db6b_Struct> _280510_s = *it;
						{
							if ((_280510_s == (*(_280140_d)))) {
								goto _match_end_1b6ae628c;
							};
						}
						_iter_next_1b6ae7766:;
						++it;
						goto _iter_begin_1b6ae7766;
					}
					_iter_end_1b6ae7766:;
				};
				goto _case_begin_1b6ae6347;
			}
		}
		else {
			_case_begin_1b6ae6347:;
			{
				(*(_280124_t))._field_Implemented=jule::append((*_280124_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_280140_d)); __jule_collection; }));
			}
		}
		_match_end_1b6ae628c:;
	};
	{
		auto expr = &((*(_280124_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ae817e:;
		if (it != expr_end) {
			jule::Ptr<_1b2db8d38_TypeSymbol> _281414_i = *it;
			{
				_1b2d24c0b_pushImplemented(_1b2db55d7_Trait((*(_281414_i))._field_Kind.ptr()), _280140_d);
			}
			_iter_next_1b6ae817e:;
			++it;
			goto _iter_begin_1b6ae817e;
		}
		_iter_end_1b6ae817e:;
	};
}



inline void _1b2d24ee7_pushImplements(jule::Ptr<_1b2b0db6b_Struct>* _281924_s, jule::Ptr<_1b2be61c6_Trait> _281940_t) {
	_julec_label_1b6ae7414:;
	{
		
		if (((*((*(_281924_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1b6ae989a:;
			{
				{
					auto expr = &((*((*(_281924_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6aea307:;
					if (it != expr_end) {
						jule::Ptr<_1b2be61c6_Trait> _282310_b = *it;
						{
							if ((_282310_b == _281940_t)) {
								goto _match_end_1b6ae8d2d;
							};
						}
						_iter_next_1b6aea307:;
						++it;
						goto _iter_begin_1b6aea307;
					}
					_iter_end_1b6aea307:;
				};
				goto _case_begin_1b6ae8dd8;
			}
		}
		else {
			_case_begin_1b6ae8dd8:;
			{
				{ jule::Slice<jule::Ptr<_1b2be61c6_Trait>> &__jule_push_dest = (*((*(_281924_s))))._field_Implements; __jule_push_dest.push(_281940_t); };
			}
		}
		_match_end_1b6ae8d2d:;
	};
	{
		auto expr = &((*(_281940_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6aeac20:;
		if (it != expr_end) {
			jule::Ptr<_1b2db8d38_TypeSymbol> _283214_i = *it;
			{
				_1b2d24ee7_pushImplements(_281924_s, _1b2db55d7_Trait((*(_283214_i))._field_Kind.ptr()));
			}
			_iter_next_1b6aeac20:;
			++it;
			goto _iter_begin_1b6aeac20;
		}
		_iter_end_1b6aeac20:;
	};
}



inline void _1b2d25448_pushRuntimeToStr(jule::Ptr<_1b2d03091_sema>* _283726_s, jule::Ptr<_1b2db1627_TypeKind>* _283741_t, jule::Ptr<_1b2ac7eba_Token>* _283760_token, jule::Ptr<_1b2cc3094_ReferenceStack> _28386_refers) {
	if ((((*((*((*(_283726_s))))._field_meta))._field_runtime == nullptr) || _1b2db275a_IsNil((*(_283741_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _28426_f = _1b2bdbebe_instanceForce(_1b27811e5_runtimeFindFn(&((*(*((*(_283726_s))))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_28426_f))._field_Generics=jule::append((*_28426_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1b2daee72_InsGeneric>(_1b2daee72_InsGeneric{._field_Kind=(*(_283741_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>(nullptr)}); __jule_collection; }));
	jule::Bool _28442_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b2d1d9e6_checkGenericFn((*(_283726_s)), &(_28426_f), _283760_token);
		_28442_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_28442_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:2846:3"));;
	};
	if ((_28386_refers != nullptr)) {
		_1b2cc3c10_Push(_28386_refers, jule::Any(_28426_f, &__jule_any_type63));
	};
}



inline jule::Bool _1b2d25712_isValidImpAlias(jule::Str _285524_alias) {
	jule::Bool __jule_func_result = false;
	if (_1b2aca8a2_IsIgnoreIdent(_285524_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (_1b2acbb6c_IsKeyword(_285524_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::I32 _28626_r;
	jule::I64 _286213_size;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096720_DecodeRuneStr(_285524_alias);
		_28626_r = __jule_assign_result.__jule_result_arg0;
		_286213_size = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28626_r != '_') && (!(_1b2acb6e9_IsLetter(_28626_r))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	for (;;) {
		{
			(_285524_alias).mut_slice(_286213_size);;
			if ((_285524_alias.len() == 0LL)) {
				goto _iter_end_1b6b03200;
			};
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _228096720_DecodeRuneStr(_285524_alias);
				_28626_r = __jule_assign_result.__jule_result_arg0;
				_286213_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_28626_r != '_') && (!((('0' <= _28626_r) && (_28626_r <= '9'))))) && (!(_1b2acb6e9_IsLetter(_28626_r))))) {
				__jule_func_result = false;
				return __jule_func_result;;
			};
		}
	_iter_next_1b6b03200:;
	}
	_iter_end_1b6b03200:;;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b2d63e7b_traitHasReferenceReceiver(jule::Ptr<_1b2be61c6_Trait>* _1631_t) {
	{
		auto expr = &((*((*(_1631_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d71a56:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> *_179_f = it;
			{
				if ((*((*(_179_f))))._field_Statically) {
					goto _iter_next_1b6d71a56;
				};
				jule::Ptr<_1b2bd8edd_Param> _233_p = (*(*(_179_f)).alloc)._field_Params[0LL];;
				if ((_1b2bd98c3_IsRef(_233_p.ptr()) && _1b2bd963c_IsSelf(_233_p))) {
					return true;;
				};
			}
			_iter_next_1b6d71a56:;
			++it;
			goto _iter_begin_1b6d71a56;
		}
		_iter_end_1b6d71a56:;
	};
	return false;;
}



inline jule::Bool _1b2d64344_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1b2d7dc21_Data>* _3133_d) {
	jule::Str _322_value = _1cab12580_FmtFloat(_1b2bc4979_AsF64((*((*(_3133_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1b2c6d57d_CheckBitFloat(_322_value, _1b2c6c0d7_BitSizeOf((*(_3121_kind))));;
}



inline jule::Bool _1b2d646b8_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1b2d7dc21_Data>* _3630_d) {
	jule::F64 _372_min = _1b2c736c6_Min(_3618_kind);;
	jule::F64 _382_max = _1b2c7395c_Max(_3618_kind);;
	{
		
		if (_1b2bc67c2_IsF64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1b6d755e8:;
			{
				jule::F64 _413_x = _1b2bc41c6_ReadF64((*((*(_3630_d))))._field_Constant);;
				jule::F64 _423_i;
				jule::F64 _426_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1caad818d_Modf(_413_x);
					_423_i = __jule_assign_result.__jule_result_arg0;
					_426_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_426_frac != 0LL)) {
					return false;;
				};
				return ((_423_i >= _372_min) && (_423_i <= _382_max));;
			}
		}
		else if (_1b2bc601e_IsU64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1b6d7565e:;
			{
				jule::F64 _483_x = _1b2bc4979_AsF64((*((*(_3630_d))))._field_Constant);;
				if ((_483_x <= _382_max)) {
					return true;;
				};
			}
		}
		else if (_1b2bc5c88_IsI64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1b6d756c5:;
			{
				jule::F64 _533_x = _1b2bc4979_AsF64((*((*(_3630_d))))._field_Constant);;
				return ((_372_min <= _533_x) && (_533_x <= _382_max));;
			}
		}
		_match_end_1b6d754c7:;
	};
	return false;;
}



inline jule::Bool _1b2d64a81_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1b2d7dc21_Data>* _5932_d) {
	jule::F64 _602_max = _1b2c7395c_Max(_5920_kind);;
	if (((*((*(_5932_d))))._field_IsRune && (_5920_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1b2d60c03_IsAscii(static_cast<jule::I32>(_1b2bc368c_ReadI64((*((*(_5932_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1b2bc67c2_IsF64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1b6d7b357:;
			{
				jule::F64 _673_x = _1b2bc41c6_ReadF64((*((*(_5932_d))))._field_Constant);;
				if ((_673_x < 0LL)) {
					return false;;
				};
				jule::F64 _713_i;
				jule::F64 _716_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1caad818d_Modf(_673_x);
					_713_i = __jule_assign_result.__jule_result_arg0;
					_716_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_716_frac != 0LL)) {
					return false;;
				};
				return (_713_i <= _602_max);;
			}
		}
		else if (_1b2bc601e_IsU64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1b6d7b3bd:;
			{
				jule::F64 _773_x = _1b2bc4979_AsF64((*((*(_5932_d))))._field_Constant);;
				if ((_773_x <= _602_max)) {
					return true;;
				};
			}
		}
		else if (_1b2bc5c88_IsI64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1b6d7b434:;
			{
				jule::F64 _823_x = _1b2bc4979_AsF64((*((*(_5932_d))))._field_Constant);;
				return ((0LL <= _823_x) && (_823_x <= _602_max));;
			}
		}
		_match_end_1b6d7a8c8:;
	};
	return false;;
}



inline jule::Bool _1b2d64e05_intAssignable(jule::Str _8818_kind, jule::Ptr<_1b2d7dc21_Data>* _8830_d) {
	{
		
		if (_1b2c74a7e_IsSigInt(_8818_kind)) {
			_case_begin_1b6d80e83:;
			{
				return _1b2d646b8_sigAssignable(_8818_kind, _8830_d);;
			}
		}
		else if (_1b2c74d8c_IsUnsigInt(_8818_kind)) {
			_case_begin_1b6d8101b:;
			{
				return _1b2d64a81_unsigAssignable(_8818_kind, _8830_d);;
			}
		}
		else {
			_case_begin_1b6d809aa:;
			{
				return false;;
			}
		}
		_match_end_1b6d808cd:;
	};
}



inline void _1b2d76257_checkMutRiskOfStructLit(jule::Ptr<_1b2d03091_sema>* _90933_s, jule::Ptr<_1b2bce3bd_StructLitExprModel>* _90944_m) {
	{
		auto expr = &((*((*(_90944_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6d820e9:;
		if (it != expr_end) {
			jule::Ptr<_1b2bce027_StructArgExprModel> *_9109_arg = it;
			{
				if ((*((*((*((*(_9109_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1b6d820e9;
				};
				if (((!((*((*(*(_9109_arg)).alloc)._field_Expr))._field_Mutable)) && _1b2db300d_Mutable((*(*((*(_9109_arg))))._field_Expr.alloc)._field_Kind.ptr()))) {
					_1b2d05e95_pushErr((*(_90933_s)).ptr(), (*(*(_9109_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*((*(_9109_arg))))._field_Expr))._field_Kind), &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1b6d820e9:;
			++it;
			goto _iter_begin_1b6d820e9;
		}
		_iter_end_1b6d820e9:;
	};
}



inline jule::Ptr<_1b2db1627_TypeKind> _1b2d7c093_lenKind(void) {
	return _1b2e932ec_primInt;;
}



inline jule::Bool _1b2d7c3e5_isGoodValueToInfer(jule::Ptr<_1b2d7dc21_Data>* _141424_d) {
	return (!(_1b2d7e13e_IsNil((*(_141424_d)).ptr())));;
}



inline jule::Ptr<_1b2adc809_Directive> _1b2da8223_findDirective(jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _435323_directives, jule::Str _435354_d) {
	{
		auto expr = _435323_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ec4dc9:;
		if (it != expr_end) {
			jule::Ptr<_1b2adc809_Directive> _435414_dr = *it;
			{
				if (((*((*(_435414_dr))._field_Tag))._field_Kind == _435354_d)) {
					return _435414_dr;;
				};
			}
			_iter_next_1b6ec4dc9:;
			++it;
			goto _iter_begin_1b6ec4dc9;
		}
		_iter_end_1b6ec4dc9:;
	};
	return nullptr;;
}



inline jule::Any _1b2da85db_findBuiltinsImport(jule::Str* _436224_ident, jule::Ptr<_1b2cd4e1e_ImportInfo> _436236_imp) {
	return _1b2e9690a_findPackageBuiltinDef(&((*(_436236_imp))._field_LinkPath), _436224_ident);;
}



inline void _1b2da881c_fitBitsize(jule::Ptr<_1b2d7dc21_Data>* _437120_d) {
	jule::Ptr<_1b2db9740_Prim> _43726_prim = _1b2db3ccd_Prim((*((*(_437120_d))))._field_Kind.ptr());;
	jule::I64 _43732_z = _1b2c6c0d7_BitSizeOf(_1b2db9ab4_Str(_43726_prim.ptr()));;
	{
		
		if (_1b2bc5c88_IsI64((*((*(_437120_d))))._field_Constant.ptr())) {
			_case_begin_1b6ec76c3:;
			{
				jule::I64 _43763_k = _1b2c6db11_BitSizeOfInt(_1b2bc368c_ReadI64((*((*(_437120_d))))._field_Constant));;
				if (((_43763_k > _43732_z) || _1b2c74d8c_IsUnsigInt((*_43726_prim.alloc)._field_Kind))) {
					(*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind=_1b2c6c428_IntFromBits(_43763_k);
					(*((*(_437120_d))))._field_Kind=(*((*(_1b2e95651_findBuiltinTypeAlias((*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b2bc601e_IsU64((*((*(_437120_d))))._field_Constant.ptr())) {
			_case_begin_1b6ec7739:;
			{
				jule::I64 _43823_k = _1b2c6ddca_BitSizeOfUint(_1b2bc3923_ReadU64((*((*(_437120_d))))._field_Constant));;
				if (((_43823_k > _43732_z) || _1b2c74a7e_IsSigInt((*_43726_prim.alloc)._field_Kind))) {
					(*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind=_1b2c6c6ae_UintFromBits(_43823_k);
					(*((*(_437120_d))))._field_Kind=(*((*(_1b2e95651_findBuiltinTypeAlias((*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b2bc67c2_IsF64((*((*(_437120_d))))._field_Constant.ptr())) {
			_case_begin_1b6ec77b1:;
			{
				if ((_43732_z == 64LLU)) {
					return;;
				};
				jule::I64 _43923_k = _1b2c6d847_BitSizeOfFloat(_1b2bc41c6_ReadF64((*((*(_437120_d))))._field_Constant));;
				if ((_43923_k > _43732_z)) {
					(*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind=_1b2c6c978_FloatFromBits(_43923_k);
					(*((*(_437120_d))))._field_Kind=(*((*(_1b2e95651_findBuiltinTypeAlias((*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1b6ec75a2:;
	};
}



inline void _1b2da8b4c_makeStructLitAlloc(jule::Ptr<_1b2d7dc21_Data>* _440028_d, jule::Ptr<_1b2bce3bd_StructLitExprModel>* _440043_lit) {
	(*((*(_440028_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2dbd26b_Sptr>(_1b2dbd26b_Sptr{._field_Elem=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_440043_lit))))._field_Strct, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data23)});
	(*((*(_440028_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bce6ba_AllocStructLitExprModel>(_1b2bce6ba_AllocStructLitExprModel{._field_Lit=(*(_440043_lit))}), &__jule_any_type114);
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2da8ec1_buildErrorVar(jule::Ptr<_1b2ca4592_Scope>* _441123_s, jule::Ptr<_1b2ae644a_FnCallExpr>* _441139_fc) {
	return jule::new_ptr<_1b2d26ca7_Var>(_1b2d26ca7_Var{._field_Scope=(*(_441123_s)), ._field_Token=(*((*(_441139_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_Kind, ._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr)});;
}



inline jule::Any _1b2da9345_findBuiltinsSema(jule::Str* _442622_ident, jule::Ptr<_1b2d03091_sema> _442638_s) {
	jule::Str _44286_ppath = _1b2ace323_Dir((*((*(_442638_s))._field_file))._field_File.ptr());;
	if (_20d8b7665_HasPrefix(_44286_ppath, _20dbb9d85_PathStdlib)) {
		(_44286_ppath).mut_slice(_20dbb9d85_PathStdlib.len());;
		_44286_ppath=(jule::Str::lit("std", 3) + _20d8bd00b_Replace(_44286_ppath, jule::Str::lit("/", 1), jule::Str::lit("/", 1), -1LL));
		return _1b2e9690a_findPackageBuiltinDef(&(_44286_ppath), _442622_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1b2da960e_isOkForShifting(jule::Ptr<_1b2d7dc21_Data>* _444125_d) {
	if (_1b2d7e65b_IsConst((*(_444125_d)).ptr())) {
		{
			
			if (_1b2bc5c88_IsI64((*((*(_444125_d))))._field_Constant.ptr())) {
				_case_begin_1b6ed8591:;
				{
					return (_1b2bc368c_ReadI64((*((*(_444125_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1b2bc601e_IsU64((*((*(_444125_d))))._field_Constant.ptr())) {
				_case_begin_1b6ed863a:;
				{
					return true;;
				}
			}
			else if (_1b2bc67c2_IsF64((*((*(_444125_d))))._field_Constant.ptr())) {
				_case_begin_1b6ed86b2:;
				{
					return (_1b2bc41c6_ReadF64((*((*(_444125_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1b6ed8508:;
				{
					return false;;
				}
			}
			_match_end_1b6ed842b:;
		};
	};
	jule::Ptr<_1b2db9740_Prim> _44542_prim = _1b2db3ccd_Prim((*((*(_444125_d))))._field_Kind.ptr());;
	return ((_44542_prim != nullptr) && _1b2c75156_IsInt(_1b2db9ab4_Str(_44542_prim)));;
}



inline jule::Bool _1b2da99d8_isInstancedStruct(jule::Ptr<_1b2b119c6_StructIns> _445822_s) {
	return ((*((*(_445822_s))._field_Decl))._field_Generics.len() == (*_445822_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1b2da9cd5_isPtrArithmeticCompatible(jule::Ptr<_1b2d7dc21_Data>* _446235_l, jule::Ptr<_1b2d7dc21_Data>* _446250_r) {
	jule::Ptr<_1b2dc1a33_Ptr> _44632_ptr = _1b2db42ea_Ptr((*((*(_446250_r))))._field_Kind.ptr());;
	if ((_44632_ptr != nullptr)) {
		return _1b2db1d64_Equal((*(_1b2db42ea_Ptr((*((*(_446235_l))))._field_Kind)))._field_Elem, (*_44632_ptr.alloc)._field_Elem);;
	};
	if ((_1b2d7e65b_IsConst((*(_446250_r)).ptr()) && (*((*(_446250_r))))._field_untyped)) {
		return (_1b2d64e05_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _446250_r) || _1b2d64e05_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _446250_r));;
	};
	_1b2d653de_typeCompatibilityChecker _44726_tcc = _1b2d653de_typeCompatibilityChecker{._field_s=jule::Ptr<_1b2d03091_sema>(nullptr), ._field_dest=_1b2e932ec_primInt, ._field_src=(*((*(_446250_r))))._field_Kind, ._field_errorToken=jule::Ptr<_1b2ac7eba_Token>(nullptr)};;
	if (_1b2d6b945_check(&_44726_tcc)) {
		return true;;
	};
	_44726_tcc._field_dest=_1b2e92e34_primUint;
	return _1b2d6b945_check(&_44726_tcc);;
}



inline void _1b2daa2e1_applyRuntimeToStr(jule::Ptr<_1b2d03091_sema>* _448327_s, jule::Ptr<_1b2db1627_TypeKind>* _448342_from, jule::Ptr<_1b2db1627_TypeKind>* _448364_to, jule::Ptr<_1b2ac7eba_Token>* _44847_token, jule::Ptr<_1b2cc3094_ReferenceStack> _448433_refers) {
	jule::Ptr<_1b2db9740_Prim> _44852_prim = _1b2db3ccd_Prim((*(_448364_to)).ptr());;
	if ((_44852_prim != nullptr)) {
		if (_1b2dbce91_IsAny(_44852_prim)) {
			_1b2d25448_pushRuntimeToStr(_448327_s, _448342_from, _44847_token, _448433_refers);
		};
		return;;
	};
	if ((_1b2db4817_TypeEnum((*(_448364_to)).ptr()) != nullptr)) {
		_1b2d25448_pushRuntimeToStr(_448327_s, _448342_from, _44847_token, _448433_refers);
		return;;
	};
}



inline void _1b2daa7ec_applyCastKindModel(jule::Ptr<_1b2d03091_sema>* _449828_s, jule::Ptr<_1b2d7dc21_Data>* _449843_d, jule::Ptr<_1b2db1627_TypeKind>* _449858_t, jule::Ptr<_1b2ac7eba_Token>* _44997_token, jule::Ptr<_1b2cc3094_ReferenceStack> _449933_refers) {
	_1b2daa2e1_applyRuntimeToStr(_449828_s, &((*((*(_449843_d))))._field_Kind), _449858_t, _44997_token, _449933_refers);
	(*((*(_449843_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bcec4d_CastingExprModel>(_1b2bcec4d_CastingExprModel{._field_Token=(*(_44997_token)), ._field_Expr=jule::new_ptr<_1b2d7dc21_Data>((*((*(_449843_d))))), ._field_Kind=(*(_449858_t)), ._field_ExprKind=(*((*(_449843_d))))._field_Kind}), &__jule_any_type95);
}



inline void _1b2daad08_applyCastKind(jule::Ptr<_1b2d03091_sema>* _450923_s, jule::Ptr<_1b2d7dc21_Data>* _450938_d, jule::Ptr<_1b2db1627_TypeKind>* _450953_t, jule::Ptr<_1b2ac7eba_Token>* _45107_token, jule::Ptr<_1b2cc3094_ReferenceStack> _451033_refers) {
	_1b2daa7ec_applyCastKindModel(_450923_s, _450938_d, _450953_t, _45107_token, _451033_refers);
	(*((*(_450938_d))))._field_Kind=(*(_450953_t));
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2dab017_buildVoidData(void) {
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e92065_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Str _1b2dab501_checkDataForIntegerIndexing(jule::Ptr<_1b2d03091_sema>* _452137_s, jule::Ptr<_1b2d7dc21_Data>* _452152_d, jule::Ptr<_1b2ac7eba_Token>* _45227_token, jule::Ptr<_1b2cc3094_ReferenceStack> _452233_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_452152_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1b2db3ccd_Prim((*((*(_452152_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1b6ee9838:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1b2c75156_IsInt(_1b2db9ab4_Str(_1b2db3ccd_Prim((*((*(_452152_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1b6ee989e:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1b2d7e65b_IsConst((*(_452152_d)).ptr())) {
			_case_begin_1b6ee9915:;
			{
				if ((_1b2bc4979_AsF64((*((*(_452152_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1b2db3ccd_Prim((*((*(_452152_d))))._field_Kind.ptr()) == nullptr) || _1b2d7e65b_IsConst((*(_452152_d)).ptr()) || (_1b2c6bd1d_RealKindOf(_1b2db9ab4_Str(_1b2db3ccd_Prim((*((*(_452152_d))))._field_Kind).ptr())) != _1b2c6bd1d_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1b6ee997b:;
			{
				_1b2daad08_applyCastKind(_452137_s, _452152_d, &(_1b2e932ec_primInt), _45227_token, _452233_refers);
			}
		}
		_match_end_1b6ee941a:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1b2daba0c_applyCastModelByEnum(jule::Ptr<_1b2d03091_sema>* _454730_s, jule::Ptr<_1b2d7dc21_Data>* _454745_d, jule::Ptr<_1b2be887c_Enum> _454759_e, jule::Ptr<_1b2ac7eba_Token>* _45487_token, jule::Ptr<_1b2cc3094_ReferenceStack> _454833_refers) {
	if ((_454759_e == nullptr)) {
		return;;
	};
	_1b2daa7ec_applyCastKindModel(_454730_s, _454745_d, &((*((*(_454759_e))._field_Kind))._field_Kind), _45487_token, _454833_refers);
}



inline void _1b2dac029_castConstByType(jule::Str* _455521_t, jule::Ptr<_1b2d7dc21_Data>* _455534_d) {
	{
		
		if (_1b2c74a7e_IsSigInt((*(_455521_t)))) {
			_case_begin_1b70005ca:;
			{
				{
					auto _match_expr{ _1b2c6c0d7_BitSizeOf(_1b2c6bd1d_RealKindOf((*(_455521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b70011d0:;
						{
							_1b2bc4c32_SetI64((*((*(_455534_d))))._field_Constant.ptr(), _1b2bc445c_AsI64((*((*(_455534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b7001246:;
						{
							_1b2bc4c32_SetI64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1b2bc445c_AsI64((*((*(_455534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b70012ac:;
						{
							_1b2bc4c32_SetI64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1b2bc445c_AsI64((*((*(_455534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b7001323:;
						{
							_1b2bc4c32_SetI64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1b2bc445c_AsI64((*((*(_455534_d))))._field_Constant))));
						}
					}
					_match_end_1b7001169:;
				};
			}
		}
		else if (_1b2c74d8c_IsUnsigInt((*(_455521_t)))) {
			_case_begin_1b7000674:;
			{
				{
					auto _match_expr{ _1b2c6c0d7_BitSizeOf(_1b2c6bd1d_RealKindOf((*(_455521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b700537c:;
						{
							_1b2bc4eda_SetU64((*((*(_455534_d))))._field_Constant.ptr(), _1b2bc46e3_AsU64((*((*(_455534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b70053e3:;
						{
							_1b2bc4eda_SetU64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1b2bc46e3_AsU64((*((*(_455534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b7005459:;
						{
							_1b2bc4eda_SetU64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1b2bc46e3_AsU64((*((*(_455534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b70054c0:;
						{
							_1b2bc4eda_SetU64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1b2bc46e3_AsU64((*((*(_455534_d))))._field_Constant))));
						}
					}
					_match_end_1b7005316:;
				};
			}
		}
		else if (_1b2c75497_IsFloat((*(_455521_t)))) {
			_case_begin_1b70006da:;
			{
				{
					auto _match_expr{ _1b2c6c0d7_BitSizeOf(_1b2c6bd1d_RealKindOf((*(_455521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b7005767:;
						{
							_1b2bc5804_SetF64((*((*(_455534_d))))._field_Constant.ptr(), _1b2bc4979_AsF64((*((*(_455534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b7009529:;
						{
							_1b2bc5804_SetF64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1b2bc4979_AsF64((*((*(_455534_d))))._field_Constant))));
						}
					}
					_match_end_1b70094b3:;
				};
			}
		}
		_match_end_1b7000476:;
	};
}



inline void _1b2dac205_updateModelToGenericIns(jule::Any* _458933_m, jule::Ptr<_1b2bdda70_FnIns>* _458952_f) {
	{
		auto &_match_expr{ (*(_458933_m)) };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b70098d1:;
			{
				(*(_458933_m))=jule::Any((*(_458952_f)), &__jule_any_type63);
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b7009a02:;
			{
				(*((*(_458933_m)).cast_ptr<_1b2bd3191_StructSubIdentExprModel>(&__jule_any_type100)))._field_Method=(*(_458952_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b700160e:;
			{
				(*((*(_458933_m)).cast_ptr<_1b2bd3537_StructStaticIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_458952_f));
			}
		}
		_match_end_1b7009826:;
	};
}



inline jule::Bool _1b2dac579_pushSubIdentFromExpr(jule::Any _460029_expr, jule::Ptr<_1b2addcb1_SubIdentTypeDecl>* _460055_t) {
	{
		auto &_match_expr{ _460029_expr };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b70107e9:;
			{
				jule::Ptr<_1b2ae403b_IdentExpr> _46037_e = _460029_expr.unsafe_cast_ptr<_1b2ae403b_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1b2add9e7_IdentTypeDecl>> &__jule_push_dest = (*((*(_460055_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1b2add9e7_IdentTypeDecl>(_1b2add9e7_IdentTypeDecl{._field_Token=(*(_46037_e))._field_Token, ._field_Ident=(*_46037_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b7010156:;
			{
				jule::Ptr<_1b2ae5834_SubIdentExpr> _46097_e = _460029_expr.unsafe_cast_ptr<_1b2ae5834_SubIdentExpr>();;
				if ((!(_1b2dac579_pushSubIdentFromExpr((*((*(_46097_e))._field_Expr))._field_Kind, _460055_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1b2add9e7_IdentTypeDecl>> &__jule_push_dest = (*((*(_460055_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1b2add9e7_IdentTypeDecl>(_1b2add9e7_IdentTypeDecl{._field_Token=(*_46097_e.alloc)._field_Ident, ._field_Ident=(*((*_46097_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1b2add3dc_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1b70100ce:;
			{
				return false;;
			}
		}
		_match_end_1b7010871:;
	};
	return true;;
}



inline jule::Str _1b2dac843_constoa(jule::Ptr<_1b2b6c23a_Const>* _462313_c) {
	{
		
		if (_1b2bc5c88_IsI64((*(_462313_c)).ptr())) {
			_case_begin_1b7016679:;
			{
				return _1cab28d49_FmtInt(_1b2bc368c_ReadI64((*(_462313_c)).ptr()), 10LL);;
			}
		}
		else if (_1b2bc601e_IsU64((*(_462313_c)).ptr())) {
			_case_begin_1b7016cc8:;
			{
				return _1cab28981_FmtUint(_1b2bc3923_ReadU64((*(_462313_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1b7011dc2:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b70101cd:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2dacdd7_evalEnumStatic(jule::Ptr<_1b2d03091_sema>* _463424_s, jule::Ptr<_1b2be887c_Enum>* _463439_enm, jule::Ptr<_1b2be7d32_EnumItem>* _463456_item, jule::Ptr<_1b2ac7eba_Token>* _46357_token, jule::Ptr<_1b2cc3094_ReferenceStack> _463533_refers) {
	jule::Ptr<_1b2d7dc21_Data> _46366_d = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_463439_enm)), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
	if (((*(_463456_item)) != nullptr)) {
		(*(_46366_d))._field_Constant=jule::new_ptr<_1b2b6c23a_Const>((*(*((*((*((*(_463456_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46366_d.alloc)._field_Model=jule::Any((*_46366_d.alloc)._field_Constant, &__jule_any_type15);
		_1b2daba0c_applyCastModelByEnum(_463424_s, &(_46366_d), (*(_463439_enm)), _46357_token, _463533_refers);
	};
	return _46366_d;;
}



inline jule::Ptr<_1b2bce3bd_StructLitExprModel> _1b2dad1a1_isLitBased(jule::Any* _465220_m) {
	{
		auto &_match_expr{ (*(_465220_m)) };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b701b6c3:;
			{
				return (*(_465220_m)).cast_ptr<_1b2bce3bd_StructLitExprModel>(&__jule_any_type97);;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b701b739:;
			{
				return (*((*(_465220_m)).cast_ptr<_1b2bce6ba_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b701b7a0:;
			{
				jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _46597_ssi = (*(_465220_m)).cast_ptr<_1b2bd3191_StructSubIdentExprModel>(&__jule_any_type100);;
				return _1b2dad1a1_isLitBased(&((*((*(_46597_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b701b816:;
			{
				jule::Ptr<_1b2bcec4d_CastingExprModel> _46627_c = (*(_465220_m)).cast_ptr<_1b2bcec4d_CastingExprModel>(&__jule_any_type95);;
				return _1b2dad1a1_isLitBased(&((*((*(_46627_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1b701b272:;
			{
				return nullptr;;
			}
		}
		_match_end_1b701b20b:;
	};
}



inline void _1b2dad48c_makeImplicitDeref(jule::Ptr<_1b2d7dc21_Data>* _466927_d, jule::Ptr<_1b2ac7eba_Token> _466941_baseToken) {
	jule::Ptr<_1b2bcd9e9_UnaryExprModel> _46706_unary = jule::new_ptr<_1b2bcd9e9_UnaryExprModel>(_1b2bcd9e9_UnaryExprModel{._field_Expr=jule::new_ptr<_1b2d7dc21_Data>((*((*(_466927_d))))), ._field_Op=jule::new_ptr<_1b2ac7eba_Token>((*(_466941_baseToken)))});;
	(*((*(_46706_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_46706_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_466927_d))))._field_Model=jule::Any(_46706_unary, &__jule_any_type112);
}



inline void _1b7138cc9_updateRefer(jule::Ptr<_1b2cc3094_ReferenceStack> _468023_ref, jule::Ptr<_1b2bdda70_FnIns>* _468046_old, jule::Ptr<_1b2bdda70_FnIns>* _468059_new) {
	{
		auto expr = &((*(_468023_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b713a715:;
		if (it != expr_end) {
			jule::I64 _46816_i = it - expr->begin();
			jule::Any _46819_sym = *it;
			{
				if ((jule::Any((*(_468046_old)), &__jule_any_type63) == _46819_sym)) {
					(*(_468023_ref))._field_buffer[_46816_i]=jule::Any((*(_468059_new)), &__jule_any_type63);
				};
			}
			_iter_next_1b713a715:;
			++it;
			_46816_i++;
			goto _iter_begin_1b713a715;
		}
		_iter_end_1b713a715:;
	};
}



inline void _1b2dadb1e_makeVariadic(jule::Ptr<_1b2d7dc21_Data>* _468822_d, jule::Ptr<_1b2db1627_TypeKind> _468836_elem) {
	(*((*(_468822_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=(*_468836_elem.alloc)._field_BindIdent, ._field_Generic=(*(_468836_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_468836_elem.alloc)._field_Kind});
}



inline jule::Bool _1b2dae04d_isVarCaptured(jule::Ptr<_1b2cab830_scopeChecker> _470218_r, jule::Ptr<_1b2cab830_scopeChecker> _470240_s, jule::Ptr<_1b2d26ca7_Var> _470258_v) {
	if (((*(_470258_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_470240_s))._field_scope == (*_470258_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_470240_s.alloc)._field_parent == nullptr) || (_470240_s == _470218_r))) {
				goto _iter_end_1b70258a8;
			};
			_470240_s=(*_470240_s.alloc)._field_parent;
		}
	_iter_next_1b70258a8:;
	}
	_iter_end_1b70258a8:;;
	return true;;
}



inline jule::Bool _1b2dcc7ca_kindUsesGenerics(jule::Ptr<_1b2db1627_TypeKind>* _173426_k, jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>* _173441_generics) {
	{
		auto expr = _173441_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b748bba9:;
		if (it != expr_end) {
			jule::Ptr<_1b2aea5e7_GenericDecl> *_17359_g = it;
			{
				if (static__1b2dcc3ce_exist(&((*((*(_17359_g))))._field_Ident), _173426_k)) {
					return true;;
				};
			}
			_iter_next_1b748bba9:;
			++it;
			goto _iter_begin_1b748bba9;
		}
		_iter_end_1b748bba9:;
	};
	return false;;
}



inline jule::Bool _1b2dccb93_hasDirective(jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _174422_directives, jule::Str _174453_tag) {
	{
		auto expr = _174422_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b748c490:;
		if (it != expr_end) {
			jule::Ptr<_1b2adc809_Directive> _174514_dr = *it;
			{
				if (((*((*(_174514_dr))._field_Tag))._field_Kind == _174453_tag)) {
					return true;;
				};
			}
			_iter_next_1b748c490:;
			++it;
			goto _iter_begin_1b748c490;
		}
		_iter_end_1b748c490:;
	};
	return false;;
}



inline jule::Bool _1b2dcce5c_canGetPtr(jule::Ptr<_1b2d7dc21_Data>* _175319_d) {
	return (*((*(_175319_d))))._field_Lvalue;;
}



inline jule::Bool _1b2dcd29d_isValidForSptrType(jule::Ptr<_1b2db1627_TypeKind>* _175628_t) {
	jule::Ptr<_1b2b119c6_StructIns> _17576_s = _1b2db5351_Struct((*(_175628_t)).ptr());;
	if ((((_17576_s != nullptr) && ((*_17576_s.alloc)._field_Decl != nullptr)) && (*(*(_17576_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1b2dcd534_isValidForRef(jule::Ptr<_1b2db1627_TypeKind>* _176523_t) {
	return (_1b2db50ba_Fn((*(_176523_t)).ptr()) == nullptr);;
}



inline jule::Bool _1b2dcd7ed_isBuiltinStrConvertable(jule::Ptr<_1b2db1627_TypeKind>* _176833_t) {
	return ((((!(_1b2db29e1_Void((*(_176833_t)).ptr()))) && (_1b2db50ba_Fn((*(_176833_t)).ptr()) == nullptr)) && (_1b2db5b04_Tup((*(_176833_t)).ptr()) == nullptr)) && (!(_1b2db5d8a_comptime((*(_176833_t)).ptr()))));;
}



inline jule::Ptr<_1b2db9740_Prim> _1b2dcdab7_buildPrimType(jule::Str _177218_kind) {
	return jule::new_ptr<_1b2db9740_Prim>(_1b2db9740_Prim{._field_Kind=_177218_kind});;
}



inline void _1b2dce425_applyImplicitCast(jule::Ptr<_1b2d03091_sema>* _180027_s, jule::Ptr<_1b2db1627_TypeKind>* _180042_dest, jule::Ptr<_1b2d7dc21_Data>* _180064_d, jule::Ptr<_1b2ac7eba_Token>* _18017_token, jule::Ptr<_1b2cc3094_ReferenceStack> _180133_refers) {
	if (_1b2db275a_IsNil((*((*(_180064_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1b2db9740_Prim> _18052_destPrim = _1b2db3ccd_Prim((*(_180042_dest)).ptr());;
	if (((_18052_destPrim != nullptr) && _1b2dbce91_IsAny(_18052_destPrim))) {
		jule::Ptr<_1b2db9740_Prim> _18073_prim = _1b2db3ccd_Prim((*((*(_180064_d))))._field_Kind);;
		if (((_18073_prim == nullptr) || (!(_1b2dbce91_IsAny(_18073_prim.ptr()))))) {
			_1b2daad08_applyCastKind(_180027_s, _180064_d, _180042_dest, _18017_token, _180133_refers);
		};
		return;;
	};
	jule::Ptr<_1b2be61c6_Trait> _18142_dt = _1b2db55d7_Trait((*(_180042_dest)).ptr());;
	if ((_18142_dt != nullptr)) {
		jule::Ptr<_1b2be61c6_Trait> _18163_bt = _1b2db55d7_Trait((*((*(_180064_d))))._field_Kind);;
		if (((_18163_bt == nullptr) || (_18163_bt != _18142_dt))) {
			_1b2daa7ec_applyCastKindModel(_180027_s, _180064_d, _180042_dest, _18017_token, _180133_refers);
			return;;
		};
	};
	if (((_1b2db4817_TypeEnum((*(_180042_dest)).ptr()) != nullptr) && (_1b2db4817_TypeEnum((*((*(_180064_d))))._field_Kind) == nullptr))) {
		_1b2daa7ec_applyCastKindModel(_180027_s, _180064_d, _180042_dest, _18017_token, _180133_refers);
		return;;
	};
}



inline jule::Bool _1b2dce6de_validTypeForXof(jule::Ptr<_1b2db1627_TypeKind>* _182925_t) {
	return ((!(_1b2db29e1_Void((*(_182925_t)).ptr()))) && (_1b2db50ba_Fn((*(_182925_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1b2be1cb5_SymTab__jule_tuple_s_20daa5e91_Log _1b2dd26e2_buildSymbols(jule::Ptr<_1b2adb52d_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1b2cc8dad_symBuilder> _1667_owner) {
	__jule_tuple_x_1b2be1cb5_SymTab__jule_tuple_s_20daa5e91_Log __jule_func_result;
	jule::Ptr<_1b2cc8dad_symBuilder> _176_sb = jule::new_ptr<_1b2cc8dad_symBuilder>(_1b2cc8dad_symBuilder{._field_owner=_1667_owner, ._field_importer=(*(_1643_importer)), ._field_errors=jule::Slice<_20daa5e91_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1b2be1cb5_SymTab>(nullptr)});;
	_1b2ccec4e_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1b2dd2a22_collectImplicitImports(jule::Ptr<_1b2d03091_sema>* _3132_s, jule::Ptr<_1b2be1cb5_SymTab>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75c231c:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1b2cd0117_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1b75c231c;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std/runtime", 11)) {
						_case_begin_1b75c350a:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1b75c2a9d:;
						{
							__jule_panic_s(jule::Str::lit("sema: implementation mistake in implicit import collection, this panic call should be unreachable", 97) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1b75c3142:;
				};
			}
			_iter_next_1b75c231c:;
			++it;
			goto _iter_begin_1b75c231c;
		}
		_iter_end_1b75c231c:;
	};
}



inline __jule_tuple_x_1b2cd7691_Package__jule_tuple_s_20daa5e91_Log _1b2dd2e51_analyzePackage(jule::Slice<jule::Ptr<_1b2adb52d_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I64* _4570_flags) {
	__jule_tuple_x_1b2cd7691_Package__jule_tuple_s_20daa5e91_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2be1cb5_SymTab>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75c473c:;
		if (it != expr_end) {
			jule::Ptr<_1b2adb52d_AST> _4814_f = *it;
			{
				jule::Ptr<_1b2be1cb5_SymTab> _497_table;
				jule::Slice<_20daa5e91_Log> _4918_errors;
				({
					__jule_tuple_x_1b2be1cb5_SymTab__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b2dd26e2_buildSymbols(&(_4814_f), _4549_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1b75c473c:;
			++it;
			goto _iter_begin_1b75c473c;
		}
		_iter_end_1b75c473c:;
	};
	jule::Ptr<_1b2d03091_sema> _566_sema = jule::new_ptr<_1b2d03091_sema>(_1b2d03091_sema{._field_errors=jule::Slice<_20daa5e91_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1b2be1cb5_SymTab>>(nullptr), ._field_file=jule::Ptr<_1b2be1cb5_SymTab>(nullptr), ._field_flags=(*(_4570_flags)), ._field_meta=jule::new_ptr<_1b2d02469_commonSemaMeta>(_1b2d02469_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1b2c86aa2_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1b2cd4e1e_ImportInfo>(nullptr)})});;
	jule::Ptr<_1b2be1cb5_SymTab> _636_firstTable = _476_tables[0LL];;
	_1b2dd2a22_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1b2d22dc4_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1b2cd7691_Package> _716_pkg = jule::new_ptr<_1b2cd7691_Package>(_1b2cd7691_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b2cd7691_Package__jule_tuple_s_20daa5e91_Log _1b2dd3407_AnalyzePackage(jule::Slice<jule::Ptr<_1b2adb52d_AST>> _9523_files, jule::Trait _9547_importer, jule::I64 _9567_flags) {
	__jule_tuple_x_1b2cd7691_Package__jule_tuple_s_20daa5e91_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1b2dd2e51_analyzePackage(&(_9523_files), &(_9547_importer), &(_9567_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1b2bdda70_FnIns> _1b2e91680_findBuiltinFunc(jule::Str* _2021_ident) {
	{
		auto &_match_expr{ (*(_2021_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1b75ce2b3:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _2314_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e971ad_builtinCallerOut), ._field_reloaded=false});;
				return _2314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1b75ce329:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _2614_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e975dc_builtinCallerOutln), ._field_reloaded=false});;
				return _2614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1b75ce390:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _2914_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e97a1b_builtinCallerNew), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1b75ce417:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _3214_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e97e4a_builtinCallerPanic), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1b75ce5b0:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _3514_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e985aa_builtinCallerMake), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1b75ce626:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _3814_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e988c9_builtinCallerAppend), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1b75ce68c:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _4114_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e992e2_builtinCallerCopy), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1b75ce714:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _4414_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9a986_builtinCallerLen), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1b75ce846:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _4714_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9b239_builtinCallerCap), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1b75ce8ac:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _5014_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9bb52_builtinCallerDelete), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else {
			_case_begin_1b75cdcc9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b75ce13c:;
	};
}



inline jule::Ptr<_1b2db0835_TypeAlias> _1b2e9195a_primTypeAlias(jule::Ptr<_1b2db1627_TypeKind>* _5723_k) {
	return jule::new_ptr<_1b2db0835_TypeAlias>(_1b2db0835_TypeAlias{._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=(*(_5723_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1b2d26ca7_Var> _1b2e95310_findBuiltinVar(jule::Str* _8520_ident) {
	{
		auto &_match_expr{ (*(_8520_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1b75d61dd:;
			{
				static jule::Ptr<_1b2d26ca7_Var> _8814_v = jule::new_ptr<_1b2d26ca7_Var>(_1b2d26ca7_Var{._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=_1b2e91c68_primNil}), ._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1b2bc302c_NewNil()})}), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr)});;
				return _8814_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1b75d6287:;
			{
				static jule::Ptr<_1b2d26ca7_Var> _10314_v = jule::new_ptr<_1b2d26ca7_Var>(_1b2d26ca7_Var{._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1b2bc278a_NewBool(true)})}), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr)});;
				return _10314_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1b75d630e:;
			{
				static jule::Ptr<_1b2d26ca7_Var> _11614_v = jule::new_ptr<_1b2d26ca7_Var>(_1b2d26ca7_Var{._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1b2e95651_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1b2d7ed98_Value>(_1b2d7ed98_Value{._field_Expr=jule::Ptr<_1b2ae2721_Expr>(nullptr), ._field_Data=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1b2bc278a_NewBool(false)})}), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1b2d26ca7_Var>>(nullptr)});;
				return _11614_v;;
			}
		}
		else {
			_case_begin_1b75d595c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b75d0814:;
	};
}



inline jule::Ptr<_1b2db0835_TypeAlias> _1b2e95651_findBuiltinTypeAlias(jule::Str _13325_ident) {
	{
		auto &_match_expr{ _13325_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1b75db0b1:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _13614_t = _1b2e9195a_primTypeAlias(&(_1b2e9231d_primAny));;
				return _13614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1b75db226:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _13914_t = _1b2e9195a_primTypeAlias(&(_1b2e9261a_primStr));;
				return _13914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1b75db28c:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _14214_t = _1b2e9195a_primTypeAlias(&(_1b2e928c3_primBool));;
				return _14214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1b75db369:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _14514_t = _1b2e9195a_primTypeAlias(&(_1b2e92b7b_primUintptr));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1b75db3d0:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _14814_t = _1b2e9195a_primTypeAlias(&(_1b2e92e34_primUint));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1b75db446:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _15114_t = _1b2e9195a_primTypeAlias(&(_1b2e932ec_primInt));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1b75db4ac:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _15414_t = _1b2e9195a_primTypeAlias(&(_1b2e9353e_primI8));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1b75db523:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _15714_t = _1b2e9195a_primTypeAlias(&(_1b2e937d6_primI16));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1b75db600:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _16014_t = _1b2e9195a_primTypeAlias(&(_1b2e93d47_primI64));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1b75db677:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _16314_t = _1b2e9195a_primTypeAlias(&(_1b2e943a8_primU16));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1b75db6ee:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _16614_t = _1b2e9195a_primTypeAlias(&(_1b2e94661_primU32));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1b75db776:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _16914_t = _1b2e9195a_primTypeAlias(&(_1b2e94b4a_primU64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1b75db7ed:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _17214_t = _1b2e9195a_primTypeAlias(&(_1b2e94d8c_primF32));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1b75db875:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _17514_t = _1b2e9195a_primTypeAlias(&(_1b2e9509b_primF64));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1b75db8ec:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _17814_t = _1b2e9195a_primTypeAlias(&(_1b2e94100_primU8));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1b75db974:;
			{
				static jule::Ptr<_1b2db0835_TypeAlias> _18114_t = _1b2e9195a_primTypeAlias(&(_1b2e93a8e_primI32));;
				return _18114_t;;
			}
		}
		else {
			_case_begin_1b75d684d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b75d692a:;
	};
}



inline jule::Any _1b2e958d7_findBuiltinDef(jule::Str* _18820_ident) {
	jule::Ptr<_1b2d26ca7_Var> _1896_v = _1b2e95310_findBuiltinVar(_18820_ident);;
	if ((_1896_v != nullptr)) {
		return jule::Any(_1896_v, &__jule_any_type7);;
	};
	jule::Ptr<_1b2bdda70_FnIns> _1936_f = _1b2e91680_findBuiltinFunc(_18820_ident);;
	if ((_1936_f != nullptr)) {
		return jule::Any(_1936_f, &__jule_any_type63);;
	};
	jule::Ptr<_1b2db0835_TypeAlias> _1976_ta = _1b2e95651_findBuiltinTypeAlias((*(_18820_ident)));;
	if ((_1976_ta != nullptr)) {
		return jule::Any(_1976_ta, &__jule_any_type8);;
	};
	return nullptr;;
}



inline jule::Any _1b2e95ba1_findBuiltinDefStdDebug(jule::Str* _20428_ident) {
	{
		auto &_match_expr{ (*(_20428_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1b75e61ba:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _20714_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9eeb8_builtinCallerStdDebugOut), ._field_reloaded=false});;
				return jule::Any(_20714_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1b75e65b6:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _21014_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2ea03e7_builtinCallerStdDebugOutln), ._field_reloaded=false});;
				return jule::Any(_21014_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1b75e4a8c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b75e4eee:;
	};
}



inline jule::Any _1b2e95e6a_findBuiltinDefStdMem(jule::Str* _21726_ident) {
	{
		auto &_match_expr{ (*(_21726_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1b75e6264:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _22014_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9dcec_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_22014_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1b75e7e36:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _22314_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9e22b_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_22314_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1b75e62ec:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _22614_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9e65a_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_22614_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1b75e664e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b75e7b7d:;
	};
}



inline jule::Any _1b2e96344_findBuiltinDefStdComptime(jule::Str* _23331_ident) {
	{
		auto &_match_expr{ (*(_23331_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1b75e83ba:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _23614_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9c081_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_23614_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1b75ea400:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _23914_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9c4b0_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_23914_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1b75ea477:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _24214_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9cb31_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_24214_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1b75e8442:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _24514_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9d060_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_24514_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1b75e84b9:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _24814_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9d48e_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1b75ea598:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _25114_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1b2bda9b2_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9d8bd_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_25114_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1b75e6363:;
			{
				return nullptr;;
			}
		}
		_match_end_1b75ea158:;
	};
}



inline jule::Any _1b2e96586_findBuiltinDefStdJuleIntegrated(jule::Str* _25837_ident) {
	{
		auto &_match_expr{ (*(_25837_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1b75ea840:;
			{
				static jule::Ptr<_1b2bdda70_FnIns> _26114_f = jule::new_ptr<_1b2bdda70_FnIns>(_1b2bdda70_FnIns{._field_Owner=jule::Ptr<_1b2b119c6_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1b2bda9b2_Fn>(_1b2bda9b2_Fn{._field_sema=jule::Ptr<_1b2d03091_sema>(nullptr), ._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2aea5e7_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2aea5e7_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1b2bd876d_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bd8edd_Param>>(nullptr), ._field_Owner=jule::Ptr<_1b2b0db6b_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1b2bdda70_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1b2daee72_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1b2bdc91a_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1b2db1627_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1b2ca4592_Scope>(nullptr), ._field_Refers=jule::Ptr<_1b2cc3094_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1b2d7dc21_Data>,jule::Ptr<_1b2d80948_eval>*,jule::Ptr<_1b2ae644a_FnCallExpr>*,jule::Ptr<_1b2d7dc21_Data>*>(_1b2e9ea89_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_26114_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1b75ea631:;
			{
				return nullptr;;
			}
		}
		_match_end_1b75ee723:;
	};
}



inline jule::Any _1b2e9690a_findPackageBuiltinDef(jule::Str* _27327_linkPath, jule::Str* _27343_ident) {
	{
		auto &_match_expr{ (*(_27327_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std/comptime", 12)) {
			_case_begin_1b76016c0:;
			{
				return _1b2e96344_findBuiltinDefStdComptime(_27343_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/debug", 9)) {
			_case_begin_1b7601736:;
			{
				return _1b2e95ba1_findBuiltinDefStdDebug(_27343_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/mem", 7)) {
			_case_begin_1b76013d4:;
			{
				return _1b2e95e6a_findBuiltinDefStdMem(_27343_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/jule/integrated", 19)) {
			_case_begin_1b760144a:;
			{
				return _1b2e96586_findBuiltinDefStdJuleIntegrated(_27343_ident);;
			}
		}
		else {
			_case_begin_1b7600d84:;
			{
				return nullptr;;
			}
		}
		_match_end_1b75eebda:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e96c7e_builtinCallerError(jule::Ptr<_1b2d80948_eval>* _28828_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _28843_fc) {
	if (((*((*(_28843_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_28828_e)).ptr(), (*((*(_28843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_28843_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_28828_e)).ptr(), (*((*((*(_28843_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _2966_expr = _1b2d9e7ad_evalExpr((*(_28828_e)), (*((*(_28843_fc))))._field_Args[0LL]);;
	if ((_2966_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2ac7eba_Token> _3016_token = (*((*((*(_28843_fc))))._field_Args[0LL]))._field_Token;;
	if (_1b2d7e13e_IsNil(_2966_expr.ptr())) {
		_1b2d80ecb_pushErr((*(_28828_e)).ptr(), _3016_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1b2d12c1b_checkValidityForInitExpr((*((*(_28828_e))))._field_s, true, false, &(_1b2e9231d_primAny), &(_2966_expr), &(_3016_token))))) {
		return nullptr;;
	};
	_1b2daa2e1_applyRuntimeToStr(&((*((*(_28828_e))))._field_s), &((*(_2966_expr))._field_Kind), &(_1b2e9231d_primAny), &(_3016_token), _1b2d83ece_getOwnerRefers((*(_28828_e)).ptr()));
	jule::Ptr<_1b2d7dc21_Data> _3146_d = _1b2dab017_buildVoidData();;
	(*(_3146_d))._field_Model=jule::Any(jule::new_ptr<_1b2bd686a_BuiltinErrorCallExprModel>(_1b2bd686a_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1b2bdda70_FnIns>(nullptr), ._field_Err=_2966_expr}), &__jule_any_type20);
	return _3146_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e971ad_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _31926_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _31941_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	if (((*((*(_31941_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_31926_e)).ptr(), (*((*(_31941_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_31941_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_31926_e)).ptr(), (*((*((*(_31941_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("out", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2ae2721_Expr> _3286_arg = (*((*(_31941_fc))))._field_Args[0LL];;
	jule::Ptr<_1b2d7dc21_Data> _3296_expr = _1b2d9e7ad_evalExpr((*(_31926_e)), _3286_arg);;
	if ((_3296_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b2dcd7ed_isBuiltinStrConvertable(&((*(_3296_expr))._field_Kind))))) {
		_1b2d80ecb_pushErr((*(_31926_e)).ptr(), (*(_3286_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b2d25448_pushRuntimeToStr(&((*((*(_31926_e))))._field_s), &((*(_3296_expr))._field_Kind), &((*_3286_arg.alloc)._field_Token), _1b2d83ece_getOwnerRefers((*(_31926_e)).ptr()));
	jule::Ptr<_1b2d7dc21_Data> _3416_d = _1b2dab017_buildVoidData();;
	(*(_3416_d))._field_Model=jule::Any(jule::new_ptr<_1b2bd40d7_BuiltinOutCallExprModel>(_1b2bd40d7_BuiltinOutCallExprModel{._field_Expr=_3296_expr, ._field_Debug=false}), &__jule_any_type24);
	return _3416_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e975dc_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _34628_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _34643_fc, jule::Ptr<_1b2d7dc21_Data>* _34670_d) {
	(*(_34670_d))=_1b2e971ad_builtinCallerOut(nullptr, _34628_e, _34643_fc, _34670_d);
	if (((*(_34670_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34670_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd44b1_BuiltinOutlnCallExprModel>(_1b2bd44b1_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34670_d))))._field_Model.cast_ptr<_1b2bd40d7_BuiltinOutCallExprModel>(&__jule_any_type24)))._field_Expr, ._field_Debug=false}), &__jule_any_type25);
	return (*(_34670_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e97a1b_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _35826_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _35841_fc, jule::Ptr<_1b2d7dc21_Data>* _35868_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1b2d80ecb_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _3676_t = _1b2d9dcda_eval1((*(_35826_e)), (*((*(_35841_fc))))._field_Args[0LL]);;
	if ((_3676_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3676_t))._field_Decl))) {
		_1b2d80ecb_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1b2dcd29d_isValidForSptrType(&((*(_3676_t))._field_Kind))))) {
		jule::Ptr<_1b2b119c6_StructIns> _3787_s = _1b2db5351_Struct((*(_3676_t))._field_Kind.ptr());;
		if ((((_3787_s != nullptr) && ((*_3787_s.alloc)._field_Decl != nullptr)) && (*(*(_3787_s))._field_Decl.alloc)._field_Binded)) {
			_1b2d80ecb_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35868_d))))._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2dbd26b_Sptr>(_1b2dbd26b_Sptr{._field_Elem=(*(_3676_t))._field_Kind}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data23)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1b2db1627_TypeKind> _3927_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3676_t))._field_Kind;
		jule::Ptr<_1b2d7dc21_Data> _3957_init = _1b2d9e7ad_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_3927_old;
		if ((_3957_init != nullptr)) {
			jule::Ptr<_1b2ac7eba_Token> _4008_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1b2d12c1b_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3676_t))._field_Kind), &(_3957_init), &(_4008_token));
			_1b2d0d486_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3676_t))._field_Kind), &(_3957_init), _4008_token, _1b2d83ece_getOwnerRefers((*(_35826_e)).ptr()));
			(*((*(_35868_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd488a_BuiltinNewCallExprModel>(_1b2bd488a_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, ._field_Init=(*_3957_init.alloc)._field_Model}), &__jule_any_type115);
		};
	} else {
		(*((*(_35868_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd488a_BuiltinNewCallExprModel>(_1b2bd488a_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, ._field_Init=jule::Any(nullptr)}), &__jule_any_type115);
	};
	return (*(_35868_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e97e4a_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _42028_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _42043_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _4296_expr = _1b2d9e7ad_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4296_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1b2db3ccd_Prim((*(_4296_expr))._field_Kind.ptr()) == nullptr) || (!(_1b2dbcc0a_IsStr(_1b2db3ccd_Prim((*(_4296_expr))._field_Kind).ptr()))))) {
		_1b2d80ecb_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b2d7dc21_Data> _4386_d = _1b2dab017_buildVoidData();;
	(*(_4386_d))._field_Model=jule::Any(jule::new_ptr<_1b2bd4c64_BuiltinPanicCallExprModel>(_1b2bd4c64_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4296_expr))._field_Model}), &__jule_any_type26);
	return _4386_d;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e985aa_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _44627_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _44642_fc, jule::Ptr<_1b2d7dc21_Data>* _44669_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1b2d80ecb_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1b2d80ecb_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1b2d80ecb_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2d7dc21_Data> _4596_t = _1b2d9d999_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4596_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4596_t))._field_Decl))) {
		_1b2d80ecb_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1b2db4d34_Slc((*(_4596_t))._field_Kind.ptr()) == nullptr)) {
		_1b2d80ecb_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_4596_t))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_44669_d))))._field_Kind=(*(_4596_t))._field_Kind;
	jule::Ptr<_1b2d7dc21_Data> _4746_lenExpr = _1b2d9e7ad_evalExpr(_1b2d0ca29_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4746_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1b2d89c4e_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4746_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1b2bd521a_BuiltinMakeCallExprModel> _4816_model = jule::new_ptr<_1b2bd521a_BuiltinMakeCallExprModel>(_1b2bd521a_BuiltinMakeCallExprModel{._field_Kind=(*(_4596_t))._field_Kind, ._field_Len=(*(_4746_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_44669_d))))._field_Model=jule::Any(_4816_model, &__jule_any_type116);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1b2d7dc21_Data> _4877_capExpr = _1b2d9e7ad_evalExpr(_1b2d0ca29_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_4877_capExpr == nullptr)) {
			return (*(_44669_d));;
		};
		_1b2d89c4e_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4877_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4816_model))._field_Cap=(*(_4877_capExpr))._field_Model;
	};
	return (*(_44669_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e988c9_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _49729_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _49744_fc, jule::Ptr<_1b2d7dc21_Data>* _49771_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1b2d80ecb_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1b2d80ecb_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2ae2721_Expr> _5076_firstArg = (*((*(_49744_fc))))._field_Args[0LL];;
	jule::Ptr<_1b2d7dc21_Data> _5086_t = _1b2d9e7ad_evalExpr((*(_49729_e)), _5076_firstArg);;
	if ((_5086_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2dbdc3e_Slc> _5136_s = _1b2db4d34_Slc((*(_5086_t))._field_Kind.ptr());;
	if ((_5136_s == nullptr)) {
		_1b2d80ecb_pushErr((*(_49729_e)).ptr(), (*(_5076_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1b2d12c1b_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5086_t))._field_Kind), &(_5086_t), &((*_5076_firstArg.alloc)._field_Token))) {
		_1b2d0d486_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5086_t))._field_Kind), &(_5086_t), (*_5076_firstArg.alloc)._field_Token, _1b2d83ece_getOwnerRefers((*(_49729_e)).ptr()));
	};
	jule::Ptr<_1b2db1627_TypeKind> _5286_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5086_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5286_prefix;
	});;
	(*(_49771_d))=jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=(*(_5086_t))._field_Kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});
	jule::Ptr<_1b2ae2721_Expr> _5366_secondArg = (*((*(_49744_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5366_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b764a76e:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1b2d80ecb_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1b2d7dc21_Data> _5437_e1 = _1b2d9e7ad_evalExpr((*(_49729_e)), (*((*(_5366_secondArg))._field_Kind.unsafe_cast_ptr<_1b2ae4ba7_VariadicExpr>()))._field_Expr);;
				if ((_5437_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1b2db3ccd_Prim((*(_5136_s))._field_Elem.ptr()) != nullptr) && _1b2dbb16a_IsU8(_1b2db3ccd_Prim((*(_5136_s))._field_Elem).ptr()))) {
					if (((_1b2db3ccd_Prim((*(_5437_e1))._field_Kind) != nullptr) && _1b2dbcc0a_IsStr(_1b2db3ccd_Prim((*(_5437_e1))._field_Kind).ptr()))) {
						_1b2dadb1e_makeVariadic(&(_5437_e1), _1b2e94100_primU8);
						(*((*(_49771_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd55e4_BuiltinAppendCallExprModel>(_1b2bd55e4_BuiltinAppendCallExprModel{._field_Dest=(*(_5086_t))._field_Model, ._field_Elements=(*(_5437_e1))._field_Model}), &__jule_any_type23);
						return (*(_49771_d));;
					};
				};
				if ((!(_1b2db3a47_Variadicable((*(_5437_e1))._field_Kind)))) {
					_1b2d80ecb_pushErr((*(_49729_e)).ptr(), (*(_5366_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_5437_e1))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1b2dadb1e_makeVariadic(&(_5437_e1), (*(_5136_s))._field_Elem);
				(*(*(_5437_e1))._field_Kind.alloc)._field_Variadic=false;
				if (_1b2d12c1b_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5136_s))._field_Elem), &(_5437_e1), &((*_5366_secondArg.alloc)._field_Token))) {
					(*(*(_5437_e1))._field_Kind.alloc)._field_Variadic=true;
					_1b2d0d486_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5136_s))._field_Elem), &(_5437_e1), (*_5366_secondArg.alloc)._field_Token, _1b2d83ece_getOwnerRefers((*(_49729_e)).ptr()));
				} else {
					(*(*(_5437_e1))._field_Kind.alloc)._field_Variadic=true;
				};
				(*((*(_49771_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd55e4_BuiltinAppendCallExprModel>(_1b2bd55e4_BuiltinAppendCallExprModel{._field_Dest=(*(_5086_t))._field_Model, ._field_Elements=(*(_5437_e1))._field_Model}), &__jule_any_type23);
				return (*(_49771_d));;
			}
		}
		_match_end_1b764a6e7:;
	};
	jule::Ptr<_1b2d7dc21_Data> _5866_e1 = _1b2d9e7ad_evalExpr((*(_49729_e)), _5366_secondArg);;
	if ((_5866_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2bd09c9_SliceExprModel> _5916_slice = jule::new_ptr<_1b2bd09c9_SliceExprModel>(_1b2bd09c9_SliceExprModel{._field_ElemKind=(*(_5136_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b7657836:;
		if (it != expr_end) {
			jule::Ptr<_1b2ae2721_Expr> _59514_arg = *it;
			{
				_5866_e1=_1b2d9e7ad_evalExpr((*(_49729_e)), _59514_arg);
				if ((_5866_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5866_e1))._field_Kind.alloc)._field_Variadic) {
					_1b2d80ecb_pushErr((*(_49729_e)).ptr(), (*(_59514_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1b2d12c1b_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5136_s))._field_Elem), &(_5866_e1), &((*_59514_arg.alloc)._field_Token))) {
					_1b2d0d486_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5136_s))._field_Elem), &(_5866_e1), (*_59514_arg.alloc)._field_Token, _1b2d83ece_getOwnerRefers((*(_49729_e)).ptr()));
				};
				(*(_5916_slice))._field_Elems=jule::append((*_5916_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5866_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1b7657836:;
			++it;
			goto _iter_begin_1b7657836;
		}
		_iter_end_1b7657836:;
	};
	(*((*(_49771_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd55e4_BuiltinAppendCallExprModel>(_1b2bd55e4_BuiltinAppendCallExprModel{._field_Dest=(*(_5086_t))._field_Model, ._field_Elements=jule::Any(_5916_slice, &__jule_any_type79)}), &__jule_any_type23);
	return (*(_49771_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e98db3_callerCopySlice(jule::Ptr<_1b2d7dc21_Data>* _61725_dest, jule::Ptr<_1b2d80948_eval>* _61743_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _61758_fc, jule::Ptr<_1b2d7dc21_Data>* _61785_d) {
	if ((!((*((*(_61725_dest))))._field_Mutable))) {
		_1b2d80ecb_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b2d7dc21_Data> _6226_src = _1b2d9e7ad_evalExpr((*(_61743_e)), (*((*(_61758_fc))))._field_Args[1LL]);;
	if ((_6226_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2dbdc3e_Slc> _6266_slc = _1b2db4d34_Slc((*(_6226_src))._field_Kind.ptr());;
	if ((_6266_slc != nullptr)) {
		if (((!((*(_6226_src))._field_Mutable)) && _1b2db300d_Mutable((*_6266_slc.alloc)._field_Elem.ptr()))) {
			_1b2d80ecb_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1b2db1d64_Equal((*((*(_61725_dest))))._field_Kind, (*(_6226_src))._field_Kind)))) {
			_1b2d80ecb_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_61725_dest))))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_6226_src))._field_Kind), &__jule_any_type5); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1b2db9740_Prim> _6363_destPrim = _1b2db3ccd_Prim((*(_1b2db4d34_Slc((*((*(_61725_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1b2db9740_Prim> _6373_prim = _1b2db3ccd_Prim((*(_6226_src))._field_Kind);;
		if (((((_6363_destPrim == nullptr) || (_6373_prim == nullptr)) || (!(_1b2dbcc0a_IsStr(_6373_prim.ptr())))) || (!(_1b2dbb16a_IsU8(_6363_destPrim.ptr()))))) {
			_1b2d80ecb_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*((*(_61725_dest))))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_6226_src))._field_Kind), &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*(_61785_d))))._field_Kind=_1b2d7c093_lenKind();
	(*((*(_61785_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd6491_BuiltinCopyCallExprModel>(_1b2bd6491_BuiltinCopyCallExprModel{._field_Dest=(*(_61725_dest)), ._field_Src=_6226_src}), &__jule_any_type27);
	return (*(_61785_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e992e2_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _65127_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _65142_fc, jule::Ptr<_1b2d7dc21_Data>* _65169_d) {
	if (((*((*(_65142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_65142_fc))))._field_Args.len() == 1LL)) {
			_1b2d80ecb_pushErr((*(_65127_e)).ptr(), (*((*(_65142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1b2d80ecb_pushErr((*(_65127_e)).ptr(), (*((*(_65142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_65142_fc))))._field_Args.len() > 2LL)) {
		_1b2d80ecb_pushErr((*(_65127_e)).ptr(), (*((*((*(_65142_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _6646_dest = _1b2d9e7ad_evalExpr((*(_65127_e)), (*((*(_65142_fc))))._field_Args[0LL]);;
	{
		
		if ((_6646_dest == nullptr)) {
			_case_begin_1b766d1ba:;
			{
				return nullptr;;
			}
		}
		else if ((_1b2db4d34_Slc((*(_6646_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b766debd:;
			{
				return _1b2e98db3_callerCopySlice(&(_6646_dest), _65127_e, _65142_fc, _65169_d);;
			}
		}
		else {
			_case_begin_1b766cd02:;
			{
				_1b2d80ecb_pushErr((*(_65127_e)).ptr(), (*((*((*(_65142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b766b152:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e99666_callerLenSlice(jule::Ptr<_1b2d7dc21_Data>* _67624_expr, jule::Ptr<_1b2d7dc21_Data>* _67642_d) {
	(*((*(_67642_d))))._field_Kind=_1b2d7c093_lenKind();
	(*((*(_67642_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd58e1_BuiltinLenCallExprModel>(_1b2bd58e1_BuiltinLenCallExprModel{._field_Expr=(*(_67624_expr))}), &__jule_any_type117);
	return (*(_67642_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e999da_callerLenMap(jule::Ptr<_1b2d7dc21_Data>* _68422_expr, jule::Ptr<_1b2d7dc21_Data>* _68440_d) {
	(*((*(_68440_d))))._field_Kind=_1b2d7c093_lenKind();
	(*((*(_68440_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd58e1_BuiltinLenCallExprModel>(_1b2bd58e1_BuiltinLenCallExprModel{._field_Expr=(*(_68422_expr))}), &__jule_any_type117);
	return (*(_68440_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e99d5e_callerLenArr(jule::Ptr<_1b2d7dc21_Data>* _69222_expr, jule::Ptr<_1b2d7dc21_Data>* _69240_d) {
	(*((*(_69240_d))))._field_Kind=_1b2d7c093_lenKind();
	(*((*(_69240_d))))._field_Constant=static__1b2bc22e5_NewI64(static_cast<jule::I64>((*(_1b2db4a9d_Arr((*((*(_69222_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_69240_d))))._field_Model=jule::Any((*((*(_69240_d))))._field_Constant, &__jule_any_type15);
	return (*(_69240_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9a1d3_callerLenStr(jule::Ptr<_1b2d7dc21_Data>* _69922_expr, jule::Ptr<_1b2d7dc21_Data>* _69940_d) {
	(*((*(_69940_d))))._field_Kind=_1b2d7c093_lenKind();
	if (_1b2d7e65b_IsConst((*(_69922_expr)).ptr())) {
		(*((*(_69940_d))))._field_Constant=static__1b2bc22e5_NewI64(static_cast<jule::I64>(_1b2bc3e40_ReadStr((*((*(_69922_expr))))._field_Constant.ptr()).len()));
		(*((*(_69940_d))))._field_Model=jule::Any((*((*(_69940_d))))._field_Constant, &__jule_any_type15);
	} else {
		(*((*(_69940_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd58e1_BuiltinLenCallExprModel>(_1b2bd58e1_BuiltinLenCallExprModel{._field_Expr=(*(_69922_expr))}), &__jule_any_type117);
	};
	return (*(_69940_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9a557_callerLenComptime(jule::Ptr<_1b2d7dc21_Data>* _71227_d, jule::I64 _71237_n) {
	(*((*(_71227_d))))._field_Kind=_1b2d7c093_lenKind();
	(*((*(_71227_d))))._field_Constant=static__1b2bc22e5_NewI64(static_cast<jule::I64>(_71237_n));
	(*((*(_71227_d))))._field_Model=jule::Any((*((*(_71227_d))))._field_Constant, &__jule_any_type15);
	return (*(_71227_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9a986_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _71926_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _71941_fc, jule::Ptr<_1b2d7dc21_Data>* _71968_d) {
	if (((*((*(_71941_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_71926_e)).ptr(), (*((*(_71941_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_71941_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_71926_e)).ptr(), (*((*((*(_71941_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _7276_dest = _1b2d9e46c_evalExpr1((*(_71926_e)), (*((*(_71941_fc))))._field_Args[0LL]);;
	{
		
		if ((_7276_dest == nullptr)) {
			_case_begin_1b767d384:;
			{
				return nullptr;;
			}
		}
		else if ((_1b2db4d34_Slc((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b767e187:;
			{
				return _1b2e99666_callerLenSlice(&(_7276_dest), _71968_d);;
			}
		}
		else if ((_1b2db4a9d_Arr((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b767e1ed:;
			{
				return _1b2e99d5e_callerLenArr(&(_7276_dest), _71968_d);;
			}
		}
		else if ((_1b2db586d_Map((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b767d032:;
			{
				return _1b2e999da_callerLenMap(&(_7276_dest), _71968_d);;
			}
		}
		else if (((_1b2db3ccd_Prim((*(_7276_dest))._field_Kind.ptr()) != nullptr) && _1b2dbcc0a_IsStr(_1b2db3ccd_Prim((*(_7276_dest))._field_Kind).ptr()))) {
			_case_begin_1b767d098:;
			{
				return _1b2e9a1d3_callerLenStr(&(_7276_dest), _71968_d);;
			}
		}
		else if ((_1b2db6121_comptimeStructFields((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b767d10e:;
			{
				return _1b2e9a557_callerLenComptime(_71968_d, (*(_1b2db6121_comptimeStructFields((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1b2db663d_comptimeEnumFields((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b767d175:;
			{
				return _1b2e9a557_callerLenComptime(_71968_d, (*(_1b2db663d_comptimeEnumFields((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1b2db740d_comptimeTypeInfos((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b767e2db:;
			{
				return _1b2e9a557_callerLenComptime(_71968_d, (*(_1b2db740d_comptimeTypeInfos((*(_7276_dest))._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1b2db6b5a_comptimeParams((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b767e352:;
			{
				return _1b2e9a557_callerLenComptime(_71968_d, (*(_1b2db6b5a_comptimeParams((*(_7276_dest))._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1b2db792a_comptimeStatics((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b767e3b8:;
			{
				return _1b2e9a557_callerLenComptime(_71968_d, (*(_1b2db792a_comptimeStatics((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1b2db8981_comptimeFiles((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b767e42e:;
			{
				return _1b2e9a557_callerLenComptime(_71968_d, (*(_1b2db8981_comptimeFiles((*(_7276_dest))._field_Kind)))._field_files.len());;
			}
		}
		else if ((_1b2db8464_comptimeDecls((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b767e495:;
			{
				return _1b2e9a557_callerLenComptime(_71968_d, (*(_1b2db8464_comptimeDecls((*(_7276_dest))._field_Kind)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1b767cebb:;
			{
				_1b2d80ecb_pushErr((*(_71926_e)).ptr(), (*((*((*(_71941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b767b31b:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9ad0a_callerCapSlice(jule::Ptr<_1b2d7dc21_Data>* _75924_expr, jule::Ptr<_1b2d7dc21_Data>* _75942_d) {
	(*((*(_75942_d))))._field_Kind=_1b2d7c093_lenKind();
	(*((*(_75942_d))))._field_Model=jule::Any(jule::new_ptr<_1b2bd5bdd_BuiltinCapCallExprModel>(_1b2bd5bdd_BuiltinCapCallExprModel{._field_Expr=(*(_75924_expr))}), &__jule_any_type118);
	return (*(_75942_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9b239_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _76726_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _76741_fc, jule::Ptr<_1b2d7dc21_Data>* _76768_d) {
	if (((*((*(_76741_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_76726_e)).ptr(), (*((*(_76741_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_76741_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _7756_dest = _1b2d9e7ad_evalExpr((*(_76726_e)), (*((*(_76741_fc))))._field_Args[0LL]);;
	{
		
		if ((_7756_dest == nullptr)) {
			_case_begin_1b7691b39:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7756_dest))._field_Decl) {
			_case_begin_1b769293c:;
			{
				_1b2d80ecb_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b2db4d34_Slc((*(_7756_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b76929a3:;
			{
				return _1b2e9ad0a_callerCapSlice(&(_7756_dest), _76768_d);;
			}
		}
		else {
			_case_begin_1b7691771:;
			{
				_1b2d80ecb_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b768eac1:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9b723_callerDeleteMap(jule::Ptr<_1b2d80948_eval>* _79025_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _79040_fc, jule::Ptr<_1b2d7dc21_Data>* _79067_expr, jule::Ptr<_1b2d7dc21_Data>* _79085_d) {
	if ((!((*((*(_79067_expr))))._field_Mutable))) {
		_1b2d80ecb_pushErr((*(_79025_e)).ptr(), (*((*((*(_79040_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_79085_d))=_1b2dab017_buildVoidData();
	jule::Ptr<_1b2bd60b7_BuiltinDeleteCallExprModel> _7956_model = jule::new_ptr<_1b2bd60b7_BuiltinDeleteCallExprModel>(_1b2bd60b7_BuiltinDeleteCallExprModel{._field_Dest=(*(_79067_expr)), ._field_Key=jule::Ptr<_1b2d7dc21_Data>(nullptr)});;
	if (((*((*(_79040_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1b2d7dc21_Data> _7997_key = _1b2d9e7ad_evalExpr((*(_79025_e)), (*((*(_79040_fc))))._field_Args[1LL]);;
		{
			
			if ((_7997_key == nullptr)) {
				_case_begin_1b7698a42:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7997_key))._field_Decl) {
				_case_begin_1b769769a:;
				{
					_1b2d80ecb_pushErr((*(_79025_e)).ptr(), (*((*((*(_79040_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1b7697634:;
				{
					;
					jule::Ptr<_1b2db1627_TypeKind> _8088_keyType = (*(_1b2db586d_Map((*((*(_79067_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1b2d0d486_checkAssignType((*((*(_79025_e))))._field_s, false, &(_8088_keyType), &(_7997_key), (*((*((*(_79040_fc))))._field_Args[1LL]))._field_Token, _1b2d83ece_getOwnerRefers((*(_79025_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1b76975bd:;
		};
		(*(_7956_model))._field_Key=_7997_key;
	};
	(*((*(_79085_d))))._field_Model=jule::Any(_7956_model, &__jule_any_type28);
	return (*(_79085_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9bb52_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _81929_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _81944_fc, jule::Ptr<_1b2d7dc21_Data>* _81971_d) {
	if (((*((*(_81944_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_81929_e)).ptr(), (*((*(_81944_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_81944_fc))))._field_Args.len() > 2LL)) {
		_1b2d80ecb_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _8276_dest = _1b2d9e7ad_evalExpr((*(_81929_e)), (*((*(_81944_fc))))._field_Args[0LL]);;
	{
		
		if ((_8276_dest == nullptr)) {
			_case_begin_1b76a03b7:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8276_dest))._field_Decl) {
			_case_begin_1b76a11ba:;
			{
				_1b2d80ecb_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b2db586d_Map((*(_8276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b76a1231:;
			{
				return _1b2e9b723_callerDeleteMap(_81929_e, _81944_fc, &(_8276_dest), _81971_d);;
			}
		}
		else {
			_case_begin_1b769eeee:;
			{
				_1b2d80ecb_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b769d34e:;
	};
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9c081_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _84240_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _84255_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	if (((*((*(_84255_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_84240_e)).ptr(), (*((*(_84255_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_84255_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_84240_e)).ptr(), (*((*((*(_84255_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _8516_d = _1b2d9d999_evalExprKind((*(_84240_e)), (*((*((*(_84255_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8516_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _8552_f = _1b2db50ba_Fn((*(_8516_d))._field_Kind.ptr());;
	if ((_8552_f != nullptr)) {
		if (_1b2be0038_IsBuiltin(_8552_f)) {
			_1b2d80ecb_pushErr((*(_84240_e)).ptr(), (*((*((*(_84255_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8552_f.alloc)._field_Generics.len() != (*((*_8552_f.alloc)._field_Decl))._field_Generics.len())) {
			_1b2d80ecb_pushErr((*(_84240_e)).ptr(), (*((*((*(_84255_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1b2b119c6_StructIns> _8662_s = _1b2db5351_Struct((*(_8516_d))._field_Kind);;
	if (((_8662_s != nullptr) && ((*_8662_s.alloc)._field_Generics.len() != (*((*_8662_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1b2d80ecb_pushErr((*(_84240_e)).ptr(), (*((*((*(_84255_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1b2db5d8a_comptime((*(_8516_d))._field_Kind)) {
		_1b2d80ecb_pushErr((*(_84240_e)).ptr(), (*((*((*(_84255_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_8516_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1b2c9ad19_buildComptimeTypeInfoData(&((*((*(_84240_e))))._field_s), &((*(_8516_d))._field_Kind));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9c4b0_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _87841_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _87856_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	if (((*((*(_87856_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_87841_e)).ptr(), (*((*(_87856_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_87856_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_87841_e)).ptr(), (*((*((*(_87856_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _8866_d = _1b2d9e7ad_evalExpr((*(_87841_e)), (*((*(_87856_fc))))._field_Args[0LL]);;
	if ((_8866_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b2d7c3e5_isGoodValueToInfer(&(_8866_d))))) {
		_1b2d80ecb_pushErr((*(_87841_e)).ptr(), (*((*((*(_87856_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_8866_d))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1b2c9b15a_buildComptimeValue(&(_8866_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9cb31_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _89838_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _89853_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	if (((*((*(_89853_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_89838_e)).ptr(), (*((*((*(_89853_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2b6c23a_Const> _9026_constant = static__1b2bc22e5_NewI64(static_cast<jule::I64>((*((*((*(_89853_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e932ec_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9026_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9026_constant});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9d060_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _91038_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _91053_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	if (((*((*(_91053_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_91038_e)).ptr(), (*((*((*(_91053_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c92382_comptimeFile>(_1b2c92382_comptimeFile{._field_file=(*((*((*(_91038_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9d48e_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _92339_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _92354_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	if (((*((*(_92354_fc))))._field_Args.len() > 0LL)) {
		_1b2d80ecb_pushErr((*(_92339_e)).ptr(), (*((*((*(_92354_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2c90913_comptimeFiles>(_1b2c90913_comptimeFiles{._field_files=(*((*((*(_92339_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9d8bd_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _93643_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _93658_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	if (((*((*(_93658_fc))))._field_Args.len() > 2LL)) {
		_1b2d80ecb_pushErr((*(_93643_e)).ptr(), (*((*((*(_93658_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_93658_fc))))._field_Args.len() == 0LL)) {
		_1b2d80ecb_pushErr((*(_93643_e)).ptr(), (*((*(_93658_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_93658_fc))))._field_Args.len() == 1LL)) {
		_1b2d80ecb_pushErr((*(_93643_e)).ptr(), (*((*(_93658_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_93658_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b76c2054:;
			{
				goto _match_end_1b76c078e;
			}
		}
		else {
			_case_begin_1b76c0816:;
			{
				_1b2d80ecb_pushErr((*(_93643_e)).ptr(), (*((*((*(_93658_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1b2d8133e_pushSuggestion((*(_93643_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b76c078e:;
	};
	jule::Ptr<_1b2ac7eba_Token> _9576_ident = (*((*((*((*(_93658_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1b2ae403b_IdentExpr>(&__jule_any_type41)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_93643_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1)) {
			_case_begin_1b76c2d79:;
			{
				goto _match_end_1b76c30aa;
			}
		}
		else {
			_case_begin_1b76c3121:;
			{
				_1b2d80ecb_pushErr((*(_93643_e)).ptr(), (*((*(_93658_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b76c30aa:;
	};
	jule::Ptr<_1b2cab830_scopeChecker> _9666_sc = (*((*(_93643_e))))._field_lookup.cast_ptr<_1b2cab830_scopeChecker>((jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data1);;
	jule::Ptr<_1b2db0835_TypeAlias> _9676_alias = jule::new_ptr<_1b2db0835_TypeAlias>(_1b2db0835_TypeAlias{._field_Scope=(*(_9666_sc))._field_tree, ._field_Public=_1b2d0029c_IsPub((*(_9576_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9576_ident, ._field_Ident=(*_9576_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1b2db8d38_TypeSymbol>(_1b2db8d38_TypeSymbol{._field_Decl=jule::Ptr<_1b2add3dc_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1b2db1627_TypeKind>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>(nullptr)});;
	jule::Ptr<_1b2d7dc21_Data> _9776_t = _1b2d9dcda_eval1((*(_93643_e)), (*((*(_93658_fc))))._field_Args[1LL]);;
	if ((_9776_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9776_t))._field_Decl) {
		(*((*(_9676_alias))._field_Kind))._field_Kind=(*(_9776_t))._field_Kind;
	} else {
		jule::Ptr<_1b2c86aa2_comptimeTypeInfo> _9847_cti = _1b2db7694_comptimeTypeInfo((*(_9776_t))._field_Kind.ptr());;
		if ((_9847_cti == nullptr)) {
			_1b2d80ecb_pushErr((*(_93643_e)).ptr(), (*((*((*(_93658_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1b2d8133e_pushSuggestion((*(_93643_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9676_alias))._field_Kind))._field_Kind=(*(_9847_cti))._field_base;
	};
	_1b2cb199a_checkTypeAlias(_9666_sc, &(_9676_alias));
	return _1b2dab017_buildVoidData();;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9dcec_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _99635_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _99650_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<_1b2d7dc21_Data> _9976_result = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e92e34_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
	if (((*((*(_99650_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_99635_e)).ptr(), (*((*(_99650_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9976_result;;
	};
	if (((*((*(_99650_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_99635_e)).ptr(), (*((*((*(_99650_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _10096_d = _1b2d9d999_evalExprKind((*(_99635_e)), (*((*((*(_99650_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10096_d == nullptr)) {
		return _9976_result;;
	};
	if ((!(_1b2dce6de_validTypeForXof(&((*(_10096_d))._field_Kind))))) {
		_1b2d80ecb_pushErr((*(_99635_e)).ptr(), (*((*((*(_99650_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_10096_d))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9976_result))._field_Model=jule::Any(jule::new_ptr<_1b2bd6b67_SizeofExprModel>(_1b2bd6b67_SizeofExprModel{._field_Expr=(*(_10096_d))._field_Model}), &__jule_any_type119);
	return _9976_result;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9e22b_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _102136_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _102151_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<_1b2d7dc21_Data> _10226_result = jule::new_ptr<_1b2d7dc21_Data>(_1b2d7dc21_Data{._field_untyped=false, ._field_Kind=_1b2e92e34_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1b2b6c23a_Const>(nullptr)});;
	if (((*((*(_102151_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_102136_e)).ptr(), (*((*(_102151_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _10226_result;;
	};
	if (((*((*(_102151_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_102136_e)).ptr(), (*((*((*(_102151_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _10346_d = _1b2d9d999_evalExprKind((*(_102136_e)), (*((*((*(_102151_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10346_d == nullptr)) {
		return _10226_result;;
	};
	if ((!(_1b2dce6de_validTypeForXof(&((*(_10346_d))._field_Kind))))) {
		_1b2d80ecb_pushErr((*(_102136_e)).ptr(), (*((*((*(_102151_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b2db1a23_Str((*(_10346_d))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	(*(_10226_result))._field_Model=jule::Any(jule::new_ptr<_1b2bd731b_AlignofExprModel>(_1b2bd731b_AlignofExprModel{._field_Expr=(*(_10346_d))._field_Model}), &__jule_any_type120);
	return _10226_result;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9e65a_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _104633_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _104648_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	if (((*((*(_104648_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_104633_e)).ptr(), (*((*(_104648_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104648_fc))))._field_Args.len() > 1LL)) {
		_1b2d80ecb_pushErr((*(_104633_e)).ptr(), (*((*((*(_104648_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1b2d7dc21_Data> _10556_d = _1b2d9e7ad_evalExpr((*(_104633_e)), (*((*(_104648_fc))))._field_Args[0LL]);;
	if ((_10556_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b2db37b1_GC((*(_10556_d))._field_Kind.ptr())))) {
		_1b2d80ecb_pushErr((*(_104633_e)).ptr(), (*((*((*(_104648_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b2d7dc21_Data> _10646_result = _1b2dab017_buildVoidData();;
	(*(_10646_result))._field_Model=jule::Any(jule::new_ptr<_1b2bd7b79_FreeExprModel>(_1b2bd7b79_FreeExprModel{._field_Expr=(*(_10556_d))._field_Model}), &__jule_any_type29);
	return _10646_result;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9ea89_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _106944_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _106959_fc, jule::Ptr<_1b2d7dc21_Data>* _106986_d) {
	if ((!(_1b2d819c1_isUnsafe((*(_106944_e)).ptr())))) {
		_1b2d80ecb_pushErr((*(_106944_e)).ptr(), (*((*(_106959_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_106959_fc))))._field_Args.len() < 1LL)) {
		_1b2d80ecb_pushErr((*(_106944_e)).ptr(), (*((*(_106959_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1b2d7dc21_Data> _10796_argd = _1b2d9e7ad_evalExpr((*(_106944_e)), (*((*(_106959_fc))))._field_Args[0LL]);;
	if ((_10796_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1b2db3ccd_Prim((*(_10796_argd))._field_Kind.ptr()) == nullptr) || (!(_1b2dbcc0a_IsStr(_1b2db3ccd_Prim((*(_10796_argd))._field_Kind).ptr()))))) {
		_1b2d80ecb_pushErr((*(_106944_e)).ptr(), (*((*((*(_106959_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1b2db1a23_Str((*(_10796_argd))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1b2d7e65b_IsConst(_10796_argd.ptr()))) || (!(_1b2bc653b_IsStr((*(_10796_argd))._field_Constant.ptr()))))) {
		_1b2d80ecb_pushErr((*(_106944_e)).ptr(), (*((*((*(_106959_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b2d7dc21_Data> _10946_r = _1b2dab017_buildVoidData();;
	jule::Ptr<_1b2bdda70_FnIns> _10966_f = _1b2db50ba_Fn((*((*(_106986_d))))._field_Kind);;
	if (((*(_10966_f))._field_Generics.len() > 0LL)) {
		(*(_10946_r))._field_Kind=(*((*(_10966_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1b2bd787c_BackendEmitExprModel> _11016_model = jule::new_ptr<_1b2bd787c_BackendEmitExprModel>(_1b2bd787c_BackendEmitExprModel{._field_Code=_1b2bc3e40_ReadStr((*(_10796_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_106959_fc))))._field_Args.len() > 1LL)) {
		(*(_11016_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_106959_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_106959_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b76ee955:;
			if (it != expr_end) {
				jule::Ptr<_1b2ae2721_Expr> _110715_arg = *it;
				{
					_10796_argd=_1b2d9dcda_eval1((*(_106944_e)), _110715_arg);
					if ((_10796_argd == nullptr)) {
						return nullptr;;
					};
					(*_11016_model.alloc)._field_Exprs=jule::append((*_11016_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10796_argd))._field_Model; __jule_collection; }));
				}
				_iter_next_1b76ee955:;
				++it;
				goto _iter_begin_1b76ee955;
			}
			_iter_end_1b76ee955:;
		};
	};
	(*_10946_r.alloc)._field_Model=jule::Any(_11016_model, &__jule_any_type22);
	return _10946_r;;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2e9eeb8_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _112034_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _112049_fc, jule::Ptr<_1b2d7dc21_Data>* _112076_d) {
	(*(_112076_d))=_1b2e971ad_builtinCallerOut(nullptr, _112034_e, _112049_fc, _112076_d);
	if (((*(_112076_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_112076_d))))._field_Model.cast_ptr<_1b2bd40d7_BuiltinOutCallExprModel>(&__jule_any_type24)))._field_Debug=true;
	return (*(_112076_d));;
}



inline jule::Ptr<_1b2d7dc21_Data> _1b2ea03e7_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _112936_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _112951_fc, jule::Ptr<_1b2d7dc21_Data>* _112978_d) {
	(*(_112978_d))=_1b2e975dc_builtinCallerOutln(nullptr, _112936_e, _112951_fc, _112978_d);
	if (((*(_112978_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_112978_d))))._field_Model.cast_ptr<_1b2bd44b1_BuiltinOutlnCallExprModel>(&__jule_any_type25)))._field_Debug=true;
	return (*(_112978_d));;
}



inline jule::Ptr<_1b37ca35e_FileInfo> _1b37cd1a8_ParseFile(jule::Ptr<_1b2acd872_Fileset> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b37ca35e_FileInfo> _276_finf = jule::new_ptr<_1b37ca35e_FileInfo>(_1b37ca35e_FileInfo{._field_Ast=jule::Ptr<_1b2adb52d_AST>(nullptr), ._field_Errors=jule::Slice<_20daa5e91_Log>(nullptr)});;
	({
		__jule_tuple_x_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log __jule_assign_result = _1b382bcd9_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log _1b382bcd9_parseFileset(jule::Ptr<_1b2acd872_Fileset> _5521_f) {
	__jule_tuple_x_1b2adb52d_AST__jule_tuple_s_20daa5e91_Log __jule_func_result;
	jule::Ptr<_1b384c47a_parser> _566_p = jule::new_ptr<_1b384c47a_parser>(_1b384c47a_parser{._field_ast=jule::Ptr<_1b2adb52d_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1b2adc809_Directive>>(nullptr), ._field_errors=jule::Slice<_20daa5e91_Log>(nullptr), ._field_ep=jule::Ptr<_1b383bbb7_exprBuilder>(nullptr)});;
	_1b385c4ac_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1b2aed40d_ScopeTree> _1b382c67a_newScope(void) {
	return jule::new_ptr<_1b2aed40d_ScopeTree>(_1b2aed40d_ScopeTree{._field_Parent=jule::Ptr<_1b2aed40d_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1b2aecc9d_Stmt>(nullptr), ._field_End=jule::Ptr<_1b2ac7eba_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1b382c9ee_isSt(jule::Ptr<_1b2ac7eba_Token> _149_current, jule::Ptr<_1b2ac7eba_Token> _1433_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_149_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_1433_prev))._field_Row < (*_149_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_149_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b382cd73_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _2026_tokens, jule::I64* _2052_i) {
	if ((((*(_2052_i)) > 1LL) && ((*((*(_2026_tokens))[((*(_2052_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1b2ac7eba_Token> _263_prev = (*(_2026_tokens))[((*(_2052_i)) - 1LL)];;
		return (((*(_263_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1b2ac8a15_IsBinOp((*_263_prev.alloc)._field_Id) && ((*_263_prev.alloc)._field_Row < (*((*(_2026_tokens))[(*(_2052_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1b382d23b_nextStPos(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _3315_tokens, jule::I64 _3340_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _346_braceN = 0LL;;
	jule::I64 _356_i = _3340_start;;
	for (; (_356_i < (*(_3315_tokens)).len()); (_356_i)++) {
		{
			jule::Bool _377_ok = false;;
			jule::Bool _387_terminated = false;;
			jule::Ptr<_1b2ac7eba_Token> _393_tok = (*(_3315_tokens))[_356_i];;
			{
				auto &_match_expr{ (*(_393_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b77811ce:;
					{
						if (((_346_braceN == 0LL) && (_356_i > _3340_start))) {
							if ((!(_1b382cd73_prevIsIncompleteExpr(_3315_tokens, &(_356_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b382c9ee_isSt(_393_tok, (*(_3315_tokens))[(_356_i - 1LL)]);
									_377_ok = __jule_assign_result.__jule_result_arg0;
									_387_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_377_ok) {
									goto _julec_label_1b7784d70;
								};
							};
						};
						(_346_braceN)++;
						goto _iter_next_1b777ec6b;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b7781421:;
					{
						(_346_braceN)--;
						if (((_346_braceN == 0LL) && ((_356_i + 1LL) < (*(_3315_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b382c9ee_isSt((*(_3315_tokens))[(_356_i + 1LL)], _393_tok);
								_377_ok = __jule_assign_result.__jule_result_arg0;
								_387_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_377_ok) {
								(_356_i)++;
								goto _julec_label_1b7784d70;
							};
						};
						goto _iter_next_1b777ec6b;
					}
				}
				_match_end_1b7781377:;
			};
			if ((_346_braceN != 0LL)) {
				goto _iter_next_1b777ec6b;
			};
			if ((_356_i > _3340_start)) {
				if (_1b382cd73_prevIsIncompleteExpr(_3315_tokens, &(_356_i))) {
					goto _iter_next_1b777ec6b;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b382c9ee_isSt(_393_tok, (*(_3315_tokens))[(_356_i - 1LL)]);
					_377_ok = __jule_assign_result.__jule_result_arg0;
					_387_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b382c9ee_isSt(_393_tok, _393_tok);
					_377_ok = __jule_assign_result.__jule_result_arg0;
					_387_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_377_ok))) {
				goto _iter_next_1b777ec6b;
			};
			_julec_label_1b7784d70:;
			if (_387_terminated) {
				(_356_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _356_i;
			__jule_func_result.__jule_result_arg1 = _387_terminated;
			return __jule_func_result;;
		}
	_iter_next_1b777ec6b:;
	}
	_iter_end_1b777ec6b:;;
	__jule_func_result.__jule_result_arg0 = _356_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1b2ac7eba_Token__jule_tuple_bool _1b382d5b0_skipSt(jule::I64* _9516_i, jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _9528_tokens) {
	__jule_tuple_sx_1b2ac7eba_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _962_start = (*(_9516_i));;
	jule::Bool _976_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b382d23b_nextStPos(&(_9528_tokens), _962_start);
		(*(_9516_i)) = __jule_assign_result.__jule_result_arg0;
		_976_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _996_stTokens = _9528_tokens.slice(_962_start, (*(_9516_i)));;
	if (_976_terminated) {
		if ((_996_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1b382d5b0_skipSt(_9516_i, _9528_tokens));
return __jule_func_result;;
		};
		(_996_stTokens).mut_slice(0LL, (_996_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _996_stTokens;
	__jule_func_result.__jule_result_arg1 = _976_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1b382d8e0_stmt>> _1b382dc97_splitStmts(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _11620_tokens) {
	jule::Slice<jule::Ptr<_1b382d8e0_stmt>> _1176_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b382d8e0_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b382d8e0_stmt>(nullptr); __jule_collection; });;
	jule::I64 _1186_pos = 0LL;;
	while ((_1186_pos < (*(_11620_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _1207_stmt;
			jule::Bool _12013_terminated;
			({
				__jule_tuple_sx_1b2ac7eba_Token__jule_tuple_bool __jule_assign_result = _1b382d5b0_skipSt(&(_1186_pos), (*(_11620_tokens)));
				_1207_stmt = __jule_assign_result.__jule_result_arg0;
				_12013_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1b382d8e0_stmt>> &__jule_push_dest = _1176_stmts; __jule_push_dest.push(jule::new_ptr<_1b382d8e0_stmt>(_1b382d8e0_stmt{._field_tokens=_1207_stmt, ._field_terminated=_12013_terminated})); };
		}
	_iter_next_1b7788add:;
	}
	_iter_end_1b7788add:;;
	return _1176_stmts;;
}



inline jule::Bool _1b38472dd_isTypeOp(jule::U64* _87114_id) {
	return ((((*(_87114_id)) == static_cast<jule::U64>(65LLU)) || ((*(_87114_id)) == static_cast<jule::U64>(54LLU))) || ((*(_87114_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1b38475eb_isTypeRange(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _87821_tokens) {
	jule::Bool _8796_op = false;;
	{
		auto expr = _87821_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b785eb70:;
		if (it != expr_end) {
			jule::I64 _8806_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> _8809_token = *it;
			{
				if (((*(_8809_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8796_op) {
						return true;;
					};
					jule::I64 _8858_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _8868_lTokens = (*(_87821_tokens)).slice(_8806_i);;
					{
						auto expr = &(_8868_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b7861534:;
						if (it != expr_end) {
							jule::Ptr<_1b2ac7eba_Token> _88711_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_88711_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1b7861cd7:;
										{
											(_8858_rangeN)++;
											goto _iter_next_1b7861534;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1b78621c2:;
										{
											(_8858_rangeN)--;
											goto _iter_next_1b7861534;
										}
									}
									_match_end_1b78620c3:;
								};
								if ((_8858_rangeN == 0LL)) {
									return _1b38472dd_isTypeOp(&((*(_88711_lToken))._field_Id));;
								};
							}
							_iter_next_1b7861534:;
							++it;
							goto _iter_begin_1b7861534;
						}
						_iter_end_1b7861534:;
					};
					return true;;
				};
				if ((!(_1b38472dd_isTypeOp(&((*_8809_token.alloc)._field_Id))))) {
					return false;;
				};
				_8796_op=true;
			}
			_iter_next_1b785eb70:;
			++it;
			_8806_i++;
			goto _iter_begin_1b785eb70;
		}
		_iter_end_1b785eb70:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _1b38478b5_getBlockExpr(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _91122_tokens) {
	jule::I64 _9126_braceN = 0LL;;
	jule::I64 _9136_skipToNextBraceClose = 0LL;;
	{
		auto expr = _91122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7860863:;
		if (it != expr_end) {
			jule::I64 _9146_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> _9149_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9149_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1b7864dc8:;
						{
							if (((((*(_91122_tokens)).len() - _9146_i) > 1LL) && ((*((*(_91122_tokens))[(_9146_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9136_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b7864e61:;
						{
							if (((_9126_braceN > 0LL) || (_9136_skipToNextBraceClose > 0LL))) {
								if ((_9136_skipToNextBraceClose > 0LL)) {
									(_9136_skipToNextBraceClose)--;
								};
								(_9126_braceN)++;
								goto _match_end_1b7864d0c;
							};
							return (*(_91122_tokens)).slice(0LL, _9146_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b7864ec7:;
						{
							(_9126_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b786503d:;
						{
							(_9126_braceN)--;
						}
					}
					_match_end_1b7864d0c:;
				};
			}
			_iter_next_1b7860863:;
			++it;
			_9146_i++;
			goto _iter_begin_1b7860863;
		}
		_iter_end_1b7860863:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1b2ac7eba_Token__jule_tuple_sx_1b2ac7eba_Token _1b3847c7d_splitDelim(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _94320_tokens, jule::U64 _94345_delim) {
	__jule_tuple_sx_1b2ac7eba_Token__jule_tuple_sx_1b2ac7eba_Token __jule_func_result;
	jule::I64 _9446_func = -1LL;;
	jule::I64 _9456_rangeN = 0LL;;
	jule::I64 _9466_i = 0LL;;
	for (; (_9466_i < (*(_94320_tokens)).len()); (_9466_i)++) {
		{
			jule::Ptr<_1b2ac7eba_Token> _9483_token = (*(_94320_tokens))[_9466_i];;
			{
				auto &_match_expr{ (*(_9483_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1b7869a26:;
					{
						_9446_func=_9456_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b7869a9d:;
					{
						(_9456_rangeN)++;
						goto _iter_next_1b7868272;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b7869b14:;
					{
						(_9456_rangeN)--;
						if ((_9446_func == _9456_rangeN)) {
							_9446_func=-1LL;
							if (((((*(_94320_tokens)).len() - _9466_i) > 1LL) && ((*((*(_94320_tokens))[(_9466_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9466_i)++;
								goto _iter_next_1b7868272;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1b7869b7a:;
					{
						(_9456_rangeN)--;
					}
				}
				_match_end_1b7869790:;
			};
			if ((((*(_9483_token))._field_Id == _94345_delim) && (_9456_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _9728_l = (*(_94320_tokens)).slice(0LL, _9466_i);;
				jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _9738_r = (*(_94320_tokens)).slice((_9466_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9728_l;
				__jule_func_result.__jule_result_arg1 = _9738_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1b7868272:;
	}
	_iter_end_1b7868272:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1b3848047_findLowestPrecOp(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _98222_tokens) {
	jule::U8 _9876_prec = 255LLU;;
	jule::I64 _9886_precPos = -1LL;;
	jule::I64 _9906_braceN = 0LL;;
	jule::Bool _9916_skipToNextBraceOpen = false;;
	{
		auto expr = _98222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b786ed17:;
		if (it != expr_end) {
			jule::I64 _9926_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> *_9929_token = it;
			{
				{
					auto &_match_expr{ (*((*(_9929_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b7870ab5:;
						{
							_9916_skipToNextBraceOpen=false;
							goto _case_begin_1b7870b4d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b7870b4d:;
						{
							(_9906_braceN)++;
							goto _iter_next_1b786ed17;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1b7870bb4:;
						{
							(_9906_braceN)--;
							goto _iter_next_1b786ed17;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1b7870c2a:;
						{
							_9916_skipToNextBraceOpen=true;
							goto _iter_next_1b786ed17;
						}
					}
					_match_end_1b78709e9:;
				};
				{
					
					if (_9916_skipToNextBraceOpen) {
						_case_begin_1b7872479:;
						{
							goto _iter_next_1b786ed17;
						}
					}
					else if ((_9926_i == 0LL)) {
						_case_begin_1b78724e0:;
						{
							goto _iter_next_1b786ed17;
						}
					}
					else if ((_9906_braceN > 0LL)) {
						_case_begin_1b7872556:;
						{
							goto _iter_next_1b786ed17;
						}
					}
					else if ((!(_1b2ac8a15_IsBinOp((*((*(_9929_token))))._field_Id)))) {
						_case_begin_1b78725bc:;
						{
							goto _iter_next_1b786ed17;
						}
					}
					_match_end_1b7872303:;
				};
				jule::Ptr<_1b2ac7eba_Token> _10213_left = (*(_98222_tokens))[(_9926_i - 1LL)];;
				if ((_1b2ac8707_IsUnaryOp((*(_10213_left))._field_Id) || ((*_10213_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1b786ed17;
				};
				if (((_9926_i > 1LL) && ((*_10213_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1b2ac7eba_Token> _10294_lleft = (*(_98222_tokens))[(_9926_i - 2LL)];;
					if (((*(_10294_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_9929_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_9929_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1b786ed17;
						};
					};
				};
				jule::U8 _10383_p = _1b2ac8372_Prec((*(_9929_token)));;
				if (((_10383_p != 0LLU) && (_10383_p <= _9876_prec))) {
					_9876_prec=_10383_p;
					_9886_precPos=_9926_i;
				};
			}
			_iter_next_1b786ed17:;
			++it;
			_9926_i++;
			goto _iter_begin_1b786ed17;
		}
		_iter_end_1b786ed17:;
	};
	return _9886_precPos;;
}



inline jule::Ptr<_1b2ae403b_IdentExpr> _1b3848311_buildIdentExpr(jule::Ptr<_1b2ac7eba_Token>* _104724_token) {
	return jule::new_ptr<_1b2ae403b_IdentExpr>(_1b2ae403b_IdentExpr{._field_Token=(*(_104724_token)), ._field_Ident=(*((*(_104724_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1b2ac7eba_Token__jule_tuple_int _1b38485ca_getRangeExprTokens(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _105528_tokens) {
	__jule_tuple_sx_1b2ac7eba_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10566_rangeN = 0LL;;
	jule::I64 _10576_i = ((*(_105528_tokens)).len() - 1LL);;
	for (; (_10576_i >= 0LL); (_10576_i)--) {
		{
			jule::Ptr<_1b2ac7eba_Token> _10593_tok = (*(_105528_tokens))[_10576_i];;
			{
				auto &_match_expr{ (*(_10593_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b787941a:;
					{
						(_10566_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b787974a:;
					{
						(_10566_rangeN)--;
					}
				}
				_match_end_1b7879492:;
			};
			if ((_10566_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105528_tokens)).slice(0LL, _10576_i);
				__jule_func_result.__jule_result_arg1 = _10566_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1b78788e2:;
	}
	_iter_end_1b78788e2:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10566_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1b38489a4_isAnonFnHead(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _107818_tokens) {
	{
		auto &_match_expr{ (*((*(_107818_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b787b1ec:;
			{
				if ((((*(_107818_tokens)).len() == 1LL) || ((*((*(_107818_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1b787b62b;
				};
				goto _case_begin_1b787b76e;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b787b76e:;
			{
				if (((*((*(_107818_tokens))[((*(_107818_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1b787b62b;
				};
				return true;;
			}
		}
		_match_end_1b787b62b:;
	};
	return false;;
}



inline jule::Bool _1b3849653_checkAssignTokens(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1b2acca4c_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7927584:;
		if (it != expr_end) {
			jule::Ptr<_1b2ac7eba_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b7927c49:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b79280ce:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1b7927ed0:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1b792929a:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1b7929333:;
						{
							goto _iter_next_1b7927584;
						}
					}
					else if (_1b2acd0d0_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1b7929399:;
						{
							return true;;
						}
					}
					_match_end_1b7929201:;
				};
			}
			_iter_next_1b7927584:;
			++it;
			goto _iter_begin_1b7927584;
		}
		_iter_end_1b7927584:;
	};
	return false;;
}



inline _20daa5e91_Log _1b384a621_makeErr(jule::I64 _1212_row, jule::I64 _1222_col, jule::Ptr<_1b2acd872_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args) {
	return _20daa5e91_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_1212_row, ._field_Column=_1222_col, ._field_Path=(*((*(_1233_f))))._field_Path, ._field_Text=_20daa6403_Logf(_1253_fmt, _1273_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _1b384ab2c_range(jule::I64* _3015_i, jule::U64 _3023_open, jule::U64 _3040_close, jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _3063_tokens) {
	if (((*(_3015_i)) >= (*(_3063_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1b2ac7eba_Token> _342_tok = (*(_3063_tokens))[(*(_3015_i))];;
	if (((*(_342_tok))._field_Id != _3023_open)) {
		return nullptr;;
	};
	((*(_3015_i)))++;
	jule::I64 _396_rangeN = 1LL;;
	jule::I64 _402_start = (*(_3015_i));;
	for (; ((_396_rangeN != 0LL) && ((*(_3015_i)) < (*(_3063_tokens)).len())); ((*(_3015_i)))++) {
		{
			jule::Ptr<_1b2ac7eba_Token> _423_token = (*(_3063_tokens))[(*(_3015_i))];;
			{
				auto &_match_expr{ (*(_423_token))._field_Id };
				
				if (_match_expr == _3023_open) {
					_case_begin_1b792e38d:;
					{
						(_396_rangeN)++;
					}
				}
				else if (_match_expr == _3040_close) {
					_case_begin_1b792e701:;
					{
						(_396_rangeN)--;
					}
				}
				_match_end_1b792e668:;
			};
		}
	_iter_next_1b792be90:;
	}
	_iter_end_1b792be90:;;
	return (*(_3063_tokens)).slice(_402_start, ((*(_3015_i)) - 1LL));;
}



inline __jule_tuple_sx_1b2ac7eba_Token__jule_tuple_sx_1b2ac7eba_Token _1b384ade6_rangeLast(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _6019_tokens) {
	__jule_tuple_sx_1b2ac7eba_Token__jule_tuple_sx_1b2ac7eba_Token __jule_func_result;
	if (((*(_6019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _642_first = (*((*(_6019_tokens))[((*(_6019_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_642_first != static_cast<jule::U64>(73LLU)) && (_642_first != static_cast<jule::U64>(76LLU))) && (_642_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _706_braceN = 0LL;;
	jule::I64 _716_i = ((*(_6019_tokens)).len() - 1LL);;
	for (; (_716_i >= 0LL); (_716_i)--) {
		{
			jule::Ptr<_1b2ac7eba_Token> _733_token = (*(_6019_tokens))[_716_i];;
			{
				auto &_match_expr{ (*(_733_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b793356d:;
					{
						(_706_braceN)++;
						goto _iter_next_1b79328ad;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b793389d:;
					{
						(_706_braceN)--;
					}
				}
				_match_end_1b79335e5:;
			};
			if ((_706_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_6019_tokens)).slice(0LL, _716_i);
				__jule_func_result.__jule_result_arg1 = (*(_6019_tokens)).slice(_716_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1b79328ad:;
	}
	_iter_end_1b79328ad:;;
	__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log _1b384b39c_parts(jule::Slice<jule::Ptr<_1b2ac7eba_Token>>* _9815_tokens, jule::U64 _9840_id, jule::Bool _9855_exprMust) {
	__jule_tuple_ssx_1b2ac7eba_Token__jule_tuple_s_20daa5e91_Log __jule_func_result;
	if (((*(_9815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1026_rangeN = 0LL;;
	jule::I64 _1036_last = 0LL;;
	{
		auto expr = _9815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b793673b:;
		if (it != expr_end) {
			jule::I64 _1046_i = it - expr->begin();
			jule::Ptr<_1b2ac7eba_Token> _1049_token = *it;
			{
				{
					auto &_match_expr{ (*(_1049_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b7937770:;
						{
							(_1026_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b79377e7:;
						{
							(_1026_rangeN)--;
						}
					}
					else if (_match_expr == _9840_id) {
						_case_begin_1b793785d:;
						{
							if ((_1026_rangeN > 0LL)) {
								goto _iter_next_1b793673b;
							};
							if ((_9855_exprMust && ((_1046_i - _1036_last) <= 0LL))) {
								_20daa5e91_Log _1155_err = _1b384a621_makeErr((*(_1049_token))._field_Row, (*_1049_token.alloc)._field_Column, &((*_1049_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_20daa5e91_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1155_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last, _1046_i)); };
							_1036_last=(_1046_i + 1LL);
						}
					}
					_match_end_1b79376a4:;
				};
			}
			_iter_next_1b793673b:;
			++it;
			_1046_i++;
			goto _iter_begin_1b793673b;
		}
		_iter_end_1b793673b:;
	};
	if ((_1036_last < (*(_9815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1b2ac7eba_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1b384b633_getCloseOfBrace(jule::U64 _12820_left) {
	{
		auto &_match_expr{ _12820_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1b793ada0:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b793ae49:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b793aec1:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1b7937176:;
			{
				return _12820_left;;
			}
		}
		_match_end_1b7937253:;
	};
}



inline _20daa5e91_Log _1b384ba62_compilerErr(jule::Ptr<_1b2ac7eba_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args) {
	return _20daa5e91_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_14117_token))))._field_Row, ._field_Column=(*((*(_14117_token))))._field_Column, ._field_Path=(*((*((*(_14117_token))))._field_File))._field_Path, ._field_Text=_20daa6403_Logf((*(_14140_fmt)), _14160_args), ._field_Line=_1b2aceb81_GetRow((*((*(_14117_token))))._field_File, (*((*(_14117_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1b384be08_pushSuggestion(_20daa5e91_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args) {
	(*(_15230_log))._field_Suggestion=_20daa6403_Logf(_15248_fmt, _15268_args);
}



inline jule::Ptr<_1b2add3dc_TypeDecl> _1b385cd81_buildVoidType(void) {
	return jule::new_ptr<_1b2add3dc_TypeDecl>(_1b2add3dc_TypeDecl{._field_Token=jule::Ptr<_1b2ac7eba_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1b303a4a4_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1b7ae7798:;
			{
				__jule_func_result.__jule_result_arg0=_20daa91b4_IsWindows(_20dbba902_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1b7ae780e:;
			{
				__jule_func_result.__jule_result_arg0=_20daa94c2_IsDarwin(_20dbba902_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1b7ae7479:;
			{
				__jule_func_result.__jule_result_arg0=_20daa978b_IsLinux(_20dbba902_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1b7ae74e0:;
			{
				__jule_func_result.__jule_result_arg0=_20daaa3e6_IsUnix(_20dbba902_Os);
			}
		}
		else {
			_case_begin_1b7ae6dd5:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b7ae7358:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1b303547c_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1b7ae9d0b:;
			{
				__jule_func_result.__jule_result_arg0=_20daa9acc_IsI386(_20dbbabaa_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1b7ae9d72:;
			{
				__jule_func_result.__jule_result_arg0=_20daa9d63_IsAmd64(_20dbbabaa_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1b7ae99dc:;
			{
				__jule_func_result.__jule_result_arg0=_20daaa12c_IsArm64(_20dbbabaa_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1b7ae9a53:;
			{
				__jule_func_result.__jule_result_arg0=_20daaaa12_Is64Bit(_20dbbabaa_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1b7ae9ab9:;
			{
				__jule_func_result.__jule_result_arg0=_20daaa7c0_Is32Bit(_20dbbabaa_Arch);
			}
		}
		else {
			_case_begin_1b7ae9448:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b7ae98bb:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b3035658_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_227d34887_Base(_5029_p);
	jule::I64 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _227d34304_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I64 _646_i = _20d8ba36b_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b303a4a4_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b303547c_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_20d8ba36b_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b303a4a4_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b303547c_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b303547c_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b303a4a4_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b303a4a4_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1b3050be5_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_20dbba902_Os); };
	if (_20daaa3e6_IsUnix(_20dbba902_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1b3050e6a_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_20dbbabaa_Arch); };
	if (_20daaaa12_Is64Bit(_20dbbabaa_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_20daaa7c0_Is32Bit(_20dbbabaa_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1b3051256_initVars(jule::Slice<jule::Str>* _5518_vars, _1b30508c6_CompileInfo* _5532_info) {
	_1b3050be5_setOsVars(_5518_vars);
	_1b3050e6a_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1b7b05ca1:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1b7b05740:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1b7b056c9:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1b7b057d9:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1b7b06c91:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1b7b06d07:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1b7b06c08:;
	};
}



inline jule::Slice<jule::U8> _1b3861d30_readBuff(jule::Str _1713_path) {
	return ({
		auto except = static__20c64b20d_Read(_1713_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(_1b4bdc396_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_20dbb98ac_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _20daa5e91_Log _1b386213d_flatCompilerErr(jule::Str _2820_text) {
	return _20daa5e91_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_2820_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1b2bda9b2_Fn> _1b2ea0d65_RuntimeFindFn(jule::Ptr<_1b2cd4e1e_ImportInfo>* _1823_runtime, jule::Str _1851_ident) {
	;
	jule::Ptr<_1b2bda9b2_Fn> _206_f = _1b2cd652a_FindFn((*(_1823_runtime)).ptr(), _1851_ident, false);;
	if ((_206_f == nullptr)) {
		jule::outln(_1b7b472ba_toStr(_1851_ident));
		__jule_panic_s(jule::Str::lit("obj: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 108) + jule::Str("\nlocation: julec/obj/runtime.jule:23:3"));;
	};
	return _206_f;;
}



inline jule::Ptr<_1b2b0db6b_Struct> _1b2ea145e_RuntimeFindStruct(jule::Ptr<_1b2cd4e1e_ImportInfo>* _3327_runtime, jule::Str _3355_ident) {
	;
	jule::Ptr<_1b2b0db6b_Struct> _356_f = _1b2cd612e_FindStruct((*(_3327_runtime)).ptr(), _3355_ident, false);;
	if ((_356_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 106) + jule::Str("\nlocation: julec/obj/runtime.jule:37:3"));;
	};
	return _356_f;;
}



inline void _1b3866928_pushPasses(jule::Ptr<_1b2cd7691_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes) {
	{
		auto expr = &((*((*(_12320_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b49e5a:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _12414_f = *it;
			{
				_julec_label_1b7b49443:;
				{
					auto expr = &((*(_12414_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7b49872:;
					if (it != expr_end) {
						_1b2cc4408_Pass _12610_pass = *it;
						{
							if ((_12610_pass._field_Text).empty()) {
								goto _iter_next_1b7b49872;
							};
							{
								auto expr = _12344_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b7b4baa5:;
								if (it != expr_end) {
									jule::Str _13011_cpass = *it;
									{
										if ((_13011_cpass == _12610_pass._field_Text)) {
											goto _iter_next_1b7b49872;
										};
									}
									_iter_next_1b7b4baa5:;
									++it;
									goto _iter_begin_1b7b4baa5;
								}
								_iter_end_1b7b4baa5:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12344_passes)); __jule_push_dest.push(_12610_pass._field_Text); };
						}
						_iter_next_1b7b49872:;
						++it;
						goto _iter_begin_1b7b49872;
					}
					_iter_end_1b7b49872:;
				};
			}
			_iter_next_1b7b49e5a:;
			++it;
			goto _iter_begin_1b7b49e5a;
		}
		_iter_end_1b7b49e5a:;
	};
}



inline jule::Slice<jule::Str> _1b3866ce1_getAllUniquePasses(jule::Ptr<_1b2cd7691_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1b2cd4e1e_ImportInfo>> _14053_uses) {
	jule::Slice<jule::Str> _14110_passes = nullptr;;
	_1b3866928_pushPasses(_14028_pkg, &(_14110_passes));
	{
		auto expr = &(_14053_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b4ca0c:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _14414_u = *it;
			{
				if ((!((*(_14414_u))._field_Binded))) {
					_1b3866928_pushPasses(&((*_14414_u.alloc)._field_Package), &(_14110_passes));
				};
			}
			_iter_next_1b7b4ca0c:;
			++it;
			goto _iter_begin_1b7b4ca0c;
		}
		_iter_end_1b7b4ca0c:;
	};
	return _14110_passes;;
}



inline _1b30508c6_CompileInfo _1b3867000_buildCompileInfo(void) {
	_1b30508c6_CompileInfo _1546_info = _1b30508c6_CompileInfo{._field_Prod=_20dbc2ed1_Production, ._field_Test=_20dbc261d_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _20dbc0770_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1b7b4dd2c:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1b7b4de70:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1b7b4de09:;
	};
	{
		auto &_match_expr{ _20dbc1d7b_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1b7b4e008:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1b7b4ec40:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1b7b4e4ae:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1b7b5003c:;
	};
	return _1546_info;;
}



inline void _1b38672a8_pushRuntimeToAST(jule::Ptr<_1b2adb52d_AST>* _17926_f) {
	jule::Ptr<_1b2b0625c_UseDecl> _1806_decl = jule::new_ptr<_1b2b0625c_UseDecl>(_1b2b0625c_UseDecl{._field_Token=nullptr, ._field_Path=jule::new_ptr<_1b2ac7eba_Token>(_1b2ac7eba_Token{._field_File=jule::Ptr<_1b2acd872_Fileset>(nullptr), ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str::lit("\"std/runtime\"", 13), ._field_Id=static_cast<jule::U64>(4LLU)}), ._field_Alias=nullptr, ._field_Binded=false});;
	{ jule::Slice<jule::Ptr<_1b2b0625c_UseDecl>> &__jule_push_dest = (*((*(_17926_f))))._field_UseDecls; __jule_push_dest.push(_1806_decl); };
	if (((*((*(_17926_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17926_f))))._field_UseDecls[((*((*(_17926_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17926_f))))._field_UseDecls[0LL];
		(*((*(_17926_f))))._field_UseDecls[0LL]=_1806_decl;
	};
}



inline void _1b386796d_IterPackages(jule::Ptr<_1b3865075_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1b2cd7691_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b677b3:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1b7b677b3:;
			++it;
			goto _iter_begin_1b7b677b3;
		}
		_iter_end_1b7b677b3:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1b3867bd2_IterFiles(jule::Ptr<_1b2cd7691_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1b2be1cb5_SymTab>*> _1640_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b70b62:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _1714_file = *it;
			{
				_1640_f(&(_1714_file));
			}
			_iter_next_1b7b70b62:;
			++it;
			goto _iter_begin_1b7b70b62;
		}
		_iter_end_1b7b70b62:;
	};
}



inline void _1b3868078_iterTraitInheritMethods(jule::Ptr<_1b2be61c6_Trait>* _2233_base, jule::Ptr<_1b2be61c6_Trait>* _2258_t, jule::Fn<void,jule::Ptr<_1b2bda9b2_Fn>*> _2275_f) {
	_1b3868496_iterTraitInheritMethods1(_2233_base, _2258_t, _2275_f);
	{
		auto expr = &((*((*(_2258_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b71ca6:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _2414_m = *it;
			{
				if ((!(_1b386d237_ContainsTraitMethod(_2233_base, &((*(_2414_m))._field_Ident))))) {
					_2275_f(&(_2414_m));
				};
			}
			_iter_next_1b7b71ca6:;
			++it;
			goto _iter_begin_1b7b71ca6;
		}
		_iter_end_1b7b71ca6:;
	};
}



inline void _1b3868496_iterTraitInheritMethods1(jule::Ptr<_1b2be61c6_Trait>* _3134_base, jule::Ptr<_1b2be61c6_Trait>* _3159_t, jule::Fn<void,jule::Ptr<_1b2bda9b2_Fn>*> _3176_f) {
	{
		auto expr = &((*((*(_3159_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b7314d:;
		if (it != expr_end) {
			jule::Ptr<_1b2db8d38_TypeSymbol> _3214_inh = *it;
			{
				jule::Ptr<_1b2be61c6_Trait> _337_t2 = _1b2db55d7_Trait((*(_3214_inh))._field_Kind.ptr());;
				_1b3868078_iterTraitInheritMethods(_3134_base, &(_337_t2), _3176_f);
			}
			_iter_next_1b7b7314d:;
			++it;
			goto _iter_begin_1b7b7314d;
		}
		_iter_end_1b7b7314d:;
	};
}



inline void _1b386874e_IterTraitMethods(jule::Ptr<_1b2be61c6_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1b2bda9b2_Fn>*> _3943_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b745e4:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _4014_m = *it;
			{
				_3943_f(&(_4014_m));
			}
			_iter_next_1b7b745e4:;
			++it;
			goto _iter_begin_1b7b745e4;
		}
		_iter_end_1b7b745e4:;
	};
	_1b3868496_iterTraitInheritMethods1(_3926_t, _3926_t, _3943_f);
}



inline jule::Bool _1b386a8e9_IsForwarded(jule::Ptr<_1b2ca4592_Scope>* _1217_s) {
	jule::Any _132_last = (*((*(_1217_s))))._field_Stmts[((*((*(_1217_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _132_last };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b7b9e09c:;
			{
				{
					auto &_match_expr{ (*(_132_last.cast_ptr<_1b2d7dc21_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1b7b9e2de:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b7b9ee5a:;
						{
							return false;;
						}
					}
					_match_end_1b7b9ede4:;
				};
			}
		}
		else {
			_case_begin_1b7b9e223:;
			{
				return true;;
			}
		}
		_match_end_1b7b9e1ac:;
	};
}



inline jule::Bool _1b386aac5_IsExprComesFromBind(jule::Ptr<_1b2d7dc21_Data>* _2825_d) {
	{
		auto &_match_expr{ (*((*(_2825_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b7ba09a5:;
			{
				return (*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1b2d26ca7_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b7ba0bb4:;
			{
				return (*((*((*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1b2bd3191_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1b7b9ea1a:;
			{
				return false;;
			}
		}
		_match_end_1b7b9e9a4:;
	};
}



inline jule::Bool _1b386ad8e_IsAny(jule::Ptr<_1b2db1627_TypeKind>* _4015_t) {
	if ((_1b2db4817_TypeEnum((*(_4015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1b2db9740_Prim> _442_prim = _1b2db3ccd_Prim((*(_4015_t)).ptr());;
	return ((_442_prim != nullptr) && _1b2dbce91_IsAny(_442_prim));;
}



inline jule::Bool _1b386b1d0_IsClosure(jule::Ptr<_1b2bd1436_AnonFnExprModel>* _4915_m) {
	return ((*((*(_4915_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1b386b466_IsOpMethod(jule::Ptr<_1b2bda9b2_Fn>* _5216_m) {
	if ((((*((*(_5216_m))))._field_Generics.len() > 0LL) || ((*((*(_5216_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _562_mi = (*((*(_5216_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1b386b7da_IsTraitMethod(jule::Ptr<_1b2b119c6_StructIns>* _6823_owner, jule::Ptr<_1b2bdda70_FnIns>* _6849_f) {
	{
		auto expr = &((*((*((*(_6823_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ba648e:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> _6914_t = *it;
			{
				if ((_1b2be6da8_FindMethod(_6914_t.ptr(), (*((*((*(_6849_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1b7ba648e:;
			++it;
			goto _iter_begin_1b7ba648e;
		}
		_iter_end_1b7ba648e:;
	};
	return false;;
}



inline jule::Bool _1b386bb5e_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p) {
	return _20d8b7665_HasPrefix(_8217_f, _227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _20dbb9d85_PathStdlib; (*it++) = _8225_p; __jule_collection; })));;
}



inline jule::Ptr<_1b2adc809_Directive> _1b386c9ea_FindDirective(jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bb2b4e:;
		if (it != expr_end) {
			jule::Ptr<_1b2adc809_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1b7bb2b4e:;
			++it;
			goto _iter_begin_1b7bb2b4e;
		}
		_iter_end_1b7bb2b4e:;
	};
	return nullptr;;
}



inline jule::Bool _1b386cdb3_HasDirective(jule::Slice<jule::Ptr<_1b2adc809_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1b386c9ea_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::Bool _1b386d237_ContainsTraitMethod(jule::Ptr<_1b2be61c6_Trait>* _2629_t, jule::Str* _2647_ident) {
	{
		auto expr = &((*((*(_2629_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bb4788:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _279_m = *it;
			{
				if (((*(_279_m))._field_Ident == (*(_2647_ident)))) {
					return true;;
				};
			}
			_iter_next_1b7bb4788:;
			++it;
			goto _iter_begin_1b7bb4788;
		}
		_iter_end_1b7bb4788:;
	};
	return false;;
}



inline jule::I64 _1b386d8ec_FindTraitTypeOffsetS(jule::Ptr<_1b2be61c6_Trait> _3925_t, jule::Ptr<_1b2b119c6_StructIns> _3946_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bb649e:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> *_449_si = it;
			{
				if (((*(_3946_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b7bb7390:;
						if (it != expr_end) {
							jule::Ptr<_1b2b119c6_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3946_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1b7bb7390:;
							++it;
							goto _iter_begin_1b7bb7390;
						}
						_iter_end_1b7bb7390:;
					};
					goto _iter_end_1b7bb649e;
				} else {
					_436_i+=(*((*(_449_si))))._field_Instances.len();
				};
			}
			_iter_next_1b7bb649e:;
			++it;
			goto _iter_begin_1b7bb649e;
		}
		_iter_end_1b7bb649e:;
	};
	return -1LL;;
}



inline jule::I64 _1b386dc71_FindTraitTypeOffset(jule::Ptr<_1b2be61c6_Trait> _6224_t, jule::Ptr<_1b2db1627_TypeKind> _6245_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1b2b119c6_StructIns> _6610_s = nullptr;;
	if ((_1b2db4064_Sptr(_6245_k.ptr()) != nullptr)) {
		_6245_k=(*(_1b2db4064_Sptr(_6245_k)))._field_Elem;
	};
	_6610_s=_1b2db5351_Struct(_6245_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1b386d8ec_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1b2bdda70_FnIns> _1b386e1a0_FindOperator(jule::Ptr<_1b2b119c6_StructIns>* _7822_s, jule::U64 _7843_op, jule::Bool _7858_unary) {
	{
		auto &_match_expr{ _7843_op };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b7bbad88:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b7bbab8a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b7bbac01:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1b7bbadee:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b7bbae76:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b7bbaeed:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b7bbb11e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b7bbb185:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b7bbb1eb:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b7bbb262:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b7bbb2c8:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b7bbb350:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b7bbb3c7:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1b7bbb44e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b7bbb4c6:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b7bbb54d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1b7bbb5c5:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b7bbb64c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1b7bbb6c4:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b7bbb74b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b7bbb7c3:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b7bbb84a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1b7bbb8c2:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1b7bbb949:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1b7bbb9c1:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1b7bba7c2:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7bba904:;
	};
}



inline jule::Ptr<_1b2bdda70_FnIns> _1b386e524_FindFnGenericInstance(jule::Ptr<_1b2bda9b2_Fn>* _14731_f, jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _14745_generics) {
	_julec_label_1b7bc5579:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bc8417:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdda70_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7bc8d1e:;
					if (it != expr_end) {
						jule::I64 _1507_i = it - expr->begin();
						{
							if ((!(_1b2db1d64_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Kind, _14745_generics[_1507_i])))) {
								goto _iter_next_1b7bc8417;
							};
						}
						_iter_next_1b7bc8d1e:;
						++it;
						_1507_i++;
						goto _iter_begin_1b7bc8d1e;
					}
					_iter_end_1b7bc8d1e:;
				};
				return _14914_ins;;
			}
			_iter_next_1b7bc8417:;
			++it;
			goto _iter_begin_1b7bc8417;
		}
		_iter_end_1b7bc8417:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_1b2b119c6_StructIns> _1b386e9a8_FindStructGenericInstance(jule::Ptr<_1b2b0db6b_Struct>* _16335_s, jule::Slice<jule::Ptr<_1b2db1627_TypeKind>> _16353_generics) {
	_julec_label_1b7bc9292:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bca518:;
		if (it != expr_end) {
			jule::Ptr<_1b2b119c6_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7bcae20:;
					if (it != expr_end) {
						jule::I64 _1667_i = it - expr->begin();
						{
							if ((!(_1b2db1d64_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Kind, _16353_generics[_1667_i])))) {
								goto _iter_next_1b7bca518;
							};
						}
						_iter_next_1b7bcae20:;
						++it;
						_1667_i++;
						goto _iter_begin_1b7bcae20;
					}
					_iter_end_1b7bcae20:;
				};
				return _16514_ins;;
			}
			_iter_next_1b7bca518:;
			++it;
			goto _iter_begin_1b7bca518;
		}
		_iter_end_1b7bca518:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Bool _1b7b656b2_isOrdered(jule::Ptr<_1b2d26ca7_Var>* _1418_t, jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _1425_s) {
	_julec_label_1b7b67ae3:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b68044:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1b7b6884c:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1b7b68044;
							};
						}
					}
					_match_end_1b7b687c5:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7b69034:;
					if (it != expr_end) {
						jule::Ptr<_1b2d26ca7_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1b7b68044;
							};
						}
						_iter_next_1b7b69034:;
						++it;
						goto _iter_begin_1b7b69034;
					}
					_iter_end_1b7b69034:;
				};
				return false;;
			}
			_iter_next_1b7b68044:;
			++it;
			goto _iter_begin_1b7b68044;
		}
		_iter_end_1b7b68044:;
	};
	return true;;
}

inline jule::Bool _1b7b6b432_isOrdered(jule::Ptr<_1b2b0db6b_Struct>* _1418_t, jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _1425_s) {
	_julec_label_1b7b6d81e:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b6dc70:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7b6e38b:;
					if (it != expr_end) {
						jule::Ptr<_1b2b0db6b_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1b7b6dc70;
							};
						}
						_iter_next_1b7b6e38b:;
						++it;
						goto _iter_begin_1b7b6e38b;
					}
					_iter_end_1b7b6e38b:;
				};
				return false;;
			}
			_iter_next_1b7b6dc70:;
			++it;
			goto _iter_begin_1b7b6dc70;
		}
		_iter_end_1b7b6dc70:;
	};
	return true;;
}



inline void _1b7b62cdb_order(jule::Slice<jule::Ptr<_1b2d26ca7_Var>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1b7b632a3:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1b7b64040:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1b2d26ca7_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1b7b6522d:;
				if (it != expr_end) {
					jule::Ptr<_1b2d26ca7_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1b7b645e5;
						};
					}
					_iter_next_1b7b6522d:;
					++it;
					goto _iter_begin_1b7b6522d;
				}
				_iter_end_1b7b6522d:;
			};
			if (_1b7b656b2_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1b7b645e5:;
	}
	_iter_end_1b7b645e5:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1b7b632a3;
	};
}

inline void _1b7b638be_order(jule::Slice<jule::Ptr<_1b2b0db6b_Struct>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1b7b64859:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1b7b68594:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1b2b0db6b_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1b7b6ae9d:;
				if (it != expr_end) {
					jule::Ptr<_1b2b0db6b_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1b7b6a365;
						};
					}
					_iter_next_1b7b6ae9d:;
					++it;
					goto _iter_begin_1b7b6ae9d;
				}
				_iter_end_1b7b6ae9d:;
			};
			if (_1b7b6b432_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1b7b6a365:;
	}
	_iter_end_1b7b6a365:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1b7b64859;
	};
}



inline void _1b482e1b4_EliminateDefines(jule::Ptr<_1b3865075_IR>* _39126_ir) {
	jule::Ptr<_1b482acc6_ObjectDeadCode> _3926_ocd = static__1b482b348_new(_39126_ir);;
	_1b482de0b_elimanate(_3926_ocd);
}



inline void _1b4833075_eliminateDeadCodeOfScope(jule::Ptr<_1b2ca4592_Scope> _21833_s) {
	jule::Slice<jule::Ptr<_1b2ca70de_Label>> _2192_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ca70de_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2ca70de_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1b2ca774e_GotoSt>> _2202_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2ca774e_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2ca774e_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1b482ed41_scopeDeadCode> _2216_sdc = jule::new_ptr<_1b482ed41_scopeDeadCode>(_1b482ed41_scopeDeadCode{._field_parent=jule::Ptr<_1b482ed41_scopeDeadCode>(nullptr), ._field_s=_21833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1b2ca70de_Label>>>)((&(_2192_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1b2ca774e_GotoSt>>>)((&(_2202_gotos)))), ._field_except=false});;
	{
		_1b4832c78_optimizeStmts(_2216_sdc);
	};
}



inline void _1b48332ea_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1b2bda9b2_Fn>>* _23033_funcs) {
	{
		auto expr = _23033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c5cb0b:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _23114_func = *it;
			{
				{
					auto expr = &((*(_23114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7c605ae:;
					if (it != expr_end) {
						jule::Ptr<_1b2bdda70_FnIns> _23215_ins = *it;
						{
							_1b4833075_eliminateDeadCodeOfScope((*(_23215_ins))._field_Scope);
						}
						_iter_next_1b7c605ae:;
						++it;
						goto _iter_begin_1b7c605ae;
					}
					_iter_end_1b7c605ae:;
				};
			}
			_iter_next_1b7c5cb0b:;
			++it;
			goto _iter_begin_1b7c5cb0b;
		}
		_iter_end_1b7c5cb0b:;
	};
}



inline void _1b483352b_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1b2b0db6b_Struct>>* _23937_structs) {
	{
		auto expr = _23937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c60526:;
		if (it != expr_end) {
			jule::Ptr<_1b2b0db6b_Struct> _24014_s = *it;
			{
				{
					auto expr = &((*(_24014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7c616c0:;
					if (it != expr_end) {
						jule::Ptr<_1b2b119c6_StructIns> _24115_ins = *it;
						{
							_1b48332ea_eliminateScopeFunctions(&((*(_24115_ins))._field_Methods));
						}
						_iter_next_1b7c616c0:;
						++it;
						goto _iter_begin_1b7c616c0;
					}
					_iter_end_1b7c616c0:;
				};
			}
			_iter_next_1b7c60526:;
			++it;
			goto _iter_begin_1b7c60526;
		}
		_iter_end_1b7c60526:;
	};
}



inline void _1b48337d4_eliminateFunctionsScopePackage(jule::Ptr<_1b2cd7691_Package>* _24740_pkg) {
	{
		auto expr = &((*((*(_24740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c6247e:;
		if (it != expr_end) {
			jule::Ptr<_1b2be1cb5_SymTab> _24814_f = *it;
			{
				_1b48332ea_eliminateScopeFunctions(&((*(_24814_f))._field_Funcs));
				_1b483352b_eliminateScopeStructMethods(&((*_24814_f.alloc)._field_Structs));
			}
			_iter_next_1b7c6247e:;
			++it;
			goto _iter_begin_1b7c6247e;
		}
		_iter_end_1b7c6247e:;
	};
}



inline void _1b48339d2_eliminateScopePackage(jule::Ptr<_1b2cd7691_Package>* _25431_pkg) {
	_1b48337d4_eliminateFunctionsScopePackage(_25431_pkg);
}



inline void _1b4833c13_EliminateScopes(jule::Ptr<_1b3865075_IR>* _25925_ir) {
	jule::I64 _2606_i = ((*((*(_25925_ir))))._field_Used.len() - 1LL);;
	for (; (_2606_i >= 0LL); (_2606_i)--) {
		{
			jule::Ptr<_1b2cd4e1e_ImportInfo> _2627_u = (*((*(_25925_ir))))._field_Used[_2606_i];;
			if ((!((*(_2627_u))._field_Binded))) {
				_1b48339d2_eliminateScopePackage(&((*_2627_u.alloc)._field_Package));
			};
		}
	_iter_next_1b7c63b89:;
	}
	_iter_end_1b7c63b89:;;
	_1b48339d2_eliminateScopePackage(&((*((*(_25925_ir))))._field_Main));
}



inline jule::Uintptr _1b46ce493_typeData(jule::Any* _914_m) {
	return ((jule::Uintptr)(((*(_914_m))).type));;
}



inline jule::Bool _1b46c33ee_equalConst(jule::Ptr<_1b2b6c23a_Const> _1315_l, jule::Ptr<_1b2b6c23a_Const> _1336_r) {
	{
		
		if (_1b2bc5c88_IsI64(_1315_l.ptr())) {
			_case_begin_1b7cc6317:;
			{
				return (_1b2bc5c88_IsI64(_1336_r.ptr()) && (_1b2bc368c_ReadI64(_1315_l) == _1b2bc368c_ReadI64(_1336_r)));;
			}
		}
		else if (_1b2bc601e_IsU64(_1315_l.ptr())) {
			_case_begin_1b7cc638e:;
			{
				return (_1b2bc601e_IsU64(_1336_r.ptr()) && (_1b2bc3923_ReadU64(_1315_l) == _1b2bc3923_ReadU64(_1336_r)));;
			}
		}
		else if (_1b2bc67c2_IsF64(_1315_l.ptr())) {
			_case_begin_1b7cc6416:;
			{
				return (_1b2bc67c2_IsF64(_1336_r.ptr()) && (_1b2bc41c6_ReadF64(_1315_l) == _1b2bc41c6_ReadF64(_1336_r)));;
			}
		}
		else if (_1b2bc653b_IsStr(_1315_l.ptr())) {
			_case_begin_1b7cc648d:;
			{
				return (_1b2bc653b_IsStr(_1336_r.ptr()) && (_1b2bc3e40_ReadStr(_1315_l) == _1b2bc3e40_ReadStr(_1336_r)));;
			}
		}
		else if (_1b2bc62a5_IsBool(_1315_l.ptr())) {
			_case_begin_1b7cc6515:;
			{
				return (_1b2bc62a5_IsBool(_1336_r.ptr()) && (_1b2bc3ba9_ReadBool(_1315_l) == _1b2bc3ba9_ReadBool(_1336_r)));;
			}
		}
		else if (_1b2bc6a58_IsNil(_1315_l.ptr())) {
			_case_begin_1b7cc66ad:;
			{
				return _1b2bc6a58_IsNil(_1336_r.ptr());;
			}
		}
		else {
			_case_begin_1b7cc6229:;
			{
				return false;;
			}
		}
		_match_end_1b7cc5a75:;
	};
}



inline jule::Bool _1b4348250_equalCasting(jule::Ptr<_1b2bcec4d_CastingExprModel> _3217_l, jule::Ptr<_1b2bcec4d_CastingExprModel> _3245_r) {
	if ((!(_1b2db1d64_Equal((*(_3217_l))._field_Kind, (*(_3245_r))._field_Kind)))) {
		return false;;
	};
	return _1b46d3b90_equalModels((*((*_3217_l.alloc)._field_Expr))._field_Model, (*(*(_3245_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1b46d3167_equalUnary(jule::Ptr<_1b2bcd9e9_UnaryExprModel> _3915_l, jule::Ptr<_1b2bcd9e9_UnaryExprModel> _3941_r) {
	if ((((*((*(_3915_l))._field_Op))._field_Id != (*(*(_3941_r))._field_Op.alloc)._field_Id) || ((*(*(_3915_l))._field_Op.alloc)._field_Kind != (*(*(_3941_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1b46d3b90_equalModels((*((*_3915_l.alloc)._field_Expr))._field_Model, (*(*(_3941_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1b46d3497_equalIndexing(jule::Ptr<_1b2bd0e80_IndexingExprModel> _4618_l, jule::Ptr<_1b2bd0e80_IndexingExprModel> _4647_r) {
	return (_1b46d3b90_equalModels((*((*(_4618_l))._field_Expr))._field_Model, (*(*(_4647_r))._field_Expr.alloc)._field_Model) && _1b46d3b90_equalModels((*((*_4618_l.alloc)._field_Index))._field_Model, (*(*(_4647_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1b46d381b_equalBinary(jule::Ptr<_1b2bcd620_BinaryExprModel> _5116_l, jule::Ptr<_1b2bcd620_BinaryExprModel> _5143_r) {
	if ((((*((*(_5116_l))._field_Op))._field_Id != (*(*(_5143_r))._field_Op.alloc)._field_Id) || ((*(*(_5116_l))._field_Op.alloc)._field_Kind != (*(*(_5143_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1b46d3b90_equalModels((*((*_5116_l.alloc)._field_Left))._field_Model, (*(*(_5143_r))._field_Left.alloc)._field_Model) && _1b46d3b90_equalModels((*((*_5116_l.alloc)._field_Right))._field_Model, (*(*(_5143_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1b46d3b90_equalModels(jule::Any _6216_l, jule::Any _6236_r) {
	if ((_1b46ce493_typeData(&(_6216_l)) != _1b46ce493_typeData(&(_6236_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6216_l };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b7cd503a:;
			{
				return (_6216_l.unsafe_cast_ptr<_1b2d26ca7_Var>() == _6236_r.cast_ptr<_1b2d26ca7_Var>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b7cd5ac9:;
			{
				jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _703_li = _6216_l.unsafe_cast_ptr<_1b2bd3191_StructSubIdentExprModel>();;
				jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _713_ri = _6236_r.cast_ptr<_1b2bd3191_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_703_li))._field_Field == (*(_713_ri))._field_Field) && _1b46d3b90_equalModels((*((*_703_li.alloc)._field_Expr))._field_Model, (*(*(_713_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b7cd5b40:;
			{
				return _1b46c33ee_equalConst(_6216_l.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15), _6236_r.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b7cd5700:;
			{
				return _1b4348250_equalCasting(_6216_l.cast_ptr<_1b2bcec4d_CastingExprModel>(&__jule_any_type95), _6236_r.cast_ptr<_1b2bcec4d_CastingExprModel>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b7cd5766:;
			{
				return _1b46d3167_equalUnary(_6216_l.cast_ptr<_1b2bcd9e9_UnaryExprModel>(&__jule_any_type112), _6236_r.cast_ptr<_1b2bcd9e9_UnaryExprModel>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b7cd57cc:;
			{
				return _1b46d3497_equalIndexing(_6216_l.cast_ptr<_1b2bd0e80_IndexingExprModel>(&__jule_any_type42), _6236_r.cast_ptr<_1b2bd0e80_IndexingExprModel>(&__jule_any_type42));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b7cd5843:;
			{
				return _1b46d381b_equalBinary(_6216_l.cast_ptr<_1b2bcd620_BinaryExprModel>(&__jule_any_type113), _6236_r.cast_ptr<_1b2bcd620_BinaryExprModel>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1b7cd5689:;
			{
				return false;;
			}
		}
		_match_end_1b7cd527c:;
	};
}



inline void _1b46de3a4_possibleNilRemove(jule::Ptr<_1b46dd3c5_nils>* _7227_n, jule::Any _7237_m) {
	if (((*(_7227_n)) != nullptr)) {
		_1b46ddbab_removeVar((*(_7227_n)).ptr(), _1b46ded77_getNilVar(_7237_m));
	};
}



inline jule::Bool _1b46de76c_isGuaranteedNonNilExpr(jule::Ptr<_1b46dd3c5_nils>* _7832_n, jule::Any _7842_m) {
	{
		auto &_match_expr{ _7842_m };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b7cdba25:;
			{
				return true;;
			}
		}
		_match_end_1b7cdb9ae:;
	};
	return (((*(_7832_n)) != nullptr) && _1b46ddeec_isSafe((*(_7832_n)).ptr(), _1b46ded77_getNilVar(_7842_m)));;
}



inline jule::Bool _1b46dea36_isNilValidType(jule::Ptr<_1b2db1627_TypeKind> _8623_t) {
	return (_1b2db4064_Sptr(_8623_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1b46ded77_getNilVar(jule::Any _8814_m) {
	if ((!(_1b47059e7_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _8814_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b7cdd0cb:;
			{
				jule::Ptr<_1b2d26ca7_Var> _943_v = _8814_m.unsafe_cast_ptr<_1b2d26ca7_Var>();;
				if ((!((*(_943_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_8814_m.unsafe_cast_ptr<_1b2d26ca7_Var>());;
				};
				return _1b46ded77_getNilVar((*((*((*_943_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b7cdd52c:;
			{
				return static_cast<jule::Uintptr>((*(_8814_m.unsafe_cast_ptr<_1b2bd3191_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1b7cdd065:;
	};
	return 0LLU;;
}



inline jule::Bool _1b46e5a92_isConstantValidConditionalCase(jule::Ptr<_1b2ca49b0_If>* _65936_i) {
	{
		auto &_match_expr{ (*((*(_65936_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b7ce5523:;
			{
				jule::Ptr<_1b2b6c23a_Const> _6623_c = (*((*(_65936_i))))._field_Expr.unsafe_cast_ptr<_1b2b6c23a_Const>();;
				return (_1b2bc62a5_IsBool(_6623_c.ptr()) && _1b2bc3ba9_ReadBool(_6623_c));;
			}
		}
		_match_end_1b7ce5bd8:;
	};
	return false;;
}



inline jule::Bool _1b46e5da0_isUnreachableExpr(jule::Any* _66823_expr) {
	{
		auto &_match_expr{ (*(_66823_expr)) };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b7ce647a:;
			{
				jule::Ptr<_1b2b6c23a_Const> _6713_c = (*(_66823_expr)).cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15);;
				return (_1b2bc62a5_IsBool(_6713_c.ptr()) && (!(_1b2bc3ba9_ReadBool(_6713_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b7ce55ab:;
			{
				jule::Ptr<_1b2bcd620_BinaryExprModel> _6743_m = (*(_66823_expr)).cast_ptr<_1b2bcd620_BinaryExprModel>(&__jule_any_type113);;
				if (((*((*(_6743_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1b46e5da0_isUnreachableExpr(&((*((*_6743_m.alloc)._field_Left))._field_Model)) || _1b46e5da0_isUnreachableExpr(&((*((*_6743_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1b7ce6de8:;
	};
	return false;;
}



inline jule::Bool _1b46e6169_isConstantValidMatchCase(jule::Ptr<_1b2ca97ea_Case>* _68330_case) {
	{
		auto expr = &((*((*(_68330_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cea68d:;
		if (it != expr_end) {
			jule::Ptr<_1b2d7dc21_Data> *_6849_expr = it;
			{
				if (((_1b2d7e65b_IsConst((*(_6849_expr)).ptr()) && _1b2bc62a5_IsBool((*(*(_6849_expr)).alloc)._field_Constant.ptr())) && _1b2bc3ba9_ReadBool((*((*(_6849_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1b7cea68d:;
			++it;
			goto _iter_begin_1b7cea68d;
		}
		_iter_end_1b7cea68d:;
	};
	return false;;
}



inline jule::Bool _1b46e64aa_isUnreachableConditionalCase(jule::Ptr<_1b2ca49b0_If>* _69234_i) {
	return _1b46e5da0_isUnreachableExpr(&((*((*(_69234_i))))._field_Expr));;
}



inline jule::Bool _1b46e6741_isUnreachableMatchCase(jule::Ptr<_1b2ca97ea_Case>* _69628_case) {
	{
		auto expr = &((*((*(_69628_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cec6a1:;
		if (it != expr_end) {
			jule::Ptr<_1b2d7dc21_Data> *_6979_expr = it;
			{
				if ((!(_1b46e5da0_isUnreachableExpr(&((*((*(_6979_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1b7cec6a1:;
			++it;
			goto _iter_begin_1b7cec6a1;
		}
		_iter_end_1b7cec6a1:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1b46eb900_checkForBitShiftOpt(jule::Ptr<_1b2bcd125_OperandExprModel>* _58125_l, jule::Ptr<_1b2bcd125_OperandExprModel>* _58154_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1b2c75156_IsInt(_1b2db1a23_Str((*((*(_58125_l))))._field_Kind.ptr())))) || (!(_1b2c75156_IsInt(_1b2db1a23_Str((*((*(_58154_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1b2bc46e3_AsU64((*((*(_58154_r))))._field_Model.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _5892_j = _1caad8996_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _5902_z = static_cast<jule::U64>(_5892_j);;
	if ((static_cast<jule::F64>(_5902_z) != _5892_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _5902_z;
	return __jule_func_result;;
}



inline jule::Bool _1b46ebcb8_areSameLvalueExprModel(jule::Any* _59828_l, jule::Any* _59849_r) {
	{
		auto &_match_expr{ (*(_59828_l)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b7da6d32:;
			{
				return ((*(_59849_r)) == (*(_59828_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b7da6b45:;
			{
				{
					auto &_match_expr{ (*(_59849_r)) };
					
					if (_match_expr.type == &__jule_any_type100) {
						_case_begin_1b7da76c3:;
						{
							goto _match_end_1b7da7b57;
						}
					}
					else {
						_case_begin_1b7da7bbd:;
						{
							return false;;
						}
					}
					_match_end_1b7da7b57:;
				};
				jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _6113_lsi = (*(_59828_l)).cast_ptr<_1b2bd3191_StructSubIdentExprModel>(&__jule_any_type100);;
				jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _6123_rsi = (*(_59849_r)).cast_ptr<_1b2bd3191_StructSubIdentExprModel>(&__jule_any_type100);;
				if (((*(_6113_lsi))._field_Field != (*(_6123_rsi))._field_Field)) {
					return false;;
				};
				return _1b46ebcb8_areSameLvalueExprModel(&((*((*_6113_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6123_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b7da6da9:;
			{
				{
					auto &_match_expr{ (*(_59849_r)) };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1b7da94b6:;
						{
							jule::Ptr<_1b2bcd9e9_UnaryExprModel> _6244_ul = (*(_59828_l)).cast_ptr<_1b2bcd9e9_UnaryExprModel>(&__jule_any_type112);;
							jule::Ptr<_1b2bcd9e9_UnaryExprModel> _6254_ur = (*(_59849_r)).cast_ptr<_1b2bcd9e9_UnaryExprModel>(&__jule_any_type112);;
							if ((((*((*(_6244_ul))._field_Op))._field_Id != (*(*(_6254_ur))._field_Op.alloc)._field_Id) || ((*(*(_6244_ul))._field_Op.alloc)._field_Kind != (*(*(_6254_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1b46ebcb8_areSameLvalueExprModel(&((*((*_6244_ul.alloc)._field_Expr))._field_Model), &((*(*(_6254_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1b7da943e:;
				};
			}
		}
		_match_end_1b7da6cbb:;
	};
	return false;;
}



inline void _1b46edd75_possibleDynamicRemove(jule::Ptr<_1b46eccdb_dynamic>* _7331_d, jule::Any _7344_m) {
	if (((*(_7331_d)) != nullptr)) {
		_1b46ed5c2_removeVar((*(_7331_d)).ptr(), _1b46ee903_getDynamicVar(_7344_m));
	};
}



inline jule::Bool _1b46ee183_isDynamicValidType(jule::Ptr<_1b2db1627_TypeKind> _7927_t) {
	return _1b386ad8e_IsAny(&(_7927_t));;
}



inline jule::Ptr<_1b2db1627_TypeKind> _1b46ee5b2_isTypeGuaranteedDynamicData(jule::Ptr<_1b46eccdb_dynamic>* _8137_dy, jule::Ptr<_1b2db1627_TypeKind> _8155_t, jule::Any _8179_m) {
	jule::Bool _822_isAny = _1b386ad8e_IsAny(&(_8155_t));;
	if (((!(_822_isAny)) && (_1b2db55d7_Trait(_8155_t.ptr()) == nullptr))) {
		return _8155_t;;
	};
	if ((!(_822_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8179_m };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b7e47cd5:;
			{
				jule::Ptr<_1b2bcec4d_CastingExprModel> _917_cem = _8179_m.unsafe_cast_ptr<_1b2bcec4d_CastingExprModel>();;
				return _1b46ee5b2_isTypeGuaranteedDynamicData(_8137_dy, (*(_917_cem))._field_ExprKind, (*((*_917_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1b7e48357:;
	};
	jule::Uintptr _942_var = _1b46ee903_getDynamicVar(_8179_m);;
	if ((_942_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8137_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e49bd8:;
		if (it != expr_end) {
			_1b46ec99a_dynamicVar _9814_v = *it;
			{
				if ((_9814_v._field_var == _942_var)) {
					return _9814_v._field_kind;;
				};
			}
			_iter_next_1b7e49bd8:;
			++it;
			goto _iter_begin_1b7e49bd8;
		}
		_iter_end_1b7e49bd8:;
	};
	return nullptr;;
}



inline jule::Uintptr _1b46ee903_getDynamicVar(jule::Any _10618_m) {
	if ((!(_1b47074cc_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _10618_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b7e4a3ae:;
			{
				jule::Ptr<_1b2d26ca7_Var> _1123_v = _10618_m.unsafe_cast_ptr<_1b2d26ca7_Var>();;
				if ((!((*(_1123_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_10618_m.unsafe_cast_ptr<_1b2d26ca7_Var>());;
				};
				return _1b46ee903_getDynamicVar((*((*((*_1123_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b7e4b03b:;
			{
				return static_cast<jule::Uintptr>((*(_10618_m.unsafe_cast_ptr<_1b2bd3191_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b7e4a436:;
			{
				jule::Ptr<_1b2bcd9e9_UnaryExprModel> _1233_uem = _10618_m.unsafe_cast_ptr<_1b2bcd9e9_UnaryExprModel>();;
				if (((*((*(_1233_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1b46ee903_getDynamicVar((*((*_1233_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1b7e4a348:;
	};
	return 0LLU;;
}



inline jule::Bool _1b4703264_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1b47039a1_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1b470362c_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e602e7:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1b47039a1_fitsSize((*(_909_m)), _8940_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1b7e602e7:;
			++it;
			_906_i++;
			goto _iter_begin_1b7e602e7;
		}
		_iter_end_1b7e602e7:;
	};
	return -1LL;;
}



inline jule::Bool _1b47039a1_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2) {
	if ((_1b46ce493_typeData(&(_9813_e1)) != _1b46ce493_typeData(&(_9834_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b7e61d76:;
			{
				jule::Ptr<_1b2b6c23a_Const> _1043_exprConst = _9834_e2.cast_ptr<_1b2b6c23a_Const>(&__jule_any_type15);;
				return ((_1b2bc4979_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1b2bc8681_GtEq(_9813_e1.unsafe_cast_ptr<_1b2b6c23a_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b7e61ddc:;
			{
				return (_9834_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b7e61e53:;
			{
				jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1b2bd3191_StructSubIdentExprModel>();;
				jule::Ptr<_1b2bd3191_StructSubIdentExprModel> _1103_ssi2 = _9834_e2.cast_ptr<_1b2bd3191_StructSubIdentExprModel>(&__jule_any_type100);;
				return (_1b46d3b90_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b7e61a02:;
			{
				jule::Ptr<_1b2bcd9e9_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1b2bcd9e9_UnaryExprModel>();;
				jule::Ptr<_1b2bcd9e9_UnaryExprModel> _1143_uem2 = _9834_e2.cast_ptr<_1b2bcd9e9_UnaryExprModel>(&__jule_any_type112);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1b47039a1_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1b7e6198b:;
			{
				return false;;
			}
		}
		_match_end_1b7e618c0:;
	};
}



inline void _1b4703cd1_possibleBoundaryRemove(jule::Ptr<_1b47021ec_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e622c7:;
		if (it != expr_end) {
			_1b4701dab_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7e68d06:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1b46d3b90_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1b7e68d06;
							};
						}
						_iter_next_1b7e68d06:;
						++it;
						_1277_i++;
						goto _iter_begin_1b7e68d06;
					}
					_iter_end_1b7e68d06:;
				};
			}
			_iter_next_1b7e622c7:;
			++it;
			goto _iter_begin_1b7e622c7;
		}
		_iter_end_1b7e622c7:;
	};
}



inline jule::Bool _1b470409a_isBoundaryRiskyType(jule::Ptr<_1b2db1627_TypeKind> _13628_t) {
	return (_1b2db4a9d_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1b4704364_isBoundaryValidType(jule::Ptr<_1b2db1627_TypeKind> _14128_t) {
	return ((_1b2db4d34_Slc(_14128_t.ptr()) != nullptr) || (_1b2db4a9d_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1b470462d_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1b47059e7_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b7e6b1c1:;
			{
				jule::Ptr<_1b2d26ca7_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1b2d26ca7_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1b2d26ca7_Var>());;
				};
				return _1b470462d_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b7e6b655:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1b2bd3191_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b7e6b237:;
			{
				jule::Ptr<_1b2bcd9e9_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1b2bcd9e9_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1b470462d_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1b7e6b578:;
	};
	return 0LLU;;
}



inline void _1b47076a8_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _332_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1b4704d8c_Copy=_332_l1;
	_1b4705189_Deadcode=_332_l1;
	_1b4705442_Append=_332_l1;
	_1b470573e_Math=_332_l1;
	_1b47059e7_Access=_332_l1;
	_1b4705ca0_Inline=_332_l1;
	_1b4706058_Ptr=_332_l1;
	_1b4706421_Cond=_332_l1;
	_1b4706663_Str=_332_l1;
	_1b470690a_Slice=_332_l1;
	_1b4706bb3_Assign=_332_l1;
	_1b4706e6b_Exceptional=_332_l1;
	_1b4707224_Iter=_332_l1;
	_1b47074cc_Dynamic=_332_l1;
}



inline void _1b48372ee_detectEnabled(void) {
	_1b4835154_exprEnabled=(((_1b4706058_Ptr || _1b470573e_Math) || _1b47059e7_Access) || _1b4706421_Cond);
	_1b4835363_scopeEnabled=((((((((_1b4706421_Cond || _1b4705442_Append) || _1b4704d8c_Copy) || _1b4706663_Str) || _1b470690a_Slice) || _1b4706bb3_Assign) || _1b4706e6b_Exceptional) || _1b4707224_Iter) || _1b47074cc_Dynamic);
}



inline jule::U64 _1b49135b7_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1b4842628_isCopyOptimizable(jule::Ptr<_1b2d7dc21_Data>* _115523_expr) {
	if ((!((*((*(_115523_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_115523_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b8101a82:;
			{
				return false;;
			}
		}
		_match_end_1b8101a1b:;
	};
	return true;;
}



inline jule::Bool _1b48429e1_isIterCopyOptimizable(jule::Ptr<_1b2d7dc21_Data>* _116627_expr, jule::Ptr<_1b2d26ca7_Var>* _116647_v) {
	if (((!((*((*(_116627_expr))))._field_Lvalue)) && (!(_1b2db300d_Mutable((*((*(_116627_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_116647_v))))._field_Mutable)) && (!((*((*(_116627_expr))))._field_Mutable)));;
}



inline jule::Bool _1b4842e20_captureVarHandling(jule::Ptr<_1b491d2d6_ObjectCoder>* _117328_oc, jule::Ptr<_1b2bd1436_AnonFnExprModel>* _117351_m, jule::Ptr<_1b2d26ca7_Var>* _117383_v) {
	{
		auto expr = &((*((*(_117351_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8103c4e:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _11749_cv = *it;
			{
				if ((_11749_cv == (*(_117383_v)))) {
					_1b491da01_write((*(_117328_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1b486299a_var(&((*((*(_117328_oc))))._field_Buf), (*(_117383_v)));
					return true;;
				};
			}
			_iter_next_1b8103c4e:;
			++it;
			goto _iter_begin_1b8103c4e;
		}
		_iter_end_1b8103c4e:;
	};
	return false;;
}



inline jule::Str _1b4859e59_decomposeCommonEsq(jule::U8 _190823_b) {
	{
		auto &_match_expr{ _190823_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b8275ba1:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b8275a19:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b8275a80:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b8275574:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b82755da:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b8275662:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b82756d9:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b8275761:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b8275c17:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b8275c7d:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1b8273044:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b82754b9:;
	};
}



inline jule::Str _1b485a267_sbtoa(jule::U8 _193510_b) {
	if ((_193510_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_193510_b < 128LLU)) {
		jule::Str _19403_seq = _1b4859e59_decomposeCommonEsq(_193510_b);;
		if (!(_19403_seq).empty()) {
			return _19403_seq;;
		};
		if (((32LL <= _193510_b) && (_193510_b <= 126LLU))) {
			return __jule_strFromByte(_193510_b);;
		};
	};
	jule::Str _19482_seq = _1cab28981_FmtUint(static_cast<jule::U64>(_193510_b), 8LL);;
	if ((_19482_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19482_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19482_seq);;
}



inline void _1b485a553_cstrBytes(_20d8ca601_Builder* _195519_s, jule::Str _195540_ctx) {
	{
		auto expr = &(_195540_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b827a843:;
		if (it != expr_end) {
			jule::U8 *_19569_b = it;
			{
				_20d8d4ac2_WriteStr(_195519_s, _1b485a267_sbtoa((*(_19569_b))));
			}
			_iter_next_1b827a843:;
			++it;
			goto _iter_begin_1b827a843;
		}
		_iter_end_1b827a843:;
	};
}



inline void _1b485a883_cstrLit(_20d8ca601_Builder* _196117_s, jule::Str _196138_ctx) {
	_20d8d4d7a_WriteByte(_196117_s, '\"');
	_1b485a553_cstrBytes(_196117_s, _196138_ctx);
	_20d8d4d7a_WriteByte(_196117_s, '\"');
}



inline void _1b485ac29_ftoa(_20d8ca601_Builder* _196714_s, jule::F64 _196735_f, jule::I64 _196743_bitsize) {
	if ((_196743_bitsize != 32LL)) {
		if ((_196735_f == static_cast<jule::F64>(static_cast<jule::I64>(_196735_f)))) {
			_1b485b015_itoa(_196714_s, static_cast<jule::I64>(_196735_f));
			return;;
		};
		if ((_196735_f == static_cast<jule::F64>(static_cast<jule::U64>(_196735_f)))) {
			_1b485b301_utoa(_196714_s, static_cast<jule::U64>(_196735_f));
			return;;
		};
	};
	jule::Str _19782_m = _1cab12580_FmtFloat(_196735_f, 'f', -1LL, _196743_bitsize);;
	_20d8d4ac2_WriteStr(_196714_s, _19782_m);
	if ((!(_20d8bbb31_Contains(_19782_m, jule::Str::lit(".", 1))))) {
		_20d8d4ac2_WriteStr(_196714_s, jule::Str::lit(".0", 2));
	};
}



inline void _1b485b015_itoa(_20d8ca601_Builder* _198514_s, jule::I64 _198535_x) {
	{
		
		if ((_198535_x == jule::MAX_I64)) {
			_case_begin_1b827eddb:;
			{
				_20d8d4ac2_WriteStr(_198514_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_198535_x == jule::MIN_I64)) {
			_case_begin_1b827ee85:;
			{
				_20d8d4ac2_WriteStr(_198514_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1b827ecba:;
	};
	_20d8d4ac2_WriteStr(_198514_s, _1cab28d49_FmtInt(_198535_x, 10LL));
	if (_20daaaa12_Is64Bit(jule::Str::lit("arm64", 5))) {
		_20d8d4d7a_WriteByte(_198514_s, 'L');
	};
	_20d8d4d7a_WriteByte(_198514_s, 'L');
}



inline void _1b485b301_utoa(_20d8ca601_Builder* _200214_s, jule::U64 _200235_x) {
	{
		
		if ((_200235_x == jule::MAX_U64)) {
			_case_begin_1b8282075:;
			{
				_20d8d4ac2_WriteStr(_200214_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1b8281e32:;
	};
	_20d8d4ac2_WriteStr(_200214_s, _1cab28981_FmtUint(_200235_x, 10LL));
	if (_20daaaa12_Is64Bit(jule::Str::lit("arm64", 5))) {
		_20d8d4d7a_WriteByte(_200214_s, 'L');
	};
	_20d8d4ac2_WriteStr(_200214_s, jule::Str::lit("LU", 2));
}



inline void _1b485b950_operatorOverloadingBinary(_20d8ca601_Builder* _201635_buf, jule::Ptr<_1b2b119c6_StructIns>* _201663_s, jule::Str* _201685_l, jule::Str* _20173_r, jule::U64 _201711_op, jule::Str _201726_kind) {
	;
	jule::Ptr<_1b2bdda70_FnIns> _20196_f = static_cast<jule::Ptr<_1b2bdda70_FnIns>>(nullptr);;
	if ((_201711_op == static_cast<jule::U64>(51LLU))) {
		_20196_f=_1b386e1a0_FindOperator(_201663_s, static_cast<jule::U64>(50LLU), false);
		_20d8d4d7a_WriteByte(_201635_buf, '!');
	} else {
		_20196_f=_1b386e1a0_FindOperator(_201663_s, _201711_op, false);
	};
	if ((_20196_f == nullptr)) {
		if (((_201711_op == static_cast<jule::U64>(50LLU)) || (_201711_op == static_cast<jule::U64>(51LLU)))) {
			static__1b48623c3_structureIns(_201635_buf, _201663_s);
			_20d8d4ac2_WriteStr(_201635_buf, jule::Str::lit("_eq", 3));
			goto _julec_label_1b8285a7e;
		};
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2033:3"));;
	};
	static__1b4861724_funcIns(_201635_buf, &(_20196_f));
	_julec_label_1b8285a7e:;
	_20d8d4ac2_WriteStr(_201635_buf, jule::Str::lit("(&", 2));
	_20d8d4ac2_WriteStr(_201635_buf, (*(_201685_l)));
	_20d8d4ac2_WriteStr(_201635_buf, jule::Str::lit(", ", 2));
	_20d8d4ac2_WriteStr(_201635_buf, (*(_20173_r)));
	_20d8d4d7a_WriteByte(_201635_buf, ')');
}



inline jule::Slice<jule::U8> _1b492ab2e_concatAllParts(jule::Slice<jule::Ptr<_1b2ac7eba_Token>> _137619_parts) {
	jule::I64 _13776_n = 0LL;;
	{
		auto expr = &(_137619_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8546191:;
		if (it != expr_end) {
			jule::Ptr<_1b2ac7eba_Token> *_13789_part = it;
			{
				_13776_n+=(*((*(_13789_part))))._field_Kind.len();
			}
			_iter_next_1b8546191:;
			++it;
			goto _iter_begin_1b8546191;
		}
		_iter_end_1b8546191:;
	};
	if ((_13776_n == 0LL)) {
		return nullptr;;
	};
	_20d8ca601_Builder _13846_s = static__20d8cb1c3_New(_13776_n);;
	{
		auto expr = &(_137619_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8545091:;
		if (it != expr_end) {
			jule::Ptr<_1b2ac7eba_Token> *_13859_p = it;
			{
				_20d8d4ac2_WriteStr(&_13846_s, (*((*(_13859_p))))._field_Kind);
			}
			_iter_next_1b8545091:;
			++it;
			goto _iter_begin_1b8545091;
		}
		_iter_end_1b8545091:;
	};
	return _20d8d5d6a_Buf(&_13846_s);;
}



inline jule::Bool _1b492ae3c_isHeadDecl(jule::Ptr<_1b2bda9b2_Fn>* _139220_m) {
	if ((((*((*(_139220_m))))._field_Generics.len() > 0LL) || ((*((*(_139220_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1b386b466_IsOpMethod(_139220_m)) {
		return true;;
	};
	jule::Ptr<_1b2bdda70_FnIns> _13996_mi = (*((*(_139220_m))))._field_Instances[0LL];;
	;
	return static__1b2d28281_Dispose(_1b2b12a71_FindMethod((*(_13996_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1b492b206_defaultEq(jule::Ptr<_1b2b119c6_StructIns>* _140515_s) {
	return ((*((*(_140515_s))))._field_Comparable && ((*((*(_140515_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1b493a0e4_ableToInit(jule::Ptr<_1b2db1627_TypeKind>* _44920_t) {
	return (!(_1b2db24c4_Binded((*(_44920_t)).ptr())));;
}



inline jule::Bool _1b493a3be_shouldInitialized(jule::Ptr<_1b2db1627_TypeKind>* _45627_t) {
	if ((!(_1b493a0e4_ableToInit(_45627_t)))) {
		return false;;
	};
	jule::Ptr<_1b2db9740_Prim> _4602_prim = _1b2db3ccd_Prim((*(_45627_t)).ptr());;
	if ((_4602_prim != nullptr)) {
		return ((!(_1b2dbce91_IsAny(_4602_prim))) && (!(_1b2dbcc0a_IsStr(_4602_prim))));;
	};
	{
		
		if ((_1b2db4064_Sptr((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b868a6e2:;
			{
				return false;;
			}
		}
		else if ((_1b2db586d_Map((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b868b46d:;
			{
				return false;;
			}
		}
		else if ((_1b2db4d34_Slc((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b868a77a:;
			{
				return false;;
			}
		}
		else if ((_1b2db55d7_Trait((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b868a7e1:;
			{
				return false;;
			}
		}
		else if ((_1b2db50ba_Fn((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b868b605:;
			{
				return false;;
			}
		}
		else if ((_1b2db4a9d_Arr((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b868b66b:;
			{
				jule::Ptr<_1b2dc1060_Arr> _4767_arr = _1b2db4a9d_Arr((*(_45627_t)).ptr());;
				return _1b493a0e4_ableToInit(&((*(_4767_arr))._field_Elem));;
			}
		}
		else if ((_1b2db5351_Struct((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1b868b6d2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b868a5e3:;
			{
				return true;;
			}
		}
		_match_end_1b868a9cd:;
	};
}



inline void _20dbc4411_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_1b4bdc396_toStr(_3022_msg));
}



inline void _20dbc4686_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_20dbc4411_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _20dbc4235_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_20dbc4235_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8733559:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1b8733559:;
			++it;
			goto _iter_begin_1b8733559;
		}
		_iter_end_1b8733559:;
	};
	_20d8ca601_Builder _496_s = static__20d8cb1c3_New(32LL);;
	;
	{
		auto expr = &(_20dbc4235_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8734648:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				_20d8d4ac2_WriteStr(&_496_s, (*(_519_part))[0LL]);
				_20d8d4ac2_WriteStr(&_496_s, _20d8b7302_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
				_20d8d4ac2_WriteStr(&_496_s, (*(_519_part))[1LL]);
				if (((_516_i + 1LL) < 5LL)) {
					_20d8d4d7a_WriteByte(&_496_s, '\n');
				};
			}
			_iter_next_1b8734648:;
			++it;
			_516_i++;
			goto _iter_begin_1b8734648;
		}
		_iter_end_1b8734648:;
	};
	jule::outln(_1b8735616_toStr(_496_s));
}



inline void _20dbc48b7_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_20dbc4411_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(_1b4bdc396_toStr(jule::Str::lit("jule0.1.1 @master", 17)));
}



inline void _20dbc4ac6_toolDistos(void) {
	jule::out(_1b4bdc396_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::out(_1b873973b_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::out(_1b4bdc396_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1b873973b_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::out(_1b4bdc396_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1b873973b_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::outln(_1b4bdc396_toStr(jule::Str()));
}



inline void _20dbc4c3b_toolDistarch(void) {
	jule::out(_1b4bdc396_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::out(_1b8748e87_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::out(_1b4bdc396_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1b8748e87_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::out(_1b4bdc396_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1b8748e87_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::outln(_1b4bdc396_toStr(jule::Str()));
}



inline void _20dbc4e39_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(_1b4bdc396_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_20dbc4411_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1b874ca4b:;
			{
				_20dbc4ac6_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1b874b055:;
			{
				_20dbc4c3b_toolDistarch();
			}
		}
		else {
			_case_begin_1b874ad57:;
			{
				_20dbc4411_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1b874ae34:;
	};
}



inline void _20dbc516a_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_20dbc4411_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(_1b4bdc396_toStr(jule::Str::lit("julec version: jule0.1.1 @master", 32)));
	jule::outln(_1b4bdc396_toStr(jule::Str::lit("architecture: arm64", 19)));
	jule::outln(_1b4bdc396_toStr(jule::Str::lit("operating system: linux", 23)));
	jule::outln(_1b4bdc396_toStr((jule::Str::lit("default compiler: ", 18) + _20dbc0770_Compiler)));
	jule::outln(_1b4bdc396_toStr((jule::Str::lit("default C++ standard: ", 22) + _20dbc1d7b_CppStd)));
}



inline void _20dbc54ab_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(_1b4bdc396_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_20dbc4411_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1b8751511:;
			{
				({
					auto except = static__20c64b5a4_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_20dbc4411_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b8750851:;
			{
				_20dbc4411_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1b8750e6c:;
	};
}



inline jule::Bool _20dbc56ed_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1b87529a7:;
			{
				_20dbc4686_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1b8752a1d:;
			{
				_20dbc48b7_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1b8752a84:;
			{
				_20dbc4e39_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1b875227b:;
			{
				_20dbc516a_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1b87522e2:;
			{
				_20dbc54ab_mod(_15320_args);
			}
		}
		else {
			_case_begin_1b87510e3:;
			{
				return false;;
			}
		}
		_match_end_1b8751ac7:;
	};
	return true;;
}



inline void _20dbc5896_showInfo(void) {
	jule::outln(_1b4bdc396_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1896_args = _20c58ac74_Args();;
	if ((_1896_args.len() < 2LL)) {
		_20dbc5896_showInfo();
		return;;
	};
	if (_20dbc56ed_processCommand(&(_1896_args))) {
		return;;
	};
	_1b49ae6da_compileCommand(&(_1896_args));
}



inline void _1b49ab60a_init(void) {
	_20dbc0770_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_20c64a729_File> _1b49ab8c4_openOutput(jule::Str* _3016_path) {
	jule::Str _312_dir = _227d34c61_Dir((*(_3016_path)));;
	({
		auto except = static__20c649827_Of(_312_dir);
		if (!except.ok()) {
			({
				auto except = static__227d372a2_Create(_312_dir);
				if (!except.ok()) {
					_1cab2b632_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__20c64ae44_Create((*(_3016_path)));
		(except.ok()) ? (except.result) : ({
			_1cab2b632_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1b49aba6c_clearObjects(void) {
	({
		auto except = static__20c647ddb_Remove(_1b49acbc2_getCompilePath());
		if (!except.ok()) {
			jule::outln(_1b4bdc396_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__227d374d3_Remove(_1b49aad13_OutDir);
}



inline void _1b49abd7a_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd) {
	jule::Ptr<_20db5dbd6_Cmd> _606_cmd = static__20db5e126_New(_5914_compiler);;
	(*(_606_cmd))._field_Args=_20d8bb7ac_Split(_5929_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _20db5e324_Spawn(_606_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b875897a:;
					{
						static__20dbe9c83_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b8758a79:;
					{
						static__20dbe9c83_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b875845d:;
					{
						static__20dbe9c83_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1b875856d:;
			};
			_1cab2b632_Throw(jule::Str());
		}
	});
	jule::I64 _732_status = ({
		auto except = _20db5e7a8_Wait(_606_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:73:12"));
		(except.result);
	});;
	if ((_732_status != 0LL)) {
		jule::Str _753_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _20dbc0770_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__20dbe9c83_Print(jule::Str::lit("\033[31m", 5), _753_errorMessage);
		_1cab2b632_Throw(jule::Str());
	};
	_1b49aba6c_clearObjects();
}



inline jule::Bool _1b49ac144_isCppSourceFile(jule::Str _8620_path) {
	jule::I64 _872_offset = _20d8ba36b_FindLastByte(_8620_path, '.');;
	if ((_872_offset == -1LL)) {
		return false;;
	};
	return _20da98dda_IsValidCppExt(_8620_path.slice(_872_offset));;
}



inline void _1b49ac375_pushCompCmdClang(_20d8ca601_Builder* _9426_cmd) {
	_20d8d4ac2_WriteStr(_9426_cmd, jule::Str::lit("-Wno-everything ", 16));
	_20d8d4ac2_WriteStr(_9426_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _20dbc1d7b_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b875b780:;
			{
				_20d8d4ac2_WriteStr(_9426_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b875c880:;
			{
				_20d8d4ac2_WriteStr(_9426_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b875c8e6:;
			{
				_20d8d4ac2_WriteStr(_9426_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1b875c75e:;
	};
	_20d8d4d7a_WriteByte(_9426_cmd, ' ');
	if (_20dbc2ed1_Production) {
		_20d8d4ac2_WriteStr(_9426_cmd, jule::Str::lit("-O3 ", 4));
		_20d8d4ac2_WriteStr(_9426_cmd, jule::Str::lit("-flto ", 6));
		_20d8d4ac2_WriteStr(_9426_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_20d8d4ac2_WriteStr(_9426_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_20d8d4ac2_WriteStr(_9426_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1b49ac5a6_pushCompCmdGcc(_20d8ca601_Builder* _12024_cmd) {
	_20d8d4ac2_WriteStr(_12024_cmd, jule::Str::lit("-w ", 3));
	_20d8d4ac2_WriteStr(_12024_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _20dbc1d7b_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b875dd37:;
			{
				_20d8d4ac2_WriteStr(_12024_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b87608b6:;
			{
				_20d8d4ac2_WriteStr(_12024_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b876092c:;
			{
				_20d8d4ac2_WriteStr(_12024_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1b8760795:;
	};
	_20d8d4d7a_WriteByte(_12024_cmd, ' ');
	if (_20dbc2ed1_Production) {
		_20d8d4ac2_WriteStr(_12024_cmd, jule::Str::lit("-O3 ", 4));
		_20d8d4ac2_WriteStr(_12024_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_20d8d4ac2_WriteStr(_12024_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_20d8d4ac2_WriteStr(_12024_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1b49aca3a_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1b3865075_IR>* _14636_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1473_compiler = &(_20dbc1b6c_CompilerPath);;
	_20d8ca601_Builder _1486_cmd = static__20d8cb1c3_New(64LL);;
	{
		auto &_match_expr{ _20dbc0770_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b87635ab:;
			{
				_1b49ac5a6_pushCompCmdGcc(&(_1486_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b8763ad9:;
			{
				_1b49ac375_pushCompCmdClang(&(_1486_cmd));
			}
		}
		_match_end_1b87639a7:;
	};
	{
		auto expr = &((*((*(_14636_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8763d92:;
		if (it != expr_end) {
			jule::Ptr<_1b2cd4e1e_ImportInfo> *_1589_u = it;
			{
				if (((*((*(_1589_u))))._field_Binded && _1b49ac144_isCppSourceFile((*(*(_1589_u)).alloc)._field_Path))) {
					_20d8d4ac2_WriteStr(&_1486_cmd, (*(*(_1589_u)).alloc)._field_Path);
					_20d8d4d7a_WriteByte(&_1486_cmd, ' ');
				};
			}
			_iter_next_1b8763d92:;
			++it;
			goto _iter_begin_1b8763d92;
		}
		_iter_end_1b8763d92:;
	};
	if (!(_1b49ab451_Out).empty()) {
		_20d8d4ac2_WriteStr(&_1486_cmd, jule::Str::lit("-o ", 3));
		_20d8d4ac2_WriteStr(&_1486_cmd, _1b49ab451_Out);
		_20d8d4d7a_WriteByte(&_1486_cmd, ' ');
	};
	_20d8d4ac2_WriteStr(&_1486_cmd, _14618_sourcePath);
	{
		auto expr = &((*((*(_14636_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8766933:;
		if (it != expr_end) {
			jule::Str *_1739_pass = it;
			{
				_20d8d4d7a_WriteByte(&_1486_cmd, ' ');
				_20d8d4ac2_WriteStr(&_1486_cmd, (*(_1739_pass)));
			}
			_iter_next_1b8766933:;
			++it;
			goto _iter_begin_1b8766933;
		}
		_iter_end_1b8766933:;
	};
	if ((_20dbba902_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		_20d8d4ac2_WriteStr(&_1486_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1473_compiler));
	__jule_func_result.__jule_result_arg1 = _20d8d53b9_Str(&_1486_cmd);
	return __jule_func_result;;
}



inline jule::Str _1b49acbc2_getCompilePath(void) {
	return _227d3406d_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1b49aad13_OutDir; (*it++) = _1b49ab198_OutName; __jule_collection; }));;
}



inline void _1b49ace03_applyTargetIndependentOptimizations(jule::Ptr<_1b3865075_IR>* _19245_ir) {
	jule::Ptr<_1b48354ea_Optimizer> _1936_opt = static__1b48359a1_New(_19245_ir);;
	_1b483708a_Optimize(_1936_opt.ptr());
}



inline void _1b49ad09b_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _20dbc0770_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b87691e9:;
			{
				_1cab2b632_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b876912d:;
			{
				if ((_20dbc1b6c_CompilerPath).empty()) {
					_20dbc1b6c_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b8768cdc:;
			{
				if ((_20dbc1b6c_CompilerPath).empty()) {
					_20dbc1b6c_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1b8767c97:;
			{
				_1cab2b632_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _20dbc0770_Compiler));
			}
		}
		_match_end_1b8768b22:;
	};
}



inline void _1b49ad2aa_checkTargetArch(jule::Str _21420_arch) {
	if ((((_21420_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1cab2b632_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _21420_arch));
	};
}



inline void _1b49ad4db_checkTargetOs(jule::Str _22218_os) {
	if ((((_22218_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1cab2b632_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _22218_os));
	};
}



inline void _1b49ad71c_checkTargetFlag(jule::Str* _23021_target) {
	if (((*(_23021_target))).empty()) {
		_1cab2b632_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2352_parts = _20d8bb7ac_Split((*(_23021_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2352_parts.len() != 2LL)) {
		_1cab2b632_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_23021_target))));
	};
	jule::Str _2402_os;
	jule::Str _2406_arch;
	({
		jule::Str ___jule_assign_arg = _2352_parts[0LL];
		jule::Str _1___jule_assign_arg = _2352_parts[1LL];
		_2402_os = ___jule_assign_arg;
		_2406_arch = _1___jule_assign_arg;
	});
	if ((!_2402_os.equal("native", 6))) {
		_1b49ad4db_checkTargetOs(_2402_os);
		_20dbba902_Os=_2402_os;
	};
	if ((!_2406_arch.equal("native", 6))) {
		_1b49ad2aa_checkTargetArch(_2406_arch);
		_20dbbabaa_Arch=_2406_arch;
	};
	_1b2c6e073_UpdateTarget();
}



inline void _1b49ad94d_checkOptFlag(jule::Str* _25318_opt) {
	if (((*(_25318_opt))).empty()) {
		_1cab2b632_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_25318_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1b8771124:;
			{
				goto _match_end_1b87708b5;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1b8771212:;
			{
				_1b47076a8_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1b87709a3:;
			{
				_1cab2b632_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_25318_opt))));
			}
		}
		_match_end_1b87708b5:;
	};
}



inline void _1b49add16_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _20dbc1d7b_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b877207b:;
			{
				goto _match_end_1b8771ab4;
			}
		}
		else {
			_case_begin_1b8770a2a:;
			{
				_1cab2b632_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _20dbc1d7b_CppStd));
			}
		}
		_match_end_1b8771ab4:;
	};
}



inline jule::Slice<jule::Str> _1b49aded1_checkFlags(jule::Slice<jule::Str>* _27916_args) {
	jule::Str _2806_opt = jule::Str::lit("L0", 2);;
	jule::Str _2816_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1b49a6209_FlagSet> _2836_fs = static__1b49a6528_New();;
	_1b877392e_AddVar(_2836_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2806_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1b877392e_AddVar(_2836_fs, ((jule::Ptr<jule::Str>)((&(_2816_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1b877392e_AddVar(_2836_fs, ((jule::Ptr<jule::Str>)((&(_1b49ab451_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_20dbc20ac_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_20dbc2365_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1b877392e_AddVar(_2836_fs, ((jule::Ptr<jule::Str>)((&(_20dbc0770_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1b877392e_AddVar(_2836_fs, ((jule::Ptr<jule::Str>)((&(_20dbc1b6c_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_20dbc2ed1_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_20dbc28c6_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_20dbc2c8e_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1b877392e_AddVar(_2836_fs, ((jule::Ptr<jule::Str>)((&(_20dbc1d7b_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b4704d8c_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b4705189_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b4705442_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b470573e_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b47059e7_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b4705ca0_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b4706058_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b4706421_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b4706663_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b470690a_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b4706bb3_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b4706e6b_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b4707224_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1b877ca37_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1b47074cc_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3116_content = ({
		auto except = _1b49a73e7_Parse(_2836_fs, (*(_27916_args)));
		(except.ok()) ? (except.result) : ({
			_1cab2b632_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1b49ad09b_checkCompilerFlag();
	_1b49add16_checkCppStdFlag();
	_1b49ad71c_checkTargetFlag(&(_2816_target));
	_1b49ad94d_checkOptFlag(&(_2806_opt));
	return _3116_content;;
}



inline void _1b49ae1e0_setupSemaFlags(jule::I64* _32424_flags) {
	if (_20dbc20ac_Shadowing) {
		(*(_32424_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1b3865075_IR> _1b49ae4a9_buildIr(jule::Slice<jule::Str>* _33013_args) {
	jule::Slice<jule::Str> _3312_content = _1b49aded1_checkFlags(_33013_args);;
	jule::I64 _3336_semaFlags = static_cast<jule::I64>(0LL);;
	_1b49ae1e0_setupSemaFlags(&(_3336_semaFlags));
	if ((_3312_content.len() == 0LL)) {
		_1cab2b632_Throw(_20daa6403_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3312_content.len() > 1LL)) {
		_1cab2b632_Throw((jule::Str::lit("undefined content: ", 19) + _3312_content[1LL]));
	};
	jule::Str _3416_path;
	jule::Bool _34112_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _227d345bd_Abs(_3312_content[0LL]);
		_3416_path = __jule_assign_result.__jule_result_arg0;
		_34112_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34112_ok))) {
		_1cab2b632_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_20c64c85d_Status> _3472_inf = ({
		auto except = static__20c649827_Of(_20dbb9d85_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1cab2b632_Throw(_20daa6403_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_20c64c85d_Status>(nullptr);});
	});;
	if ((!(_20c64cc6a_IsDir(_3472_inf.ptr())))) {
		_1cab2b632_Throw(_20daa6403_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1b3865075_IR> _3556_ir;
	jule::Slice<_20daa5e91_Log> _35510_logs;
	({
		__jule_tuple_x_1b3865075_IR__jule_tuple_s_20daa5e91_Log __jule_assign_result = static__1b386554d_Build(_3416_path, _3336_semaFlags);
		_3556_ir = __jule_assign_result.__jule_result_arg0;
		_35510_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3556_ir == nullptr) && (_35510_logs == nullptr))) {
		_1cab2b632_Throw(_20daa6403_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3416_path, &__jule_any_type5); __jule_collection; })));
	};
	if ((_35510_logs != nullptr)) {
		static__1cab2ab5e_PrintLogs(&(_35510_logs));
		_1cab2b632_Throw(jule::Str());
	};
	return _3556_ir;;
}



inline void _1b49ae6da_compileCommand(jule::Slice<jule::Str>* _37024_args) {
	((*(_37024_args))).mut_slice(1LL);;
	if ((*(_37024_args))[0LL].equal("test", 4)) {
		_20dbc261d_Test=true;
		((*(_37024_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1b3865075_IR> _3766_ir = _1b49ae4a9_buildIr(_37024_args);;
	;
	if ((!(_20dbc261d_Test))) {
		jule::Ptr<_1b2bda9b2_Fn> _3817_main = _1b2cd8c58_FindFn((*(_3766_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_3817_main == nullptr)) {
			_1cab2b632_Throw(_20daa6403_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1b49ace03_applyTargetIndependentOptimizations(&(_3766_ir));
	_1b38665b5_Order(_3766_ir);
	jule::Str _3922_compPath = _1b49acbc2_getCompilePath();;
	jule::Str _3932_compiler;
	jule::Str _39312_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1b49aca3a_genCompileCmd(_3922_compPath, &(_3766_ir));
		_3932_compiler = __jule_assign_result.__jule_result_arg0;
		_39312_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1b491d2d6_ObjectCoder> _3956_oc = static__1b491d748_New(&(_3766_ir), _1b491aed7_SerializationInfo{._field_Compiler=_3932_compiler, ._field_CompilerCommand=_39312_compilerCmd});;
	if (_20dbc261d_Test) {
		jule::Ptr<_1b485c6ba_TestCoder> _4007_tc = static__1b485cb71_New(&(_3956_oc));;
		_1b485dee6_Serialize(_4007_tc);
	} else {
		_1b492a799_Serialize(_3956_oc);
	};
	jule::Ptr<_20c64a729_File> _4066_file = _1b49ab8c4_openOutput(&(_3922_compPath));;
	({
		auto except = _20c648370_Write(_4066_file.ptr(), _20d8d5d6a_Buf(&(*(_3956_oc))._field_Buf));
		if (!except.ok()) {
			_1cab2b632_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _20c64bce1_Close(_4066_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:410:2"));
	});
	if ((!(_20dbc2365_Transpilation))) {
		_1b49abd7a_compileIr(_3932_compiler, _39312_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_20dbbaced_init();
	_1b2c6e1e9_init();
	_1b49ab60a_init();

}

inline jule::Bool __jule_anon1b64d3053(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bdc91a_ParamIns> _25021_p1, jule::Ptr<_1b2bdc91a_ParamIns> _25036_p2) {
	if (((*((*(_25021_p1))._field_Decl))._field_Mutable != (*(*(_25036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1b2bd963c_IsSelf((*(_25021_p1))._field_Decl)) {
		if ((!(_1b2bd963c_IsSelf((*(_25036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1b2bd98c3_IsRef((*(_25021_p1))._field_Decl) != _1b2bd98c3_IsRef((*(_25036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Reference != (*(*(_25036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_25036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1b2db1d64_Equal((*_25021_p1.alloc)._field_Kind, (*(_25036_p2))._field_Kind);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6548a8b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _6521_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _6536_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6548a8b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6548a8b_ctx>();
	return _1b2c78412__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b654aa16(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _7221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _7236_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b654aa16_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b654aa16_ctx>();
	return _1b2c7880d__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b655e574(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _17821_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _17836_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b655e574_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b655e574_ctx>();
	return _1b2c7b635__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b65614ee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _18521_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _18536_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b65614ee_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b65614ee_ctx>();
	return _1b2c7ba31__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b657291c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _28321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _28336_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b657291c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b657291c_ctx>();
	return _1b2c7e847__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6589725(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _40221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _40236_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6589725_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6589725_ctx>();
	return _1b2c82680__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b658b6a0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _40921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _40936_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b658b6a0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b658b6a0_ctx>();
	return _1b2c82e77__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b658d62a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _41621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _41636_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b658d62a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b658d62a_ctx>();
	return _1b2c82a7b__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b662ce4a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _97421_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _97436_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b662ce4a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b662ce4a_ctx>();
	return _1b2c878d8__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b662edc5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _98121_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _98136_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b662edc5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b662edc5_ctx>();
	return _1b2c87cd4__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6631d50(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _98821_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _98836_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6631d50_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6631d50_ctx>();
	return _1b2c885cb__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6633cca(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _99521_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _99536_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6633cca_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6633cca_ctx>();
	return _1b2c889c7__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6635c55(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _100221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _100236_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6635c55_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6635c55_ctx>();
	return _1b2c88dc3__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6637bd0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _100921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _100936_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6637bd0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6637bd0_ctx>();
	return _1b2c892be__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6639b5a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _101621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _101636_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6639b5a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6639b5a_ctx>();
	return _1b2c896ba__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b663bad5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _102321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _102336_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b663bad5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b663bad5_ctx>();
	return _1b2c89ab6__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b663dba3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _103021_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _103036_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b663dba3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b663dba3_ctx>();
	return _1b2c89eb2__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6640b2d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _103721_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _103736_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6640b2d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6640b2d_ctx>();
	return _1b2c8c58b__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6642aa8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _104421_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _104436_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6642aa8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6642aa8_ctx>();
	return _1b2c8b49c__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6644a33(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _105121_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _105136_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6644a33_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6644a33_ctx>();
	return _1b2c8a3ad__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66469ad(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _105821_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _105836_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b66469ad_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b66469ad_ctx>();
	return _1b2c8a7a9__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6648938(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _106521_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _106536_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6648938_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6648938_ctx>();
	return _1b2c8aba5__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b664a8b3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _107221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _107236_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b664a8b3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b664a8b3_ctx>();
	return _1b2c8b0a1__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b664c83d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _107921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _107936_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b664c83d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b664c83d_ctx>();
	return _1b2c8b898__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b664e7b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _108621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _108636_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b664e7b8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b664e7b8_ctx>();
	return _1b2c8bc94__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6651743(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _109321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _109336_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6651743_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6651743_ctx>();
	return _1b2c8c190__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66536bd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _110021_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _110036_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b66536bd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b66536bd_ctx>();
	return _1b2c881d0__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b667e9a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _126221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _126236_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b667e9a2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b667e9a2_ctx>();
	return _1b2c8d911__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b668192c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _126921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _126936_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b668192c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b668192c_ctx>();
	return _1b2c8dd0c__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66838a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _127621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _127636_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b66838a7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b66838a7_ctx>();
	return _1b2c8e208__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6685832(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _128321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _128336_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6685832_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6685832_ctx>();
	return _1b2c8e604__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66877ac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _129021_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _129036_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b66877ac_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b66877ac_ctx>();
	return _1b2c8ea00__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6689737(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _129721_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _129736_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6689737_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6689737_ctx>();
	return _1b2c8edeb__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b668b6b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _130421_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _130436_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b668b6b2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b668b6b2_ctx>();
	return _1b2c902e7__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66a13ca(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _142921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _142936_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b66a13ca_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b66a13ca_ctx>();
	return _1b2c93097__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66a3355(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _143621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _143636_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b66a3355_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b66a3355_ctx>();
	return _1b2c93493__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b66a52d0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _144321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _144336_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b66a52d0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b66a52d0_ctx>();
	return _1b2c9388e__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b67191bd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _194921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _194936_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b67191bd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b67191bd_ctx>();
	return _1b2c972dd__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b671b148(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _195621_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _195636_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b671b148_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b671b148_ctx>();
	return _1b2c976d9__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b671d0c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _196321_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _196336_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b671d0c3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b671d0c3_ctx>();
	return _1b2c97ad5__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b672004d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _197021_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _197036_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b672004d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b672004d_ctx>();
	return _1b2c97ed1__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6721ec8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _197721_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _197736_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6721ec8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6721ec8_ctx>();
	return _1b2c983cc__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6723e53(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _198421_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _198436_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6723e53_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6723e53_ctx>();
	return _1b2c987c8__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6725dcd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _199121_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _199136_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6725dcd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6725dcd_ctx>();
	return _1b2c98bc4__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6727d58(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _199821_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _199836_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6727d58_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6727d58_ctx>();
	return _1b2c990c0__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b6729e26(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _200521_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _200536_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b6729e26_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6729e26_ctx>();
	return _1b2c994bb__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b672bda1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _201221_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _201236_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b672bda1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b672bda1_ctx>();
	return _1b2c998b7__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_1b2d7dc21_Data> __jule_anon_1b672dd2b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d80948_eval>* _201921_e, jule::Ptr<_1b2ae644a_FnCallExpr>* _201936_fc, jule::Ptr<_1b2d7dc21_Data>* ) {
	jule::Ptr<__jule_anon_1b672dd2b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b672dd2b_ctx>();
	return _1b2c99cb3__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_1b673a101(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d03091_sema>* _6415_sema, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1b673a101_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b673a101_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b673b1ac:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1b2aea5e7_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1b2daee72_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1b673b1ac;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1b2db1627_TypeKind>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b673de4b:;
					if (it != expr_end) {
						jule::Ptr<_1b2add3dc_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1b2db1627_TypeKind> _7310_kind = _1b2d0a395_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1b2dd1a10_Lookup_mptr_data4), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type77) {
										_case_begin_1b6740ca5:;
										{
											jule::Ptr<_1b2add9e7_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1b2add9e7_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1b2c9e614_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1b67417de;
											};
										}
									}
									_match_end_1b6740c2d:;
								};
								return false;;
							};
							_julec_label_1b67417de:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1b2db1627_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1b673de4b:;
						++it;
						goto _iter_begin_1b673de4b;
					}
					_iter_end_1b673de4b:;
				};
			}
			_iter_next_1b673b1ac:;
			++it;
			_659_i++;
			goto _iter_begin_1b673b1ac;
		}
		_iter_end_1b673b1ac:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1b6a53e75(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd4e1e_ImportInfo> _48635_spkg) {
	jule::Ptr<__jule_anon_1b6a53e75_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6a53e75_ctx>();
	return ((!(_1b2cd0117_isImplicitImport(_48635_spkg))) && ((*((*(__jule_closure_ctx.alloc->_48528_pkg))))._field_Path == (*(_48635_spkg))._field_Path));;
}

inline jule::Bool __jule_anon_1b6b5eee8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d03091_sema>* _83342_sema) {
	jule::Ptr<__jule_anon_1b6b5eee8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6b5eee8_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_82647_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b60ee9:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdc91a_ParamIns> _83516_p = *it;
			{
				if ((!(_1b2bd963c_IsSelf((*(_83516_p))._field_Decl.ptr())))) {
					(*_83516_p.alloc)._field_Kind=_1b2d0ec6d_buildNonGenericTypeKind((*(_83342_sema)), &((*((*(*(_83516_p))._field_Decl.alloc)._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_82711_generics), __jule_closure_ctx.alloc->_82663_ignored);
					__jule_func_result=(__jule_func_result && ((*_83516_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1b6b60ee9:;
			++it;
			goto _iter_begin_1b6b60ee9;
		}
		_iter_end_1b6b60ee9:;
	};
	if ((!(_1b2bdae68_IsVoid((*__jule_closure_ctx.alloc->_82647_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_82647_f.alloc)._field_Result=_1b2d0ec6d_buildNonGenericTypeKind((*(_83342_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_82647_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_82711_generics), __jule_closure_ctx.alloc->_82663_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_82647_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1b6b7cd29(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d03091_sema>* _93642_sema) {
	jule::Ptr<__jule_anon_1b6b7cd29_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6b7cd29_ctx>();
	return __jule_closure_ctx.alloc->_92946_algo(_93642_sema, &(__jule_closure_ctx.alloc->_9347_generics));;
}

inline jule::Bool __jule_anon_1b6b82614(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d03091_sema>* _95237_sema, jule::Slice<jule::Ptr<_1b2db0835_TypeAlias>>* _95255_generics) {
	jule::Ptr<__jule_anon_1b6b82614_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b6b82614_ctx>();
	jule::Bool _9538_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b83aaa:;
		if (it != expr_end) {
			jule::Ptr<_1b2bdc91a_ParamIns> _95416_p = *it;
			{
				if (_1b2bd963c_IsSelf((*(_95416_p))._field_Decl.ptr())) {
					if (((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner == nullptr)) {
						goto _iter_next_1b6b83aaa;
					};
					if (_1b2bd98c3_IsRef((*(_95416_p))._field_Decl)) {
						(*_95416_p.alloc)._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2dbd26b_Sptr>(_1b2dbd26b_Sptr{._field_Elem=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data23)});
					} else {
						(*_95416_p.alloc)._field_Kind=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner, (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data0)});
					};
				} else {
					(*(_95416_p))._field_Kind=_1b2d0b9e5_buildTypeWithGenerics((*(_95237_sema)), &((*((*((*_95416_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_95255_generics)), (*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Refers);
					if (((*_95416_p.alloc)._field_Kind != nullptr)) {
						_1b2d119b7_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_95416_p));
					} else {
						_9538_ok=false;
					};
				};
			}
			_iter_next_1b6b83aaa:;
			++it;
			goto _iter_begin_1b6b83aaa;
		}
		_iter_end_1b6b83aaa:;
	};
	if ((!(_1b2bdae68_IsVoid((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Result=_1b2d0b9e5_buildTypeWithGenerics((*(_95237_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_94837_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_95255_generics)), (*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Refers);
		_9538_ok=(((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Result != nullptr) && _9538_ok);
	};
	return _9538_ok;;
}

inline jule::Bool __jule_anon_1b71db167(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd4e1e_ImportInfo> _187243_imp) {
	jule::Ptr<__jule_anon_1b71db167_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b71db167_ctx>();
	return ((*(_187243_imp))._field_Alias == (*((*(__jule_closure_ctx.alloc->_187133_s))._field_Namespace))._field_Kind);;
}

inline jule::Str __jule_anon1b7515b78(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def) {
	{
		auto &_match_expr{ (*(_85519_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b7516c78:;
			{
				return (*((*(_85519_def)).cast_ptr<_1b2db0835_TypeAlias>(&__jule_any_type8)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b7516a9c:;
			{
				return (*((*(_85519_def)).cast_ptr<_1b2b0db6b_Struct>(&__jule_any_type9)))._field_Ident;;
			}
		}
		else {
			_case_begin_1b751665c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b75165e6:;
	};
}

inline jule::Bool __jule_anon_1b7599833(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd4e1e_ImportInfo> _154143_imp) {
	jule::Ptr<__jule_anon_1b7599833_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b7599833_ctx>();
	return ((*(_154143_imp))._field_Alias == (*((*(__jule_closure_ctx.alloc->_154034_ns))._field_Namespace))._field_Kind);;
}

inline void __jule_anon_1b7c36200(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _21031_file) {
	jule::Ptr<__jule_anon_1b7c36200_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b7c36200_ctx>();
	{
		auto expr = &((*((*(_21031_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c36b7e:;
		if (it != expr_end) {
			jule::Ptr<_1b2d26ca7_Var> _21116_v = *it;
			{
				if (_1b386cdb3_HasDirective(&((*(_21116_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1b7c2bda5_isLive(__jule_closure_ctx.alloc->_self_, &(_21116_v))))) {
						_1b7c3031a_pushLive(__jule_closure_ctx.alloc->_self_, _21116_v);
						_1b482be70_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_21116_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1b7c36b7e:;
			++it;
			goto _iter_begin_1b7c36b7e;
		}
		_iter_end_1b7c36b7e:;
	};
	{
		auto expr = &((*((*(_21031_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c37b6e:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _21916_f = *it;
			{
				if (_1b386cdb3_HasDirective(&((*(_21916_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_21916_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b7c39632:;
						if (it != expr_end) {
							jule::Ptr<_1b2bdda70_FnIns> _22118_ins = *it;
							{
								if ((!(_1b7bea04e_isLive(__jule_closure_ctx.alloc->_self_, &(_22118_ins))))) {
									_1b7bed739_pushLive(__jule_closure_ctx.alloc->_self_, _22118_ins);
									_1b482be70_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_22118_ins))._field_Refers));
								};
							}
							_iter_next_1b7c39632:;
							++it;
							goto _iter_begin_1b7c39632;
						}
						_iter_end_1b7c39632:;
					};
				};
			}
			_iter_next_1b7c37b6e:;
			++it;
			goto _iter_begin_1b7c37b6e;
		}
		_iter_end_1b7c37b6e:;
	};
}

inline void __jule_anon_1b7c8e2ad(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr) {
	jule::Ptr<__jule_anon_1b7c8e2ad_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b7c8e2ad_ctx>();
	{
		auto &_match_expr{ (*(_2236_expr)) };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b7c8ec09:;
			{
				jule::Ptr<_1b2bd0600_FnCallExprModel> _259_m = (*(_2236_expr)).cast_ptr<_1b2bd0600_FnCallExprModel>(&__jule_any_type30);;
				if (((*(_259_m))._field_Except != nullptr)) {
					{
						_1b4830616_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_259_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b7c8ea50:;
			{
				jule::Ptr<_1b2bd1436_AnonFnExprModel> _309_m = (*(_2236_expr)).cast_ptr<_1b2bd1436_AnonFnExprModel>(&__jule_any_type102);;
				_1b4833075_eliminateDeadCodeOfScope((*((*(_309_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1b7c8eb82:;
	};
}

inline void __jule_anon_1b7e41174(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _54947_m) {
	jule::Ptr<__jule_anon_1b7e41174_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b7e41174_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_54947_m));
	};
	{
		auto &_match_expr{ (*(_54947_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b7e41a04:;
			{
				{
					_1b46e9a63_binary(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1b2bcd620_BinaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b7e41c57:;
			{
				{
					_1b46e9d1b_unary(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1b2bcd9e9_UnaryExprModel>(&__jule_any_type112));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b7e41a6a:;
			{
				{
					_1b46ea0c4_structureLit(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1b2bce3bd_StructLitExprModel>(&__jule_any_type97));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b7e41ad1:;
			{
				{
					_1b46ea37c_casting(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1b2bcec4d_CastingExprModel>(&__jule_any_type95));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b7e41b47:;
			{
				{
					_1b46eac51_funcCall(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1b2bd0600_FnCallExprModel>(&__jule_any_type30));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b7e42461:;
			{
				{
					_1b46eb009_indexing(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1b2bd0e80_IndexingExprModel>(&__jule_any_type42));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b7e424c7:;
			{
				{
					_1b46eb2b2_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1b2bd1436_AnonFnExprModel>(&__jule_any_type102));
				};
			}
		}
		_match_end_1b7e41905:;
	};
}

inline void __jule_anon_1b8118648(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b8118648_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b8118648_ctx>();
	if (__jule_closure_ctx.alloc->_1017_ref) {
		_1b491da01_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1b491da01_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1b811c152(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b811c152_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b811c152_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_9336_it))))._field_KeyB.alloc)._field_Reference) {
			_1b491da01_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1b491da01_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1b813c738(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b813c738_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b813c738_ctx>();
	_1b491da01_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1b813ec24(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b813ec24_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b813ec24_ctx>();
	_1b491da01_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1b8158bd8(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b8158bd8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b8158bd8_ctx>();
	_1b491da01_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1b81e3899(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b81e3899_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b81e3899_ctx>();
	_1b491da01_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1b81e4bca(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b81e4bca_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b81e4bca_ctx>();
	_1b484e855_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_74030_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1b826a404(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2d26ca7_Var> _111667_v) {
	jule::Ptr<__jule_anon_1b826a404_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b826a404_ctx>();
	return _1b4842e20_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_111034_m), &(_111667_v));;
}

inline void __jule_anon_1b86057a0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _85338_pkg) {
	jule::Ptr<__jule_anon_1b86057a0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b86057a0_ctx>();
	_1b3867bd2_IterFiles(_85338_pkg, jule::__new_closure<void,jule::Ptr<_1b2be1cb5_SymTab>*>((void*)__jule_anon_1b86066b3, jule::Ptr<__jule_anon_1b86066b3_ctx>::make(__jule_anon_1b86066b3_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b86066b3_ctx_handler));
}

inline void __jule_anon_1b8606c79(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn>* _86636_m) {
	jule::Ptr<__jule_anon_1b8606c79_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b8606c79_ctx>();
	jule::Ptr<_1b2bdda70_FnIns> _8678_ins = (*((*(_86636_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_8678_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b8609e47:;
		if (it != expr_end) {
			jule::I64 _8689_i = it - expr.begin();
			jule::Ptr<_1b2bdc91a_ParamIns> _86816_ip = *it;
			{
				if (_1b2acab6b_IsAnonIdent((*((*(_86816_ip))._field_Decl))._field_Ident)) {
					(*(*(_86816_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1cab29113_Itoa(_8689_i));
				};
			}
			_iter_next_1b8609e47:;
			++it;
			_8689_i++;
			goto _iter_begin_1b8609e47;
		}
		_iter_end_1b8609e47:;
	};
	_1b4920a69_pushResult(__jule_closure_ctx.alloc->_self_, _86636_m);
	_1b492474e_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _86636_m);
}

inline void __jule_anon_1b860c3de(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _87938_pkg) {
	jule::Ptr<__jule_anon_1b860c3de_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b860c3de_ctx>();
	_1b3867bd2_IterFiles(_87938_pkg, jule::__new_closure<void,jule::Ptr<_1b2be1cb5_SymTab>*>((void*)__jule_anon_1b860d302, jule::Ptr<__jule_anon_1b860d302_ctx>::make(__jule_anon_1b860d302_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b860d302_ctx_handler));
}

inline void __jule_anon_1b861ca92(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b861ca92_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b861ca92_ctx>();
	_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1b4858908_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_94624_v))._field_Value))._field_Data.alloc)._field_Model);
	_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1b861eb82(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b861eb82_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b861eb82_ctx>();
	_1b484e855_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_94624_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1b862238d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b862238d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b862238d_ctx>();
	_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1b8623537(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b8623537_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b8623537_ctx>();
	_1b4859ac4_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_94624_v))._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1b86416ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _108938_pkg) {
	jule::Ptr<__jule_anon_1b86416ed_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b86416ed_ctx>();
	_1b3867bd2_IterFiles(_108938_pkg, jule::__new_closure<void,jule::Ptr<_1b2be1cb5_SymTab>*>((void*)__jule_anon_1b8642600, jule::Ptr<__jule_anon_1b8642600_ctx>::make(__jule_anon_1b8642600_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b8642600_ctx_handler));
}

inline void __jule_anon_1b8641b60(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn>* _110436_m) {
	jule::Ptr<__jule_anon_1b8641b60_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b8641b60_ctx>();
	_1b491e3a3_indent(__jule_closure_ctx.alloc->_self_);
	_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1b4861438_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _110436_m);
	_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1b2bdda70_FnIns> _11094_mepf;
	jule::Bool _110910_exist;
	({
		__jule_tuple_x_1b2bdda70_FnIns__jule_tuple_bool __jule_assign_result = _1b492718b_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _110436_m);
		_11094_mepf = __jule_assign_result.__jule_result_arg0;
		_110910_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_110910_exist))) {
		__jule_panic_s(jule::Str::lit("cxx: implementation mistake, [traitDataMethods] could not found MepMap record", 77) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1111:5"));;
	};
	_1b491da01_write(__jule_closure_ctx.alloc->_self_, _1cab28981_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_11094_mepf)), 15LL));
	_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1b491da01_write(__jule_closure_ctx.alloc->_self_, _1cab28981_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_110355_s)), 15LL));
	_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1b865525b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _114138_pkg) {
	jule::Ptr<__jule_anon_1b865525b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b865525b_ctx>();
	_1b3867bd2_IterFiles(_114138_pkg, jule::__new_closure<void,jule::Ptr<_1b2be1cb5_SymTab>*>((void*)__jule_anon_1b865616e, jule::Ptr<__jule_anon_1b865616e_ctx>::make(__jule_anon_1b865616e_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b865616e_ctx_handler));
}

inline void __jule_anon_1b8665887(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _121338_pkg) {
	jule::Ptr<__jule_anon_1b8665887_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b8665887_ctx>();
	_1b3867bd2_IterFiles(_121338_pkg, jule::__new_closure<void,jule::Ptr<_1b2be1cb5_SymTab>*>((void*)__jule_anon_1b866679a, jule::Ptr<__jule_anon_1b866679a_ctx>::make(__jule_anon_1b866679a_ctx{._121338_pkg=_121338_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b866679a_ctx_handler));
}

inline void __jule_anon_1b8666d61(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _123631_file) {
	jule::Ptr<__jule_anon_1b8666d61_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b8666d61_ctx>();
	{
		auto expr = &((*((*(_123631_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b866b0b8:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _123716_f = *it;
			{
				if ((*(_123716_f))._field_Ident.equal("init", 4)) {
					_1b491e3a3_indent(__jule_closure_ctx.alloc->_self_);
					static__1b4861438_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_123716_f));
					_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1b866b0b8:;
			++it;
			goto _iter_begin_1b866b0b8;
		}
		_iter_end_1b866b0b8:;
	};
}

inline void __jule_anon_1b8673202(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd7691_Package>* _127538_pkg) {
	jule::Ptr<__jule_anon_1b8673202_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b8673202_ctx>();
	_1b4929545_pushInit(__jule_closure_ctx.alloc->_self_, _127538_pkg);
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1b8710c51(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1cab17a19_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1b87188b3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1cab17563_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1b653c3ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2cd4e1e_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std/comptime", 12);;
}

inline void __jule_anon_1b86066b3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _85432_file) {
	jule::Ptr<__jule_anon_1b86066b3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b86066b3_ctx>();
	{
		auto expr = &((*((*(_85432_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8607142:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _85517_f = *it;
			{
				if (((!((*(_85517_f))._field_Binded)) && ((*_85517_f.alloc)._field_Token != nullptr))) {
					_1b4920a69_pushResult(__jule_closure_ctx.alloc->_self_, &(_85517_f));
					_1b4924496_funcDecl(__jule_closure_ctx.alloc->_self_, &(_85517_f), false);
				};
			}
			_iter_next_1b8607142:;
			++it;
			goto _iter_begin_1b8607142;
		}
		_iter_end_1b8607142:;
	};
}

inline void __jule_anon_1b860d302(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _88032_file) {
	jule::Ptr<__jule_anon_1b860d302_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b860d302_ctx>();
	{
		auto expr = &((*((*(_88032_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b860dc81:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> _88117_t = *it;
			{
				if (((*(_88117_t))._field_Token == nullptr)) {
					goto _iter_next_1b860dc81;
				};
				_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1b4861a10_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _88117_t);
				_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1b491dea7_addIndent(__jule_closure_ctx.alloc->_self_);
				_1b491e3a3_indent(__jule_closure_ctx.alloc->_self_);
				_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1b4924c05_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_88117_t));
				_1b491e1a5_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1b491e3a3_indent(__jule_closure_ctx.alloc->_self_);
				_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1b860dc81:;
			++it;
			goto _iter_begin_1b860dc81;
		}
		_iter_end_1b860dc81:;
	};
}

inline void __jule_anon_1b8642600(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _109032_file) {
	jule::Ptr<__jule_anon_1b8642600_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b8642600_ctx>();
	{
		auto expr = &((*((*(_109032_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8647ddb:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> _109117_t = *it;
			{
				if (((*(_109117_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1b8647ddb;
				};
				_1b386874e_IterTraitMethods(&(_109117_t), jule::__new_closure<void,jule::Ptr<_1b2bda9b2_Fn>*>((void*)__jule_anon_1b864943c, jule::Ptr<__jule_anon_1b864943c_ctx>::make(__jule_anon_1b864943c_ctx{._self_=__jule_closure_ctx.alloc->_self_,._109117_t=_109117_t}).as<jule::Uintptr>(), __jule_anon_1b864943c_ctx_handler));
			}
			_iter_next_1b8647ddb:;
			++it;
			goto _iter_begin_1b8647ddb;
		}
		_iter_end_1b8647ddb:;
	};
}

inline void __jule_anon_1b865616e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _114232_file) {
	jule::Ptr<__jule_anon_1b865616e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b865616e_ctx>();
	{
		auto expr = &((*((*(_114232_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8656aed:;
		if (it != expr_end) {
			jule::Ptr<_1b2be61c6_Trait> _114317_t = *it;
			{
				jule::I64 _114410_i = 0LL;;
				{
					auto expr = &((*(_114317_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8657934:;
					if (it != expr_end) {
						jule::Ptr<_1b2b0db6b_Struct> _114518_s = *it;
						{
							{
								auto expr = &((*(_114518_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b86582d6:;
								if (it != expr_end) {
									jule::Ptr<_1b2b119c6_StructIns> _114619_ins = *it;
									{
										_1b4927e7d_traitData(__jule_closure_ctx.alloc->_self_, &(_114317_t), _114410_i, &(_114619_ins));
										(_114410_i)++;
									}
									_iter_next_1b86582d6:;
									++it;
									goto _iter_begin_1b86582d6;
								}
								_iter_end_1b86582d6:;
							};
						}
						_iter_next_1b8657934:;
						++it;
						goto _iter_begin_1b8657934;
					}
					_iter_end_1b8657934:;
				};
			}
			_iter_next_1b8656aed:;
			++it;
			goto _iter_begin_1b8656aed;
		}
		_iter_end_1b8656aed:;
	};
}

inline void __jule_anon_1b866679a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2be1cb5_SymTab>* _121432_file) {
	jule::Ptr<__jule_anon_1b866679a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b866679a_ctx>();
	{
		auto expr = &((*((*(_121432_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8667229:;
		if (it != expr_end) {
			jule::Ptr<_1b2bda9b2_Fn> _121517_f = *it;
			{
				if (((!(_20dbc261d_Test)) && _1b386cdb3_HasDirective(&((*(_121517_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1b8667229;
				};
				if (((*(__jule_closure_ctx.alloc->_121338_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_121517_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1b8668b54:;
							{
								goto _iter_next_1b8667229;
							}
						}
						_match_end_1b8668a88:;
					};
				};
				if (((!((*_121517_f.alloc)._field_Binded)) && ((*_121517_f.alloc)._field_Token != nullptr))) {
					_1b49269d7_func(__jule_closure_ctx.alloc->_self_, &(_121517_f));
					_1b491da01_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1b8667229:;
			++it;
			goto _iter_begin_1b8667229;
		}
		_iter_end_1b8667229:;
	};
}

inline void __jule_anon_1b864943c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1b2bda9b2_Fn>* _109539_m) {
	jule::Ptr<__jule_anon_1b864943c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b864943c_ctx>();
	_1b49274ee_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_109117_t), _109539_m);
}

inline void __jule_RCAdd(jule::U64* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U64 __jule_RCLoad(jule::U64* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U64* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_20dbc4235_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1b49aad13_OutDir = jule::Str::lit("dist", 4);
	_1b49ab198_OutName = jule::Str::lit("ir.cpp", 6);
	_1b49ab451_Out = jule::Str();
	_227e30e7d_STDIN = 0LLU;
	_227e312ad_STDOUT = 1LLU;
	_227e31599_STDERR = 2LLU;
	_228095147_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_228095a93_acceptRanges = ({ auto __jule_collection = jule::Array<_2280956ec_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _2280956ec_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _2280956ec_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _2280956ec_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _2280956ec_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _2280956ec_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _2280956ec_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_20c54da39__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_20c54e0cd__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_20d8516dc__L = jule::new_ptr<_20d8b3e36_RangeTable>(_20d8b3e36_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_20d8b3485_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _20d8b3485_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_20d8b39b3_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _20d8b39b3_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_20d852600__LU = jule::new_ptr<_20d8b3e36_RangeTable>(_20d8b3e36_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_20d8b3485_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _20d8b3485_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _20d8b3485_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_20d8b39b3_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _20d8b39b3_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _20d8b39b3_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_20d8585d4_Letter = _20d8516dc__L;
	_20d85e8a4_Upper = _20d852600__LU;
	_20d8ac094__CaseRanges = ({ auto __jule_collection = jule::Slice<_20d8b2ece_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _20d8b2ece_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _20d8b2ece_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_20d8ac380__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_20d8ae162_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_20d8ae44d_caseOrbit = ({ auto __jule_collection = jule::Slice<_20d8b29d4_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _20d8b29d4_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _20d8b29d4_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_20da9658b_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_20da98280_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_20da9855a_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_20dbb9d85_PathStdlib = jule::Str();
	_20dbba094_PathExec = jule::Str();
	_20dbba34c_PathWd = jule::Str();
	_20dbba649_PathApi = jule::Str();
	_20dbba902_Os = jule::Str::lit("linux", 5);
	_20dbbabaa_Arch = jule::Str::lit("arm64", 5);
	_20dbc0770_Compiler = jule::Str();
	_20dbc1b6c_CompilerPath = jule::Str();
	_20dbc1d7b_CppStd = jule::Str::lit("cpp17", 5);
	_20dbc20ac_Shadowing = false;
	_20dbc2365_Transpilation = false;
	_20dbc261d_Test = false;
	_20dbc28c6_RC = true;
	_20dbc2c8e_Safety = true;
	_20dbc2ed1_Production = false;
	_1cab1176b_f32info = _1cab113c5_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1cab11a68_f64info = _1cab113c5_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1cab19488_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1cab1b1e3_powtab = ({ auto __jule_collection = jule::Slice<jule::I64>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1cab1bca4_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1cab1c0d4_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1cab202d5_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1cab244a4_leftCheats = ({ auto __jule_collection = jule::Slice<_1cab24075_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1cab24075_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1cab24075_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1cab24075_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1cab24075_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1cab24075_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1cab24075_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1cab24075_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1cab24075_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1cab24075_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1cab24075_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1cab24075_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1cab24075_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1cab24075_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1cab24075_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1cab24075_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1cab24075_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1cab24075_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1cab24075_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1cab24075_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1cab24075_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1cab24075_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1cab24075_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1cab24075_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1cab24075_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1cab24075_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1cab24075_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1cab24075_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1cab24075_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1cab24075_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1cab24075_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1cab24075_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1cab24075_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1cab24075_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1cab24075_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1cab24075_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1cab24075_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1cab24075_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1cab24075_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1cab24075_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1cab24075_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1cab24075_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1cab24075_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1cab24075_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1cab24075_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1cab24075_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1cab24075_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1cab24075_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1cab24075_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1cab24075_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1cab24075_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1cab24075_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1cab24075_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1cab24075_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1cab24075_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1cab24075_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1cab24075_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1cab24075_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1cab24075_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1cab24075_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1cab24075_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1cab24075_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1b2a29537_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1b2a29746_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U64,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(68LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(65LLU); __jule_collection; });
	_1b2a29a10_BinOps = ({ auto __jule_collection = jule::Array<jule::U64,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(63LLU); (*it++) = static_cast<jule::U64>(64LLU); (*it++) = static_cast<jule::U64>(65LLU); (*it++) = static_cast<jule::U64>(66LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(56LLU); (*it++) = static_cast<jule::U64>(57LLU); (*it++) = static_cast<jule::U64>(69LLU); (*it++) = static_cast<jule::U64>(70LLU); (*it++) = static_cast<jule::U64>(53LLU); (*it++) = static_cast<jule::U64>(52LLU); (*it++) = static_cast<jule::U64>(54LLU); (*it++) = static_cast<jule::U64>(55LLU); (*it++) = static_cast<jule::U64>(50LLU); (*it++) = static_cast<jule::U64>(51LLU); __jule_collection; });
	_1b2ac249d_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(58LLU); (*it++) = static_cast<jule::U64>(59LLU); __jule_collection; });
	_1b2ac2789_AssignOps = ({ auto __jule_collection = jule::Array<jule::U64,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(71LLU); (*it++) = static_cast<jule::U64>(40LLU); (*it++) = static_cast<jule::U64>(41LLU); (*it++) = static_cast<jule::U64>(43LLU); (*it++) = static_cast<jule::U64>(42LLU); (*it++) = static_cast<jule::U64>(44LLU); (*it++) = static_cast<jule::U64>(46LLU); (*it++) = static_cast<jule::U64>(45LLU); (*it++) = static_cast<jule::U64>(49LLU); (*it++) = static_cast<jule::U64>(48LLU); (*it++) = static_cast<jule::U64>(47LLU); __jule_collection; });
	_1b2ad0ca3_keywords = ({ auto __jule_collection = jule::Array<_1b2ad0874_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U64>(6LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U64>(2LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U64>(7LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U64>(9LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U64>(10LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U64>(11LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U64>(12LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U64>(13LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U64>(14LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U64>(16LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U64>(18LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U64>(20LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U64>(21LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U64>(22LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U64>(23LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U64>(24LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U64>(25LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U64>(26LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U64>(27LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U64>(28LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U64>(29LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U64>(30LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U64>(31LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U64>(32LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U64>(33LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U64>(34LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U64>(36LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U64>(37LLU)}; __jule_collection; });
	_1b2ad10d3_basicOps = ({ auto __jule_collection = jule::Array<_1b2ad0874_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U64>(19LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U64>(38LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U64>(8LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U64>(3LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U64>(5LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U64>(39LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U64>(17LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U64>(40LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U64>(41LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U64>(42LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U64>(43LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U64>(44LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U64>(45LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U64>(46LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U64>(47LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U64>(48LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U64>(49LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U64>(50LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U64>(51LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U64>(52LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U64>(53LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U64>(54LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U64>(55LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U64>(56LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U64>(57LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U64>(58LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U64>(59LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U64>(60LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U64>(61LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U64>(62LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U64>(63LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U64>(64LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U64>(65LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U64>(66LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U64>(67LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U64>(68LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U64>(69LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U64>(70LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U64>(71LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U64>(35LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U64>(72LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U64>(73LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U64>(76LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U64>(77LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U64>(74LLU)}; (*it++) = _1b2ad0874_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U64>(75LLU)}; __jule_collection; });
	_1b2c6b191_BitSize = 0LL;
	_1b2c6b3e4_SysInt = jule::Str();
	_1b2c6b603_SysUint = jule::Str();
	_1b2c9c348_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1b2e91c68_primNil = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1b2e92065_primVoid = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e9231d_primAny = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e9261a_primStr = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e928c3_primBool = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e92b7b_primUintptr = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e92e34_primUint = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e932ec_primInt = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e9353e_primI8 = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e937d6_primI16 = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e93a8e_primI32 = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e93d47_primI64 = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e94100_primU8 = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e943a8_primU16 = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e94661_primU32 = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e94b4a_primU64 = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e94d8c_primF32 = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b2e9509b_primF64 = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1b2dcdab7_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)});
	_1b47000b8_emptyData = jule::new_ptr<_1b4700915_data>(_1b4700915_data{._field_boundary=jule::Ptr<_1b47021ec_boundary>(nullptr), ._field_nils=jule::Ptr<_1b46dd3c5_nils>(nullptr), ._field_dynamic=jule::Ptr<_1b46eccdb_dynamic>(nullptr)});
	_1b4704d8c_Copy = false;
	_1b4705189_Deadcode = false;
	_1b4705442_Append = false;
	_1b470573e_Math = false;
	_1b47059e7_Access = false;
	_1b4705ca0_Inline = false;
	_1b4706058_Ptr = false;
	_1b4706421_Cond = false;
	_1b4706663_Str = false;
	_1b470690a_Slice = false;
	_1b4706bb3_Assign = false;
	_1b4706e6b_Exceptional = false;
	_1b4707224_Iter = false;
	_1b47074cc_Dynamic = false;
	_1b4835154_exprEnabled = false;
	_1b4835363_scopeEnabled = false;
	_1b4910262_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1b4838993_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1b491ac0c_generalGCPtr = jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2dbd26b_Sptr>(_1b2dbd26b_Sptr{._field_Elem=jule::new_ptr<_1b2db1627_TypeKind>(_1b2db1627_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1b2db9740_Prim>(_1b2db9740_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1b2db1171_Kind_mptr_data23)});
	_20d8abca8_CaseRanges = _20d8ac094__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	entry_point();

	return EXIT_SUCCESS;
}