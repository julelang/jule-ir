// Auto generated by JuleC.
// JuleC version: beta 0.0.6 @master
// Date: 16/10/2023 20.28 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -O0 -Wno-everything --std=c++17 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   
#include "std/sys/syscall_unix.hpp"                                   

struct _2200229c3_Importer;
struct _2300b54e5_Kind;
struct _206c9641e_Lookup;
struct _1dcda1323_Reader;
struct _1dcda1323_Writer;
struct _1dcda1323_Stream;
struct _1dccb6843_CommonFlag;

struct _238839ed6_AnsiEscape;


struct _238839ed6_Logger;


struct _23894b9cc_LazyBuff;


struct _23886c227_Log;


struct _2389d34d1_FloatInfo;


struct _2389d34d1_DecimalSlice;


struct _239796a57_LeftCheat;


struct _239796a57_Decimal;


struct _222216247_FoldPair;


struct _222216247_CaseRange;


struct _222216247_Range16;


struct _222216247_Range32;


struct _222216247_RangeTable;


struct _2221ee98e_accept_range;


struct _222bb918e_DirEntry;


struct _222bb918e_Directory;


struct _222bcb8bb_File;


struct _222bc7e6c_Status;


struct _2220dce43_Token;


struct _22212e407_File;


struct _221db36ec_KindPair;


struct _221db36ec_Lex;


struct _221d8c242_Ast;


struct _221d8b043_CommentGroup;


struct _221d8b043_NamespaceTypeDecl;


struct _221d8b043_SptrTypeDecl;


struct _221d8b043_SlcTypeDecl;


struct _221d8b043_TupleTypeDecl;


struct _221d8b043_PtrTypeDecl;


struct _221d8b043_ArrTypeDecl;


struct _221d8b043_MapTypeDecl;


struct _221d8b043_RetTypeDecl;


struct _221d8b043_TupleExpr;


struct _221d8b043_CastExpr;


struct _221d8b043_StructLit;


struct _221d8b043_ScopeTree;


struct _221d8b043_Conditional;


struct _221e0ec98_FileInfo;


struct _221e0ec98_PackageInfo;


struct _221e8c8b4_Stmt;


struct _221e8c8b4_ScopeParser;


struct _23999731d_CallData;


struct _23999731d_Precedencer;


struct _23999731d_ExprBuilder;


struct _222e5128e_Parser;


struct _222e76d20_TypeBuilder;


struct _206e210e3_Const;


struct _2398d04dc_FieldIns;


struct _2398d04dc_StructIns;


struct _222edb48e_RetType;


struct _222edb48e_ParamIns;


struct _222edb48e_FnIns;


struct _221db702a_ReferenceStack;


struct _221db702a_SymbolBuilder;


struct _2300254bb_Scope;


struct _2300254bb_If;


struct _2300254bb_Else;


struct _2300254bb_Conditional;


struct _2300254bb_InfIter;


struct _2300254bb_WhileIter;


struct _2300254bb_RangeIter;


struct _2300254bb_ContSt;


struct _2300254bb_BreakSt;


struct _2300254bb_Label;


struct _2300254bb_GotoSt;


struct _2300254bb_Postfix;


struct _2300254bb_Assign;


struct _2300254bb_MultiAssign;


struct _2300254bb_Match;


struct _2300254bb_Case;


struct _2300254bb_FallSt;


struct _2300254bb_RetSt;


struct _2300254bb_ScopeGoto;


struct _2300254bb_ScopeChecker;


struct _21eedb492_BinopExprModel;


struct _21eedb492_UnaryExprModel;


struct _21eedb492_StructArgExprModel;


struct _21eedb492_StructLitExprModel;


struct _21eedb492_AllocStructLitExprModel;


struct _21eedb492_CastingExprModel;


struct _21eedb492_SliceExprModel;


struct _21eedb492_IndexigExprModel;


struct _21eedb492_AnonFnExprModel;


struct _21eedb492_KeyValPairExprModel;


struct _21eedb492_MapExprModel;


struct _21eedb492_SlicingExprModel;


struct _21eedb492_TraitSubIdentExprModel;


struct _21eedb492_StructSubIdentExprModel;


struct _21eedb492_StructStaticIdentExprModel;


struct _21eedb492_ArrayExprModel;


struct _21eedb492_CommonIdentExprModel;


struct _21eedb492_CommonSubIdentExprModel;


struct _21eedb492_TupleExprModel;


struct _21eedb492_BuiltinOutCallExprModel;


struct _21eedb492_BuiltinOutlnCallExprModel;


struct _21eedb492_BuiltinCloneCallExprModel;


struct _21eedb492_BuiltinNewCallExprModel;


struct _21eedb492_BuiltinPanicCallExprModel;


struct _21eedb492_BuiltinMakeCallExprModel;


struct _21eedb492_BuiltinAppendCallExprModel;


struct _21eedb492_BuiltinErrorCallExprModel;


struct _21eedb492_SizeofExprModel;


struct _21eedb492_AlignofExprModel;


struct _21eedb492_RuneExprModel;


struct _21eedb492_IntegratedToStrExprModel;


struct _21eedb492_TernaryExprModel;


struct _21eee219b_DirectiveChecker;


struct _2200229c3_Package;


struct _21eee051d_Sema;


struct _2200a2657_IterRelation;


struct _2200223c9_RangeChecker;


struct _2067a6b66_SymbolTable;


struct _20683ebaa_Data;


struct _20683ebaa_Value;


struct _20683ebaa_Eval;


struct _2300b54e5_TypeKind;


struct _2300b54e5_TypeSymbol;


struct _2300b54e5_Prim;


struct _2300b54e5_Sptr;


struct _2300b54e5_Slc;


struct _2300b54e5_Tuple;


struct _2300b54e5_Map;


struct _2300b54e5_Arr;


struct _2300b54e5_Ptr;


struct _2300b54e5_Referencer;


struct _221a72a71_DirectiveEval;


struct _221c9ee02_PlainImporter;


struct _2219e5a9e_OrderedDefines;


struct _2219e5a9e_DefineOrderer;


struct _221eb825d_ScopeDeadCode;


struct _1dcda1323_FileStream;


struct _1dcdd7ca5_Scanner;


struct _1dce1143d_AbsTime;


struct _1dce1143d_Time;


struct _1dce1143d_Duration;


struct _1dccb6843_Flag_0;

struct _1dccb6843_Flag_1;

struct _1dccb6843_Flag_2;

struct _1dccb6843_Flag_3;

struct _1dccb6843_Flag_4;


struct _1dccb6843_FlagSet;


struct _221d8b043_If;


struct _221d8b043_Else;


struct _221d8b043_Directive;


struct _221d8b043_TypeAliasDecl;


struct _221d8b043_Case;


struct _21eedb492_FnCallExprModel;


struct _221d8b043_MatchCase;


struct _221d8b043_UseDecl;


struct _221d8b043_EnumItemDecl;


struct _221d8b043_EnumDecl;


struct _221d8b043_FieldDecl;


struct _221d8b043_StructDecl;


struct _221d8b043_TraitDecl;


struct _221d8b043_Impl;


struct _221d8b043_Expr;


struct _221d8b043_UseExpr;


struct _221d8b043_TypeDecl;


struct _221d8b043_LitExpr;


struct _221d8b043_UnsafeExpr;


struct _221d8b043_CoExpr;


struct _221d8b043_IdentExpr;


struct _222d4854e_AssignInfo;


struct _221d8b043_UnaryExpr;


struct _221d8b043_VariadicExpr;


struct _221d8b043_IdentTypeDecl;


struct _2398d04dc_Field;


struct _2398d04dc_Struct;


struct _221d8b043_NsSelectionExpr;


struct _221d8b043_SubIdentExpr;


struct _221d8b043_BinopExpr;


struct _222edb48e_Param;


struct _222edb48e_Fn;


struct _221d8b043_FnCallExpr;


struct _2200229c3_ImportInfo;


struct _221d8b043_FieldExprPair;


struct _221d8b043_Node;


struct _221db702a_Pass;


struct _2200a2657_Var;


struct _2200223c9_TypeCompatibilityChecker;


struct _2200223c9_AssignTypeChecker;


struct _2200223c9_DynamicTypeAnnotation;


struct _2200223c9_FnCallArgChecker;


struct _2200223c9_StructLitChecker;


struct _221d8b043_BraceLit;


struct _2200223c9_RetTypeChecker;


struct _2300167cb_Trait;


struct _23001604a_EnumItem;


struct _23001604a_Enum;


struct _230019081_Impl;


struct _20683ebaa_BinopSolver;


struct _2300b54e5_TypeAlias;


struct _221d8b043_KeyValPair;


struct _221d8b043_SliceExpr;


struct _221d8b043_IndexingExpr;


struct _221d8b043_SlicingExpr;


struct _221d8b043_TernaryExpr;


struct _221d8b043_GenericDecl;


struct _221d8b043_LabelSt;


struct _221d8b043_GotoSt;


struct _221d8b043_FallSt;


struct _221d8b043_AssignLeft;


struct _2300b54e5_TypeChecker;


struct _221d8b043_AssignSt;


struct _221d8b043_Comment;


struct _239823e36_IR;


struct _221d8b043_ParamDecl;


struct _221d8b043_FnDecl;


struct _221d8b043_VarDecl;


struct _221d8b043_RetSt;


struct _221d8b043_Iter;


struct _221d8b043_WhileKind;


struct _2300254bb_ScopeLabel;


struct _221d8b043_RangeKind;


struct _221d8b043_BreakSt;


struct _221d8b043_ContSt;


struct _1dccb6843_ArgParser;

struct _2200229c3_Importer {
	virtual ~_2200229c3_Importer(void) {}

	virtual jule::Ptr<_2200229c3_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ptr<_221d8c242_Ast>>,jule::Slice<_23886c227_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ptr<_2200229c3_ImportInfo>) {}
};

struct _2300b54e5_Kind {
	virtual ~_2300b54e5_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind> _4722_other) { return {}; }
};

struct _206c9641e_Lookup {
	virtual ~_206c9641e_Lookup(void) {}

	virtual jule::Ptr<_2200229c3_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ptr<_2200229c3_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ptr<_2200a2657_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ptr<_2300b54e5_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ptr<_2398d04dc_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ptr<_222edb48e_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ptr<_2300167cb_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ptr<_23001604a_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _1dcda1323_Reader {
	virtual ~_1dcda1323_Reader(void) {}

	virtual jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8> _1331_buff) { return {}; }
};

struct _1dcda1323_Writer {
	virtual ~_1dcda1323_Writer(void) {}

	virtual jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8> _2028_buff) { return {}; }
};

struct _1dcda1323_Stream {
	virtual ~_1dcda1323_Stream(void) {}

	virtual jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8> _2631_buff) { return {}; }
	virtual jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8> _2828_buff) { return {}; }
};

struct _1dccb6843_CommonFlag {
	virtual ~_1dccb6843_CommonFlag(void) {}

	virtual jule::Str _method_name(void) { return {}; }
	virtual jule::I32 _method_short(void) { return {}; }
	virtual jule::Str _method_what(void) { return {}; }
	virtual void _method_reset(void) {}
};


struct _238839ed6_AnsiEscape {
	

	_238839ed6_AnsiEscape(void) = default;

	static inline void _static_method_reset(void);


	static inline void _static_method_print(jule::Str,jule::Str);


	inline bool operator==(const _238839ed6_AnsiEscape &_Src) const { return true; }

	inline bool operator!=(const _238839ed6_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _238839ed6_Logger {
	

	_238839ed6_Logger(void) = default;

	static inline void _static_method_log_flat(_23886c227_Log&);


	static inline void _static_method_log_error(_23886c227_Log&);


	static inline void _static_method_log(_23886c227_Log&);


	static inline void _static_method_print_logs(jule::Slice<_23886c227_Log>&);


	inline bool operator==(const _238839ed6_Logger &_Src) const { return true; }

	inline bool operator!=(const _238839ed6_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _23894b9cc_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::Int _field_w = jule::Int();
	jule::Str _field_vol_and_path = jule::Str();
	jule::Int _field_vol_len = jule::Int();


	_23894b9cc_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_23894b9cc_LazyBuff(void) = default;

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _23894b9cc_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _23894b9cc_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _23886c227_Log {
	jule::Int _field_kind = 0LLU;
	jule::Int _field_row = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();


	_23886c227_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_23886c227_Log(void) = default;

	inline bool operator==(const _23886c227_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggestion == _Src._field_suggestion;
	}

	inline bool operator!=(const _23886c227_Log &_Src) const { return !this->operator==(_Src); }
};


struct _2389d34d1_FloatInfo {
	jule::Uint _field_mantbits = jule::Uint();
	jule::Uint _field_expbits = jule::Uint();
	jule::Int _field_bias = jule::Int();


	_2389d34d1_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_2389d34d1_FloatInfo(void) = default;

	inline bool operator==(const _2389d34d1_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _2389d34d1_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _2389d34d1_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::Int _field_nd = jule::Int();
	jule::Int _field_dp = jule::Int();
	jule::Bool _field_neg = jule::Bool();


	_2389d34d1_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_2389d34d1_DecimalSlice(void) = default;

	inline bool operator==(const _2389d34d1_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _2389d34d1_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _239796a57_LeftCheat {
	jule::Int _field_delta = jule::Int();
	jule::Str _field_cutoff = jule::Str();


	_239796a57_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_239796a57_LeftCheat(void) = default;

	inline bool operator==(const _239796a57_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _239796a57_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _239796a57_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::Int _field_nd = jule::Int();
	jule::Int _field_dp = jule::Int();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();


	_239796a57_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_239796a57_Decimal(void) = default;

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_2389d34d1_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _239796a57_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _239796a57_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _222216247_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();


	_222216247_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_222216247_FoldPair(void) = default;

	inline bool operator==(const _222216247_FoldPair &_Src) const {
		return 
			this->_field_from == _Src._field_from &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _222216247_FoldPair &_Src) const { return !this->operator==(_Src); }
};


struct _222216247_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();


	_222216247_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_222216247_CaseRange(void) = default;

	inline bool operator==(const _222216247_CaseRange &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_delta == _Src._field_delta;
	}

	inline bool operator!=(const _222216247_CaseRange &_Src) const { return !this->operator==(_Src); }
};


struct _222216247_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();


	_222216247_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_222216247_Range16(void) = default;

	inline bool operator==(const _222216247_Range16 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _222216247_Range16 &_Src) const { return !this->operator==(_Src); }
};


struct _222216247_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();


	_222216247_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_222216247_Range32(void) = default;

	inline bool operator==(const _222216247_Range32 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _222216247_Range32 &_Src) const { return !this->operator==(_Src); }
};


struct _222216247_RangeTable {
	jule::Slice<_222216247_Range16> _field_r16 = jule::Slice<_222216247_Range16>();
	jule::Slice<_222216247_Range32> _field_r32 = jule::Slice<_222216247_Range32>();
	jule::Int _field_latin_offset = jule::Int();


	_222216247_RangeTable(jule::Slice<_222216247_Range16> __param_r16, jule::Slice<_222216247_Range32> __param_r32, jule::Int __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_222216247_RangeTable(void) = default;

	inline bool operator==(const _222216247_RangeTable &_Src) const {
		return 
			this->_field_r16 == _Src._field_r16 &&
			this->_field_r32 == _Src._field_r32 &&
			this->_field_latin_offset == _Src._field_latin_offset;
	}

	inline bool operator!=(const _222216247_RangeTable &_Src) const { return !this->operator==(_Src); }
};


struct _2221ee98e_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();


	_2221ee98e_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_2221ee98e_accept_range(void) = default;

	inline bool operator==(const _2221ee98e_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _2221ee98e_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _222bb918e_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_222bc7e6c_Status> _field_stat = jule::Ptr<_222bc7e6c_Status>();


	_222bb918e_DirEntry(jule::Str __param_name, jule::Ptr<_222bc7e6c_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_222bb918e_DirEntry(void) = default;

	inline bool operator==(const _222bb918e_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _222bb918e_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _222bb918e_Directory {
	

	_222bb918e_Directory(void) = default;

	static inline std::tuple<jule::Slice<jule::Ptr<_222bb918e_DirEntry>>,jule::Int> _static_method_read(jule::Str);


	static inline jule::Int _static_method_create(jule::Str);


	static inline jule::Int _static_method_remove(jule::Str);


	inline bool operator==(const _222bb918e_Directory &_Src) const { return true; }

	inline bool operator!=(const _222bb918e_Directory &_Src) const { return !this->operator==(_Src); }
};


struct _222bcb8bb_File {
	jule::Uintptr _field_handle = jule::Uintptr();


	_222bcb8bb_File(jule::Uintptr __param_handle): _field_handle(__param_handle) {}

	

	_222bcb8bb_File(void) = default;

	static inline std::tuple<jule::Ptr<_222bcb8bb_File>,jule::Int> _static_method_open(jule::Str,jule::Int,jule::Int);


	static inline jule::Int _static_method_remove(jule::Str);


	inline std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	inline std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	static inline jule::Ptr<_222bcb8bb_File> _static_method_new(jule::Uintptr);


	static inline std::tuple<jule::Ptr<_222bcb8bb_File>,jule::Int> _static_method_create(jule::Str);


	static inline std::tuple<jule::Slice<jule::U8>,jule::Int> _static_method_read(jule::Str);


	static inline jule::Int _static_method_write(jule::Str,jule::Slice<jule::U8>,jule::Int);


	inline std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	inline jule::Int _method_close(void);


	inline bool operator==(const _222bcb8bb_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _222bcb8bb_File &_Src) const { return !this->operator==(_Src); }
};


struct _222bc7e6c_Status {
	jule::Uint _field_mode = jule::Uint();
	jule::Uint _field_size = jule::Uint();


	_222bc7e6c_Status(jule::Uint __param_mode, jule::Uint __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_222bc7e6c_Status(void) = default;

	static inline std::tuple<jule::Ptr<_222bc7e6c_Status>,jule::Int> _static_method_of(jule::Str);


	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _222bc7e6c_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _222bc7e6c_Status &_Src) const { return !this->operator==(_Src); }
};


struct _2220dce43_Token {
	jule::Ptr<_22212e407_File> _field_file = jule::Ptr<_22212e407_File>();
	jule::Int _field_row = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Str _field_kind = jule::Str();
	jule::Uint _field_id = 0LLU;


	_2220dce43_Token(jule::Ptr<_22212e407_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_2220dce43_Token(void) = default;

	inline jule::Int _method_prec(void);


	inline bool operator==(const _2220dce43_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _2220dce43_Token &_Src) const { return !this->operator==(_Src); }
};


struct _22212e407_File {
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Str _field__path = jule::Str();
	jule::Slice<_2220dce43_Token> _field__tokens = jule::Slice<_2220dce43_Token>();


	_22212e407_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_2220dce43_Token> __param__tokens): _field_data(__param_data), _field__path(__param__path), _field__tokens(__param__tokens) {}

	

	_22212e407_File(void) = default;

	inline jule::Bool _method_is_ok(void);


	inline void _method_fill(jule::Slice<jule::U8>);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline jule::Slice<_2220dce43_Token> _method_tokens(void);


	inline jule::Str _method_get_row(jule::Int);


	inline bool operator==(const _22212e407_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _22212e407_File &_Src) const { return !this->operator==(_Src); }
};


struct _221db36ec_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::Uint _field_id = 0LLU;


	_221db36ec_KindPair(jule::Str __param_kind, jule::Uint __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_221db36ec_KindPair(void) = default;

	inline bool operator==(const _221db36ec_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _221db36ec_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _221db36ec_Lex {
	jule::Slice<_2220dce43_Token> _field_tokens = jule::Slice<_2220dce43_Token>();
	jule::Ptr<_22212e407_File> _field_file = jule::Ptr<_22212e407_File>();
	jule::Int _field_pos = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Int _field_row = jule::Int();
	jule::Slice<_23886c227_Log> _field_errors = jule::Slice<_23886c227_Log>();


	_221db36ec_Lex(jule::Slice<_2220dce43_Token> __param_tokens, jule::Ptr<_22212e407_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_23886c227_Log> __param_errors): _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_221db36ec_Lex(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_2220dce43_Token&,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>&);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_2220dce43_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>&);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>&);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>&,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>&);


	inline jule::Str _method_lex_str(void);


	inline jule::Bool _method_is_first_token_of_line(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>&,jule::Str,jule::Uint,_2220dce43_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_2220dce43_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>&,_2220dce43_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>&,_2220dce43_Token&);


	inline _2220dce43_Token _method_token(void);


	inline bool operator==(const _221db36ec_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _221db36ec_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _221d8c242_Ast {
	jule::Ptr<_22212e407_File> _field_file = jule::Ptr<_22212e407_File>();
	jule::Slice<jule::Ptr<_221d8b043_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_221d8b043_Directive>>();
	jule::Slice<jule::Ptr<_221d8b043_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_221d8b043_UseDecl>>();
	jule::Slice<jule::Ptr<_221d8b043_Impl>> _field_impls = jule::Slice<jule::Ptr<_221d8b043_Impl>>();
	jule::Slice<jule::Ptr<_221d8b043_Comment>> _field_comments = jule::Slice<jule::Ptr<_221d8b043_Comment>>();
	jule::Slice<_221d8b043_Node> _field_decls = jule::Slice<_221d8b043_Node>();


	_221d8c242_Ast(jule::Ptr<_22212e407_File> __param_file, jule::Slice<jule::Ptr<_221d8b043_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_221d8b043_UseDecl>> __param_use_decls, jule::Slice<jule::Ptr<_221d8b043_Impl>> __param_impls, jule::Slice<jule::Ptr<_221d8b043_Comment>> __param_comments, jule::Slice<_221d8b043_Node> __param_decls): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_impls(__param_impls), _field_comments(__param_comments), _field_decls(__param_decls) {}

	

	_221d8c242_Ast(void) = default;

	inline bool operator==(const _221d8c242_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _221d8c242_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_CommentGroup {
	jule::Slice<jule::Ptr<_221d8b043_Comment>> _field_comments = jule::Slice<jule::Ptr<_221d8b043_Comment>>();


	_221d8b043_CommentGroup(jule::Slice<jule::Ptr<_221d8b043_Comment>> __param_comments): _field_comments(__param_comments) {}

	

	_221d8b043_CommentGroup(void) = default;

	inline bool operator==(const _221d8b043_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _221d8b043_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_NamespaceTypeDecl {
	jule::Slice<_2220dce43_Token> _field_idents = jule::Slice<_2220dce43_Token>();
	jule::Ptr<_221d8b043_IdentTypeDecl> _field_kind = jule::Ptr<_221d8b043_IdentTypeDecl>();


	_221d8b043_NamespaceTypeDecl(jule::Slice<_2220dce43_Token> __param_idents, jule::Ptr<_221d8b043_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_221d8b043_NamespaceTypeDecl(void) = default;

	inline bool operator==(const _221d8b043_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _221d8b043_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_SptrTypeDecl {
	jule::Ptr<_221d8b043_TypeDecl> _field_elem = jule::Ptr<_221d8b043_TypeDecl>();


	_221d8b043_SptrTypeDecl(jule::Ptr<_221d8b043_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_221d8b043_SptrTypeDecl(void) = default;

	inline bool operator==(const _221d8b043_SptrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _221d8b043_SptrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_SlcTypeDecl {
	jule::Ptr<_221d8b043_TypeDecl> _field_elem = jule::Ptr<_221d8b043_TypeDecl>();


	_221d8b043_SlcTypeDecl(jule::Ptr<_221d8b043_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_221d8b043_SlcTypeDecl(void) = default;

	inline bool operator==(const _221d8b043_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _221d8b043_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_TupleTypeDecl {
	jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_221d8b043_TypeDecl>>();


	_221d8b043_TupleTypeDecl(jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_221d8b043_TupleTypeDecl(void) = default;

	inline bool operator==(const _221d8b043_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _221d8b043_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_PtrTypeDecl {
	jule::Ptr<_221d8b043_TypeDecl> _field_elem = jule::Ptr<_221d8b043_TypeDecl>();


	_221d8b043_PtrTypeDecl(jule::Ptr<_221d8b043_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_221d8b043_PtrTypeDecl(void) = default;

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _221d8b043_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _221d8b043_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_ArrTypeDecl {
	jule::Ptr<_221d8b043_TypeDecl> _field_elem = jule::Ptr<_221d8b043_TypeDecl>();
	jule::Ptr<_221d8b043_Expr> _field_size = jule::Ptr<_221d8b043_Expr>();


	_221d8b043_ArrTypeDecl(jule::Ptr<_221d8b043_TypeDecl> __param_elem, jule::Ptr<_221d8b043_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_221d8b043_ArrTypeDecl(void) = default;

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _221d8b043_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _221d8b043_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_MapTypeDecl {
	jule::Ptr<_221d8b043_TypeDecl> _field_key = jule::Ptr<_221d8b043_TypeDecl>();
	jule::Ptr<_221d8b043_TypeDecl> _field_val = jule::Ptr<_221d8b043_TypeDecl>();


	_221d8b043_MapTypeDecl(jule::Ptr<_221d8b043_TypeDecl> __param_key, jule::Ptr<_221d8b043_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_221d8b043_MapTypeDecl(void) = default;

	inline bool operator==(const _221d8b043_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _221d8b043_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_RetTypeDecl {
	jule::Ptr<_221d8b043_TypeDecl> _field_kind = jule::Ptr<_221d8b043_TypeDecl>();
	jule::Slice<_2220dce43_Token> _field_idents = jule::Slice<_2220dce43_Token>();


	_221d8b043_RetTypeDecl(jule::Ptr<_221d8b043_TypeDecl> __param_kind, jule::Slice<_2220dce43_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_221d8b043_RetTypeDecl(void) = default;

	inline bool operator==(const _221d8b043_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _221d8b043_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_TupleExpr {
	jule::Slice<jule::Ptr<_221d8b043_Expr>> _field_expr = jule::Slice<jule::Ptr<_221d8b043_Expr>>();


	_221d8b043_TupleExpr(jule::Slice<jule::Ptr<_221d8b043_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_221d8b043_TupleExpr(void) = default;

	inline bool operator==(const _221d8b043_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_CastExpr {
	jule::Ptr<_221d8b043_TypeDecl> _field_kind = jule::Ptr<_221d8b043_TypeDecl>();
	jule::Any _field_expr = jule::Any();


	_221d8b043_CastExpr(jule::Ptr<_221d8b043_TypeDecl> __param_kind, jule::Any __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_221d8b043_CastExpr(void) = default;

	inline bool operator==(const _221d8b043_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_StructLit {
	jule::Ptr<_221d8b043_TypeDecl> _field_kind = jule::Ptr<_221d8b043_TypeDecl>();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_221d8b043_StructLit(jule::Ptr<_221d8b043_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs): _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_221d8b043_StructLit(void) = default;

	inline bool operator==(const _221d8b043_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _221d8b043_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_ScopeTree {
	jule::Ptr<_221d8b043_ScopeTree> _field_parent = jule::Ptr<_221d8b043_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_221d8b043_ScopeTree(jule::Ptr<_221d8b043_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_221d8b043_ScopeTree(void) = default;

	inline bool operator==(const _221d8b043_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _221d8b043_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_Conditional {
	jule::Ptr<_221d8b043_If> _field_head = jule::Ptr<_221d8b043_If>();
	jule::Slice<jule::Ptr<_221d8b043_If>> _field_tail = jule::Slice<jule::Ptr<_221d8b043_If>>();
	jule::Ptr<_221d8b043_Else> _field_default = jule::Ptr<_221d8b043_Else>();


	_221d8b043_Conditional(jule::Ptr<_221d8b043_If> __param_head, jule::Slice<jule::Ptr<_221d8b043_If>> __param_tail, jule::Ptr<_221d8b043_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_221d8b043_Conditional(void) = default;

	inline bool operator==(const _221d8b043_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _221d8b043_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _221e0ec98_FileInfo {
	jule::Ptr<_221d8c242_Ast> _field_ast = jule::Ptr<_221d8c242_Ast>();
	jule::Slice<_23886c227_Log> _field_errors = jule::Slice<_23886c227_Log>();


	_221e0ec98_FileInfo(jule::Ptr<_221d8c242_Ast> __param_ast, jule::Slice<_23886c227_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_221e0ec98_FileInfo(void) = default;

	inline bool operator==(const _221e0ec98_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _221e0ec98_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _221e0ec98_PackageInfo {
	jule::Slice<jule::Ptr<_221e0ec98_FileInfo>> _field_files = jule::Slice<jule::Ptr<_221e0ec98_FileInfo>>();


	_221e0ec98_PackageInfo(jule::Slice<jule::Ptr<_221e0ec98_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_221e0ec98_PackageInfo(void) = default;

	inline bool operator==(const _221e0ec98_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _221e0ec98_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _221e8c8b4_Stmt {
	jule::Slice<_2220dce43_Token> _field_tokens = jule::Slice<_2220dce43_Token>();
	jule::Bool _field_terminated = jule::Bool();


	_221e8c8b4_Stmt(jule::Slice<_2220dce43_Token> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_221e8c8b4_Stmt(void) = default;

	inline bool operator==(const _221e8c8b4_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _221e8c8b4_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _221e8c8b4_ScopeParser {
	jule::Ptr<_222e5128e_Parser> _field_p = jule::Ptr<_222e5128e_Parser>();
	jule::Ptr<_221d8b043_ScopeTree> _field_s = jule::Ptr<_221d8b043_ScopeTree>();
	jule::Slice<jule::Ptr<_221e8c8b4_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_221e8c8b4_Stmt>>();
	jule::Int _field_pos = jule::Int();


	_221e8c8b4_ScopeParser(jule::Ptr<_222e5128e_Parser> __param_p, jule::Ptr<_221d8b043_ScopeTree> __param_s, jule::Slice<jule::Ptr<_221e8c8b4_Stmt>> __param_stmts, jule::Int __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stmts(__param_stmts), _field_pos(__param_pos) {}

	

	_221e8c8b4_ScopeParser(void) = default;

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_2220dce43_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_insert_as_next(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221e8c8b4_Stmt> _method_next(void);


	inline jule::Ptr<_221d8b043_ScopeTree> _method_build_scope(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_var_st(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_ret_st(jule::Slice<_2220dce43_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ptr<_221e8c8b4_Stmt>&);


	inline jule::Ptr<_221d8b043_WhileKind> _method_build_while_iter_kind(jule::Slice<_2220dce43_Token>&);


	inline jule::Slice<jule::Slice<_2220dce43_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_VarDecl> _method_build_range_kind_key(jule::Slice<_2220dce43_Token>&);


	inline jule::Slice<jule::Ptr<_221d8b043_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_2220dce43_Token>>&);


	inline void _method_setup_range_kind_keys_plain(jule::Ptr<_221d8b043_RangeKind>&,jule::Slice<_2220dce43_Token>&);


	inline void _method_setup_range_kind_keys_explicit(jule::Ptr<_221d8b043_RangeKind>&,jule::Slice<_2220dce43_Token>&);


	inline void _method_setup_range_kind_keys(jule::Ptr<_221d8b043_RangeKind>&,jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_RangeKind> _method_build_range_iter_kind(jule::Slice<_2220dce43_Token>&,jule::Slice<_2220dce43_Token>&,_2220dce43_Token&);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_2220dce43_Token>&,_2220dce43_Token&);


	inline jule::Any _method_build_common_iter(jule::Slice<_2220dce43_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ptr<_221e8c8b4_Stmt>&);


	inline jule::Any _method_build_break_st(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_cont_st(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_If> _method_build_if(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_Else> _method_build_else(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_2220dce43_Token>);


	inline jule::Any _method_build_comment_st(_2220dce43_Token&);


	inline jule::Any _method_build_co_call_st(jule::Slice<_2220dce43_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_fall_st(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_2220dce43_Token>&);


	inline void _method_push_case_expr(jule::Slice<_2220dce43_Token>,_2220dce43_Token,jule::Bool,jule::Slice<jule::Ptr<_221d8b043_Expr>>&);


	inline jule::Slice<jule::Ptr<_221d8b043_Expr>> _method_build_case_exprs(jule::Slice<_2220dce43_Token>&,jule::Bool);


	inline jule::Ptr<_221d8b043_ScopeTree> _method_build_case_scope(jule::Slice<_2220dce43_Token>&);


	inline std::tuple<jule::Ptr<_221d8b043_Case>,jule::Bool> _method_build_case(jule::Slice<_2220dce43_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ptr<_221d8b043_Case>>,jule::Ptr<_221d8b043_Else>> _method_build_cases(jule::Slice<_2220dce43_Token>,jule::Bool);


	inline jule::Ptr<_221d8b043_MatchCase> _method_build_match_case(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_ScopeTree> _method_build_scope_st(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_LabelSt> _method_build_label_st(jule::Slice<_2220dce43_Token>&);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_222d4854e_AssignInfo> _method_build_assign_info(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_AssignLeft> _method_build_assign_l(jule::Slice<_2220dce43_Token>&);


	inline jule::Slice<jule::Ptr<_221d8b043_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_2220dce43_Token>>&);


	inline std::tuple<jule::Ptr<_221d8b043_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_2220dce43_Token>&);


	inline std::tuple<jule::Ptr<_221d8b043_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_2220dce43_Token>);


	inline std::tuple<jule::Ptr<_221d8b043_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_use_expr(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_st(jule::Ptr<_221e8c8b4_Stmt>&);


	inline void _method_build(jule::Slice<_2220dce43_Token>&,jule::Ptr<_221d8b043_ScopeTree>&);


	inline bool operator==(const _221e8c8b4_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _221e8c8b4_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _23999731d_CallData {
	jule::Slice<_2220dce43_Token> _field_expr_tokens = jule::Slice<_2220dce43_Token>();
	jule::Slice<_2220dce43_Token> _field_args_tokens = jule::Slice<_2220dce43_Token>();
	jule::Slice<_2220dce43_Token> _field_generics_tokens = jule::Slice<_2220dce43_Token>();


	_23999731d_CallData(jule::Slice<_2220dce43_Token> __param_expr_tokens, jule::Slice<_2220dce43_Token> __param_args_tokens, jule::Slice<_2220dce43_Token> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_23999731d_CallData(void) = default;

	inline bool operator==(const _23999731d_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _23999731d_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _23999731d_Precedencer {
	jule::Slice<jule::Slice<jule::Any>> _field_pairs = jule::Slice<jule::Slice<jule::Any>>();


	_23999731d_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs): _field_pairs(__param_pairs) {}

	

	_23999731d_Precedencer(void) = default;

	inline void _method_set(jule::Int,jule::Any);


	inline jule::Any _method_get_lower(void);


	inline bool operator==(const _23999731d_Precedencer &_Src) const {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	inline bool operator!=(const _23999731d_Precedencer &_Src) const { return !this->operator==(_Src); }
};


struct _23999731d_ExprBuilder {
	jule::Ptr<_222e5128e_Parser> _field_p = jule::Ptr<_222e5128e_Parser>();


	_23999731d_ExprBuilder(jule::Ptr<_222e5128e_Parser> __param_p): _field_p(__param_p) {}

	

	_23999731d_ExprBuilder(void) = default;

	inline void _method_push_err(_2220dce43_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_221d8b043_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_2220dce43_Token>>&);


	inline jule::Ptr<_221d8b043_LitExpr> _method_build_lit(_2220dce43_Token);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_primitive_type(_2220dce43_Token&);


	inline jule::Any _method_build_single(_2220dce43_Token);


	inline jule::Ptr<_221d8b043_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_UnaryExpr> _method_build_unary(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_type(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_sub_ident(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_VariadicExpr> _method_build_variadic(jule::Slice<_2220dce43_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_CastExpr> _method_try_build_cast(jule::Slice<_2220dce43_Token>&);


	inline void _method_push_arg(jule::Slice<jule::Ptr<_221d8b043_Expr>>&,jule::Slice<_2220dce43_Token>,_2220dce43_Token);


	inline jule::Slice<jule::Ptr<_221d8b043_Expr>> _method_build_args(jule::Slice<_2220dce43_Token>);


	inline jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> _method_build_call_generics(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_FnCallExpr> _method_build_fn_call(_2220dce43_Token&,jule::Ptr<_23999731d_CallData>&);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_FnDecl> _method_build_anon_fn(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_unsafe(jule::Slice<_2220dce43_Token>&);


	inline void _method_push_range_lit_part(jule::Slice<_2220dce43_Token>,_2220dce43_Token,jule::Slice<jule::Slice<_2220dce43_Token>>&);


	inline jule::Slice<jule::Slice<_2220dce43_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_2220dce43_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_2220dce43_Token>&);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_StructLit> _method_build_typed_struct_literal(jule::Slice<_2220dce43_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_BraceLit> _method_build_brace_lit(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_brace_range(jule::Slice<_2220dce43_Token>&);


	inline jule::Slice<jule::Slice<_2220dce43_Token>> _method_get_enumerable_parts(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_SliceExpr> _method_build_slice(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_IndexingExpr> _method_build_indexing(jule::Slice<_2220dce43_Token>,jule::Slice<_2220dce43_Token>,_2220dce43_Token);


	inline jule::Ptr<_221d8b043_SlicingExpr> _method_build_slicing(jule::Slice<_2220dce43_Token>&,jule::Slice<_2220dce43_Token>&,jule::Int&,_2220dce43_Token&);


	inline jule::Any _method_build_bracket_range(jule::Slice<_2220dce43_Token>);


	inline jule::Any _method_build_ternary(jule::Slice<_2220dce43_Token>);


	inline jule::Any _method_build_data(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_BinopExpr> _method_build_binop(jule::Slice<_2220dce43_Token>&,jule::Int);


	inline jule::Any _method_build(jule::Slice<_2220dce43_Token>&);


	inline jule::Any _method_build_kind(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_Expr> _method_build_from_tokens(jule::Slice<_2220dce43_Token>);


	inline bool operator==(const _23999731d_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _23999731d_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _222e5128e_Parser {
	jule::Ptr<_222e5128e_Parser> self;

	jule::Ptr<_221d8c242_Ast> _field_ast = jule::Ptr<_221d8c242_Ast>();
	jule::Slice<jule::Ptr<_221d8b043_Directive>> _field_directives = jule::Slice<jule::Ptr<_221d8b043_Directive>>();
	jule::Ptr<_221d8b043_CommentGroup> _field_comment_group = jule::Ptr<_221d8b043_CommentGroup>();
	jule::Slice<_23886c227_Log> _field_errors = jule::Slice<_23886c227_Log>();


	_222e5128e_Parser(jule::Ptr<_221d8c242_Ast> __param_ast, jule::Slice<jule::Ptr<_221d8b043_Directive>> __param_directives, jule::Ptr<_221d8b043_CommentGroup> __param_comment_group, jule::Slice<_23886c227_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_comment_group(__param_comment_group), _field_errors(__param_errors) {
		this->self = jule::Ptr<_222e5128e_Parser>::make(this, nullptr);

	}

	~_222e5128e_Parser(void) { this->self.ref = nullptr; }

	_222e5128e_Parser(void) { this->self = jule::Ptr<_222e5128e_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_2220dce43_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_221d8b043_Expr> _method_build_expr(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_Directive> _method_build_directive(jule::Slice<_2220dce43_Token>);


	inline void _method_push_directive(jule::Ptr<_221d8b043_Directive>);


	inline void _method_process_comment(jule::Ptr<_221d8b043_Comment>&);


	inline jule::Ptr<_221d8b043_ScopeTree> _method_build_scope(jule::Slice<_2220dce43_Token>&);


	inline std::tuple<jule::Ptr<_221d8b043_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_2220dce43_Token>&,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ptr<_221d8b043_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_2220dce43_Token>&,jule::Int*,jule::Bool);


	inline jule::Ptr<_221d8b043_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_2220dce43_Token>&);


	inline void _method_build_var_type_and_expr(jule::Ptr<_221d8b043_VarDecl>&,jule::Slice<_2220dce43_Token>&);


	inline void _method_build_var_common(jule::Ptr<_221d8b043_VarDecl>&,jule::Slice<_2220dce43_Token>);


	inline void _method_build_var_begin(jule::Ptr<_221d8b043_VarDecl>&,jule::Ptr<jule::Int>,jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_VarDecl> _method_build_var(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_GenericDecl> _method_build_generic(jule::Slice<_2220dce43_Token>&);


	inline jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> _method_build_generics(jule::Slice<_2220dce43_Token>&,_2220dce43_Token&);


	inline jule::Ptr<_221d8b043_ParamDecl> _method_build_self_param(jule::Slice<_2220dce43_Token>);


	inline void _method_param_type_begin(jule::Ptr<_221d8b043_ParamDecl>&,jule::Int&,jule::Slice<_2220dce43_Token>&);


	inline void _method_build_param_type(jule::Ptr<_221d8b043_ParamDecl>&,jule::Slice<_2220dce43_Token>&);


	inline void _method_param_body_id(jule::Ptr<_221d8b043_ParamDecl>,_2220dce43_Token);


	inline void _method_build_param_body(jule::Ptr<_221d8b043_ParamDecl>&,jule::Ptr<jule::Int>,jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_ParamDecl> _method_build_param(jule::Slice<_2220dce43_Token>);


	inline void _method_check_params(jule::Slice<jule::Ptr<_221d8b043_ParamDecl>>&);


	inline jule::Slice<jule::Ptr<_221d8b043_ParamDecl>> _method_build_params(jule::Slice<_2220dce43_Token>&,jule::Bool);


	inline std::tuple<jule::Ptr<_221d8b043_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_2220dce43_Token>&,jule::Int&);


	inline std::tuple<jule::Ptr<_221d8b043_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_2220dce43_Token>&,jule::Int&);


	inline jule::Ptr<_221d8b043_FnDecl> _method_build_fn_prototype(jule::Slice<_2220dce43_Token>&,jule::Int&,jule::Bool);


	inline jule::Ptr<_221d8b043_FnDecl> _method_build_fn(jule::Slice<_2220dce43_Token>&,jule::Bool,jule::Bool);


	inline jule::Slice<_2220dce43_Token> _method_get_use_decl_selectors(jule::Slice<_2220dce43_Token>);


	inline void _method_build_cpp_use_decl(jule::Ptr<_221d8b043_UseDecl>&,jule::Slice<_2220dce43_Token>&);


	inline void _method_build_std_use_decl(jule::Ptr<_221d8b043_UseDecl>&,jule::Slice<_2220dce43_Token>);


	inline void _method_build_ident_use_decl(jule::Ptr<_221d8b043_UseDecl>&,jule::Slice<_2220dce43_Token>);


	inline void _method_parse_use_decl(jule::Ptr<_221d8b043_UseDecl>&,jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_UseDecl> _method_build_use_decl(jule::Slice<_2220dce43_Token>,jule::Bool);


	inline jule::Ptr<_221d8b043_Expr> _method_build_enum_item_expr(jule::Ptr<jule::Int>,jule::Slice<_2220dce43_Token>&);


	inline jule::Slice<jule::Ptr<_221d8b043_EnumItemDecl>> _method_build_enum_items(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_EnumDecl> _method_build_enum_decl(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_FieldDecl> _method_build_field(jule::Slice<_2220dce43_Token>);


	inline jule::Slice<jule::Ptr<_221d8b043_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_StructDecl> _method_build_struct_decl(jule::Slice<_2220dce43_Token>&);


	inline void _method_check_method_receiver(jule::Ptr<_221d8b043_FnDecl>&);


	inline jule::Slice<jule::Ptr<_221d8b043_FnDecl>> _method_build_trait_methods(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_TraitDecl> _method_build_trait_decl(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_FnDecl> _method_build_cpp_link_fn(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_VarDecl> _method_build_cpp_link_var(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_StructDecl> _method_build_cpp_link_struct(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_2220dce43_Token>);


	inline jule::Ptr<_221d8b043_UseDecl> _method_build_cpp_link_use(jule::Slice<_2220dce43_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_FnDecl> _method_get_method(jule::Slice<_2220dce43_Token>&);


	inline void _method_parse_impl_body(jule::Ptr<_221d8b043_Impl>&,jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_Impl> _method_build_impl(jule::Slice<_2220dce43_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_2220dce43_Token>&);


	inline void _method_check_comment_group(_221d8b043_Node&);


	inline void _method_check_directive(_221d8b043_Node&);


	inline void _method_apply_meta(_221d8b043_Node&,jule::Bool);


	inline void _method_check_use_decl(_221d8b043_Node&);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_2220dce43_Token>);


	inline _221d8b043_Node _method_parse_node(jule::Slice<_2220dce43_Token>&);


	inline void _method_append_node(jule::Slice<_2220dce43_Token>&);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_2220dce43_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_2220dce43_Token&,jule::Slice<_2220dce43_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_2220dce43_Token,jule::Str,jule::Slice<_2220dce43_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_2220dce43_Token>&);


	inline void _method_parse(jule::Ptr<_22212e407_File>&);


	inline bool operator==(const _222e5128e_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _222e5128e_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _222e76d20_TypeBuilder {
	jule::Ptr<_222e5128e_Parser> _field_p = jule::Ptr<_222e5128e_Parser>();
	jule::Slice<_2220dce43_Token> _field_tokens = jule::Slice<_2220dce43_Token>();
	jule::Int* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();


	_222e76d20_TypeBuilder(jule::Ptr<_222e5128e_Parser> __param_p, jule::Slice<_2220dce43_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_222e76d20_TypeBuilder(void) = default;

	inline void _method_push_err(_2220dce43_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_prim(void);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_2220dce43_Token>> _method_ident_generics(void);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_ident(void);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_fn(void);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_ptr(void);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_sptr(void);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_op(void);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_slc(void);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_arr(void);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_map(jule::Int,jule::Slice<_2220dce43_Token>&);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_build_enumerable(void);


	inline jule::Ptr<_221d8b043_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ptr<_221d8b043_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _222e76d20_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _222e76d20_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _206e210e3_Const {
	jule::Any _field_data = jule::Any();


	_206e210e3_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_206e210e3_Const(void) = default;

	static inline jule::Ptr<_206e210e3_Const> _static_method_new_i64(jule::I64);


	static inline jule::Ptr<_206e210e3_Const> _static_method_new_u64(jule::U64);


	static inline jule::Ptr<_206e210e3_Const> _static_method_new_bool(jule::Bool);


	static inline jule::Ptr<_206e210e3_Const> _static_method_new_str(jule::Str);


	static inline jule::Ptr<_206e210e3_Const> _static_method_new_f64(jule::F64);


	static inline jule::Ptr<_206e210e3_Const> _static_method_new_nil(void);


	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_206e210e3_Const);


	inline jule::Bool _method_and(_206e210e3_Const);


	inline jule::Bool _method_or(_206e210e3_Const);


	inline jule::Bool _method_eqs(_206e210e3_Const);


	inline jule::Bool _method_lt(_206e210e3_Const);


	inline jule::Bool _method_gt(_206e210e3_Const);


	inline jule::Bool _method_add(_206e210e3_Const);


	inline jule::Bool _method_sub(_206e210e3_Const);


	inline jule::Bool _method_mul(_206e210e3_Const);


	inline jule::Bool _method_div(_206e210e3_Const);


	inline jule::Bool _method_mod(_206e210e3_Const);


	inline jule::Bool _method_bitwise_and(_206e210e3_Const);


	inline jule::Bool _method_bitwise_or(_206e210e3_Const);


	inline jule::Bool _method_xor(_206e210e3_Const);


	inline jule::Bool _method_lshift(_206e210e3_Const);


	inline jule::Bool _method_rshift(_206e210e3_Const);


	inline bool operator==(const _206e210e3_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _206e210e3_Const &_Src) const { return !this->operator==(_Src); }
};


struct _2398d04dc_FieldIns {
	jule::Ptr<_2398d04dc_Field> _field_decl = jule::Ptr<_2398d04dc_Field>();
	jule::Ptr<_2300b54e5_TypeKind> _field_kind = jule::Ptr<_2300b54e5_TypeKind>();


	_2398d04dc_FieldIns(jule::Ptr<_2398d04dc_Field> __param_decl, jule::Ptr<_2300b54e5_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_2398d04dc_FieldIns(void) = default;

	inline bool operator==(const _2398d04dc_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2398d04dc_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _2398d04dc_StructIns: public _2300b54e5_Kind {
	jule::Ptr<_2398d04dc_StructIns> self;

	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_2398d04dc_Struct> _field_decl = jule::Ptr<_2398d04dc_Struct>();
	jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>();
	jule::Slice<jule::Ptr<_2398d04dc_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_2398d04dc_FieldIns>>();
	jule::Slice<jule::Ptr<_222edb48e_Fn>> _field_methods = jule::Slice<jule::Ptr<_222edb48e_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_221db702a_ReferenceStack> _field_references = jule::Ptr<_221db702a_ReferenceStack>();


	_2398d04dc_StructIns(jule::Bool __param_checked, jule::Ptr<_2398d04dc_Struct> __param_decl, jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_2398d04dc_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_222edb48e_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_221db702a_ReferenceStack> __param_references): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references) {
		this->self = jule::Ptr<_2398d04dc_StructIns>::make(this, nullptr);

	}

	~_2398d04dc_StructIns(void) { this->self.ref = nullptr; }

	_2398d04dc_StructIns(void) { this->self = jule::Ptr<_2398d04dc_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline jule::Bool _method_same(jule::Ptr<_2398d04dc_StructIns>);


	inline jule::Ptr<_222edb48e_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ptr<_2398d04dc_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _2398d04dc_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_references == _Src._field_references;
	}

	inline bool operator!=(const _2398d04dc_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _222edb48e_RetType {
	jule::Ptr<_2300b54e5_TypeSymbol> _field_kind = jule::Ptr<_2300b54e5_TypeSymbol>();
	jule::Slice<_2220dce43_Token> _field_idents = jule::Slice<_2220dce43_Token>();


	_222edb48e_RetType(jule::Ptr<_2300b54e5_TypeSymbol> __param_kind, jule::Slice<_2220dce43_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_222edb48e_RetType(void) = default;

	inline bool operator==(const _222edb48e_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _222edb48e_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _222edb48e_ParamIns {
	jule::Ptr<_222edb48e_Param> _field_decl = jule::Ptr<_222edb48e_Param>();
	jule::Ptr<_2300b54e5_TypeKind> _field_kind = jule::Ptr<_2300b54e5_TypeKind>();


	_222edb48e_ParamIns(jule::Ptr<_222edb48e_Param> __param_decl, jule::Ptr<_2300b54e5_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_222edb48e_ParamIns(void) = default;

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _222edb48e_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _222edb48e_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _222edb48e_FnIns: public _2300b54e5_Kind {
	jule::Ptr<_222edb48e_FnIns> self;

	jule::Ptr<_2398d04dc_StructIns> _field_owner = jule::Ptr<_2398d04dc_StructIns>();
	jule::Ptr<_222edb48e_Fn> _field_decl = jule::Ptr<_222edb48e_Fn>();
	jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>();
	jule::Slice<jule::Ptr<_222edb48e_ParamIns>> _field_params = jule::Slice<jule::Ptr<_222edb48e_ParamIns>>();
	jule::Ptr<_2300b54e5_TypeKind> _field_result = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Ptr<_2300254bb_Scope> _field_scope = jule::Ptr<_2300254bb_Scope>();
	jule::Ptr<_221db702a_ReferenceStack> _field_references = jule::Ptr<_221db702a_ReferenceStack>();
	jule::Ptr<_221db702a_ReferenceStack> _field_refers = jule::Ptr<_221db702a_ReferenceStack>();
	jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)> _field_caller = jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	jule::Bool _field_anon = jule::Bool();


	_222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns> __param_owner, jule::Ptr<_222edb48e_Fn> __param_decl, jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_222edb48e_ParamIns>> __param_params, jule::Ptr<_2300b54e5_TypeKind> __param_result, jule::Ptr<_2300254bb_Scope> __param_scope, jule::Ptr<_221db702a_ReferenceStack> __param_references, jule::Ptr<_221db702a_ReferenceStack> __param_refers, jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_refers(__param_refers), _field_caller(__param_caller), _field_reloaded(__param_reloaded), _field_anon(__param_anon) {
		this->self = jule::Ptr<_222edb48e_FnIns>::make(this, nullptr);

	}

	~_222edb48e_FnIns(void) { this->self.ref = nullptr; }

	_222edb48e_FnIns(void) { this->self = jule::Ptr<_222edb48e_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_same(jule::Ptr<_222edb48e_FnIns>);


	inline jule::Str _method_get_kind_str(jule::Bool);


	inline bool operator==(const _222edb48e_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _222edb48e_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _221db702a_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();


	_221db702a_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_221db702a_ReferenceStack(void) = default;

	static inline jule::Ptr<_221db702a_ReferenceStack> _static_method_new(void);


	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline jule::Bool _method_exist_0(jule::Ptr<_2200a2657_Var>);
	inline jule::Bool _method_exist_1(jule::Ptr<_222edb48e_FnIns>);
	inline jule::Bool _method_exist_2(jule::Ptr<_2398d04dc_StructIns>);


	inline bool operator==(const _221db702a_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _221db702a_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _221db702a_SymbolBuilder {
	jule::Ptr<_221db702a_SymbolBuilder> self;

	jule::Ptr<_221db702a_SymbolBuilder> _field_owner = jule::Ptr<_221db702a_SymbolBuilder>();
	jule::Trait<_2200229c3_Importer> _field_importer = jule::Trait<_2200229c3_Importer>();
	jule::Slice<_23886c227_Log> _field_errors = jule::Slice<_23886c227_Log>();
	jule::Ptr<_221d8c242_Ast> _field_ast = jule::Ptr<_221d8c242_Ast>();
	jule::Ptr<_2067a6b66_SymbolTable> _field_table = jule::Ptr<_2067a6b66_SymbolTable>();


	_221db702a_SymbolBuilder(jule::Ptr<_221db702a_SymbolBuilder> __param_owner, jule::Trait<_2200229c3_Importer> __param_importer, jule::Slice<_23886c227_Log> __param_errors, jule::Ptr<_221d8c242_Ast> __param_ast, jule::Ptr<_2067a6b66_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {
		this->self = jule::Ptr<_221db702a_SymbolBuilder>::make(this, nullptr);

	}

	~_221db702a_SymbolBuilder(void) { this->self.ref = nullptr; }

	_221db702a_SymbolBuilder(void) { this->self = jule::Ptr<_221db702a_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ptr<_221db702a_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_2220dce43_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_text(_2220dce43_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ptr<_221d8b043_UseDecl>&);


	inline jule::Ptr<_2200229c3_ImportInfo> _method_build_cpp_header_import(jule::Ptr<_221d8b043_UseDecl>&);


	inline jule::Ptr<_2200229c3_ImportInfo> _method_build_std_import(jule::Ptr<_221d8b043_UseDecl>&);


	inline jule::Ptr<_2200229c3_ImportInfo> _method_build_ident_import(jule::Ptr<_221d8b043_UseDecl>&);


	inline jule::Ptr<_2200229c3_ImportInfo> _method_build_import(jule::Ptr<_221d8b043_UseDecl>&);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ptr<_2200229c3_ImportInfo>&);


	inline void _method_impl_import_selections(jule::Ptr<_2200229c3_ImportInfo>&,jule::Ptr<_221d8b043_UseDecl>&);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ptr<_221db702a_SymbolBuilder>&,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ptr<_221db702a_SymbolBuilder>&,jule::Ptr<_2200229c3_ImportInfo>&,_2220dce43_Token&);


	inline jule::Bool _method_check_import_cycles(jule::Ptr<_2200229c3_ImportInfo>,jule::Ptr<_221d8b043_UseDecl>&);


	inline jule::Bool _method_import_package(jule::Ptr<_2200229c3_ImportInfo>&,jule::Ptr<_221d8b043_UseDecl>&);


	inline jule::Ptr<_2200229c3_ImportInfo> _method_import_use_decl(jule::Ptr<_221d8b043_UseDecl>&);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_221d8b043_Node&);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ptr<_221d8b043_Directive>&);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _221db702a_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _221db702a_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_Scope {
	jule::Ptr<_2300254bb_Scope> _field_parent = jule::Ptr<_2300254bb_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_2300254bb_Scope(jule::Ptr<_2300254bb_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_2300254bb_Scope(void) = default;

	inline bool operator==(const _2300254bb_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _2300254bb_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_2300254bb_Scope> _field_scope = jule::Ptr<_2300254bb_Scope>();


	_2300254bb_If(jule::Any __param_expr, jule::Ptr<_2300254bb_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_2300254bb_If(void) = default;

	inline bool operator==(const _2300254bb_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _2300254bb_If &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_Else {
	jule::Ptr<_2300254bb_Scope> _field_scope = jule::Ptr<_2300254bb_Scope>();


	_2300254bb_Else(jule::Ptr<_2300254bb_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_2300254bb_Else(void) = default;

	inline bool operator==(const _2300254bb_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _2300254bb_Else &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_Conditional {
	jule::Slice<jule::Ptr<_2300254bb_If>> _field_elifs = jule::Slice<jule::Ptr<_2300254bb_If>>();
	jule::Ptr<_2300254bb_Else> _field_default = jule::Ptr<_2300254bb_Else>();


	_2300254bb_Conditional(jule::Slice<jule::Ptr<_2300254bb_If>> __param_elifs, jule::Ptr<_2300254bb_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_2300254bb_Conditional(void) = default;

	inline bool operator==(const _2300254bb_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _2300254bb_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_InfIter {
	jule::Ptr<_2300254bb_Scope> _field_scope = jule::Ptr<_2300254bb_Scope>();


	_2300254bb_InfIter(jule::Ptr<_2300254bb_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_2300254bb_InfIter(void) = default;

	inline bool operator==(const _2300254bb_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _2300254bb_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_2300254bb_Scope> _field_scope = jule::Ptr<_2300254bb_Scope>();


	_2300254bb_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_2300254bb_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_2300254bb_WhileIter(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _2300254bb_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _2300254bb_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_RangeIter {
	jule::Ptr<_20683ebaa_Data> _field_expr = jule::Ptr<_20683ebaa_Data>();
	jule::Ptr<_2300254bb_Scope> _field_scope = jule::Ptr<_2300254bb_Scope>();
	jule::Ptr<_2200a2657_Var> _field_key_a = jule::Ptr<_2200a2657_Var>();
	jule::Ptr<_2200a2657_Var> _field_key_b = jule::Ptr<_2200a2657_Var>();


	_2300254bb_RangeIter(jule::Ptr<_20683ebaa_Data> __param_expr, jule::Ptr<_2300254bb_Scope> __param_scope, jule::Ptr<_2200a2657_Var> __param_key_a, jule::Ptr<_2200a2657_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_2300254bb_RangeIter(void) = default;

	inline bool operator==(const _2300254bb_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _2300254bb_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();


	_2300254bb_ContSt(jule::Uintptr __param_it): _field_it(__param_it) {}

	

	_2300254bb_ContSt(void) = default;

	inline bool operator==(const _2300254bb_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _2300254bb_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();


	_2300254bb_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_2300254bb_BreakSt(void) = default;

	inline bool operator==(const _2300254bb_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _2300254bb_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_Label {
	jule::Str _field_ident = jule::Str();


	_2300254bb_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_2300254bb_Label(void) = default;

	inline bool operator==(const _2300254bb_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2300254bb_Label &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_GotoSt {
	jule::Str _field_ident = jule::Str();


	_2300254bb_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_2300254bb_GotoSt(void) = default;

	inline bool operator==(const _2300254bb_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2300254bb_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_2300254bb_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_2300254bb_Postfix(void) = default;

	inline bool operator==(const _2300254bb_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _2300254bb_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_Assign {
	jule::Any _field_l = jule::Any();
	jule::Any _field_r = jule::Any();
	jule::Str _field_op = jule::Str();


	_2300254bb_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_2300254bb_Assign(void) = default;

	inline bool operator==(const _2300254bb_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _2300254bb_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();


	_2300254bb_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_2300254bb_MultiAssign(void) = default;

	inline bool operator==(const _2300254bb_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _2300254bb_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_Match {
	jule::Ptr<_20683ebaa_Data> _field_expr = jule::Ptr<_20683ebaa_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_2300254bb_Case>> _field_cases = jule::Slice<jule::Ptr<_2300254bb_Case>>();
	jule::Ptr<_2300254bb_Case> _field_default = jule::Ptr<_2300254bb_Case>();


	_2300254bb_Match(jule::Ptr<_20683ebaa_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_2300254bb_Case>> __param_cases, jule::Ptr<_2300254bb_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_2300254bb_Match(void) = default;

	inline jule::Bool _method_is_generic_type_match(void);


	inline bool operator==(const _2300254bb_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _2300254bb_Match &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_Case {
	jule::Ptr<_2300254bb_Match> _field_owner = jule::Ptr<_2300254bb_Match>();
	jule::Ptr<_2300254bb_Scope> _field_scope = jule::Ptr<_2300254bb_Scope>();
	jule::Slice<jule::Ptr<_20683ebaa_Data>> _field_exprs = jule::Slice<jule::Ptr<_20683ebaa_Data>>();
	jule::Ptr<_2300254bb_Case> _field_next = jule::Ptr<_2300254bb_Case>();


	_2300254bb_Case(jule::Ptr<_2300254bb_Match> __param_owner, jule::Ptr<_2300254bb_Scope> __param_scope, jule::Slice<jule::Ptr<_20683ebaa_Data>> __param_exprs, jule::Ptr<_2300254bb_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_2300254bb_Case(void) = default;

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _2300254bb_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _2300254bb_Case &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();


	_2300254bb_FallSt(jule::Uintptr __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_2300254bb_FallSt(void) = default;

	inline bool operator==(const _2300254bb_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _2300254bb_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_RetSt {
	jule::Ptr<_222edb48e_FnIns> _field_func = jule::Ptr<_222edb48e_FnIns>();
	jule::Slice<jule::Ptr<_2200a2657_Var>> _field_vars = jule::Slice<jule::Ptr<_2200a2657_Var>>();
	jule::Any _field_expr = jule::Any();


	_2300254bb_RetSt(jule::Ptr<_222edb48e_FnIns> __param_func, jule::Slice<jule::Ptr<_2200a2657_Var>> __param_vars, jule::Any __param_expr): _field_func(__param_func), _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_2300254bb_RetSt(void) = default;

	inline bool operator==(const _2300254bb_RetSt &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2300254bb_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_ScopeGoto {
	jule::Ptr<_221d8b043_GotoSt> _field_gt = jule::Ptr<_221d8b043_GotoSt>();
	jule::Ptr<_2300254bb_ScopeChecker> _field_scope = jule::Ptr<_2300254bb_ScopeChecker>();
	jule::Int _field_pos = jule::Int();


	_2300254bb_ScopeGoto(jule::Ptr<_221d8b043_GotoSt> __param_gt, jule::Ptr<_2300254bb_ScopeChecker> __param_scope, jule::Int __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_2300254bb_ScopeGoto(void) = default;

	inline bool operator==(const _2300254bb_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _2300254bb_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_ScopeChecker: public _206c9641e_Lookup {
	jule::Ptr<_2300254bb_ScopeChecker> self;

	jule::Ptr<_21eee051d_Sema> _field_s = jule::Ptr<_21eee051d_Sema>();
	jule::Ptr<_222edb48e_FnIns> _field_owner = jule::Ptr<_222edb48e_FnIns>();
	jule::Ptr<_2300254bb_ScopeChecker> _field_parent = jule::Ptr<_2300254bb_ScopeChecker>();
	jule::Int _field_child_index = jule::Int();
	jule::Ptr<_2067a6b66_SymbolTable> _field_table = jule::Ptr<_2067a6b66_SymbolTable>();
	jule::Ptr<_2300254bb_Scope> _field_scope = jule::Ptr<_2300254bb_Scope>();
	jule::Ptr<_221d8b043_ScopeTree> _field_tree = jule::Ptr<_221d8b043_ScopeTree>();
	jule::Ptr<_2300b54e5_TypeKind> _field_result = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeGoto>>>();
	jule::Int _field_i = jule::Int();


	_2300254bb_ScopeChecker(jule::Ptr<_21eee051d_Sema> __param_s, jule::Ptr<_222edb48e_FnIns> __param_owner, jule::Ptr<_2300254bb_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ptr<_2067a6b66_SymbolTable> __param_table, jule::Ptr<_2300254bb_Scope> __param_scope, jule::Ptr<_221d8b043_ScopeTree> __param_tree, jule::Ptr<_2300b54e5_TypeKind> __param_result, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeGoto>>> __param_gotos, jule::Int __param_i): _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_result(__param_result), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {
		this->self = jule::Ptr<_2300254bb_ScopeChecker>::make(this, nullptr);

	}

	~_2300254bb_ScopeChecker(void) { this->self.ref = nullptr; }

	_2300254bb_ScopeChecker(void) { this->self = jule::Ptr<_2300254bb_ScopeChecker>::make(this, nullptr); }

	inline jule::Ptr<_2200229c3_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_2200229c3_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)>);


	inline jule::Ptr<_2200a2657_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_2300b54e5_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_2398d04dc_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_222edb48e_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_2300167cb_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_23001604a_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Bool _method_is_deferred(void);


	inline jule::Ptr<_2300254bb_ScopeChecker> _method_get_root(void);


	inline jule::Ptr<_2300254bb_Label> _method_find_label(jule::Str);


	inline jule::Ptr<_2300254bb_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ptr<_2300254bb_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ptr<_221d8b043_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ptr<_221d8b043_TypeAliasDecl>);


	inline jule::Ptr<_2300254bb_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ptr<_221d8b043_ScopeTree>&,jule::Ptr<_2300254bb_Scope>&,jule::Ptr<_2300254bb_ScopeChecker>&);


	inline jule::Ptr<_2300254bb_Scope> _method_check_child_sc(jule::Ptr<_221d8b043_ScopeTree>&,jule::Ptr<_2300254bb_ScopeChecker>&);


	inline jule::Ptr<_2300254bb_Scope> _method_check_child(jule::Ptr<_221d8b043_ScopeTree>&);


	inline void _method_check_anon_scope(jule::Ptr<_221d8b043_ScopeTree>);


	inline void _method_process_error_call(jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>&,_2220dce43_Token);


	inline void _method_check_expr(jule::Ptr<_221d8b043_Expr>);


	inline void _method_check_co_expr(jule::Ptr<_221d8b043_CoExpr>);


	inline jule::Ptr<_2300254bb_If> _method_check_if(jule::Ptr<_221d8b043_If>);


	inline jule::Ptr<_2300254bb_Else> _method_check_else(jule::Ptr<_221d8b043_Else>);


	inline void _method_check_conditional(jule::Ptr<_221d8b043_Conditional>);


	inline jule::Ptr<_2300254bb_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ptr<_221d8b043_ScopeTree>,jule::Ptr<_2300254bb_ScopeChecker>);


	inline jule::Ptr<_2300254bb_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ptr<_221d8b043_ScopeTree>&);


	inline void _method_check_inf_iter(jule::Ptr<_221d8b043_Iter>&);


	inline void _method_check_while_iter(jule::Ptr<_221d8b043_Iter>&);


	inline void _method_check_range_iter(jule::Ptr<_221d8b043_Iter>&);


	inline void _method_check_iter(jule::Ptr<_221d8b043_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ptr<_2300254bb_ContSt> _method_check_cont_valid_scope(jule::Ptr<_221d8b043_ContSt>);


	inline void _method_check_cont(jule::Ptr<_221d8b043_ContSt>);


	inline void _method_check_label(jule::Ptr<_221d8b043_LabelSt>);


	inline void _method_push_goto(jule::Ptr<_221d8b043_GotoSt>);


	inline void _method_check_postfix(jule::Ptr<_221d8b043_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ptr<_221d8b043_AssignSt>&);


	inline void _method___process_end_part_of_multi_assign(jule::Ptr<_2300254bb_MultiAssign>,jule::Ptr<_221d8b043_AssignSt>,jule::Ptr<_221d8b043_AssignLeft>,jule::Ptr<_20683ebaa_Data>,jule::Ptr<_20683ebaa_Data>);


	inline void _method_check_ret_multi_assign(jule::Ptr<_221d8b043_AssignSt>&);


	inline void _method_check_multi_assign(jule::Ptr<_221d8b043_AssignSt>&);


	inline void _method_check_assign_st(jule::Ptr<_221d8b043_AssignSt>);


	inline jule::Ptr<_2300254bb_Scope> _method_check_case_scope(jule::Ptr<_2300254bb_Case>&,jule::Ptr<_221d8b043_ScopeTree>&);


	inline jule::Ptr<_2300254bb_Case> _method_check_case(jule::Ptr<_2300254bb_Match>,jule::Int,jule::Ptr<_221d8b043_Case>,jule::Ptr<_20683ebaa_Data>);


	inline void _method_check_cases(jule::Ptr<_221d8b043_MatchCase>&,jule::Ptr<_2300254bb_Match>,jule::Ptr<_20683ebaa_Data>);


	inline jule::Ptr<_2300254bb_Case> _method_check_default(jule::Ptr<_2300254bb_Match>,jule::Ptr<_221d8b043_Else>);


	inline void _method_check_comptime_panic(jule::Ptr<_2300254bb_Scope>&,_2220dce43_Token);


	inline void _method_push_type_match(jule::Ptr<_2300254bb_Match>,jule::Ptr<_221d8b043_MatchCase>&);


	inline void _method_check_type_match(jule::Ptr<_221d8b043_MatchCase>&);


	inline void _method_check_common_match(jule::Ptr<_221d8b043_MatchCase>&);


	inline void _method_check_match(jule::Ptr<_221d8b043_MatchCase>);


	inline void _method_check_fall(jule::Ptr<_221d8b043_FallSt>);


	inline jule::Ptr<_2300254bb_BreakSt> _method_check_break_with_label(jule::Ptr<_221d8b043_BreakSt>);


	inline jule::Ptr<_2300254bb_BreakSt> _method_check_plain_break(jule::Ptr<_221d8b043_BreakSt>);


	inline void _method_check_break(jule::Ptr<_221d8b043_BreakSt>);


	inline void _method_check_ret(jule::Ptr<_221d8b043_RetSt>);


	inline void _method_check_use_expr(jule::Ptr<_221d8b043_UseExpr>);


	inline void _method_check_node(jule::Any&);


	inline void _method_check_result(void);


	inline void _method_check_tree(void);


	inline void _method_check_goto(jule::Ptr<_2300254bb_ScopeGoto>&,jule::Ptr<_2300254bb_ScopeLabel>&);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ptr<_221d8b043_ScopeTree>&,jule::Ptr<_2300254bb_Scope>&);


	inline jule::Ptr<_2300254bb_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _2300254bb_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_result == _Src._field_result &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _2300254bb_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_BinopExprModel {
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	jule::Str _field_op = jule::Str();


	_21eedb492_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_21eedb492_BinopExprModel(void) = default;

	inline bool operator==(const _21eedb492_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _21eedb492_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_UnaryExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_21eedb492_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_21eedb492_UnaryExprModel(void) = default;

	inline bool operator==(const _21eedb492_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _21eedb492_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_StructArgExprModel {
	jule::Ptr<_2398d04dc_FieldIns> _field_field = jule::Ptr<_2398d04dc_FieldIns>();
	jule::Any _field_expr = jule::Any();


	_21eedb492_StructArgExprModel(jule::Ptr<_2398d04dc_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_21eedb492_StructArgExprModel(void) = default;

	inline bool operator==(const _21eedb492_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _21eedb492_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_StructLitExprModel {
	jule::Ptr<_2398d04dc_StructIns> _field_strct = jule::Ptr<_2398d04dc_StructIns>();
	jule::Slice<jule::Ptr<_21eedb492_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_21eedb492_StructArgExprModel>>();


	_21eedb492_StructLitExprModel(jule::Ptr<_2398d04dc_StructIns> __param_strct, jule::Slice<jule::Ptr<_21eedb492_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_21eedb492_StructLitExprModel(void) = default;

	inline bool operator==(const _21eedb492_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _21eedb492_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_AllocStructLitExprModel {
	jule::Ptr<_21eedb492_StructLitExprModel> _field_lit = jule::Ptr<_21eedb492_StructLitExprModel>();


	_21eedb492_AllocStructLitExprModel(jule::Ptr<_21eedb492_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_21eedb492_AllocStructLitExprModel(void) = default;

	inline bool operator==(const _21eedb492_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _21eedb492_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_CastingExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_2300b54e5_TypeKind> _field_kind = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Ptr<_2300b54e5_TypeKind> _field_expr_kind = jule::Ptr<_2300b54e5_TypeKind>();


	_21eedb492_CastingExprModel(jule::Any __param_expr, jule::Ptr<_2300b54e5_TypeKind> __param_kind, jule::Ptr<_2300b54e5_TypeKind> __param_expr_kind): _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_21eedb492_CastingExprModel(void) = default;

	inline bool operator==(const _21eedb492_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _21eedb492_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_SliceExprModel {
	jule::Ptr<_2300b54e5_TypeKind> _field_elem_kind = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_21eedb492_SliceExprModel(jule::Ptr<_2300b54e5_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_21eedb492_SliceExprModel(void) = default;

	inline bool operator==(const _21eedb492_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _21eedb492_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_IndexigExprModel {
	jule::Ptr<_20683ebaa_Data> _field_expr = jule::Ptr<_20683ebaa_Data>();
	jule::Ptr<_20683ebaa_Data> _field_index = jule::Ptr<_20683ebaa_Data>();


	_21eedb492_IndexigExprModel(jule::Ptr<_20683ebaa_Data> __param_expr, jule::Ptr<_20683ebaa_Data> __param_index): _field_expr(__param_expr), _field_index(__param_index) {}

	

	_21eedb492_IndexigExprModel(void) = default;

	inline bool operator==(const _21eedb492_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _21eedb492_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_AnonFnExprModel {
	jule::Ptr<_222edb48e_FnIns> _field_func = jule::Ptr<_222edb48e_FnIns>();
	jule::Bool _field_global = jule::Bool();


	_21eedb492_AnonFnExprModel(jule::Ptr<_222edb48e_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_21eedb492_AnonFnExprModel(void) = default;

	inline bool operator==(const _21eedb492_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _21eedb492_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();


	_21eedb492_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_21eedb492_KeyValPairExprModel(void) = default;

	inline bool operator==(const _21eedb492_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _21eedb492_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_MapExprModel {
	jule::Ptr<_2300b54e5_TypeKind> _field_key_kind = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Ptr<_2300b54e5_TypeKind> _field_val_kind = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Slice<jule::Ptr<_21eedb492_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_21eedb492_KeyValPairExprModel>>();


	_21eedb492_MapExprModel(jule::Ptr<_2300b54e5_TypeKind> __param_key_kind, jule::Ptr<_2300b54e5_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_21eedb492_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_21eedb492_MapExprModel(void) = default;

	inline bool operator==(const _21eedb492_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _21eedb492_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_SlicingExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_21eedb492_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_21eedb492_SlicingExprModel(void) = default;

	inline bool operator==(const _21eedb492_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _21eedb492_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_TraitSubIdentExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_ident = jule::Str();


	_21eedb492_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident): _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_21eedb492_TraitSubIdentExprModel(void) = default;

	inline bool operator==(const _21eedb492_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _21eedb492_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_StructSubIdentExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_2300b54e5_TypeKind> _field_expr_kind = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Ptr<_222edb48e_FnIns> _field_method = jule::Ptr<_222edb48e_FnIns>();
	jule::Ptr<_2398d04dc_FieldIns> _field_field = jule::Ptr<_2398d04dc_FieldIns>();


	_21eedb492_StructSubIdentExprModel(jule::Any __param_expr, jule::Ptr<_2300b54e5_TypeKind> __param_expr_kind, jule::Ptr<_222edb48e_FnIns> __param_method, jule::Ptr<_2398d04dc_FieldIns> __param_field): _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_21eedb492_StructSubIdentExprModel(void) = default;

	inline bool operator==(const _21eedb492_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _21eedb492_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_StructStaticIdentExprModel {
	jule::Ptr<_2398d04dc_StructIns> _field_structure = jule::Ptr<_2398d04dc_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_222edb48e_FnIns> _field_method = jule::Ptr<_222edb48e_FnIns>();


	_21eedb492_StructStaticIdentExprModel(jule::Ptr<_2398d04dc_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_222edb48e_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_21eedb492_StructStaticIdentExprModel(void) = default;

	inline bool operator==(const _21eedb492_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _21eedb492_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_ArrayExprModel {
	jule::Ptr<_2300b54e5_Arr> _field_kind = jule::Ptr<_2300b54e5_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_21eedb492_ArrayExprModel(jule::Ptr<_2300b54e5_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_21eedb492_ArrayExprModel(void) = default;

	inline bool operator==(const _21eedb492_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _21eedb492_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();


	_21eedb492_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_21eedb492_CommonIdentExprModel(void) = default;

	inline bool operator==(const _21eedb492_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _21eedb492_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_CommonSubIdentExprModel {
	jule::Ptr<_2300b54e5_TypeKind> _field_expr_kind = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_ident = jule::Str();


	_21eedb492_CommonSubIdentExprModel(jule::Ptr<_2300b54e5_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_21eedb492_CommonSubIdentExprModel(void) = default;

	inline bool operator==(const _21eedb492_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _21eedb492_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_TupleExprModel {
	jule::Slice<jule::Ptr<_20683ebaa_Data>> _field_datas = jule::Slice<jule::Ptr<_20683ebaa_Data>>();


	_21eedb492_TupleExprModel(jule::Slice<jule::Ptr<_20683ebaa_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_21eedb492_TupleExprModel(void) = default;

	inline bool operator==(const _21eedb492_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _21eedb492_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();


	_21eedb492_BuiltinOutCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21eedb492_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(const _21eedb492_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _21eedb492_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();


	_21eedb492_BuiltinOutlnCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21eedb492_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(const _21eedb492_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _21eedb492_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();


	_21eedb492_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21eedb492_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(const _21eedb492_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _21eedb492_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_BuiltinNewCallExprModel {
	jule::Ptr<_2300b54e5_TypeKind> _field_kind = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Any _field_init = jule::Any();


	_21eedb492_BuiltinNewCallExprModel(jule::Ptr<_2300b54e5_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_21eedb492_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(const _21eedb492_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _21eedb492_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_BuiltinPanicCallExprModel {
	jule::Any _field_expr = jule::Any();


	_21eedb492_BuiltinPanicCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21eedb492_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(const _21eedb492_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _21eedb492_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_BuiltinMakeCallExprModel {
	jule::Ptr<_2300b54e5_TypeKind> _field_kind = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();


	_21eedb492_BuiltinMakeCallExprModel(jule::Ptr<_2300b54e5_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_21eedb492_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(const _21eedb492_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _21eedb492_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();


	_21eedb492_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_21eedb492_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(const _21eedb492_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	inline bool operator!=(const _21eedb492_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_BuiltinErrorCallExprModel {
	jule::Ptr<_222edb48e_FnIns> _field_func = jule::Ptr<_222edb48e_FnIns>();
	jule::Any _field_err = jule::Any();


	_21eedb492_BuiltinErrorCallExprModel(jule::Ptr<_222edb48e_FnIns> __param_func, jule::Any __param_err): _field_func(__param_func), _field_err(__param_err) {}

	

	_21eedb492_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(const _21eedb492_BuiltinErrorCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _21eedb492_BuiltinErrorCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_SizeofExprModel {
	jule::Any _field_expr = jule::Any();


	_21eedb492_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21eedb492_SizeofExprModel(void) = default;

	inline bool operator==(const _21eedb492_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _21eedb492_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_AlignofExprModel {
	jule::Any _field_expr = jule::Any();


	_21eedb492_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21eedb492_AlignofExprModel(void) = default;

	inline bool operator==(const _21eedb492_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _21eedb492_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_RuneExprModel {
	jule::I32 _field_code = jule::I32();


	_21eedb492_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_21eedb492_RuneExprModel(void) = default;

	inline bool operator==(const _21eedb492_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _21eedb492_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();


	_21eedb492_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_21eedb492_IntegratedToStrExprModel(void) = default;

	inline bool operator==(const _21eedb492_IntegratedToStrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _21eedb492_IntegratedToStrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_TernaryExprModel {
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_21eedb492_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_21eedb492_TernaryExprModel(void) = default;

	inline bool operator==(const _21eedb492_TernaryExprModel &_Src) const {
		return 
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _21eedb492_TernaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _21eee219b_DirectiveChecker {
	jule::Ptr<_21eee051d_Sema> _field_s = jule::Ptr<_21eee051d_Sema>();
	jule::Slice<jule::Ptr<_221d8b043_Directive>> _field_d = jule::Slice<jule::Ptr<_221d8b043_Directive>>();
	jule::Any _field_o = jule::Any();


	_21eee219b_DirectiveChecker(jule::Ptr<_21eee051d_Sema> __param_s, jule::Slice<jule::Ptr<_221d8b043_Directive>> __param_d, jule::Any __param_o): _field_s(__param_s), _field_d(__param_d), _field_o(__param_o) {}

	

	_21eee219b_DirectiveChecker(void) = default;

	inline void _method_check_cdef(jule::Ptr<_221d8b043_Directive>&);


	inline void _method_check_typedef(jule::Ptr<_221d8b043_Directive>&);


	inline void _method_check_derive(jule::Ptr<_221d8b043_Directive>&);


	inline void _method_check_namespace(jule::Ptr<_221d8b043_Directive>&);


	inline void _method_check_directive(jule::Ptr<_221d8b043_Directive>&);


	inline void _method_check(void);


	inline bool operator==(const _21eee219b_DirectiveChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_d == _Src._field_d &&
			this->_field_o == _Src._field_o;
	}

	inline bool operator!=(const _21eee219b_DirectiveChecker &_Src) const { return !this->operator==(_Src); }
};


struct _2200229c3_Package: public _206c9641e_Lookup {
	jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>();


	_2200229c3_Package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_2200229c3_Package(void) = default;

	inline jule::Ptr<_2200229c3_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_2200229c3_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)>);


	inline jule::Ptr<_2200a2657_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_2300b54e5_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_2398d04dc_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_222edb48e_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_2300167cb_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_23001604a_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _2200229c3_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _2200229c3_Package &_Src) const { return !this->operator==(_Src); }
};


struct _21eee051d_Sema: public _206c9641e_Lookup {
	jule::Ptr<_21eee051d_Sema> self;

	jule::Slice<_23886c227_Log> _field_errors = jule::Slice<_23886c227_Log>();
	jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>();
	jule::Ptr<_2067a6b66_SymbolTable> _field_file = jule::Ptr<_2067a6b66_SymbolTable>();
	jule::Int _field_flags = 0LL;


	_21eee051d_Sema(jule::Slice<_23886c227_Log> __param_errors, jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>> __param_files, jule::Ptr<_2067a6b66_SymbolTable> __param_file, jule::Int __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {
		this->self = jule::Ptr<_21eee051d_Sema>::make(this, nullptr);

	}

	~_21eee051d_Sema(void) { this->self.ref = nullptr; }

	_21eee051d_Sema(void) { this->self = jule::Ptr<_21eee051d_Sema>::make(this, nullptr); }

	inline jule::Ptr<_2200229c3_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_2200229c3_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)>);


	inline jule::Ptr<_2200a2657_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_2300b54e5_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_2398d04dc_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_222edb48e_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_2300167cb_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_23001604a_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_flag(jule::Int);


	inline void _method_set_current_file(jule::Ptr<_2067a6b66_SymbolTable>);


	inline void _method_push_err(_2220dce43_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_2220dce43_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline void _method_check_directives(jule::Slice<jule::Ptr<_221d8b043_Directive>>&,jule::Any);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_2220dce43_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ptr<_2200229c3_ImportInfo>&);


	inline void _method_check_import_selections(jule::Ptr<_2200229c3_ImportInfo>&);


	inline jule::Bool _method_is_use_alias_duplication(jule::Ptr<_2200229c3_ImportInfo>&);


	inline jule::Bool _method_check_import(jule::Ptr<_2200229c3_ImportInfo>&);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ptr<_2300b54e5_TypeSymbol>&,jule::Trait<_206c9641e_Lookup>,jule::Ptr<_2300b54e5_Referencer>);


	inline jule::Bool _method_check_type(jule::Ptr<_2300b54e5_TypeSymbol>&,jule::Trait<_206c9641e_Lookup>);


	inline jule::Ptr<_2300b54e5_TypeKind> _method_build_type_with_generics(jule::Ptr<_221d8b043_TypeDecl>&,jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>);


	inline jule::Ptr<_2300b54e5_TypeKind> _method_build_type(jule::Ptr<_221d8b043_TypeDecl>&);


	inline jule::Ptr<_20683ebaa_Eval> _method_evalpd(jule::Trait<_206c9641e_Lookup>,jule::Ptr<_2300b54e5_TypeKind>,jule::Ptr<_2200a2657_Var>);


	inline jule::Ptr<_20683ebaa_Eval> _method_evalp(jule::Trait<_206c9641e_Lookup>,jule::Ptr<_2300b54e5_TypeKind>);


	inline jule::Ptr<_20683ebaa_Eval> _method_eval(jule::Trait<_206c9641e_Lookup>);


	inline void _method_check_assign_type(jule::Bool,jule::Ptr<_2300b54e5_TypeKind>&,jule::Ptr<_20683ebaa_Data>&,_2220dce43_Token);


	inline jule::Bool _method_check_type_compatibility(jule::Ptr<_2300b54e5_TypeKind>&,jule::Ptr<_2300b54e5_TypeKind>&,_2220dce43_Token&);


	inline jule::Ptr<_2300b54e5_TypeKind> _method_build_non_generic_type_kind(jule::Ptr<_221d8b043_TypeDecl>&,jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>&);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ptr<_222edb48e_FnIns>&);


	inline jule::Ptr<_222edb48e_FnIns> _method_get_trait_check_fn_kind(jule::Ptr<_222edb48e_Fn>&);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ptr<_222edb48e_FnIns>&);


	inline void _method_check_ref_validity_for_init_expr(jule::Bool,jule::Ptr<_20683ebaa_Data>&,_2220dce43_Token&);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ptr<_2300b54e5_TypeKind>&,jule::Ptr<_20683ebaa_Data>&,_2220dce43_Token&);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ptr<_2300b54e5_TypeAlias>&,jule::Trait<_206c9641e_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ptr<_2300b54e5_TypeAlias>&,jule::Trait<_206c9641e_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ptr<_2300b54e5_TypeAlias>&);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ptr<_23001604a_Enum>);


	inline void _method_check_enum_items_str(jule::Ptr<_23001604a_Enum>&);


	inline void _method_check_enum_items_int(jule::Ptr<_23001604a_Enum>&);


	inline void _method_check_enum_decl(jule::Ptr<_23001604a_Enum>&);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>&);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ptr<_222edb48e_Fn>&);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ptr<_222edb48e_Fn>&);


	inline jule::Bool _method_check_fn_decl_types(jule::Ptr<_222edb48e_Fn>&);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ptr<_222edb48e_Fn>&);


	inline void _method_check_trait_decl_method(jule::Ptr<_222edb48e_Fn>&);


	inline void _method_check_trait_decl_methods(jule::Ptr<_2300167cb_Trait>&);


	inline void _method_check_trait_decl(jule::Ptr<_2300167cb_Trait>&);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ptr<_2300167cb_Trait>&,jule::Ptr<_230019081_Impl>&);


	inline jule::Bool _method_impl_to_struct(jule::Ptr<_2398d04dc_Struct>&,jule::Ptr<_230019081_Impl>&);


	inline void _method_impl_trait(jule::Ptr<_230019081_Impl>&);


	inline void _method_impl_struct(jule::Ptr<_230019081_Impl>&);


	inline void _method_impl_impl(jule::Ptr<_230019081_Impl>&);


	inline void _method_check_var_decl(jule::Ptr<_2200a2657_Var>&,jule::Trait<_206c9641e_Lookup>);


	inline void _method_check_global_var_decl(jule::Ptr<_2200a2657_Var>&);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ptr<_2398d04dc_Struct>&,jule::Ptr<_2300167cb_Trait>&);


	inline jule::Bool _method_check_struct_impls(jule::Ptr<_2398d04dc_Struct>&);


	inline jule::Bool _method_check_struct_fields(jule::Ptr<_2398d04dc_Struct>&);


	inline jule::Bool _method_check_struct_decl_methods(jule::Ptr<_2398d04dc_Struct>&);


	inline void _method_check_struct_decl(jule::Ptr<_2398d04dc_Struct>&);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ptr<_222edb48e_Fn>&);


	inline jule::Bool _method_check_fn_decls(void);


	inline void _method_push_cycle_error(jule::Ptr<_2398d04dc_Struct>&,jule::Ptr<_2398d04dc_Struct>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ptr<_2398d04dc_Struct>&,jule::Ptr<_2398d04dc_Struct>&,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ptr<_2398d04dc_Struct>&,jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ptr<_2398d04dc_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ptr<_2398d04dc_Struct>&);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ptr<_20683ebaa_Data>&,_2220dce43_Token&);


	inline void _method_check_var(jule::Ptr<_2200a2657_Var>&);


	inline void _method_check_type_var(jule::Ptr<_2200a2657_Var>&,jule::Trait<_206c9641e_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ptr<_2398d04dc_StructIns>&,jule::Ptr<_222edb48e_Fn>&);


	inline void _method_check_type_struct(jule::Ptr<_2398d04dc_Struct>&);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ptr<_222edb48e_FnIns>&);


	inline void _method_check_fn_ins_sc(jule::Ptr<_222edb48e_FnIns>&,jule::Ptr<_2300254bb_ScopeChecker>&);


	inline void _method_check_fn_ins(jule::Ptr<_222edb48e_FnIns>&);


	inline void _method_check_type_fn(jule::Ptr<_222edb48e_Fn>&);


	inline void _method_precheck_type_fn(jule::Ptr<_222edb48e_Fn>&);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>&);


	inline bool operator==(const _21eee051d_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file &&
			this->_field_flags == _Src._field_flags;
	}

	inline bool operator!=(const _21eee051d_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _2200a2657_IterRelation {
	jule::Ptr<_2200a2657_Var> _field_range = jule::Ptr<_2200a2657_Var>();


	_2200a2657_IterRelation(jule::Ptr<_2200a2657_Var> __param_range): _field_range(__param_range) {}

	

	_2200a2657_IterRelation(void) = default;

	inline bool operator==(const _2200a2657_IterRelation &_Src) const {
		return 
			this->_field_range == _Src._field_range;
	}

	inline bool operator!=(const _2200a2657_IterRelation &_Src) const { return !this->operator==(_Src); }
};


struct _2200223c9_RangeChecker {
	jule::Ptr<_2300254bb_ScopeChecker> _field_sc = jule::Ptr<_2300254bb_ScopeChecker>();
	jule::Ptr<_221d8b043_RangeKind> _field_rang = jule::Ptr<_221d8b043_RangeKind>();
	jule::Ptr<_2300254bb_RangeIter> _field_kind = jule::Ptr<_2300254bb_RangeIter>();
	jule::Ptr<_20683ebaa_Data> _field_d = jule::Ptr<_20683ebaa_Data>();


	_2200223c9_RangeChecker(jule::Ptr<_2300254bb_ScopeChecker> __param_sc, jule::Ptr<_221d8b043_RangeKind> __param_rang, jule::Ptr<_2300254bb_RangeIter> __param_kind, jule::Ptr<_20683ebaa_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_2200223c9_RangeChecker(void) = default;

	inline jule::Ptr<_2200a2657_Var> _method_build_var(jule::Ptr<_221d8b043_VarDecl>&);


	inline void _method_set_size_key(void);


	inline void _method_check_range_expr_validity(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_2200a2657_Var>&,jule::Ptr<_2300b54e5_TypeKind>&);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _2200223c9_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _2200223c9_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _2067a6b66_SymbolTable: public _206c9641e_Lookup {
	jule::Ptr<_22212e407_File> _field_file = jule::Ptr<_22212e407_File>();
	jule::Slice<_221db702a_Pass> _field_passes = jule::Slice<_221db702a_Pass>();
	jule::Slice<jule::Ptr<_2200229c3_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_2200229c3_ImportInfo>>();
	jule::Slice<jule::Ptr<_2200a2657_Var>> _field_vars = jule::Slice<jule::Ptr<_2200a2657_Var>>();
	jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>();
	jule::Slice<jule::Ptr<_2398d04dc_Struct>> _field_structs = jule::Slice<jule::Ptr<_2398d04dc_Struct>>();
	jule::Slice<jule::Ptr<_222edb48e_Fn>> _field_funcs = jule::Slice<jule::Ptr<_222edb48e_Fn>>();
	jule::Slice<jule::Ptr<_2300167cb_Trait>> _field_traits = jule::Slice<jule::Ptr<_2300167cb_Trait>>();
	jule::Slice<jule::Ptr<_23001604a_Enum>> _field_enums = jule::Slice<jule::Ptr<_23001604a_Enum>>();
	jule::Slice<jule::Ptr<_230019081_Impl>> _field_impls = jule::Slice<jule::Ptr<_230019081_Impl>>();


	_2067a6b66_SymbolTable(jule::Ptr<_22212e407_File> __param_file, jule::Slice<_221db702a_Pass> __param_passes, jule::Slice<jule::Ptr<_2200229c3_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_2200a2657_Var>> __param_vars, jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_2398d04dc_Struct>> __param_structs, jule::Slice<jule::Ptr<_222edb48e_Fn>> __param_funcs, jule::Slice<jule::Ptr<_2300167cb_Trait>> __param_traits, jule::Slice<jule::Ptr<_23001604a_Enum>> __param_enums, jule::Slice<jule::Ptr<_230019081_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_2067a6b66_SymbolTable(void) = default;

	inline jule::Ptr<_2200229c3_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_2200229c3_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)>);


	inline jule::Ptr<_2200a2657_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_2300b54e5_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_2398d04dc_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_222edb48e_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_2300167cb_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_23001604a_Enum> _method_find_enum(jule::Str);


	inline jule::Ptr<_2200a2657_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ptr<_2300b54e5_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _2067a6b66_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _2067a6b66_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


struct _20683ebaa_Data {
	jule::Ptr<_2300b54e5_TypeKind> _field_kind = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Ptr<_2300b54e5_TypeKind> _field_cast_kind = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_variadiced = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_206e210e3_Const> _field_constant = jule::Ptr<_206e210e3_Const>();


	_20683ebaa_Data(jule::Ptr<_2300b54e5_TypeKind> __param_kind, jule::Ptr<_2300b54e5_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_206e210e3_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_variadiced(__param_variadiced), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_20683ebaa_Data(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline jule::Bool _method_good_operand(jule::Ptr<_20683ebaa_Data>&);


	inline bool operator==(const _20683ebaa_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _20683ebaa_Data &_Src) const { return !this->operator==(_Src); }
};


struct _20683ebaa_Value {
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();
	jule::Ptr<_20683ebaa_Data> _field_data = jule::Ptr<_20683ebaa_Data>();


	_20683ebaa_Value(jule::Ptr<_221d8b043_Expr> __param_expr, jule::Ptr<_20683ebaa_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_20683ebaa_Value(void) = default;

	inline bool operator==(const _20683ebaa_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _20683ebaa_Value &_Src) const { return !this->operator==(_Src); }
};


struct _20683ebaa_Eval {
	jule::Ptr<_20683ebaa_Eval> self;

	jule::Ptr<_21eee051d_Sema> _field_s = jule::Ptr<_21eee051d_Sema>();
	jule::Trait<_206c9641e_Lookup> _field_lookup = jule::Trait<_206c9641e_Lookup>();
	jule::Ptr<_2300b54e5_TypeKind> _field_prefix = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Ptr<_2200a2657_Var> _field_owner = jule::Ptr<_2200a2657_Var>();


	_20683ebaa_Eval(jule::Ptr<_21eee051d_Sema> __param_s, jule::Trait<_206c9641e_Lookup> __param_lookup, jule::Ptr<_2300b54e5_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Bool __param_ignored, jule::Ptr<_2200a2657_Var> __param_owner): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_ignored(__param_ignored), _field_owner(__param_owner) {
		this->self = jule::Ptr<_20683ebaa_Eval>::make(this, nullptr);

	}

	~_20683ebaa_Eval(void) { this->self.ref = nullptr; }

	_20683ebaa_Eval(void) { this->self = jule::Ptr<_20683ebaa_Eval>::make(this, nullptr); }

	inline void _method_push_err(_2220dce43_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ptr<_20683ebaa_Data> _method_lit_nil(void);


	inline jule::Ptr<_20683ebaa_Data> _method_lit_str(jule::Ptr<_221d8b043_LitExpr>&);


	inline jule::Ptr<_20683ebaa_Data> _method_lit_bool(jule::Ptr<_221d8b043_LitExpr>&);


	inline jule::Ptr<_20683ebaa_Data> _method_lit_rune(jule::Ptr<_221d8b043_LitExpr>&);


	inline jule::Ptr<_20683ebaa_Data> _method_lit_float(jule::Ptr<_221d8b043_LitExpr>&);


	inline jule::Ptr<_20683ebaa_Data> _method_lit_int(jule::Ptr<_221d8b043_LitExpr>&);


	inline jule::Ptr<_20683ebaa_Data> _method_lit_num(jule::Ptr<_221d8b043_LitExpr>&);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_lit(jule::Ptr<_221d8b043_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ptr<_221db702a_ReferenceStack>&);


	inline void _method_push_reference_to_fn(jule::Ptr<_222edb48e_FnIns>&);


	inline void _method_push_reference_to_var(jule::Ptr<_2200a2657_Var>&);


	inline void _method_push_reference_to_struct(jule::Ptr<_2398d04dc_StructIns>&);


	inline jule::Ptr<_20683ebaa_Data> _method___eval_enum(jule::Ptr<_23001604a_Enum>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_enum(jule::Ptr<_23001604a_Enum>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method___eval_struct(jule::Ptr<_2398d04dc_StructIns>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_struct(jule::Ptr<_2398d04dc_StructIns>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_fn_ins(jule::Ptr<_222edb48e_FnIns>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_fn(jule::Ptr<_222edb48e_Fn>,_2220dce43_Token);


	inline void _method_push_illegal_cycle_error(jule::Ptr<_2200a2657_Var>&,jule::Ptr<_2200a2657_Var>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ptr<_2200a2657_Var>&,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ptr<_2200a2657_Var>&,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_var(jule::Ptr<_2200a2657_Var>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_type_alias(jule::Ptr<_2300b54e5_TypeAlias>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_def(jule::Any,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_ident(jule::Ptr<_221d8b043_IdentExpr>);


	inline void _method_eval_unary_minus(jule::Ptr<_20683ebaa_Data>&);


	inline void _method_eval_unary_plus(jule::Ptr<_20683ebaa_Data>&);


	inline void _method_eval_unary_caret(jule::Ptr<_20683ebaa_Data>&);


	inline void _method_eval_unary_excl(jule::Ptr<_20683ebaa_Data>&);


	inline void _method_eval_unary_star(jule::Ptr<_20683ebaa_Data>&,_2220dce43_Token&);


	inline void _method_eval_unary_amper(jule::Ptr<_20683ebaa_Data>&);


	inline void _method_eval_unary_type_decl(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_221d8b043_UnaryExpr>&);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_unary(jule::Ptr<_221d8b043_UnaryExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_variadic(jule::Ptr<_221d8b043_VariadicExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_unsafe(jule::Ptr<_221d8b043_UnsafeExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_arr(jule::Ptr<_221d8b043_SliceExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_exp_slc(jule::Ptr<_221d8b043_SliceExpr>,jule::Ptr<_2300b54e5_TypeKind>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_slice_expr(jule::Ptr<_221d8b043_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ptr<_20683ebaa_Data>&,_2220dce43_Token);


	inline void _method_indexing_ptr(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_221d8b043_IndexingExpr>&);


	inline void _method_indexing_arr(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_221d8b043_IndexingExpr>&);


	inline void _method_indexing_slc(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_221d8b043_IndexingExpr>&);


	inline void _method_indexing_map(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_221d8b043_IndexingExpr>&);


	inline void _method_indexing_str(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_221d8b043_IndexingExpr>&);


	inline void _method_to_indexing(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_221d8b043_IndexingExpr>&);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_ident_decl_from_indexing(jule::Ptr<_221d8b043_IndexingExpr>&);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_indexing(jule::Ptr<_221d8b043_IndexingExpr>);


	inline std::tuple<jule::Ptr<_20683ebaa_Data>,jule::Ptr<_20683ebaa_Data>> _method_eval_slicing_exprs(jule::Ptr<_221d8b043_SlicingExpr>&);


	inline void _method_slicing_arr(jule::Ptr<_20683ebaa_Data>&);


	inline void _method_slicing_slc(jule::Ptr<_20683ebaa_Data>&);


	inline void _method_slicing_str(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>&);


	inline void _method_check_slicing(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_221d8b043_SlicingExpr>&);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_slicing(jule::Ptr<_221d8b043_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ptr<_2300b54e5_TypeKind>,jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline void _method_cast_struct(jule::Ptr<_2300b54e5_TypeKind>,jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline void _method_cast_ref(jule::Ptr<_2300b54e5_TypeKind>,jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline void _method_cast_slc(jule::Ptr<_2300b54e5_TypeKind>,jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline void _method_cast_str(jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline void _method_cast_int(jule::Ptr<_2300b54e5_TypeKind>,jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline void _method_cast_num(jule::Ptr<_2300b54e5_TypeKind>,jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline void _method_cast_prim(jule::Ptr<_2300b54e5_TypeKind>,jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline void _method_cast_constant(jule::Ptr<_2300b54e5_TypeKind>&,jule::Ptr<_20683ebaa_Data>&);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_cast_by_type_n_data(jule::Ptr<_2300b54e5_TypeKind>,jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_cast(jule::Ptr<_221d8b043_CastExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_ns_selection(jule::Ptr<_221d8b043_NsSelectionExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_struct_lit_explicit(jule::Ptr<_2398d04dc_StructIns>,jule::Slice<jule::Any>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_struct_lit(jule::Ptr<_221d8b043_StructLit>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_type(jule::Ptr<_221d8b043_TypeDecl>);


	inline void _method_call_type_fn(jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ptr<_222edb48e_FnIns>,jule::Ptr<_221d8b043_FnCallExpr>);


	inline void _method_call_builtin_fn(jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);


	inline void _method_check_fn_of_concurrent_call(jule::Ptr<_222edb48e_FnIns>&,_2220dce43_Token);


	inline void _method_process_exceptional_handler(jule::Ptr<_222edb48e_FnIns>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);


	inline void _method_call_fn(jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_fn_call(jule::Ptr<_221d8b043_FnCallExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_enum_static(jule::Ptr<_23001604a_Enum>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_struct_static(jule::Ptr<_2398d04dc_StructIns>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_trait_sub_ident(jule::Ptr<_20683ebaa_Data>,jule::Ptr<_2300167cb_Trait>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_struct_sub_ident(jule::Ptr<_20683ebaa_Data>,jule::Ptr<_2398d04dc_StructIns>,jule::Ptr<_221d8b043_SubIdentExpr>,jule::Bool);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_slice_sub_ident(jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_array_sub_ident(jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_map_sub_ident(jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_str_sub_ident(jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_int_type_static(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_uint_type_static(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_i8_type_static(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_i16_type_static(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_i32_type_static(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_i64_type_static(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_u8_type_static(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_u16_type_static(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_u32_type_static(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_u64_type_static(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_f32_type_tatic(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_f64_type_static(_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_prim_static(jule::Str,_2220dce43_Token);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_type_static(jule::Ptr<_20683ebaa_Data>,jule::Ptr<_221d8b043_SubIdentExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_obj_sub_ident(jule::Ptr<_20683ebaa_Data>,jule::Ptr<_221d8b043_SubIdentExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_sub_ident(jule::Ptr<_221d8b043_SubIdentExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_tuple(jule::Ptr<_221d8b043_TupleExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_map(jule::Ptr<_2300b54e5_Map>,jule::Ptr<_221d8b043_BraceLit>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_brace_lit(jule::Ptr<_221d8b043_BraceLit>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_anon_fn(jule::Ptr<_221d8b043_FnDecl>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_binop(jule::Ptr<_221d8b043_BinopExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_ternary(jule::Ptr<_221d8b043_TernaryExpr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ptr<_20683ebaa_Data> _method_eval(jule::Ptr<_221d8b043_Expr>);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_expr(jule::Ptr<_221d8b043_Expr>);


	inline bool operator==(const _20683ebaa_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_immutable == _Src._field_immutable &&
			this->_field_ignored == _Src._field_ignored &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _20683ebaa_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_TypeKind: public _2300b54e5_Kind {
	jule::Ptr<_2300b54e5_TypeKind> self;

	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_2300b54e5_Kind> _field_kind = jule::Trait<_2300b54e5_Kind>();


	_2300b54e5_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_2300b54e5_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {
		this->self = jule::Ptr<_2300b54e5_TypeKind>::make(this, nullptr);

	}

	~_2300b54e5_TypeKind(void) { this->self.ref = nullptr; }

	_2300b54e5_TypeKind(void) { this->self = jule::Ptr<_2300b54e5_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline jule::Ptr<_2300b54e5_TypeKind> _method_clone(void);


	inline jule::Bool _method_cpp_linked(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_void(void);


	inline jule::Bool _method_mutable(void);


	inline jule::Bool _method_nil_compatible(void);


	inline jule::Bool _method_supports_cloning(void);


	inline jule::Bool _method_variadicable(void);


	inline jule::Ptr<_2300b54e5_Prim> _method_prim(void);


	inline jule::Ptr<_2300b54e5_Sptr> _method_sptr(void);


	inline jule::Ptr<_2300b54e5_Ptr> _method_ptr(void);


	inline jule::Ptr<_23001604a_Enum> _method_enm(void);


	inline jule::Ptr<_2300b54e5_Arr> _method_arr(void);


	inline jule::Ptr<_2300b54e5_Slc> _method_slc(void);


	inline jule::Ptr<_222edb48e_FnIns> _method_fnc(void);


	inline jule::Ptr<_2398d04dc_StructIns> _method_strct(void);


	inline jule::Ptr<_2300167cb_Trait> _method_trt(void);


	inline jule::Ptr<_2300b54e5_Map> _method_map(void);


	inline jule::Ptr<_2300b54e5_Tuple> _method_tup(void);


	inline bool operator==(const _2300b54e5_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_generic == _Src._field_generic &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2300b54e5_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_TypeSymbol {
	jule::Ptr<_221d8b043_TypeDecl> _field_decl = jule::Ptr<_221d8b043_TypeDecl>();
	jule::Ptr<_2300b54e5_TypeKind> _field_kind = jule::Ptr<_2300b54e5_TypeKind>();


	_2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl> __param_decl, jule::Ptr<_2300b54e5_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_2300b54e5_TypeSymbol(void) = default;

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _2300b54e5_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2300b54e5_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_Prim: public _2300b54e5_Kind {
	jule::Ptr<_2300b54e5_Prim> self;

	jule::Str _field_kind = jule::Str();


	_2300b54e5_Prim(jule::Str __param_kind): _field_kind(__param_kind) {
		this->self = jule::Ptr<_2300b54e5_Prim>::make(this, nullptr);

	}

	~_2300b54e5_Prim(void) { this->self.ref = nullptr; }

	_2300b54e5_Prim(void) { this->self = jule::Ptr<_2300b54e5_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _2300b54e5_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2300b54e5_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_Sptr: public _2300b54e5_Kind {
	jule::Ptr<_2300b54e5_Sptr> self;

	jule::Ptr<_2300b54e5_TypeKind> _field_elem = jule::Ptr<_2300b54e5_TypeKind>();


	_2300b54e5_Sptr(jule::Ptr<_2300b54e5_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_2300b54e5_Sptr>::make(this, nullptr);

	}

	~_2300b54e5_Sptr(void) { this->self.ref = nullptr; }

	_2300b54e5_Sptr(void) { this->self = jule::Ptr<_2300b54e5_Sptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline bool operator==(const _2300b54e5_Sptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _2300b54e5_Sptr &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_Slc: public _2300b54e5_Kind {
	jule::Ptr<_2300b54e5_Slc> self;

	jule::Ptr<_2300b54e5_TypeKind> _field_elem = jule::Ptr<_2300b54e5_TypeKind>();


	_2300b54e5_Slc(jule::Ptr<_2300b54e5_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_2300b54e5_Slc>::make(this, nullptr);

	}

	~_2300b54e5_Slc(void) { this->self.ref = nullptr; }

	_2300b54e5_Slc(void) { this->self = jule::Ptr<_2300b54e5_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline bool operator==(const _2300b54e5_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _2300b54e5_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_Tuple: public _2300b54e5_Kind {
	jule::Ptr<_2300b54e5_Tuple> self;

	jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> _field_types = jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>();


	_2300b54e5_Tuple(jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> __param_types): _field_types(__param_types) {
		this->self = jule::Ptr<_2300b54e5_Tuple>::make(this, nullptr);

	}

	~_2300b54e5_Tuple(void) { this->self.ref = nullptr; }

	_2300b54e5_Tuple(void) { this->self = jule::Ptr<_2300b54e5_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline bool operator==(const _2300b54e5_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _2300b54e5_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_Map: public _2300b54e5_Kind {
	jule::Ptr<_2300b54e5_Map> self;

	jule::Ptr<_2300b54e5_TypeKind> _field_key = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Ptr<_2300b54e5_TypeKind> _field_val = jule::Ptr<_2300b54e5_TypeKind>();


	_2300b54e5_Map(jule::Ptr<_2300b54e5_TypeKind> __param_key, jule::Ptr<_2300b54e5_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {
		this->self = jule::Ptr<_2300b54e5_Map>::make(this, nullptr);

	}

	~_2300b54e5_Map(void) { this->self.ref = nullptr; }

	_2300b54e5_Map(void) { this->self = jule::Ptr<_2300b54e5_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline bool operator==(const _2300b54e5_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _2300b54e5_Map &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_Arr: public _2300b54e5_Kind {
	jule::Ptr<_2300b54e5_Arr> self;

	jule::Bool _field_auto = jule::Bool();
	jule::Int _field_n = jule::Int();
	jule::Ptr<_2300b54e5_TypeKind> _field_elem = jule::Ptr<_2300b54e5_TypeKind>();


	_2300b54e5_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ptr<_2300b54e5_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {
		this->self = jule::Ptr<_2300b54e5_Arr>::make(this, nullptr);

	}

	~_2300b54e5_Arr(void) { this->self.ref = nullptr; }

	_2300b54e5_Arr(void) { this->self = jule::Ptr<_2300b54e5_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline bool operator==(const _2300b54e5_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _2300b54e5_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_Ptr: public _2300b54e5_Kind {
	jule::Ptr<_2300b54e5_Ptr> self;

	jule::Ptr<_2300b54e5_TypeKind> _field_elem = jule::Ptr<_2300b54e5_TypeKind>();


	_2300b54e5_Ptr(jule::Ptr<_2300b54e5_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_2300b54e5_Ptr>::make(this, nullptr);

	}

	~_2300b54e5_Ptr(void) { this->self.ref = nullptr; }

	_2300b54e5_Ptr(void) { this->self = jule::Ptr<_2300b54e5_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _2300b54e5_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _2300b54e5_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;


	_2300b54e5_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_2300b54e5_Referencer(void) = default;

	inline bool operator==(const _2300b54e5_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _2300b54e5_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _221a72a71_DirectiveEval {
	jule::Slice<_23886c227_Log> _field_logs = jule::Slice<_23886c227_Log>();
	jule::Ptr<_221d8b043_Directive> _field_d = jule::Ptr<_221d8b043_Directive>();


	_221a72a71_DirectiveEval(jule::Slice<_23886c227_Log> __param_logs, jule::Ptr<_221d8b043_Directive> __param_d): _field_logs(__param_logs), _field_d(__param_d) {}

	

	_221a72a71_DirectiveEval(void) = default;

	inline void _method_push_err(_2220dce43_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Slice<_2220dce43_Token>> _method_split_operans(jule::Str,jule::Slice<_2220dce43_Token>&);


	inline jule::Bool _method_eval_directive_ident(jule::Str);


	inline jule::Bool _method_eval_directive_part(jule::Slice<_2220dce43_Token>);


	inline jule::Bool _method_eval(void);


	inline bool operator==(const _221a72a71_DirectiveEval &_Src) const {
		return 
			this->_field_logs == _Src._field_logs &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _221a72a71_DirectiveEval &_Src) const { return !this->operator==(_Src); }
};


struct _221c9ee02_PlainImporter: public _2200229c3_Importer {
	jule::Slice<jule::Ptr<_2200229c3_ImportInfo>> _field_all_packages = jule::Slice<jule::Ptr<_2200229c3_ImportInfo>>();


	_221c9ee02_PlainImporter(jule::Slice<jule::Ptr<_2200229c3_ImportInfo>> __param_all_packages): _field_all_packages(__param_all_packages) {}

	

	_221c9ee02_PlainImporter(void) = default;

	inline jule::Ptr<_2200229c3_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ptr<_221d8c242_Ast>>,jule::Slice<_23886c227_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ptr<_2200229c3_ImportInfo>);


	inline bool operator==(const _221c9ee02_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _221c9ee02_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _2219e5a9e_OrderedDefines {
	jule::Slice<jule::Ptr<_2398d04dc_Struct>> _field_structs = jule::Slice<jule::Ptr<_2398d04dc_Struct>>();
	jule::Slice<jule::Ptr<_2200a2657_Var>> _field_globals = jule::Slice<jule::Ptr<_2200a2657_Var>>();


	_2219e5a9e_OrderedDefines(jule::Slice<jule::Ptr<_2398d04dc_Struct>> __param_structs, jule::Slice<jule::Ptr<_2200a2657_Var>> __param_globals): _field_structs(__param_structs), _field_globals(__param_globals) {}

	

	_2219e5a9e_OrderedDefines(void) = default;

	inline bool operator==(const _2219e5a9e_OrderedDefines &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _2219e5a9e_OrderedDefines &_Src) const { return !this->operator==(_Src); }
};


struct _2219e5a9e_DefineOrderer {
	

	_2219e5a9e_DefineOrderer(void) = default;

	static inline jule::Bool _static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_2200a2657_Var>>&,jule::Ptr<_2200a2657_Var>);
	static inline jule::Bool _static_method_is_common_ordered_1(jule::Slice<jule::Ptr<_2398d04dc_Struct>>&,jule::Ptr<_2398d04dc_Struct>);


	static inline void _static_method_order_common_0(jule::Slice<jule::Ptr<_2200a2657_Var>>&);
	static inline void _static_method_order_common_1(jule::Slice<jule::Ptr<_2398d04dc_Struct>>&);


	static inline void _static_method_order_variables(jule::Slice<jule::Ptr<_2200a2657_Var>>&);


	static inline void _static_method_order_structures(jule::Slice<jule::Ptr<_2398d04dc_Struct>>&);


	inline bool operator==(const _2219e5a9e_DefineOrderer &_Src) const { return true; }

	inline bool operator!=(const _2219e5a9e_DefineOrderer &_Src) const { return !this->operator==(_Src); }
};


struct _221eb825d_ScopeDeadCode {
	jule::Ptr<_221eb825d_ScopeDeadCode> self;

	jule::Ptr<_221eb825d_ScopeDeadCode> _field_parent = jule::Ptr<_221eb825d_ScopeDeadCode>();
	jule::Ptr<_2300254bb_Scope> _field_s = jule::Ptr<_2300254bb_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::Int _field_i = jule::Int();


	_221eb825d_ScopeDeadCode(jule::Ptr<_221eb825d_ScopeDeadCode> __param_parent, jule::Ptr<_2300254bb_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {
		this->self = jule::Ptr<_221eb825d_ScopeDeadCode>::make(this, nullptr);

	}

	~_221eb825d_ScopeDeadCode(void) { this->self.ref = nullptr; }

	_221eb825d_ScopeDeadCode(void) { this->self = jule::Ptr<_221eb825d_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ptr<_2300254bb_Scope>&);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _221eb825d_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _221eb825d_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _1dcda1323_FileStream: public _1dcda1323_Reader,public _1dcda1323_Writer,public _1dcda1323_Stream {
	jule::Ptr<_222bcb8bb_File> _field_buff = jule::Ptr<_222bcb8bb_File>();


	_1dcda1323_FileStream(jule::Ptr<_222bcb8bb_File> __param_buff): _field_buff(__param_buff) {}

	

	_1dcda1323_FileStream(void) = default;

	static inline jule::Ptr<_1dcda1323_FileStream> _static_method_new(jule::Ptr<_222bcb8bb_File>);


	inline jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8>);


	inline jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8>);


	inline jule::Exceptional<jule::Slice<jule::U8>> _method_read_line(void);


	inline bool operator==(const _1dcda1323_FileStream &_Src) const {
		return 
			this->_field_buff == _Src._field_buff;
	}

	inline bool operator!=(const _1dcda1323_FileStream &_Src) const { return !this->operator==(_Src); }
};


struct _1dcdd7ca5_Scanner {
	jule::Trait<_1dcda1323_Reader> _field_r = jule::Trait<_1dcda1323_Reader>();
	jule::Slice<jule::U8> _field_b = jule::Slice<jule::U8>();


	_1dcdd7ca5_Scanner(jule::Trait<_1dcda1323_Reader> __param_r, jule::Slice<jule::U8> __param_b): _field_r(__param_r), _field_b(__param_b) {}

	

	_1dcdd7ca5_Scanner(void) = default;

	static inline jule::Ptr<_1dcdd7ca5_Scanner> _static_method_new(jule::Trait<_1dcda1323_Reader>);


	static inline jule::Ptr<_1dcdd7ca5_Scanner> _static_method_newf(jule::Ptr<_222bcb8bb_File>);


	inline void _method_reset(void);


	inline jule::Slice<jule::U8> _method_bytes(void);


	inline jule::Str _method_text(void);


	inline jule::Exceptional<jule::Bool> _method_scan(void);


	inline bool operator==(const _1dcdd7ca5_Scanner &_Src) const {
		return 
			this->_field_r == _Src._field_r &&
			this->_field_b == _Src._field_b;
	}

	inline bool operator!=(const _1dcdd7ca5_Scanner &_Src) const { return !this->operator==(_Src); }
};


struct _1dce1143d_AbsTime {
	jule::Uint _field_day = jule::Uint();
	jule::Uint _field_week_day = jule::Uint();
	jule::Uint _field_year_day = jule::Uint();
	jule::Uint _field_month = jule::Uint();
	jule::Uint _field_year = jule::Uint();
	jule::Uint _field_second = jule::Uint();
	jule::Uint _field_minute = jule::Uint();
	jule::Uint _field_hour = jule::Uint();


	_1dce1143d_AbsTime(jule::Uint __param_day, jule::Uint __param_week_day, jule::Uint __param_year_day, jule::Uint __param_month, jule::Uint __param_year, jule::Uint __param_second, jule::Uint __param_minute, jule::Uint __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1dce1143d_AbsTime(void) = default;

	inline jule::U64 _method_unix(void);


	inline bool operator==(const _1dce1143d_AbsTime &_Src) const {
		return 
			this->_field_day == _Src._field_day &&
			this->_field_week_day == _Src._field_week_day &&
			this->_field_year_day == _Src._field_year_day &&
			this->_field_month == _Src._field_month &&
			this->_field_year == _Src._field_year &&
			this->_field_second == _Src._field_second &&
			this->_field_minute == _Src._field_minute &&
			this->_field_hour == _Src._field_hour;
	}

	inline bool operator!=(const _1dce1143d_AbsTime &_Src) const { return !this->operator==(_Src); }
};


struct _1dce1143d_Time {
	jule::U64 _field_sec = jule::U64();


	_1dce1143d_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1dce1143d_Time(void) = default;

	static inline _1dce1143d_Time _static_method_unix(jule::U64);


	static inline _1dce1143d_Time _static_method_now(void);


	inline jule::U64 _method_unix(void);


	inline jule::Uint _method_day(void);


	inline jule::Uint _method_month(void);


	inline jule::Uint _method_year(void);


	inline jule::Uint _method_second(void);


	inline jule::Uint _method_minute(void);


	inline jule::Uint _method_hour(void);


	inline _1dce1143d_AbsTime _method_abs(void);


	inline bool operator==(const _1dce1143d_Time &_Src) const {
		return 
			this->_field_sec == _Src._field_sec;
	}

	inline bool operator!=(const _1dce1143d_Time &_Src) const { return !this->operator==(_Src); }
};


struct _1dce1143d_Duration {
	

	_1dce1143d_Duration(void) = default;

	static inline jule::I64 _static_method_nanoseconds(jule::I64);


	static inline jule::I64 _static_method_microseconds(jule::I64);


	static inline jule::I64 _static_method_milliseconds(jule::I64);


	static inline jule::I64 _static_method_seconds(jule::I64);


	static inline jule::I64 _static_method_minutes(jule::I64);


	static inline jule::I64 _static_method_hours(jule::I64);


	inline bool operator==(const _1dce1143d_Duration &_Src) const { return true; }

	inline bool operator!=(const _1dce1143d_Duration &_Src) const { return !this->operator==(_Src); }
};


struct _1dccb6843_Flag_0: public _1dccb6843_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Int _field__default = jule::Int();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Int> _field__data = jule::Ptr<jule::Int>();


	_1dccb6843_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::Int __param__default, jule::Str __param__what, jule::Ptr<jule::Int> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1dccb6843_Flag_0(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1dccb6843_Flag_0 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1dccb6843_Flag_0 &_Src) const { return !this->operator==(_Src); }
};

struct _1dccb6843_Flag_1: public _1dccb6843_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Uint _field__default = jule::Uint();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Uint> _field__data = jule::Ptr<jule::Uint>();


	_1dccb6843_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::Uint __param__default, jule::Str __param__what, jule::Ptr<jule::Uint> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1dccb6843_Flag_1(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1dccb6843_Flag_1 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1dccb6843_Flag_1 &_Src) const { return !this->operator==(_Src); }
};

struct _1dccb6843_Flag_2: public _1dccb6843_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();


	_1dccb6843_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1dccb6843_Flag_2(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1dccb6843_Flag_2 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1dccb6843_Flag_2 &_Src) const { return !this->operator==(_Src); }
};

struct _1dccb6843_Flag_3: public _1dccb6843_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();


	_1dccb6843_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1dccb6843_Flag_3(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1dccb6843_Flag_3 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1dccb6843_Flag_3 &_Src) const { return !this->operator==(_Src); }
};

struct _1dccb6843_Flag_4: public _1dccb6843_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();


	_1dccb6843_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1dccb6843_Flag_4(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _1dccb6843_Flag_4 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _1dccb6843_Flag_4 &_Src) const { return !this->operator==(_Src); }
};


struct _1dccb6843_FlagSet {
	jule::Slice<jule::Trait<_1dccb6843_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1dccb6843_CommonFlag>>();
	jule::Slice<jule::Str> _field__errors = jule::Slice<jule::Str>();


	_1dccb6843_FlagSet(jule::Slice<jule::Trait<_1dccb6843_CommonFlag>> __param__flags, jule::Slice<jule::Str> __param__errors): _field__flags(__param__flags), _field__errors(__param__errors) {}

	

	_1dccb6843_FlagSet(void) = default;

	static inline jule::Ptr<_1dccb6843_FlagSet> _static_method_new(void);


	inline jule::Trait<_1dccb6843_CommonFlag> _method_find_flag(jule::Str);


	inline jule::Trait<_1dccb6843_CommonFlag> _method_find_flag_short(jule::I32);


	inline jule::Slice<jule::Trait<_1dccb6843_CommonFlag>> _method_flags(void);


	inline std::tuple<jule::Slice<jule::Str>,jule::Str> _method_parse(jule::Slice<jule::Str>);


	inline void _method_reset(void);


	inline jule::Ptr<_1dccb6843_Flag_3> _method_add_flag_common_0(jule::Str,jule::I32,jule::Str);
	inline jule::Ptr<_1dccb6843_Flag_4> _method_add_flag_common_1(jule::Str,jule::I32,jule::Str);




	inline void _method_add_var_0(jule::Ptr<jule::Bool>,jule::Str,jule::I32,jule::Str);
	inline void _method_add_var_1(jule::Ptr<jule::Str>,jule::Str,jule::I32,jule::Str);


	inline bool operator==(const _1dccb6843_FlagSet &_Src) const {
		return 
			this->_field__flags == _Src._field__flags &&
			this->_field__errors == _Src._field__errors;
	}

	inline bool operator!=(const _1dccb6843_FlagSet &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_If {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();
	jule::Ptr<_221d8b043_ScopeTree> _field_scope = jule::Ptr<_221d8b043_ScopeTree>();


	_221d8b043_If(_2220dce43_Token __param_token, jule::Ptr<_221d8b043_Expr> __param_expr, jule::Ptr<_221d8b043_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_221d8b043_If(void) = default;

	inline bool operator==(const _221d8b043_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _221d8b043_If &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_Else {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Ptr<_221d8b043_ScopeTree> _field_scope = jule::Ptr<_221d8b043_ScopeTree>();


	_221d8b043_Else(_2220dce43_Token __param_token, jule::Ptr<_221d8b043_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_221d8b043_Else(void) = default;

	inline bool operator==(const _221d8b043_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _221d8b043_Else &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_Directive {
	_2220dce43_Token _field_tag = _2220dce43_Token();
	jule::Slice<_2220dce43_Token> _field_args = jule::Slice<_2220dce43_Token>();


	_221d8b043_Directive(_2220dce43_Token __param_tag, jule::Slice<_2220dce43_Token> __param_args): _field_tag(__param_tag), _field_args(__param_args) {}

	

	_221d8b043_Directive(void) = default;

	inline bool operator==(const _221d8b043_Directive &_Src) const {
		return 
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _221d8b043_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_TypeAliasDecl {
	jule::Ptr<_221d8b043_ScopeTree> _field_scope = jule::Ptr<_221d8b043_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_221d8b043_TypeDecl> _field_kind = jule::Ptr<_221d8b043_TypeDecl>();
	jule::Ptr<_221d8b043_CommentGroup> _field_doc_comments = jule::Ptr<_221d8b043_CommentGroup>();


	_221d8b043_TypeAliasDecl(jule::Ptr<_221d8b043_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _2220dce43_Token __param_token, jule::Str __param_ident, jule::Ptr<_221d8b043_TypeDecl> __param_kind, jule::Ptr<_221d8b043_CommentGroup> __param_doc_comments): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc_comments(__param_doc_comments) {}

	

	_221d8b043_TypeAliasDecl(void) = default;

	inline bool operator==(const _221d8b043_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _221d8b043_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_Case {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Ptr<_221d8b043_ScopeTree> _field_scope = jule::Ptr<_221d8b043_ScopeTree>();
	jule::Slice<jule::Ptr<_221d8b043_Expr>> _field_exprs = jule::Slice<jule::Ptr<_221d8b043_Expr>>();


	_221d8b043_Case(_2220dce43_Token __param_token, jule::Ptr<_221d8b043_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_221d8b043_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_221d8b043_Case(void) = default;

	inline bool operator==(const _221d8b043_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _221d8b043_Case &_Src) const { return !this->operator==(_Src); }
};


struct _21eedb492_FnCallExprModel {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Ptr<_222edb48e_FnIns> _field_func = jule::Ptr<_222edb48e_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_2300254bb_Scope> _field_except = jule::Ptr<_2300254bb_Scope>();


	_21eedb492_FnCallExprModel(_2220dce43_Token __param_token, jule::Ptr<_222edb48e_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args, jule::Ptr<_2300254bb_Scope> __param_except): _field_token(__param_token), _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args), _field_except(__param_except) {}

	

	_21eedb492_FnCallExprModel(void) = default;

	inline bool operator==(const _21eedb492_FnCallExprModel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args &&
			this->_field_except == _Src._field_except;
	}

	inline bool operator!=(const _21eedb492_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_MatchCase {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();
	jule::Slice<jule::Ptr<_221d8b043_Case>> _field_cases = jule::Slice<jule::Ptr<_221d8b043_Case>>();
	jule::Ptr<_221d8b043_Else> _field_default = jule::Ptr<_221d8b043_Else>();


	_221d8b043_MatchCase(_2220dce43_Token __param_token, jule::Bool __param_type_match, jule::Ptr<_221d8b043_Expr> __param_expr, jule::Slice<jule::Ptr<_221d8b043_Case>> __param_cases, jule::Ptr<_221d8b043_Else> __param_default): _field_token(__param_token), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_221d8b043_MatchCase(void) = default;

	inline bool operator==(const _221d8b043_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _221d8b043_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_UseDecl {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<_2220dce43_Token> _field_selected = jule::Slice<_2220dce43_Token>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();


	_221d8b043_UseDecl(_2220dce43_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_2220dce43_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_221d8b043_UseDecl(void) = default;

	inline bool operator==(const _221d8b043_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_alias == _Src._field_alias &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _221d8b043_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_EnumItemDecl {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();


	_221d8b043_EnumItemDecl(_2220dce43_Token __param_token, jule::Str __param_ident, jule::Ptr<_221d8b043_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_221d8b043_EnumItemDecl(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _221d8b043_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_EnumDecl {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_221d8b043_TypeDecl> _field_kind = jule::Ptr<_221d8b043_TypeDecl>();
	jule::Slice<jule::Ptr<_221d8b043_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_221d8b043_EnumItemDecl>>();
	jule::Ptr<_221d8b043_CommentGroup> _field_doc_comments = jule::Ptr<_221d8b043_CommentGroup>();


	_221d8b043_EnumDecl(_2220dce43_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_221d8b043_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_221d8b043_EnumItemDecl>> __param_items, jule::Ptr<_221d8b043_CommentGroup> __param_doc_comments): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc_comments(__param_doc_comments) {}

	

	_221d8b043_EnumDecl(void) = default;

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _221d8b043_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _221d8b043_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_FieldDecl {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_221d8b043_TypeDecl> _field_kind = jule::Ptr<_221d8b043_TypeDecl>();


	_221d8b043_FieldDecl(_2220dce43_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_221d8b043_TypeDecl> __param_kind): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_221d8b043_FieldDecl(void) = default;

	inline bool operator==(const _221d8b043_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _221d8b043_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_StructDecl {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_221d8b043_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_221d8b043_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_221d8b043_Directive>> _field_directives = jule::Slice<jule::Ptr<_221d8b043_Directive>>();
	jule::Ptr<_221d8b043_CommentGroup> _field_doc_comments = jule::Ptr<_221d8b043_CommentGroup>();
	jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>();


	_221d8b043_StructDecl(_2220dce43_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_221d8b043_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_221d8b043_Directive>> __param_directives, jule::Ptr<_221d8b043_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_generics(__param_generics) {}

	

	_221d8b043_StructDecl(void) = default;

	inline bool operator==(const _221d8b043_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _221d8b043_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_TraitDecl {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Ptr<_221d8b043_CommentGroup> _field_doc_comments = jule::Ptr<_221d8b043_CommentGroup>();
	jule::Slice<jule::Ptr<_221d8b043_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_221d8b043_FnDecl>>();


	_221d8b043_TraitDecl(_2220dce43_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ptr<_221d8b043_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_221d8b043_FnDecl>> __param_methods): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_doc_comments(__param_doc_comments), _field_methods(__param_methods) {}

	

	_221d8b043_TraitDecl(void) = default;

	inline bool operator==(const _221d8b043_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _221d8b043_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_Impl {
	_2220dce43_Token _field_base = _2220dce43_Token();
	_2220dce43_Token _field_dest = _2220dce43_Token();
	jule::Slice<jule::Ptr<_221d8b043_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_221d8b043_FnDecl>>();
	jule::Slice<jule::Ptr<_221d8b043_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_221d8b043_VarDecl>>();


	_221d8b043_Impl(_2220dce43_Token __param_base, _2220dce43_Token __param_dest, jule::Slice<jule::Ptr<_221d8b043_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_221d8b043_VarDecl>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_221d8b043_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _221d8b043_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _221d8b043_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_Expr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Any _field_kind = jule::Any();


	_221d8b043_Expr(_2220dce43_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_221d8b043_Expr(void) = default;

	inline bool operator==(const _221d8b043_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _221d8b043_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_UseExpr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();


	_221d8b043_UseExpr(_2220dce43_Token __param_token, jule::Ptr<_221d8b043_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_221d8b043_UseExpr(void) = default;

	inline bool operator==(const _221d8b043_UseExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_UseExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_TypeDecl {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Any _field_kind = jule::Any();


	_221d8b043_TypeDecl(_2220dce43_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_221d8b043_TypeDecl(void) = default;

	inline bool operator==(const _221d8b043_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _221d8b043_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_LitExpr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_value = jule::Str();


	_221d8b043_LitExpr(_2220dce43_Token __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_221d8b043_LitExpr(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _221d8b043_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _221d8b043_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_UnsafeExpr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Any _field_expr = jule::Any();


	_221d8b043_UnsafeExpr(_2220dce43_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_221d8b043_UnsafeExpr(void) = default;

	inline bool operator==(const _221d8b043_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_CoExpr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();


	_221d8b043_CoExpr(_2220dce43_Token __param_token, jule::Ptr<_221d8b043_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_221d8b043_CoExpr(void) = default;

	inline bool operator==(const _221d8b043_CoExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_CoExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_IdentExpr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();


	_221d8b043_IdentExpr(_2220dce43_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_221d8b043_IdentExpr(void) = default;

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _221d8b043_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _221d8b043_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _222d4854e_AssignInfo {
	jule::Slice<_2220dce43_Token> _field_l = jule::Slice<_2220dce43_Token>();
	jule::Slice<_2220dce43_Token> _field_r = jule::Slice<_2220dce43_Token>();
	_2220dce43_Token _field_setter = _2220dce43_Token();
	jule::Bool _field_ok = jule::Bool();


	_222d4854e_AssignInfo(jule::Slice<_2220dce43_Token> __param_l, jule::Slice<_2220dce43_Token> __param_r, _2220dce43_Token __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_222d4854e_AssignInfo(void) = default;

	inline bool operator==(const _222d4854e_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _222d4854e_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_UnaryExpr {
	_2220dce43_Token _field_op = _2220dce43_Token();
	jule::Any _field_expr = jule::Any();


	_221d8b043_UnaryExpr(_2220dce43_Token __param_op, jule::Any __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_221d8b043_UnaryExpr(void) = default;

	inline bool operator==(const _221d8b043_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_VariadicExpr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Any _field_expr = jule::Any();


	_221d8b043_VariadicExpr(_2220dce43_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_221d8b043_VariadicExpr(void) = default;

	inline bool operator==(const _221d8b043_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_IdentTypeDecl {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_221d8b043_TypeDecl>>();


	_221d8b043_IdentTypeDecl(_2220dce43_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_221d8b043_IdentTypeDecl(void) = default;

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _221d8b043_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _221d8b043_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2398d04dc_Field {
	jule::Ptr<_2398d04dc_Field> self;

	jule::Ptr<_2398d04dc_Struct> _field_owner = jule::Ptr<_2398d04dc_Struct>();
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_2300b54e5_TypeSymbol> _field_kind = jule::Ptr<_2300b54e5_TypeSymbol>();


	_2398d04dc_Field(jule::Ptr<_2398d04dc_Struct> __param_owner, _2220dce43_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_2300b54e5_TypeSymbol> __param_kind): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {
		this->self = jule::Ptr<_2398d04dc_Field>::make(this, nullptr);

	}

	~_2398d04dc_Field(void) { this->self.ref = nullptr; }

	_2398d04dc_Field(void) { this->self = jule::Ptr<_2398d04dc_Field>::make(this, nullptr); }

	inline jule::Ptr<_2398d04dc_FieldIns> _method_instance(void);


	inline bool operator==(const _2398d04dc_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2398d04dc_Field &_Src) const { return !this->operator==(_Src); }
};


struct _2398d04dc_Struct {
	jule::Ptr<_2398d04dc_Struct> self;

	jule::Ptr<_21eee051d_Sema> _field_sema = jule::Ptr<_21eee051d_Sema>();
	jule::Slice<jule::Ptr<_2398d04dc_Struct>> _field_depends = jule::Slice<jule::Ptr<_2398d04dc_Struct>>();
	jule::Slice<jule::Ptr<_2398d04dc_Struct>> _field_uses = jule::Slice<jule::Ptr<_2398d04dc_Struct>>();
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_2398d04dc_Field>> _field_fields = jule::Slice<jule::Ptr<_2398d04dc_Field>>();
	jule::Slice<jule::Ptr<_222edb48e_Fn>> _field_methods = jule::Slice<jule::Ptr<_222edb48e_Fn>>();
	jule::Slice<jule::Ptr<_2200a2657_Var>> _field_statics = jule::Slice<jule::Ptr<_2200a2657_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_221d8b043_Directive>> _field_directives = jule::Slice<jule::Ptr<_221d8b043_Directive>>();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>();
	jule::Slice<jule::Ptr<_2300167cb_Trait>> _field_implements = jule::Slice<jule::Ptr<_2300167cb_Trait>>();
	jule::Slice<jule::Ptr<_2398d04dc_StructIns>> _field_instances = jule::Slice<jule::Ptr<_2398d04dc_StructIns>>();


	_2398d04dc_Struct(jule::Ptr<_21eee051d_Sema> __param_sema, jule::Slice<jule::Ptr<_2398d04dc_Struct>> __param_depends, jule::Slice<jule::Ptr<_2398d04dc_Struct>> __param_uses, _2220dce43_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_2398d04dc_Field>> __param_fields, jule::Slice<jule::Ptr<_222edb48e_Fn>> __param_methods, jule::Slice<jule::Ptr<_2200a2657_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_221d8b043_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_2300167cb_Trait>> __param_implements, jule::Slice<jule::Ptr<_2398d04dc_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc(__param_doc), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {
		this->self = jule::Ptr<_2398d04dc_Struct>::make(this, nullptr);

	}

	~_2398d04dc_Struct(void) { this->self.ref = nullptr; }

	_2398d04dc_Struct(void) { this->self = jule::Ptr<_2398d04dc_Struct>::make(this, nullptr); }

	inline jule::Ptr<_2398d04dc_StructIns> _method_instance(void);


	inline jule::Ptr<_2398d04dc_StructIns> _method_append_instance(jule::Ptr<_2398d04dc_StructIns>&);


	inline jule::Ptr<_222edb48e_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ptr<_2200a2657_Var> _method_find_static(jule::Str);


	inline jule::Ptr<_2398d04dc_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ptr<_2300167cb_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ptr<_2398d04dc_Struct>);


	inline jule::Bool _method_has_ref_accessible(void);


	inline bool operator==(const _2398d04dc_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _2398d04dc_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_NsSelectionExpr {
	jule::Slice<_2220dce43_Token> _field_ns = jule::Slice<_2220dce43_Token>();
	_2220dce43_Token _field_ident = _2220dce43_Token();


	_221d8b043_NsSelectionExpr(jule::Slice<_2220dce43_Token> __param_ns, _2220dce43_Token __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_221d8b043_NsSelectionExpr(void) = default;

	inline bool operator==(const _221d8b043_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _221d8b043_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Any _field_expr = jule::Any();
	_2220dce43_Token _field_ident = _2220dce43_Token();


	_221d8b043_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _2220dce43_Token __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_221d8b043_SubIdentExpr(void) = default;

	inline bool operator==(const _221d8b043_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _221d8b043_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_BinopExpr {
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	_2220dce43_Token _field_op = _2220dce43_Token();


	_221d8b043_BinopExpr(jule::Any __param_left, jule::Any __param_right, _2220dce43_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_221d8b043_BinopExpr(void) = default;

	inline bool operator==(const _221d8b043_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _221d8b043_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _222edb48e_Param {
	jule::Ptr<_222edb48e_Param> self;

	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_2300b54e5_TypeSymbol> _field_kind = jule::Ptr<_2300b54e5_TypeSymbol>();
	jule::Str _field_ident = jule::Str();


	_222edb48e_Param(_2220dce43_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_2300b54e5_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {
		this->self = jule::Ptr<_222edb48e_Param>::make(this, nullptr);

	}

	~_222edb48e_Param(void) { this->self.ref = nullptr; }

	_222edb48e_Param(void) { this->self = jule::Ptr<_222edb48e_Param>::make(this, nullptr); }

	inline jule::Ptr<_222edb48e_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _222edb48e_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _222edb48e_Param &_Src) const { return !this->operator==(_Src); }
};


struct _222edb48e_Fn {
	jule::Ptr<_222edb48e_Fn> self;

	jule::Ptr<_21eee051d_Sema> _field_sema = jule::Ptr<_21eee051d_Sema>();
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_221d8b043_Directive>> _field_directives = jule::Slice<jule::Ptr<_221d8b043_Directive>>();
	jule::Str _field_doc = jule::Str();
	jule::Ptr<_221d8b043_ScopeTree> _field_scope = jule::Ptr<_221d8b043_ScopeTree>();
	jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>();
	jule::Ptr<_222edb48e_RetType> _field_result = jule::Ptr<_222edb48e_RetType>();
	jule::Slice<jule::Ptr<_222edb48e_Param>> _field_params = jule::Slice<jule::Ptr<_222edb48e_Param>>();
	jule::Ptr<_2398d04dc_Struct> _field_owner = jule::Ptr<_2398d04dc_Struct>();
	jule::Slice<jule::Ptr<_222edb48e_FnIns>> _field_instances = jule::Slice<jule::Ptr<_222edb48e_FnIns>>();


	_222edb48e_Fn(jule::Ptr<_21eee051d_Sema> __param_sema, _2220dce43_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_221d8b043_Directive>> __param_directives, jule::Str __param_doc, jule::Ptr<_221d8b043_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> __param_generics, jule::Ptr<_222edb48e_RetType> __param_result, jule::Slice<jule::Ptr<_222edb48e_Param>> __param_params, jule::Ptr<_2398d04dc_Struct> __param_owner, jule::Slice<jule::Ptr<_222edb48e_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc(__param_doc), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {
		this->self = jule::Ptr<_222edb48e_Fn>::make(this, nullptr);

	}

	~_222edb48e_Fn(void) { this->self.ref = nullptr; }

	_222edb48e_Fn(void) { this->self = jule::Ptr<_222edb48e_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ptr<_222edb48e_FnIns> _method_instance_force(void);


	inline jule::Ptr<_222edb48e_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ptr<_222edb48e_FnIns>&);


	inline bool operator==(const _222edb48e_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_exceptional == _Src._field_exceptional &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _222edb48e_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_FnCallExpr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();
	jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_221d8b043_TypeDecl>>();
	jule::Slice<jule::Ptr<_221d8b043_Expr>> _field_args = jule::Slice<jule::Ptr<_221d8b043_Expr>>();
	jule::Ptr<_221d8b043_ScopeTree> _field_exception = jule::Ptr<_221d8b043_ScopeTree>();


	_221d8b043_FnCallExpr(_2220dce43_Token __param_token, jule::Ptr<_221d8b043_Expr> __param_expr, jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_221d8b043_Expr>> __param_args, jule::Ptr<_221d8b043_ScopeTree> __param_exception): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_exception(__param_exception) {}

	

	_221d8b043_FnCallExpr(void) = default;

	inline jule::Bool _method_unhandled(void);


	inline jule::Bool _method_ignored(void);


	inline bool operator==(const _221d8b043_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_exception == _Src._field_exception;
	}

	inline bool operator!=(const _221d8b043_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2200229c3_ImportInfo: public _206c9641e_Lookup {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<_2220dce43_Token> _field_selected = jule::Slice<_2220dce43_Token>();
	jule::Ptr<_2200229c3_Package> _field_package = jule::Ptr<_2200229c3_Package>();


	_2200229c3_ImportInfo(_2220dce43_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_2220dce43_Token> __param_selected, jule::Ptr<_2200229c3_Package> __param_package): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package) {}

	

	_2200229c3_ImportInfo(void) = default;

	inline jule::Ptr<_2200229c3_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_2200229c3_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)>);


	inline jule::Ptr<_2200a2657_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_2300b54e5_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_2398d04dc_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_222edb48e_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_2300167cb_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_23001604a_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _2200229c3_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_alias == _Src._field_alias &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _2200229c3_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_FieldExprPair {
	_2220dce43_Token _field_field = _2220dce43_Token();
	jule::Any _field_expr = jule::Any();


	_221d8b043_FieldExprPair(_2220dce43_Token __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_221d8b043_FieldExprPair(void) = default;

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _221d8b043_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_Node {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Any _field_data = jule::Any();


	_221d8b043_Node(_2220dce43_Token __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_221d8b043_Node(void) = default;

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_directive(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _221d8b043_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _221d8b043_Node &_Src) const { return !this->operator==(_Src); }
};


struct _221db702a_Pass {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_text = jule::Str();


	_221db702a_Pass(_2220dce43_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_221db702a_Pass(void) = default;

	inline bool operator==(const _221db702a_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _221db702a_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _2200a2657_Var {
	jule::Ptr<_2300254bb_Scope> _field_scope = jule::Ptr<_2300254bb_Scope>();
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_doc = jule::Str();
	jule::Ptr<_2300b54e5_TypeSymbol> _field_kind = jule::Ptr<_2300b54e5_TypeSymbol>();
	jule::Ptr<_20683ebaa_Value> _field_value = jule::Ptr<_20683ebaa_Value>();
	jule::Ptr<_221db702a_ReferenceStack> _field_references = jule::Ptr<_221db702a_ReferenceStack>();
	jule::Slice<jule::Ptr<_221d8b043_Directive>> _field_directives = jule::Slice<jule::Ptr<_221d8b043_Directive>>();
	jule::Ptr<_2200a2657_IterRelation> _field_iter_relation = jule::Ptr<_2200a2657_IterRelation>();
	jule::Slice<jule::Ptr<_2200a2657_Var>> _field_depends = jule::Slice<jule::Ptr<_2200a2657_Var>>();


	_2200a2657_Var(jule::Ptr<_2300254bb_Scope> __param_scope, _2220dce43_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ptr<_2300b54e5_TypeSymbol> __param_kind, jule::Ptr<_20683ebaa_Value> __param_value, jule::Ptr<_221db702a_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_221d8b043_Directive>> __param_directives, jule::Ptr<_2200a2657_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_2200a2657_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_doc(__param_doc), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_2200a2657_Var(void) = default;

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(const _2200a2657_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_iter_relation == _Src._field_iter_relation &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _2200a2657_Var &_Src) const { return !this->operator==(_Src); }
};


struct _2200223c9_TypeCompatibilityChecker {
	jule::Ptr<_21eee051d_Sema> _field_s = jule::Ptr<_21eee051d_Sema>();
	jule::Ptr<_2300b54e5_TypeKind> _field_dest = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Ptr<_2300b54e5_TypeKind> _field_src = jule::Ptr<_2300b54e5_TypeKind>();
	_2220dce43_Token _field_error_token = _2220dce43_Token();


	_2200223c9_TypeCompatibilityChecker(jule::Ptr<_21eee051d_Sema> __param_s, jule::Ptr<_2300b54e5_TypeKind> __param_dest, jule::Ptr<_2300b54e5_TypeKind> __param_src, _2220dce43_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token) {}

	

	_2200223c9_TypeCompatibilityChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_prim(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _2200223c9_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token;
	}

	inline bool operator!=(const _2200223c9_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


struct _2200223c9_AssignTypeChecker {
	jule::Ptr<_21eee051d_Sema> _field_s = jule::Ptr<_21eee051d_Sema>();
	jule::Ptr<_2300b54e5_TypeKind> _field_dest = jule::Ptr<_2300b54e5_TypeKind>();
	jule::Ptr<_20683ebaa_Data> _field_d = jule::Ptr<_20683ebaa_Data>();
	_2220dce43_Token _field_error_token = _2220dce43_Token();


	_2200223c9_AssignTypeChecker(jule::Ptr<_21eee051d_Sema> __param_s, jule::Ptr<_2300b54e5_TypeKind> __param_dest, jule::Ptr<_20683ebaa_Data> __param_d, _2220dce43_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_2200223c9_AssignTypeChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_is_prim(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _2200223c9_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token;
	}

	inline bool operator!=(const _2200223c9_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _2200223c9_DynamicTypeAnnotation {
	jule::Ptr<_20683ebaa_Eval> _field_e = jule::Ptr<_20683ebaa_Eval>();
	jule::Ptr<_222edb48e_FnIns> _field_f = jule::Ptr<_222edb48e_FnIns>();
	jule::Ptr<_222edb48e_ParamIns> _field_p = jule::Ptr<_222edb48e_ParamIns>();
	jule::Ptr<_20683ebaa_Data> _field_a = jule::Ptr<_20683ebaa_Data>();
	_2220dce43_Token _field_error_token = _2220dce43_Token();
	jule::Ptr<_2300b54e5_TypeKind>* _field_k = nullptr;


	_2200223c9_DynamicTypeAnnotation(jule::Ptr<_20683ebaa_Eval> __param_e, jule::Ptr<_222edb48e_FnIns> __param_f, jule::Ptr<_222edb48e_ParamIns> __param_p, jule::Ptr<_20683ebaa_Data> __param_a, _2220dce43_Token __param_error_token, jule::Ptr<_2300b54e5_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_2200223c9_DynamicTypeAnnotation(void) = default;

	inline void _method_push_generic(jule::Ptr<_2300b54e5_TypeKind>&,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Bool _method_annotate_slc(jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Bool _method_check_map_key(jule::Ptr<_2300b54e5_TypeKind>*,jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Bool _method_annotate_map(jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Bool _method_annotate_fn(jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Bool _method_annotate_ptr(jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Bool _method_annotate_sptr(jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Bool _method_annotate_any(jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Bool _method_annotate_kind(jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _2200223c9_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _2200223c9_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _2200223c9_FnCallArgChecker {
	jule::Ptr<_20683ebaa_Eval> _field_e = jule::Ptr<_20683ebaa_Eval>();
	jule::Slice<jule::Ptr<_221d8b043_Expr>> _field_args = jule::Slice<jule::Ptr<_221d8b043_Expr>>();
	_2220dce43_Token _field_error_token = _2220dce43_Token();
	jule::Ptr<_222edb48e_FnIns> _field_f = jule::Ptr<_222edb48e_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();


	_2200223c9_FnCallArgChecker(jule::Ptr<_20683ebaa_Eval> __param_e, jule::Slice<jule::Ptr<_221d8b043_Expr>> __param_args, _2220dce43_Token __param_error_token, jule::Ptr<_222edb48e_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_2200223c9_FnCallArgChecker(void) = default;

	inline void _method_push_err_token(_2220dce43_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ptr<_222edb48e_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ptr<_222edb48e_ParamIns>>&);


	inline jule::Bool _method_check_arg(jule::Ptr<_222edb48e_ParamIns>&,jule::Ptr<_20683ebaa_Data>&,_2220dce43_Token&);


	inline jule::Bool _method_push(jule::Ptr<_222edb48e_ParamIns>&,jule::Ptr<_221d8b043_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ptr<_222edb48e_ParamIns>&,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ptr<_222edb48e_ParamIns>>&);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _2200223c9_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _2200223c9_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _2200223c9_StructLitChecker {
	jule::Ptr<_20683ebaa_Eval> _field_e = jule::Ptr<_20683ebaa_Eval>();
	_2220dce43_Token _field_error_token = _2220dce43_Token();
	jule::Ptr<_2398d04dc_StructIns> _field_s = jule::Ptr<_2398d04dc_StructIns>();
	jule::Slice<jule::Ptr<_21eedb492_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_21eedb492_StructArgExprModel>>();


	_2200223c9_StructLitChecker(jule::Ptr<_20683ebaa_Eval> __param_e, _2220dce43_Token __param_error_token, jule::Ptr<_2398d04dc_StructIns> __param_s, jule::Slice<jule::Ptr<_21eedb492_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_2200223c9_StructLitChecker(void) = default;

	inline void _method_push_err(_2220dce43_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ptr<_2398d04dc_FieldIns>&,jule::Ptr<_20683ebaa_Data>&,_2220dce43_Token&);


	inline void _method_check_pair(jule::Ptr<_221d8b043_FieldExprPair>&,jule::Slice<jule::Any>&);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>&);


	inline void _method_check(jule::Slice<jule::Any>&);


	inline bool operator==(const _2200223c9_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _2200223c9_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_BraceLit {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_221d8b043_BraceLit(_2220dce43_Token __param_token, jule::Slice<jule::Any> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_221d8b043_BraceLit(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _221d8b043_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _221d8b043_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _2200223c9_RetTypeChecker {
	jule::Ptr<_2300254bb_ScopeChecker> _field_sc = jule::Ptr<_2300254bb_ScopeChecker>();
	jule::Ptr<_222edb48e_FnIns> _field_f = jule::Ptr<_222edb48e_FnIns>();
	jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> _field_types = jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>();
	jule::Slice<jule::Ptr<_221d8b043_Expr>> _field_exprs = jule::Slice<jule::Ptr<_221d8b043_Expr>>();
	jule::Slice<jule::Ptr<_2200a2657_Var>> _field_vars = jule::Slice<jule::Ptr<_2200a2657_Var>>();
	_2220dce43_Token _field_error_token = _2220dce43_Token();
	jule::Any _field_model = jule::Any();


	_2200223c9_RetTypeChecker(jule::Ptr<_2300254bb_ScopeChecker> __param_sc, jule::Ptr<_222edb48e_FnIns> __param_f, jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> __param_types, jule::Slice<jule::Ptr<_221d8b043_Expr>> __param_exprs, jule::Slice<jule::Ptr<_2200a2657_Var>> __param_vars, _2220dce43_Token __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_2200223c9_RetTypeChecker(void) = default;

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ptr<_221d8b043_Expr>&);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ptr<_221d8b043_Expr>&);


	inline bool operator==(const _2200223c9_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	inline bool operator!=(const _2200223c9_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _2300167cb_Trait: public _2300b54e5_Kind {
	jule::Ptr<_2300167cb_Trait> self;

	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Ptr<_222edb48e_Fn>> _field_methods = jule::Slice<jule::Ptr<_222edb48e_Fn>>();
	jule::Slice<jule::Ptr<_2398d04dc_Struct>> _field_implemented = jule::Slice<jule::Ptr<_2398d04dc_Struct>>();


	_2300167cb_Trait(_2220dce43_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_doc, jule::Slice<jule::Ptr<_222edb48e_Fn>> __param_methods, jule::Slice<jule::Ptr<_2398d04dc_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_doc(__param_doc), _field_methods(__param_methods), _field_implemented(__param_implemented) {
		this->self = jule::Ptr<_2300167cb_Trait>::make(this, nullptr);

	}

	~_2300167cb_Trait(void) { this->self.ref = nullptr; }

	_2300167cb_Trait(void) { this->self = jule::Ptr<_2300167cb_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ptr<_222edb48e_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _2300167cb_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _2300167cb_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _23001604a_EnumItem {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_20683ebaa_Value> _field_value = jule::Ptr<_20683ebaa_Value>();


	_23001604a_EnumItem(_2220dce43_Token __param_token, jule::Str __param_ident, jule::Ptr<_20683ebaa_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_23001604a_EnumItem(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _23001604a_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _23001604a_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _23001604a_Enum: public _2300b54e5_Kind {
	jule::Ptr<_23001604a_Enum> self;

	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_2300b54e5_TypeSymbol> _field_kind = jule::Ptr<_2300b54e5_TypeSymbol>();
	jule::Slice<jule::Ptr<_23001604a_EnumItem>> _field_items = jule::Slice<jule::Ptr<_23001604a_EnumItem>>();
	jule::Str _field_doc = jule::Str();


	_23001604a_Enum(_2220dce43_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_2300b54e5_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_23001604a_EnumItem>> __param_items, jule::Str __param_doc): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc(__param_doc) {
		this->self = jule::Ptr<_23001604a_Enum>::make(this, nullptr);

	}

	~_23001604a_Enum(void) { this->self.ref = nullptr; }

	_23001604a_Enum(void) { this->self = jule::Ptr<_23001604a_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_2300b54e5_TypeKind>);


	inline jule::Ptr<_23001604a_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _23001604a_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _23001604a_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _230019081_Impl {
	_2220dce43_Token _field_base = _2220dce43_Token();
	_2220dce43_Token _field_dest = _2220dce43_Token();
	jule::Slice<jule::Ptr<_222edb48e_Fn>> _field_methods = jule::Slice<jule::Ptr<_222edb48e_Fn>>();
	jule::Slice<jule::Ptr<_2200a2657_Var>> _field_statics = jule::Slice<jule::Ptr<_2200a2657_Var>>();


	_230019081_Impl(_2220dce43_Token __param_base, _2220dce43_Token __param_dest, jule::Slice<jule::Ptr<_222edb48e_Fn>> __param_methods, jule::Slice<jule::Ptr<_2200a2657_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_230019081_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _230019081_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _230019081_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _20683ebaa_BinopSolver {
	jule::Ptr<_20683ebaa_Eval> _field_e = jule::Ptr<_20683ebaa_Eval>();
	jule::Ptr<_20683ebaa_Data> _field_l = jule::Ptr<_20683ebaa_Data>();
	jule::Ptr<_20683ebaa_Data> _field_r = jule::Ptr<_20683ebaa_Data>();
	_2220dce43_Token _field_op = _2220dce43_Token();


	_20683ebaa_BinopSolver(jule::Ptr<_20683ebaa_Eval> __param_e, jule::Ptr<_20683ebaa_Data> __param_l, jule::Ptr<_20683ebaa_Data> __param_r, _2220dce43_Token __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_20683ebaa_BinopSolver(void) = default;

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_nil(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_enum(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_sptr(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_ptr(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_arr(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_slc(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_fn(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_struct(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_trait(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_any(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_bool(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ptr<_20683ebaa_Data>&);


	inline void _method_mod(void);


	inline jule::Bool _method_numbers_are_compatibile(jule::Str&,jule::Str&);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_float(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_unsig_int(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_sig_int(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval_prim(void);


	inline jule::Ptr<_20683ebaa_Data> _method_eval(void);


	inline void _method_solve_const(jule::Ptr<_20683ebaa_Data>&);


	inline void _method_post_const(jule::Ptr<_20683ebaa_Data>&);


	inline void _method_check_data(jule::Ptr<_20683ebaa_Data>&);


	inline void _method_check_datas(void);


	inline void _method_set_model(jule::Ptr<_20683ebaa_Data>&);


	inline jule::Ptr<_20683ebaa_Data> _method_solve_explicit(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>&);


	inline jule::Ptr<_20683ebaa_Data> _method_solve(jule::Ptr<_221d8b043_BinopExpr>&);


	inline bool operator==(const _20683ebaa_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _20683ebaa_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_TypeAlias {
	jule::Ptr<_221d8b043_ScopeTree> _field_scope = jule::Ptr<_221d8b043_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_2300b54e5_TypeSymbol> _field_kind = jule::Ptr<_2300b54e5_TypeSymbol>();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();


	_2300b54e5_TypeAlias(jule::Ptr<_221d8b043_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, _2220dce43_Token __param_token, jule::Str __param_ident, jule::Ptr<_2300b54e5_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc(__param_doc), _field_refers(__param_refers) {}

	

	_2300b54e5_TypeAlias(void) = default;

	inline bool operator==(const _2300b54e5_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_generic == _Src._field_generic &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _2300b54e5_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_KeyValPair {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	_2220dce43_Token _field_colon = _2220dce43_Token();


	_221d8b043_KeyValPair(jule::Any __param_key, jule::Any __param_val, _2220dce43_Token __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_221d8b043_KeyValPair(void) = default;

	inline bool operator==(const _221d8b043_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _221d8b043_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_SliceExpr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_221d8b043_SliceExpr(_2220dce43_Token __param_token, jule::Slice<jule::Any> __param_elems): _field_token(__param_token), _field_elems(__param_elems) {}

	

	_221d8b043_SliceExpr(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _221d8b043_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _221d8b043_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_IndexingExpr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_index = jule::Any();


	_221d8b043_IndexingExpr(_2220dce43_Token __param_token, jule::Any __param_expr, jule::Any __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_221d8b043_IndexingExpr(void) = default;

	inline bool operator==(const _221d8b043_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _221d8b043_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_SlicingExpr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_start = jule::Any();
	jule::Any _field_to = jule::Any();


	_221d8b043_SlicingExpr(_2220dce43_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to): _field_token(__param_token), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_221d8b043_SlicingExpr(void) = default;

	inline bool operator==(const _221d8b043_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _221d8b043_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_TernaryExpr {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_221d8b043_TernaryExpr(_2220dce43_Token __param_token, jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_token(__param_token), _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_221d8b043_TernaryExpr(void) = default;

	inline bool operator==(const _221d8b043_TernaryExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _221d8b043_TernaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_GenericDecl {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();


	_221d8b043_GenericDecl(_2220dce43_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_221d8b043_GenericDecl(void) = default;

	inline bool operator==(const _221d8b043_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _221d8b043_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_LabelSt {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();


	_221d8b043_LabelSt(_2220dce43_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_221d8b043_LabelSt(void) = default;

	inline bool operator==(const _221d8b043_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _221d8b043_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_GotoSt {
	_2220dce43_Token _field_token = _2220dce43_Token();
	_2220dce43_Token _field_label = _2220dce43_Token();


	_221d8b043_GotoSt(_2220dce43_Token __param_token, _2220dce43_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_221d8b043_GotoSt(void) = default;

	inline bool operator==(const _221d8b043_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _221d8b043_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_FallSt {
	_2220dce43_Token _field_token = _2220dce43_Token();


	_221d8b043_FallSt(_2220dce43_Token __param_token): _field_token(__param_token) {}

	

	_221d8b043_FallSt(void) = default;

	inline bool operator==(const _221d8b043_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _221d8b043_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_AssignLeft {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();


	_221d8b043_AssignLeft(_2220dce43_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_221d8b043_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_221d8b043_AssignLeft(void) = default;

	inline bool operator==(const _221d8b043_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _2300b54e5_TypeChecker {
	jule::Ptr<_21eee051d_Sema> _field_s = jule::Ptr<_21eee051d_Sema>();
	jule::Trait<_206c9641e_Lookup> _field_lookup = jule::Trait<_206c9641e_Lookup>();
	jule::Ptr<_2300b54e5_Referencer> _field_referencer = jule::Ptr<_2300b54e5_Referencer>();
	_2220dce43_Token _field_error_token = _2220dce43_Token();
	jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>();
	jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();


	_2300b54e5_TypeChecker(jule::Ptr<_21eee051d_Sema> __param_s, jule::Trait<_206c9641e_Lookup> __param_lookup, jule::Ptr<_2300b54e5_Referencer> __param_referencer, _2220dce43_Token __param_error_token, jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain) {}

	

	_2300b54e5_TypeChecker(void) = default;

	inline void _method_push_err(_2220dce43_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_2300b54e5_Prim> _method_build_prim(jule::Ptr<_221d8b043_IdentTypeDecl>&);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ptr<_221d8b043_IdentTypeDecl>&,jule::Any);


	inline jule::Trait<_2300b54e5_Kind> _method_from_type_alias(jule::Ptr<_221d8b043_IdentTypeDecl>&,jule::Ptr<_2300b54e5_TypeAlias>&);


	inline jule::Ptr<_23001604a_Enum> _method_from_enum(jule::Ptr<_221d8b043_IdentTypeDecl>&,jule::Ptr<_23001604a_Enum>&);


	inline jule::Bool _method_check_struct_ins(jule::Ptr<_2398d04dc_StructIns>&,_2220dce43_Token&);


	inline void _method_append_used_struct_reference(jule::Ptr<_2398d04dc_Struct>&);


	inline jule::Ptr<_2398d04dc_StructIns> _method_from_struct(jule::Ptr<_221d8b043_IdentTypeDecl>&,jule::Ptr<_2398d04dc_Struct>&);


	inline jule::Trait<_2300b54e5_Kind> _method_get_def(jule::Ptr<_221d8b043_IdentTypeDecl>&);


	inline jule::Trait<_2300b54e5_Kind> _method_build_ident(jule::Ptr<_221d8b043_IdentTypeDecl>);


	inline jule::Ptr<_2300b54e5_Sptr> _method_build_sptr_from_type(jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Ptr<_2300b54e5_Sptr> _method_build_sptr(jule::Ptr<_221d8b043_SptrTypeDecl>);


	inline jule::Ptr<_2300b54e5_Ptr> _method_build_ptr_from_type(jule::Ptr<_2300b54e5_TypeKind>&);


	inline jule::Ptr<_2300b54e5_Ptr> _method_build_ptr(jule::Ptr<_221d8b043_PtrTypeDecl>);


	inline jule::Ptr<_2300b54e5_Slc> _method_build_slc(jule::Ptr<_221d8b043_SlcTypeDecl>);


	inline jule::Ptr<_2300b54e5_Arr> _method_build_arr(jule::Ptr<_221d8b043_ArrTypeDecl>);


	inline jule::Ptr<_2300b54e5_Map> _method_build_map(jule::Ptr<_221d8b043_MapTypeDecl>);


	inline jule::Ptr<_2300b54e5_Tuple> _method_build_tuple(jule::Ptr<_221d8b043_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ptr<_222edb48e_FnIns>&);


	inline jule::Ptr<_222edb48e_FnIns> _method_build_fn(jule::Ptr<_221d8b043_FnDecl>);


	inline jule::Trait<_2300b54e5_Kind> _method_build_by_namespace(jule::Ptr<_221d8b043_NamespaceTypeDecl>);


	inline jule::Ptr<_2300b54e5_TypeKind> _method_build(jule::Any&);


	inline jule::Ptr<_2300b54e5_TypeKind> _method_check_decl(jule::Ptr<_221d8b043_TypeDecl>&);


	inline void _method_check(jule::Ptr<_2300b54e5_TypeSymbol>&);


	inline bool operator==(const _2300b54e5_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _2300b54e5_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	_2220dce43_Token _field_setter = _2220dce43_Token();
	jule::Slice<jule::Ptr<_221d8b043_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_221d8b043_AssignLeft>>();
	jule::Ptr<_221d8b043_Expr> _field_right = jule::Ptr<_221d8b043_Expr>();


	_221d8b043_AssignSt(jule::Bool __param_declarative, _2220dce43_Token __param_setter, jule::Slice<jule::Ptr<_221d8b043_AssignLeft>> __param_left, jule::Ptr<_221d8b043_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_221d8b043_AssignSt(void) = default;

	inline bool operator==(const _221d8b043_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _221d8b043_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_Comment {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_text = jule::Str();


	_221d8b043_Comment(_2220dce43_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_221d8b043_Comment(void) = default;

	inline bool operator==(const _221d8b043_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _221d8b043_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _239823e36_IR {
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_2200229c3_Package> _field_main = jule::Ptr<_2200229c3_Package>();
	jule::Slice<jule::Ptr<_2200229c3_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_2200229c3_ImportInfo>>();
	_2219e5a9e_OrderedDefines _field_ordered = _2219e5a9e_OrderedDefines();


	_239823e36_IR(jule::Slice<jule::Str> __param_passes, jule::Ptr<_2200229c3_Package> __param_main, jule::Slice<jule::Ptr<_2200229c3_ImportInfo>> __param_used, _2219e5a9e_OrderedDefines __param_ordered): _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_239823e36_IR(void) = default;

	static inline std::tuple<jule::Ptr<_239823e36_IR>,jule::Slice<_23886c227_Log>> _static_method_build(jule::Str,jule::Int);


	inline void _method_append_structs(jule::Ptr<_2200229c3_Package>&,jule::Slice<jule::Ptr<_2398d04dc_Struct>>&);


	inline jule::Slice<jule::Ptr<_2398d04dc_Struct>> _method_get_all_structures(void);


	inline void _method_append_vars(jule::Ptr<_2200229c3_Package>&,jule::Slice<jule::Ptr<_2200a2657_Var>>&);


	inline jule::Slice<jule::Ptr<_2200a2657_Var>> _method_get_all_variables(void);


	inline void _method_order(void);


	inline bool operator==(const _239823e36_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used &&
			this->_field_ordered == _Src._field_ordered;
	}

	inline bool operator!=(const _239823e36_IR &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_ParamDecl {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_221d8b043_TypeDecl> _field_kind = jule::Ptr<_221d8b043_TypeDecl>();
	jule::Str _field_ident = jule::Str();


	_221d8b043_ParamDecl(_2220dce43_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_221d8b043_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_221d8b043_ParamDecl(void) = default;

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _221d8b043_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _221d8b043_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_FnDecl {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_221d8b043_Directive>> _field_directives = jule::Slice<jule::Ptr<_221d8b043_Directive>>();
	jule::Ptr<_221d8b043_CommentGroup> _field_doc_comments = jule::Ptr<_221d8b043_CommentGroup>();
	jule::Ptr<_221d8b043_ScopeTree> _field_scope = jule::Ptr<_221d8b043_ScopeTree>();
	jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>();
	jule::Ptr<_221d8b043_RetTypeDecl> _field_result = jule::Ptr<_221d8b043_RetTypeDecl>();
	jule::Slice<jule::Ptr<_221d8b043_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_221d8b043_ParamDecl>>();


	_221d8b043_FnDecl(_2220dce43_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_221d8b043_Directive>> __param_directives, jule::Ptr<_221d8b043_CommentGroup> __param_doc_comments, jule::Ptr<_221d8b043_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> __param_generics, jule::Ptr<_221d8b043_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_221d8b043_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_221d8b043_FnDecl(void) = default;

	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _221d8b043_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_exceptional == _Src._field_exceptional &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _221d8b043_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_VarDecl {
	jule::Ptr<_221d8b043_ScopeTree> _field_scope = jule::Ptr<_221d8b043_ScopeTree>();
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_221d8b043_Directive>> _field_directives = jule::Slice<jule::Ptr<_221d8b043_Directive>>();
	jule::Ptr<_221d8b043_CommentGroup> _field_doc_comments = jule::Ptr<_221d8b043_CommentGroup>();
	jule::Ptr<_221d8b043_TypeDecl> _field_kind = jule::Ptr<_221d8b043_TypeDecl>();
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();


	_221d8b043_VarDecl(jule::Ptr<_221d8b043_ScopeTree> __param_scope, _2220dce43_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_221d8b043_Directive>> __param_directives, jule::Ptr<_221d8b043_CommentGroup> __param_doc_comments, jule::Ptr<_221d8b043_TypeDecl> __param_kind, jule::Ptr<_221d8b043_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_221d8b043_VarDecl(void) = default;

	inline bool operator==(const _221d8b043_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_RetSt {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();


	_221d8b043_RetSt(_2220dce43_Token __param_token, jule::Ptr<_221d8b043_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_221d8b043_RetSt(void) = default;

	inline bool operator==(const _221d8b043_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _221d8b043_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_Iter {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_221d8b043_ScopeTree> _field_scope = jule::Ptr<_221d8b043_ScopeTree>();


	_221d8b043_Iter(_2220dce43_Token __param_token, jule::Any __param_kind, jule::Ptr<_221d8b043_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_221d8b043_Iter(void) = default;

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _221d8b043_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _221d8b043_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_WhileKind {
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();
	jule::Any _field_next = jule::Any();
	_2220dce43_Token _field_next_token = _2220dce43_Token();


	_221d8b043_WhileKind(jule::Ptr<_221d8b043_Expr> __param_expr, jule::Any __param_next, _2220dce43_Token __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_221d8b043_WhileKind(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _221d8b043_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _221d8b043_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _2300254bb_ScopeLabel {
	_2220dce43_Token _field_token = _2220dce43_Token();
	jule::Ptr<_2300254bb_Label> _field_label = jule::Ptr<_2300254bb_Label>();
	jule::Int _field_pos = jule::Int();
	jule::Ptr<_2300254bb_ScopeChecker> _field_scope = jule::Ptr<_2300254bb_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();


	_2300254bb_ScopeLabel(_2220dce43_Token __param_token, jule::Ptr<_2300254bb_Label> __param_label, jule::Int __param_pos, jule::Ptr<_2300254bb_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_2300254bb_ScopeLabel(void) = default;

	inline bool operator==(const _2300254bb_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _2300254bb_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_RangeKind {
	_2220dce43_Token _field_in_token = _2220dce43_Token();
	jule::Ptr<_221d8b043_Expr> _field_expr = jule::Ptr<_221d8b043_Expr>();
	jule::Ptr<_221d8b043_VarDecl> _field_key_a = jule::Ptr<_221d8b043_VarDecl>();
	jule::Ptr<_221d8b043_VarDecl> _field_key_b = jule::Ptr<_221d8b043_VarDecl>();


	_221d8b043_RangeKind(_2220dce43_Token __param_in_token, jule::Ptr<_221d8b043_Expr> __param_expr, jule::Ptr<_221d8b043_VarDecl> __param_key_a, jule::Ptr<_221d8b043_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_221d8b043_RangeKind(void) = default;

	inline bool operator==(const _221d8b043_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _221d8b043_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_BreakSt {
	_2220dce43_Token _field_token = _2220dce43_Token();
	_2220dce43_Token _field_label = _2220dce43_Token();


	_221d8b043_BreakSt(_2220dce43_Token __param_token, _2220dce43_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_221d8b043_BreakSt(void) = default;

	inline bool operator==(const _221d8b043_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _221d8b043_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _221d8b043_ContSt {
	_2220dce43_Token _field_token = _2220dce43_Token();
	_2220dce43_Token _field_label = _2220dce43_Token();


	_221d8b043_ContSt(_2220dce43_Token __param_token, _2220dce43_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_221d8b043_ContSt(void) = default;

	inline bool operator==(const _221d8b043_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _221d8b043_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1dccb6843_ArgParser {
	_1dccb6843_FlagSet _field_set = _1dccb6843_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Str _field_err = jule::Str();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::Int _field_i = jule::Int();


	_1dccb6843_ArgParser(_1dccb6843_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Str __param_err, jule::Slice<jule::Str> __param_content, jule::Int __param_i): _field_set(__param_set), _field_args(__param_args), _field_err(__param_err), _field_content(__param_content), _field_i(__param_i) {}

	

	_1dccb6843_ArgParser(void) = default;

	inline std::tuple<jule::Int,jule::Bool> _method_parse_integer_0(jule::Str&,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>);
	inline std::tuple<jule::Uint,jule::Bool> _method_parse_integer_1(jule::Str&,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>);


	inline jule::Str _method_get_data(void);


	inline void _method_process_flag(jule::Trait<_1dccb6843_CommonFlag>&);


	inline void _method_single_dash(jule::Str&);


	inline void _method_double_dash(jule::Str&);


	inline void _method_try_arg(void);


	inline void _method_parse(void);


	inline bool operator==(const _1dccb6843_ArgParser &_Src) const {
		return 
			this->_field_set == _Src._field_set &&
			this->_field_args == _Src._field_args &&
			this->_field_err == _Src._field_err &&
			this->_field_content == _Src._field_content &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1dccb6843_ArgParser &_Src) const { return !this->operator==(_Src); }
};


inline void _2389b4e0d_free(void*);
inline jule::Str _238a38e4e_byte_ptr_to_str(jule::U8*);
inline jule::Int _2389b599c_get_last_errno(void);
inline jule::Int _2389b68c1_stat(jule::U8*,struct stat*);
inline jule::Int _2389b68c1_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _2389b68c1_getcwd(jule::U8*,jule::Uint);
inline DIR* _2389b68c1_opendir(jule::U8*);
inline struct dirent* _2389b68c1_readdir(DIR*);
inline jule::Int _2389b68c1_closedir(DIR*);
inline jule::Int _2389b68c1_mkdir(jule::U8*,jule::Int);
inline jule::Int _2389b68c1_rmdir(jule::U8*);
inline jule::Int _2389b68c1_unlink(jule::U8*);
inline jule::I64 _2389cd8e9_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _2389cd8e9_read(jule::Int,void*,jule::Uint);
inline jule::Int _2389cd8e9_close(jule::Int);
inline jule::Int _2389cd8e9_write(jule::Int,void*,jule::Uint);
inline void _2389cd8e9_exit(jule::Int);
inline jule::Int _2389a07ab_get_last_os_error(void);
inline jule::Slice<jule::Str> _2389a04e2_args(void);
inline jule::Exceptional<jule::Str> _2389a04e2_working_dir(void);
inline jule::Exceptional<jule::Str> _2389ab1e0___getwd(void);
inline jule::Str _23894b9cc_clean(jule::Str);
inline jule::Str _23894b9cc_from_slash(jule::Str);
inline jule::Str _23894b9cc_join(jule::Slice<jule::Str>);
inline jule::Str _23894b9cc_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _23894b9cc_abs(jule::Str);
inline jule::Str _23894b9cc_base(jule::Str);
inline jule::Str _23894b9cc_dir(jule::Str);
inline jule::Str _23894b9cc_volume_name(jule::Str);
inline jule::Bool _238949eb4_is_path_sep(jule::U8);
inline jule::Bool _238949eb4_is_abs(jule::Str);
inline jule::Int _238949eb4_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _238949eb4___abs(jule::Str);
inline jule::Str _238949eb4_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _238949eb4___join(jule::Slice<jule::Str>);
inline void _23893acc9_exit(jule::Int);
inline jule::Str _23893acc9_executable(void);
inline jule::Bool _23886cd0a_is_std_header_path(jule::Str);
inline jule::Bool _23886cd0a_is_valid_header_ext(jule::Str);
inline jule::Bool _23886cd0a_is_valid_cpp_ext(jule::Str);
inline jule::Str _23886c227_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _23886c227_arg_to_str(jule::Any);
inline jule::Int _23886c227_find_next_fmt(jule::Str);
inline jule::Str _23886c227_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _2388c1347_is_top_directive(jule::Str);
inline jule::Bool _2389027b8_is_windows(jule::Str);
inline jule::Bool _2389027b8_is_darwin(jule::Str);
inline jule::Bool _2389027b8_is_linux(jule::Str);
inline jule::Bool _2389027b8_is_i386(jule::Str);
inline jule::Bool _2389027b8_is_amd64(jule::Str);
inline jule::Bool _2389027b8_is_arm64(jule::Str);
inline jule::Bool _2389027b8_is_unix(jule::Str);
inline jule::Bool _2389027b8_is_32bit(jule::Str);
inline jule::Bool _2389027b8_is_64bit(jule::Str);
inline void _23890715d_exit_err(jule::Str);
inline void _23890715d_init(void);
inline jule::Int _221ee1e35_leading_zeros64(jule::U64);
inline jule::Int _221ee1e35_trailing_zeros(jule::Uint);
inline jule::Int _221ee1e35_trailing_zeros32(jule::U32);
inline jule::Int _221ee1e35_trailing_zeros64(jule::U64);
inline jule::Int _221ee1e35_len32(jule::U32);
inline jule::Int _221ee1e35_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _221ee1e35_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _221ee1e35_mul64(jule::U64,jule::U64);
inline jule::U32 _23981d073_f32_bits(jule::F32);
inline jule::F32 _23981d073_f32_from_bits(jule::U32);
inline jule::U64 _23981d073_f64_bits(jule::F64);
inline jule::F64 _23981d073_f64_from_bits(jule::U64);
inline jule::F64 _221a1d7b9_nan(void);
inline jule::Bool _221a1d7b9_is_nan(jule::F64);
inline jule::F64 _221a1d7b9_inf(jule::Int);
inline jule::Bool _221a1d7b9_is_inf(jule::F64,jule::Int);
inline jule::F64 _221ad8411_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _221b4456b_modf(jule::F64);
inline jule::Str _2389d34d1_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _2389d34d1_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _2389d34d1_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_2389d34d1_FloatInfo&);
inline jule::Slice<jule::U8> _2389d34d1_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_2389d34d1_DecimalSlice,jule::Int,jule::U8);
inline void _2389d34d1_round_shortest(_239796a57_Decimal&,jule::U64,jule::Int,_2389d34d1_FloatInfo&);
inline jule::Slice<jule::U8> _2389d34d1_fmt_e(jule::Slice<jule::U8>,jule::Bool,_2389d34d1_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _2389d34d1_fmt_f(jule::Slice<jule::U8>,jule::Bool,_2389d34d1_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _2389d34d1_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_2389d34d1_FloatInfo&);
inline jule::Slice<jule::U8> _2389d34d1_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_2389d34d1_FloatInfo&);
inline jule::Int _2389d34d1_min(jule::Int,jule::Int);
inline jule::Int _2389d34d1_max(jule::Int,jule::Int);
inline jule::U8 _2388cbb6b_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _2388cbb6b_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _2388cbb6b_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _238adb74e_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _238adb74e_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _2398a6c55_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _2398a6c55_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _2398a6c55_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _2398a6c55_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _2398a6c55_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _2398a6c55_atof_hex(jule::Str,_2389d34d1_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _2398a6c55_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _2398a6c55_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _2398a6c55_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _2398a6c55_parse_float(jule::Str,jule::Int);
inline void _23993a5d0_ryu_ftoa_fixed32(_2389d34d1_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _23993a5d0_ryu_ftoa_fixed64(_2389d34d1_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _23993a5d0_format_decimal(_2389d34d1_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _23993a5d0_ryu_ftoa_shortest(_2389d34d1_DecimalSlice&,jule::U64,jule::Int,_2389d34d1_FloatInfo&);
inline jule::Int _23993a5d0_mul_by_log2_log10(jule::Int);
inline jule::Int _23993a5d0_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _23993a5d0_compute_bounds(jule::U64,jule::Int,_2389d34d1_FloatInfo&);
inline void _23993a5d0_ryu_digits(_2389d34d1_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _23993a5d0_ryu_digits32(_2389d34d1_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _23993a5d0_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _23993a5d0_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _23993a5d0_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _23993a5d0_divmod1e9(jule::U64);
inline void _239796a57_trim(_239796a57_Decimal&);
inline void _239796a57_right_shift(_239796a57_Decimal&,jule::Uint);
inline jule::Bool _239796a57_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
inline void _239796a57_left_shift(_239796a57_Decimal&,jule::Uint);
inline jule::Bool _239796a57_should_round_up(_239796a57_Decimal&,jule::Int);
inline jule::Str _2397e4467_fmt_uint(jule::U64,jule::Int);
inline jule::Str _2397e4467_fmt_int(jule::I64,jule::Int);
inline jule::Str _2397e4467_itoa(jule::Int);
inline jule::Str _2397e4467_small(jule::Int);
inline jule::Bool _2397e4467_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _2397e4467_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _2388c6e74_push_opt_level(jule::Int);
inline jule::Bool _222197063_is_letter(jule::I32);
inline jule::Bool _222216247_is16(jule::Slice<_222216247_Range16>,jule::U16);
inline jule::Bool _222216247_is32(jule::Slice<_222216247_Range32>,jule::U32);
inline jule::Bool _222216247_is_excluding_latin(jule::Ptr<_222216247_RangeTable>,jule::I32);
inline std::tuple<jule::I32,jule::Int> _2221ee98e_decode_rune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _2221ee98e_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _2221ee98e_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::Int _22221b6e2_get_last_fs_error(void);
inline jule::Bool _2220dce43_is_unary_op(jule::Str);
inline jule::Bool _2220dce43_is_bin_op(jule::Str);
inline jule::Bool _2220dce43_is_str(jule::Str);
inline jule::Bool _2220dce43_is_raw_str(jule::Str);
inline jule::Bool _2220dce43_is_rune(jule::Str);
inline jule::Bool _2220dce43_is_bool(jule::Str);
inline jule::Bool _2220dce43_contains_any(jule::Str,jule::Str);
inline jule::Bool _2220dce43_is_float(jule::Str);
inline jule::Bool _2220dce43_is_num(jule::Str);
inline jule::Bool _2220dce43_is_ignore_ident(jule::Str);
inline jule::Bool _2220dce43_is_anon_ident(jule::Str);
inline jule::Bool _2220dce43_is_space(jule::I32);
inline jule::Bool _2220dce43_is_letter(jule::I32);
inline jule::Bool _2220dce43_is_decimal(jule::U8);
inline jule::Bool _2220dce43_is_binary(jule::U8);
inline jule::Bool _2220dce43_is_octal(jule::U8);
inline jule::Bool _2220dce43_is_hex(jule::U8);
inline jule::Bool _2220dce43_is_assign(jule::Uint);
inline jule::Bool _2220dce43_is_postfix_op(jule::Str);
inline jule::Bool _2220dce43_is_assign_op(jule::Str);
inline jule::Ptr<_22212e407_File> _22212e407_new_file_set(jule::Str);
inline _23886c227_Log _221db36ec_make_err(jule::Int,jule::Int,jule::Ptr<_22212e407_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _221db36ec_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _221db36ec_float_fmt_e(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _221db36ec_float_fmt_p(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _221db36ec_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _221db36ec_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _221db36ec_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _221db36ec_float_num(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _221db36ec_common_num(jule::Slice<jule::U8>&);
inline jule::Str _221db36ec_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _221db36ec_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _221db36ec_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _221db36ec_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _221db36ec_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _221db36ec_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _221db36ec_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _221db36ec_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _221db36ec_hex_escape(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _221db36ec_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _221db36ec_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _221db36ec_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _221db36ec_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_23886c227_Log> _221db36ec_lex(jule::Ptr<_22212e407_File>);
inline jule::Ptr<_221e0ec98_FileInfo> _221e0ec98_parse_file(jule::Ptr<_22212e407_File>);
inline std::tuple<jule::Ptr<_221d8c242_Ast>,jule::Slice<_23886c227_Log>> _221e0ec98_parse_fileset(jule::Ptr<_22212e407_File>);
inline jule::Ptr<_221d8b043_ScopeTree> _221e8c8b4_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _221e8c8b4_is_st(_2220dce43_Token,_2220dce43_Token);
inline jule::Bool _221e8c8b4_prev_is_incomplete_expr(jule::Slice<_2220dce43_Token>&,jule::Int&);
inline std::tuple<jule::Int,jule::Bool> _221e8c8b4_next_st_pos(jule::Slice<_2220dce43_Token>&,jule::Int);
inline std::tuple<jule::Slice<_2220dce43_Token>,jule::Bool> _221e8c8b4_skip_st(jule::Int&,jule::Slice<_2220dce43_Token>);
inline jule::Slice<jule::Ptr<_221e8c8b4_Stmt>> _221e8c8b4_split_stmts(jule::Slice<_2220dce43_Token>&);
inline jule::Ptr<_23999731d_CallData> _23999731d_get_call_data(jule::Slice<_2220dce43_Token>&);
inline jule::Slice<_2220dce43_Token> _23999731d_get_block_expr(jule::Slice<_2220dce43_Token>&);
inline std::tuple<jule::Slice<_2220dce43_Token>,jule::Slice<_2220dce43_Token>> _23999731d_split_colon(jule::Slice<_2220dce43_Token>&);
inline jule::Slice<_2220dce43_Token> _23999731d_eliminate_comments(jule::Slice<_2220dce43_Token>&);
inline jule::Int _23999731d_find_lowest_prec_op(jule::Slice<_2220dce43_Token>&);
inline jule::Ptr<_221d8b043_IdentExpr> _23999731d_build_ident_expr(_2220dce43_Token&);
inline std::tuple<jule::Slice<_2220dce43_Token>,jule::Int> _23999731d_get_range_expr_tokens(jule::Slice<_2220dce43_Token>&);
inline jule::Bool _222d4854e_check_assign_tokens(jule::Slice<_2220dce43_Token>&);
inline _23886c227_Log _222e5128e_make_err(jule::Int,jule::Int,jule::Ptr<_22212e407_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_2220dce43_Token> _222e5128e_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_2220dce43_Token>&);
inline std::tuple<jule::Slice<_2220dce43_Token>,jule::Slice<_2220dce43_Token>> _222e5128e_range_last(jule::Slice<_2220dce43_Token>&);
inline std::tuple<jule::Slice<jule::Slice<_2220dce43_Token>>,jule::Slice<_23886c227_Log>> _222e5128e_parts(jule::Slice<_2220dce43_Token>&,jule::Uint,jule::Bool);
inline jule::Str _222e5128e_get_close_kind_of_brace(jule::Str);
inline _23886c227_Log _222e5128e_compiler_err(_2220dce43_Token&,jule::Str&,jule::Slice<jule::Any>);
inline void _222e5128e_push_suggestion(_23886c227_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_221d8b043_Comment> _222e5128e_build_comment(_2220dce43_Token&);
inline jule::Str _222e5128e_tokstoa(jule::Slice<_2220dce43_Token>&);
inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_build_void_type(void);
inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_build_prim_type(_2220dce43_Token);
inline std::tuple<jule::Slice<_2220dce43_Token>,jule::Int> _222e76d20_split_map_range(jule::Slice<_2220dce43_Token>&,jule::Int&);
inline void _206e210e3_lshift_unsig(_206e210e3_Const&,_206e210e3_Const&);
inline void _206e210e3_rshift_unsig(_206e210e3_Const&,_206e210e3_Const&);
inline jule::Str _206e24cd9_real_kind_of(jule::Str);
inline jule::Int _206e24cd9_bitsize_of(jule::Str);
inline jule::Str _206e24cd9_int_from_bits(jule::U64);
inline jule::Str _206e24cd9_uint_from_bits(jule::U64);
inline jule::Str _206e24cd9_float_from_bits(jule::U64);
inline jule::Bool _206e24cd9_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _206e24cd9_bitsize_of_float(jule::F64);
inline jule::U64 _206e24cd9_bitsize_of_int(jule::I64);
inline jule::U64 _206e24cd9_bitsize_of_uint(jule::U64);
inline jule::F64 _206e286b1_min(jule::Str);
inline jule::F64 _206e286b1_max(jule::Str);
inline jule::Bool _206e22a2e_is_i8_compatible(jule::Str);
inline jule::Bool _206e22a2e_is_i16_compatible(jule::Str);
inline jule::Bool _206e22a2e_is_i32_compatible(jule::Str);
inline jule::Bool _206e22a2e_is_i64_compatible(jule::Str);
inline jule::Bool _206e22a2e_is_u8_compatible(jule::Str);
inline jule::Bool _206e22a2e_is_u16_compatible(jule::Str);
inline jule::Bool _206e22a2e_is_u32_compatible(jule::Str);
inline jule::Bool _206e22a2e_is_u64_compatible(jule::Str);
inline jule::Bool _206e22a2e_is_f32_compatible(jule::Str);
inline jule::Bool _206e22a2e_is_f64_compatible(jule::Str);
inline jule::Bool _206e22a2e_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _206e22a2e_is_i16_greater(jule::Str);
inline jule::Bool _206e22a2e_is_i32_greater(jule::Str);
inline jule::Bool _206e22a2e_is_i64_greater(jule::Str);
inline jule::Bool _206e22a2e_is_u8_greater(jule::Str);
inline jule::Bool _206e22a2e_is_u16_greater(jule::Str);
inline jule::Bool _206e22a2e_is_u32_greater(jule::Str);
inline jule::Bool _206e22a2e_is_u64_greater(jule::Str);
inline jule::Bool _206e22a2e_is_f32_greater(jule::Str);
inline jule::Bool _206e22a2e_is_f64_greater(jule::Str);
inline jule::Bool _206e22a2e_is_greater(jule::Str,jule::Str);
inline jule::Bool _206ec1e1e_is_sig_int(jule::Str);
inline jule::Bool _206ec1e1e_is_unsig_int(jule::Str);
inline jule::Bool _206ec1e1e_is_int(jule::Str);
inline jule::Bool _206ec1e1e_is_float(jule::Str);
inline jule::Bool _206ec1e1e_is_num(jule::Str);
inline jule::Bool _20707b281_is_ascii(jule::I32);
inline jule::I32 _20707b281_to_rune(jule::Slice<jule::U8>);
inline jule::Str _20707b281_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _20707b281_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _20707b281_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _20707b281_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Slice<jule::U8> _20707b281_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Bool _222edb48e_kind_uses_generics(jule::Ptr<_2300b54e5_TypeKind>,jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>&);
inline jule::Bool _222edb48e_parameter_uses_generics(jule::Ptr<_222edb48e_Param>&,jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>&);
inline jule::Str _221db702a_str_repeat(jule::Str,jule::Int);
inline jule::Str _221db702a_build_doc(jule::Ptr<_221d8b043_CommentGroup>);
inline jule::Ptr<_2300b54e5_TypeSymbol> _221db702a_build_type(jule::Ptr<_221d8b043_TypeDecl>);
inline jule::Ptr<_20683ebaa_Value> _221db702a_build_expr(jule::Ptr<_221d8b043_Expr>);
inline jule::Ptr<_2300b54e5_TypeAlias> _221db702a_build_type_alias(jule::Ptr<_221d8b043_TypeAliasDecl>);
inline jule::Ptr<_2398d04dc_Field> _221db702a_build_field(jule::Ptr<_221d8b043_FieldDecl>);
inline jule::Slice<jule::Ptr<_2398d04dc_Field>> _221db702a_build_fields(jule::Slice<jule::Ptr<_221d8b043_FieldDecl>>&);
inline jule::Ptr<_2398d04dc_Struct> _221db702a_build_struct(jule::Ptr<_221d8b043_StructDecl>);
inline jule::Ptr<_222edb48e_Param> _221db702a_build_param(jule::Ptr<_221d8b043_ParamDecl>);
inline jule::Slice<jule::Ptr<_222edb48e_Param>> _221db702a_build_params(jule::Slice<jule::Ptr<_221d8b043_ParamDecl>>&);
inline jule::Ptr<_222edb48e_RetType> _221db702a_build_ret_type(jule::Ptr<_221d8b043_RetTypeDecl>);
inline jule::Ptr<_222edb48e_Fn> _221db702a_build_fn(jule::Ptr<_221d8b043_FnDecl>);
inline jule::Slice<jule::Ptr<_222edb48e_Fn>> _221db702a_build_methods(jule::Slice<jule::Ptr<_221d8b043_FnDecl>>&);
inline jule::Ptr<_2300167cb_Trait> _221db702a_build_trait(jule::Ptr<_221d8b043_TraitDecl>);
inline jule::Ptr<_23001604a_EnumItem> _221db702a_build_enum_item(jule::Ptr<_221d8b043_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_23001604a_EnumItem>> _221db702a_build_enum_items(jule::Slice<jule::Ptr<_221d8b043_EnumItemDecl>>&);
inline jule::Ptr<_23001604a_Enum> _221db702a_build_enum(jule::Ptr<_221d8b043_EnumDecl>);
inline jule::Ptr<_2200a2657_Var> _221db702a_build_var(jule::Ptr<_221d8b043_VarDecl>);
inline jule::Slice<jule::Ptr<_2200a2657_Var>> _221db702a_build_vars(jule::Slice<jule::Ptr<_221d8b043_VarDecl>>);
inline jule::Ptr<_230019081_Impl> _221db702a_build_impl(jule::Ptr<_221d8b043_Impl>);
inline jule::Ptr<_2300254bb_ScopeChecker> _2300254bb_new_scope_checker_base(jule::Ptr<_21eee051d_Sema>&,jule::Ptr<_222edb48e_FnIns>);
inline jule::Ptr<_2300254bb_ScopeChecker> _2300254bb_new_scope_checker(jule::Ptr<_21eee051d_Sema>&,jule::Ptr<_222edb48e_FnIns>);
inline jule::Ptr<_2300254bb_ScopeLabel> _2300254bb_find_label_parent(jule::Str,jule::Ptr<_2300254bb_ScopeChecker>);
inline jule::Bool _2300254bb_stmt_is_goto_scope(jule::Any&,jule::Ptr<_2300254bb_Scope>&);
inline jule::Int _2300254bb_count_match_type(jule::Ptr<_2300254bb_Match>&,jule::Ptr<_2300b54e5_TypeKind>&);
inline jule::Slice<jule::Ptr<_20683ebaa_Data>> _2300254bb_get_datas_from_tuple_data(jule::Ptr<_20683ebaa_Data>&);
inline jule::Slice<jule::Any> _2300254bb_get_expr_models(jule::Any&);
inline jule::Bool _2300254bb_check_mut(jule::Ptr<_21eee051d_Sema>&,jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);
inline jule::Bool _2300254bb_check_assign(jule::Ptr<_21eee051d_Sema>&,jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_20683ebaa_Data>,_2220dce43_Token);
inline jule::Bool _2300254bb_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _2300254bb_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _2300254bb_st_is_def(jule::Any&);
inline jule::Ptr<_2200a2657_Var> _2200229c3_find_var_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_2300b54e5_TypeAlias> _2200229c3_find_type_alias_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_2398d04dc_Struct> _2200229c3_find_struct_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_222edb48e_Fn> _2200229c3_find_fn_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_2300167cb_Trait> _2200229c3_find_trait_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>&,jule::Str);
inline jule::Ptr<_23001604a_Enum> _2200229c3_find_enum_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>&,jule::Str);
inline jule::Bool _21eee051d_is_valid_model_for_ref(jule::Any);
inline _23886c227_Log _21eee051d_compiler_err(_2220dce43_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _21eee051d_imp_is_lookupable(jule::Ptr<_2200229c3_ImportInfo>&,jule::Str);
inline jule::Slice<jule::Ptr<_2200a2657_Var>> _21eee051d_build_ret_vars(jule::Ptr<_222edb48e_FnIns>&);
inline jule::Slice<jule::Ptr<_2200a2657_Var>> _21eee051d_build_param_vars(jule::Ptr<_222edb48e_FnIns>&);
inline jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>> _21eee051d_build_generic_type_aliases(jule::Ptr<_222edb48e_FnIns>&);
inline jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_find_file(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>&,jule::Ptr<_22212e407_File>&);
inline std::tuple<jule::Bool,jule::Bool> _21eee051d_conditional_has_ret(jule::Ptr<_2300254bb_Conditional>);
inline jule::Bool _21eee051d_match_has_ret(jule::Ptr<_2300254bb_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _21eee051d___has_ret(jule::Ptr<_2300254bb_Scope>);
inline jule::Bool _21eee051d_has_ret(jule::Ptr<_2300254bb_Scope>);
inline void _21eee051d_push_suggestion(_23886c227_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> _2200223c9_get_result_types(jule::Ptr<_2300b54e5_TypeKind>&);
inline jule::Bool _2200223c9_trait_has_reference_receiver(jule::Ptr<_2300167cb_Trait>&);
inline jule::Bool _2200223c9_float_assignable(jule::Str,jule::Ptr<_20683ebaa_Data>&);
inline jule::Bool _2200223c9_sig_assignable(jule::Str,jule::Ptr<_20683ebaa_Data>&);
inline jule::Bool _2200223c9_unsig_assignable(jule::Str,jule::Ptr<_20683ebaa_Data>&);
inline jule::Bool _2200223c9_int_assignable(jule::Str,jule::Ptr<_20683ebaa_Data>&);
inline jule::Any _20683ebaa_find_builtins_import(jule::Str,jule::Ptr<_2200229c3_ImportInfo>);
inline void _20683ebaa_make_struct_lit_alloc(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_21eedb492_StructLitExprModel>&);
inline jule::Ptr<_2200a2657_Var> _20683ebaa_build_error_var(jule::Ptr<_2300254bb_Scope>&,jule::Ptr<_221d8b043_FnCallExpr>&);
inline jule::Any _20683ebaa_find_builtins_sema(jule::Str,jule::Ptr<_21eee051d_Sema>);
inline jule::Bool _20683ebaa_is_ok_for_shifting(jule::Ptr<_20683ebaa_Data>&);
inline jule::Bool _20683ebaa_is_instanced_struct(jule::Ptr<_2398d04dc_StructIns>);
inline jule::Bool _20683ebaa_is_ptr_arithmetic_compatible_int(jule::Ptr<_20683ebaa_Data>&);
inline void _20683ebaa_normalize_bitsize(jule::Ptr<_20683ebaa_Data>&);
inline void _20683ebaa_normalize_type(jule::Ptr<_20683ebaa_Data>&);
inline void _20683ebaa_apply_cast_kind_model(jule::Ptr<_20683ebaa_Data>&);
inline void _20683ebaa_apply_cast_kind(jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _20683ebaa_build_void_data(void);
inline jule::Str _20683ebaa_kind_by_bitsize(jule::Any);
inline jule::Str _20683ebaa_check_data_for_integer_indexing(jule::Ptr<_20683ebaa_Data>&);
inline jule::Bool _2300b54e5_can_get_ptr(jule::Ptr<_20683ebaa_Data>&);
inline jule::Bool _2300b54e5_is_valid_for_sptr_type(jule::Ptr<_2300b54e5_TypeKind>&);
inline jule::Bool _2300b54e5_is_valid_for_ref(jule::Ptr<_2300b54e5_TypeKind>&);
inline jule::Bool _2300b54e5_is_builtin_str_convertable(jule::Ptr<_2300b54e5_TypeKind>&);
inline jule::Str _2300b54e5_build_link_path_by_tokens(jule::Slice<_2220dce43_Token>&);
inline jule::Ptr<_2300b54e5_Prim> _2300b54e5_build_prim_type(jule::Str);
inline jule::Ptr<_2398d04dc_Struct> _2300b54e5_get_struct_from_kind(jule::Ptr<_2300b54e5_TypeKind>);
inline jule::Bool _2300b54e5_is_prim(jule::Str);
inline std::tuple<jule::Ptr<_2067a6b66_SymbolTable>,jule::Slice<_23886c227_Log>> _206d3c383_build_symbols(jule::Ptr<_221d8c242_Ast>&,jule::Trait<_2200229c3_Importer>&,jule::Ptr<_221db702a_SymbolBuilder>);
inline std::tuple<jule::Ptr<_2200229c3_Package>,jule::Slice<_23886c227_Log>> _206d3c383___analyze_package(jule::Slice<jule::Ptr<_221d8c242_Ast>>&,jule::Trait<_2200229c3_Importer>&,jule::Int&);
inline std::tuple<jule::Ptr<_2200229c3_Package>,jule::Slice<_23886c227_Log>> _206d3c383_analyze_package(jule::Slice<jule::Ptr<_221d8c242_Ast>>,jule::Trait<_2200229c3_Importer>,jule::Int);
inline void _206d53311_init(void);
inline jule::Ptr<_222edb48e_FnIns> _206d53311_find_builtin_fn(jule::Str);
inline jule::Ptr<_2300b54e5_TypeAlias> _206d53311_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_2300167cb_Trait> _206d53311_find_builtin_trait(jule::Str);
inline jule::Any _206d53311_find_builtin_def(jule::Str);
inline jule::Any _206d53311_find_builtin_def_std_mem(jule::Str);
inline jule::Any _206d53311_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _206d53311_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_common_plain(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_common(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_common_mut(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_error(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_out(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_outln(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_new(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_panic(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_make(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_append(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_copy(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_clone(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_std_mem_size_of(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_std_mem_align_of(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _221a6dac2_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _221a6dac2_check_arch(jule::Str);
inline jule::Bool _221a6dac2_is_pass_file_annotation(jule::Str);
inline void _221c201c4_set_os_flags(void);
inline void _221c201c4_set_arch_flags(void);
inline void _221c201c4_init_flags(void);
inline void _221c9ee02_exit_err(jule::Str);
inline jule::Slice<jule::U8> _221c9ee02_read_buff(jule::Str);
inline _23886c227_Log _221c9ee02_flat_compiler_err(jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_222bb918e_DirEntry>>,jule::Str> _221c9ee02_read_package_dirents(jule::Str);
inline std::tuple<jule::Bool,jule::Slice<_23886c227_Log>> _221c9ee02_is_pass_build_directives(jule::Ptr<_221d8c242_Ast>&);
inline void _239823e36_push_passes(jule::Ptr<_2200229c3_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _239823e36_get_all_unique_passes(jule::Ptr<_2200229c3_Package>&,jule::Slice<jule::Ptr<_2200229c3_ImportInfo>>);
inline jule::Bool _2388c0005_is_exist(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _2388c0005_is_dead(jule::Any);
inline void _2388c0005_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _2388c0005_is_all_references_are_dead(jule::Ptr<_221db702a_ReferenceStack>);
inline jule::Bool _2388c0005_is_fn_dead(jule::Ptr<_222edb48e_FnIns>);
inline jule::Bool _2388c0005_is_var_dead(jule::Ptr<_2200a2657_Var>);
inline jule::Bool _2388c0005_is_struct_dead(jule::Ptr<_2398d04dc_StructIns>);
inline jule::Bool _2388c0005_is_trait_dead(jule::Ptr<_2300167cb_Trait>);
inline void _2388c0005_eliminate_dead_functions(jule::Slice<jule::Ptr<_222edb48e_Fn>>&);
inline void _2388c0005_eliminate_dead_globals(jule::Ptr<_2200229c3_Package>&);
inline void _2388c0005_eliminate_dead_functions_package(jule::Ptr<_2200229c3_Package>&);
inline void _2388c0005_catch_alive_init(jule::Ptr<_2200229c3_Package>&);
inline void _2388c0005_eliminate_package(jule::Ptr<_2200229c3_Package>&);
inline void _2388c0005_eliminate(jule::Ptr<_239823e36_IR>&);
inline void _221eb825d_eliminate_dead_code_of_scope(jule::Ptr<_2300254bb_Scope>);
inline jule::Int _1dcda108c_find_format_prefix(jule::Slice<jule::U8>&,jule::Int&);
inline jule::Slice<jule::U8> _1dcda108c_get_format_range(jule::Int&,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1dcda108c_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1dcda108c_apply_fmt_by_default(jule::Int&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1dcda108c_apply_fmt(jule::Slice<jule::U8>&,jule::Int&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1dcda108c_format_bytes(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1dcda108c_format(jule::Str,jule::Slice<jule::Any>);
inline jule::U64 _1dce1143d_unix(void);
inline jule::U64 _1dce1143d_unix_year_to_seconds(jule::Uint,jule::Bool&);
inline jule::U64 _1dce1143d_unix_month_to_seconds(jule::Uint,jule::Bool);
inline jule::Bool _238ade994_iter_expr_is_copy_optimizable(jule::Ptr<_20683ebaa_Data>&,jule::Ptr<_2200a2657_Var>&);
inline jule::Str _238ade994_gen_range_index_iter(jule::Ptr<_2300254bb_RangeIter>&);
inline jule::Str _238ade994_gen_range_hashmap_iter(jule::Ptr<_2300254bb_RangeIter>&);
inline jule::Str _238ade994_gen_if(jule::Ptr<_2300254bb_If>);
inline jule::Str _238ade994_gen_conditional(jule::Ptr<_2300254bb_Conditional>);
inline jule::Str _238ade994_gen_inf_iter(jule::Ptr<_2300254bb_InfIter>);
inline jule::Str _238ade994_gen_while_iter(jule::Ptr<_2300254bb_WhileIter>);
inline jule::Str _238ade994_gen_range_iter(jule::Ptr<_2300254bb_RangeIter>);
inline jule::Str _238ade994_gen_cont(jule::Ptr<_2300254bb_ContSt>);
inline jule::Str _238ade994_gen_label(jule::Ptr<_2300254bb_Label>);
inline jule::Str _238ade994_gen_goto(jule::Ptr<_2300254bb_GotoSt>);
inline jule::Str _238ade994_gen_postfix(jule::Ptr<_2300254bb_Postfix>);
inline jule::Str _238ade994_gen_div_by_zero_assign(jule::Ptr<_2300254bb_Assign>);
inline jule::Str _238ade994_gen_assign(jule::Ptr<_2300254bb_Assign>);
inline jule::Str _238ade994_gen_multi_assign(jule::Ptr<_2300254bb_MultiAssign>);
inline jule::Str _238ade994_get_case_match_expr(jule::Ptr<_2300254bb_Match>&);
inline jule::Str _238ade994_gen_case(jule::Ptr<_2300254bb_Match>,jule::Ptr<_2300254bb_Case>);
inline jule::Str _238ade994_gen_match(jule::Ptr<_2300254bb_Match>);
inline jule::Str _238ade994_gen_fall_st(jule::Ptr<_2300254bb_FallSt>);
inline jule::Str _238ade994_gen_break_st(jule::Ptr<_2300254bb_BreakSt>);
inline jule::Str _238ade994_gen_ret_vars(jule::Ptr<_2300254bb_RetSt>);
inline jule::Str _238ade994_gen_ret_expr_tuple(jule::Ptr<_2300254bb_RetSt>);
inline jule::Str _238ade994_gen_ret_expr(jule::Ptr<_2300254bb_RetSt>);
inline jule::Str _238ade994_gen_ret_st(jule::Ptr<_2300254bb_RetSt>);
inline jule::Str _238ade994_gen_data_expr(jule::Ptr<_20683ebaa_Data>);
inline jule::Str _238ade994_gen_scope_var(jule::Ptr<_2200a2657_Var>);
inline jule::Str _238ade994_gen_st(jule::Any);
inline jule::Str _238ade994_gen_scope(jule::Ptr<_2300254bb_Scope>);
inline jule::Str _238ade994_gen_fn_scope(jule::Ptr<_222edb48e_FnIns>);
inline jule::Str _238ade994_gen_method_scope(jule::Ptr<_222edb48e_FnIns>);
inline jule::Str _221dad153_concat_all_parts(jule::Slice<_2220dce43_Token>);
inline jule::Str _221dad153_get_accessor(jule::Ptr<_2300b54e5_TypeKind>&);
inline jule::Str _221dad153_decompose_common_esq(jule::U8);
inline jule::Str _221dad153_sbtoa(jule::U8);
inline jule::Str _221dad153_get_cstr_model(jule::Slice<jule::U8>);
inline jule::Str _221dad153_get_str_model(jule::Ptr<_206e210e3_Const>&);
inline jule::Str _221dad153_get_bool_model(jule::Ptr<_206e210e3_Const>&);
inline jule::Str _221dad153_get_nil_model(void);
inline jule::Str _221dad153_gen_float_special_cases(jule::F64&);
inline jule::Str _221dad153_ftoa(jule::F64,jule::Int);
inline jule::Str _221dad153_get_f32_model(jule::Ptr<_206e210e3_Const>&);
inline jule::Str _221dad153_get_f64_model(jule::Ptr<_206e210e3_Const>&);
inline jule::Str _221dad153_get_float_model(jule::Ptr<_20683ebaa_Data>&);
inline jule::Str _221dad153_i64toa(jule::I64);
inline jule::Str _221dad153_get_i64_model(jule::Ptr<_206e210e3_Const>&);
inline jule::Str _221dad153_u64toa(jule::U64);
inline jule::Str _221dad153_get_u64_model(jule::Ptr<_206e210e3_Const>);
inline jule::Str _221dad153_gen_const_expr(jule::Ptr<_20683ebaa_Data>);
inline jule::Str _221dad153_gen_const_expr_model(jule::Ptr<_206e210e3_Const>);
inline jule::Str _221dad153_gen_div_by_zero_binop_expr_model(jule::Str,jule::Any,jule::Any);
inline jule::Str _221dad153_gen_binop_expr_model(jule::Ptr<_21eedb492_BinopExprModel>);
inline jule::Str _221dad153_gen_var_expr_model(jule::Ptr<_2200a2657_Var>);
inline jule::Str _221dad153_gen_struct_expr_model(jule::Ptr<_2398d04dc_Struct>);
inline jule::Str _221dad153_gen_struct_ins_expr_model(jule::Ptr<_2398d04dc_StructIns>);
inline jule::Str _221dad153_gen_unary_expr_model(jule::Ptr<_21eedb492_UnaryExprModel>);
inline jule::Str _221dad153_gen_cpp_struct_lit_expr_model(jule::Ptr<_21eedb492_StructLitExprModel>);
inline jule::Str _221dad153_gen_struct_lit_expr_model(jule::Ptr<_21eedb492_StructLitExprModel>);
inline jule::Str _221dad153_gen_alloc_struct_lit_expr_model(jule::Ptr<_21eedb492_AllocStructLitExprModel>);
inline jule::Str _221dad153_gen_casting_expr_model(jule::Ptr<_21eedb492_CastingExprModel>);
inline jule::Str _221dad153_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _221dad153_gen_expr_model_for_call(jule::Any);
inline jule::Str _221dad153_gen_pure_fn_call_expr_model(jule::Ptr<_21eedb492_FnCallExprModel>&);
inline jule::Bool _221dad153_is_forwarded(jule::Ptr<_2300254bb_Scope>&);
inline jule::Str _221dad153_gen_fn_call_expr_model(jule::Ptr<_21eedb492_FnCallExprModel>);
inline jule::Str _221dad153_gen_slice_expr_model(jule::Ptr<_21eedb492_SliceExprModel>);
inline jule::Str _221dad153_gen_indexing_expr_model(jule::Ptr<_21eedb492_IndexigExprModel>);
inline jule::Str _221dad153_gen_anon_fn_expr_model(jule::Ptr<_21eedb492_AnonFnExprModel>);
inline jule::Str _221dad153_gen_map_expr_model(jule::Ptr<_21eedb492_MapExprModel>);
inline jule::Str _221dad153_gen_slicing_expr_model(jule::Ptr<_21eedb492_SlicingExprModel>);
inline jule::Str _221dad153_gen_trait_sub_ident_expr_model(jule::Ptr<_21eedb492_TraitSubIdentExprModel>);
inline jule::Str _221dad153_gen_struct_sub_ident_expr_model(jule::Ptr<_21eedb492_StructSubIdentExprModel>);
inline jule::Str _221dad153_gen_common_ident_expr_model(jule::Ptr<_21eedb492_CommonIdentExprModel>);
inline jule::Str _221dad153_gen_common_sub_ident_expr_model(jule::Ptr<_21eedb492_CommonSubIdentExprModel>);
inline jule::Str _221dad153_gen_array_expr_model(jule::Ptr<_21eedb492_ArrayExprModel>);
inline jule::Str _221dad153_gen_fn_ins_expr_model_common(jule::Ptr<_222edb48e_FnIns>);
inline jule::Str _221dad153_gen_fn_ins_expr_model(jule::Ptr<_222edb48e_FnIns>);
inline jule::Str _221dad153_gen_tuple_expr_model(jule::Ptr<_21eedb492_TupleExprModel>);
inline jule::Str _221dad153_gen_builtin_new_call_expr_model(jule::Ptr<_21eedb492_BuiltinNewCallExprModel>);
inline jule::Str _221dad153_gen_builtin_out_call_expr_model(jule::Ptr<_21eedb492_BuiltinOutCallExprModel>);
inline jule::Str _221dad153_gen_builtin_outln_call_expr_model(jule::Ptr<_21eedb492_BuiltinOutlnCallExprModel>);
inline jule::Str _221dad153_gen_builtin_panic_call_expr_model(jule::Ptr<_21eedb492_BuiltinPanicCallExprModel>);
inline jule::Str _221dad153_gen_builtin_error_call_expr_model(jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>);
inline jule::Str _221dad153_gen_builtin_make_call_expr_model(jule::Ptr<_21eedb492_BuiltinMakeCallExprModel>);
inline jule::Str _221dad153_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ptr<_2300b54e5_TypeKind>&,jule::Ptr<_21eedb492_SliceExprModel>&,jule::Ptr<_21eedb492_BuiltinAppendCallExprModel>&);
inline std::tuple<jule::Str,jule::Bool> _221dad153_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ptr<_21eedb492_BuiltinAppendCallExprModel>);
inline jule::Str _221dad153_gen_builtin_append_call_expr_model(jule::Ptr<_21eedb492_BuiltinAppendCallExprModel>);
inline jule::Str _221dad153_gen_builtin_clone_call_expr_model(jule::Ptr<_21eedb492_BuiltinCloneCallExprModel>);
inline jule::Str _221dad153_gen_sizeof_expr_model(jule::Ptr<_21eedb492_SizeofExprModel>);
inline jule::Str _221dad153_gen_alignof_expr_model(jule::Ptr<_21eedb492_AlignofExprModel>);
inline jule::Str _221dad153_gen_rune_expr_model(jule::Ptr<_21eedb492_RuneExprModel>);
inline jule::Str _221dad153_gen_struct_static_ident_expr_model(jule::Ptr<_21eedb492_StructStaticIdentExprModel>);
inline jule::Str _221dad153_gen_integrated_to_str_expr_model(jule::Ptr<_21eedb492_IntegratedToStrExprModel>);
inline jule::Str _221dad153_gen_ternary_expr_model(jule::Ptr<_21eedb492_TernaryExprModel>);
inline jule::Str _221dad153_gen_expr_model(jule::Any);
inline jule::Str _221dad153_gen_expr(jule::Any);
inline jule::Str _221dad153_gen_val(jule::Ptr<_20683ebaa_Value>);
inline jule::Str _221dad153_get_init_expr(jule::Ptr<_2300b54e5_TypeKind>);
inline jule::Str _220228ba7_get_derive_fn_decl_clone(jule::Ptr<_2398d04dc_Struct>&);
inline jule::Str _220228ba7_get_derive_fn_def_clone(jule::Ptr<_2398d04dc_Struct>&);
inline jule::Str _22011eedd_as_ident(jule::Str);
inline jule::Str _22011eedd_as_jt(jule::Str);
inline jule::Str _22011eedd_get_addr_as_ident(jule::Uintptr);
inline jule::Str _22011eedd_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _22011eedd_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _22011eedd_fn_out_ident(jule::Ptr<_222edb48e_Fn>&);
inline jule::Str _22011eedd_fn_ins_out_ident(jule::Ptr<_222edb48e_FnIns>&);
inline jule::Str _22011eedd_trait_out_ident(jule::Ptr<_2300167cb_Trait>);
inline jule::Str _22011eedd_param_out_ident(jule::Ptr<_222edb48e_Param>&);
inline jule::Str _22011eedd_struct_out_ident(jule::Ptr<_2398d04dc_Struct>&);
inline jule::Str _22011eedd_struct_ins_out_ident(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _22011eedd_field_out_ident(jule::Ptr<_2398d04dc_Field>&);
inline jule::Str _22011eedd_var_out_ident(jule::Ptr<_2200a2657_Var>);
inline jule::Str _22011eedd_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _22011eedd_iter_end_label_ident(jule::Uintptr);
inline jule::Str _22011eedd_iter_next_label_ident(jule::Uintptr);
inline jule::Str _22011eedd_label_ident(jule::Str);
inline jule::Str _22011eedd_match_end_label_ident(jule::Uintptr);
inline jule::Str _22011eedd_case_begin_label_ident(jule::Uintptr);
inline jule::Str _22011eedd_case_end_label_ident(jule::Uintptr);
inline jule::Ptr<_221d8b043_Directive> _2071abd62_find_directive(jule::Slice<jule::Ptr<_221d8b043_Directive>>&,jule::Str);
inline jule::Bool _2071abd62_has_directive(jule::Slice<jule::Ptr<_221d8b043_Directive>>&,jule::Str);
inline jule::Str _2071abd62_gen_prim_kind(jule::Ptr<_2300b54e5_Prim>);
inline jule::Str _2071abd62_gen_tuple_kind(jule::Ptr<_2300b54e5_Tuple>);
inline jule::Str _2071abd62_as_sptr_kind(jule::Str);
inline jule::Str _2071abd62_gen_sptr_kind(jule::Ptr<_2300b54e5_Sptr>);
inline jule::Str _2071abd62_gen_ptr_kind(jule::Ptr<_2300b54e5_Ptr>);
inline jule::Str _2071abd62_gen_enum_kind(jule::Ptr<_23001604a_Enum>);
inline jule::Str _2071abd62_as_slice_kind(jule::Ptr<_2300b54e5_TypeKind>);
inline jule::Str _2071abd62_gen_slice_kind(jule::Ptr<_2300b54e5_Slc>);
inline jule::Str _2071abd62_gen_map_kind(jule::Ptr<_2300b54e5_Map>);
inline jule::Str _2071abd62_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _2071abd62_gen_trait_kind(jule::Ptr<_2300167cb_Trait>);
inline jule::Str _2071abd62_gen_struct_kind(jule::Ptr<_2398d04dc_Struct>);
inline jule::Str _2071abd62_gen_struct_kind_ins(jule::Ptr<_2398d04dc_StructIns>);
inline jule::Str _2071abd62_gen_array_kind(jule::Ptr<_2300b54e5_Arr>);
inline jule::Str _2071abd62_gen_fn_anon_decl(jule::Ptr<_222edb48e_FnIns>);
inline jule::Str _2071abd62_gen_fn_kind(jule::Ptr<_222edb48e_FnIns>);
inline jule::Str _2071abd62_gen_type_kind(jule::Ptr<_2300b54e5_TypeKind>);
inline void _207182002_add_indent(void);
inline void _207182002_done_indent(void);
inline jule::Str _207182002_indent(void);
inline jule::Bool _207182002_is_cpp_header_file(jule::Str);
inline jule::Str _207182002_gen_links(jule::Ptr<_239823e36_IR>&);
inline jule::Str _207182002_gen_fn_result(jule::Ptr<_222edb48e_Fn>&);
inline jule::Str _207182002_gen_fn_ins_result(jule::Ptr<_222edb48e_FnIns>&);
inline jule::Str _207182002_gen_param_prototype(jule::Ptr<_222edb48e_Param>&);
inline jule::Str _207182002_gen_param_ins(jule::Ptr<_222edb48e_ParamIns>&);
inline jule::Str _207182002_gen_param_ins_prototype(jule::Ptr<_222edb48e_ParamIns>&);
inline jule::Str _207182002_gen_param(jule::Ptr<_222edb48e_Param>&);
inline jule::Str _207182002_gen_params(jule::Slice<jule::Ptr<_222edb48e_Param>>&);
inline jule::Str _207182002_gen_params_ins(jule::Slice<jule::Ptr<_222edb48e_ParamIns>>&);
inline jule::Str _207182002_gen_params_prototypes(jule::Slice<jule::Ptr<_222edb48e_ParamIns>>&);
inline jule::Str _207182002_gen_trait(jule::Ptr<_2300167cb_Trait>&);
inline jule::Str _207182002_gen_traits_tbl(jule::Ptr<_2067a6b66_SymbolTable>&);
inline jule::Str _207182002_gen_traits_pkg(jule::Ptr<_2200229c3_Package>&);
inline jule::Str _207182002_gen_traits(jule::Ptr<_239823e36_IR>&);
inline jule::Str _207182002_gen_trait_prototype(jule::Ptr<_2300167cb_Trait>&);
inline jule::Str _207182002_gen_trait_prototypes(jule::Ptr<_2200229c3_Package>&);
inline jule::Str _207182002_gen_struct_plain_prototype(jule::Ptr<_2398d04dc_Struct>&);
inline jule::Str _207182002_gen_struct_plain_prototypes(jule::Slice<jule::Ptr<_2398d04dc_Struct>>&);
inline jule::Str _207182002_gen_struct_traits(jule::Ptr<_2398d04dc_Struct>&);
inline jule::Str _207182002_gen_field_decl(jule::Ptr<_2398d04dc_FieldIns>&);
inline jule::Str _207182002_gen_struct_self_field_type_kind(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct_self_field(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct_self_field_init_st(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct_constructor(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct_destructor(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct_operators(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct_derive_defs_prototypes(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct_ins_prototype(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct_prototype(jule::Ptr<_2398d04dc_Struct>&);
inline jule::Str _207182002_gen_struct_prototypes(jule::Slice<jule::Ptr<_2398d04dc_Struct>>&);
inline jule::Str _207182002_gen_fn_decl_head(jule::Ptr<_222edb48e_FnIns>&,jule::Bool);
inline jule::Str _207182002_gen_fn_prototype(jule::Ptr<_222edb48e_Fn>&,jule::Bool);
inline jule::Str _207182002_gen_fn_prototypes(jule::Ptr<_2200229c3_Package>&);
inline jule::Str _207182002_gen_prototypes(jule::Ptr<_239823e36_IR>&);
inline jule::Str _207182002_gen_var_init_expr(jule::Ptr<_2200a2657_Var>&,jule::Str);
inline jule::Str _207182002_gen_var(jule::Ptr<_2200a2657_Var>);
inline jule::Str _207182002_gen_globals(jule::Slice<jule::Ptr<_2200a2657_Var>>&);
inline jule::Str _207182002_gen_fn(jule::Ptr<_222edb48e_Fn>&);
inline jule::Str _207182002_gen_pkg_fns(jule::Ptr<_2200229c3_Package>&);
inline jule::Str _207182002_gen_struct_method_defs(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct_ostream(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct_derive_defs(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct_ins(jule::Ptr<_2398d04dc_StructIns>&);
inline jule::Str _207182002_gen_struct(jule::Ptr<_2398d04dc_Struct>&);
inline jule::Str _207182002_gen_structs(jule::Slice<jule::Ptr<_2398d04dc_Struct>>&);
inline jule::Str _207182002_gen_fns(jule::Ptr<_239823e36_IR>&);
inline void _207182002_push_init(jule::Ptr<_2200229c3_Package>&,jule::Str&);
inline jule::Str _207182002_gen_init_caller(jule::Ptr<_239823e36_IR>&);
inline void _207182002_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _207182002_gen(jule::Ptr<_239823e36_IR>&);
inline jule::Str _238839623_str_repeat(jule::Str,jule::Int);
inline void _238839623_print_error_message(jule::Str);
inline void _238839623_help(jule::Slice<jule::Str>&);
inline void _238839623_version(jule::Slice<jule::Str>&);
inline void _238839623_tool_distos(void);
inline void _238839623_tool_distarch(void);
inline void _238839623_tool(jule::Slice<jule::Str>&);
inline void _238839623_julenv(void);
inline jule::Bool _238839623_process_command(jule::Slice<jule::Str>&);
inline void _238839623_exit_err(jule::Str);
void entry_point(void);
inline void _238857e38___init_common(void);
inline void _2388706e2_init(void);
inline jule::Int _23887166b_system(jule::Str);
inline void _23887166b_write_output(jule::Str,jule::Str);
inline void _23887166b_clear_objects(void);
inline void _23887166b_compile_ir(jule::Str,jule::Str);
inline void _23887166b_do_spell(jule::Str,jule::Str,jule::Str);
inline jule::Bool _23887166b_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _23887166b_gen_compile_cmd(jule::Str,jule::Ptr<_239823e36_IR>&);
inline jule::Str _23887166b_get_compile_path(void);
inline void _23887166b_apply_target_independent_optimizations(jule::Ptr<_239823e36_IR>&);
inline void _23887166b_check_compiler_flag(void);
inline void _23887166b_check_target_arch(jule::Str);
inline void _23887166b_check_target_os(jule::Str);
inline void _23887166b_check_target_flag(jule::Str&);
inline void _23887166b_check_opt_flag(jule::Str&);
inline jule::Slice<jule::Str> _23887166b_check_flags(jule::Slice<jule::Str>&);
inline void _23887166b_setup_sema_flags(jule::Int&);
inline jule::Ptr<_239823e36_IR> _23887166b_build_ir(jule::Slice<jule::Str>&);
inline void _23887166b_compile_command(jule::Slice<jule::Str>&);


static jule::Str _23887166b_COMPILER = jule::Str();
static jule::Str _23887166b_COMPILER_PATH = jule::Str();
static jule::Str _23887166b_OUT_DIR = jule::Str("dist", 4);
static jule::Str _23887166b_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _23887166b_OUT = jule::Str();
static jule::Str _23887166b_CPP_STD = jule::Str("c++17", 5);
static jule::Bool _23887166b_SHADOWING = false;
static jule::Bool _23887166b_TRANSPILATION = false;
static jule::Array<jule::Str,4> _23886cd0a_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _23886cd0a_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _23886cd0a_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,3> _2389027b8_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _2389027b8_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _23890715d_PATH_STDLIB = jule::Str();
static jule::Str _23890715d_PATH_EXEC = jule::Str();
static jule::Str _23890715d_PATH_WD = jule::Str();
static jule::Str _23890715d_PATH_API = jule::Str();
static jule::Array<jule::U8,32> _221ee1e35_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _221ee1e35_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static _2389d34d1_FloatInfo _2389d34d1_F32_INFO = _2389d34d1_FloatInfo(23LLU,8LLU,-127LL);
static _2389d34d1_FloatInfo _2389d34d1_F64_INFO = _2389d34d1_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _238adb74e_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _2398a6c55_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _2398a6c55_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _2398a6c55_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _23993a5d0_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_239796a57_LeftCheat> _239796a57_LEFTCHEATS = jule::Slice<_239796a57_LeftCheat>({_239796a57_LeftCheat(0LL,jule::Str()),_239796a57_LeftCheat(1LL,jule::Str("5", 1)),_239796a57_LeftCheat(1LL,jule::Str("25", 2)),_239796a57_LeftCheat(1LL,jule::Str("125", 3)),_239796a57_LeftCheat(2LL,jule::Str("625", 3)),_239796a57_LeftCheat(2LL,jule::Str("3125", 4)),_239796a57_LeftCheat(2LL,jule::Str("15625", 5)),_239796a57_LeftCheat(3LL,jule::Str("78125", 5)),_239796a57_LeftCheat(3LL,jule::Str("390625", 6)),_239796a57_LeftCheat(3LL,jule::Str("1953125", 7)),_239796a57_LeftCheat(4LL,jule::Str("9765625", 7)),_239796a57_LeftCheat(4LL,jule::Str("48828125", 8)),_239796a57_LeftCheat(4LL,jule::Str("244140625", 9)),_239796a57_LeftCheat(4LL,jule::Str("1220703125", 10)),_239796a57_LeftCheat(5LL,jule::Str("6103515625", 10)),_239796a57_LeftCheat(5LL,jule::Str("30517578125", 11)),_239796a57_LeftCheat(5LL,jule::Str("152587890625", 12)),_239796a57_LeftCheat(6LL,jule::Str("762939453125", 12)),_239796a57_LeftCheat(6LL,jule::Str("3814697265625", 13)),_239796a57_LeftCheat(6LL,jule::Str("19073486328125", 14)),_239796a57_LeftCheat(7LL,jule::Str("95367431640625", 14)),_239796a57_LeftCheat(7LL,jule::Str("476837158203125", 15)),_239796a57_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_239796a57_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_239796a57_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_239796a57_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_239796a57_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_239796a57_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_239796a57_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_239796a57_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_239796a57_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_239796a57_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_239796a57_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_239796a57_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_239796a57_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_239796a57_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_239796a57_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_239796a57_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_239796a57_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_239796a57_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_239796a57_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_239796a57_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_239796a57_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_239796a57_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_239796a57_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_239796a57_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_239796a57_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_239796a57_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_239796a57_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_239796a57_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_239796a57_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_239796a57_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_239796a57_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_239796a57_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_239796a57_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_239796a57_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_239796a57_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_239796a57_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_239796a57_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_239796a57_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_239796a57_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Bool _2388c6e74_OPT_COPY = false;
static jule::Bool _2388c6e74_OPT_DEADCODE = false;
static jule::Bool _2388c6e74_OPT_APPEND = false;
static jule::Bool _2388c6e74_OPT_MATH = false;
static jule::Bool _2388c6e74_OPT_ACCESS = false;
static jule::Bool _2388c6e74_OPT_INLINE = false;
static jule::Bool _2388c6e74_OPT_PTR = false;
static jule::Ptr<_222216247_RangeTable> _2221ebea8__L = jule::new_struct<_222216247_RangeTable>(new( std::nothrow ) _222216247_RangeTable(jule::Slice<_222216247_Range16>({_222216247_Range16(65LLU,90LLU,1LLU),_222216247_Range16(97LLU,122LLU,1LLU),_222216247_Range16(170LLU,181LLU,11LLU),_222216247_Range16(186LLU,192LLU,6LLU),_222216247_Range16(193LLU,214LLU,1LLU),_222216247_Range16(216LLU,246LLU,1LLU),_222216247_Range16(248LLU,705LLU,1LLU),_222216247_Range16(710LLU,721LLU,1LLU),_222216247_Range16(736LLU,740LLU,1LLU),_222216247_Range16(748LLU,750LLU,2LLU),_222216247_Range16(880LLU,884LLU,1LLU),_222216247_Range16(886LLU,887LLU,1LLU),_222216247_Range16(890LLU,893LLU,1LLU),_222216247_Range16(895LLU,902LLU,7LLU),_222216247_Range16(904LLU,906LLU,1LLU),_222216247_Range16(908LLU,910LLU,2LLU),_222216247_Range16(911LLU,929LLU,1LLU),_222216247_Range16(931LLU,1013LLU,1LLU),_222216247_Range16(1015LLU,1153LLU,1LLU),_222216247_Range16(1162LLU,1327LLU,1LLU),_222216247_Range16(1329LLU,1366LLU,1LLU),_222216247_Range16(1369LLU,1376LLU,7LLU),_222216247_Range16(1377LLU,1416LLU,1LLU),_222216247_Range16(1488LLU,1514LLU,1LLU),_222216247_Range16(1519LLU,1522LLU,1LLU),_222216247_Range16(1568LLU,1610LLU,1LLU),_222216247_Range16(1646LLU,1647LLU,1LLU),_222216247_Range16(1649LLU,1747LLU,1LLU),_222216247_Range16(1749LLU,1765LLU,16LLU),_222216247_Range16(1766LLU,1774LLU,8LLU),_222216247_Range16(1775LLU,1786LLU,11LLU),_222216247_Range16(1787LLU,1788LLU,1LLU),_222216247_Range16(1791LLU,1808LLU,17LLU),_222216247_Range16(1810LLU,1839LLU,1LLU),_222216247_Range16(1869LLU,1957LLU,1LLU),_222216247_Range16(1969LLU,1994LLU,25LLU),_222216247_Range16(1995LLU,2026LLU,1LLU),_222216247_Range16(2036LLU,2037LLU,1LLU),_222216247_Range16(2042LLU,2048LLU,6LLU),_222216247_Range16(2049LLU,2069LLU,1LLU),_222216247_Range16(2074LLU,2084LLU,10LLU),_222216247_Range16(2088LLU,2112LLU,24LLU),_222216247_Range16(2113LLU,2136LLU,1LLU),_222216247_Range16(2144LLU,2154LLU,1LLU),_222216247_Range16(2160LLU,2183LLU,1LLU),_222216247_Range16(2185LLU,2190LLU,1LLU),_222216247_Range16(2208LLU,2249LLU,1LLU),_222216247_Range16(2308LLU,2361LLU,1LLU),_222216247_Range16(2365LLU,2384LLU,19LLU),_222216247_Range16(2392LLU,2401LLU,1LLU),_222216247_Range16(2417LLU,2432LLU,1LLU),_222216247_Range16(2437LLU,2444LLU,1LLU),_222216247_Range16(2447LLU,2448LLU,1LLU),_222216247_Range16(2451LLU,2472LLU,1LLU),_222216247_Range16(2474LLU,2480LLU,1LLU),_222216247_Range16(2482LLU,2486LLU,4LLU),_222216247_Range16(2487LLU,2489LLU,1LLU),_222216247_Range16(2493LLU,2510LLU,17LLU),_222216247_Range16(2524LLU,2525LLU,1LLU),_222216247_Range16(2527LLU,2529LLU,1LLU),_222216247_Range16(2544LLU,2545LLU,1LLU),_222216247_Range16(2556LLU,2565LLU,9LLU),_222216247_Range16(2566LLU,2570LLU,1LLU),_222216247_Range16(2575LLU,2576LLU,1LLU),_222216247_Range16(2579LLU,2600LLU,1LLU),_222216247_Range16(2602LLU,2608LLU,1LLU),_222216247_Range16(2610LLU,2611LLU,1LLU),_222216247_Range16(2613LLU,2614LLU,1LLU),_222216247_Range16(2616LLU,2617LLU,1LLU),_222216247_Range16(2649LLU,2652LLU,1LLU),_222216247_Range16(2654LLU,2674LLU,20LLU),_222216247_Range16(2675LLU,2676LLU,1LLU),_222216247_Range16(2693LLU,2701LLU,1LLU),_222216247_Range16(2703LLU,2705LLU,1LLU),_222216247_Range16(2707LLU,2728LLU,1LLU),_222216247_Range16(2730LLU,2736LLU,1LLU),_222216247_Range16(2738LLU,2739LLU,1LLU),_222216247_Range16(2741LLU,2745LLU,1LLU),_222216247_Range16(2749LLU,2768LLU,19LLU),_222216247_Range16(2784LLU,2785LLU,1LLU),_222216247_Range16(2809LLU,2821LLU,12LLU),_222216247_Range16(2822LLU,2828LLU,1LLU),_222216247_Range16(2831LLU,2832LLU,1LLU),_222216247_Range16(2835LLU,2856LLU,1LLU),_222216247_Range16(2858LLU,2864LLU,1LLU),_222216247_Range16(2866LLU,2867LLU,1LLU),_222216247_Range16(2869LLU,2873LLU,1LLU),_222216247_Range16(2877LLU,2908LLU,31LLU),_222216247_Range16(2909LLU,2911LLU,2LLU),_222216247_Range16(2912LLU,2913LLU,1LLU),_222216247_Range16(2929LLU,2947LLU,18LLU),_222216247_Range16(2949LLU,2954LLU,1LLU),_222216247_Range16(2958LLU,2960LLU,1LLU),_222216247_Range16(2962LLU,2965LLU,1LLU),_222216247_Range16(2969LLU,2970LLU,1LLU),_222216247_Range16(2972LLU,2974LLU,2LLU),_222216247_Range16(2975LLU,2979LLU,4LLU),_222216247_Range16(2980LLU,2984LLU,4LLU),_222216247_Range16(2985LLU,2986LLU,1LLU),_222216247_Range16(2990LLU,3001LLU,1LLU),_222216247_Range16(3024LLU,3077LLU,53LLU),_222216247_Range16(3078LLU,3084LLU,1LLU),_222216247_Range16(3086LLU,3088LLU,1LLU),_222216247_Range16(3090LLU,3112LLU,1LLU),_222216247_Range16(3114LLU,3129LLU,1LLU),_222216247_Range16(3133LLU,3160LLU,27LLU),_222216247_Range16(3161LLU,3162LLU,1LLU),_222216247_Range16(3165LLU,3168LLU,3LLU),_222216247_Range16(3169LLU,3200LLU,31LLU),_222216247_Range16(3205LLU,3212LLU,1LLU),_222216247_Range16(3214LLU,3216LLU,1LLU),_222216247_Range16(3218LLU,3240LLU,1LLU),_222216247_Range16(3242LLU,3251LLU,1LLU),_222216247_Range16(3253LLU,3257LLU,1LLU),_222216247_Range16(3261LLU,3293LLU,32LLU),_222216247_Range16(3294LLU,3296LLU,2LLU),_222216247_Range16(3297LLU,3313LLU,16LLU),_222216247_Range16(3314LLU,3332LLU,18LLU),_222216247_Range16(3333LLU,3340LLU,1LLU),_222216247_Range16(3342LLU,3344LLU,1LLU),_222216247_Range16(3346LLU,3386LLU,1LLU),_222216247_Range16(3389LLU,3406LLU,17LLU),_222216247_Range16(3412LLU,3414LLU,1LLU),_222216247_Range16(3423LLU,3425LLU,1LLU),_222216247_Range16(3450LLU,3455LLU,1LLU),_222216247_Range16(3461LLU,3478LLU,1LLU),_222216247_Range16(3482LLU,3505LLU,1LLU),_222216247_Range16(3507LLU,3515LLU,1LLU),_222216247_Range16(3517LLU,3520LLU,3LLU),_222216247_Range16(3521LLU,3526LLU,1LLU),_222216247_Range16(3585LLU,3632LLU,1LLU),_222216247_Range16(3634LLU,3635LLU,1LLU),_222216247_Range16(3648LLU,3654LLU,1LLU),_222216247_Range16(3713LLU,3714LLU,1LLU),_222216247_Range16(3716LLU,3718LLU,2LLU),_222216247_Range16(3719LLU,3722LLU,1LLU),_222216247_Range16(3724LLU,3747LLU,1LLU),_222216247_Range16(3749LLU,3751LLU,2LLU),_222216247_Range16(3752LLU,3760LLU,1LLU),_222216247_Range16(3762LLU,3763LLU,1LLU),_222216247_Range16(3773LLU,3776LLU,3LLU),_222216247_Range16(3777LLU,3780LLU,1LLU),_222216247_Range16(3782LLU,3804LLU,22LLU),_222216247_Range16(3805LLU,3807LLU,1LLU),_222216247_Range16(3840LLU,3904LLU,64LLU),_222216247_Range16(3905LLU,3911LLU,1LLU),_222216247_Range16(3913LLU,3948LLU,1LLU),_222216247_Range16(3976LLU,3980LLU,1LLU),_222216247_Range16(4096LLU,4138LLU,1LLU),_222216247_Range16(4159LLU,4176LLU,17LLU),_222216247_Range16(4177LLU,4181LLU,1LLU),_222216247_Range16(4186LLU,4189LLU,1LLU),_222216247_Range16(4193LLU,4197LLU,4LLU),_222216247_Range16(4198LLU,4206LLU,8LLU),_222216247_Range16(4207LLU,4208LLU,1LLU),_222216247_Range16(4213LLU,4225LLU,1LLU),_222216247_Range16(4238LLU,4256LLU,18LLU),_222216247_Range16(4257LLU,4293LLU,1LLU),_222216247_Range16(4295LLU,4301LLU,6LLU),_222216247_Range16(4304LLU,4346LLU,1LLU),_222216247_Range16(4348LLU,4680LLU,1LLU),_222216247_Range16(4682LLU,4685LLU,1LLU),_222216247_Range16(4688LLU,4694LLU,1LLU),_222216247_Range16(4696LLU,4698LLU,2LLU),_222216247_Range16(4699LLU,4701LLU,1LLU),_222216247_Range16(4704LLU,4744LLU,1LLU),_222216247_Range16(4746LLU,4749LLU,1LLU),_222216247_Range16(4752LLU,4784LLU,1LLU),_222216247_Range16(4786LLU,4789LLU,1LLU),_222216247_Range16(4792LLU,4798LLU,1LLU),_222216247_Range16(4800LLU,4802LLU,2LLU),_222216247_Range16(4803LLU,4805LLU,1LLU),_222216247_Range16(4808LLU,4822LLU,1LLU),_222216247_Range16(4824LLU,4880LLU,1LLU),_222216247_Range16(4882LLU,4885LLU,1LLU),_222216247_Range16(4888LLU,4954LLU,1LLU),_222216247_Range16(4992LLU,5007LLU,1LLU),_222216247_Range16(5024LLU,5109LLU,1LLU),_222216247_Range16(5112LLU,5117LLU,1LLU),_222216247_Range16(5121LLU,5740LLU,1LLU),_222216247_Range16(5743LLU,5759LLU,1LLU),_222216247_Range16(5761LLU,5786LLU,1LLU),_222216247_Range16(5792LLU,5866LLU,1LLU),_222216247_Range16(5873LLU,5880LLU,1LLU),_222216247_Range16(5888LLU,5905LLU,1LLU),_222216247_Range16(5919LLU,5937LLU,1LLU),_222216247_Range16(5952LLU,5969LLU,1LLU),_222216247_Range16(5984LLU,5996LLU,1LLU),_222216247_Range16(5998LLU,6000LLU,1LLU),_222216247_Range16(6016LLU,6067LLU,1LLU),_222216247_Range16(6103LLU,6108LLU,5LLU),_222216247_Range16(6176LLU,6264LLU,1LLU),_222216247_Range16(6272LLU,6276LLU,1LLU),_222216247_Range16(6279LLU,6312LLU,1LLU),_222216247_Range16(6314LLU,6320LLU,6LLU),_222216247_Range16(6321LLU,6389LLU,1LLU),_222216247_Range16(6400LLU,6430LLU,1LLU),_222216247_Range16(6480LLU,6509LLU,1LLU),_222216247_Range16(6512LLU,6516LLU,1LLU),_222216247_Range16(6528LLU,6571LLU,1LLU),_222216247_Range16(6576LLU,6601LLU,1LLU),_222216247_Range16(6656LLU,6678LLU,1LLU),_222216247_Range16(6688LLU,6740LLU,1LLU),_222216247_Range16(6823LLU,6917LLU,94LLU),_222216247_Range16(6918LLU,6963LLU,1LLU),_222216247_Range16(6981LLU,6988LLU,1LLU),_222216247_Range16(7043LLU,7072LLU,1LLU),_222216247_Range16(7086LLU,7087LLU,1LLU),_222216247_Range16(7098LLU,7141LLU,1LLU),_222216247_Range16(7168LLU,7203LLU,1LLU),_222216247_Range16(7245LLU,7247LLU,1LLU),_222216247_Range16(7258LLU,7293LLU,1LLU),_222216247_Range16(7296LLU,7304LLU,1LLU),_222216247_Range16(7312LLU,7354LLU,1LLU),_222216247_Range16(7357LLU,7359LLU,1LLU),_222216247_Range16(7401LLU,7404LLU,1LLU),_222216247_Range16(7406LLU,7411LLU,1LLU),_222216247_Range16(7413LLU,7414LLU,1LLU),_222216247_Range16(7418LLU,7424LLU,6LLU),_222216247_Range16(7425LLU,7615LLU,1LLU),_222216247_Range16(7680LLU,7957LLU,1LLU),_222216247_Range16(7960LLU,7965LLU,1LLU),_222216247_Range16(7968LLU,8005LLU,1LLU),_222216247_Range16(8008LLU,8013LLU,1LLU),_222216247_Range16(8016LLU,8023LLU,1LLU),_222216247_Range16(8025LLU,8031LLU,2LLU),_222216247_Range16(8032LLU,8061LLU,1LLU),_222216247_Range16(8064LLU,8116LLU,1LLU),_222216247_Range16(8118LLU,8124LLU,1LLU),_222216247_Range16(8126LLU,8130LLU,4LLU),_222216247_Range16(8131LLU,8132LLU,1LLU),_222216247_Range16(8134LLU,8140LLU,1LLU),_222216247_Range16(8144LLU,8147LLU,1LLU),_222216247_Range16(8150LLU,8155LLU,1LLU),_222216247_Range16(8160LLU,8172LLU,1LLU),_222216247_Range16(8178LLU,8180LLU,1LLU),_222216247_Range16(8182LLU,8188LLU,1LLU),_222216247_Range16(8305LLU,8319LLU,14LLU),_222216247_Range16(8336LLU,8348LLU,1LLU),_222216247_Range16(8450LLU,8455LLU,5LLU),_222216247_Range16(8458LLU,8467LLU,1LLU),_222216247_Range16(8469LLU,8473LLU,4LLU),_222216247_Range16(8474LLU,8477LLU,1LLU),_222216247_Range16(8484LLU,8490LLU,2LLU),_222216247_Range16(8491LLU,8493LLU,1LLU),_222216247_Range16(8495LLU,8505LLU,1LLU),_222216247_Range16(8508LLU,8511LLU,1LLU),_222216247_Range16(8517LLU,8521LLU,1LLU),_222216247_Range16(8526LLU,8579LLU,53LLU),_222216247_Range16(8580LLU,11264LLU,2684LLU),_222216247_Range16(11265LLU,11492LLU,1LLU),_222216247_Range16(11499LLU,11502LLU,1LLU),_222216247_Range16(11506LLU,11507LLU,1LLU),_222216247_Range16(11520LLU,11557LLU,1LLU),_222216247_Range16(11559LLU,11565LLU,6LLU),_222216247_Range16(11568LLU,11623LLU,1LLU),_222216247_Range16(11631LLU,11648LLU,17LLU),_222216247_Range16(11649LLU,11670LLU,1LLU),_222216247_Range16(11680LLU,11686LLU,1LLU),_222216247_Range16(11688LLU,11694LLU,1LLU),_222216247_Range16(11696LLU,11702LLU,1LLU),_222216247_Range16(11704LLU,11710LLU,1LLU),_222216247_Range16(11712LLU,11718LLU,1LLU),_222216247_Range16(11720LLU,11726LLU,1LLU),_222216247_Range16(11728LLU,11734LLU,1LLU),_222216247_Range16(11736LLU,11742LLU,1LLU),_222216247_Range16(11823LLU,12293LLU,470LLU),_222216247_Range16(12294LLU,12337LLU,43LLU),_222216247_Range16(12338LLU,12341LLU,1LLU),_222216247_Range16(12347LLU,12348LLU,1LLU),_222216247_Range16(12353LLU,12438LLU,1LLU),_222216247_Range16(12445LLU,12447LLU,1LLU),_222216247_Range16(12449LLU,12538LLU,1LLU),_222216247_Range16(12540LLU,12543LLU,1LLU),_222216247_Range16(12549LLU,12591LLU,1LLU),_222216247_Range16(12593LLU,12686LLU,1LLU),_222216247_Range16(12704LLU,12735LLU,1LLU),_222216247_Range16(12784LLU,12799LLU,1LLU),_222216247_Range16(13312LLU,19903LLU,1LLU),_222216247_Range16(19968LLU,42124LLU,1LLU),_222216247_Range16(42192LLU,42237LLU,1LLU),_222216247_Range16(42240LLU,42508LLU,1LLU),_222216247_Range16(42512LLU,42527LLU,1LLU),_222216247_Range16(42538LLU,42539LLU,1LLU),_222216247_Range16(42560LLU,42606LLU,1LLU),_222216247_Range16(42623LLU,42653LLU,1LLU),_222216247_Range16(42656LLU,42725LLU,1LLU),_222216247_Range16(42775LLU,42783LLU,1LLU),_222216247_Range16(42786LLU,42888LLU,1LLU),_222216247_Range16(42891LLU,42954LLU,1LLU),_222216247_Range16(42960LLU,42961LLU,1LLU),_222216247_Range16(42963LLU,42965LLU,2LLU),_222216247_Range16(42966LLU,42969LLU,1LLU),_222216247_Range16(42994LLU,43009LLU,1LLU),_222216247_Range16(43011LLU,43013LLU,1LLU),_222216247_Range16(43015LLU,43018LLU,1LLU),_222216247_Range16(43020LLU,43042LLU,1LLU),_222216247_Range16(43072LLU,43123LLU,1LLU),_222216247_Range16(43138LLU,43187LLU,1LLU),_222216247_Range16(43250LLU,43255LLU,1LLU),_222216247_Range16(43259LLU,43261LLU,2LLU),_222216247_Range16(43262LLU,43274LLU,12LLU),_222216247_Range16(43275LLU,43301LLU,1LLU),_222216247_Range16(43312LLU,43334LLU,1LLU),_222216247_Range16(43360LLU,43388LLU,1LLU),_222216247_Range16(43396LLU,43442LLU,1LLU),_222216247_Range16(43471LLU,43488LLU,17LLU),_222216247_Range16(43489LLU,43492LLU,1LLU),_222216247_Range16(43494LLU,43503LLU,1LLU),_222216247_Range16(43514LLU,43518LLU,1LLU),_222216247_Range16(43520LLU,43560LLU,1LLU),_222216247_Range16(43584LLU,43586LLU,1LLU),_222216247_Range16(43588LLU,43595LLU,1LLU),_222216247_Range16(43616LLU,43638LLU,1LLU),_222216247_Range16(43642LLU,43646LLU,4LLU),_222216247_Range16(43647LLU,43695LLU,1LLU),_222216247_Range16(43697LLU,43701LLU,4LLU),_222216247_Range16(43702LLU,43705LLU,3LLU),_222216247_Range16(43706LLU,43709LLU,1LLU),_222216247_Range16(43712LLU,43714LLU,2LLU),_222216247_Range16(43739LLU,43741LLU,1LLU),_222216247_Range16(43744LLU,43754LLU,1LLU),_222216247_Range16(43762LLU,43764LLU,1LLU),_222216247_Range16(43777LLU,43782LLU,1LLU),_222216247_Range16(43785LLU,43790LLU,1LLU),_222216247_Range16(43793LLU,43798LLU,1LLU),_222216247_Range16(43808LLU,43814LLU,1LLU),_222216247_Range16(43816LLU,43822LLU,1LLU),_222216247_Range16(43824LLU,43866LLU,1LLU),_222216247_Range16(43868LLU,43881LLU,1LLU),_222216247_Range16(43888LLU,44002LLU,1LLU),_222216247_Range16(44032LLU,55203LLU,1LLU),_222216247_Range16(55216LLU,55238LLU,1LLU),_222216247_Range16(55243LLU,55291LLU,1LLU),_222216247_Range16(63744LLU,64109LLU,1LLU),_222216247_Range16(64112LLU,64217LLU,1LLU),_222216247_Range16(64256LLU,64262LLU,1LLU),_222216247_Range16(64275LLU,64279LLU,1LLU),_222216247_Range16(64285LLU,64287LLU,2LLU),_222216247_Range16(64288LLU,64296LLU,1LLU),_222216247_Range16(64298LLU,64310LLU,1LLU),_222216247_Range16(64312LLU,64316LLU,1LLU),_222216247_Range16(64318LLU,64320LLU,2LLU),_222216247_Range16(64321LLU,64323LLU,2LLU),_222216247_Range16(64324LLU,64326LLU,2LLU),_222216247_Range16(64327LLU,64433LLU,1LLU),_222216247_Range16(64467LLU,64829LLU,1LLU),_222216247_Range16(64848LLU,64911LLU,1LLU),_222216247_Range16(64914LLU,64967LLU,1LLU),_222216247_Range16(65008LLU,65019LLU,1LLU),_222216247_Range16(65136LLU,65140LLU,1LLU),_222216247_Range16(65142LLU,65276LLU,1LLU),_222216247_Range16(65313LLU,65338LLU,1LLU),_222216247_Range16(65345LLU,65370LLU,1LLU),_222216247_Range16(65382LLU,65470LLU,1LLU),_222216247_Range16(65474LLU,65479LLU,1LLU),_222216247_Range16(65482LLU,65487LLU,1LLU),_222216247_Range16(65490LLU,65495LLU,1LLU),_222216247_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_222216247_Range32>({_222216247_Range32(65536LLU,65547LLU,1LLU),_222216247_Range32(65549LLU,65574LLU,1LLU),_222216247_Range32(65576LLU,65594LLU,1LLU),_222216247_Range32(65596LLU,65597LLU,1LLU),_222216247_Range32(65599LLU,65613LLU,1LLU),_222216247_Range32(65616LLU,65629LLU,1LLU),_222216247_Range32(65664LLU,65786LLU,1LLU),_222216247_Range32(66176LLU,66204LLU,1LLU),_222216247_Range32(66208LLU,66256LLU,1LLU),_222216247_Range32(66304LLU,66335LLU,1LLU),_222216247_Range32(66349LLU,66368LLU,1LLU),_222216247_Range32(66370LLU,66377LLU,1LLU),_222216247_Range32(66384LLU,66421LLU,1LLU),_222216247_Range32(66432LLU,66461LLU,1LLU),_222216247_Range32(66464LLU,66499LLU,1LLU),_222216247_Range32(66504LLU,66511LLU,1LLU),_222216247_Range32(66560LLU,66717LLU,1LLU),_222216247_Range32(66736LLU,66771LLU,1LLU),_222216247_Range32(66776LLU,66811LLU,1LLU),_222216247_Range32(66816LLU,66855LLU,1LLU),_222216247_Range32(66864LLU,66915LLU,1LLU),_222216247_Range32(66928LLU,66938LLU,1LLU),_222216247_Range32(66940LLU,66954LLU,1LLU),_222216247_Range32(66956LLU,66962LLU,1LLU),_222216247_Range32(66964LLU,66965LLU,1LLU),_222216247_Range32(66967LLU,66977LLU,1LLU),_222216247_Range32(66979LLU,66993LLU,1LLU),_222216247_Range32(66995LLU,67001LLU,1LLU),_222216247_Range32(67003LLU,67004LLU,1LLU),_222216247_Range32(67072LLU,67382LLU,1LLU),_222216247_Range32(67392LLU,67413LLU,1LLU),_222216247_Range32(67424LLU,67431LLU,1LLU),_222216247_Range32(67456LLU,67461LLU,1LLU),_222216247_Range32(67463LLU,67504LLU,1LLU),_222216247_Range32(67506LLU,67514LLU,1LLU),_222216247_Range32(67584LLU,67589LLU,1LLU),_222216247_Range32(67592LLU,67594LLU,2LLU),_222216247_Range32(67595LLU,67637LLU,1LLU),_222216247_Range32(67639LLU,67640LLU,1LLU),_222216247_Range32(67644LLU,67647LLU,3LLU),_222216247_Range32(67648LLU,67669LLU,1LLU),_222216247_Range32(67680LLU,67702LLU,1LLU),_222216247_Range32(67712LLU,67742LLU,1LLU),_222216247_Range32(67808LLU,67826LLU,1LLU),_222216247_Range32(67828LLU,67829LLU,1LLU),_222216247_Range32(67840LLU,67861LLU,1LLU),_222216247_Range32(67872LLU,67897LLU,1LLU),_222216247_Range32(67968LLU,68023LLU,1LLU),_222216247_Range32(68030LLU,68031LLU,1LLU),_222216247_Range32(68096LLU,68112LLU,16LLU),_222216247_Range32(68113LLU,68115LLU,1LLU),_222216247_Range32(68117LLU,68119LLU,1LLU),_222216247_Range32(68121LLU,68149LLU,1LLU),_222216247_Range32(68192LLU,68220LLU,1LLU),_222216247_Range32(68224LLU,68252LLU,1LLU),_222216247_Range32(68288LLU,68295LLU,1LLU),_222216247_Range32(68297LLU,68324LLU,1LLU),_222216247_Range32(68352LLU,68405LLU,1LLU),_222216247_Range32(68416LLU,68437LLU,1LLU),_222216247_Range32(68448LLU,68466LLU,1LLU),_222216247_Range32(68480LLU,68497LLU,1LLU),_222216247_Range32(68608LLU,68680LLU,1LLU),_222216247_Range32(68736LLU,68786LLU,1LLU),_222216247_Range32(68800LLU,68850LLU,1LLU),_222216247_Range32(68864LLU,68899LLU,1LLU),_222216247_Range32(69248LLU,69289LLU,1LLU),_222216247_Range32(69296LLU,69297LLU,1LLU),_222216247_Range32(69376LLU,69404LLU,1LLU),_222216247_Range32(69415LLU,69424LLU,9LLU),_222216247_Range32(69425LLU,69445LLU,1LLU),_222216247_Range32(69488LLU,69505LLU,1LLU),_222216247_Range32(69552LLU,69572LLU,1LLU),_222216247_Range32(69600LLU,69622LLU,1LLU),_222216247_Range32(69635LLU,69687LLU,1LLU),_222216247_Range32(69745LLU,69746LLU,1LLU),_222216247_Range32(69749LLU,69763LLU,14LLU),_222216247_Range32(69764LLU,69807LLU,1LLU),_222216247_Range32(69840LLU,69864LLU,1LLU),_222216247_Range32(69891LLU,69926LLU,1LLU),_222216247_Range32(69956LLU,69959LLU,3LLU),_222216247_Range32(69968LLU,70002LLU,1LLU),_222216247_Range32(70006LLU,70019LLU,13LLU),_222216247_Range32(70020LLU,70066LLU,1LLU),_222216247_Range32(70081LLU,70084LLU,1LLU),_222216247_Range32(70106LLU,70108LLU,2LLU),_222216247_Range32(70144LLU,70161LLU,1LLU),_222216247_Range32(70163LLU,70187LLU,1LLU),_222216247_Range32(70207LLU,70208LLU,1LLU),_222216247_Range32(70272LLU,70278LLU,1LLU),_222216247_Range32(70280LLU,70282LLU,2LLU),_222216247_Range32(70283LLU,70285LLU,1LLU),_222216247_Range32(70287LLU,70301LLU,1LLU),_222216247_Range32(70303LLU,70312LLU,1LLU),_222216247_Range32(70320LLU,70366LLU,1LLU),_222216247_Range32(70405LLU,70412LLU,1LLU),_222216247_Range32(70415LLU,70416LLU,1LLU),_222216247_Range32(70419LLU,70440LLU,1LLU),_222216247_Range32(70442LLU,70448LLU,1LLU),_222216247_Range32(70450LLU,70451LLU,1LLU),_222216247_Range32(70453LLU,70457LLU,1LLU),_222216247_Range32(70461LLU,70480LLU,19LLU),_222216247_Range32(70493LLU,70497LLU,1LLU),_222216247_Range32(70656LLU,70708LLU,1LLU),_222216247_Range32(70727LLU,70730LLU,1LLU),_222216247_Range32(70751LLU,70753LLU,1LLU),_222216247_Range32(70784LLU,70831LLU,1LLU),_222216247_Range32(70852LLU,70853LLU,1LLU),_222216247_Range32(70855LLU,71040LLU,185LLU),_222216247_Range32(71041LLU,71086LLU,1LLU),_222216247_Range32(71128LLU,71131LLU,1LLU),_222216247_Range32(71168LLU,71215LLU,1LLU),_222216247_Range32(71236LLU,71296LLU,60LLU),_222216247_Range32(71297LLU,71338LLU,1LLU),_222216247_Range32(71352LLU,71424LLU,72LLU),_222216247_Range32(71425LLU,71450LLU,1LLU),_222216247_Range32(71488LLU,71494LLU,1LLU),_222216247_Range32(71680LLU,71723LLU,1LLU),_222216247_Range32(71840LLU,71903LLU,1LLU),_222216247_Range32(71935LLU,71942LLU,1LLU),_222216247_Range32(71945LLU,71948LLU,3LLU),_222216247_Range32(71949LLU,71955LLU,1LLU),_222216247_Range32(71957LLU,71958LLU,1LLU),_222216247_Range32(71960LLU,71983LLU,1LLU),_222216247_Range32(71999LLU,72001LLU,2LLU),_222216247_Range32(72096LLU,72103LLU,1LLU),_222216247_Range32(72106LLU,72144LLU,1LLU),_222216247_Range32(72161LLU,72163LLU,2LLU),_222216247_Range32(72192LLU,72203LLU,11LLU),_222216247_Range32(72204LLU,72242LLU,1LLU),_222216247_Range32(72250LLU,72272LLU,22LLU),_222216247_Range32(72284LLU,72329LLU,1LLU),_222216247_Range32(72349LLU,72368LLU,19LLU),_222216247_Range32(72369LLU,72440LLU,1LLU),_222216247_Range32(72704LLU,72712LLU,1LLU),_222216247_Range32(72714LLU,72750LLU,1LLU),_222216247_Range32(72768LLU,72818LLU,50LLU),_222216247_Range32(72819LLU,72847LLU,1LLU),_222216247_Range32(72960LLU,72966LLU,1LLU),_222216247_Range32(72968LLU,72969LLU,1LLU),_222216247_Range32(72971LLU,73008LLU,1LLU),_222216247_Range32(73030LLU,73056LLU,26LLU),_222216247_Range32(73057LLU,73061LLU,1LLU),_222216247_Range32(73063LLU,73064LLU,1LLU),_222216247_Range32(73066LLU,73097LLU,1LLU),_222216247_Range32(73112LLU,73440LLU,328LLU),_222216247_Range32(73441LLU,73458LLU,1LLU),_222216247_Range32(73474LLU,73476LLU,2LLU),_222216247_Range32(73477LLU,73488LLU,1LLU),_222216247_Range32(73490LLU,73523LLU,1LLU),_222216247_Range32(73648LLU,73728LLU,80LLU),_222216247_Range32(73729LLU,74649LLU,1LLU),_222216247_Range32(74880LLU,75075LLU,1LLU),_222216247_Range32(77712LLU,77808LLU,1LLU),_222216247_Range32(77824LLU,78895LLU,1LLU),_222216247_Range32(78913LLU,78918LLU,1LLU),_222216247_Range32(82944LLU,83526LLU,1LLU),_222216247_Range32(92160LLU,92728LLU,1LLU),_222216247_Range32(92736LLU,92766LLU,1LLU),_222216247_Range32(92784LLU,92862LLU,1LLU),_222216247_Range32(92880LLU,92909LLU,1LLU),_222216247_Range32(92928LLU,92975LLU,1LLU),_222216247_Range32(92992LLU,92995LLU,1LLU),_222216247_Range32(93027LLU,93047LLU,1LLU),_222216247_Range32(93053LLU,93071LLU,1LLU),_222216247_Range32(93760LLU,93823LLU,1LLU),_222216247_Range32(93952LLU,94026LLU,1LLU),_222216247_Range32(94032LLU,94099LLU,67LLU),_222216247_Range32(94100LLU,94111LLU,1LLU),_222216247_Range32(94176LLU,94177LLU,1LLU),_222216247_Range32(94179LLU,94208LLU,29LLU),_222216247_Range32(94209LLU,100343LLU,1LLU),_222216247_Range32(100352LLU,101589LLU,1LLU),_222216247_Range32(101632LLU,101640LLU,1LLU),_222216247_Range32(110576LLU,110579LLU,1LLU),_222216247_Range32(110581LLU,110587LLU,1LLU),_222216247_Range32(110589LLU,110590LLU,1LLU),_222216247_Range32(110592LLU,110882LLU,1LLU),_222216247_Range32(110898LLU,110928LLU,30LLU),_222216247_Range32(110929LLU,110930LLU,1LLU),_222216247_Range32(110933LLU,110948LLU,15LLU),_222216247_Range32(110949LLU,110951LLU,1LLU),_222216247_Range32(110960LLU,111355LLU,1LLU),_222216247_Range32(113664LLU,113770LLU,1LLU),_222216247_Range32(113776LLU,113788LLU,1LLU),_222216247_Range32(113792LLU,113800LLU,1LLU),_222216247_Range32(113808LLU,113817LLU,1LLU),_222216247_Range32(119808LLU,119892LLU,1LLU),_222216247_Range32(119894LLU,119964LLU,1LLU),_222216247_Range32(119966LLU,119967LLU,1LLU),_222216247_Range32(119970LLU,119973LLU,3LLU),_222216247_Range32(119974LLU,119977LLU,3LLU),_222216247_Range32(119978LLU,119980LLU,1LLU),_222216247_Range32(119982LLU,119993LLU,1LLU),_222216247_Range32(119995LLU,119997LLU,2LLU),_222216247_Range32(119998LLU,120003LLU,1LLU),_222216247_Range32(120005LLU,120069LLU,1LLU),_222216247_Range32(120071LLU,120074LLU,1LLU),_222216247_Range32(120077LLU,120084LLU,1LLU),_222216247_Range32(120086LLU,120092LLU,1LLU),_222216247_Range32(120094LLU,120121LLU,1LLU),_222216247_Range32(120123LLU,120126LLU,1LLU),_222216247_Range32(120128LLU,120132LLU,1LLU),_222216247_Range32(120134LLU,120138LLU,4LLU),_222216247_Range32(120139LLU,120144LLU,1LLU),_222216247_Range32(120146LLU,120485LLU,1LLU),_222216247_Range32(120488LLU,120512LLU,1LLU),_222216247_Range32(120514LLU,120538LLU,1LLU),_222216247_Range32(120540LLU,120570LLU,1LLU),_222216247_Range32(120572LLU,120596LLU,1LLU),_222216247_Range32(120598LLU,120628LLU,1LLU),_222216247_Range32(120630LLU,120654LLU,1LLU),_222216247_Range32(120656LLU,120686LLU,1LLU),_222216247_Range32(120688LLU,120712LLU,1LLU),_222216247_Range32(120714LLU,120744LLU,1LLU),_222216247_Range32(120746LLU,120770LLU,1LLU),_222216247_Range32(120772LLU,120779LLU,1LLU),_222216247_Range32(122624LLU,122654LLU,1LLU),_222216247_Range32(122661LLU,122666LLU,1LLU),_222216247_Range32(122928LLU,122989LLU,1LLU),_222216247_Range32(123136LLU,123180LLU,1LLU),_222216247_Range32(123191LLU,123197LLU,1LLU),_222216247_Range32(123214LLU,123536LLU,322LLU),_222216247_Range32(123537LLU,123565LLU,1LLU),_222216247_Range32(123584LLU,123627LLU,1LLU),_222216247_Range32(124112LLU,124139LLU,1LLU),_222216247_Range32(124896LLU,124902LLU,1LLU),_222216247_Range32(124904LLU,124907LLU,1LLU),_222216247_Range32(124909LLU,124910LLU,1LLU),_222216247_Range32(124912LLU,124926LLU,1LLU),_222216247_Range32(124928LLU,125124LLU,1LLU),_222216247_Range32(125184LLU,125251LLU,1LLU),_222216247_Range32(125259LLU,126464LLU,1205LLU),_222216247_Range32(126465LLU,126467LLU,1LLU),_222216247_Range32(126469LLU,126495LLU,1LLU),_222216247_Range32(126497LLU,126498LLU,1LLU),_222216247_Range32(126500LLU,126503LLU,3LLU),_222216247_Range32(126505LLU,126514LLU,1LLU),_222216247_Range32(126516LLU,126519LLU,1LLU),_222216247_Range32(126521LLU,126523LLU,2LLU),_222216247_Range32(126530LLU,126535LLU,5LLU),_222216247_Range32(126537LLU,126541LLU,2LLU),_222216247_Range32(126542LLU,126543LLU,1LLU),_222216247_Range32(126545LLU,126546LLU,1LLU),_222216247_Range32(126548LLU,126551LLU,3LLU),_222216247_Range32(126553LLU,126561LLU,2LLU),_222216247_Range32(126562LLU,126564LLU,2LLU),_222216247_Range32(126567LLU,126570LLU,1LLU),_222216247_Range32(126572LLU,126578LLU,1LLU),_222216247_Range32(126580LLU,126583LLU,1LLU),_222216247_Range32(126585LLU,126588LLU,1LLU),_222216247_Range32(126590LLU,126592LLU,2LLU),_222216247_Range32(126593LLU,126601LLU,1LLU),_222216247_Range32(126603LLU,126619LLU,1LLU),_222216247_Range32(126625LLU,126627LLU,1LLU),_222216247_Range32(126629LLU,126633LLU,1LLU),_222216247_Range32(126635LLU,126651LLU,1LLU),_222216247_Range32(131072LLU,173791LLU,1LLU),_222216247_Range32(173824LLU,177977LLU,1LLU),_222216247_Range32(177984LLU,178205LLU,1LLU),_222216247_Range32(178208LLU,183969LLU,1LLU),_222216247_Range32(183984LLU,191456LLU,1LLU),_222216247_Range32(194560LLU,195101LLU,1LLU),_222216247_Range32(196608LLU,201546LLU,1LLU),_222216247_Range32(201552LLU,205743LLU,1LLU)}),6LL));
static jule::Array<jule::I32,5> _2220dce43_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _2220dce43_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,12> _2220dce43_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _2220dce43_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _2220dce43_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_221db36ec_KindPair,47> _221db36ec_KEYWORDS = jule::Array<_221db36ec_KindPair,47>({_221db36ec_KindPair(jule::Str("i8", 2),1LLU),_221db36ec_KindPair(jule::Str("i16", 3),1LLU),_221db36ec_KindPair(jule::Str("i32", 3),1LLU),_221db36ec_KindPair(jule::Str("i64", 3),1LLU),_221db36ec_KindPair(jule::Str("u8", 2),1LLU),_221db36ec_KindPair(jule::Str("u16", 3),1LLU),_221db36ec_KindPair(jule::Str("u32", 3),1LLU),_221db36ec_KindPair(jule::Str("u64", 3),1LLU),_221db36ec_KindPair(jule::Str("f32", 3),1LLU),_221db36ec_KindPair(jule::Str("f64", 3),1LLU),_221db36ec_KindPair(jule::Str("uint", 4),1LLU),_221db36ec_KindPair(jule::Str("int", 3),1LLU),_221db36ec_KindPair(jule::Str("uintptr", 7),1LLU),_221db36ec_KindPair(jule::Str("bool", 4),1LLU),_221db36ec_KindPair(jule::Str("str", 3),1LLU),_221db36ec_KindPair(jule::Str("any", 3),1LLU),_221db36ec_KindPair(jule::Str("true", 4),6LLU),_221db36ec_KindPair(jule::Str("false", 5),6LLU),_221db36ec_KindPair(jule::Str("nil", 3),6LLU),_221db36ec_KindPair(jule::Str("const", 5),9LLU),_221db36ec_KindPair(jule::Str("ret", 3),4LLU),_221db36ec_KindPair(jule::Str("type", 4),10LLU),_221db36ec_KindPair(jule::Str("for", 3),12LLU),_221db36ec_KindPair(jule::Str("break", 5),13LLU),_221db36ec_KindPair(jule::Str("continue", 8),14LLU),_221db36ec_KindPair(jule::Str("in", 2),15LLU),_221db36ec_KindPair(jule::Str("if", 2),16LLU),_221db36ec_KindPair(jule::Str("else", 4),17LLU),_221db36ec_KindPair(jule::Str("use", 3),19LLU),_221db36ec_KindPair(jule::Str("pub", 3),21LLU),_221db36ec_KindPair(jule::Str("goto", 4),22LLU),_221db36ec_KindPair(jule::Str("enum", 4),24LLU),_221db36ec_KindPair(jule::Str("struct", 6),25LLU),_221db36ec_KindPair(jule::Str("co", 2),26LLU),_221db36ec_KindPair(jule::Str("match", 5),27LLU),_221db36ec_KindPair(jule::Str("self", 4),28LLU),_221db36ec_KindPair(jule::Str("trait", 5),29LLU),_221db36ec_KindPair(jule::Str("impl", 4),30LLU),_221db36ec_KindPair(jule::Str("cpp", 3),31LLU),_221db36ec_KindPair(jule::Str("fall", 4),32LLU),_221db36ec_KindPair(jule::Str("fn", 2),33LLU),_221db36ec_KindPair(jule::Str("let", 3),34LLU),_221db36ec_KindPair(jule::Str("unsafe", 6),35LLU),_221db36ec_KindPair(jule::Str("mut", 3),36LLU),_221db36ec_KindPair(jule::Str("defer", 5),37LLU),_221db36ec_KindPair(jule::Str("static", 6),38LLU),_221db36ec_KindPair(jule::Str("error", 5),40LLU)});
static jule::Array<_221db36ec_KindPair,39> _221db36ec_BASIC_OPS = jule::Array<_221db36ec_KindPair,39>({_221db36ec_KindPair(jule::Str("::", 2),23LLU),_221db36ec_KindPair(jule::Str(":", 1),11LLU),_221db36ec_KindPair(jule::Str(";", 1),5LLU),_221db36ec_KindPair(jule::Str(",", 1),8LLU),_221db36ec_KindPair(jule::Str("...", 3),7LLU),_221db36ec_KindPair(jule::Str(".", 1),20LLU),_221db36ec_KindPair(jule::Str("+=", 2),7LLU),_221db36ec_KindPair(jule::Str("-=", 2),7LLU),_221db36ec_KindPair(jule::Str("*=", 2),7LLU),_221db36ec_KindPair(jule::Str("/=", 2),7LLU),_221db36ec_KindPair(jule::Str("%=", 2),7LLU),_221db36ec_KindPair(jule::Str("<<=", 3),7LLU),_221db36ec_KindPair(jule::Str(">>=", 3),7LLU),_221db36ec_KindPair(jule::Str("^=", 2),7LLU),_221db36ec_KindPair(jule::Str("&=", 2),7LLU),_221db36ec_KindPair(jule::Str("|=", 2),7LLU),_221db36ec_KindPair(jule::Str("==", 2),7LLU),_221db36ec_KindPair(jule::Str("!=", 2),7LLU),_221db36ec_KindPair(jule::Str(">=", 2),7LLU),_221db36ec_KindPair(jule::Str("<=", 2),7LLU),_221db36ec_KindPair(jule::Str("&&", 2),7LLU),_221db36ec_KindPair(jule::Str("||", 2),7LLU),_221db36ec_KindPair(jule::Str("<<", 2),7LLU),_221db36ec_KindPair(jule::Str(">>", 2),7LLU),_221db36ec_KindPair(jule::Str("++", 2),7LLU),_221db36ec_KindPair(jule::Str("--", 2),7LLU),_221db36ec_KindPair(jule::Str("+", 1),7LLU),_221db36ec_KindPair(jule::Str("-", 1),7LLU),_221db36ec_KindPair(jule::Str("*", 1),7LLU),_221db36ec_KindPair(jule::Str("/", 1),7LLU),_221db36ec_KindPair(jule::Str("%", 1),7LLU),_221db36ec_KindPair(jule::Str("&", 1),7LLU),_221db36ec_KindPair(jule::Str("|", 1),7LLU),_221db36ec_KindPair(jule::Str("^", 1),7LLU),_221db36ec_KindPair(jule::Str("!", 1),7LLU),_221db36ec_KindPair(jule::Str("<", 1),7LLU),_221db36ec_KindPair(jule::Str(">", 1),7LLU),_221db36ec_KindPair(jule::Str("=", 1),7LLU),_221db36ec_KindPair(jule::Str("#", 1),39LLU)});
static jule::Ptr<_222edb48e_FnIns> _206d53311_BUILTIN_FN_OUT = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns());
static jule::Ptr<_222edb48e_FnIns> _206d53311_BUILTIN_FN_OUTLN = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns());
static jule::Ptr<_222edb48e_FnIns> _206d53311_BUILTIN_FN_NEW = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns());
static jule::Ptr<_222edb48e_FnIns> _206d53311_BUILTIN_FN_PANIC = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns());
static jule::Ptr<_222edb48e_FnIns> _206d53311_BUILTIN_FN_MAKE = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns());
static jule::Ptr<_222edb48e_FnIns> _206d53311_BUILTIN_FN_APPEND = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns());
static jule::Ptr<_222edb48e_FnIns> _206d53311_BUILTIN_FN_CLONE = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns());
static jule::Ptr<_222edb48e_FnIns> _206d53311_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns());
static jule::Ptr<_222edb48e_FnIns> _206d53311_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns());
static jule::Ptr<_222edb48e_FnIns> _206d53311_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns());
static jule::Ptr<_222edb48e_FnIns> _206d53311_BUILTIN_FN_COPY = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>(),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ptr<_2300b54e5_TypeAlias> _206d53311_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_2300b54e5_TypeAlias>(new( std::nothrow ) _2300b54e5_TypeAlias(jule::Ptr<_221d8b043_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_2220dce43_Token(),jule::Str(),jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ptr<_2300b54e5_TypeAlias> _206d53311_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_2300b54e5_TypeAlias>(new( std::nothrow ) _2300b54e5_TypeAlias(jule::Ptr<_221d8b043_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_2220dce43_Token(),jule::Str(),jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ptr<_2300167cb_Trait> _206d53311_BUILTIN_TRAIT_DISPOSE = jule::new_struct_ptr<_2300167cb_Trait>(new( std::nothrow ) _2300167cb_Trait(_2220dce43_Token(),jule::Str("Dispose", 7),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_222edb48e_Fn>>({jule::new_struct_ptr<_222edb48e_Fn>(new( std::nothrow ) _222edb48e_Fn(jule::Ptr<_21eee051d_Sema>(),_2220dce43_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Str("dispose", 7),jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Str(),jule::Ptr<_221d8b043_ScopeTree>(),jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>(),jule::Ptr<_222edb48e_RetType>(),jule::Slice<jule::Ptr<_222edb48e_Param>>({jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ptr<_2398d04dc_Struct>(),jule::Slice<jule::Ptr<_222edb48e_FnIns>>()))}),jule::Slice<jule::Ptr<_2398d04dc_Struct>>()));
static jule::Slice<jule::Str> _221c201c4_FLAGS = nullptr;
static jule::Slice<jule::Any> _2388c0005_deads = nullptr;
static jule::Slice<jule::Any> _2388c0005_checking = nullptr;
static jule::Any _2388c0005_current = jule::Any(nullptr);
static jule::Any _2388c0005_main_current = jule::Any(nullptr);
static jule::Array<jule::Int,12> _1dce1143d_MDAYS = jule::Array<jule::Int,12>({31LL,30LL,31LL,30LL,31LL,31LL,30LL,31LL,30LL,31LL,31LL,29LL});
static jule::Slice<jule::U8> _207182002_INDENT = nullptr;
static jule::Str _2388bea1b_ARCH = jule::Str("arm64", 5);
static jule::Array<jule::Array<jule::Str,2>,4> _238839623_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});
static jule::Str _2388bea1b_OS = jule::Str("linux", 5);
static jule::Ptr<_222216247_RangeTable> _2221ebea8_LETTER = _2221ebea8__L;
static jule::Array<_2221ee98e_accept_range,16> _2221ee98e_ACCEPT_RANGES = jule::Array<_2221ee98e_accept_range,16>({_2221ee98e_accept_range(128LLU,191LLU),_2221ee98e_accept_range(160LLU,191LLU),_2221ee98e_accept_range(128LLU,159LLU),_2221ee98e_accept_range(144LLU,191LLU),_2221ee98e_accept_range(128LLU,143LLU)});
static jule::Array<jule::U8,256> _2221ee98e_FIRST = jule::Array<jule::U8,256>({});
static jule::Array<jule::U8,256> _2221ebea8__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});

inline void _238839ed6_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void _238839ed6_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_238839ed6_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _238839ed6_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void _238839ed6_Logger::_static_method_log_flat(_23886c227_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



inline void _238839ed6_Logger::_static_method_log_error(_23886c227_Log& _3426_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_3426_l._field_text);
	_238839ed6_AnsiEscape::_static_method_reset();
	if (_3426_l._field_path.len() != 0LL) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_3426_l._field_path);
	}
	if ((_3426_l._field_row != 0LL) && (_3426_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_2397e4467_itoa(_3426_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_2397e4467_itoa(_3426_l._field_column));
	}
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _5121_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _5221_offset = (_3426_l._field_line.len() - _5121_line.len()) + 1LL;
		jule::I64 _5321_old_len = _5121_line.len();
		_5121_line=_5121_line.ltrim(jule::Str("\t", 1));
		if (_5321_old_len != _5121_line.len()) {
			_5221_offset+=static_cast<jule::I64>((_5321_old_len - _5121_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _5917_row = _2397e4467_itoa(_3426_l._field_row);
		jule::out(_5917_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_5121_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_238839623_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_238839623_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _5221_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_238839623_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
			jule::out(jule::Str(" | ", 3));
			_238839ed6_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_3426_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void _238839ed6_Logger::_static_method_log(_23886c227_Log& _8020_l) {
	{
		auto &_match_expr{ _8020_l._field_kind };
		if (!(_match_expr == (0LLU))) { goto _case_end_4696171360; }
		_case_begin_4696171360:;
		{
			_238839ed6_Logger::_static_method_log_flat(_8020_l);
		}
		goto _match_end_4696171232;
		_case_end_4696171360:;
		if (!(_match_expr == (1LLU))) { goto _case_end_4696171456; }
		_case_begin_4696171456:;
		{
			_238839ed6_Logger::_static_method_log_error(_8020_l);
		}
		goto _match_end_4696171232;
		_case_end_4696171456:;
		_match_end_4696171232:;
	}
}



inline void _238839ed6_Logger::_static_method_print_logs(jule::Slice<_23886c227_Log>& _8827_logs) {
	{
		auto &expr = _8827_logs;
		auto it = expr.begin();
		_iter_begin_4696175440:;
		if (it != expr.end()) {
			_23886c227_Log &_238839ed6_l = *it;
			{
				_238839ed6_Logger::_static_method_log(_238839ed6_l);
			}
			_iter_next_4696175440:;
			++it;
			goto _iter_begin_4696175440;
		}
		_iter_end_4696175440:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_2397e4467_itoa(static_cast<jule::I64>(_8827_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _238839ed6_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _23894b9cc_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[_5324_i];
	}
	return (*this)._field_path[_5324_i];
}



inline void _23894b9cc_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[(*this)._field_w] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*this)._field_path.len()));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,(*this)._field_w)));
	}
	(*this)._field_buff[(*this)._field_w]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _23894b9cc_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len + (*this)._field_w);
	}
	return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,(*this)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, const _23894b9cc_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23886c227_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2389d34d1_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2389d34d1_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _239796a57_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _239796a57_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[_23017_i] == '+'))) { goto _case_end_4673333728; }
		_case_begin_4673333728:;
		{
			(_23017_i)++;
		}
		goto _match_end_4673333248;
		_case_end_4673333728:;
		if (!((_22922_s[_23017_i] == '-'))) { goto _case_end_4673333824; }
		_case_begin_4673333824:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_4673333248;
		_case_end_4673333824:;
		_match_end_4673333248:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	for (; _23017_i < _22922_s.len(); (_23017_i)++) {
		{
			{
				if (!((_22922_s[_23017_i] == '.'))) { goto _case_end_4673340064; }
				_case_begin_4673340064:;
				{
					if (_24717_sawdot) {
						return _22932_ok;
					}
					_24717_sawdot=true;
					(*this)._field_dp=(*this)._field_nd;
					goto _iter_next_4673337408;
				}
				goto _match_end_4673339840;
				_case_end_4673340064:;
				if (!((('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')))) { goto _case_end_4673340176; }
				_case_begin_4673340176:;
				{
					_24817_sawdigits=true;
					if ((_22922_s[_23017_i] == '0') && ((*this)._field_nd == 0LL)) {
						((*this)._field_dp)--;
						goto _iter_next_4673337408;
					}
					if ((*this)._field_nd < 800LL) {
						(*this)._field_d[(*this)._field_nd]=_22922_s[_23017_i];
						((*this)._field_nd)++;
					} else if (_22922_s[_23017_i] != '0') {
						(*this)._field_trunc=true;
					}
					goto _iter_next_4673337408;
				}
				goto _match_end_4673339840;
				_case_end_4673340176:;
				_match_end_4673339840:;
			}
			goto _iter_end_4673337408;
		}
	_iter_next_4673337408:;
	}
	_iter_end_4673337408:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_2388cbb6b_lower(_22922_s[_23017_i]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[_23017_i] == '+') {
			(_23017_i)++;
		} else if (_22922_s[_23017_i] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[_23017_i] < '0')) || (_22922_s[_23017_i] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		for (; (_23017_i < _22922_s.len()) && (('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')); (_23017_i)++) {
			{
				if (_30121_e < 10000LL) {
					_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[_23017_i])) - '0');
				}
			}
		_iter_next_4673356752:;
		}
		_iter_end_4673356752:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _239796a57_Decimal::_method_float_bits(_2389d34d1_FloatInfo& _31830_flt) {
	jule::U64 _31848_b = jule::U64();
	jule::Bool _31856_overflow = jule::Bool();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	while ((*this)._field_dp > 0LL) {
		{
			jule::Int _34521_n = 0LL;
			if ((*this)._field_dp >= _2398a6c55_POWTAB.len()) {
				_34521_n=27LL;
			} else {
				_34521_n=_2398a6c55_POWTAB[(*this)._field_dp];
			}
			(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
			_31917_exp+=_34521_n;
		}
	_iter_next_4673377936:;
	}
	_iter_end_4673377936:;
	while (((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d.__at(0LL) < '5'))) {
		{
			jule::Int _35521_n = 0LL;
			if ((-((*this)._field_dp)) >= _2398a6c55_POWTAB.len()) {
				_35521_n=27LL;
			} else {
				_35521_n=_2398a6c55_POWTAB[(-((*this)._field_dp))];
			}
			(*this)._method_shift(_35521_n);
			_31917_exp-=_35521_n;
		}
	_iter_next_4673379792:;
	}
	_iter_end_4673379792:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _239796a57_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>();
	jule::Int _15617_n = 0LL;
	while (_15229_v > 0LL) {
		{
			jule::U64 _15817_v1 = jule::unsafe_div(_15229_v,10LL);
			_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
			_15317_buf[_15617_n]=static_cast<jule::U8>(_15229_v + '0');
			(_15617_n)++;
			_15229_v=_15817_v1;
		}
	_iter_next_4673414224:;
	}
	_iter_end_4673414224:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	for (; _15617_n >= 0LL; (_15617_n)--) {
		{
			(*this)._field_d[(*this)._field_nd]=_15317_buf[_15617_n];
			((*this)._field_nd)++;
		}
	_iter_next_4673416960:;
	}
	_iter_end_4673416960:;
	(*this)._field_dp=(*this)._field_nd;
	_239796a57_trim((*this));
}



inline void _239796a57_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_4673423600; }
		goto _match_end_4673423360;
		_case_end_4673423600:;
		if (!((_17728_k > 0LL))) { goto _case_end_4673423712; }
		_case_begin_4673423712:;
		{
			while (_17728_k > 60LLU) {
				{
					_239796a57_left_shift((*this),60LLU);
					_17728_k-=60LLU;
				}
			_iter_next_4673424704:;
			}
			_iter_end_4673424704:;
			_239796a57_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_4673423360;
		_case_end_4673423712:;
		if (!((_17728_k < 0LL))) { goto _case_end_4673423824; }
		_case_begin_4673423824:;
		{
			while (_17728_k < -60LL) {
				{
					_239796a57_right_shift((*this),60LLU);
					_17728_k+=60LLU;
				}
			_iter_next_4673428048:;
			}
			_iter_end_4673428048:;
			_239796a57_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_4673423360;
		_case_end_4673423824:;
		_match_end_4673423360:;
	}
}



inline void _239796a57_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_239796a57_trim((*this));
}



inline void _239796a57_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	for (; _21217_i >= 0LL; (_21217_i)--) {
		{
			jule::U8 _21417_c = (*this)._field_d[_21217_i];
			if (_21417_c < '9') {
				((*this)._field_d[_21217_i])++;
				(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
				return;
			}
		}
	_iter_next_4673435552:;
	}
	_iter_end_4673435552:;
	(*this)._field_d.__at(0LL)='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _239796a57_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_239796a57_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _239796a57_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	for (; (_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd); (_25017_i)++) {
		{
			_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[_25017_i] - '0'));
		}
	_iter_next_4673446336:;
	}
	_iter_end_4673446336:;
	for (; _25017_i < (*this)._field_dp; (_25017_i)++) {
		{
			_25117_n*=10LL;
		}
	_iter_next_4673451520:;
	}
	_iter_end_4673451520:;
	if (_239796a57_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _239796a57_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _222216247_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _222216247_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _222216247_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _222216247_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _222216247_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2221ee98e_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _222bb918e_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Slice<jule::Ptr<_222bb918e_DirEntry>>,jule::Int> _222bb918e_Directory::_static_method_read(jule::Str _1624_path) {
	jule::Slice<jule::Ptr<_222bb918e_DirEntry>> _1637_dirents = jule::Slice<jule::Ptr<_222bb918e_DirEntry>>();
	jule::Int _1659_err = 0LLU;
	DIR* _1717_dir = _2389b68c1_opendir((&(_1624_path[0LL])));
	if (_1717_dir == nullptr) {
		_1659_err=_22221b6e2_get_last_fs_error();
		return std::make_tuple(_1637_dirents,_1659_err);
	}
	for (;;) {
		{
			struct dirent* _2317_dirent = _2389b68c1_readdir(_1717_dir);
			if (_2317_dirent == nullptr) {
				goto _iter_end_5638168192;
			}
			jule::Str _2717_name = _238a38e4e_byte_ptr_to_str(((jule::U8*)(_2317_dirent->d_name)));
			jule::Ptr<_222bc7e6c_Status> _2822_stat;
			jule::Int _2828_serr;
			std::tie(_2822_stat,_2828_serr) = _222bc7e6c_Status::_static_method_of(_23894b9cc_join(jule::Slice<jule::Str>({_1624_path,_2717_name})));
			if (_2828_serr != 0LLU) {
				_1659_err=_2828_serr;
				_1637_dirents=nullptr;
				goto _iter_end_5638168192;
			}
			_1637_dirents.push(jule::new_struct<_222bb918e_DirEntry>(new( std::nothrow ) _222bb918e_DirEntry(_2717_name,_2822_stat)));
		}
	_iter_next_5638168192:;
	}
	_iter_end_5638168192:;
	_2389b68c1_closedir(_1717_dir);
	return std::make_tuple(_1637_dirents,_1659_err);
}



inline jule::Int _222bb918e_Directory::_static_method_create(jule::Str _4626_path) {
	if (_2389b68c1_mkdir((&(_4626_path[0LL])),448LL) == 0LL) {
		return 0LLU;
	}
	return _22221b6e2_get_last_fs_error();
}



inline jule::Int _222bb918e_Directory::_static_method_remove(jule::Str _5926_path) {
	if (_2389b68c1_rmdir((&(_5926_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _22221b6e2_get_last_fs_error();
}







std::ostream &operator<<(std::ostream &_Stream, const _222bb918e_Directory &_Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_222bcb8bb_File>,jule::Int> _222bcb8bb_File::_static_method_open(jule::Str _1924_path,jule::Int _1935_flag,jule::Int _1948_mode) {
	jule::Int _2013_handle = _2389b68c1_open((&(_1924_path[0LL])),static_cast<jule::Int>(_1935_flag),_1948_mode);
	if (_2013_handle == -1LL) {
		return std::make_tuple(_222bcb8bb_File::_static_method_new(0LLU),_22221b6e2_get_last_fs_error());
	}
	return std::make_tuple(_222bcb8bb_File::_static_method_new(static_cast<jule::Uintptr>(_2013_handle)),0LLU);
}



inline jule::Int _222bcb8bb_File::_static_method_remove(jule::Str _3126_path) {
	if (_2389b68c1_unlink((&(_3126_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _22221b6e2_get_last_fs_error();
}



inline std::tuple<jule::Int,jule::Int> _222bcb8bb_File::_method_write(jule::Slice<jule::U8> _4728_buff) {
	jule::Int _4744_n = jule::Int();
	if (_4728_buff.len() == 0LL) {
		_4744_n = 0LL;
		return std::make_tuple(_4744_n,0LLU);
	}
	_4744_n=static_cast<jule::Int>(static_cast<jule::Int>(_2389cd8e9_write(static_cast<jule::Int>((*this)._field_handle),(&(_4728_buff[0LL])),static_cast<jule::Uint>(_4728_buff.len()))));
	if (_4744_n == -1LL) {
		_4744_n = 0LL;
		return std::make_tuple(_4744_n,_22221b6e2_get_last_fs_error());
	}
	return std::make_tuple(_4744_n,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _222bcb8bb_File::_method_read(jule::Slice<jule::U8> _6931_buff) {
	jule::Int _6947_n = jule::Int();
	if (_6931_buff.len() == 0LL) {
		_6947_n = 0LL;
		return std::make_tuple(_6947_n,0LLU);
	}
	_6947_n=static_cast<jule::Int>(static_cast<jule::Int>(_2389cd8e9_read(static_cast<jule::Int>((*this)._field_handle),(&(_6931_buff[0LL])),static_cast<jule::Uint>(_6931_buff.len()))));
	if (_6947_n == -1LL) {
		_6947_n=0LL;
		return std::make_tuple(_6947_n,_22221b6e2_get_last_fs_error());
	}
	return std::make_tuple(_6947_n,0LLU);
}



inline jule::Ptr<_222bcb8bb_File> _222bcb8bb_File::_static_method_new(jule::Uintptr _4523_handle) {
	return jule::new_struct<_222bcb8bb_File>(new( std::nothrow ) _222bcb8bb_File(_4523_handle));
}



inline std::tuple<jule::Ptr<_222bcb8bb_File>,jule::Int> _222bcb8bb_File::_static_method_create(jule::Str _5526_path) {
	jule::Ptr<_222bcb8bb_File> _5618_f;
	jule::Int _5621_err;
	std::tie(_5618_f,_5621_err) = _222bcb8bb_File::_static_method_open(_5526_path,578LL,438LL);
	return std::make_tuple(_5618_f,_5621_err);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Int> _222bcb8bb_File::_static_method_read(jule::Str _6824_path) {
	jule::Ptr<_222bc7e6c_Status> _6914_s;
	jule::Int _6921_err;
	std::tie(_6914_s,_6921_err) = _222bc7e6c_Status::_static_method_of(_6824_path);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	if ((!(_6914_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_6914_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(0LL),0LLU);
	}
	jule::Ptr<_222bcb8bb_File> _8218_f;
	std::tie(_8218_f,_6921_err) = _222bcb8bb_File::_static_method_open(_6824_path,0LL,0LL);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	__JULE_DEFER({
		_8218_f->_method_close();
	});
	jule::Slice<jule::U8> _8817_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_6914_s->_field_size));
	jule::Int _8914_n;
	std::tie(_8914_n,_6921_err) = _8218_f->_method_read(_8817_buff);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	return std::make_tuple(_8817_buff.slice(0LL,_8914_n),0LLU);
}



inline jule::Int _222bcb8bb_File::_static_method_write(jule::Str _10125_path,jule::Slice<jule::U8> _10136_data,jule::Int _10150_perm) {
	jule::Ptr<_222bcb8bb_File> _10218_f;
	jule::Int _10225_err;
	std::tie(_10218_f,_10225_err) = _222bcb8bb_File::_static_method_open(_10125_path,577LL,_10150_perm);
	if (_10225_err != 0LLU) {
		return _10225_err;
	}
	std::tie(std::ignore,_10225_err) = _10218_f->_method_write(_10136_data);
	if (_10225_err != 0LLU) {
		return _10225_err;
	}
	return _10218_f->_method_close();
}



inline std::tuple<jule::I64,jule::Int> _222bcb8bb_File::_method_seek(jule::I64 _12227_offset,jule::Int _12240_origin) {
	jule::I64 _12313_pos = _2389cd8e9_seek(static_cast<jule::Int>((*this)._field_handle),_12227_offset,static_cast<jule::Int>(_12240_origin));
	return std::make_tuple(_12313_pos,0LLU);
}



inline jule::Int _222bcb8bb_File::_method_close(void) {
	if (_2389cd8e9_close(static_cast<jule::Int>((*this)._field_handle)) == -1LL) {
		return _22221b6e2_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _222bcb8bb_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_222bc7e6c_Status>,jule::Int> _222bc7e6c_Status::_static_method_of(jule::Str _1222_path) {
	jule::Ptr<_222bc7e6c_Status> _1235_s = jule::Ptr<_222bc7e6c_Status>();
	jule::Int _1247_err = 0LLU;
	struct stat _1317_handle = (struct stat){};
	jule::Int _1413_code = _2389b68c1_stat((&(_1222_path[0LL])),(&(_1317_handle)));
	if (_1413_code != -1LL) {
		_1247_err=0LLU;
		_1235_s=jule::new_struct<_222bc7e6c_Status>(new( std::nothrow ) _222bc7e6c_Status(static_cast<jule::Uint>(_1317_handle.st_mode),static_cast<jule::Uint>(_1317_handle.st_size)));
	} else {
		_1247_err=_22221b6e2_get_last_fs_error();
	}
	return std::make_tuple(_1235_s,_1247_err);
}



inline jule::Bool _222bc7e6c_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _222bc7e6c_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _222bc7e6c_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _2220dce43_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr == (jule::Str("*", 1)) || _match_expr == (jule::Str("%", 1)) || _match_expr == (jule::Str("/", 1)) || _match_expr == (jule::Str(">>", 2)) || _match_expr == (jule::Str("<<", 2)) || _match_expr == (jule::Str("&", 1)))) { goto _case_end_4681045408; }
		_case_begin_4681045408:;
		{
			return 5LL;
		}
		goto _match_end_4681043824;
		_case_end_4681045408:;
		if (!(_match_expr == (jule::Str("+", 1)) || _match_expr == (jule::Str("-", 1)) || _match_expr == (jule::Str("|", 1)) || _match_expr == (jule::Str("^", 1)))) { goto _case_end_4681045504; }
		_case_begin_4681045504:;
		{
			return 4LL;
		}
		goto _match_end_4681043824;
		_case_end_4681045504:;
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)) || _match_expr == (jule::Str("=", 1)) || _match_expr == (jule::Str("<", 1)) || _match_expr == (jule::Str("<=", 2)) || _match_expr == (jule::Str(">", 1)) || _match_expr == (jule::Str(">=", 2)))) { goto _case_end_4681045760; }
		_case_begin_4681045760:;
		{
			return 3LL;
		}
		goto _match_end_4681043824;
		_case_end_4681045760:;
		if (!(_match_expr == (jule::Str("&&", 2)))) { goto _case_end_4681045856; }
		_case_begin_4681045856:;
		{
			return 2LL;
		}
		goto _match_end_4681043824;
		_case_end_4681045856:;
		if (!(_match_expr == (jule::Str("||", 2)))) { goto _case_end_4681045952; }
		_case_begin_4681045952:;
		{
			return 1LL;
		}
		goto _match_end_4681043824;
		_case_end_4681045952:;
		_case_begin_4681044080:;
		{
			return -1LL;
		}
		goto _match_end_4681043824;
		_case_end_4681044080:;
		_match_end_4681043824:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _2220dce43_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22212e407_File::_method_is_ok(void) {
	jule::Int _1917_err;
	std::tie(std::ignore,_1917_err) = _222bc7e6c_Status::_static_method_of((*this)._field__path);
	return _1917_err == 0LLU;
}



inline void _22212e407_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



inline jule::Str _22212e407_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _22212e407_File::_method_dir(void) {
	return _23894b9cc_dir((*this)._field__path);
}



inline jule::Str _22212e407_File::_method_name(void) {
	return _23894b9cc_base((*this)._field__path);
}



inline jule::Uintptr _22212e407_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline jule::Slice<_2220dce43_Token> _22212e407_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



inline jule::Str _22212e407_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	for (; _4717_i < (*this)._field_data.len(); (_4717_i)++) {
		{
			if ((*this)._field_data[_4717_i] != '\n') {
				goto _iter_next_4681071216;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*this)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
		}
	_iter_next_4681071216:;
	}
	_iter_end_4681071216:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, const _22212e407_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221db36ec_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _221db36ec_Lex::_method_push_err(jule::Str _40427_fmt,jule::Slice<jule::Any> _40440_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_221db36ec_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40427_fmt,_40440_args));
}



inline void _221db36ec_Lex::_method_push_err_tok(_2220dce43_Token& _40932_token,jule::Str _40946_fmt) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_221db36ec_make_err(_40932_token._field_row,_40932_token._field_column,(*this)._field_file,_40946_fmt,jule::Slice<jule::Any>()));
}



inline void _221db36ec_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			_2220dce43_Token _41921_token = (*this)._method_token();
			if (_41921_token._field_id != 0LLU) {
				(*this)._field_tokens = jule::alloc_for_append((*this)._field_tokens,1);(*this)._field_tokens.push(_41921_token);
			}
		}
	_iter_next_4681085904:;
	}
	_iter_end_4681085904:;
}



inline jule::Str _221db36ec_Lex::_method_id(jule::Slice<jule::U8>& _42822_ln) {
	if (_42822_ln.len() == 0LL) {
		return jule::Str();
	}
	jule::I32 _43214_r;
	jule::Int _43221_i;
	std::tie(_43214_r,_43221_i) = _2221ee98e_decode_rune(_42822_ln);
	if ((_43214_r != '_') && (!(_2220dce43_is_letter(_43214_r)))) {
		return jule::Str();
	}
	while (_43221_i < _42822_ln.len()) {
		{
			jule::I32 _43818_r;
			jule::Int _43821_n;
			std::tie(_43818_r,_43821_n) = _2221ee98e_decode_rune(_42822_ln.slice(_43221_i));
			if (((_43818_r != '_') && (!(_2220dce43_is_decimal(static_cast<jule::U8>(_43818_r))))) && (!(_2220dce43_is_letter(_43818_r)))) {
				(*this)._field_pos+=_43221_i;
				return static_cast<jule::Str>(_42822_ln.slice(0LL,_43221_i));
			}
			_43221_i+=_43821_n;
		}
	_iter_next_4681097968:;
	}
	_iter_end_4681097968:;
	(*this)._field_pos+=static_cast<jule::I64>(_42822_ln.len());
	return static_cast<jule::Str>(_42822_ln);
}



inline jule::Slice<jule::U8> _221db36ec_Lex::_method_resume(void) {
	jule::Int _45317_i = (*this)._field_pos;
	for (; _45317_i < (*this)._field_file->_field_data.len(); (_45317_i)++) {
		{
			jule::I32 _45517_r = static_cast<jule::I32>((*this)._field_file->_field_data[_45317_i]);
			if (_2220dce43_is_space(_45517_r)) {
				((*this)._field_pos)++;
				{
					auto &_match_expr{ _45517_r };
					if (!(_match_expr == ('\n'))) { goto _case_end_4681111968; }
					_case_begin_4681111968:;
					{
						(*this)._method_new_line();
					}
					goto _match_end_4681111872;
					_case_end_4681111968:;
					if (!(_match_expr == ('\t'))) { goto _case_end_4681113456; }
					_case_begin_4681113456:;
					{
						(*this)._field_column+=8LL;
					}
					goto _match_end_4681111872;
					_case_end_4681113456:;
					_case_begin_4681111184:;
					{
						((*this)._field_column)++;
					}
					goto _match_end_4681111872;
					_case_end_4681111184:;
					_match_end_4681111872:;
				}
				goto _iter_next_4681107072;
			}
			jule::Int _46621_j = _45317_i;
			for (; _46621_j < (*this)._field_file->_field_data.len(); (_46621_j)++) {
				{
					if ((*this)._field_file->_field_data[_46621_j] == '\n') {
						goto _iter_end_4681110352;
					}
				}
			_iter_next_4681110352:;
			}
			_iter_end_4681110352:;
			return (*this)._field_file->_field_data.slice(_45317_i,_46621_j);
		}
	_iter_next_4681107072:;
	}
	_iter_end_4681107072:;
	return nullptr;
}



inline void _221db36ec_Lex::_method_lex_line_comment(_2220dce43_Token& _47840_token) {
	jule::Int _47913_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _48317_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if ((_48317_r == '\n') || (_48317_r == '\r')) {
				if ((*this)._method_is_first_token_of_line()) {
					_47840_token._field_id=18LLU;
					_47840_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47913_start,(*this)._field_pos));
				}
				return;
			}
		}
	_iter_next_4681122336:;
	}
	_iter_end_4681122336:;
	if ((*this)._method_is_first_token_of_line()) {
		_47840_token._field_id=18LLU;
		_47840_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47913_start));
	}
}



inline void _221db36ec_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _50217_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_50217_r == '\r') {
				goto _iter_next_4681133440;
			}
			if (_50217_r == '\n') {
				(*this)._method_new_line();
				goto _iter_next_4681133440;
			}
			(*this)._field_column+=1LL;
			if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_50217_r == '*')) && ((*this)._field_file->_field_data[(*this)._field_pos + 1LL] == '/')) {
				(*this)._field_column+=2LL;
				(*this)._field_pos+=2LL;
				return;
			}
		}
	_iter_next_4681133440:;
	}
	_iter_end_4681133440:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _221db36ec_Lex::_method_num(jule::Slice<jule::U8>& _52323_txt) {
	jule::Str _52338_lit = jule::Str();
	_52338_lit=_221db36ec_hex_num(_52323_txt);
	if (_52338_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52338_lit=_221db36ec_octal_num(_52323_txt);
	if (_52338_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52338_lit=_221db36ec_binary_num(_52323_txt);
	if (_52338_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52338_lit=_221db36ec_common_num(_52323_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52338_lit.len());
	return _52338_lit;
}



inline jule::Str _221db36ec_Lex::_method_escape_seq(jule::Slice<jule::U8>& _54230_txt) {
	jule::Str _54317_seq = jule::Str();
	if (_54230_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _54230_txt[1LL] };
		if (!(_match_expr == ('\\') || _match_expr == ('\'') || _match_expr == ('\"') || _match_expr == ('a') || _match_expr == ('b') || _match_expr == ('f') || _match_expr == ('n') || _match_expr == ('r') || _match_expr == ('t') || _match_expr == ('v'))) { goto _case_end_4681161744; }
		_case_begin_4681161744:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_54230_txt.slice(0LL,2LL));
		}
		goto _match_end_4681160896;
		_case_end_4681161744:;
		if (!(_match_expr == ('U'))) { goto _case_end_4681161952; }
		_case_begin_4681161952:;
		{
			_54317_seq=_221db36ec_big_unicode_point_escape(_54230_txt);
		}
		goto _match_end_4681160896;
		_case_end_4681161952:;
		if (!(_match_expr == ('u'))) { goto _case_end_4681162048; }
		_case_begin_4681162048:;
		{
			_54317_seq=_221db36ec_little_unicode_point_escape(_54230_txt);
		}
		goto _match_end_4681160896;
		_case_end_4681162048:;
		if (!(_match_expr == ('x'))) { goto _case_end_4681162880; }
		_case_begin_4681162880:;
		{
			_54317_seq=_221db36ec_hex_byte_escape(_54230_txt);
		}
		goto _match_end_4681160896;
		_case_end_4681162880:;
		_case_begin_4681159600:;
		{
			_54317_seq=_221db36ec_byte_escape(_54230_txt);
		}
		goto _match_end_4681160896;
		_case_end_4681159600:;
		_match_end_4681160896:;
	}
	_julec_label_end:;
	if (_54317_seq == jule::Str()) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54317_seq.len());
	return _54317_seq;
}



inline jule::Str _221db36ec_Lex::_method_get_rune(jule::Slice<jule::U8>& _57628_txt,jule::Bool _57641_raw) {
	if ((!(_57641_raw)) && (_57628_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57628_txt);
	}
	jule::I32 _58114_r;
	jule::Int _58117_n;
	std::tie(_58114_r,_58117_n) = _2221ee98e_decode_rune(_57628_txt);
	(*this)._field_pos+=_58117_n;
	return static_cast<jule::Str>(_58114_r);
}



inline jule::Str _221db36ec_Lex::_method_lex_rune(jule::Slice<jule::U8>& _58628_txt) {
	jule::Str _58717_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58917_n = 0LL;
	jule::Int _59017_i = 1LL;
	for (; _59017_i < _58628_txt.len(); (_59017_i)++) {
		{
			if (_58628_txt[_59017_i] == '\r') {
				goto _iter_next_4681184304;
			}
			if (_58628_txt[_59017_i] == '\n') {
				(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*this)._field_pos)++;
				(*this)._method_new_line();
				return jule::Str();
			}
			jule::Slice<jule::U8> _60217_part = _58628_txt.slice(_59017_i);
			jule::Str _60317_r = (*this)._method_get_rune(_60217_part,false);
			_58717_run+=_60317_r;
			jule::I64 _60517_length = _60317_r.len();
			(*this)._field_column+=_60517_length;
			if (_60317_r == jule::Str("'", 1)) {
				((*this)._field_pos)++;
				goto _iter_end_4681184304;
			}
			if (_60517_length > 1LL) {
				_59017_i+=static_cast<jule::I64>(_60517_length - 1LL);
			}
			(_58917_n)++;
		}
	_iter_next_4681184304:;
	}
	_iter_end_4681184304:;
	if (_58917_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if (_58917_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	}
	return _58717_run;
}



inline jule::Str _221db36ec_Lex::_method_lex_str(void) {
	jule::Str _62717_s = jule::Str();
	jule::U8 _62813_mark = (*this)._field_file->_field_data[(*this)._field_pos];
	((*this)._field_pos)++;
	jule::Bool _63013_raw = _62813_mark == '`';
	_62717_s+=static_cast<jule::Str>(_62813_mark);
	((*this)._field_column)++;
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			jule::U8 _63517_ch = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_63517_ch == '\r') {
				goto _iter_next_4681205184;
			}
			if (_63517_ch == '\n') {
				(*this)._method_new_line();
				if ((!(_63013_raw))) {
					(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*this)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _64721_part = (*this)._field_file->_field_data.slice((*this)._field_pos);
			jule::Str _64817_r = (*this)._method_get_rune(_64721_part,_63013_raw);
			_62717_s+=_64817_r;
			(*this)._field_column+=static_cast<jule::I64>(_64817_r.len());
			if (_63517_ch == _62813_mark) {
				goto _iter_end_4681205184;
			}
		}
	_iter_next_4681205184:;
	}
	_iter_end_4681205184:;
	return _62717_s;
}



inline jule::Bool _221db36ec_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



inline void _221db36ec_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _221db36ec_Lex::_method_is_op(jule::Slice<jule::U8>& _66825_txt,jule::Str _66838_kind,jule::Uint _66849_id,_2220dce43_Token& _66867_t) {
	if ((!(_221db36ec_bytes_has_prefix(_66825_txt,_66838_kind)))) {
		return false;
	}
	_66867_t._field_kind=_66838_kind;
	_66867_t._field_id=_66849_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66838_kind.len());
	return true;
}



inline jule::Bool _221db36ec_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67932_txt,_2220dce43_Token& _67950_tok) {
	{
		auto &expr = _221db36ec_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_4681231040:;
		if (it != expr.end()) {
			_221db36ec_KindPair &_221db36ec_pair = *it;
			{
				if ((*this)._method_is_op(_67932_txt,_221db36ec_pair._field_kind,_221db36ec_pair._field_id,_67950_tok)) {
					return true;
				}
			}
			_iter_next_4681231040:;
			++it;
			goto _iter_begin_4681231040;
		}
		_iter_end_4681231040:;
	}
	return false;
}



inline jule::Bool _221db36ec_Lex::_method_lex_id(jule::Slice<jule::U8>& _68926_txt,_2220dce43_Token& _68944_t) {
	jule::Str _69013_lex = (*this)._method_id(_68926_txt);
	if (_69013_lex == jule::Str()) {
		return false;
	}
	_68944_t._field_kind=_69013_lex;
	_68944_t._field_id=2LLU;
	return true;
}



inline jule::Bool _221db36ec_Lex::_method_lex_num(jule::Slice<jule::U8>& _70027_txt,_2220dce43_Token& _70045_t) {
	jule::Str _70113_lex = (*this)._method_num(_70027_txt);
	if (_70113_lex == jule::Str()) {
		return false;
	}
	_70045_t._field_kind=_70113_lex;
	_70045_t._field_id=6LLU;
	return true;
}



inline _2220dce43_Token _221db36ec_Lex::_method_token(void) {
	_2220dce43_Token _71317_t = _2220dce43_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71513_txt = (*this)._method_resume();
	if (_71513_txt == nullptr) {
		return _71317_t;
	}
	_71317_t._field_column=(*this)._field_column;
	_71317_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_71513_txt,_71317_t)))) { goto _case_end_4681255440; }
		goto _match_end_4681249328;
		_case_end_4681255440:;
		if (!((_71513_txt[0LL] == '\''))) { goto _case_end_4681252032; }
		_case_begin_4681252032:;
		{
			_71317_t._field_kind=(*this)._method_lex_rune(_71513_txt);
			_71317_t._field_id=6LLU;
			return _71317_t;
		}
		goto _match_end_4681249328;
		_case_end_4681252032:;
		if (!(((_71513_txt[0LL] == '\"') || (_71513_txt[0LL] == '`')))) { goto _case_end_4681253696; }
		_case_begin_4681253696:;
		{
			_71317_t._field_kind=(*this)._method_lex_str();
			_71317_t._field_id=6LLU;
			return _71317_t;
		}
		goto _match_end_4681249328;
		_case_end_4681253696:;
		if (!((_221db36ec_bytes_has_prefix(_71513_txt,jule::Str("//", 2))))) { goto _case_end_4681251584; }
		_case_begin_4681251584:;
		{
			(*this)._method_lex_line_comment(_71317_t);
			return _71317_t;
		}
		goto _match_end_4681249328;
		_case_end_4681251584:;
		if (!((_221db36ec_bytes_has_prefix(_71513_txt,jule::Str("/*", 2))))) { goto _case_end_4681251680; }
		_case_begin_4681251680:;
		{
			(*this)._method_lex_range_comment();
			return _71317_t;
		}
		goto _match_end_4681249328;
		_case_end_4681251680:;
		if (!(((*this)._method_is_op(_71513_txt,jule::Str("(", 1),3LLU,_71317_t)) || ((*this)._method_is_op(_71513_txt,jule::Str(")", 1),3LLU,_71317_t)) || ((*this)._method_is_op(_71513_txt,jule::Str("{", 1),3LLU,_71317_t)) || ((*this)._method_is_op(_71513_txt,jule::Str("}", 1),3LLU,_71317_t)) || ((*this)._method_is_op(_71513_txt,jule::Str("[", 1),3LLU,_71317_t)) || ((*this)._method_is_op(_71513_txt,jule::Str("]", 1),3LLU,_71317_t)) || ((*this)._method_lex_basic_ops(_71513_txt,_71317_t)))) { goto _case_end_4681251776; }
		goto _match_end_4681249328;
		_case_end_4681251776:;
		if (!(((*this)._method_lex_id(_71513_txt,_71317_t)))) { goto _case_end_4681251872; }
		_case_begin_4681251872:;
		{
			{
				auto &expr = _221db36ec_KEYWORDS;
				auto it = expr.begin();
				_iter_begin_4681273664:;
				if (it != expr.end()) {
					_221db36ec_KindPair &_221db36ec_pair = *it;
					{
						if (_221db36ec_pair._field_kind == _71317_t._field_kind) {
							_71317_t._field_id=_221db36ec_pair._field_id;
							goto _iter_end_4681273664;
						}
					}
					_iter_next_4681273664:;
					++it;
					goto _iter_begin_4681273664;
				}
				_iter_end_4681273664:;
			}
		}
		goto _match_end_4681249328;
		_case_end_4681251872:;
		_case_begin_4681251088:;
		{
			jule::I32 _76518_r;
			jule::Int _76521_sz;
			std::tie(_76518_r,_76521_sz) = _2221ee98e_decode_rune(_71513_txt);
			(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_76518_r)}));
			((*this)._field_column)++;
			(*this)._field_pos+=_76521_sz;
			return _71317_t;
		}
		goto _match_end_4681249328;
		_case_end_4681251088:;
		_match_end_4681249328:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_71317_t._field_kind.len());
	return _71317_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _221db36ec_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8c242_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_SptrTypeDecl &_Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_PtrTypeDecl::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_ArrTypeDecl::_method_auto_sized(void) {
	return (*this)._field_size == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221e0ec98_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221e0ec98_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221e8c8b4_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _221e8c8b4_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _221e8c8b4_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _221e8c8b4_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stmts.len();
}



inline jule::Bool _221e8c8b4_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stmts.len();
}



inline void _221e8c8b4_ScopeParser::_method_push_err(_2220dce43_Token _17827_token,jule::Str _17841_fmt) {
	(*this)._field_p->_method_push_err(_17827_token,_17841_fmt,jule::Slice<jule::Any>());
}



inline void _221e8c8b4_ScopeParser::_method_push_suggestion(jule::Str _18134_fmt,jule::Slice<jule::Any> _18147_args) {
	(*this)._field_p->_method_push_suggestion(_18134_fmt,_18147_args);
}



inline void _221e8c8b4_ScopeParser::_method_insert_as_next(jule::Slice<_2220dce43_Token>& _18538_tokens) {
	(*this)._field_stmts=jule::append((*this)._field_stmts.slice(0LL,(*this)._field_pos + 1LL),(*this)._field_stmts.slice((*this)._field_pos));
	(*this)._field_stmts[(*this)._field_pos + 1LL]=jule::new_struct<_221e8c8b4_Stmt>(new( std::nothrow ) _221e8c8b4_Stmt(_18538_tokens,jule::Bool()));
}



inline jule::Ptr<_221e8c8b4_Stmt> _221e8c8b4_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stmts[(*this)._field_pos];
}



inline jule::Ptr<_221d8b043_ScopeTree> _221e8c8b4_ScopeParser::_method_build_scope(jule::Slice<_2220dce43_Token>& _19535_tokens) {
	jule::Ptr<_221d8b043_ScopeTree> _19617_s = _221e8c8b4_new_scope();
	_19617_s->_field_parent=(*this)._field_s;
	_221e8c8b4_ScopeParser _19817_ssp = _221e8c8b4_ScopeParser((*this)._field_p,jule::Ptr<_221d8b043_ScopeTree>(),jule::Slice<jule::Ptr<_221e8c8b4_Stmt>>(),jule::Int());
	_19817_ssp._method_build(_19535_tokens,_19617_s);
	return _19617_s;
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_var_st(jule::Slice<_2220dce43_Token>& _20536_tokens) {
	jule::Ptr<_221d8b043_VarDecl> _20617_v = (*this)._field_p->_method_build_var(_20536_tokens);
	_20617_v->_field_scope=(*this)._field_s;
	return jule::Any(_20617_v);
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_ret_st(jule::Slice<_2220dce43_Token> _21135_tokens) {
	jule::Ptr<_221d8b043_RetSt> _21217_st = jule::new_struct<_221d8b043_RetSt>(new( std::nothrow ) _221d8b043_RetSt(_21135_tokens[0LL],jule::Ptr<_221d8b043_Expr>()));
	if (_21135_tokens.len() > 1LL) {
		_21135_tokens=_21135_tokens.slice(1LL);
		_21217_st->_field_expr=(*this)._field_p->_method_build_expr(_21135_tokens);
	}
	return jule::Any(_21217_st);
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_while_next_iter(jule::Ptr<_221e8c8b4_Stmt>& _22245_s) {
	jule::Ptr<_221d8b043_Iter> _22317_it = jule::new_struct<_221d8b043_Iter>(new( std::nothrow ) _221d8b043_Iter(_22245_s->_field_tokens[0LL],jule::Any(),jule::Ptr<_221d8b043_ScopeTree>()));
	jule::Slice<_2220dce43_Token> _22617_tokens = _22245_s->_field_tokens.slice(1LL);
	jule::Ptr<_221d8b043_WhileKind> _22717_kind = jule::new_struct<_221d8b043_WhileKind>(new( std::nothrow ) _221d8b043_WhileKind());
	if (_22617_tokens.len() > 0LL) {
		_22717_kind->_field_expr=(*this)._field_p->_method_build_expr(_22617_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_22317_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_22617_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_2220dce43_Token> _23917_st_tokens = _23999731d_get_block_expr(_22617_tokens);
	if (_23917_st_tokens.len() > 0LL) {
		jule::Ptr<_221e8c8b4_Stmt> _24121_stmt = jule::new_struct<_221e8c8b4_Stmt>(new( std::nothrow ) _221e8c8b4_Stmt(_23917_st_tokens,_22245_s->_field_terminated));
		_22717_kind->_field_next_token=_23917_st_tokens[0LL];
		_22717_kind->_field_next=(*this)._method_build_st(_24121_stmt);
	}
	jule::I64 _24917_i = _23917_st_tokens.len();
	jule::Slice<_2220dce43_Token> _25017_block_tokens = _222e5128e_range(_24917_i,jule::Str("{", 1),jule::Str("}", 1),_22617_tokens);
	if (_25017_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_22317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_24917_i < _22617_tokens.len()) {
		(*this)._method_push_err(_22617_tokens[_24917_i],jule::Str("invalid syntax", 14));
	}
	_22317_it->_field_scope=(*this)._method_build_scope(_25017_block_tokens);
	_22317_it->_field_kind=jule::Any(_22717_kind);
	return jule::Any(_22317_it);
}



inline jule::Ptr<_221d8b043_WhileKind> _221e8c8b4_ScopeParser::_method_build_while_iter_kind(jule::Slice<_2220dce43_Token>& _26745_tokens) {
	return jule::new_struct<_221d8b043_WhileKind>(new( std::nothrow ) _221d8b043_WhileKind((*this)._field_p->_method_build_expr(_26745_tokens),jule::Any(),_2220dce43_Token()));
}



inline jule::Slice<jule::Slice<_2220dce43_Token>> _221e8c8b4_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_2220dce43_Token>& _27350_toks) {
	jule::Slice<jule::Slice<_2220dce43_Token>> _27418_vars;
	jule::Slice<_23886c227_Log> _27424_errs;
	std::tie(_27418_vars,_27424_errs) = _222e5128e_parts(_27350_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_27424_errs);
	return _27418_vars;
}



inline jule::Ptr<_221d8b043_VarDecl> _221e8c8b4_ScopeParser::_method_build_range_kind_key(jule::Slice<_2220dce43_Token>& _27944_tokens) {
	if (_27944_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_221d8b043_VarDecl> _28317_key = jule::new_struct<_221d8b043_VarDecl>(new( std::nothrow ) _221d8b043_VarDecl(jule::Ptr<_221d8b043_ScopeTree>(),_27944_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Ptr<_221d8b043_CommentGroup>(),jule::Ptr<_221d8b043_TypeDecl>(),jule::Ptr<_221d8b043_Expr>()));
	if (_28317_key->_field_token._field_id == 36LLU) {
		_28317_key->_field_mutable=true;
		if (_27944_tokens.len() == 1LL) {
			(*this)._method_push_err(_28317_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_28317_key->_field_token=_27944_tokens[1LL];
	} else if (_27944_tokens.len() > 1LL) {
		(*this)._method_push_err(_27944_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_28317_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_28317_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_28317_key->_field_ident=_28317_key->_field_token._field_kind;
	return _28317_key;
}



inline jule::Slice<jule::Ptr<_221d8b043_VarDecl>> _221e8c8b4_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_2220dce43_Token>>& _30445_parts) {
	jule::Slice<jule::Ptr<_221d8b043_VarDecl>> _30517_keys = nullptr;
	{
		auto &expr = _30445_parts;
		auto it = expr.begin();
		_iter_begin_4682017152:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _221e8c8b4_tokens = *it;
			{
				_30517_keys.push((*this)._method_build_range_kind_key(_221e8c8b4_tokens));
			}
			_iter_next_4682017152:;
			++it;
			goto _iter_begin_4682017152;
		}
		_iter_end_4682017152:;
	}
	return _30517_keys;
}



inline void _221e8c8b4_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ptr<_221d8b043_RangeKind>& _31251_rng,jule::Slice<_2220dce43_Token>& _31273_tokens) {
	jule::Slice<jule::Slice<_2220dce43_Token>> _31317_key_tokens = (*this)._method_get_range_kind_keys_tokens(_31273_tokens);
	if (_31317_key_tokens.len() == 0LL) {
		return;
	}
	if (_31317_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_31251_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ptr<_221d8b043_VarDecl>> _32017_keys = (*this)._method_build_range_kind_keys(_31317_key_tokens);
	_31251_rng->_field_key_a=_32017_keys[0LL];
	if (_32017_keys.len() > 1LL) {
		_31251_rng->_field_key_b=_32017_keys[1LL];
	}
}



inline void _221e8c8b4_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ptr<_221d8b043_RangeKind>& _32754_rng,jule::Slice<_2220dce43_Token>& _32776_tokens) {
	jule::Int _32817_i = 0LL;
	jule::Slice<_2220dce43_Token> _32917_rang = _222e5128e_range(_32817_i,jule::Str("(", 1),jule::Str(")", 1),_32776_tokens);
	if (_32817_i < _32776_tokens.len()) {
		(*this)._method_push_err(_32754_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_32754_rng,_32917_rang);
}



inline void _221e8c8b4_ScopeParser::_method_setup_range_kind_keys(jule::Ptr<_221d8b043_RangeKind>& _33645_rng,jule::Slice<_2220dce43_Token>& _33667_tokens) {
	if (_33667_tokens[0LL]._field_id == 3LLU) {
		if (_33667_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_33667_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_33645_rng,_33667_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_33645_rng,_33667_tokens);
}



inline jule::Ptr<_221d8b043_RangeKind> _221e8c8b4_ScopeParser::_method_build_range_iter_kind(jule::Slice<_2220dce43_Token>& _34845_var_tokens,jule::Slice<_2220dce43_Token>& _34914_expr_tokens,_2220dce43_Token& _34941_in_token) {
	jule::Ptr<_221d8b043_RangeKind> _35017_rng = jule::new_struct<_221d8b043_RangeKind>(new( std::nothrow ) _221d8b043_RangeKind(_34941_in_token,jule::Ptr<_221d8b043_Expr>(),jule::Ptr<_221d8b043_VarDecl>(),jule::Ptr<_221d8b043_VarDecl>()));
	if (_34914_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_35017_rng->_field_in_token,jule::Str("expression missing", 18));
		return _35017_rng;
	}
	_35017_rng->_field_expr=(*this)._field_p->_method_build_expr(_34914_expr_tokens);
	if (_34845_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_35017_rng,_34845_var_tokens);
	}
	return _35017_rng;
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_common_iter_kind(jule::Slice<_2220dce43_Token>& _36446_tokens,_2220dce43_Token& _36464_err_tok) {
	jule::Int _36517_brace_n = 0LL;
	{
		auto &expr = _36446_tokens;
		auto it = expr.begin();
		_iter_begin_4682060768:;
		if (it != expr.end()) {
			jule::Int _221e8c8b4_i = it - expr.begin();
			_2220dce43_Token _221e8c8b4_tok = *it;
			{
				if (_221e8c8b4_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _221e8c8b4_tok._field_kind };
						if (!(_match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4682065616; }
						_case_begin_4682065616:;
						{
							(_36517_brace_n)++;
							goto _iter_next_4682060768;
						}
						goto _match_end_4682064240;
						_case_end_4682065616:;
						_case_begin_4682063552:;
						{
							(_36517_brace_n)--;
						}
						goto _match_end_4682064240;
						_case_end_4682063552:;
						_match_end_4682064240:;
					}
				}
				if (_36517_brace_n != 0LL) {
					goto _iter_next_4682060768;
				}
				{
					auto &_match_expr{ _221e8c8b4_tok._field_id };
					if (!(_match_expr == (15LLU))) { goto _case_end_4682066448; }
					_case_begin_4682066448:;
					{
						jule::Slice<_2220dce43_Token> _38425_decl_tokens = _36446_tokens.slice(0LL,_221e8c8b4_i);
						jule::Slice<_2220dce43_Token> _38525_expr_tokens = _36446_tokens.slice(_221e8c8b4_i + 1LL);
						return jule::Any((*this)._method_build_range_iter_kind(_38425_decl_tokens,_38525_expr_tokens,_221e8c8b4_tok));
					}
					goto _match_end_4682062976;
					_case_end_4682066448:;
					_match_end_4682062976:;
				}
			}
			_iter_next_4682060768:;
			++it;
			_221e8c8b4_i++;
			goto _iter_begin_4682060768;
		}
		_iter_end_4682060768:;
	}
	return jule::Any((*this)._method_build_while_iter_kind(_36446_tokens));
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_common_iter(jule::Slice<_2220dce43_Token> _39240_tokens) {
	jule::Ptr<_221d8b043_Iter> _39317_it = jule::new_struct<_221d8b043_Iter>(new( std::nothrow ) _221d8b043_Iter(_39240_tokens[0LL],jule::Any(),jule::Ptr<_221d8b043_ScopeTree>()));
	_39240_tokens=_39240_tokens.slice(1LL);
	if (_39240_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_39317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	jule::Slice<_2220dce43_Token> _40317_expr_tokens = _23999731d_get_block_expr(_39240_tokens);
	if (_40317_expr_tokens.len() > 0LL) {
		_39317_it->_field_kind=(*this)._method_build_common_iter_kind(_40317_expr_tokens,_39317_it->_field_token);
	}
	jule::I64 _40717_i = _40317_expr_tokens.len();
	jule::Slice<_2220dce43_Token> _40817_scope_tokens = _222e5128e_range(_40717_i,jule::Str("{", 1),jule::Str("}", 1),_39240_tokens);
	if (_40817_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_39317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_40717_i < _39240_tokens.len()) {
		(*this)._method_push_err(_39240_tokens[_40717_i],jule::Str("invalid syntax", 14));
	}
	_39317_it->_field_scope=(*this)._method_build_scope(_40817_scope_tokens);
	return jule::Any(_39317_it);
}



inline jule::Any _221e8c8b4_ScopeParser::_method_buid_iter_st(jule::Ptr<_221e8c8b4_Stmt>& _42236_st) {
	if (_42236_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_42236_st);
	}
	return (*this)._method_build_common_iter(_42236_st->_field_tokens);
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_break_st(jule::Slice<_2220dce43_Token>& _42938_tokens) {
	jule::Ptr<_221d8b043_BreakSt> _43017_brk = jule::new_struct<_221d8b043_BreakSt>(new( std::nothrow ) _221d8b043_BreakSt(_42938_tokens[0LL],_2220dce43_Token()));
	if (_42938_tokens.len() > 1LL) {
		if (_42938_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42938_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_43017_brk->_field_label=_42938_tokens[1LL];
			if (_42938_tokens.len() > 2LL) {
				(*this)._method_push_err(_42938_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_43017_brk);
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_cont_st(jule::Slice<_2220dce43_Token>& _44737_tokens) {
	jule::Ptr<_221d8b043_ContSt> _44817_cont = jule::new_struct<_221d8b043_ContSt>(new( std::nothrow ) _221d8b043_ContSt(_44737_tokens[0LL],_2220dce43_Token()));
	if (_44737_tokens.len() > 1LL) {
		if (_44737_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_44737_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44817_cont->_field_label=_44737_tokens[1LL];
			if (_44737_tokens.len() > 2LL) {
				(*this)._method_push_err(_44737_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44817_cont);
}



inline jule::Ptr<_221d8b043_If> _221e8c8b4_ScopeParser::_method_build_if(jule::Slice<_2220dce43_Token>& _46532_tokens) {
	jule::Ptr<_221d8b043_If> _46617_model = jule::new_struct<_221d8b043_If>(new( std::nothrow ) _221d8b043_If(_46532_tokens[0LL],jule::Ptr<_221d8b043_Expr>(),jule::Ptr<_221d8b043_ScopeTree>()));
	_46532_tokens=_46532_tokens.slice(1LL);
	jule::Slice<_2220dce43_Token> _47017_expr_tokens = _23999731d_get_block_expr(_46532_tokens);
	jule::Int _47117_i = 0LL;
	if (_47017_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_46617_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_47117_i=static_cast<jule::I64>(_47017_expr_tokens.len());
	}
	jule::Slice<_2220dce43_Token> _47717_scope_tokens = _222e5128e_range(_47117_i,jule::Str("{", 1),jule::Str("}", 1),_46532_tokens);
	if (_47717_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_46617_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_47117_i < _46532_tokens.len()) {
		if (_46532_tokens[_47117_i]._field_id == 17LLU) {
			_46532_tokens=_46532_tokens.slice(_47117_i);
		} else {
			(*this)._method_push_err(_46532_tokens[_47117_i],jule::Str("invalid syntax", 14));
			_46532_tokens=nullptr;
		}
	}
	_46617_model->_field_expr=(*this)._field_p->_method_build_expr(_47017_expr_tokens);
	_46617_model->_field_scope=(*this)._method_build_scope(_47717_scope_tokens);
	return _46617_model;
}



inline jule::Ptr<_221d8b043_Else> _221e8c8b4_ScopeParser::_method_build_else(jule::Slice<_2220dce43_Token>& _49734_tokens) {
	jule::Ptr<_221d8b043_Else> _49817_els = jule::new_struct<_221d8b043_Else>(new( std::nothrow ) _221d8b043_Else(_49734_tokens[0LL],jule::Ptr<_221d8b043_ScopeTree>()));
	_49734_tokens=_49734_tokens.slice(1LL);
	jule::Int _50217_i = 0LL;
	jule::Slice<_2220dce43_Token> _50317_scope_tokens = _222e5128e_range(_50217_i,jule::Str("{", 1),jule::Str("}", 1),_49734_tokens);
	if (_50317_scope_tokens == nullptr) {
		if (_50217_i < _49734_tokens.len()) {
			(*this)._method_push_err(_49817_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_49817_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	if (_50217_i < _49734_tokens.len()) {
		(*this)._method_push_err(_49734_tokens[_50217_i],jule::Str("invalid syntax", 14));
	}
	_49817_els->_field_scope=(*this)._method_build_scope(_50317_scope_tokens);
	return _49817_els;
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_if_else_chain(jule::Slice<_2220dce43_Token> _52142_tokens) {
	jule::Ptr<_221d8b043_Conditional> _52217_chain = jule::new_struct<_221d8b043_Conditional>(new( std::nothrow ) _221d8b043_Conditional((*this)._method_build_if(_52142_tokens),jule::Slice<jule::Ptr<_221d8b043_If>>(),jule::Ptr<_221d8b043_Else>()));
	if (_52217_chain->_field_head == nullptr) {
		return jule::Any(nullptr);
	}
	while (_52142_tokens.len() != 0LL) {
		{
			if (_52142_tokens[0LL]._field_id != 17LLU) {
				goto _iter_end_4682158304;
			}
			if ((_52142_tokens.len() > 1LL) && (_52142_tokens[1LL]._field_id == 16LLU)) {
				_52142_tokens=_52142_tokens.slice(1LL);
				jule::Ptr<_221d8b043_If> _53425_elif = (*this)._method_build_if(_52142_tokens);
				_52217_chain->_field_tail = jule::alloc_for_append(_52217_chain->_field_tail,1);_52217_chain->_field_tail.push(_53425_elif);
				goto _iter_next_4682158304;
			}
			_52217_chain->_field_default=(*this)._method_build_else(_52142_tokens);
			goto _iter_end_4682158304;
		}
	_iter_next_4682158304:;
	}
	_iter_end_4682158304:;
	return jule::Any(_52217_chain);
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_comment_st(_2220dce43_Token& _54436_token) {
	return jule::Any(_222e5128e_build_comment(_54436_token));
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_co_call_st(jule::Slice<_2220dce43_Token> _54839_tokens) {
	jule::Ptr<_221d8b043_CoExpr> _54917_c = jule::new_struct<_221d8b043_CoExpr>(new( std::nothrow ) _221d8b043_CoExpr(_54839_tokens[0LL],jule::Ptr<_221d8b043_Expr>()));
	_54839_tokens=_54839_tokens.slice(1LL);
	_54917_c->_field_expr=(*this)._field_p->_method_build_expr(_54839_tokens);
	return jule::Any(_54917_c);
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_goto_st(jule::Slice<_2220dce43_Token>& _55737_tokens) {
	jule::Ptr<_221d8b043_GotoSt> _55817_gt = jule::new_struct<_221d8b043_GotoSt>(new( std::nothrow ) _221d8b043_GotoSt(_55737_tokens[0LL],_2220dce43_Token()));
	if (_55737_tokens.len() == 1LL) {
		(*this)._method_push_err(_55817_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_55737_tokens.len() > 2LL) {
		(*this)._method_push_err(_55737_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_2220dce43_Token _56717_ident_token = _55737_tokens[1LL];
	if (_56717_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_56717_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_55817_gt);
	}
	_55817_gt->_field_label=_56717_ident_token;
	return jule::Any(_55817_gt);
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_fall_st(jule::Slice<_2220dce43_Token>& _57737_tokens) {
	jule::Ptr<_221d8b043_FallSt> _57817_fll = jule::new_struct<_221d8b043_FallSt>(new( std::nothrow ) _221d8b043_FallSt(_57737_tokens[0LL]));
	if (_57737_tokens.len() > 1LL) {
		(*this)._method_push_err(_57737_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_57817_fll);
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_type_alias_st(jule::Slice<_2220dce43_Token>& _58743_tokens) {
	jule::Ptr<_221d8b043_TypeAliasDecl> _58817_tad = (*this)._field_p->_method_build_type_alias_decl(_58743_tokens);
	_58817_tad->_field_scope=(*this)._field_s;
	return jule::Any(_58817_tad);
}



inline void _221e8c8b4_ScopeParser::_method_push_case_expr(jule::Slice<_2220dce43_Token> _59337_tokens,_2220dce43_Token _59358_token,jule::Bool _5949_type_match,jule::Slice<jule::Ptr<_221d8b043_Expr>>& _59432_exprs) {
	if (_59337_tokens.len() == 0LL) {
		return;
	}
	if (_5949_type_match) {
		jule::Int _60021_i = 0LL;
		jule::Ptr<_221d8b043_TypeDecl> _60122_t;
		jule::Bool _60125_ok;
		std::tie(_60122_t,_60125_ok) = (*this)._field_p->_method_build_type(_59337_tokens,(&(_60021_i)),true);
		if (_60125_ok) {
			_59432_exprs.push(jule::new_struct<_221d8b043_Expr>(new( std::nothrow ) _221d8b043_Expr(_59358_token,jule::Any(_60122_t))));
		}
		if (_60021_i < _59337_tokens.len()) {
			(*this)._method_push_err(_59337_tokens[_60021_i],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_59432_exprs.push((*this)._field_p->_method_build_expr(_59337_tokens));
}



inline jule::Slice<jule::Ptr<_221d8b043_Expr>> _221e8c8b4_ScopeParser::_method_build_case_exprs(jule::Slice<_2220dce43_Token>& _61640_tokens,jule::Bool _61657_type_match) {
	jule::Slice<jule::Ptr<_221d8b043_Expr>> _61717_exprs = jule::Slice<jule::Ptr<_221d8b043_Expr>>::alloc(0LL,1LL);
	jule::Int _61917_brace_n = 0LL;
	jule::Int _62017_j = 0LL;
	{
		auto &expr = _61640_tokens;
		auto it = expr.begin();
		_iter_begin_4682221984:;
		if (it != expr.end()) {
			jule::Int _221e8c8b4_i = it - expr.begin();
			_2220dce43_Token _221e8c8b4_tok = *it;
			{
				if (_221e8c8b4_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _221e8c8b4_tok._field_kind };
						if (!(_match_expr == (jule::Str("(", 1)) || _match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)))) { goto _case_end_4682226880; }
						_case_begin_4682226880:;
						{
							(_61917_brace_n)++;
						}
						goto _match_end_4682225504;
						_case_end_4682226880:;
						_case_begin_4682224816:;
						{
							(_61917_brace_n)--;
						}
						goto _match_end_4682225504;
						_case_end_4682224816:;
						_match_end_4682225504:;
					}
					goto _iter_next_4682221984;
				} else if (_61917_brace_n != 0LL) {
					goto _iter_next_4682221984;
				}
				{
					if (!(((_221e8c8b4_tok._field_id == 7LLU) && (_221e8c8b4_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_4682227840; }
					_case_begin_4682227840:;
					{
						jule::Slice<_2220dce43_Token> _63821_expr_tokens = _61640_tokens.slice(_62017_j,_221e8c8b4_i);
						if (_63821_expr_tokens.len() == 0LL) {
							(*this)._method_push_err(_221e8c8b4_tok,jule::Str("expression missing", 18));
						} else {
							(*this)._method_push_case_expr(_61640_tokens.slice(_62017_j,_221e8c8b4_i),_221e8c8b4_tok,_61657_type_match,_61717_exprs);
						}
						_62017_j=static_cast<jule::Int>(_221e8c8b4_i + 1LL);
					}
					goto _match_end_4682224560;
					_case_end_4682227840:;
					if (!((_221e8c8b4_tok._field_id == 11LLU))) { goto _case_end_4682224096; }
					_case_begin_4682224096:;
					{
						(*this)._method_push_case_expr(_61640_tokens.slice(_62017_j,_221e8c8b4_i),_221e8c8b4_tok,_61657_type_match,_61717_exprs);
						_61640_tokens=_61640_tokens.slice(_221e8c8b4_i + 1LL);
						return _61717_exprs;
					}
					goto _match_end_4682224560;
					_case_end_4682224096:;
					_match_end_4682224560:;
				}
			}
			_iter_next_4682221984:;
			++it;
			_221e8c8b4_i++;
			goto _iter_begin_4682221984;
		}
		_iter_end_4682221984:;
	}
	(*this)._method_push_err(_61640_tokens[0LL],jule::Str("invalid syntax", 14));
	_61640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_221d8b043_ScopeTree> _221e8c8b4_ScopeParser::_method_build_case_scope(jule::Slice<_2220dce43_Token>& _65740_tokens) {
	jule::Int _65817_n = 0LL;
	for (;;) {
		{
			jule::Int _66021_i = 0LL;
			jule::Slice<_2220dce43_Token> _66122_next;
			std::tie(_66122_next,std::ignore) = _221e8c8b4_skip_st(_66021_i,_65740_tokens.slice(_65817_n));
			if (_66122_next.len() == 0LL) {
				goto _iter_end_4682241136;
			}
			_2220dce43_Token _66517_tok = _66122_next[0LL];
			if ((_66517_tok._field_id != 7LLU) || (_66517_tok._field_kind != jule::Str("|", 1))) {
				_65817_n+=_66021_i;
				goto _iter_next_4682241136;
			}
			jule::Slice<_2220dce43_Token> _67021_scope_tokens = _65740_tokens.slice(0LL,_65817_n);
			jule::Ptr<_221d8b043_ScopeTree> _67121_scope = (*this)._method_build_scope(_67021_scope_tokens);
			_65740_tokens=_65740_tokens.slice(_65817_n);
			return _67121_scope;
		}
	_iter_next_4682241136:;
	}
	_iter_end_4682241136:;
	jule::Ptr<_221d8b043_ScopeTree> _67517_scope = (*this)._method_build_scope(_65740_tokens);
	_65740_tokens=nullptr;
	return _67517_scope;
}



inline std::tuple<jule::Ptr<_221d8b043_Case>,jule::Bool> _221e8c8b4_ScopeParser::_method_build_case(jule::Slice<_2220dce43_Token>& _68034_tokens,jule::Bool _68051_type_match) {
	jule::Ptr<_221d8b043_Case> _68117_c = jule::new_struct<_221d8b043_Case>(new( std::nothrow ) _221d8b043_Case(_68034_tokens[0LL],jule::Ptr<_221d8b043_ScopeTree>(),jule::Slice<jule::Ptr<_221d8b043_Expr>>()));
	_68034_tokens=_68034_tokens.slice(1LL);
	_68117_c->_field_exprs=(*this)._method_build_case_exprs(_68034_tokens,_68051_type_match);
	_68117_c->_field_scope=(*this)._method_build_case_scope(_68034_tokens);
	jule::Bool _68713_is_default = _68117_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_68117_c,_68713_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_221d8b043_Case>>,jule::Ptr<_221d8b043_Else>> _221e8c8b4_ScopeParser::_method_build_cases(jule::Slice<_2220dce43_Token> _69134_tokens,jule::Bool _69151_type_match) {
	jule::Slice<jule::Ptr<_221d8b043_Case>> _69217_cases = nullptr;
	jule::Ptr<_221d8b043_Else> _69317_def = nullptr;
	jule::Bool _69417_def_not_last = false;
	while (_69134_tokens.len() > 0LL) {
		{
			_2220dce43_Token _69621_tok = _69134_tokens[0LL];
			if (_69621_tok._field_id == 18LLU) {
				_69134_tokens=_69134_tokens.slice(1LL);
				goto _iter_next_4682265712;
			}
			if ((_69621_tok._field_id != 7LLU) || (_69621_tok._field_kind != jule::Str("|", 1))) {
				(*this)._method_push_err(_69621_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_4682265712;
			}
			jule::Ptr<_221d8b043_Case> _70722_c;
			jule::Bool _70725_is_default;
			std::tie(_70722_c,_70725_is_default) = (*this)._method_build_case(_69134_tokens,_69151_type_match);
			if (_70725_is_default) {
				_70722_c->_field_token=_69621_tok;
				if (_69317_def == nullptr) {
					_69317_def=jule::new_struct<_221d8b043_Else>(new( std::nothrow ) _221d8b043_Else(_70722_c->_field_token,_70722_c->_field_scope));
				} else {
					(*this)._method_push_err(_69621_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_69417_def_not_last=_69417_def_not_last || (_69317_def != nullptr);
				_69217_cases.push(_70722_c);
			}
		}
	_iter_next_4682265712:;
	}
	_iter_end_4682265712:;
	if (_69417_def_not_last) {
		(*this)._method_push_err(_69317_def->_field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_69217_cases,_69317_def);
}



inline jule::Ptr<_221d8b043_MatchCase> _221e8c8b4_ScopeParser::_method_build_match_case(jule::Slice<_2220dce43_Token> _73139_tokens) {
	jule::Ptr<_221d8b043_MatchCase> _73217_m = jule::new_struct<_221d8b043_MatchCase>(new( std::nothrow ) _221d8b043_MatchCase(_73139_tokens[0LL],jule::Bool(),jule::Ptr<_221d8b043_Expr>(),jule::Slice<jule::Ptr<_221d8b043_Case>>(),jule::Ptr<_221d8b043_Else>()));
	_73139_tokens=_73139_tokens.slice(1LL);
	if ((_73139_tokens.len() > 0LL) && (_73139_tokens[0LL]._field_id == 10LLU)) {
		_73217_m->_field_type_match=true;
		_73139_tokens=_73139_tokens.slice(1LL);
	}
	jule::Slice<_2220dce43_Token> _74217_expr_tokens = _23999731d_get_block_expr(_73139_tokens);
	if (_74217_expr_tokens.len() > 0LL) {
		_73217_m->_field_expr=(*this)._field_p->_method_build_expr(_74217_expr_tokens);
	} else if (_73217_m->_field_type_match) {
		(*this)._method_push_err(_73217_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _74917_i = _74217_expr_tokens.len();
	jule::Slice<_2220dce43_Token> _75017_block_toks = _222e5128e_range(_74917_i,jule::Str("{", 1),jule::Str("}", 1),_73139_tokens);
	if (_75017_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_73217_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie(_73217_m->_field_cases,_73217_m->_field_default) = (*this)._method_build_cases(_75017_block_toks,_73217_m->_field_type_match);
	return _73217_m;
}



inline jule::Ptr<_221d8b043_ScopeTree> _221e8c8b4_ScopeParser::_method_build_scope_st(jule::Slice<_2220dce43_Token> _76237_tokens) {
	jule::Bool _76317_is_unsafe = false;
	jule::Bool _76417_is_deferred = false;
	_2220dce43_Token _76517_token = _76237_tokens[0LL];
	if (_76517_token._field_id == 35LLU) {
		_76317_is_unsafe=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if (_76237_tokens.len() == 0LL) {
			(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		_76517_token=_76237_tokens[0LL];
		if (_76517_token._field_id == 37LLU) {
			_76417_is_deferred=true;
			_76237_tokens=_76237_tokens.slice(1LL);
			if (_76237_tokens.len() == 0LL) {
				(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
	} else if (_76517_token._field_id == 37LLU) {
		_76417_is_deferred=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if (_76237_tokens.len() == 0LL) {
			(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
	}
	jule::Int _79117_i = 0LL;
	jule::Slice<_2220dce43_Token> _79217_scope_tokens = _222e5128e_range(_79117_i,jule::Str("{", 1),jule::Str("}", 1),_76237_tokens);
	if (_79217_scope_tokens == nullptr) {
		(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if (_79117_i < _76237_tokens.len()) {
		(*this)._method_push_err(_76237_tokens[_79117_i],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_221d8b043_ScopeTree> _79917_scope = (*this)._method_build_scope(_79217_scope_tokens);
	_79917_scope->_field_unsafety=_76317_is_unsafe;
	_79917_scope->_field_deferred=_76417_is_deferred;
	return _79917_scope;
}



inline jule::Ptr<_221d8b043_LabelSt> _221e8c8b4_ScopeParser::_method_build_label_st(jule::Slice<_2220dce43_Token>& _80538_tokens) {
	jule::Ptr<_221d8b043_LabelSt> _80617_lbl = jule::new_struct<_221d8b043_LabelSt>(new( std::nothrow ) _221d8b043_LabelSt(_80538_tokens[0LL],_80538_tokens[0LL]._field_kind));
	if (_80538_tokens.len() > 2LL) {
		_80538_tokens=_80538_tokens.slice(2LL);
		(*this)._method_insert_as_next(_80538_tokens);
	}
	return _80617_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _221e8c8b4_ScopeParser::_method_build_id_st(jule::Slice<_2220dce43_Token>& _82035_tokens) {
	jule::Bool _82064_ok = jule::Bool();
	if (_82035_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_82064_ok);
	}
	_2220dce43_Token _82517_token = _82035_tokens[1LL];
	{
		auto &_match_expr{ _82517_token._field_id };
		if (!(_match_expr == (11LLU))) { goto _case_end_4682332224; }
		_case_begin_4682332224:;
		{
			_82064_ok = true;
			return std::make_tuple(jule::Any((*this)._method_build_label_st(_82035_tokens)),_82064_ok);
		}
		goto _match_end_4682335168;
		_case_end_4682332224:;
		_match_end_4682335168:;
	}
	return std::make_tuple(jule::Any(),_82064_ok);
}



inline jule::Ptr<_222d4854e_AssignInfo> _221e8c8b4_ScopeParser::_method_build_assign_info(jule::Slice<_2220dce43_Token>& _83441_tokens) {
	jule::Ptr<_222d4854e_AssignInfo> _83517_info = jule::new_struct<_222d4854e_AssignInfo>(new( std::nothrow ) _222d4854e_AssignInfo(jule::Slice<_2220dce43_Token>(),jule::Slice<_2220dce43_Token>(),_2220dce43_Token(),true));
	jule::Int _83817_brace_n = 0LL;
	{
		auto &expr = _83441_tokens;
		auto it = expr.begin();
		_iter_begin_4682342800:;
		if (it != expr.end()) {
			jule::Int _221e8c8b4_i = it - expr.begin();
			_2220dce43_Token _221e8c8b4_token = *it;
			{
				if (_221e8c8b4_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _221e8c8b4_token._field_kind };
						if (!(_match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4682347584; }
						_case_begin_4682347584:;
						{
							(_83817_brace_n)++;
						}
						goto _match_end_4682346208;
						_case_end_4682347584:;
						_case_begin_4682345520:;
						{
							(_83817_brace_n)--;
						}
						goto _match_end_4682346208;
						_case_end_4682345520:;
						_match_end_4682346208:;
					}
				}
				{
					if (!((_83817_brace_n > 0LL))) { goto _case_end_4682348496; }
					_case_begin_4682348496:;
					{
						goto _iter_next_4682342800;
					}
					goto _match_end_4682349152;
					_case_end_4682348496:;
					if (!((_221e8c8b4_token._field_id != 7LLU))) { goto _case_end_4682348608; }
					_case_begin_4682348608:;
					{
						goto _iter_next_4682342800;
					}
					goto _match_end_4682349152;
					_case_end_4682348608:;
					if (!(((!(_2220dce43_is_assign_op(_221e8c8b4_token._field_kind)))))) { goto _case_end_4682348720; }
					_case_begin_4682348720:;
					{
						goto _iter_next_4682342800;
					}
					goto _match_end_4682349152;
					_case_end_4682348720:;
					_match_end_4682349152:;
				}
				_83517_info->_field_l=_83441_tokens.slice(0LL,_221e8c8b4_i);
				if (_83517_info->_field_l.len() == 0LL) {
					_83517_info->_field_ok=false;
				}
				_83517_info->_field_setter=_221e8c8b4_token;
				if ((_221e8c8b4_i + 1LL) >= _83441_tokens.len()) {
					_83517_info->_field_r=nullptr;
					_83517_info->_field_ok=_2220dce43_is_postfix_op(_83517_info->_field_setter._field_kind);
					goto _iter_end_4682342800;
				}
				_83517_info->_field_r=_83441_tokens.slice(_221e8c8b4_i + 1LL);
				if (_2220dce43_is_postfix_op(_83517_info->_field_setter._field_kind)) {
					if (_83517_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_83517_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_83517_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4682342800;
			}
			_iter_next_4682342800:;
			++it;
			_221e8c8b4_i++;
			goto _iter_begin_4682342800;
		}
		_iter_end_4682342800:;
	}
	return _83517_info;
}



inline jule::Ptr<_221d8b043_AssignLeft> _221e8c8b4_ScopeParser::_method_build_assign_l(jule::Slice<_2220dce43_Token>& _88138_tokens) {
	jule::Ptr<_221d8b043_AssignLeft> _88217_l = jule::new_struct<_221d8b043_AssignLeft>(new( std::nothrow ) _221d8b043_AssignLeft(_88138_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_221d8b043_Expr>()));
	if (_88138_tokens[0LL]._field_id == 2LLU) {
		_88217_l->_field_ident=_88217_l->_field_token._field_kind;
	}
	_88217_l->_field_expr=(*this)._field_p->_method_build_expr(_88138_tokens);
	return _88217_l;
}



inline jule::Slice<jule::Ptr<_221d8b043_AssignLeft>> _221e8c8b4_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_2220dce43_Token>>& _89439_parts) {
	jule::Slice<jule::Ptr<_221d8b043_AssignLeft>> _89517_lefts = nullptr;
	{
		auto &expr = _89439_parts;
		auto it = expr.begin();
		_iter_begin_4682371296:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _221e8c8b4_part = *it;
			{
				jule::Ptr<_221d8b043_AssignLeft> _89721_l = (*this)._method_build_assign_l(_221e8c8b4_part);
				_89517_lefts.push(_89721_l);
			}
			_iter_next_4682371296:;
			++it;
			goto _iter_begin_4682371296;
		}
		_iter_end_4682371296:;
	}
	return _89517_lefts;
}



inline std::tuple<jule::Ptr<_221d8b043_AssignSt>,jule::Bool> _221e8c8b4_ScopeParser::_method_build_plain_assign(jule::Slice<_2220dce43_Token>& _90442_tokens) {
	jule::Ptr<_222d4854e_AssignInfo> _90517_info = (*this)._method_build_assign_info(_90442_tokens);
	if ((!(_90517_info->_field_ok))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_221d8b043_AssignSt> _91017_assign = jule::new_struct<_221d8b043_AssignSt>(new( std::nothrow ) _221d8b043_AssignSt(jule::Bool(),_90517_info->_field_setter,jule::Slice<jule::Ptr<_221d8b043_AssignLeft>>(),jule::Ptr<_221d8b043_Expr>()));
	jule::Slice<jule::Slice<_2220dce43_Token>> _91418_parts;
	jule::Slice<_23886c227_Log> _91425_errs;
	std::tie(_91418_parts,_91425_errs) = _222e5128e_parts(_90517_info->_field_l,8LLU,true);
	if (_91425_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_91425_errs);
		return std::make_tuple(nullptr,false);
	}
	_91017_assign->_field_left=(*this)._method_build_assign_ls(_91418_parts);
	if (_90517_info->_field_r != nullptr) {
		_91017_assign->_field_right=(*this)._field_p->_method_build_expr(_90517_info->_field_r);
	}
	return std::make_tuple(_91017_assign,true);
}



inline std::tuple<jule::Ptr<_221d8b043_AssignSt>,jule::Bool> _221e8c8b4_ScopeParser::_method_build_decl_assign(jule::Slice<_2220dce43_Token> _92840_tokens) {
	if (_92840_tokens.len() < 1LL) {
		return std::make_tuple(nullptr,false);
	}
	_92840_tokens=_92840_tokens.slice(1LL);
	_2220dce43_Token _93417_token = _92840_tokens[0LL];
	if ((_93417_token._field_id != 3LLU) || (_93417_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_221d8b043_AssignSt> _93917_assign = jule::new_struct<_221d8b043_AssignSt>(new( std::nothrow ) _221d8b043_AssignSt(true,_2220dce43_Token(),jule::Slice<jule::Ptr<_221d8b043_AssignLeft>>(),jule::Ptr<_221d8b043_Expr>()));
	jule::Int _94317_i = 0LL;
	jule::Slice<_2220dce43_Token> _94417_rang = _222e5128e_range(_94317_i,jule::Str("(", 1),jule::Str(")", 1),_92840_tokens);
	if (_94417_rang == nullptr) {
		(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if ((_94317_i + 1LL) < _92840_tokens.len()) {
		_93917_assign->_field_setter=_92840_tokens[_94317_i];
		(_94317_i)++;
		jule::Slice<_2220dce43_Token> _95121_expr_tokens = _92840_tokens.slice(_94317_i);
		_93917_assign->_field_right=(*this)._field_p->_method_build_expr(_95121_expr_tokens);
	}
	jule::Slice<jule::Slice<_2220dce43_Token>> _95618_parts;
	jule::Slice<_23886c227_Log> _95625_errs;
	std::tie(_95618_parts,_95625_errs) = _222e5128e_parts(_94417_rang,8LLU,true);
	if (_95625_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_95625_errs);
		return std::make_tuple(nullptr,false);
	}
	{
		auto &expr = _95618_parts;
		auto it = expr.begin();
		_iter_begin_4682408544:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _221e8c8b4_part = *it;
			{
				jule::Bool _96321_is_mut = false;
				jule::Bool _96421_is_ref = false;
				_93417_token=_221e8c8b4_part[0LL];
				if (_93417_token._field_id == 36LLU) {
					_96321_is_mut=true;
					_221e8c8b4_part=_221e8c8b4_part.slice(1LL);
					if (_221e8c8b4_part.len() == 0LL) {
						(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4682408544;
					}
				}
				if ((_221e8c8b4_part[0LL]._field_id == 7LLU) && (_221e8c8b4_part[0LL]._field_kind == jule::Str("&", 1))) {
					_96421_is_ref=true;
					_221e8c8b4_part=_221e8c8b4_part.slice(1LL);
					if (_221e8c8b4_part.len() == 0LL) {
						(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4682408544;
					}
				}
				if (((_221e8c8b4_part[0LL]._field_id != 2LLU) && (_221e8c8b4_part[0LL]._field_id != 3LLU)) && (_221e8c8b4_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
					goto _iter_next_4682408544;
				}
				jule::Ptr<_221d8b043_AssignLeft> _99221_l = (*this)._method_build_assign_l(_221e8c8b4_part);
				_99221_l->_field_mutable=_96321_is_mut;
				_99221_l->_field_reference=_96421_is_ref;
				_93917_assign->_field_left = jule::alloc_for_append(_93917_assign->_field_left,1);_93917_assign->_field_left.push(_99221_l);
			}
			_iter_next_4682408544:;
			++it;
			goto _iter_begin_4682408544;
		}
		_iter_end_4682408544:;
	}
	return std::make_tuple(_93917_assign,true);
}



inline std::tuple<jule::Ptr<_221d8b043_AssignSt>,jule::Bool> _221e8c8b4_ScopeParser::_method_build_assign_st(jule::Slice<_2220dce43_Token>& _100139_tokens) {
	jule::Ptr<_221d8b043_AssignSt> _100158_st = jule::Ptr<_221d8b043_AssignSt>();
	jule::Bool _100173_ok = jule::Bool();
	if ((!(_222d4854e_check_assign_tokens(_100139_tokens)))) {
		_100158_st = nullptr;
		_100173_ok = false;
		return std::make_tuple(_100158_st,_100173_ok);
	}
	{
		auto &_match_expr{ _100139_tokens[0LL]._field_id };
		if (!(_match_expr == (34LLU))) { goto _case_end_4682437712; }
		_case_begin_4682437712:;
		{
			std::tie(_100158_st,_100173_ok) = (*this)._method_build_decl_assign(_100139_tokens);
		}
		goto _match_end_4682435584;
		_case_end_4682437712:;
		_case_begin_4682434208:;
		{
			std::tie(_100158_st,_100173_ok) = (*this)._method_build_plain_assign(_100139_tokens);
		}
		goto _match_end_4682435584;
		_case_end_4682434208:;
		_match_end_4682435584:;
	}
	return std::make_tuple(_100158_st,_100173_ok);
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_use_expr(jule::Slice<_2220dce43_Token>& _101438_tokens) {
	if (_101438_tokens.len() == 1LL) {
		(*this)._method_push_err(_101438_tokens[0LL],jule::Str("expression missing", 18));
		return jule::Any(nullptr);
	}
	jule::Ptr<_221d8b043_UseExpr> _102017_ue = jule::new_struct<_221d8b043_UseExpr>(new( std::nothrow ) _221d8b043_UseExpr(_101438_tokens[0LL],jule::Ptr<_221d8b043_Expr>()));
	_101438_tokens=_101438_tokens.slice(1LL);
	_102017_ue->_field_expr=(*this)._field_p->_method_build_expr(_101438_tokens);
	return jule::Any(_102017_ue);
}



inline jule::Any _221e8c8b4_ScopeParser::_method_build_st(jule::Ptr<_221e8c8b4_Stmt>& _102932_st) {
	_2220dce43_Token _103017_token = _102932_st->_field_tokens[0LL];
	if (_103017_token._field_id == 2LLU) {
		jule::Any _103222_s;
		jule::Bool _103225_ok;
		std::tie(_103222_s,_103225_ok) = (*this)._method_build_id_st(_102932_st->_field_tokens);
		if (_103225_ok) {
			return _103222_s;
		}
	}
	jule::Ptr<_221d8b043_AssignSt> _103818_s;
	jule::Bool _103821_ok;
	std::tie(_103818_s,_103821_ok) = (*this)._method_build_assign_st(_102932_st->_field_tokens);
	if (_103821_ok) {
		return jule::Any(_103818_s);
	}
	{
		auto &_match_expr{ _103017_token._field_id };
		if (!(_match_expr == (19LLU))) { goto _case_end_4682459600; }
		_case_begin_4682459600:;
		{
			return (*this)._method_build_use_expr(_102932_st->_field_tokens);
		}
		goto _match_end_4682455712;
		_case_end_4682459600:;
		if (!(_match_expr == (38LLU) || _match_expr == (9LLU) || _match_expr == (34LLU) || _match_expr == (36LLU))) { goto _case_end_4682459776; }
		_case_begin_4682459776:;
		{
			return (*this)._method_build_var_st(_102932_st->_field_tokens);
		}
		goto _match_end_4682455712;
		_case_end_4682459776:;
		if (!(_match_expr == (4LLU))) { goto _case_end_4682460272; }
		_case_begin_4682460272:;
		{
			return (*this)._method_build_ret_st(_102932_st->_field_tokens);
		}
		goto _match_end_4682455712;
		_case_end_4682460272:;
		if (!(_match_expr == (12LLU))) { goto _case_end_4682456704; }
		_case_begin_4682456704:;
		{
			return (*this)._method_buid_iter_st(_102932_st);
		}
		goto _match_end_4682455712;
		_case_end_4682456704:;
		if (!(_match_expr == (13LLU))) { goto _case_end_4682456800; }
		_case_begin_4682456800:;
		{
			return (*this)._method_build_break_st(_102932_st->_field_tokens);
		}
		goto _match_end_4682455712;
		_case_end_4682456800:;
		if (!(_match_expr == (14LLU))) { goto _case_end_4682456896; }
		_case_begin_4682456896:;
		{
			return (*this)._method_build_cont_st(_102932_st->_field_tokens);
		}
		goto _match_end_4682455712;
		_case_end_4682456896:;
		if (!(_match_expr == (16LLU))) { goto _case_end_4682456992; }
		_case_begin_4682456992:;
		{
			return (*this)._method_build_if_else_chain(_102932_st->_field_tokens);
		}
		goto _match_end_4682455712;
		_case_end_4682456992:;
		if (!(_match_expr == (18LLU))) { goto _case_end_4682458576; }
		_case_begin_4682458576:;
		{
			return (*this)._method_build_comment_st(_103017_token);
		}
		goto _match_end_4682455712;
		_case_end_4682458576:;
		if (!(_match_expr == (26LLU))) { goto _case_end_4682458672; }
		_case_begin_4682458672:;
		{
			return (*this)._method_build_co_call_st(_102932_st->_field_tokens);
		}
		goto _match_end_4682455712;
		_case_end_4682458672:;
		if (!(_match_expr == (22LLU))) { goto _case_end_4682458768; }
		_case_begin_4682458768:;
		{
			return (*this)._method_build_goto_st(_102932_st->_field_tokens);
		}
		goto _match_end_4682455712;
		_case_end_4682458768:;
		if (!(_match_expr == (32LLU))) { goto _case_end_4682458864; }
		_case_begin_4682458864:;
		{
			return (*this)._method_build_fall_st(_102932_st->_field_tokens);
		}
		goto _match_end_4682455712;
		_case_end_4682458864:;
		if (!(_match_expr == (10LLU))) { goto _case_end_4682458960; }
		_case_begin_4682458960:;
		{
			return (*this)._method_build_type_alias_st(_102932_st->_field_tokens);
		}
		goto _match_end_4682455712;
		_case_end_4682458960:;
		if (!(_match_expr == (27LLU))) { goto _case_end_4682460416; }
		_case_begin_4682460416:;
		{
			return jule::Any((*this)._method_build_match_case(_102932_st->_field_tokens));
		}
		goto _match_end_4682455712;
		_case_end_4682460416:;
		if (!(_match_expr == (35LLU) || _match_expr == (37LLU))) { goto _case_end_4682460512; }
		_case_begin_4682460512:;
		{
			return jule::Any((*this)._method_build_scope_st(_102932_st->_field_tokens));
		}
		goto _match_end_4682455712;
		_case_end_4682460512:;
		if (!(_match_expr == (3LLU))) { goto _case_end_4682460608; }
		_case_begin_4682460608:;
		{
			if (_103017_token._field_kind == jule::Str("{", 1)) {
				return jule::Any((*this)._method_build_scope_st(_102932_st->_field_tokens));
			}
		}
		goto _match_end_4682455712;
		_case_end_4682460608:;
		_case_begin_4682456000:;
		{
			jule::Ptr<_221d8b043_Expr> _109921_expr = (*this)._field_p->_method_build_expr(_102932_st->_field_tokens);
			if (_109921_expr != nullptr) {
				return jule::Any(_109921_expr);
			}
		}
		goto _match_end_4682455712;
		_case_end_4682456000:;
		_match_end_4682455712:;
	}
	(*this)._method_push_err(_103017_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _221e8c8b4_ScopeParser::_method_build(jule::Slice<_2220dce43_Token>& _110929_tokens,jule::Ptr<_221d8b043_ScopeTree>& _110951_s) {
	if (_110951_s == nullptr) {
		return;
	}
	(*this)._field_stmts=_221e8c8b4_split_stmts(_110929_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_110951_s;
	while ((!((*this)._method_is_last_st())) && (!((*this)._method_finished()))) {
		{
			jule::Ptr<_221e8c8b4_Stmt> _111821_st = (*this)._method_next();
			jule::Any _111921_data = (*this)._method_build_st(_111821_st);
			if (_111921_data != nullptr) {
				(*this)._field_s->_field_stmts = jule::alloc_for_append((*this)._field_s->_field_stmts,1);(*this)._field_s->_field_stmts.push(_111921_data);
			}
			if ((*this)._method_stopped()) {
				goto _iter_end_4682485104;
			}
		}
	_iter_next_4682485104:;
	}
	_iter_end_4682485104:;
}







std::ostream &operator<<(std::ostream &_Stream, const _221e8c8b4_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23999731d_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _23999731d_Precedencer::_method_set(jule::Int _12722_level,jule::Any _12734_expr) {
	{
		auto &expr = (*this)._field_pairs;
		auto it = expr.begin();
		_iter_begin_4682495776:;
		if (it != expr.end()) {
			jule::Int _23999731d_i = it - expr.begin();
			jule::Slice<jule::Any> &_23999731d_pair = *it;
			{
				jule::Int _12917_pair_level = _23999731d_pair[0LL].operator jule::Int();
				if (_12722_level > _12917_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _13125_first = (*this)._field_pairs.slice(0LL,_23999731d_i);
					jule::Slice<jule::Slice<jule::Any>> _13225_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_12722_level),_12734_expr})});
					jule::Slice<jule::Slice<jule::Any>> _13325_appended = jule::append(_13225_buffer,(*this)._field_pairs.slice(_23999731d_i));
					(*this)._field_pairs=jule::append(_13125_first,_13325_appended);
					return;
				}
			}
			_iter_next_4682495776:;
			++it;
			_23999731d_i++;
			goto _iter_begin_4682495776;
		}
		_iter_end_4682495776:;
	}
	(*this)._field_pairs = jule::alloc_for_append((*this)._field_pairs,1);(*this)._field_pairs.push(jule::Slice<jule::Any>({jule::Any(_12722_level),_12734_expr}));
}



inline jule::Any _23999731d_Precedencer::_method_get_lower(void) {
	jule::I64 _14217_i = (*this)._field_pairs.len() - 1LL;
	for (; _14217_i >= 0LL; (_14217_i)--) {
		{
			jule::Any _14421_data = (*this)._field_pairs[_14217_i][1LL];
			if (_14421_data != nullptr) {
				return _14421_data;
			}
		}
	_iter_next_4682502352:;
	}
	_iter_end_4682502352:;
	return jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _23999731d_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



inline void _23999731d_ExprBuilder::_method_push_err(_2220dce43_Token _27027_token,jule::Str _27041_fmt,jule::Slice<jule::Any> _27054_args) {
	(*this)._field_p->_method_push_err(_27027_token,_27041_fmt,_27054_args);
}



inline void _23999731d_ExprBuilder::_method_push_suggestion(jule::Str _27534_fmt,jule::Slice<jule::Any> _27547_args) {
	(*this)._field_p->_method_push_suggestion(_27534_fmt,_27547_args);
}



inline jule::Ptr<_221d8b043_TupleExpr> _23999731d_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_2220dce43_Token>>& _27935_parts) {
	jule::Ptr<_221d8b043_TupleExpr> _28017_tuple = jule::new_struct<_221d8b043_TupleExpr>(new( std::nothrow ) _221d8b043_TupleExpr(jule::Slice<jule::Ptr<_221d8b043_Expr>>::alloc(0LL,static_cast<jule::I64>(_27935_parts.len()))));
	{
		auto &expr = _27935_parts;
		auto it = expr.begin();
		_iter_begin_4682542576:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _23999731d_part = *it;
			{
				_28017_tuple->_field_expr = jule::alloc_for_append(_28017_tuple->_field_expr,1);_28017_tuple->_field_expr.push((*this)._method_build_from_tokens(_23999731d_part));
			}
			_iter_next_4682542576:;
			++it;
			goto _iter_begin_4682542576;
		}
		_iter_end_4682542576:;
	}
	return _28017_tuple;
}



inline jule::Ptr<_221d8b043_LitExpr> _23999731d_ExprBuilder::_method_build_lit(_2220dce43_Token _28928_token) {
	return jule::new_struct<_221d8b043_LitExpr>(new( std::nothrow ) _221d8b043_LitExpr(_28928_token,_28928_token._field_kind));
}



inline jule::Ptr<_221d8b043_TypeDecl> _23999731d_ExprBuilder::_method_build_primitive_type(_2220dce43_Token& _29640_token) {
	return _222e76d20_build_prim_type(_29640_token);
}



inline jule::Any _23999731d_ExprBuilder::_method_build_single(_2220dce43_Token _30035_token) {
	{
		auto &_match_expr{ _30035_token._field_id };
		if (!(_match_expr == (6LLU))) { goto _case_end_4682553936; }
		_case_begin_4682553936:;
		{
			return jule::Any((*this)._method_build_lit(_30035_token));
		}
		goto _match_end_4682553104;
		_case_end_4682553936:;
		if (!(_match_expr == (2LLU) || _match_expr == (28LLU) || _match_expr == (40LLU))) { goto _case_end_4682555584; }
		_case_begin_4682555584:;
		{
			return jule::Any(_23999731d_build_ident_expr(_30035_token));
		}
		goto _match_end_4682553104;
		_case_end_4682555584:;
		if (!(_match_expr == (1LLU))) { goto _case_end_4682555312; }
		_case_begin_4682555312:;
		{
			return jule::Any((*this)._method_build_primitive_type(_30035_token));
		}
		goto _match_end_4682553104;
		_case_end_4682555312:;
		_case_begin_4682552560:;
		{
			(*this)._method_push_err(_30035_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return jule::Any(nullptr);
		}
		goto _match_end_4682553104;
		_case_end_4682552560:;
		_match_end_4682553104:;
	}
}



inline jule::Ptr<_221d8b043_IdentExpr> _23999731d_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_2220dce43_Token>& _31946_tokens) {
	if (_31946_tokens[0LL]._field_id != 31LLU) {
		return nullptr;
	} else if (_31946_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_31946_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_2220dce43_Token _32717_token = _31946_tokens[2LL];
	if (_32717_token._field_id != 2LLU) {
		(*this)._method_push_err(_31946_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_221d8b043_IdentExpr> _33317_expr = _23999731d_build_ident_expr(_32717_token);
	_33317_expr->_field_cpp_linked=true;
	return _33317_expr;
}



inline jule::Ptr<_221d8b043_UnaryExpr> _23999731d_ExprBuilder::_method_build_unary(jule::Slice<_2220dce43_Token> _33834_tokens) {
	_2220dce43_Token _33917_op = _33834_tokens[0LL];
	if (_33834_tokens.len() == 1LL) {
		(*this)._method_push_err(_33917_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_2220dce43_is_unary_op(_33917_op._field_kind)))) {
		(*this)._method_push_err(_33917_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_33917_op._field_kind)}));
		return nullptr;
	}
	_33834_tokens=_33834_tokens.slice(1LL);
	return jule::new_struct<_221d8b043_UnaryExpr>(new( std::nothrow ) _221d8b043_UnaryExpr(_33917_op,(*this)._method_build(_33834_tokens)));
}



inline jule::Ptr<_221d8b043_SubIdentExpr> _23999731d_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_2220dce43_Token> _35942_tokens) {
	jule::I64 _36017_i = _35942_tokens.len() - 1LL;
	_2220dce43_Token _36117_ident_token = _35942_tokens[_36017_i];
	(_36017_i)--;
	_35942_tokens=_35942_tokens.slice(0LL,_36017_i);
	if (_35942_tokens.len() == 0LL) {
		(*this)._method_push_err(_36117_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_221d8b043_SubIdentExpr>(new( std::nothrow ) _221d8b043_SubIdentExpr(jule::Bool(),(*this)._method_build(_35942_tokens),_36117_ident_token));
}



inline jule::Ptr<_221d8b043_NsSelectionExpr> _23999731d_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_2220dce43_Token>& _37442_tokens) {
	jule::Ptr<_221d8b043_NsSelectionExpr> _37517_ns = jule::new_struct<_221d8b043_NsSelectionExpr>(new( std::nothrow ) _221d8b043_NsSelectionExpr());
	{
		auto &expr = _37442_tokens;
		auto it = expr.begin();
		_iter_begin_4682595936:;
		if (it != expr.end()) {
			jule::Int _23999731d_i = it - expr.begin();
			_2220dce43_Token _23999731d_token = *it;
			{
				if (jule::unsafe_mod(_23999731d_i,2LL) == 0LL) {
					if (_23999731d_token._field_id != 2LLU) {
						(*this)._method_push_err(_23999731d_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					}
					_37517_ns->_field_ns = jule::alloc_for_append(_37517_ns->_field_ns,1);_37517_ns->_field_ns.push(_23999731d_token);
				} else if (_23999731d_token._field_id != 23LLU) {
					(*this)._method_push_err(_23999731d_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				}
			}
			_iter_next_4682595936:;
			++it;
			_23999731d_i++;
			goto _iter_begin_4682595936;
		}
		_iter_end_4682595936:;
	}
	_37517_ns->_field_ident=_37517_ns->_field_ns[_37517_ns->_field_ns.len() - 1LL];
	_37517_ns->_field_ns=_37517_ns->_field_ns.slice(0LL,_37517_ns->_field_ns.len() - 1LL);
	return _37517_ns;
}



inline jule::Ptr<_221d8b043_TypeDecl> _23999731d_ExprBuilder::_method_build_type(jule::Slice<_2220dce43_Token>& _39334_tokens) {
	jule::Int _39417_i = 0LL;
	jule::Ptr<_221d8b043_TypeDecl> _39518_t;
	jule::Bool _39521_ok;
	std::tie(_39518_t,_39521_ok) = (*this)._field_p->_method_build_type(_39334_tokens,(&(_39417_i)),false);
	if ((!(_39521_ok))) {
		(*this)._method_push_err(_39334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_39417_i < _39334_tokens.len()) {
		(*this)._method_push_err(_39334_tokens[_39417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _39518_t;
}



inline jule::Any _23999731d_ExprBuilder::_method_build_sub_ident(jule::Slice<_2220dce43_Token>& _40739_tokens) {
	jule::I64 _40813_i = _40739_tokens.len() - 2LL;
	_2220dce43_Token _40913_token = _40739_tokens[_40813_i];
	{
		auto &_match_expr{ _40913_token._field_id };
		if (!(_match_expr == (20LLU))) { goto _case_end_4682622592; }
		_case_begin_4682622592:;
		{
			return jule::Any((*this)._method_build_obj_sub_ident(_40739_tokens));
		}
		goto _match_end_4682622400;
		_case_end_4682622592:;
		if (!(_match_expr == (23LLU))) { goto _case_end_4682622688; }
		_case_begin_4682622688:;
		{
			return jule::Any((*this)._method_build_ns_sub_ident(_40739_tokens));
		}
		goto _match_end_4682622400;
		_case_end_4682622688:;
		if (!(_match_expr == (3LLU))) { goto _case_end_4682622784; }
		_case_begin_4682622784:;
		{
			if (_40913_token._field_kind == jule::Str("]", 1)) {
				return jule::Any((*this)._method_build_type(_40739_tokens));
			}
		}
		goto _match_end_4682622400;
		_case_end_4682622784:;
		_match_end_4682622400:;
	}
	(*this)._method_push_err(_40913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_221d8b043_VariadicExpr> _23999731d_ExprBuilder::_method_build_variadic(jule::Slice<_2220dce43_Token> _42837_tokens) {
	_2220dce43_Token _42917_token = _42837_tokens[_42837_tokens.len() - 1LL];
	_42837_tokens=_42837_tokens.slice(0LL,_42837_tokens.len() - 1LL);
	return jule::new_struct<_221d8b043_VariadicExpr>(new( std::nothrow ) _221d8b043_VariadicExpr(_42917_token,(*this)._method_build(_42837_tokens)));
}



inline jule::Any _23999731d_ExprBuilder::_method_build_op_right(jule::Slice<_2220dce43_Token>& _43738_tokens) {
	_2220dce43_Token _43817_token = _43738_tokens[_43738_tokens.len() - 1LL];
	{
		auto &_match_expr{ _43817_token._field_kind };
		if (!(_match_expr == (jule::Str("!", 1)))) { goto _case_end_4682637072; }
		_case_begin_4682637072:;
		{
			_43738_tokens=_43738_tokens.slice(0LL,_43738_tokens.len() - 1LL);
			jule::Any _44221_d = (*this)._method_build(_43738_tokens);
			if (_44221_d == nullptr) {
				return jule::Any(nullptr);
			}
			{
				auto &_match_expr{ _44221_d };
				if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FnCallExpr>>())) { goto _case_end_4682643600; }
				_case_begin_4682643600:;
				{
					_44221_d.operator jule::Ptr<_221d8b043_FnCallExpr>()->_field_exception=jule::new_struct<_221d8b043_ScopeTree>(new( std::nothrow ) _221d8b043_ScopeTree(jule::Ptr<_221d8b043_ScopeTree>(),jule::Bool(),true,jule::Slice<jule::Any>()));
					return _44221_d;
				}
				goto _match_end_4682642880;
				_case_end_4682643600:;
				_match_end_4682642880:;
			}
		}
		goto _match_end_4682638976;
		_case_end_4682637072:;
		if (!(_match_expr == (jule::Str("...", 3)))) { goto _case_end_4682639056; }
		_case_begin_4682639056:;
		{
			return jule::Any((*this)._method_build_variadic(_43738_tokens));
		}
		goto _match_end_4682638976;
		_case_end_4682639056:;
		_match_end_4682638976:;
	}
	(*this)._method_push_err(_43817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Any _23999731d_ExprBuilder::_method_build_between_parentheses(jule::Slice<_2220dce43_Token> _46248_tokens) {
	_2220dce43_Token _46313_token = _46248_tokens[0LL];
	_46248_tokens=_46248_tokens.slice(1LL,_46248_tokens.len() - 1LL);
	if (_46248_tokens.len() == 0LL) {
		(*this)._method_push_err(_46313_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_46248_tokens);
}



inline jule::Ptr<_221d8b043_CastExpr> _23999731d_ExprBuilder::_method_try_build_cast(jule::Slice<_2220dce43_Token>& _47338_tokens) {
	jule::Int _47417_range_n = 0LL;
	{
		auto &expr = _47338_tokens;
		auto it = expr.begin();
		_iter_begin_4682658768:;
		if (it != expr.end()) {
			jule::Int _23999731d_i = it - expr.begin();
			_2220dce43_Token &_23999731d_token = *it;
			{
				if (_23999731d_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _23999731d_token._field_kind };
						if (!(_match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4682663616; }
						_case_begin_4682663616:;
						{
							(_47417_range_n)++;
							goto _iter_next_4682658768;
						}
						goto _match_end_4682662240;
						_case_end_4682663616:;
						_case_begin_4682661552:;
						{
							(_47417_range_n)--;
						}
						goto _match_end_4682662240;
						_case_end_4682661552:;
						_match_end_4682662240:;
					}
				}
				if (_47417_range_n > 0LL) {
					goto _iter_next_4682658768;
				} else if ((_23999731d_i + 1LL) == _47338_tokens.len()) {
					return nullptr;
				}
				jule::Slice<_2220dce43_Token> _49521_type_tokens = _47338_tokens.slice(0LL,_23999731d_i + 1LL);
				jule::Slice<_2220dce43_Token> _49621_expr_tokens = _47338_tokens.slice(_23999731d_i + 1LL);
				if (_49621_expr_tokens.len() == 0LL) {
					return nullptr;
				}
				_2220dce43_Token _50317_tok = _49621_expr_tokens[0LL];
				if ((_50317_tok._field_id != 3LLU) || (_50317_tok._field_kind != jule::Str("(", 1))) {
					return nullptr;
				}
				jule::Ptr<_221d8b043_CastExpr> _50821_cast = jule::new_struct<_221d8b043_CastExpr>(new( std::nothrow ) _221d8b043_CastExpr());
				if (_49621_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_49621_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				}
				if (_49521_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_49521_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_49521_type_tokens=_49521_type_tokens.slice(1LL,_49521_type_tokens.len() - 1LL);
					jule::Int _52225_type_index = 0LL;
					jule::Ptr<_221d8b043_TypeDecl> _52326_t;
					jule::Bool _52329_ok;
					std::tie(_52326_t,_52329_ok) = (*this)._field_p->_method_build_type(_49521_type_tokens,(&(_52225_type_index)),true);
					if (_52329_ok && (_52225_type_index < _49521_type_tokens.len())) {
						(*this)._method_push_err(_49521_type_tokens[_52225_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_52329_ok))) {
						return _50821_cast;
					}
					_50821_cast->_field_kind=_52326_t;
					if (_49621_expr_tokens.len() > 2LL) {
						jule::Int _53329_j = 0LL;
						_222e5128e_range(_53329_j,jule::Str("(", 1),jule::Str(")", 1),_49621_expr_tokens);
						if (_53329_j < _49621_expr_tokens.len()) {
							return nullptr;
						}
						_49621_expr_tokens=_49621_expr_tokens.slice(0LL,_53329_j);
						_50821_cast->_field_expr=(*this)._method_build(_49621_expr_tokens);
					}
				}
				return _50821_cast;
			}
			_iter_next_4682658768:;
			++it;
			_23999731d_i++;
			goto _iter_begin_4682658768;
		}
		_iter_end_4682658768:;
	}
	return nullptr;
}



inline void _23999731d_ExprBuilder::_method_push_arg(jule::Slice<jule::Ptr<_221d8b043_Expr>>& _54832_args,jule::Slice<_2220dce43_Token> _54851_tokens,_2220dce43_Token _54868_err_token) {
	if (_54851_tokens.len() == 0LL) {
		(*this)._method_push_err(_54868_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_54832_args.push((*this)._method_build_from_tokens(_54851_tokens));
}



inline jule::Slice<jule::Ptr<_221d8b043_Expr>> _23999731d_ExprBuilder::_method_build_args(jule::Slice<_2220dce43_Token> _55733_tokens) {
	if (_55733_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_221d8b043_Expr>> _56317_args = nullptr;
	jule::Int _56417_last = 0LL;
	jule::Int _56517_range_n = 0LL;
	_55733_tokens=_55733_tokens.slice(1LL,_55733_tokens.len() - 1LL);
	{
		auto &expr = _55733_tokens;
		auto it = expr.begin();
		_iter_begin_4682703456:;
		if (it != expr.end()) {
			jule::Int _23999731d_i = it - expr.begin();
			_2220dce43_Token &_23999731d_token = *it;
			{
				if (_23999731d_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _23999731d_token._field_kind };
						if (!(_match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4682709616; }
						_case_begin_4682709616:;
						{
							(_56517_range_n)++;
						}
						goto _match_end_4682708240;
						_case_end_4682709616:;
						_case_begin_4682707552:;
						{
							(_56517_range_n)--;
						}
						goto _match_end_4682708240;
						_case_end_4682707552:;
						_match_end_4682708240:;
					}
				}
				if ((_56517_range_n > 0LL) || (_23999731d_token._field_id != 8LLU)) {
					goto _iter_next_4682703456;
				}
				(*this)._method_push_arg(_56317_args,_55733_tokens.slice(_56417_last,_23999731d_i),_23999731d_token);
				_56417_last=static_cast<jule::Int>(_23999731d_i + 1LL);
			}
			_iter_next_4682703456:;
			++it;
			_23999731d_i++;
			goto _iter_begin_4682703456;
		}
		_iter_end_4682703456:;
	}
	if (_56417_last < _55733_tokens.len()) {
		if (_56417_last == 0LL) {
			if (_55733_tokens.len() > 0LL) {
				(*this)._method_push_arg(_56317_args,_55733_tokens.slice(_56417_last),_55733_tokens[_56417_last]);
			}
		} else {
			(*this)._method_push_arg(_56317_args,_55733_tokens.slice(_56417_last),_55733_tokens[_56417_last - 1LL]);
		}
	}
	return _56317_args;
}



inline jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> _23999731d_ExprBuilder::_method_build_call_generics(jule::Slice<_2220dce43_Token> _60042_tokens) {
	if (_60042_tokens.len() == 0LL) {
		return nullptr;
	}
	_60042_tokens=_60042_tokens.slice(1LL,_60042_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_2220dce43_Token>> _60618_parts;
	jule::Slice<_23886c227_Log> _60625_errs;
	std::tie(_60618_parts,_60625_errs) = _222e5128e_parts(_60042_tokens,8LLU,true);
	jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> _60717_generics = jule::Slice<jule::Ptr<_221d8b043_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_60618_parts.len()));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_60625_errs);
	{
		auto &expr = _60618_parts;
		auto it = expr.begin();
		_iter_begin_4682720128:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _23999731d_part = *it;
			{
				if (_23999731d_part.len() == 0LL) {
					goto _iter_next_4682720128;
				}
				jule::Int _61321_j = 0LL;
				jule::Ptr<_221d8b043_TypeDecl> _61422_generic;
				std::tie(_61422_generic,std::ignore) = (*this)._field_p->_method_build_type(_23999731d_part,(&(_61321_j)),true);
				if (_61321_j < _23999731d_part.len()) {
					(*this)._method_push_err(_23999731d_part[_61321_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_60717_generics.push(_61422_generic);
			}
			_iter_next_4682720128:;
			++it;
			goto _iter_begin_4682720128;
		}
		_iter_end_4682720128:;
	}
	return _60717_generics;
}



inline jule::Ptr<_221d8b043_FnCallExpr> _23999731d_ExprBuilder::_method_build_fn_call(_2220dce43_Token& _62437_token,jule::Ptr<_23999731d_CallData>& _62456_data) {
	return jule::new_struct<_221d8b043_FnCallExpr>(new( std::nothrow ) _221d8b043_FnCallExpr(_62437_token,(*this)._method_build_from_tokens(_62456_data->_field_expr_tokens),(*this)._method_build_call_generics(_62456_data->_field_generics_tokens),(*this)._method_build_args(_62456_data->_field_args_tokens),jule::Ptr<_221d8b043_ScopeTree>()));
}



inline jule::Any _23999731d_ExprBuilder::_method_build_parentheses_range(jule::Slice<_2220dce43_Token>& _63347_tokens) {
	_2220dce43_Token _63417_token = _63347_tokens[0LL];
	{
		auto &_match_expr{ _63417_token._field_id };
		if (!(_match_expr == (3LLU))) { goto _case_end_4682741536; }
		_case_begin_4682741536:;
		{
			{
				auto &_match_expr{ _63417_token._field_kind };
				if (!(_match_expr == (jule::Str("(", 1)))) { goto _case_end_4682743248; }
				_case_begin_4682743248:;
				{
					jule::Ptr<_221d8b043_CastExpr> _63925_expr = (*this)._method_try_build_cast(_63347_tokens);
					if (_63925_expr != nullptr) {
						return jule::Any(_63925_expr);
					}
				}
				goto _match_end_4682744800;
				_case_end_4682743248:;
				_match_end_4682744800:;
			}
		}
		goto _match_end_4682743136;
		_case_end_4682741536:;
		_match_end_4682743136:;
	}
	jule::Ptr<_23999731d_CallData> _64617_data = _23999731d_get_call_data(_63347_tokens);
	if (_64617_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_64617_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_63417_token,_64617_data));
}



inline jule::Ptr<_221d8b043_UnsafeExpr> _23999731d_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_2220dce43_Token> _65740_tokens) {
	_2220dce43_Token _65817_token = _65740_tokens[0LL];
	_65740_tokens=_65740_tokens.slice(1LL);
	jule::Int _66017_i = 0LL;
	jule::Slice<_2220dce43_Token> _66117_range_tokens = _222e5128e_range(_66017_i,jule::Str("{", 1),jule::Str("}", 1),_65740_tokens);
	if (_66117_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_65740_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_221d8b043_UnsafeExpr>(new( std::nothrow ) _221d8b043_UnsafeExpr(_65817_token,(*this)._method_build_from_tokens(_66117_range_tokens)->_field_kind));
}



inline jule::Ptr<_221d8b043_FnDecl> _23999731d_ExprBuilder::_method_build_anon_fn(jule::Slice<_2220dce43_Token>& _67237_tokens) {
	jule::Ptr<_221d8b043_FnDecl> _67317_f = (*this)._field_p->_method_build_fn(_67237_tokens,false,false);
	if ((!(_67317_f->_method_is_anon()))) {
		(*this)._method_push_err(_67317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	}
	return _67317_f;
}



inline jule::Any _23999731d_ExprBuilder::_method_build_unsafe(jule::Slice<_2220dce43_Token>& _68136_tokens) {
	{
		auto &_match_expr{ _68136_tokens[1LL]._field_id };
		if (!(_match_expr == (33LLU))) { goto _case_end_4682773968; }
		_case_begin_4682773968:;
		{
			return jule::Any((*this)._method_build_anon_fn(_68136_tokens));
		}
		goto _match_end_4682772528;
		_case_end_4682773968:;
		_case_begin_4682771472:;
		{
			return jule::Any((*this)._method_build_unsafe_expr(_68136_tokens));
		}
		goto _match_end_4682772528;
		_case_end_4682771472:;
		_match_end_4682772528:;
	}
}



inline void _23999731d_ExprBuilder::_method_push_range_lit_part(jule::Slice<_2220dce43_Token> _69242_part,_2220dce43_Token _6939_error_token,jule::Slice<jule::Slice<_2220dce43_Token>>& _69334_parts) {
	if (_69242_part.len() == 0LL) {
		(*this)._method_push_err(_6939_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_69334_parts.push(_69242_part);
}



inline jule::Slice<jule::Slice<_2220dce43_Token>> _23999731d_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_2220dce43_Token> _70353_tokens) {
	if (_70353_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_2220dce43_Token>> _70917_parts = nullptr;
	jule::Int _71117_last = 0LL;
	jule::Int _71217_range_n = 0LL;
	_70353_tokens=_70353_tokens.slice(1LL,_70353_tokens.len() - 1LL);
	{
		auto &expr = _70353_tokens;
		auto it = expr.begin();
		_iter_begin_4682789344:;
		if (it != expr.end()) {
			jule::Int _23999731d_i = it - expr.begin();
			_2220dce43_Token &_23999731d_token = *it;
			{
				if (_23999731d_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _23999731d_token._field_kind };
						if (!(_match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4682794704; }
						_case_begin_4682794704:;
						{
							(_71217_range_n)++;
						}
						goto _match_end_4682793328;
						_case_end_4682794704:;
						_case_begin_4682792640:;
						{
							(_71217_range_n)--;
						}
						goto _match_end_4682793328;
						_case_end_4682792640:;
						_match_end_4682793328:;
					}
				}
				if ((_71217_range_n > 0LL) || (_23999731d_token._field_id != 8LLU)) {
					goto _iter_next_4682789344;
				}
				(*this)._method_push_range_lit_part(_70353_tokens.slice(_71117_last,_23999731d_i),_23999731d_token,_70917_parts);
				_71117_last=static_cast<jule::Int>(_23999731d_i + 1LL);
			}
			_iter_next_4682789344:;
			++it;
			_23999731d_i++;
			goto _iter_begin_4682789344;
		}
		_iter_end_4682789344:;
	}
	if (_71117_last < _70353_tokens.len()) {
		if (_71117_last == 0LL) {
			if (_70353_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_70353_tokens.slice(_71117_last),_70353_tokens[_71117_last],_70917_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_70353_tokens.slice(_71117_last),_70353_tokens[_71117_last - 1LL],_70917_parts);
		}
	}
	return _70917_parts;
}



inline jule::Ptr<_221d8b043_FieldExprPair> _23999731d_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_2220dce43_Token> _74644_tokens) {
	jule::Ptr<_221d8b043_FieldExprPair> _74717_pair = jule::new_struct<_221d8b043_FieldExprPair>(new( std::nothrow ) _221d8b043_FieldExprPair(_74644_tokens[0LL],jule::Any()));
	_74644_tokens=_74644_tokens.slice(2LL);
	_74717_pair->_field_expr=(*this)._method_build_from_tokens(_74644_tokens)->_field_kind;
	return _74717_pair;
}



inline jule::Any _23999731d_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_2220dce43_Token>& _75545_tokens) {
	_2220dce43_Token _75617_token = _75545_tokens[0LL];
	if (_75617_token._field_id == 2LLU) {
		if (_75545_tokens.len() > 1LL) {
			_75617_token=_75545_tokens[1LL];
			if (_75617_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_75545_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_75545_tokens));
}



inline jule::Slice<jule::Any> _23999731d_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_2220dce43_Token>& _76846_tokens) {
	jule::Slice<jule::Slice<_2220dce43_Token>> _76917_parts = (*this)._method_get_brace_range_lit_expr_parts(_76846_tokens);
	if (_76917_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _77417_pairs = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_76917_parts.len()));
	{
		auto &expr = _76917_parts;
		auto it = expr.begin();
		_iter_begin_4682822496:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _23999731d_part = *it;
			{
				_77417_pairs.push((*this)._method_build_struct_lit_expr(_23999731d_part));
			}
			_iter_next_4682822496:;
			++it;
			goto _iter_begin_4682822496;
		}
		_iter_end_4682822496:;
	}
	return _77417_pairs;
}



inline jule::Ptr<_221d8b043_StructLit> _23999731d_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_2220dce43_Token> _78149_tokens) {
	jule::Int _78217_i = 0LL;
	jule::Ptr<_221d8b043_TypeDecl> _78318_t;
	jule::Bool _78321_ok;
	std::tie(_78318_t,_78321_ok) = (*this)._field_p->_method_build_type(_78149_tokens,(&(_78217_i)),true);
	if ((!(_78321_ok))) {
		return nullptr;
	} else if (_78217_i >= _78149_tokens.len()) {
		(*this)._method_push_err(_78149_tokens[_78217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_78149_tokens=_78149_tokens.slice(_78217_i);
	_2220dce43_Token _79213_token = _78149_tokens[0LL];
	if ((_79213_token._field_id != 3LLU) || (_79213_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_79213_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_221d8b043_StructLit>(new( std::nothrow ) _221d8b043_StructLit(_78318_t,(*this)._method_build_struct_lit_exprs(_78149_tokens)));
}



inline jule::Any _23999731d_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_2220dce43_Token>& _80444_tokens) {
	jule::Slice<_2220dce43_Token> _80518_l;
	jule::Slice<_2220dce43_Token> _80525_r;
	std::tie(_80518_l,_80525_r) = _23999731d_split_colon(_80444_tokens);
	if (_80518_l != nullptr) {
		return jule::Any(jule::new_struct<_221d8b043_KeyValPair>(new( std::nothrow ) _221d8b043_KeyValPair((*this)._method_build_from_tokens(_80518_l)->_field_kind,(*this)._method_build_from_tokens(_80525_r)->_field_kind,_80444_tokens[_80518_l.len()])));
	}
	return jule::Any((*this)._method_build_from_tokens(_80444_tokens));
}



inline jule::Ptr<_221d8b043_BraceLit> _23999731d_ExprBuilder::_method_build_brace_lit(jule::Slice<_2220dce43_Token>& _81739_tokens) {
	jule::Ptr<_221d8b043_BraceLit> _81817_lit = jule::new_struct<_221d8b043_BraceLit>(new( std::nothrow ) _221d8b043_BraceLit(_81739_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_2220dce43_Token>> _82217_parts = (*this)._method_get_brace_range_lit_expr_parts(_81739_tokens);
	if (_82217_parts == nullptr) {
		return _81817_lit;
	}
	_81817_lit->_field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_82217_parts.len()));
	{
		auto &expr = _82217_parts;
		auto it = expr.begin();
		_iter_begin_4682852880:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _23999731d_part = *it;
			{
				_81817_lit->_field_exprs = jule::alloc_for_append(_81817_lit->_field_exprs,1);_81817_lit->_field_exprs.push((*this)._method_build_brace_lit_part(_23999731d_part));
			}
			_iter_next_4682852880:;
			++it;
			goto _iter_begin_4682852880;
		}
		_iter_end_4682852880:;
	}
	return _81817_lit;
}



inline jule::Any _23999731d_ExprBuilder::_method_build_brace_range(jule::Slice<_2220dce43_Token>& _83541_tokens) {
	jule::Slice<_2220dce43_Token> _83618_expr_tokens;
	jule::Int _83631_range_n;
	std::tie(_83618_expr_tokens,_83631_range_n) = _23999731d_get_range_expr_tokens(_83541_tokens);
	{
		if (!((_83618_expr_tokens.len() == 0LL))) { goto _case_end_4682859632; }
		_case_begin_4682859632:;
		{
			return jule::Any((*this)._method_build_brace_lit(_83541_tokens));
		}
		goto _match_end_4682859504;
		_case_end_4682859632:;
		if (!((_83631_range_n > 0LL))) { goto _case_end_4682859728; }
		_case_begin_4682859728:;
		{
			(*this)._method_push_err(_83541_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return jule::Any(nullptr);
		}
		goto _match_end_4682859504;
		_case_end_4682859728:;
		_match_end_4682859504:;
	}
	_2220dce43_Token _84813_else_token = _83618_expr_tokens[_83618_expr_tokens.len() - 1LL];
	if (_83618_expr_tokens[_83618_expr_tokens.len() - 1LL]._field_id == 17LLU) {
		_83618_expr_tokens=_83618_expr_tokens.slice(0LL,_83618_expr_tokens.len() - 1LL);
		jule::Any _85121_d = (*this)._method_build(_83618_expr_tokens);
		if (_85121_d == nullptr) {
			return jule::Any(nullptr);
		}
		{
			auto &_match_expr{ _85121_d };
			if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FnCallExpr>>())) { goto _case_end_4682871024; }
			_case_begin_4682871024:;
			{
				_83541_tokens=_83541_tokens.slice(_83618_expr_tokens.len() + 1LL);
				jule::Int _85825_i = 0LL;
				jule::Slice<_2220dce43_Token> _85925_range_tokens = _222e5128e_range(_85825_i,jule::Str("{", 1),jule::Str("}", 1),_83541_tokens);
				jule::Ptr<_221d8b043_FnCallExpr> _86025_model = _85121_d.operator jule::Ptr<_221d8b043_FnCallExpr>();
				if (_86025_model->_method_ignored()) {
					(*this)._method_push_err(_84813_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
				}
				_86025_model->_field_exception=(*this)._field_p->_method_build_scope(_85925_range_tokens);
				return _85121_d;
			}
			goto _match_end_4682869072;
			_case_end_4682871024:;
			_case_begin_4682869952:;
			{
				(*this)._method_push_err(_83618_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
			goto _match_end_4682869072;
			_case_end_4682869952:;
			_match_end_4682869072:;
		}
	}
	{
		auto &_match_expr{ _83618_expr_tokens[0LL]._field_id };
		if (!(_match_expr == (35LLU))) { goto _case_end_4682859312; }
		_case_begin_4682859312:;
		{
			return (*this)._method_build_unsafe(_83541_tokens);
		}
		goto _match_end_4682883584;
		_case_end_4682859312:;
		if (!(_match_expr == (33LLU))) { goto _case_end_4682886480; }
		_case_begin_4682886480:;
		{
			return jule::Any((*this)._method_build_anon_fn(_83541_tokens));
		}
		goto _match_end_4682883584;
		_case_end_4682886480:;
		if (!(_match_expr == (2LLU) || _match_expr == (31LLU))) { goto _case_end_4682886576; }
		_case_begin_4682886576:;
		{
			return jule::Any((*this)._method_build_typed_struct_literal(_83541_tokens));
		}
		goto _match_end_4682883584;
		_case_end_4682886576:;
		_case_begin_4682866000:;
		{
			(*this)._method_push_err(_83618_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return jule::Any(nullptr);
		}
		goto _match_end_4682883584;
		_case_end_4682866000:;
		_match_end_4682883584:;
	}
}



inline jule::Slice<jule::Slice<_2220dce43_Token>> _23999731d_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_2220dce43_Token> _89243_tokens) {
	_89243_tokens=_89243_tokens.slice(1LL,_89243_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_2220dce43_Token>> _89418_parts;
	jule::Slice<_23886c227_Log> _89425_errors;
	std::tie(_89418_parts,_89425_errors) = _222e5128e_parts(_89243_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_89425_errors);
	return _89418_parts;
}



inline jule::Ptr<_221d8b043_SliceExpr> _23999731d_ExprBuilder::_method_build_slice(jule::Slice<_2220dce43_Token> _89934_tokens) {
	jule::Ptr<_221d8b043_SliceExpr> _90017_slc = jule::new_struct<_221d8b043_SliceExpr>(new( std::nothrow ) _221d8b043_SliceExpr(_89934_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_2220dce43_Token>> _90417_parts = (*this)._method_get_enumerable_parts(_89934_tokens);
	if (_90417_parts.len() == 0LL) {
		return _90017_slc;
	}
	_90017_slc->_field_elems=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_90417_parts.len()));
	{
		auto &expr = _90417_parts;
		auto it = expr.begin();
		_iter_begin_4682901824:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _23999731d_p = *it;
			{
				_90017_slc->_field_elems = jule::alloc_for_append(_90017_slc->_field_elems,1);_90017_slc->_field_elems.push((*this)._method_build_from_tokens(_23999731d_p)->_field_kind);
			}
			_iter_next_4682901824:;
			++it;
			goto _iter_begin_4682901824;
		}
		_iter_end_4682901824:;
	}
	return _90017_slc;
}



inline jule::Ptr<_221d8b043_IndexingExpr> _23999731d_ExprBuilder::_method_build_indexing(jule::Slice<_2220dce43_Token> _91737_expr_tokens,jule::Slice<_2220dce43_Token> _91813_tokens,_2220dce43_Token _91834_error_token) {
	_91813_tokens=_91813_tokens.slice(1LL,_91813_tokens.len() - 1LL);
	return jule::new_struct<_221d8b043_IndexingExpr>(new( std::nothrow ) _221d8b043_IndexingExpr(_91834_error_token,(*this)._method_build_from_tokens(_91737_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_91813_tokens)->_field_kind));
}



inline jule::Ptr<_221d8b043_SlicingExpr> _23999731d_ExprBuilder::_method_build_slicing(jule::Slice<_2220dce43_Token>& _92737_expr_tokens,jule::Slice<_2220dce43_Token>& _92764_slicing_tokens,jule::Int& _92810_colon,_2220dce43_Token& _92827_error_token) {
	jule::Ptr<_221d8b043_SlicingExpr> _92917_slc = jule::new_struct<_221d8b043_SlicingExpr>(new( std::nothrow ) _221d8b043_SlicingExpr(_92827_error_token,(*this)._method_build_from_tokens(_92737_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_2220dce43_Token> _93417_start_expr_tokens = _92764_slicing_tokens.slice(0LL,_92810_colon);
	if (_93417_start_expr_tokens.len() > 0LL) {
		_92917_slc->_field_start=(*this)._method_build_from_tokens(_93417_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_2220dce43_Token> _93917_to_expr_tokens = _92764_slicing_tokens.slice(_92810_colon + 1LL);
	if (_93917_to_expr_tokens.len() > 0LL) {
		_92917_slc->_field_to=(*this)._method_build_from_tokens(_93917_to_expr_tokens)->_field_kind;
	}
	return _92917_slc;
}



inline jule::Any _23999731d_ExprBuilder::_method_build_bracket_range(jule::Slice<_2220dce43_Token> _94742_tokens) {
	_2220dce43_Token _94817_error_token = _94742_tokens[0LL];
	jule::Slice<_2220dce43_Token> _94918_expr_tokens;
	jule::Int _94931_range_n;
	std::tie(_94918_expr_tokens,_94931_range_n) = _23999731d_get_range_expr_tokens(_94742_tokens);
	{
		if (!((_94918_expr_tokens.len() == 0LL))) { goto _case_end_4682930304; }
		_case_begin_4682930304:;
		{
			return jule::Any((*this)._method_build_slice(_94742_tokens));
		}
		goto _match_end_4682930144;
		_case_end_4682930304:;
		if (!(((_94918_expr_tokens.len() == 0LL) || (_94931_range_n > 0LL)))) { goto _case_end_4682930416; }
		_case_begin_4682930416:;
		{
			(*this)._method_push_err(_94817_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return jule::Any(nullptr);
		}
		goto _match_end_4682930144;
		_case_end_4682930416:;
		_match_end_4682930144:;
	}
	_94742_tokens=_94742_tokens.slice(_94918_expr_tokens.len());
	jule::Int _96817_i = 0LL;
	jule::Slice<_2220dce43_Token> _96918_slicing_tokens;
	jule::Int _96934_colon;
	std::tie(_96918_slicing_tokens,_96934_colon) = _222e76d20_split_map_range(_94742_tokens,_96817_i);
	if (_96934_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_94918_expr_tokens,_96918_slicing_tokens,_96934_colon,_94817_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_94918_expr_tokens,_94742_tokens,_94817_error_token));
}



inline jule::Any _23999731d_ExprBuilder::_method_build_ternary(jule::Slice<_2220dce43_Token> _97636_tokens) {
	jule::Ptr<_221d8b043_TernaryExpr> _97717_ter = jule::new_struct<_221d8b043_TernaryExpr>(new( std::nothrow ) _221d8b043_TernaryExpr());
	_97717_ter->_field_token=_97636_tokens[0LL];
	_97636_tokens=_97636_tokens.slice(1LL);
	jule::Slice<_2220dce43_Token> _98117_expr_tokens = _23999731d_get_block_expr(_97636_tokens);
	if (_98117_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_97717_ter->_field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	_97717_ter->_field_condition=(*this)._method_build_kind(_98117_expr_tokens);
	jule::I64 _98817_i = _98117_expr_tokens.len();
	jule::Slice<_2220dce43_Token> _98917_true_expr = _222e5128e_range(_98817_i,jule::Str("{", 1),jule::Str("}", 1),_97636_tokens);
	if (_98917_true_expr == nullptr) {
		(*this)._method_push_err(_97717_ter->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_97717_ter);
	} else if (_98917_true_expr.len() == 0LL) {
		(*this)._method_push_err(_97636_tokens[_98117_expr_tokens.len()],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_98817_i >= _97636_tokens.len()) {
		(*this)._method_push_err(_97717_ter->_field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>());
		return jule::Any(_97717_ter);
	}
	_2220dce43_Token _100313_else_token = _97636_tokens[_98817_i];
	if (_100313_else_token._field_id != 17LLU) {
		(*this)._method_push_err(_100313_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>());
		return jule::Any(_97717_ter);
	}
	(_98817_i)++;
	jule::I64 _101113_j = _98817_i;
	jule::Slice<_2220dce43_Token> _101217_false_expr = _222e5128e_range(_98817_i,jule::Str("{", 1),jule::Str("}", 1),_97636_tokens);
	if (_101217_false_expr == nullptr) {
		(*this)._method_push_err(_100313_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_97717_ter);
	} else if (_101217_false_expr.len() == 0LL) {
		(*this)._method_push_err(_97636_tokens[_101113_j],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_98817_i < _97636_tokens.len()) {
		(*this)._method_push_err(_97636_tokens[_98817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_97717_ter->_field_true_expr=(*this)._method_build_kind(_98917_true_expr);
	_97717_ter->_field_false_expr=(*this)._method_build_kind(_101217_false_expr);
	return jule::Any(_97717_ter);
}



inline jule::Any _23999731d_ExprBuilder::_method_build_data(jule::Slice<_2220dce43_Token>& _103134_tokens) {
	{
		auto _match_expr{ _103134_tokens.len() };
		if (!(_match_expr == (0LL))) { goto _case_end_4682994128; }
		_case_begin_4682994128:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4682993680;
		_case_end_4682994128:;
		if (!(_match_expr == (1LL))) { goto _case_end_4682994224; }
		_case_begin_4682994224:;
		{
			return (*this)._method_build_single(_103134_tokens[0LL]);
		}
		goto _match_end_4682993680;
		_case_end_4682994224:;
		if (!(_match_expr == (3LL))) { goto _case_end_4682994320; }
		_case_begin_4682994320:;
		{
			if (_103134_tokens[0LL]._field_id == 31LLU) {
				return jule::Any((*this)._method_build_cpp_linked_ident(_103134_tokens));
			}
		}
		goto _match_end_4682993680;
		_case_end_4682994320:;
		_match_end_4682993680:;
	}
	_2220dce43_Token _104517_token = _103134_tokens[0LL];
	{
		auto &_match_expr{ _104517_token._field_id };
		if (!(_match_expr == (16LLU))) { goto _case_end_4683001728; }
		_case_begin_4683001728:;
		{
			return (*this)._method_build_ternary(_103134_tokens);
		}
		goto _match_end_4683001504;
		_case_end_4683001728:;
		if (!(_match_expr == (7LLU))) { goto _case_end_4683001824; }
		_case_begin_4683001824:;
		{
			if ((_103134_tokens.len() > 1LL) && (_104517_token._field_kind == jule::Str("*", 1))) {
				_104517_token=_103134_tokens[1LL];
				if ((_104517_token._field_id == 1LLU) || (_104517_token._field_id == 35LLU)) {
					return jule::Any((*this)._method_build_type(_103134_tokens));
				}
			}
			return jule::Any((*this)._method_build_unary(_103134_tokens));
		}
		goto _match_end_4683001504;
		_case_end_4683001824:;
		if (!(_match_expr == (3LLU))) { goto _case_end_4683001920; }
		_case_begin_4683001920:;
		{
			if (_103134_tokens.len() < 3LL) {
				goto _match_end_4683001504;
			}
			if (_103134_tokens.len() > 3LL) {
				_2220dce43_Token _106821_t = _103134_tokens[_103134_tokens.len() - 1LL];
				if ((_106821_t._field_id == 3LLU) && (_106821_t._field_kind == jule::Str(")", 1))) {
					goto _match_end_4683001504;
				}
			}
			_2220dce43_Token _107417_next = _103134_tokens[1LL];
			if ((_107417_next._field_id != 3LLU) || (_107417_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_4683001504;
			}
			return jule::Any((*this)._method_build_type(_103134_tokens));
		}
		goto _match_end_4683001504;
		_case_end_4683001920:;
		_match_end_4683001504:;
	}
	_104517_token=_103134_tokens[_103134_tokens.len() - 1LL];
	{
		auto &_match_expr{ _104517_token._field_id };
		if (!(_match_expr == (2LLU))) { goto _case_end_4683017840; }
		_case_begin_4683017840:;
		{
			return (*this)._method_build_sub_ident(_103134_tokens);
		}
		goto _match_end_4683017696;
		_case_end_4683017840:;
		if (!(_match_expr == (1LLU))) { goto _case_end_4683017936; }
		_case_begin_4683017936:;
		{
			return jule::Any((*this)._method_build_type(_103134_tokens));
		}
		goto _match_end_4683017696;
		_case_end_4683017936:;
		if (!(_match_expr == (7LLU))) { goto _case_end_4683018032; }
		_case_begin_4683018032:;
		{
			return (*this)._method_build_op_right(_103134_tokens);
		}
		goto _match_end_4683017696;
		_case_end_4683018032:;
		if (!(_match_expr == (3LLU))) { goto _case_end_4683018128; }
		_case_begin_4683018128:;
		{
			{
				auto &_match_expr{ _104517_token._field_kind };
				if (!(_match_expr == (jule::Str(")", 1)))) { goto _case_end_4683021200; }
				_case_begin_4683021200:;
				{
					return (*this)._method_build_parentheses_range(_103134_tokens);
				}
				goto _match_end_4683021072;
				_case_end_4683021200:;
				if (!(_match_expr == (jule::Str("}", 1)))) { goto _case_end_4683023472; }
				_case_begin_4683023472:;
				{
					return (*this)._method_build_brace_range(_103134_tokens);
				}
				goto _match_end_4683021072;
				_case_end_4683023472:;
				if (!(_match_expr == (jule::Str("]", 1)))) { goto _case_end_4683023568; }
				_case_begin_4683023568:;
				{
					return (*this)._method_build_bracket_range(_103134_tokens);
				}
				goto _match_end_4683021072;
				_case_end_4683023568:;
				_match_end_4683021072:;
			}
		}
		goto _match_end_4683017696;
		_case_end_4683018128:;
		_match_end_4683017696:;
	}
	(*this)._method_push_err(_104517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_221d8b043_BinopExpr> _23999731d_ExprBuilder::_method_build_binop(jule::Slice<_2220dce43_Token>& _111135_tokens,jule::Int _111152_i) {
	jule::Slice<_2220dce43_Token> _111217_left_tokens = _111135_tokens.slice(0LL,_111152_i);
	jule::Slice<_2220dce43_Token> _111317_right_tokens = _111135_tokens.slice(_111152_i + 1LL);
	if (_111217_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_111135_tokens[_111152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_111317_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_111135_tokens[_111152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_221d8b043_BinopExpr>(new( std::nothrow ) _221d8b043_BinopExpr((*this)._method_build(_111217_left_tokens),(*this)._method_build(_111317_right_tokens),_111135_tokens[_111152_i]));
}



inline jule::Any _23999731d_ExprBuilder::_method_build(jule::Slice<_2220dce43_Token>& _113429_tokens) {
	jule::Int _113513_i = _23999731d_find_lowest_prec_op(_113429_tokens);
	if (_113513_i == -1LL) {
		return (*this)._method_build_data(_113429_tokens);
	}
	return jule::Any((*this)._method_build_binop(_113429_tokens,_113513_i));
}



inline jule::Any _23999731d_ExprBuilder::_method_build_kind(jule::Slice<_2220dce43_Token>& _114234_tokens) {
	jule::Slice<jule::Slice<_2220dce43_Token>> _114318_parts;
	jule::Slice<_23886c227_Log> _114325_errors;
	std::tie(_114318_parts,_114325_errors) = _222e5128e_parts(_114234_tokens,8LLU,true);
	if (_114325_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_114325_errors);
		return jule::Any(nullptr);
	} else if (_114318_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_114318_parts));
	}
	return (*this)._method_build(_114234_tokens);
}



inline jule::Ptr<_221d8b043_Expr> _23999731d_ExprBuilder::_method_build_from_tokens(jule::Slice<_2220dce43_Token> _115340_tokens) {
	_115340_tokens=_23999731d_eliminate_comments(_115340_tokens);
	if (_115340_tokens.len() == 0LL) {
		return nullptr;
	}
	return jule::new_struct<_221d8b043_Expr>(new( std::nothrow ) _221d8b043_Expr(_115340_tokens[0LL],(*this)._method_build_kind(_115340_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _23999731d_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _222e5128e_Parser::_method_stop(void) {
	(*this)._field_ast=nullptr;
}



inline jule::Bool _222e5128e_Parser::_method_stopped(void) {
	return (*this)._field_ast == nullptr;
}



inline void _222e5128e_Parser::_method_push_err(_2220dce43_Token _23927_token,jule::Str _23941_fmt,jule::Slice<jule::Any> _23954_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_222e5128e_compiler_err(_23927_token,_23941_fmt,_23954_args));
}



inline void _222e5128e_Parser::_method_push_suggestion(jule::Str _24434_fmt,jule::Slice<jule::Any> _24447_args) {
	{
		_222e5128e_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_24434_fmt,_24447_args);
	}
}



inline jule::Ptr<_221d8b043_Expr> _222e5128e_Parser::_method_build_expr(jule::Slice<_2220dce43_Token>& _24835_tokens) {
	jule::Ptr<_23999731d_ExprBuilder> _24917_ep = jule::new_struct<_23999731d_ExprBuilder>(new( std::nothrow ) _23999731d_ExprBuilder(this->self));
	jule::Ptr<_221d8b043_Expr> _25017_expr = _24917_ep->_method_build_from_tokens(_24835_tokens);
	return _25017_expr;
}



inline jule::Ptr<_221d8b043_Directive> _222e5128e_Parser::_method_build_directive(jule::Slice<_2220dce43_Token> _25438_tokens) {
	if (_25438_tokens[0LL]._field_column > 1LL) {
		(*this)._method_push_err(_25438_tokens[0LL],jule::Str("directives must placed at beginning of line", 43),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_25438_tokens.len() == 1LL) {
		(*this)._method_push_err(_25438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_25438_tokens[1LL]._field_column != 2LL) {
		(*this)._method_push_err(_25438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_221d8b043_Directive>(new( std::nothrow ) _221d8b043_Directive(_25438_tokens[1LL],_25438_tokens.slice(2LL)));
}



inline void _222e5128e_Parser::_method_push_directive(jule::Ptr<_221d8b043_Directive> _27437_d) {
	if (_27437_d == nullptr) {
		return;
	}
	{
		auto &expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_4676524144:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_Directive> &_222e5128e_pd = *it;
			{
				if (_27437_d->_field_tag._field_kind == _222e5128e_pd->_field_tag._field_kind) {
					return;
				}
			}
			_iter_next_4676524144:;
			++it;
			goto _iter_begin_4676524144;
		}
		_iter_end_4676524144:;
	}
	(*this)._field_directives = jule::alloc_for_append((*this)._field_directives,1);(*this)._field_directives.push(_27437_d);
}



inline void _222e5128e_Parser::_method_process_comment(jule::Ptr<_221d8b043_Comment>& _28839_c) {
	if ((*this)._field_comment_group == nullptr) {
		(*this)._field_comment_group=jule::new_struct<_221d8b043_CommentGroup>(new( std::nothrow ) _221d8b043_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments = jule::alloc_for_append((*this)._field_comment_group->_field_comments,1);(*this)._field_comment_group->_field_comments.push(_28839_c);
}



inline jule::Ptr<_221d8b043_ScopeTree> _222e5128e_Parser::_method_build_scope(jule::Slice<_2220dce43_Token>& _29536_tokens) {
	jule::Ptr<_221d8b043_ScopeTree> _29617_s = _221e8c8b4_new_scope();
	_221e8c8b4_ScopeParser _29717_sp = _221e8c8b4_ScopeParser(this->self,jule::Ptr<_221d8b043_ScopeTree>(),jule::Slice<jule::Ptr<_221e8c8b4_Stmt>>(),jule::Int());
	_29717_sp._method_build(_29536_tokens,_29617_s);
	return _29617_s;
}



inline std::tuple<jule::Ptr<_221d8b043_TypeDecl>,jule::Bool> _222e5128e_Parser::_method___build_type(jule::Slice<_2220dce43_Token>& _30444_tokens,jule::Int* _30513_i,jule::Bool _30522_err) {
	_222e76d20_TypeBuilder _30617_tb = _222e76d20_TypeBuilder(this->self,_30444_tokens,_30513_i,_30522_err);
	jule::Ptr<_221d8b043_TypeDecl> _31218_decl;
	jule::Bool _31224_ok;
	std::tie(_31218_decl,_31224_ok) = _30617_tb._method_build();
	return std::make_tuple(_31218_decl,_31224_ok);
}



inline std::tuple<jule::Ptr<_221d8b043_TypeDecl>,jule::Bool> _222e5128e_Parser::_method_build_type(jule::Slice<_2220dce43_Token>& _31742_tokens,jule::Int* _31813_i,jule::Bool _31822_err) {
	_2220dce43_Token _31913_token = _31742_tokens[(*(_31813_i))];
	jule::Ptr<_221d8b043_TypeDecl> _32018_t;
	jule::Bool _32021_ok;
	std::tie(_32018_t,_32021_ok) = this->self->_method___build_type(_31742_tokens,_31813_i,_31822_err);
	if (_31822_err && (!(_32021_ok))) {
		this->self->_method_push_err(_31913_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
	}
	return std::make_tuple(_32018_t,_32021_ok);
}



inline jule::Ptr<_221d8b043_TypeAliasDecl> _222e5128e_Parser::_method_build_type_alias_decl(jule::Slice<_2220dce43_Token>& _32746_tokens) {
	jule::Int _32817_i = 1LL;
	if (_32817_i >= _32746_tokens.len()) {
		this->self->_method_push_err(_32746_tokens[_32817_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_221d8b043_TypeAliasDecl> _33317_tad = jule::new_struct<_221d8b043_TypeAliasDecl>(new( std::nothrow ) _221d8b043_TypeAliasDecl(jule::Ptr<_221d8b043_ScopeTree>(),jule::Bool(),jule::Bool(),_32746_tokens[1LL],_32746_tokens[1LL]._field_kind,jule::Ptr<_221d8b043_TypeDecl>(),jule::Ptr<_221d8b043_CommentGroup>()));
	_2220dce43_Token _33717_token = _32746_tokens[_32817_i];
	if (_33717_token._field_id != 2LLU) {
		this->self->_method_push_err(_33717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_32817_i)++;
	if (_32817_i >= _32746_tokens.len()) {
		this->self->_method_push_err(_32746_tokens[_32817_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _33317_tad;
	}
	_33717_token=_32746_tokens[_32817_i];
	if (_33717_token._field_id != 11LLU) {
		this->self->_method_push_err(_32746_tokens[_32817_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _33317_tad;
	}
	(_32817_i)++;
	if (_32817_i >= _32746_tokens.len()) {
		this->self->_method_push_err(_32746_tokens[_32817_i - 1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return _33317_tad;
	}
	jule::Ptr<_221d8b043_TypeDecl> _35818_t;
	jule::Bool _35821_ok;
	std::tie(_35818_t,_35821_ok) = this->self->_method_build_type(_32746_tokens,(&(_32817_i)),true);
	_33317_tad->_field_kind=_35818_t;
	if (_35821_ok && (_32817_i < _32746_tokens.len())) {
		this->self->_method_push_err(_32746_tokens[_32817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _33317_tad;
}



inline void _222e5128e_Parser::_method_build_var_type_and_expr(jule::Ptr<_221d8b043_VarDecl>& _36648_v,jule::Slice<_2220dce43_Token>& _36666_tokens) {
	jule::Int _36717_i = 0LL;
	_2220dce43_Token _36817_tok = _36666_tokens[_36717_i];
	if (_36817_tok._field_id == 11LLU) {
		(_36717_i)++;
		if ((_36717_i >= _36666_tokens.len()) || ((_36666_tokens[_36717_i]._field_id == 7LLU) && (_36666_tokens[_36717_i]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_36817_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
			return;
		}
		jule::Ptr<_221d8b043_TypeDecl> _37622_t;
		jule::Bool _37625_ok;
		std::tie(_37622_t,_37625_ok) = this->self->_method_build_type(_36666_tokens,(&(_36717_i)),true);
		if (_37625_ok) {
			_36648_v->_field_kind=_37622_t;
			if (_36717_i >= _36666_tokens.len()) {
				return;
			}
			_36817_tok=_36666_tokens[_36717_i];
		}
	}
	if (_36817_tok._field_id == 7LLU) {
		if (_36817_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_36817_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		jule::Slice<_2220dce43_Token> _39121_expr_tokens = _36666_tokens.slice(_36717_i + 1LL);
		if (_39121_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_36817_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;
		}
		_36648_v->_field_expr=this->self->_method_build_expr(_39121_expr_tokens);
	} else {
		this->self->_method_push_err(_36817_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _222e5128e_Parser::_method_build_var_common(jule::Ptr<_221d8b043_VarDecl>& _40241_v,jule::Slice<_2220dce43_Token> _40258_tokens) {
	_40241_v->_field_token=_40258_tokens[0LL];
	if (_40241_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_40241_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	_40241_v->_field_ident=_40241_v->_field_token._field_kind;
	_40241_v->_field_kind=nullptr;
	if (_40258_tokens.len() > 1LL) {
		_40258_tokens=_40258_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_40241_v,_40258_tokens);
	}
}



inline void _222e5128e_Parser::_method_build_var_begin(jule::Ptr<_221d8b043_VarDecl>& _41739_v,jule::Ptr<jule::Int> _41756_i,jule::Slice<_2220dce43_Token>& _41766_tokens) {
	_2220dce43_Token _41813_tok = _41766_tokens[(*(_41756_i))];
	{
		auto &_match_expr{ _41813_tok._field_id };
		if (!(_match_expr == (38LLU))) { goto _case_end_4676628960; }
		_case_begin_4676628960:;
		{
			_41739_v->_field_statically=true;
			goto _case_begin_4676629248;
		}
		goto _match_end_4676627088;
		_case_end_4676628960:;
		if (!(_match_expr == (34LLU))) { goto _case_end_4676629248; }
		_case_begin_4676629248:;
		{
			((*(_41756_i)))++;
			if ((*(_41756_i)) >= _41766_tokens.len()) {
				(*this)._method_push_err(_41813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			if (_41766_tokens[(*(_41756_i))]._field_id == 36LLU) {
				_41739_v->_field_mutable=true;
				((*(_41756_i)))++;
			}
		}
		goto _match_end_4676627088;
		_case_end_4676629248:;
		if (!(_match_expr == (9LLU))) { goto _case_end_4676629344; }
		_case_begin_4676629344:;
		{
			((*(_41756_i)))++;
			_41739_v->_field_constant=true;
		}
		goto _match_end_4676627088;
		_case_end_4676629344:;
		_case_begin_4676625696:;
		{
			(*this)._method_push_err(_41813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4676627088;
		_case_end_4676625696:;
		_match_end_4676627088:;
	}
	if ((*(_41756_i)) >= _41766_tokens.len()) {
		(*this)._method_push_err(_41813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_221d8b043_VarDecl> _222e5128e_Parser::_method_build_var(jule::Slice<_2220dce43_Token> _45133_tokens) {
	jule::Ptr<jule::Int> _45217_i = jule::new_ptr<jule::Int>(0LL);
	jule::Ptr<_221d8b043_VarDecl> _45317_v = jule::new_struct<_221d8b043_VarDecl>(new( std::nothrow ) _221d8b043_VarDecl(jule::Ptr<_221d8b043_ScopeTree>(),_45133_tokens[(*(_45217_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Ptr<_221d8b043_CommentGroup>(),jule::Ptr<_221d8b043_TypeDecl>(),jule::Ptr<_221d8b043_Expr>()));
	this->self->_method_build_var_begin(_45317_v,_45217_i,_45133_tokens);
	if ((*(_45217_i)) >= _45133_tokens.len()) {
		return nullptr;
	}
	_45133_tokens=_45133_tokens.slice((*(_45217_i)));
	if ((_45133_tokens[0LL]._field_id == 7LLU) && (_45133_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_45317_v->_field_reference=true;
		if (_45133_tokens.len() == 1LL) {
			return nullptr;
		}
		_45133_tokens=_45133_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_45317_v,_45133_tokens);
	return _45317_v;
}



inline jule::Ptr<_221d8b043_GenericDecl> _222e5128e_Parser::_method_build_generic(jule::Slice<_2220dce43_Token>& _47337_tokens) {
	if (_47337_tokens.len() > 1LL) {
		(*this)._method_push_err(_47337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_221d8b043_GenericDecl> _47717_g = jule::new_struct<_221d8b043_GenericDecl>(new( std::nothrow ) _221d8b043_GenericDecl(_47337_tokens[0LL],jule::Str()));
	if (_47717_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_47717_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_47717_g->_field_ident=_47717_g->_field_token._field_kind;
	return _47717_g;
}



inline jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> _222e5128e_Parser::_method_build_generics(jule::Slice<_2220dce43_Token>& _48838_tokens,_2220dce43_Token& _48856_error_token) {
	if (_48838_tokens.len() == 0LL) {
		(*this)._method_push_err(_48856_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Slice<_2220dce43_Token>> _49418_parts;
	jule::Slice<_23886c227_Log> _49425_errors;
	std::tie(_49418_parts,_49425_errors) = _222e5128e_parts(_48838_tokens,8LLU,true);
	if (_49425_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_49425_errors);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> _50017_generics = jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>::alloc(0LL,static_cast<jule::I64>(_49418_parts.len()));
	{
		auto &expr = _49418_parts;
		auto it = expr.begin();
		_iter_begin_4684024128:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _222e5128e_part = *it;
			{
				_50017_generics.push((*this)._method_build_generic(_222e5128e_part));
			}
			_iter_next_4684024128:;
			++it;
			goto _iter_begin_4684024128;
		}
		_iter_end_4684024128:;
	}
	return _50017_generics;
}



inline jule::Ptr<_221d8b043_ParamDecl> _222e5128e_Parser::_method_build_self_param(jule::Slice<_2220dce43_Token> _50839_tokens) {
	if (_50839_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_221d8b043_ParamDecl> _51317_param = jule::new_struct<_221d8b043_ParamDecl>(new( std::nothrow ) _221d8b043_ParamDecl());
	jule::Int _51617_i = 0LL;
	if (_50839_tokens[_51617_i]._field_id == 36LLU) {
		_51317_param->_field_mutable=true;
		(_51617_i)++;
		if (_51617_i >= _50839_tokens.len()) {
			(*this)._method_push_err(_50839_tokens[_51617_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_50839_tokens[_51617_i]._field_kind == jule::Str("&", 1)) {
		_51317_param->_field_ident=jule::Str("&", 1);
		(_51617_i)++;
		if (_51617_i >= _50839_tokens.len()) {
			(*this)._method_push_err(_50839_tokens[_51617_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_50839_tokens[_51617_i]._field_id == 28LLU) {
		_51317_param->_field_ident+=jule::Str("self", 4);
		_51317_param->_field_token=_50839_tokens[_51617_i];
		(_51617_i)++;
		if (_51617_i < _50839_tokens.len()) {
			(*this)._method_push_err(_50839_tokens[_51617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	}
	return _51317_param;
}



inline void _222e5128e_Parser::_method_param_type_begin(jule::Ptr<_221d8b043_ParamDecl>& _54740_param,jule::Int& _54764_i,jule::Slice<_2220dce43_Token>& _54773_tokens) {
	for (; _54764_i < _54773_tokens.len(); (_54764_i)++) {
		{
			_2220dce43_Token _54917_token = _54773_tokens[_54764_i];
			if (_54917_token._field_id != 7LLU) {
				return;
			} else if (_54917_token._field_kind != jule::Str("...", 3)) {
				return;
			}
			if (_54740_param->_field_variadic) {
				(*this)._method_push_err(_54917_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_4684050320;
			}
			_54740_param->_field_variadic=true;
		}
	_iter_next_4684050320:;
	}
	_iter_end_4684050320:;
}



inline void _222e5128e_Parser::_method_build_param_type(jule::Ptr<_221d8b043_ParamDecl>& _56441_param,jule::Slice<_2220dce43_Token>& _56465_tokens) {
	jule::Int _56517_i = 0LL;
	this->self->_method_param_type_begin(_56441_param,_56517_i,_56465_tokens);
	if (_56517_i >= _56465_tokens.len()) {
		return;
	}
	std::tie(_56441_param->_field_kind,std::ignore) = this->self->_method_build_type(_56465_tokens,(&(_56517_i)),true);
	if (_56517_i < _56465_tokens.len()) {
		this->self->_method_push_err(_56465_tokens[_56517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _222e5128e_Parser::_method_param_body_id(jule::Ptr<_221d8b043_ParamDecl> _57732_param,_2220dce43_Token _57751_token) {
	if (_2220dce43_is_ignore_ident(_57751_token._field_kind)) {
		_57732_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_57732_param->_field_ident=_57751_token._field_kind;
}



inline void _222e5128e_Parser::_method_build_param_body(jule::Ptr<_221d8b043_ParamDecl>& _58541_param,jule::Ptr<jule::Int> _58564_i,jule::Slice<_2220dce43_Token> _58577_tokens) {
	this->self->_method_param_body_id(_58541_param,_58577_tokens[(*(_58564_i))]);
	_2220dce43_Token _58717_tok = _58577_tokens[(*(_58564_i))];
	if (((*(_58564_i)) + 1LL) >= _58577_tokens.len()) {
		return;
	} else if (((_58577_tokens.len() - (*(_58564_i))) - 1LL) < 2LL) {
		this->self->_method_push_err(_58717_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return;
	}
	_58717_tok=_58577_tokens[(*(_58564_i)) + 1LL];
	if (_58717_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_58541_param,_58577_tokens);
		return;
	}
	_58577_tokens=_58577_tokens.slice((*(_58564_i)) + 2LL);
	this->self->_method_build_param_type(_58541_param,_58577_tokens);
}



inline jule::Ptr<_221d8b043_ParamDecl> _222e5128e_Parser::_method_build_param(jule::Slice<_2220dce43_Token> _60635_tokens) {
	jule::Ptr<_221d8b043_ParamDecl> _60717_param = jule::new_struct<_221d8b043_ParamDecl>(new( std::nothrow ) _221d8b043_ParamDecl(_60635_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_221d8b043_TypeDecl>(),jule::Str()));
	if (_60717_param->_field_token._field_id == 36LLU) {
		_60717_param->_field_mutable=true;
		if (_60635_tokens.len() == 1LL) {
			this->self->_method_push_err(_60635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_60635_tokens=_60635_tokens.slice(1LL);
		_60717_param->_field_token=_60635_tokens[0LL];
	}
	if (_60635_tokens.len() >= 3LL) {
		if ((_60717_param->_field_token._field_id == 7LLU) && (_60717_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_60635_tokens.len() == 1LL) {
				this->self->_method_push_err(_60635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((_60635_tokens[1LL]._field_id == 2LLU) && (_60635_tokens[2LL]._field_id == 11LLU)) {
				_60717_param->_field_reference=true;
				_60635_tokens=_60635_tokens.slice(1LL);
				_60717_param->_field_token=_60635_tokens[0LL];
			}
		}
	}
	if (_60717_param->_field_token._field_id != 2LLU) {
		_60717_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_60717_param,_60635_tokens);
	} else {
		jule::Ptr<jule::Int> _64321_i = jule::new_ptr<jule::Int>(0LL);
		this->self->_method_build_param_body(_60717_param,_64321_i,_60635_tokens);
	}
	return _60717_param;
}



inline void _222e5128e_Parser::_method_check_params(jule::Slice<jule::Ptr<_221d8b043_ParamDecl>>& _65036_params) {
	{
		auto &expr = _65036_params;
		auto it = expr.begin();
		_iter_begin_4684107840:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_ParamDecl> _222e5128e_param = *it;
			{
				if (_222e5128e_param->_method_is_self() || (_222e5128e_param->_field_kind != nullptr)) {
					goto _iter_next_4684107840;
				}
				if (_222e5128e_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_222e5128e_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
				} else {
					_222e5128e_param->_field_kind=jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_222e5128e_param->_field_token,jule::Any(jule::new_struct<_221d8b043_IdentTypeDecl>(new( std::nothrow ) _221d8b043_IdentTypeDecl(_222e5128e_param->_field_token,_222e5128e_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_221d8b043_TypeDecl>>())))));
					_222e5128e_param->_field_ident=jule::Str("<anonymous>", 11);
					_222e5128e_param->_field_token=_2220dce43_Token();
				}
			}
			_iter_next_4684107840:;
			++it;
			goto _iter_begin_4684107840;
		}
		_iter_end_4684107840:;
	}
}



inline jule::Slice<jule::Ptr<_221d8b043_ParamDecl>> _222e5128e_Parser::_method_build_params(jule::Slice<_2220dce43_Token>& _67137_tokens,jule::Bool _67154_method) {
	jule::Slice<jule::Slice<_2220dce43_Token>> _67218_parts;
	jule::Slice<_23886c227_Log> _67225_errs;
	std::tie(_67218_parts,_67225_errs) = _222e5128e_parts(_67137_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_67225_errs);
	if (_67218_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_221d8b043_ParamDecl>> _67817_params = nullptr;
	if (_67154_method && (_67218_parts.len() > 0LL)) {
		jule::Ptr<_221d8b043_ParamDecl> _68021_param = this->self->_method_build_self_param(_67218_parts[0LL]);
		if ((_68021_param != nullptr) && _68021_param->_method_is_self()) {
			_67817_params.push(_68021_param);
			_67218_parts=_67218_parts.slice(1LL);
		}
	}
	{
		auto &expr = _67218_parts;
		auto it = expr.begin();
		_iter_begin_4684122848:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _222e5128e_part = *it;
			{
				jule::Ptr<_221d8b043_ParamDecl> _68821_param = this->self->_method_build_param(_222e5128e_part);
				if (_68821_param != nullptr) {
					_67817_params.push(_68821_param);
				}
			}
			_iter_next_4684122848:;
			++it;
			goto _iter_begin_4684122848;
		}
		_iter_end_4684122848:;
	}
	this->self->_method_check_params(_67817_params);
	return _67817_params;
}



inline std::tuple<jule::Ptr<_221d8b043_RetTypeDecl>,jule::Bool> _222e5128e_Parser::_method_build_multi_ret_type(jule::Slice<_2220dce43_Token>& _69845_tokens,jule::Int& _69867_i) {
	jule::Ptr<_221d8b043_RetTypeDecl> _69877_t = jule::Ptr<_221d8b043_RetTypeDecl>();
	jule::Bool _69894_ok = jule::Bool();
	_69877_t=jule::new_struct<_221d8b043_RetTypeDecl>(new( std::nothrow ) _221d8b043_RetTypeDecl());
	(_69867_i)++;
	if (_69867_i >= _69845_tokens.len()) {
		(_69867_i)--;
		std::tie(_69877_t->_field_kind,_69894_ok) = this->self->_method_build_type(_69845_tokens,(&(_69867_i)),false);
		return std::make_tuple(_69877_t,_69894_ok);
	}
	(_69867_i)--;
	jule::Slice<_2220dce43_Token> _70817_range_tokens = _222e5128e_range(_69867_i,jule::Str("(", 1),jule::Str(")", 1),_69845_tokens);
	jule::Slice<jule::Slice<_2220dce43_Token>> _71018_parts;
	jule::Slice<_23886c227_Log> _71025_errs;
	std::tie(_71018_parts,_71025_errs) = _222e5128e_parts(_70817_range_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_71025_errs);
	if (_71018_parts.len() == 0LL) {
		return std::make_tuple(_69877_t,_69894_ok);
	}
	jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> _71617_types = jule::Slice<jule::Ptr<_221d8b043_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_71018_parts.len()));
	_69877_t->_field_idents=jule::Slice<_2220dce43_Token>::alloc(0LL,static_cast<jule::I64>(_71018_parts.len()));
	{
		auto &expr = _71018_parts;
		auto it = expr.begin();
		_iter_begin_4684144784:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _222e5128e_part = *it;
			{
				_2220dce43_Token _71921_token = _222e5128e_part[0LL];
				jule::Int _72021_offset = 0LL;
				if (_222e5128e_part.len() > 1LL) {
					_71921_token=_222e5128e_part[1LL];
					if (_71921_token._field_id == 11LLU) {
						_72021_offset=2LL;
						if (_222e5128e_part.len() < 3LL) {
							this->self->_method_push_err(_71921_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
							goto _iter_next_4684144784;
						}
					}
				}
				_71921_token=_222e5128e_part[0LL];
				if (_72021_offset == 2LL) {
					if (_71921_token._field_id != 2LLU) {
					}
					_69877_t->_field_idents = jule::alloc_for_append(_69877_t->_field_idents,1);_69877_t->_field_idents.push(_71921_token);
				} else {
					_71921_token._field_kind=jule::Str("_", 1);
					_69877_t->_field_idents = jule::alloc_for_append(_69877_t->_field_idents,1);_69877_t->_field_idents.push(_71921_token);
				}
				jule::Ptr<_221d8b043_TypeDecl> _74522_t;
				std::tie(_74522_t,std::ignore) = this->self->_method_build_type(_222e5128e_part,(&(_72021_offset)),true);
				if (_72021_offset < _222e5128e_part.len()) {
					this->self->_method_push_err(_222e5128e_part[_72021_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_71617_types.push(_74522_t);
			}
			_iter_next_4684144784:;
			++it;
			goto _iter_begin_4684144784;
		}
		_iter_end_4684144784:;
	}
	if (_71617_types.len() > 1LL) {
		_69877_t->_field_kind=jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_69845_tokens[0LL],jule::Any(jule::new_struct<_221d8b043_TupleTypeDecl>(new( std::nothrow ) _221d8b043_TupleTypeDecl(_71617_types)))));
	} else {
		_69877_t->_field_kind=_71617_types[0LL];
	}
	_69894_ok=true;
	return std::make_tuple(_69877_t,_69894_ok);
}



inline std::tuple<jule::Ptr<_221d8b043_RetTypeDecl>,jule::Bool> _222e5128e_Parser::_method_build_ret_type(jule::Slice<_2220dce43_Token>& _76839_tokens,jule::Int& _76861_i) {
	jule::Ptr<_221d8b043_RetTypeDecl> _76871_t = jule::Ptr<_221d8b043_RetTypeDecl>();
	jule::Bool _76888_ok = jule::Bool();
	_76871_t=jule::new_struct<_221d8b043_RetTypeDecl>(new( std::nothrow ) _221d8b043_RetTypeDecl());
	if (_76861_i >= _76839_tokens.len()) {
		return std::make_tuple(_76871_t,_76888_ok);
	}
	_2220dce43_Token _77417_token = _76839_tokens[_76861_i];
	{
		auto &_match_expr{ _77417_token._field_id };
		if (!(_match_expr == (3LLU))) { goto _case_end_4684174528; }
		_case_begin_4684174528:;
		{
			if (_77417_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_76871_t,_76888_ok);
			}
		}
		goto _match_end_4684174448;
		_case_end_4684174528:;
		if (!(_match_expr == (7LLU))) { goto _case_end_4684174624; }
		_case_begin_4684174624:;
		{
			if (_77417_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_76871_t,_76888_ok);
			}
		}
		goto _match_end_4684174448;
		_case_end_4684174624:;
		if (!(_match_expr == (11LLU))) { goto _case_end_4684174720; }
		_case_begin_4684174720:;
		{
			if ((_76861_i + 1LL) >= _76839_tokens.len()) {
				this->self->_method_push_err(_77417_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
				return std::make_tuple(_76871_t,_76888_ok);
			}
			(_76861_i)++;
			_77417_token=_76839_tokens[_76861_i];
			if (_77417_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _77417_token._field_kind };
					if (!(_match_expr == (jule::Str("(", 1)))) { goto _case_end_4684180544; }
					_case_begin_4684180544:;
					{
						jule::Ptr<_221d8b043_RetTypeDecl> _79730_decl;
						jule::Bool _79736_ok;
						std::tie(_79730_decl,_79736_ok) = this->self->_method_build_multi_ret_type(_76839_tokens,_76861_i);
						_76871_t = _79730_decl;
						_76888_ok = _79736_ok;
						return std::make_tuple(_76871_t,_76888_ok);
					}
					goto _match_end_4684182704;
					_case_end_4684180544:;
					if (!(_match_expr == (jule::Str("{", 1)))) { goto _case_end_4684182912; }
					_case_begin_4684182912:;
					{
						this->self->_method_push_err(_77417_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
						return std::make_tuple(_76871_t,_76888_ok);
					}
					goto _match_end_4684182704;
					_case_end_4684182912:;
					_match_end_4684182704:;
				}
			}
			std::tie(_76871_t->_field_kind,_76888_ok) = this->self->_method_build_type(_76839_tokens,(&(_76861_i)),true);
			return std::make_tuple(_76871_t,_76888_ok);
		}
		goto _match_end_4684174448;
		_case_end_4684174720:;
		_match_end_4684174448:;
	}
	(_76861_i)++;
	this->self->_method_push_err(_77417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_76871_t,_76888_ok);
}



inline jule::Ptr<_221d8b043_FnDecl> _222e5128e_Parser::_method_build_fn_prototype(jule::Slice<_2220dce43_Token>& _81643_tokens,jule::Int& _81665_i,jule::Bool _81673_method) {
	jule::Ptr<_221d8b043_FnDecl> _81717_f = jule::new_struct<_221d8b043_FnDecl>(new( std::nothrow ) _221d8b043_FnDecl(_81643_tokens[_81665_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Ptr<_221d8b043_CommentGroup>(),jule::Ptr<_221d8b043_ScopeTree>(),jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>(),jule::Ptr<_221d8b043_RetTypeDecl>(),jule::Slice<jule::Ptr<_221d8b043_ParamDecl>>()));
	if (_81717_f->_field_token._field_id == 38LLU) {
		_81717_f->_field_statically=true;
		(_81665_i)++;
		if (_81665_i >= _81643_tokens.len()) {
			this->self->_method_push_err(_81717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_81717_f->_field_token=_81643_tokens[_81665_i];
	}
	if (_81717_f->_field_token._field_id == 35LLU) {
		_81717_f->_field_unsafety=true;
		(_81665_i)++;
		if (_81665_i >= _81643_tokens.len()) {
			this->self->_method_push_err(_81717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_81717_f->_field_token=_81643_tokens[_81665_i];
	}
	(_81665_i)++;
	if (_81665_i >= _81643_tokens.len()) {
		this->self->_method_push_err(_81717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_2220dce43_Token _85013_tok = _81643_tokens[_81665_i];
	if (_85013_tok._field_id == 2LLU) {
		(_81665_i)++;
		if (_81665_i >= _81643_tokens.len()) {
			this->self->_method_push_err(_81717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_81717_f->_field_ident=_85013_tok._field_kind;
	} else {
		_81717_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_2220dce43_Token _86213_error_token = _81643_tokens[_81665_i];
	jule::Slice<_2220dce43_Token> _86317_generics_tokens = _222e5128e_range(_81665_i,jule::Str("[", 1),jule::Str("]", 1),_81643_tokens);
	if (_86317_generics_tokens != nullptr) {
		_81717_f->_field_generics=this->self->_method_build_generics(_86317_generics_tokens,_86213_error_token);
	}
	if (_81643_tokens[_81665_i]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_81643_tokens[_81665_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_2220dce43_Token> _87317_params_toks = _222e5128e_range(_81665_i,jule::Str("(", 1),jule::Str(")", 1),_81643_tokens);
	if (_87317_params_toks.len() > 0LL) {
		_81717_f->_field_params=this->self->_method_build_params(_87317_params_toks,_81673_method);
	}
	if (_81665_i < _81643_tokens.len()) {
		_2220dce43_Token _87917_token = _81643_tokens[_81665_i];
		if ((_87917_token._field_id == 7LLU) && (_87917_token._field_kind == jule::Str("!", 1))) {
			_81717_f->_field_exceptional=true;
			(_81665_i)++;
		}
	}
	std::tie(_81717_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_81643_tokens,_81665_i);
	return _81717_f;
}



inline jule::Ptr<_221d8b043_FnDecl> _222e5128e_Parser::_method_build_fn(jule::Slice<_2220dce43_Token>& _89233_tokens,jule::Bool _89250_method,jule::Bool _89264_prototype) {
	jule::Int _89317_i = 0LL;
	jule::Ptr<_221d8b043_FnDecl> _89417_f = this->self->_method_build_fn_prototype(_89233_tokens,_89317_i,_89250_method);
	if (_89264_prototype) {
		if (_89317_i < _89233_tokens.len()) {
			this->self->_method_push_err(_89233_tokens[_89317_i + 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		return _89417_f;
	} else if (_89417_f == nullptr) {
		return _89417_f;
	}
	if (_89317_i >= _89233_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_89417_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_2220dce43_Token> _91017_block_tokens = _222e5128e_range(_89317_i,jule::Str("{", 1),jule::Str("}", 1),_89233_tokens);
	if (_91017_block_tokens != nullptr) {
		_89417_f->_field_scope=this->self->_method_build_scope(_91017_block_tokens);
		_89417_f->_field_scope->_field_unsafety=_89417_f->_field_unsafety;
		if (_89317_i < _89233_tokens.len()) {
			this->self->_method_push_err(_89233_tokens[_89317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_89417_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _89417_f;
}



inline jule::Slice<_2220dce43_Token> _222e5128e_Parser::_method_get_use_decl_selectors(jule::Slice<_2220dce43_Token> _92645_tokens) {
	jule::Int _92717_i = 0LL;
	_92645_tokens=_222e5128e_range(_92717_i,jule::Str("{", 1),jule::Str("}", 1),_92645_tokens);
	jule::Slice<jule::Slice<_2220dce43_Token>> _92918_parts;
	jule::Slice<_23886c227_Log> _92925_errs;
	std::tie(_92918_parts,_92925_errs) = _222e5128e_parts(_92645_tokens,8LLU,true);
	if (_92925_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_92925_errs);
		return nullptr;
	}
	jule::Slice<_2220dce43_Token> _93517_selectors = jule::Slice<_2220dce43_Token>::alloc(0LL,static_cast<jule::I64>(_92918_parts.len()));
	{
		auto &expr = _92918_parts;
		auto it = expr.begin();
		_iter_begin_4680293088:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _222e5128e_part = *it;
			{
				if (_222e5128e_part.len() > 1LL) {
					(*this)._method_push_err(_222e5128e_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_2220dce43_Token _94021_tok = _222e5128e_part[0LL];
				if ((_94021_tok._field_id != 2LLU) && (_94021_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_94021_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_4680293088;
				}
				_93517_selectors.push(_94021_tok);
			}
			_iter_next_4680293088:;
			++it;
			goto _iter_begin_4680293088;
		}
		_iter_end_4680293088:;
	}
	return _93517_selectors;
}



inline void _222e5128e_Parser::_method_build_cpp_use_decl(jule::Ptr<_221d8b043_UseDecl>& _95142_decl,jule::Slice<_2220dce43_Token>& _95159_tokens) {
	if (_95159_tokens.len() > 1LL) {
		(*this)._method_push_err(_95159_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_2220dce43_Token _95513_token = _95159_tokens[0LL];
	if ((_95513_token._field_id != 6LLU) || ((_95513_token._field_kind[0LL] != '`') && (_95513_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_95513_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	_95142_decl->_field_cpp_linked=true;
	_95142_decl->_field_link_path=_95513_token._field_kind.slice(1LL,_95513_token._field_kind.len() - 1LL);
	if ((!(_23886cd0a_is_std_header_path(_95142_decl->_field_link_path)))) {
		_95142_decl->_field_link_path=_23894b9cc_join(jule::Slice<jule::Str>({_95513_token._field_file->_method_dir(),_95142_decl->_field_link_path}));
	}
}



inline void _222e5128e_Parser::_method_build_std_use_decl(jule::Ptr<_221d8b043_UseDecl>& _96742_decl,jule::Slice<_2220dce43_Token> _96762_tokens) {
	_96742_decl->_field_std=true;
	_2220dce43_Token _97017_token = _96762_tokens[0LL];
	if (_96762_tokens.len() < 3LL) {
		(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_96762_tokens=_96762_tokens.slice(2LL);
	_97017_token=_96762_tokens[_96762_tokens.len() - 1LL];
	{
		auto &_match_expr{ _97017_token._field_id };
		if (!(_match_expr == (23LLU))) { goto _case_end_4680329632; }
		_case_begin_4680329632:;
		{
			(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4680329552;
		_case_end_4680329632:;
		if (!(_match_expr == (3LLU))) { goto _case_end_4680329808; }
		_case_begin_4680329808:;
		{
			if (_97017_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			jule::Slice<_2220dce43_Token> _98821_selectors = nullptr;
			std::tie(_96762_tokens,_98821_selectors) = _222e5128e_range_last(_96762_tokens);
			_96742_decl->_field_selected=(*this)._method_get_use_decl_selectors(_98821_selectors);
			if (_96762_tokens.len() == 0LL) {
				(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_97017_token=_96762_tokens[_96762_tokens.len() - 1LL];
			if (_97017_token._field_id != 23LLU) {
				(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_96762_tokens=_96762_tokens.slice(0LL,_96762_tokens.len() - 1LL);
			if (_96762_tokens.len() == 0LL) {
				(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		goto _match_end_4680329552;
		_case_end_4680329808:;
		if (!(_match_expr == (7LLU))) { goto _case_end_4680329904; }
		_case_begin_4680329904:;
		{
			if (_97017_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_96762_tokens=_96762_tokens.slice(0LL,_96762_tokens.len() - 1LL);
			if (_96762_tokens.len() == 0LL) {
				(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_97017_token=_96762_tokens[_96762_tokens.len() - 1LL];
			if (_97017_token._field_id != 23LLU) {
				(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_96762_tokens=_96762_tokens.slice(0LL,_96762_tokens.len() - 1LL);
			if (_96762_tokens.len() == 0LL) {
				(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_96742_decl->_field_full=true;
		}
		goto _match_end_4680329552;
		_case_end_4680329904:;
		_match_end_4680329552:;
	}
	_96742_decl->_field_link_path=jule::Str("std::", 5) + _222e5128e_tokstoa(_96762_tokens);
}



inline void _222e5128e_Parser::_method_build_ident_use_decl(jule::Ptr<_221d8b043_UseDecl>& _103144_decl,jule::Slice<_2220dce43_Token> _103164_tokens) {
	_103144_decl->_field_std=false;
	_2220dce43_Token _103417_token = _103164_tokens[_103164_tokens.len() - 1LL];
	{
		auto &_match_expr{ _103417_token._field_id };
		if (!(_match_expr == (23LLU))) { goto _case_end_4680360896; }
		_case_begin_4680360896:;
		{
			(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4680360704;
		_case_end_4680360896:;
		if (!(_match_expr == (3LLU))) { goto _case_end_4680360992; }
		_case_begin_4680360992:;
		{
			if (_103417_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			jule::Slice<_2220dce43_Token> _104621_selectors = nullptr;
			std::tie(_103164_tokens,_104621_selectors) = _222e5128e_range_last(_103164_tokens);
			_103144_decl->_field_selected=(*this)._method_get_use_decl_selectors(_104621_selectors);
			if (_103164_tokens.len() == 0LL) {
				(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_103417_token=_103164_tokens[_103164_tokens.len() - 1LL];
			if (_103417_token._field_id != 23LLU) {
				(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_103164_tokens=_103164_tokens.slice(0LL,_103164_tokens.len() - 1LL);
			if (_103164_tokens.len() == 0LL) {
				(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		goto _match_end_4680360704;
		_case_end_4680360992:;
		if (!(_match_expr == (7LLU))) { goto _case_end_4680361088; }
		_case_begin_4680361088:;
		{
			if (_103417_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_103164_tokens=_103164_tokens.slice(0LL,_103164_tokens.len() - 1LL);
			if (_103164_tokens.len() == 0LL) {
				(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_103417_token=_103164_tokens[_103164_tokens.len() - 1LL];
			if (_103417_token._field_id != 23LLU) {
				(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_103164_tokens=_103164_tokens.slice(0LL,_103164_tokens.len() - 1LL);
			if (_103164_tokens.len() == 0LL) {
				(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
			_103144_decl->_field_full=true;
		}
		goto _match_end_4680360704;
		_case_end_4680361088:;
		_match_end_4680360704:;
	}
	_103144_decl->_field_link_path=_222e5128e_tokstoa(_103164_tokens);
}



inline void _222e5128e_Parser::_method_parse_use_decl(jule::Ptr<_221d8b043_UseDecl>& _109638_decl,jule::Slice<_2220dce43_Token> _109658_tokens) {
	if (_109638_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_109638_decl,_109658_tokens);
		return;
	}
	_2220dce43_Token _110217_token = _109658_tokens[0LL];
	if (_110217_token._field_id != 2LLU) {
		(*this)._method_push_err(_110217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	if ((_109658_tokens.len() > 2LL) && (_109658_tokens[1LL]._field_id == 12LLU)) {
		_109638_decl->_field_alias=_110217_token._field_kind;
		if (_109658_tokens[2LL]._field_id != 2LLU) {
			(*this)._method_push_err(_110217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;
		}
		_109658_tokens=_109658_tokens.slice(2LL);
		_110217_token=_109658_tokens[0LL];
	}
	
	{
		if (!((_110217_token._field_kind == jule::Str("std", 3)))) { goto _case_end_4678664576; }
		_case_begin_4678664576:;
		{
			(*this)._method_build_std_use_decl(_109638_decl,_109658_tokens);
		}
		goto _match_end_4678663664;
		_case_end_4678664576:;
		_case_begin_4678663776:;
		{
			(*this)._method_build_ident_use_decl(_109638_decl,_109658_tokens);
		}
		goto _match_end_4678663664;
		_case_end_4678663776:;
		_match_end_4678663664:;
	}
}



inline jule::Ptr<_221d8b043_UseDecl> _222e5128e_Parser::_method_build_use_decl(jule::Slice<_2220dce43_Token> _113137_tokens,jule::Bool _113154_cpp_linked) {
	jule::Ptr<_221d8b043_UseDecl> _113217_decl = jule::new_struct<_221d8b043_UseDecl>(new( std::nothrow ) _221d8b043_UseDecl(_113137_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_2220dce43_Token>(),_113154_cpp_linked,jule::Bool()));
	if (_113137_tokens.len() < 2LL) {
		(*this)._method_push_err(_113217_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	}
	_113137_tokens=_113137_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_113217_decl,_113137_tokens);
	return _113217_decl;
}



inline jule::Ptr<_221d8b043_Expr> _222e5128e_Parser::_method_build_enum_item_expr(jule::Ptr<jule::Int> _114544_i,jule::Slice<_2220dce43_Token>& _114558_tokens) {
	jule::Int _114617_brace_n = 0LL;
	jule::Int _114713_expr_start = (*(_114544_i));
	for (; (*(_114544_i)) < _114558_tokens.len(); ((*(_114544_i)))++) {
		{
			_2220dce43_Token _114917_t = _114558_tokens[(*(_114544_i))];
			if (_114917_t._field_id == 3LLU) {
				{
					auto &_match_expr{ _114917_t._field_kind };
					if (!(_match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4678685504; }
					_case_begin_4678685504:;
					{
						(_114617_brace_n)++;
						goto _iter_next_4678680256;
					}
					goto _match_end_4678684128;
					_case_end_4678685504:;
					_case_begin_4678683440:;
					{
						(_114617_brace_n)--;
					}
					goto _match_end_4678684128;
					_case_end_4678683440:;
					_match_end_4678684128:;
				}
			}
			if (_114617_brace_n > 0LL) {
				goto _iter_next_4678680256;
			}
			if ((_114917_t._field_id == 8LLU) || (((*(_114544_i)) + 1LL) >= _114558_tokens.len())) {
				jule::Slice<_2220dce43_Token> _116825_expr_tokens = nullptr;
				if (_114917_t._field_id == 8LLU) {
					_116825_expr_tokens=_114558_tokens.slice(_114713_expr_start,(*(_114544_i)));
				} else {
					_116825_expr_tokens=_114558_tokens.slice(_114713_expr_start);
				}
				return this->self->_method_build_expr(_116825_expr_tokens);
			}
		}
	_iter_next_4678680256:;
	}
	_iter_end_4678680256:;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_221d8b043_EnumItemDecl>> _222e5128e_Parser::_method_build_enum_items(jule::Slice<_2220dce43_Token>& _118041_tokens) {
	jule::Slice<jule::Ptr<_221d8b043_EnumItemDecl>> _118117_items = jule::Slice<jule::Ptr<_221d8b043_EnumItemDecl>>::alloc(0LL,1LL);
	jule::Ptr<jule::Int> _118217_i = jule::new_ptr<jule::Int>(0LL);
	for (; (*(_118217_i)) < _118041_tokens.len(); ((*(_118217_i)))++) {
		{
			_2220dce43_Token _118421_t = _118041_tokens[(*(_118217_i))];
			if (_118421_t._field_id == 18LLU) {
				goto _iter_next_4683066352;
			}
			jule::Ptr<_221d8b043_EnumItemDecl> _118921_item = jule::new_struct<_221d8b043_EnumItemDecl>(new( std::nothrow ) _221d8b043_EnumItemDecl());
			_118921_item->_field_token=_118421_t;
			if (_118921_item->_field_token._field_id != 2LLU) {
				this->self->_method_push_err(_118921_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			}
			_118921_item->_field_ident=_118921_item->_field_token._field_kind;
			if ((((*(_118217_i)) + 1LL) >= _118041_tokens.len()) || (_118041_tokens[(*(_118217_i)) + 1LL]._field_id == 8LLU)) {
				if (((*(_118217_i)) + 1LL) < _118041_tokens.len()) {
					((*(_118217_i)))++;
				}
				_118117_items.push(_118921_item);
				goto _iter_next_4683066352;
			}
			((*(_118217_i)))++;
			_118421_t=_118041_tokens[(*(_118217_i))];
			((*(_118217_i)))++;
			if ((_118421_t._field_id != 7LLU) || (_118421_t._field_kind != jule::Str("=", 1))) {
				this->self->_method_push_err(_118421_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				this->self->_method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_4683066352;
			}
			if (((*(_118217_i)) >= _118041_tokens.len()) || (_118041_tokens[(*(_118217_i))]._field_id == 8LLU)) {
				this->self->_method_push_err(_118421_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_4683066352;
			}
			_118921_item->_field_expr=this->self->_method_build_enum_item_expr(_118217_i,_118041_tokens);
			_118117_items.push(_118921_item);
		}
	_iter_next_4683066352:;
	}
	_iter_end_4683066352:;
	return _118117_items;
}



inline jule::Ptr<_221d8b043_EnumDecl> _222e5128e_Parser::_method_build_enum_decl(jule::Slice<_2220dce43_Token>& _122140_tokens) {
	if ((_122140_tokens.len() < 2LL) || (_122140_tokens.len() < 3LL)) {
		this->self->_method_push_err(_122140_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_221d8b043_EnumDecl> _122617_e = jule::new_struct<_221d8b043_EnumDecl>(new( std::nothrow ) _221d8b043_EnumDecl(_122140_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_221d8b043_TypeDecl>(),jule::Slice<jule::Ptr<_221d8b043_EnumItemDecl>>(),jule::Ptr<_221d8b043_CommentGroup>()));
	if (_122617_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_122617_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_122617_e->_field_ident=_122617_e->_field_token._field_kind;
	jule::Int _123417_i = 2LL;
	if (_122140_tokens[_123417_i]._field_id == 11LLU) {
		(_123417_i)++;
		if (_123417_i >= _122140_tokens.len()) {
			this->self->_method_push_err(_122140_tokens[_123417_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _122617_e;
		}
		std::tie(_122617_e->_field_kind,std::ignore) = this->self->_method_build_type(_122140_tokens,(&(_123417_i)),true);
		if (_123417_i >= _122140_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_122617_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _122617_e;
		}
	} else {
		_122617_e->_field_kind=nullptr;
	}
	jule::Slice<_2220dce43_Token> _125117_item_tokens = _222e5128e_range(_123417_i,jule::Str("{", 1),jule::Str("}", 1),_122140_tokens);
	if (_125117_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_122617_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _122617_e;
	} else if (_123417_i < _122140_tokens.len()) {
		this->self->_method_push_err(_122140_tokens[_123417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_122617_e->_field_items=this->self->_method_build_enum_items(_125117_item_tokens);
	return _122617_e;
}



inline jule::Ptr<_221d8b043_FieldDecl> _222e5128e_Parser::_method_build_field(jule::Slice<_2220dce43_Token> _126435_tokens) {
	jule::Ptr<_221d8b043_FieldDecl> _126517_f = jule::new_struct<_221d8b043_FieldDecl>(new( std::nothrow ) _221d8b043_FieldDecl());
	_126517_f->_field_public=_126435_tokens[0LL]._field_id == 21LLU;
	if (_126517_f->_field_public) {
		if (_126435_tokens.len() == 1LL) {
			this->self->_method_push_err(_126435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_126435_tokens=_126435_tokens.slice(1LL);
	}
	_126517_f->_field_mutable=_126435_tokens[0LL]._field_id == 36LLU;
	if (_126517_f->_field_mutable) {
		if (_126435_tokens.len() == 1LL) {
			this->self->_method_push_err(_126435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_126435_tokens=_126435_tokens.slice(1LL);
	}
	_126517_f->_field_token=_126435_tokens[0LL];
	if (_126517_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_126517_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_126517_f->_field_ident=_126517_f->_field_token._field_kind;
	if (_126435_tokens.len() == 1LL) {
		this->self->_method_push_err(_126435_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_126435_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_126435_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	_126435_tokens=_126435_tokens.slice(2LL);
	jule::Int _130217_i = 0LL;
	std::tie(_126517_f->_field_kind,std::ignore) = this->self->_method_build_type(_126435_tokens,(&(_130217_i)),true);
	if (_130217_i < _126435_tokens.len()) {
		this->self->_method_push_err(_126435_tokens[_130217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _126517_f;
}



inline jule::Slice<jule::Ptr<_221d8b043_FieldDecl>> _222e5128e_Parser::_method_build_struct_decl_fields(jule::Slice<_2220dce43_Token> _131248_tokens) {
	jule::Slice<jule::Ptr<_221d8b043_FieldDecl>> _131317_fields = nullptr;
	jule::Slice<jule::Ptr<_221e8c8b4_Stmt>> _131417_stmts = _221e8c8b4_split_stmts(_131248_tokens);
	{
		auto &expr = _131417_stmts;
		auto it = expr.begin();
		_iter_begin_4683149840:;
		if (it != expr.end()) {
			jule::Ptr<_221e8c8b4_Stmt> _222e5128e_stmt = *it;
			{
				_131248_tokens=_222e5128e_stmt->_field_tokens;
				if (_131248_tokens[0LL]._field_id == 18LLU) {
					goto _iter_next_4683149840;
				}
				jule::Ptr<_221d8b043_FieldDecl> _132021_f = this->self->_method_build_field(_131248_tokens);
				_131317_fields.push(_132021_f);
			}
			_iter_next_4683149840:;
			++it;
			goto _iter_begin_4683149840;
		}
		_iter_end_4683149840:;
	}
	return _131317_fields;
}



inline jule::Ptr<_221d8b043_StructDecl> _222e5128e_Parser::_method_build_struct_decl(jule::Slice<_2220dce43_Token>& _132642_tokens) {
	if (_132642_tokens.len() < 3LL) {
		this->self->_method_push_err(_132642_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Int _133217_i = 1LL;
	jule::Ptr<_221d8b043_StructDecl> _133317_s = jule::new_struct<_221d8b043_StructDecl>(new( std::nothrow ) _221d8b043_StructDecl(_132642_tokens[_133217_i],jule::Str(),jule::Slice<jule::Ptr<_221d8b043_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Ptr<_221d8b043_CommentGroup>(),jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>()));
	if (_133317_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_133317_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_133217_i)++;
	if (_133217_i >= _132642_tokens.len()) {
		this->self->_method_push_err(_132642_tokens[_133217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _133317_s;
	}
	_133317_s->_field_ident=_133317_s->_field_token._field_kind;
	_2220dce43_Token _134713_error_token = _132642_tokens[_133217_i];
	jule::Slice<_2220dce43_Token> _134817_generics_tokens = _222e5128e_range(_133217_i,jule::Str("[", 1),jule::Str("]", 1),_132642_tokens);
	if (_134817_generics_tokens != nullptr) {
		_133317_s->_field_generics=this->self->_method_build_generics(_134817_generics_tokens,_134713_error_token);
	}
	if (_133217_i >= _132642_tokens.len()) {
		this->self->_method_push_err(_132642_tokens[_133217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _133317_s;
	}
	jule::Slice<_2220dce43_Token> _135717_body_tokens = _222e5128e_range(_133217_i,jule::Str("{", 1),jule::Str("}", 1),_132642_tokens);
	if (_135717_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_133317_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133317_s;
	}
	if (_133217_i < _132642_tokens.len()) {
		this->self->_method_push_err(_132642_tokens[_133217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_133317_s->_field_fields=this->self->_method_build_struct_decl_fields(_135717_body_tokens);
	return _133317_s;
}



inline void _222e5128e_Parser::_method_check_method_receiver(jule::Ptr<_221d8b043_FnDecl>& _137141_f) {
	if (_137141_f->_field_statically) {
		if ((_137141_f->_field_params.len() > 0LL) && _137141_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_137141_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		}
		return;
	}
	if (_137141_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_137141_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_221d8b043_ParamDecl> _138413_param = _137141_f->_field_params[0LL];
	if ((!(_138413_param->_method_is_self()))) {
		(*this)._method_push_err(_137141_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
}



inline jule::Slice<jule::Ptr<_221d8b043_FnDecl>> _222e5128e_Parser::_method_build_trait_methods(jule::Slice<_2220dce43_Token> _139143_tokens) {
	jule::Slice<jule::Ptr<_221d8b043_FnDecl>> _139217_methods = nullptr;
	jule::Slice<jule::Ptr<_221e8c8b4_Stmt>> _139317_stmts = _221e8c8b4_split_stmts(_139143_tokens);
	{
		auto &expr = _139317_stmts;
		auto it = expr.begin();
		_iter_begin_4683201456:;
		if (it != expr.end()) {
			jule::Ptr<_221e8c8b4_Stmt> _222e5128e_stmt = *it;
			{
				_139143_tokens=_23999731d_eliminate_comments(_222e5128e_stmt->_field_tokens);
				if (_139143_tokens.len() == 0LL) {
					goto _iter_next_4683201456;
				}
				jule::Bool _140021_is_pub = false;
				if (_139143_tokens[0LL]._field_id == 21LLU) {
					_140021_is_pub=true;
					if (_139143_tokens.len() == 1LL) {
						this->self->_method_push_err(_139143_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_4683201456;
					}
					_139143_tokens=_139143_tokens.slice(1LL);
				}
				jule::Ptr<_221d8b043_FnDecl> _141021_f = this->self->_method_build_fn(_139143_tokens,true,true);
				if (_141021_f != nullptr) {
					if (_141021_f->_method_is_anon()) {
						this->self->_method_push_err(_141021_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
					this->self->_method_check_method_receiver(_141021_f);
					if (_141021_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_141021_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					}
					_141021_f->_field_public=_140021_is_pub;
					_139217_methods.push(_141021_f);
				}
			}
			_iter_next_4683201456:;
			++it;
			goto _iter_begin_4683201456;
		}
		_iter_end_4683201456:;
	}
	return _139217_methods;
}



inline jule::Ptr<_221d8b043_TraitDecl> _222e5128e_Parser::_method_build_trait_decl(jule::Slice<_2220dce43_Token>& _142641_tokens) {
	if (_142641_tokens.len() < 3LL) {
		this->self->_method_push_err(_142641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_221d8b043_TraitDecl> _143117_t = jule::new_struct<_221d8b043_TraitDecl>(new( std::nothrow ) _221d8b043_TraitDecl(_142641_tokens[1LL],jule::Str(),jule::Bool(),jule::Ptr<_221d8b043_CommentGroup>(),jule::Slice<jule::Ptr<_221d8b043_FnDecl>>()));
	if (_143117_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_143117_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_143117_t->_field_ident=_143117_t->_field_token._field_kind;
	jule::Int _143917_i = 2LL;
	jule::Slice<_2220dce43_Token> _144017_body_tokens = _222e5128e_range(_143917_i,jule::Str("{", 1),jule::Str("}", 1),_142641_tokens);
	if (_144017_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_143117_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_143917_i < _142641_tokens.len()) {
		this->self->_method_push_err(_142641_tokens[_143917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_143117_t->_field_methods=this->self->_method_build_trait_methods(_144017_body_tokens);
	return _143117_t;
}



inline jule::Ptr<_221d8b043_FnDecl> _222e5128e_Parser::_method_build_cpp_link_fn(jule::Slice<_2220dce43_Token> _145441_tokens) {
	_145441_tokens=_145441_tokens.slice(1LL);
	jule::Ptr<_221d8b043_FnDecl> _145617_f = this->self->_method_build_fn(_145441_tokens,false,true);
	if (_145617_f != nullptr) {
		if (_145617_f->_method_is_anon()) {
			this->self->_method_push_err(_145617_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		_145617_f->_field_cpp_linked=true;
	}
	return _145617_f;
}



inline jule::Ptr<_221d8b043_VarDecl> _222e5128e_Parser::_method_build_cpp_link_var(jule::Slice<_2220dce43_Token> _146642_tokens) {
	_146642_tokens=_146642_tokens.slice(1LL);
	jule::Ptr<_221d8b043_VarDecl> _146817_v = this->self->_method_build_var(_146642_tokens);
	if (_146817_v != nullptr) {
		_146817_v->_field_cpp_linked=true;
		if (_146817_v->_field_expr != nullptr) {
			this->self->_method_push_err(_146817_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		}
	}
	return _146817_v;
}



inline jule::Ptr<_221d8b043_StructDecl> _222e5128e_Parser::_method_build_cpp_link_struct(jule::Slice<_2220dce43_Token> _147845_tokens) {
	_147845_tokens=_147845_tokens.slice(1LL);
	jule::Ptr<_221d8b043_StructDecl> _148017_s = this->self->_method_build_struct_decl(_147845_tokens);
	if (_148017_s != nullptr) {
		_148017_s->_field_cpp_linked=true;
	}
	return _148017_s;
}



inline jule::Ptr<_221d8b043_TypeAliasDecl> _222e5128e_Parser::_method_build_cpp_link_type_alias(jule::Slice<_2220dce43_Token> _148749_tokens) {
	_148749_tokens=_148749_tokens.slice(1LL);
	jule::Ptr<_221d8b043_TypeAliasDecl> _148917_t = this->self->_method_build_type_alias_decl(_148749_tokens);
	if (_148917_t != nullptr) {
		_148917_t->_field_cpp_linked=true;
	}
	return _148917_t;
}



inline jule::Ptr<_221d8b043_UseDecl> _222e5128e_Parser::_method_build_cpp_link_use(jule::Slice<_2220dce43_Token> _149642_tokens) {
	if (_149642_tokens.len() == 1LL) {
		this->self->_method_push_err(_149642_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_149642_tokens=_149642_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_149642_tokens,true);
}



inline jule::Any _222e5128e_Parser::_method_build_cpp_link(jule::Slice<_2220dce43_Token>& _150739_tokens) {
	_2220dce43_Token _150817_token = _150739_tokens[0LL];
	if (_150739_tokens.len() == 1LL) {
		this->self->_method_push_err(_150817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	_150817_token=_150739_tokens[1LL];
	{
		auto &_match_expr{ _150817_token._field_id };
		if (!(_match_expr == (19LLU))) { goto _case_end_4683275152; }
		_case_begin_4683275152:;
		{
			return jule::Any(this->self->_method_build_cpp_link_use(_150739_tokens));
		}
		goto _match_end_4683274688;
		_case_end_4683275152:;
		if (!(_match_expr == (33LLU) || _match_expr == (35LLU))) { goto _case_end_4683275248; }
		_case_begin_4683275248:;
		{
			return jule::Any(this->self->_method_build_cpp_link_fn(_150739_tokens));
		}
		goto _match_end_4683274688;
		_case_end_4683275248:;
		if (!(_match_expr == (9LLU) || _match_expr == (34LLU))) { goto _case_end_4683275344; }
		_case_begin_4683275344:;
		{
			return jule::Any(this->self->_method_build_cpp_link_var(_150739_tokens));
		}
		goto _match_end_4683274688;
		_case_end_4683275344:;
		if (!(_match_expr == (25LLU))) { goto _case_end_4683275440; }
		_case_begin_4683275440:;
		{
			return jule::Any(this->self->_method_build_cpp_link_struct(_150739_tokens));
		}
		goto _match_end_4683274688;
		_case_end_4683275440:;
		if (!(_match_expr == (10LLU))) { goto _case_end_4683276688; }
		_case_begin_4683276688:;
		{
			return jule::Any(this->self->_method_build_cpp_link_type_alias(_150739_tokens));
		}
		goto _match_end_4683274688;
		_case_end_4683276688:;
		_case_begin_4683272048:;
		{
			this->self->_method_push_err(_150817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		goto _match_end_4683274688;
		_case_end_4683272048:;
		_match_end_4683274688:;
	}
	return jule::Any(nullptr);
}



inline jule::Ptr<_221d8b043_FnDecl> _222e5128e_Parser::_method_get_method(jule::Slice<_2220dce43_Token>& _153835_tokens) {
	jule::Int _153917_i = 0LL;
	_2220dce43_Token _154017_token = _153835_tokens[_153917_i];
	if (_154017_token._field_id == 38LLU) {
		if ((_153917_i + 1LL) >= _153835_tokens.len()) {
			this->self->_method_push_err(_154017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_153917_i)++;
		_154017_token=_153835_tokens[_153917_i];
	}
	if (_154017_token._field_id == 35LLU) {
		if ((_153917_i + 1LL) >= _153835_tokens.len()) {
			this->self->_method_push_err(_154017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_153917_i)++;
		_154017_token=_153835_tokens[_153917_i];
	}
	if (_154017_token._field_id != 33LLU) {
		this->self->_method_push_err(_154017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_221d8b043_FnDecl> _156417_f = this->self->_method_build_fn(_153835_tokens,true,false);
	if ((_156417_f != nullptr) && _156417_f->_method_is_anon()) {
		this->self->_method_push_err(_156417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _156417_f;
}



inline void _222e5128e_Parser::_method_parse_impl_body(jule::Ptr<_221d8b043_Impl>& _157140_ipl,jule::Slice<_2220dce43_Token>& _157157_tokens) {
	jule::Slice<jule::Ptr<_221e8c8b4_Stmt>> _157217_stmts = _221e8c8b4_split_stmts(_157157_tokens);
	{
		auto &expr = _157217_stmts;
		auto it = expr.begin();
		_iter_begin_4683305392:;
		if (it != expr.end()) {
			jule::Ptr<_221e8c8b4_Stmt> _222e5128e_stmt = *it;
			{
				_157157_tokens=_222e5128e_stmt->_field_tokens;
				_2220dce43_Token _157521_token = _157157_tokens[0LL];
				jule::Bool _157621_is_pub = false;
				{
					auto &_match_expr{ _157521_token._field_id };
					if (!(_match_expr == (18LLU))) { goto _case_end_4683309360; }
					_case_begin_4683309360:;
					{
						goto _iter_next_4683305392;
					}
					goto _match_end_4683309776;
					_case_end_4683309360:;
					if (!(_match_expr == (21LLU))) { goto _case_end_4683309920; }
					_case_begin_4683309920:;
					{
						_157621_is_pub=true;
						if (_157157_tokens.len() == 1LL) {
							this->self->_method_push_err(_157157_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_4683305392;
						}
						_157157_tokens=_157157_tokens.slice(1LL);
						if (_157157_tokens.len() > 0LL) {
							_157521_token=_157157_tokens[0LL];
						}
					}
					goto _match_end_4683309776;
					_case_end_4683309920:;
					_match_end_4683309776:;
				}
				{
					auto &_match_expr{ _157521_token._field_id };
					if (!(_match_expr == (9LLU))) { goto _case_end_4683311280; }
					_case_begin_4683311280:;
					{
						jule::Ptr<_221d8b043_VarDecl> _159625_v = this->self->_method_build_var(_157157_tokens);
						if (_159625_v != nullptr) {
							_159625_v->_field_public=_157621_is_pub;
							_157140_ipl->_field_statics = jule::alloc_for_append(_157140_ipl->_field_statics,1);_157140_ipl->_field_statics.push(_159625_v);
						}
					}
					goto _match_end_4683315504;
					_case_end_4683311280:;
					if (!(_match_expr == (38LLU) || _match_expr == (33LLU) || _match_expr == (35LLU))) { goto _case_end_4683311376; }
					_case_begin_4683311376:;
					{
						jule::Ptr<_221d8b043_FnDecl> _160525_f = this->self->_method_get_method(_157157_tokens);
						if (_160525_f != nullptr) {
							_160525_f->_field_public=_157621_is_pub;
							this->self->_method_check_method_receiver(_160525_f);
							_157140_ipl->_field_methods = jule::alloc_for_append(_157140_ipl->_field_methods,1);_157140_ipl->_field_methods.push(_160525_f);
						}
					}
					goto _match_end_4683315504;
					_case_end_4683311376:;
					_case_begin_4683310880:;
					{
						this->self->_method_push_err(_157521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_4683305392;
					}
					goto _match_end_4683315504;
					_case_end_4683310880:;
					_match_end_4683315504:;
				}
			}
			_iter_next_4683305392:;
			++it;
			goto _iter_begin_4683305392;
		}
		_iter_end_4683305392:;
	}
}



inline jule::Ptr<_221d8b043_Impl> _222e5128e_Parser::_method_build_impl(jule::Slice<_2220dce43_Token> _161934_tokens) {
	_2220dce43_Token _162017_token = _161934_tokens[0LL];
	if (_161934_tokens.len() < 2LL) {
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_162017_token=_161934_tokens[1LL];
	if (_162017_token._field_id != 2LLU) {
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_161934_tokens.len() < 3LL) {
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_221d8b043_Impl> _163517_ipl = jule::new_struct<_221d8b043_Impl>(new( std::nothrow ) _221d8b043_Impl(_162017_token,_2220dce43_Token(),jule::Slice<jule::Ptr<_221d8b043_FnDecl>>(),jule::Slice<jule::Ptr<_221d8b043_VarDecl>>()));
	_162017_token=_161934_tokens[2LL];
	if (_162017_token._field_id != 12LLU) {
		if ((_162017_token._field_id == 3LLU) && (_162017_token._field_kind == jule::Str("{", 1))) {
			std::tie(_163517_ipl->_field_base,_163517_ipl->_field_dest) = std::make_tuple(_163517_ipl->_field_dest,_163517_ipl->_field_base);
			_161934_tokens=_161934_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_161934_tokens.len() < 4LL) {
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_162017_token=_161934_tokens[3LL];
	if (_162017_token._field_id != 2LLU) {
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_163517_ipl->_field_dest=_162017_token;
	_161934_tokens=_161934_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _166517_i = 0LL;
	jule::Slice<_2220dce43_Token> _166617_body_tokens = _222e5128e_range(_166517_i,jule::Str("{", 1),jule::Str("}", 1),_161934_tokens);
	if (_166617_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_163517_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_166517_i < _161934_tokens.len()) {
		this->self->_method_push_err(_161934_tokens[_166517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	this->self->_method_parse_impl_body(_163517_ipl,_166617_body_tokens);
	return _163517_ipl;
}



inline jule::Any _222e5128e_Parser::_method_build_node_data(jule::Slice<_2220dce43_Token>& _168040_tokens) {
	_2220dce43_Token _168117_token = _168040_tokens[0LL];
	{
		auto &_match_expr{ _168117_token._field_id };
		if (!(_match_expr == (19LLU))) { goto _case_end_4683365856; }
		_case_begin_4683365856:;
		{
			
			return jule::Any(this->self->_method_build_use_decl(_168040_tokens,false));
		}
		goto _match_end_4683365104;
		_case_end_4683365856:;
		if (!(_match_expr == (33LLU) || _match_expr == (35LLU))) { goto _case_end_4683365584; }
		_case_begin_4683365584:;
		{
			jule::Ptr<_221d8b043_FnDecl> _168921_f = this->self->_method_build_fn(_168040_tokens,false,false);
			if (_168921_f != nullptr) {
				_168921_f->_field_global=true;
				if (_168921_f->_method_is_anon()) {
					this->self->_method_push_err(_168921_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
			}
			return jule::Any(_168921_f);
		}
		goto _match_end_4683365104;
		_case_end_4683365584:;
		if (!(_match_expr == (34LLU) || _match_expr == (9LLU) || _match_expr == (36LLU) || _match_expr == (38LLU))) { goto _case_end_4683365680; }
		_case_begin_4683365680:;
		{
			return jule::Any(this->self->_method_build_var(_168040_tokens));
		}
		goto _match_end_4683365104;
		_case_end_4683365680:;
		if (!(_match_expr == (10LLU))) { goto _case_end_4683367264; }
		_case_begin_4683367264:;
		{
			return jule::Any(this->self->_method_build_type_alias_decl(_168040_tokens));
		}
		goto _match_end_4683365104;
		_case_end_4683367264:;
		if (!(_match_expr == (24LLU))) { goto _case_end_4683367360; }
		_case_begin_4683367360:;
		{
			return jule::Any(this->self->_method_build_enum_decl(_168040_tokens));
		}
		goto _match_end_4683365104;
		_case_end_4683367360:;
		if (!(_match_expr == (25LLU))) { goto _case_end_4683367456; }
		_case_begin_4683367456:;
		{
			return jule::Any(this->self->_method_build_struct_decl(_168040_tokens));
		}
		goto _match_end_4683365104;
		_case_end_4683367456:;
		if (!(_match_expr == (29LLU))) { goto _case_end_4683367552; }
		_case_begin_4683367552:;
		{
			return jule::Any(this->self->_method_build_trait_decl(_168040_tokens));
		}
		goto _match_end_4683365104;
		_case_end_4683367552:;
		if (!(_match_expr == (30LLU))) { goto _case_end_4683367920; }
		_case_begin_4683367920:;
		{
			return jule::Any(this->self->_method_build_impl(_168040_tokens));
		}
		goto _match_end_4683365104;
		_case_end_4683367920:;
		if (!(_match_expr == (31LLU))) { goto _case_end_4683368016; }
		_case_begin_4683368016:;
		{
			return this->self->_method_build_cpp_link(_168040_tokens);
		}
		goto _match_end_4683365104;
		_case_end_4683368016:;
		if (!(_match_expr == (39LLU))) { goto _case_end_4683368112; }
		_case_begin_4683368112:;
		{
			return jule::Any(this->self->_method_build_directive(_168040_tokens));
		}
		goto _match_end_4683365104;
		_case_end_4683368112:;
		if (!(_match_expr == (18LLU))) { goto _case_end_4683368208; }
		_case_begin_4683368208:;
		{
			jule::Ptr<_221d8b043_Comment> _172921_c = _222e5128e_build_comment(_168117_token);
			this->self->_method_process_comment(_172921_c);
			return jule::Any(_172921_c);
		}
		goto _match_end_4683365104;
		_case_end_4683368208:;
		_case_begin_4683363504:;
		{
			this->self->_method_push_err(_168117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return jule::Any(nullptr);
		}
		goto _match_end_4683365104;
		_case_end_4683363504:;
		_match_end_4683365104:;
	}
}



inline void _222e5128e_Parser::_method_check_comment_group(_221d8b043_Node& _173939_node) {
	if ((*this)._field_comment_group == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _173939_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Comment>>() || _match_expr.type_is<jule::Ptr<_221d8b043_Directive>>())) { goto _case_end_4683392736; }
		goto _match_end_4683390928;
		_case_end_4683392736:;
		_case_begin_4683391408:;
		{
			(*this)._field_comment_group=nullptr;
		}
		goto _match_end_4683390928;
		_case_end_4683391408:;
		_match_end_4683390928:;
	}
}



inline void _222e5128e_Parser::_method_check_directive(_221d8b043_Node& _175335_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _175335_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Directive>>() || _match_expr.type_is<jule::Ptr<_221d8b043_Comment>>())) { goto _case_end_4683397808; }
		goto _match_end_4683395936;
		_case_end_4683397808:;
		_case_begin_4683396416:;
		{
			if ((*this)._field_directives.len() != 0LL) {
				(*this)._method_push_err((*this)._field_directives[0LL]->_field_tag,jule::Str("this directive is out of scope, cant assign to any define", 57),jule::Slice<jule::Any>());
			}
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4683395936;
		_case_end_4683396416:;
		_match_end_4683395936:;
	}
}



inline void _222e5128e_Parser::_method_apply_meta(_221d8b043_Node& _177134_node,jule::Bool _177150_is_pub) {
	{
		auto &_match_expr{ _177134_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_VarDecl>>())) { goto _case_end_4683404080; }
		_case_begin_4683404080:;
		{
			jule::Ptr<_221d8b043_VarDecl> _177421_v = _177134_node._field_data.operator jule::Ptr<_221d8b043_VarDecl>();
			if (_177421_v == nullptr) {
				return;
			}
			_177421_v->_field_public=_177150_is_pub;
			_177150_is_pub=false;
			_177421_v->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_177421_v->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4683404560;
		_case_end_4683404080:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FnDecl>>())) { goto _case_end_4683404816; }
		_case_begin_4683404816:;
		{
			jule::Ptr<_221d8b043_FnDecl> _178821_f = _177134_node._field_data.operator jule::Ptr<_221d8b043_FnDecl>();
			if (_178821_f == nullptr) {
				return;
			}
			_178821_f->_field_public=_177150_is_pub;
			_177150_is_pub=false;
			_178821_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_178821_f->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
		}
		goto _match_end_4683404560;
		_case_end_4683404816:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TypeAliasDecl>>())) { goto _case_end_4683404912; }
		_case_begin_4683404912:;
		{
			jule::Ptr<_221d8b043_TypeAliasDecl> _180121_tad = _177134_node._field_data.operator jule::Ptr<_221d8b043_TypeAliasDecl>();
			if (_180121_tad == nullptr) {
				return;
			}
			_180121_tad->_field_public=_177150_is_pub;
			_177150_is_pub=false;
			_180121_tad->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
		}
		goto _match_end_4683404560;
		_case_end_4683404912:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_EnumDecl>>())) { goto _case_end_4683405008; }
		_case_begin_4683405008:;
		{
			jule::Ptr<_221d8b043_EnumDecl> _181121_ed = _177134_node._field_data.operator jule::Ptr<_221d8b043_EnumDecl>();
			if (_181121_ed == nullptr) {
				return;
			}
			_181121_ed->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_181121_ed->_field_public=_177150_is_pub;
			_177150_is_pub=false;
		}
		goto _match_end_4683404560;
		_case_end_4683405008:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_StructDecl>>())) { goto _case_end_4683405104; }
		_case_begin_4683405104:;
		{
			jule::Ptr<_221d8b043_StructDecl> _182121_sd = _177134_node._field_data.operator jule::Ptr<_221d8b043_StructDecl>();
			if (_182121_sd == nullptr) {
				return;
			}
			_182121_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_182121_sd->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_182121_sd->_field_public=_177150_is_pub;
			_177150_is_pub=false;
		}
		goto _match_end_4683404560;
		_case_end_4683405104:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TraitDecl>>())) { goto _case_end_4683405200; }
		_case_begin_4683405200:;
		{
			jule::Ptr<_221d8b043_TraitDecl> _183321_td = _177134_node._field_data.operator jule::Ptr<_221d8b043_TraitDecl>();
			if (_183321_td == nullptr) {
				return;
			}
			_183321_td->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_183321_td->_field_public=_177150_is_pub;
			_177150_is_pub=false;
		}
		goto _match_end_4683404560;
		_case_end_4683405200:;
		_match_end_4683404560:;
	}
	if (_177150_is_pub) {
		(*this)._method_push_err(_177134_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
	}
}



inline void _222e5128e_Parser::_method_check_use_decl(_221d8b043_Node& _184734_node) {
	{
		auto &_match_expr{ _184734_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_UseDecl>>())) { goto _case_end_4683436736; }
		goto _match_end_4683435776;
		_case_end_4683436736:;
		_case_begin_4683435232:;
		{
			return;
		}
		goto _match_end_4683435776;
		_case_end_4683435232:;
		_match_end_4683435776:;
	}
	if ((*this)._field_ast->_field_decls.len() > 0LL) {
		(*this)._method_push_err(_184734_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	}
}



inline std::tuple<jule::Bool,jule::Any> _222e5128e_Parser::_method_build_general_scope_node_data(jule::Slice<_2220dce43_Token> _186253_st) {
	jule::Bool _186268_is_pub = jule::Bool();
	jule::Any _186282_data = jule::Any();
	if (_186253_st[0LL]._field_id == 21LLU) {
		_186268_is_pub=true;
		_186253_st=_186253_st.slice(1LL);
		if (_186253_st.len() == 0LL) {
			this->self->_method_push_err(_186253_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_186268_is_pub,_186282_data);
		}
	}
	_186282_data=this->self->_method_build_node_data(_186253_st);
	return std::make_tuple(_186268_is_pub,_186282_data);
}



inline _221d8b043_Node _222e5128e_Parser::_method_parse_node(jule::Slice<_2220dce43_Token>& _187735_st) {
	_221d8b043_Node _187817_node = _221d8b043_Node(_187735_st[0LL],jule::Any());
	jule::Bool _188214_is_pub;
	jule::Any _188226_data;
	std::tie(_188214_is_pub,_188226_data) = this->self->_method_build_general_scope_node_data(_187735_st);
	if (_188226_data == nullptr) {
		return _187817_node;
	}
	_187817_node._field_data=_188226_data;
	this->self->_method_apply_meta(_187817_node,_188214_is_pub);
	this->self->_method_check_comment_group(_187817_node);
	this->self->_method_check_directive(_187817_node);
	this->self->_method_check_use_decl(_187817_node);
	return _187817_node;
}



inline void _222e5128e_Parser::_method_append_node(jule::Slice<_2220dce43_Token>& _189636_st) {
	if (_189636_st.len() == 0LL) {
		return;
	}
	_221d8b043_Node _190117_node = this->self->_method_parse_node(_189636_st);
	if ((_190117_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_190117_node._method_is_directive()))) { goto _case_end_4683467504; }
		_case_begin_4683467504:;
		{
			this->self->_method_push_directive(_190117_node._field_data.operator jule::Ptr<_221d8b043_Directive>());
		}
		goto _match_end_4683466544;
		_case_end_4683467504:;
		if (!((_190117_node._method_is_use_decl()))) { goto _case_end_4683467600; }
		_case_begin_4683467600:;
		{
			this->self->_field_ast->_field_use_decls = jule::alloc_for_append(this->self->_field_ast->_field_use_decls,1);this->self->_field_ast->_field_use_decls.push(_190117_node._field_data.operator jule::Ptr<_221d8b043_UseDecl>());
		}
		goto _match_end_4683466544;
		_case_end_4683467600:;
		if (!((_190117_node._method_is_decl()))) { goto _case_end_4683467696; }
		_case_begin_4683467696:;
		{
			this->self->_field_ast->_field_decls = jule::alloc_for_append(this->self->_field_ast->_field_decls,1);this->self->_field_ast->_field_decls.push(_190117_node);
		}
		goto _match_end_4683466544;
		_case_end_4683467696:;
		if (!((_190117_node._method_is_comment()))) { goto _case_end_4683467792; }
		_case_begin_4683467792:;
		{
			jule::Ptr<_221d8b043_Comment> _191921_c = _190117_node._field_data.operator jule::Ptr<_221d8b043_Comment>();
			this->self->_field_ast->_field_comments = jule::alloc_for_append(this->self->_field_ast->_field_comments,1);this->self->_field_ast->_field_comments.push(_191921_c);
		}
		goto _match_end_4683466544;
		_case_end_4683467792:;
		if (!((_190117_node._method_is_impl()))) { goto _case_end_4683469488; }
		_case_begin_4683469488:;
		{
			this->self->_field_ast->_field_impls = jule::alloc_for_append(this->self->_field_ast->_field_impls,1);this->self->_field_ast->_field_impls.push(_190117_node._field_data.operator jule::Ptr<_221d8b043_Impl>());
		}
		goto _match_end_4683466544;
		_case_end_4683469488:;
		_case_begin_4683466656:;
		{
			this->self->_method_push_err(_190117_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		goto _match_end_4683466544;
		_case_end_4683466656:;
		_match_end_4683466544:;
	}
}



inline void _222e5128e_Parser::_method_remove_range(jule::Int _193031_i,jule::Str _193039_kind,jule::Slice<_2220dce43_Token>& _193051_tokens,jule::Slice<jule::Int>& _193073_ranges) {
	jule::Str _193113_close = _222e5128e_get_close_kind_of_brace(_193039_kind);
	for (; _193031_i >= 0LL; (_193031_i)--) {
		{
			_2220dce43_Token _193317_tok = _193051_tokens[_193073_ranges[_193031_i]];
			if (_193317_tok._field_kind != _193113_close) {
				goto _iter_next_4683487888;
			}
			_193073_ranges=jule::append(_193073_ranges.slice(0LL,_193031_i),_193073_ranges.slice(_193031_i + 1LL));
			goto _iter_end_4683487888;
		}
	_iter_next_4683487888:;
	}
	_iter_end_4683487888:;
}



inline void _222e5128e_Parser::_method_push_wrong_order_close_err(_2220dce43_Token& _194346_t,jule::Slice<_2220dce43_Token>& _194357_tokens,jule::Slice<jule::Int>& _194375_ranges) {
	{
		auto &_match_expr{ _194357_tokens[_194375_ranges[_194375_ranges.len() - 1LL]]._field_kind };
		if (!(_match_expr == (jule::Str("(", 1)))) { goto _case_end_4683497120; }
		_case_begin_4683497120:;
		{
			(*this)._method_push_err(_194346_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
		}
		goto _match_end_4683496960;
		_case_end_4683497120:;
		if (!(_match_expr == (jule::Str("{", 1)))) { goto _case_end_4683497216; }
		_case_begin_4683497216:;
		{
			(*this)._method_push_err(_194346_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
		}
		goto _match_end_4683496960;
		_case_end_4683497216:;
		if (!(_match_expr == (jule::Str("[", 1)))) { goto _case_end_4683497312; }
		_case_begin_4683497312:;
		{
			(*this)._method_push_err(_194346_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
		}
		goto _match_end_4683496960;
		_case_end_4683497312:;
		_match_end_4683496960:;
	}
}



inline void _222e5128e_Parser::_method_push_range_close(_2220dce43_Token _195135_t,jule::Str _195145_left,jule::Slice<_2220dce43_Token>& _195157_tokens,jule::Slice<jule::Int>& _195179_ranges) {
	jule::I64 _195213_n = _195179_ranges.len();
	if (_195213_n == 0LL) {
		{
			auto &_match_expr{ _195135_t._field_kind };
			if (!(_match_expr == (jule::Str("]", 1)))) { goto _case_end_4683509376; }
			_case_begin_4683509376:;
			{
				(*this)._method_push_err(_195135_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
			}
			goto _match_end_4683509232;
			_case_end_4683509376:;
			if (!(_match_expr == (jule::Str("}", 1)))) { goto _case_end_4683509472; }
			_case_begin_4683509472:;
			{
				(*this)._method_push_err(_195135_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
			}
			goto _match_end_4683509232;
			_case_end_4683509472:;
			if (!(_match_expr == (jule::Str(")", 1)))) { goto _case_end_4683509568; }
			_case_begin_4683509568:;
			{
				(*this)._method_push_err(_195135_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
			}
			goto _match_end_4683509232;
			_case_end_4683509568:;
			_match_end_4683509232:;
		}
		return;
	} else if (_195157_tokens[_195179_ranges[_195213_n - 1LL]]._field_kind != _195145_left) {
		(*this)._method_push_wrong_order_close_err(_195135_t,_195157_tokens,_195179_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_195213_n - 1LL),_195135_t._field_kind,_195157_tokens,_195179_ranges);
}



inline void _222e5128e_Parser::_method_check_ranges(jule::Slice<_2220dce43_Token>& _196632_tokens) {
	jule::Slice<jule::Int> _196717_ranges = nullptr;
	{
		auto &expr = _196632_tokens;
		auto it = expr.begin();
		_iter_begin_4678688896:;
		if (it != expr.end()) {
			jule::Int _222e5128e_i = it - expr.begin();
			_2220dce43_Token &_222e5128e_token = *it;
			{
				if (_222e5128e_token._field_id != 3LLU) {
					goto _iter_next_4678688896;
				}
				{
					auto &_match_expr{ _222e5128e_token._field_kind };
					if (!(_match_expr == (jule::Str("(", 1)) || _match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)))) { goto _case_end_4678693696; }
					_case_begin_4678693696:;
					{
						_196717_ranges.push(_222e5128e_i);
					}
					goto _match_end_4678693616;
					_case_end_4678693696:;
					if (!(_match_expr == (jule::Str(")", 1)))) { goto _case_end_4678694112; }
					_case_begin_4678694112:;
					{
						(*this)._method_push_range_close(_222e5128e_token,jule::Str("(", 1),_196632_tokens,_196717_ranges);
					}
					goto _match_end_4678693616;
					_case_end_4678694112:;
					if (!(_match_expr == (jule::Str("}", 1)))) { goto _case_end_4678694208; }
					_case_begin_4678694208:;
					{
						(*this)._method_push_range_close(_222e5128e_token,jule::Str("{", 1),_196632_tokens,_196717_ranges);
					}
					goto _match_end_4678693616;
					_case_end_4678694208:;
					if (!(_match_expr == (jule::Str("]", 1)))) { goto _case_end_4678694304; }
					_case_begin_4678694304:;
					{
						(*this)._method_push_range_close(_222e5128e_token,jule::Str("[", 1),_196632_tokens,_196717_ranges);
					}
					goto _match_end_4678693616;
					_case_end_4678694304:;
					_match_end_4678693616:;
				}
			}
			_iter_next_4678688896:;
			++it;
			_222e5128e_i++;
			goto _iter_begin_4678688896;
		}
		_iter_end_4678688896:;
	}
	{
		auto &expr = _196717_ranges;
		auto it = expr.begin();
		_iter_begin_4678699360:;
		if (it != expr.end()) {
			jule::Int &_222e5128e_i = *it;
			{
				_2220dce43_Token _199217_token = _196632_tokens[_222e5128e_i];
				{
					auto &_match_expr{ _199217_token._field_kind };
					if (!(_match_expr == (jule::Str("(", 1)))) { goto _case_end_4678703632; }
					_case_begin_4678703632:;
					{
						(*this)._method_push_err(_199217_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
					}
					goto _match_end_4678703552;
					_case_end_4678703632:;
					if (!(_match_expr == (jule::Str("{", 1)))) { goto _case_end_4678703728; }
					_case_begin_4678703728:;
					{
						(*this)._method_push_err(_199217_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
					}
					goto _match_end_4678703552;
					_case_end_4678703728:;
					if (!(_match_expr == (jule::Str("[", 1)))) { goto _case_end_4678703824; }
					_case_begin_4678703824:;
					{
						(*this)._method_push_err(_199217_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
					}
					goto _match_end_4678703552;
					_case_end_4678703824:;
					_match_end_4678703552:;
				}
			}
			_iter_next_4678699360:;
			++it;
			goto _iter_begin_4678699360;
		}
		_iter_end_4678699360:;
	}
}



inline void _222e5128e_Parser::_method_parse(jule::Ptr<_22212e407_File>& _200130_f) {
	this->self->_field_ast=jule::new_struct<_221d8c242_Ast>(new( std::nothrow ) _221d8c242_Ast(_200130_f,jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Slice<jule::Ptr<_221d8b043_UseDecl>>(),jule::Slice<jule::Ptr<_221d8b043_Impl>>(),jule::Slice<jule::Ptr<_221d8b043_Comment>>(),jule::Slice<_221d8b043_Node>()));
	jule::Slice<_2220dce43_Token> _200617_tokens = _200130_f->_method_tokens();
	this->self->_method_check_ranges(_200617_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_221e8c8b4_Stmt>> _201217_stmts = _221e8c8b4_split_stmts(_200617_tokens);
	jule::Int _201517_i = 0LL;
	_julec_label_iter:;
	for (; _201517_i < _201217_stmts.len(); (_201517_i)++) {
		{
			jule::Ptr<_221e8c8b4_Stmt> _201821_stmt = _201217_stmts[_201517_i];
			if (_201821_stmt->_field_tokens.len() == 0LL) {
				return;
			}
			jule::Any _202325_data;
			std::tie(std::ignore,_202325_data) = this->self->_method_build_general_scope_node_data(_201821_stmt->_field_tokens);
			if (_202325_data == nullptr) {
				goto _iter_end_4678713744;
			}
			if (this->self->_method_stopped()) {
				return;
			}
			{
				auto &_match_expr{ _202325_data };
				if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Directive>>())) { goto _case_end_4678722320; }
				_case_begin_4678722320:;
				{
					jule::Ptr<_221d8b043_Directive> _203425_d = _202325_data.operator jule::Ptr<_221d8b043_Directive>();
					if ((_203425_d != nullptr) && _2388c1347_is_top_directive(_203425_d->_field_tag._field_kind)) {
						this->self->_field_ast->_field_top_directives = jule::alloc_for_append(this->self->_field_ast->_field_top_directives,1);this->self->_field_ast->_field_top_directives.push(_203425_d);
					} else {
						goto _iter_end_4678713744;
					}
				}
				goto _match_end_4678721936;
				_case_end_4678722320:;
				if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Comment>>() || _match_expr.type_is<jule::Ptr<_221d8b043_CommentGroup>>())) { goto _case_end_4678722416; }
				goto _match_end_4678721936;
				_case_end_4678722416:;
				_case_begin_4678720448:;
				{
					goto _iter_end_4678713744;
				}
				goto _match_end_4678721936;
				_case_end_4678720448:;
				_match_end_4678721936:;
			}
		}
	_iter_next_4678713744:;
	}
	_iter_end_4678713744:;
	this->self->_field_errors=nullptr;
	for (; _201517_i < _201217_stmts.len(); (_201517_i)++) {
		{
			jule::Ptr<_221e8c8b4_Stmt> _205421_stmt = _201217_stmts[_201517_i];
			this->self->_method_append_node(_205421_stmt->_field_tokens);
			if (this->self->_method_stopped()) {
				goto _iter_end_4678720304;
			}
		}
	_iter_next_4678720304:;
	}
	_iter_end_4678720304:;
}







std::ostream &operator<<(std::ostream &_Stream, const _222e5128e_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _222e76d20_TypeBuilder::_method_push_err(_2220dce43_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>());
	}
}



inline void _222e76d20_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggestion(_8534_fmt,_8547_args);
	}
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_prim(void) {
	jule::Ptr<_221d8b043_TypeDecl> _9217_t = _222e76d20_build_prim_type((*this)._field_tokens[(*((*this)._field_i))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_namespace(void) {
	jule::Ptr<_221d8b043_TypeDecl> _9817_t = jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl((*this)._field_tokens[(*((*this)._field_i))],jule::Any()));
	jule::Ptr<_221d8b043_NamespaceTypeDecl> _10217_nst = jule::new_struct<_221d8b043_NamespaceTypeDecl>(new( std::nothrow ) _221d8b043_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_2220dce43_Token _10521_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (jule::unsafe_mod(_10317_n,2LL) == 0LL) {
				if (_10521_token._field_id != 2LLU) {
					(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				}
				_10217_nst->_field_idents = jule::alloc_for_append(_10217_nst->_field_idents,1);_10217_nst->_field_idents.push(_10521_token);
			} else if (_10521_token._field_id != 23LLU) {
				goto _iter_end_4685056496;
			}
			(_10317_n)++;
		}
	_iter_next_4685056496:;
	}
	_iter_end_4685056496:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,_10217_nst->_field_idents.len() - 1LL);
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ptr<_221d8b043_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> _222e76d20_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_2220dce43_Token _13113_token = (*this)._field_tokens[(*((*this)._field_i))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_2220dce43_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_221d8b043_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_221d8b043_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_13617_parts.len()));
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_4685083872:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _222e76d20_part = *it;
			{
				jule::Int _14421_j = 0LL;
				jule::Ptr<_221d8b043_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_222e76d20_part,(&(_14421_j)),true);
				if (_14421_j < _222e76d20_part.len()) {
					(*this)._method_push_err(_222e76d20_part[_14421_j],jule::Str("invalid syntax", 14));
				}
				_14217_types.push(_14522_t);
			}
			_iter_next_4685083872:;
			++it;
			goto _iter_begin_4685083872;
		}
		_iter_end_4685083872:;
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_2220dce43_Token>> _222e76d20_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_2220dce43_Token _15817_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (_15817_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _15817_token._field_kind };
					if (!(_match_expr == (jule::Str("[", 1)))) { goto _case_end_4685095904; }
					_case_begin_4685095904:;
					{
						(_15617_range_n)++;
					}
					goto _match_end_4685095824;
					_case_end_4685095904:;
					if (!(_match_expr == (jule::Str("]", 1)))) { goto _case_end_4685096000; }
					_case_begin_4685096000:;
					{
						(_15617_range_n)--;
					}
					goto _match_end_4685095824;
					_case_end_4685096000:;
					_match_end_4685095824:;
				}
			}
			if (_15617_range_n == 0LL) {
				((*((*this)._field_i)))++;
				goto _iter_end_4685086976;
			}
		}
	_iter_next_4685086976:;
	}
	_iter_end_4685086976:;
	jule::Slice<_2220dce43_Token> _17017_tokens = (*this)._field_tokens.slice(_15513_first + 1LL,(*((*this)._field_i)) - 1LL);
	jule::Slice<jule::Slice<_2220dce43_Token>> _17118_parts;
	jule::Slice<_23886c227_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _222e5128e_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_2220dce43_Token _18217_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_221d8b043_IdentTypeDecl> _18317_it = jule::new_struct<_221d8b043_IdentTypeDecl>(new( std::nothrow ) _221d8b043_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ptr<_221d8b043_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	}
	(*((*this)._field_i))+=2LL;
	jule::Ptr<_221d8b043_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ptr<_221d8b043_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_fn(void) {
	_2220dce43_Token _20817_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_221d8b043_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if (_20917_f == nullptr) {
		return nullptr;
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_ptr(void) {
	_2220dce43_Token _22317_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[(*((*this)._field_i))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_22317_token,jule::Any(jule::new_struct<_221d8b043_PtrTypeDecl>(new( std::nothrow ) _221d8b043_PtrTypeDecl(nullptr)))));
	}
	jule::Ptr<_221d8b043_TypeDecl> _24017_elem = (*this)._method_step();
	if (_24017_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_22317_token,jule::Any(jule::new_struct<_221d8b043_PtrTypeDecl>(new( std::nothrow ) _221d8b043_PtrTypeDecl(_24017_elem)))));
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_sptr(void) {
	_2220dce43_Token _25417_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	jule::Ptr<_221d8b043_TypeDecl> _26117_elem = (*this)._method_step();
	if (_26117_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_25417_token,jule::Any(jule::new_struct<_221d8b043_SptrTypeDecl>(new( std::nothrow ) _221d8b043_SptrTypeDecl(_26117_elem)))));
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_op(void) {
	_2220dce43_Token _27517_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto &_match_expr{ _27517_token._field_kind };
		if (!(_match_expr == (jule::Str("*", 1)))) { goto _case_end_4685156240; }
		_case_begin_4685156240:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_4685155504;
		_case_end_4685156240:;
		if (!(_match_expr == (jule::Str("&", 1)))) { goto _case_end_4685157968; }
		_case_begin_4685157968:;
		{
			return (*this)._method_build_sptr();
		}
		goto _match_end_4685155504;
		_case_end_4685157968:;
		if (!(_match_expr == (jule::Str("&&", 2)))) { goto _case_end_4685158064; }
		_case_begin_4685158064:;
		{
			return jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_2220dce43_Token(),jule::Any(jule::new_struct<_221d8b043_SptrTypeDecl>(new( std::nothrow ) _221d8b043_SptrTypeDecl((*this)._method_build_sptr())))));
		}
		goto _match_end_4685155504;
		_case_end_4685158064:;
		_case_begin_4685153648:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		goto _match_end_4685155504;
		_case_end_4685153648:;
		_match_end_4685155504:;
	}
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_slc(void) {
	_2220dce43_Token _29717_token = (*this)._field_tokens[(*((*this)._field_i))];
	((*((*this)._field_i)))++;
	jule::Ptr<_221d8b043_TypeDecl> _29917_elem = (*this)._method_step();
	if (_29917_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_29717_token,jule::Any(jule::new_struct<_221d8b043_SlcTypeDecl>(new( std::nothrow ) _221d8b043_SlcTypeDecl(_29917_elem)))));
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i)) - 1LL],jule::Str("data-type missing", 17));
		return nullptr;
	}
	jule::Int _32013_expr_delta = (*((*this)._field_i));
	jule::Ptr<_221d8b043_TypeDecl> _32217_elem = (*this)._method_step();
	if (_32217_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_221d8b043_ArrTypeDecl> _32717_arrt = jule::new_struct<_221d8b043_ArrTypeDecl>(new( std::nothrow ) _221d8b043_ArrTypeDecl(_32217_elem,jule::Ptr<_221d8b043_Expr>()));
	jule::Slice<_2220dce43_Token> _33117_expr_tokens = (*this)._field_tokens.slice(0LL,_32013_expr_delta);
	std::tie(std::ignore,_33117_expr_tokens) = _222e5128e_range_last(_33117_expr_tokens);
	_33117_expr_tokens=_33117_expr_tokens.slice(1LL,_33117_expr_tokens.len() - 1LL);
	_2220dce43_Token _33417_token = _33117_expr_tokens[0LL];
	if (((_33117_expr_tokens.len() == 1LL) && (_33417_token._field_id == 7LLU)) && (_33417_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32717_arrt->_field_size=(*this)._field_p->_method_build_expr(_33117_expr_tokens);
	}
	return jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_33417_token,jule::Any(_32717_arrt)));
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_map(jule::Int _34728_colon,jule::Slice<_2220dce43_Token>& _34745_tokens) {
	_2220dce43_Token _34817_colon_token = (*this)._field_tokens[_34728_colon];
	if ((_34728_colon == 0LL) || ((_34728_colon + 1LL) >= _34745_tokens.len())) {
		(*this)._method_push_err(_34817_colon_token,jule::Str("data-type missing", 17));
		return nullptr;
	}
	jule::Slice<_2220dce43_Token> _35317_key_tokens = _34745_tokens.slice(0LL,_34728_colon);
	jule::Slice<_2220dce43_Token> _35417_val_tokens = _34745_tokens.slice(_34728_colon + 1LL);
	jule::Ptr<_221d8b043_MapTypeDecl> _35517_mapt = jule::new_struct<_221d8b043_MapTypeDecl>(new( std::nothrow ) _221d8b043_MapTypeDecl());
	jule::Int _35717_j = 0LL;
	jule::Ptr<_221d8b043_TypeDecl> _35818_keyt;
	jule::Bool _35828_ok;
	std::tie(_35818_keyt,_35828_ok) = (*this)._field_p->_method_build_type(_35317_key_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < _35317_key_tokens.len()) {
		(*this)._method_push_err(_35317_key_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt->_field_key=_35818_keyt;
	_35717_j=0LL;
	jule::Ptr<_221d8b043_TypeDecl> _36718_valt;
	std::tie(_36718_valt,_35828_ok) = (*this)._field_p->_method_build_type(_35417_val_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < _35417_val_tokens.len()) {
		(*this)._method_push_err(_35417_val_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt->_field_val=_36718_valt;
	return jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_34817_colon_token,jule::Any(_35517_mapt)));
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_build_enumerable(void) {
	_2220dce43_Token _38217_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_38217_token._field_id != 3LLU)) || (_38217_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_38217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	_38217_token=(*this)._field_tokens[(*((*this)._field_i))];
	if ((_38217_token._field_id == 3LLU) && (_38217_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_2220dce43_Token> _39618_map_tokens;
	jule::Int _39630_colon;
	std::tie(_39618_map_tokens,_39630_colon) = _222e76d20_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39630_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39630_colon,_39618_map_tokens);
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_TypeBuilder::_method_step(void) {
	_2220dce43_Token _40513_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto &_match_expr{ _40513_token._field_id };
		if (!(_match_expr == (1LLU))) { goto _case_end_4683533536; }
		_case_begin_4683533536:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_4683533136;
		_case_end_4683533536:;
		if (!(_match_expr == (2LLU))) { goto _case_end_4683533632; }
		_case_begin_4683533632:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_4683533136;
		_case_end_4683533632:;
		if (!(_match_expr == (31LLU))) { goto _case_end_4683535584; }
		_case_begin_4683535584:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_4683533136;
		_case_end_4683535584:;
		if (!(_match_expr == (33LLU))) { goto _case_end_4683535680; }
		_case_begin_4683535680:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_4683533136;
		_case_end_4683535680:;
		if (!(_match_expr == (7LLU))) { goto _case_end_4683535776; }
		_case_begin_4683535776:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_4683533136;
		_case_end_4683535776:;
		if (!(_match_expr == (3LLU))) { goto _case_end_4683535872; }
		_case_begin_4683535872:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_4683533136;
		_case_end_4683535872:;
		_case_begin_4683531360:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_40513_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		goto _match_end_4683533136;
		_case_end_4683531360:;
		_match_end_4683533136:;
	}
}



inline std::tuple<jule::Ptr<_221d8b043_TypeDecl>,jule::Bool> _222e76d20_TypeBuilder::_method_build(void) {
	jule::Bool _43444_ok = jule::Bool();
	jule::Ptr<_221d8b043_TypeDecl> _43517_root = (*this)._method_step();
	if (_43517_root == nullptr) {
		_43444_ok = false;
		return std::make_tuple(_222e76d20_build_void_type(),_43444_ok);
	}
	_43444_ok = true;
	return std::make_tuple(_43517_root,_43444_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _222e76d20_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_206e210e3_Const> _206e210e3_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_206e210e3_Const>(new( std::nothrow ) _206e210e3_Const(jule::Any(_1327_x)));
}



inline jule::Ptr<_206e210e3_Const> _206e210e3_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_206e210e3_Const>(new( std::nothrow ) _206e210e3_Const(jule::Any(_1527_x)));
}



inline jule::Ptr<_206e210e3_Const> _206e210e3_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_206e210e3_Const>(new( std::nothrow ) _206e210e3_Const(jule::Any(_1728_x)));
}



inline jule::Ptr<_206e210e3_Const> _206e210e3_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_206e210e3_Const>(new( std::nothrow ) _206e210e3_Const(jule::Any(_1927_x)));
}



inline jule::Ptr<_206e210e3_Const> _206e210e3_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_206e210e3_Const>(new( std::nothrow ) _206e210e3_Const(jule::Any(_2127_x)));
}



inline jule::Ptr<_206e210e3_Const> _206e210e3_Const::_static_method_new_nil(void) {
	return jule::new_struct<_206e210e3_Const>(new( std::nothrow ) _206e210e3_Const(jule::Any(nullptr)));
}



inline jule::I64 _206e210e3_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _206e210e3_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _206e210e3_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _206e210e3_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str();
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _206e210e3_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _206e210e3_Const::_method_as_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4683623904; }
		_case_begin_4683623904:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_4683622576;
		_case_end_4683623904:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4683624240; }
		_case_begin_4683624240:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4683622576;
		_case_end_4683624240:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4683624336; }
		_case_begin_4683624336:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4683622576;
		_case_end_4683624336:;
		_case_begin_4683622096:;
		{
			return 0LL;
		}
		goto _match_end_4683622576;
		_case_end_4683622096:;
		_match_end_4683622576:;
	}
}



inline jule::U64 _206e210e3_Const::_method_as_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4683629760; }
		_case_begin_4683629760:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_4683628928;
		_case_end_4683629760:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4683630096; }
		_case_begin_4683630096:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4683628928;
		_case_end_4683630096:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4683630192; }
		_case_begin_4683630192:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4683628928;
		_case_end_4683630192:;
		_case_begin_4683622656:;
		{
			return 0LL;
		}
		goto _match_end_4683628928;
		_case_end_4683622656:;
		_match_end_4683628928:;
	}
}



inline jule::F64 _206e210e3_Const::_method_as_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4683636352; }
		_case_begin_4683636352:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_4683635024;
		_case_end_4683636352:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4683636688; }
		_case_begin_4683636688:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4683635024;
		_case_end_4683636688:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4683636784; }
		_case_begin_4683636784:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4683635024;
		_case_end_4683636784:;
		_case_begin_4683634496:;
		{
			return 0LL;
		}
		goto _match_end_4683635024;
		_case_end_4683634496:;
		_match_end_4683635024:;
	}
}



inline void _206e210e3_Const::_method_set_i64(jule::I64 _13930_x) {
	(*this)._field_data=jule::Any(_13930_x);
}



inline void _206e210e3_Const::_method_set_u64(jule::U64 _14130_x) {
	(*this)._field_data=jule::Any(_14130_x);
}



inline void _206e210e3_Const::_method_set_bool(jule::Bool _14331_x) {
	(*this)._field_data=jule::Any(_14331_x);
}



inline void _206e210e3_Const::_method_set_str(jule::Str _14530_x) {
	(*this)._field_data=jule::Any(_14530_x);
}



inline void _206e210e3_Const::_method_set_f64(jule::F64 _14730_x) {
	(*this)._field_data=jule::Any(_14730_x);
}



inline void _206e210e3_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline jule::Bool _206e210e3_Const::_method_is_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4683656688; }
		_case_begin_4683656688:;
		{
			return true;
		}
		goto _match_end_4683655136;
		_case_end_4683656688:;
		_case_begin_4683654656:;
		{
			return false;
		}
		goto _match_end_4683655136;
		_case_end_4683654656:;
		_match_end_4683655136:;
	}
}



inline jule::Bool _206e210e3_Const::_method_is_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4683659120; }
		_case_begin_4683659120:;
		{
			return true;
		}
		goto _match_end_4683657808;
		_case_end_4683659120:;
		_case_begin_4683657488:;
		{
			return false;
		}
		goto _match_end_4683657808;
		_case_end_4683657488:;
		_match_end_4683657808:;
	}
}



inline jule::Bool _206e210e3_Const::_method_is_bool(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4683661520; }
		_case_begin_4683661520:;
		{
			return true;
		}
		goto _match_end_4683660208;
		_case_end_4683661520:;
		_case_begin_4683659888:;
		{
			return false;
		}
		goto _match_end_4683660208;
		_case_end_4683659888:;
		_match_end_4683660208:;
	}
}



inline jule::Bool _206e210e3_Const::_method_is_str(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4683663920; }
		_case_begin_4683663920:;
		{
			return true;
		}
		goto _match_end_4683662608;
		_case_end_4683663920:;
		_case_begin_4683662288:;
		{
			return false;
		}
		goto _match_end_4683662608;
		_case_end_4683662288:;
		_match_end_4683662608:;
	}
}



inline jule::Bool _206e210e3_Const::_method_is_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4683666320; }
		_case_begin_4683666320:;
		{
			return true;
		}
		goto _match_end_4683665008;
		_case_end_4683666320:;
		_case_begin_4683664688:;
		{
			return false;
		}
		goto _match_end_4683665008;
		_case_end_4683664688:;
		_match_end_4683665008:;
	}
}



inline jule::Bool _206e210e3_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _206e210e3_Const::_method_are_same_types(_206e210e3_Const _19933_x) {
	{
		if (!(((*this)._method_is_i64() == _19933_x._method_is_i64()))) { goto _case_end_4683672176; }
		_case_begin_4683672176:;
		{
			return true;
		}
		goto _match_end_4683670288;
		_case_end_4683672176:;
		if (!(((*this)._method_is_u64() == _19933_x._method_is_u64()))) { goto _case_end_4683670768; }
		_case_begin_4683670768:;
		{
			return true;
		}
		goto _match_end_4683670288;
		_case_end_4683670768:;
		if (!(((*this)._method_is_f64() == _19933_x._method_is_f64()))) { goto _case_end_4683670864; }
		_case_begin_4683670864:;
		{
			return true;
		}
		goto _match_end_4683670288;
		_case_end_4683670864:;
		if (!(((*this)._method_is_bool() == _19933_x._method_is_bool()))) { goto _case_end_4683670960; }
		_case_begin_4683670960:;
		{
			return true;
		}
		goto _match_end_4683670288;
		_case_end_4683670960:;
		if (!(((*this)._method_is_str() == _19933_x._method_is_str()))) { goto _case_end_4683671056; }
		_case_begin_4683671056:;
		{
			return true;
		}
		goto _match_end_4683670288;
		_case_end_4683671056:;
		if (!(((*this)._method_is_nil() == _19933_x._method_is_nil()))) { goto _case_end_4683671472; }
		_case_begin_4683671472:;
		{
			return true;
		}
		goto _match_end_4683670288;
		_case_end_4683671472:;
		_case_begin_4683670464:;
		{
			return false;
		}
		goto _match_end_4683670288;
		_case_end_4683670464:;
		_match_end_4683670288:;
	}
}



inline jule::Bool _206e210e3_Const::_method_and(_206e210e3_Const _21722_x) {
	{
		if (!(((*this)._method_is_bool() && _21722_x._method_is_bool()))) { goto _case_end_4683684256; }
		_case_begin_4683684256:;
		{
			return (*this)._method_read_bool() && _21722_x._method_read_bool();
		}
		goto _match_end_4683682448;
		_case_end_4683684256:;
		_case_begin_4683682624:;
		{
			return false;
		}
		goto _match_end_4683682448;
		_case_end_4683682624:;
		_match_end_4683682448:;
	}
}



inline jule::Bool _206e210e3_Const::_method_or(_206e210e3_Const _22921_x) {
	{
		if (!(((*this)._method_is_bool() && _22921_x._method_is_bool()))) { goto _case_end_4683689808; }
		_case_begin_4683689808:;
		{
			return (*this)._method_read_bool() || _22921_x._method_read_bool();
		}
		goto _match_end_4683688000;
		_case_end_4683689808:;
		_case_begin_4683688176:;
		{
			return false;
		}
		goto _match_end_4683688000;
		_case_end_4683688176:;
		_match_end_4683688000:;
	}
}



inline jule::Bool _206e210e3_Const::_method_eqs(_206e210e3_Const _24122_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_4683695280; }
		_case_begin_4683695280:;
		{
			return _24122_x._method_is_nil();
		}
		goto _match_end_4683693392;
		_case_end_4683695280:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_4683693872; }
		_case_begin_4683693872:;
		{
			return _24122_x._method_is_bool() && ((*this)._method_read_bool() == _24122_x._method_read_bool());
		}
		goto _match_end_4683693392;
		_case_end_4683693872:;
		if (!(((*this)._method_is_str()))) { goto _case_end_4683693968; }
		_case_begin_4683693968:;
		{
			return _24122_x._method_is_str() && ((*this)._method_read_str() == _24122_x._method_read_str());
		}
		goto _match_end_4683693392;
		_case_end_4683693968:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683694064; }
		_case_begin_4683694064:;
		{
			return (*this)._method_read_i64() == _24122_x._method_as_i64();
		}
		goto _match_end_4683693392;
		_case_end_4683694064:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683694160; }
		_case_begin_4683694160:;
		{
			return (*this)._method_read_u64() == _24122_x._method_as_u64();
		}
		goto _match_end_4683693392;
		_case_end_4683694160:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4683694576; }
		_case_begin_4683694576:;
		{
			return (*this)._method_read_f64() == _24122_x._method_as_f64();
		}
		goto _match_end_4683693392;
		_case_end_4683694576:;
		_case_begin_4683693568:;
		{
			return false;
		}
		goto _match_end_4683693392;
		_case_end_4683693568:;
		_match_end_4683693392:;
	}
}



inline jule::Bool _206e210e3_Const::_method_lt(_206e210e3_Const _27321_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683710896; }
		_case_begin_4683710896:;
		{
			return (*this)._method_read_i64() < _27321_x._method_as_i64();
		}
		goto _match_end_4683709056;
		_case_end_4683710896:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683710992; }
		_case_begin_4683710992:;
		{
			return (*this)._method_read_u64() < _27321_x._method_as_u64();
		}
		goto _match_end_4683709056;
		_case_end_4683710992:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4683709536; }
		_case_begin_4683709536:;
		{
			return (*this)._method_read_f64() < _27321_x._method_as_f64();
		}
		goto _match_end_4683709056;
		_case_end_4683709536:;
		_case_begin_4683709232:;
		{
			return false;
		}
		goto _match_end_4683709056;
		_case_end_4683709232:;
		_match_end_4683709056:;
	}
}



inline jule::Bool _206e210e3_Const::_method_gt(_206e210e3_Const _29621_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683719552; }
		_case_begin_4683719552:;
		{
			return (*this)._method_read_i64() > _29621_x._method_as_i64();
		}
		goto _match_end_4683717712;
		_case_end_4683719552:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683719648; }
		_case_begin_4683719648:;
		{
			return (*this)._method_read_u64() > _29621_x._method_as_u64();
		}
		goto _match_end_4683717712;
		_case_end_4683719648:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4683718192; }
		_case_begin_4683718192:;
		{
			return (*this)._method_read_f64() > _29621_x._method_as_f64();
		}
		goto _match_end_4683717712;
		_case_end_4683718192:;
		_case_begin_4683717888:;
		{
			return false;
		}
		goto _match_end_4683717712;
		_case_end_4683717888:;
		_match_end_4683717712:;
	}
}



inline jule::Bool _206e210e3_Const::_method_add(_206e210e3_Const _31826_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_4683728544; }
		_case_begin_4683728544:;
		{
			if ((!(_31826_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _31826_x._method_read_str());
		}
		goto _match_end_4683726688;
		_case_end_4683728544:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4683728640; }
		_case_begin_4683728640:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() + _31826_x._method_as_f64()));
		}
		goto _match_end_4683726688;
		_case_end_4683728640:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683727184; }
		_case_begin_4683727184:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() + _31826_x._method_as_i64()));
			}
		}
		goto _match_end_4683726688;
		_case_end_4683727184:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683727296; }
		_case_begin_4683727296:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() + _31826_x._method_as_u64()));
			}
		}
		goto _match_end_4683726688;
		_case_end_4683727296:;
		_case_begin_4683726864:;
		{
			return false;
		}
		goto _match_end_4683726688;
		_case_end_4683726864:;
		_match_end_4683726688:;
	}
	return true;
}



inline jule::Bool _206e210e3_Const::_method_sub(_206e210e3_Const _35126_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4683748608; }
		_case_begin_4683748608:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() - _35126_x._method_as_f64()));
		}
		goto _match_end_4683746768;
		_case_end_4683748608:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683748704; }
		_case_begin_4683748704:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() - _35126_x._method_as_i64()));
			}
		}
		goto _match_end_4683746768;
		_case_end_4683748704:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683747248; }
		_case_begin_4683747248:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() - _35126_x._method_as_u64()));
			}
		}
		goto _match_end_4683746768;
		_case_end_4683747248:;
		_case_begin_4683746944:;
		{
			return false;
		}
		goto _match_end_4683746768;
		_case_end_4683746944:;
		_match_end_4683746768:;
	}
	return true;
}



inline jule::Bool _206e210e3_Const::_method_mul(_206e210e3_Const _37826_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4683765360; }
		_case_begin_4683765360:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() * _37826_x._method_as_f64()));
		}
		goto _match_end_4683763520;
		_case_end_4683765360:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683765456; }
		_case_begin_4683765456:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() * _37826_x._method_as_i64()));
			}
		}
		goto _match_end_4683763520;
		_case_end_4683765456:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683764000; }
		_case_begin_4683764000:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() * _37826_x._method_as_u64()));
			}
		}
		goto _match_end_4683763520;
		_case_end_4683764000:;
		_case_begin_4683763696:;
		{
			return false;
		}
		goto _match_end_4683763520;
		_case_end_4683763696:;
		_match_end_4683763520:;
	}
	return true;
}



inline jule::Bool _206e210e3_Const::_method_div(_206e210e3_Const _40926_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4683781728; }
		_case_begin_4683781728:;
		{
			jule::F64 _41217_l = _40926_x._method_as_f64();
			if (_41217_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_41217_l)));
		}
		goto _match_end_4683779888;
		_case_end_4683781728:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683781824; }
		_case_begin_4683781824:;
		{
			jule::F64 _41917_l = _40926_x._method_as_f64();
			if (_41917_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_41917_l)));
		}
		goto _match_end_4683779888;
		_case_end_4683781824:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683780368; }
		_case_begin_4683780368:;
		{
			jule::F64 _42617_l = _40926_x._method_as_f64();
			if (_42617_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_42617_l)));
		}
		goto _match_end_4683779888;
		_case_end_4683780368:;
		_case_begin_4683780064:;
		{
			return false;
		}
		goto _match_end_4683779888;
		_case_end_4683780064:;
		_match_end_4683779888:;
	}
	return true;
}



inline jule::Bool _206e210e3_Const::_method_mod(_206e210e3_Const _44126_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683797424; }
		_case_begin_4683797424:;
		{
			jule::I64 _44417_l = _44126_x._method_as_i64();
			if (_44417_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_44417_l)));
		}
		goto _match_end_4683795600;
		_case_end_4683797424:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683797520; }
		_case_begin_4683797520:;
		{
			jule::U64 _45117_l = _44126_x._method_as_u64();
			if (_45117_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_45117_l)));
		}
		goto _match_end_4683795600;
		_case_end_4683797520:;
		_case_begin_4683795776:;
		{
			return false;
		}
		goto _match_end_4683795600;
		_case_end_4683795776:;
		_match_end_4683795600:;
	}
	return true;
}



inline jule::Bool _206e210e3_Const::_method_bitwise_and(_206e210e3_Const _46534_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683809056; }
		_case_begin_4683809056:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _46534_x._method_as_i64()));
		}
		goto _match_end_4683807232;
		_case_end_4683809056:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683809152; }
		_case_begin_4683809152:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _46534_x._method_as_u64()));
		}
		goto _match_end_4683807232;
		_case_end_4683809152:;
		_case_begin_4683807408:;
		{
			return false;
		}
		goto _match_end_4683807232;
		_case_end_4683807408:;
		_match_end_4683807232:;
	}
	return true;
}



inline jule::Bool _206e210e3_Const::_method_bitwise_or(_206e210e3_Const _48133_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683817584; }
		_case_begin_4683817584:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _48133_x._method_as_i64()));
		}
		goto _match_end_4683815760;
		_case_end_4683817584:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683817680; }
		_case_begin_4683817680:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _48133_x._method_as_u64()));
		}
		goto _match_end_4683815760;
		_case_end_4683817680:;
		_case_begin_4683815936:;
		{
			return false;
		}
		goto _match_end_4683815760;
		_case_end_4683815936:;
		_match_end_4683815760:;
	}
	return true;
}



inline jule::Bool _206e210e3_Const::_method_xor(_206e210e3_Const _49726_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683825984; }
		_case_begin_4683825984:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _49726_x._method_as_i64()));
		}
		goto _match_end_4683824160;
		_case_end_4683825984:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683826080; }
		_case_begin_4683826080:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _49726_x._method_as_u64()));
		}
		goto _match_end_4683824160;
		_case_end_4683826080:;
		_case_begin_4683824336:;
		{
			return false;
		}
		goto _match_end_4683824160;
		_case_end_4683824336:;
		_match_end_4683824160:;
	}
	return true;
}



inline jule::Bool _206e210e3_Const::_method_lshift(_206e210e3_Const _51329_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683834512; }
		_case_begin_4683834512:;
		{
			jule::I64 _51617_l = (*this)._method_as_i64();
			if (_51617_l < 0LL) {
				jule::U64 _51821_r = _51329_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_51617_l << _51821_r));
			} else {
				_206e210e3_lshift_unsig((*this),_51329_x);
			}
		}
		goto _match_end_4683832688;
		_case_end_4683834512:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683834608; }
		_case_begin_4683834608:;
		{
			_206e210e3_lshift_unsig((*this),_51329_x);
		}
		goto _match_end_4683832688;
		_case_end_4683834608:;
		_case_begin_4683832864:;
		{
			return false;
		}
		goto _match_end_4683832688;
		_case_end_4683832864:;
		_match_end_4683832688:;
	}
	return true;
}



inline jule::Bool _206e210e3_Const::_method_rshift(_206e210e3_Const _53629_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4683844544; }
		_case_begin_4683844544:;
		{
			jule::I64 _53917_l = (*this)._method_as_i64();
			if (_53917_l < 0LL) {
				jule::U64 _54121_r = _53629_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_53917_l >> _54121_r));
			} else {
				_206e210e3_rshift_unsig((*this),_53629_x);
			}
		}
		goto _match_end_4683842720;
		_case_end_4683844544:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4683844640; }
		_case_begin_4683844640:;
		{
			_206e210e3_rshift_unsig((*this),_53629_x);
		}
		goto _match_end_4683842720;
		_case_end_4683844640:;
		_case_begin_4683842896:;
		{
			return false;
		}
		goto _match_end_4683842720;
		_case_end_4683842896:;
		_match_end_4683842720:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e210e3_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2398d04dc_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2398d04dc_StructIns::_method_to_str(void) {
	jule::Str _22217_kind = jule::Str();
	_22217_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_22217_kind+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_4684419072:;
			if (it != expr.end()) {
				jule::Ptr<_2300b54e5_TypeKind> &_2398d04dc_g = *it;
				{
					_22217_kind+=_2398d04dc_g->_method_to_str();
					_22217_kind+=jule::Str(",", 1);
				}
				_iter_next_4684419072:;
				++it;
				goto _iter_begin_4684419072;
			}
			_iter_end_4684419072:;
		}
		_22217_kind=_22217_kind.slice(0LL,_22217_kind.len() - 1LL);
		_22217_kind+=jule::Str("]", 1);
	}
	return _22217_kind;
}



inline jule::Bool _2398d04dc_StructIns::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _23722_other) {
	jule::Ptr<_2398d04dc_StructIns> _23813_s = _23722_other->_method_strct();
	if (_23813_s == nullptr) {
		return false;
	}
	if (this->self->_field_decl != _23813_s->_field_decl) {
		return false;
	}
	if (this->self->_field_generics.len() != _23813_s->_field_generics.len()) {
		return false;
	}
	jule::Int _25117_i = 0LL;
	for (; _25117_i < this->self->_field_generics.len(); (_25117_i)++) {
		{
			if ((!(this->self->_field_generics[_25117_i]->_method_equals(_23813_s->_field_generics[_25117_i])))) {
				return false;
			}
		}
	_iter_next_4684428256:;
	}
	_iter_end_4684428256:;
	return true;
}



inline jule::Bool _2398d04dc_StructIns::_method_same(jule::Ptr<_2398d04dc_StructIns> _26523_s) {
	if (((*this)._field_decl != _26523_s->_field_decl) || (_26523_s->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto &expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_4684436032:;
		if (it != expr.end()) {
			jule::Int _2398d04dc_i = it - expr.begin();
			jule::Ptr<_2300b54e5_TypeKind> &_2398d04dc_g = *it;
			{
				if ((!(_2398d04dc_g->_method_equals(_26523_s->_field_generics[_2398d04dc_i])))) {
					return false;
				}
			}
			_iter_next_4684436032:;
			++it;
			_2398d04dc_i++;
			goto _iter_begin_4684436032;
		}
		_iter_end_4684436032:;
	}
	return true;
}



inline jule::Ptr<_222edb48e_Fn> _2398d04dc_StructIns::_method_find_method(jule::Str _28034_ident,jule::Bool _28046_statically) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4684444992:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _2398d04dc_f = *it;
			{
				if ((_2398d04dc_f->_field_statically == _28046_statically) && (_2398d04dc_f->_field_ident == _28034_ident)) {
					return _2398d04dc_f;
				}
			}
			_iter_next_4684444992:;
			++it;
			goto _iter_begin_4684444992;
		}
		_iter_end_4684444992:;
	}
	return nullptr;
}



inline jule::Ptr<_2398d04dc_FieldIns> _2398d04dc_StructIns::_method_find_field(jule::Str _29133_ident) {
	{
		auto &expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_4684449840:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_FieldIns> _2398d04dc_f = *it;
			{
				if (_2398d04dc_f->_field_decl->_field_ident == _29133_ident) {
					return _2398d04dc_f;
				}
			}
			_iter_next_4684449840:;
			++it;
			goto _iter_begin_4684449840;
		}
		_iter_end_4684449840:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2398d04dc_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _222edb48e_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _222edb48e_ParamIns::_method_to_str(void) {
	jule::Str _18017_s = jule::Str();
	if ((*this)._field_decl->_field_mutable) {
		_18017_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_18017_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_18017_s+=jule::Str("&", 1);
		}
		_18017_s+=jule::Str("self", 4);
		return _18017_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_18017_s+=jule::Str("...", 3);
	}
	if ((*this)._field_kind != nullptr) {
		_18017_s+=(*this)._field_kind->_method_to_str();
	}
	return _18017_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _222edb48e_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _222edb48e_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



inline jule::Bool _222edb48e_FnIns::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _23522_other) {
	jule::Ptr<_222edb48e_FnIns> _23613_f = _23522_other->_method_fnc();
	if (_23613_f == nullptr) {
		return false;
	}
	if (this->self->_field_decl->_field_statically != _23613_f->_field_decl->_field_statically) {
		return false;
	}
	if (this->self->_field_decl->_field_exceptional != _23613_f->_field_decl->_field_exceptional) {
		return false;
	}
	if (this->self->_field_decl->_field_unsafety != _23613_f->_field_decl->_field_unsafety) {
		return false;
	}
	if (this->self->_field_generics.len() != _23613_f->_field_generics.len()) {
		return false;
	}
	if (this->self->_field_decl->_method_is_void() != _23613_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _26117_i = 0LL;
	for (; _26117_i < this->self->_field_generics.len(); (_26117_i)++) {
		{
			if ((!(this->self->_field_generics[_26117_i]->_method_equals(_23613_f->_field_generics[_26117_i])))) {
				return false;
			}
		}
	_iter_next_4687919856:;
	}
	_iter_end_4687919856:;
	jule::Fn<jule::Bool(jule::Ptr<_222edb48e_ParamIns>,jule::Ptr<_222edb48e_ParamIns>)> _26813_check_params = jule::Fn<jule::Bool(jule::Ptr<_222edb48e_ParamIns>,jule::Ptr<_222edb48e_ParamIns>)>([=](jule::Ptr<_222edb48e_ParamIns> _26831_p1,jule::Ptr<_222edb48e_ParamIns> _26846_p2) mutable -> jule::Bool {
		if (_26831_p1->_field_decl->_field_mutable != _26846_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_26831_p1->_field_decl->_method_is_self()) {
			if ((!(_26846_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_26831_p1->_field_decl->_method_is_ref() != _26846_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_26831_p1->_field_decl->_field_reference != _26846_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_26831_p1->_field_decl->_field_variadic != _26846_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _26831_p1->_field_kind->_method_equals(_26846_p2->_field_kind);
	});
	_26117_i=0LL;
	for (; _26117_i < this->self->_field_params.len(); (_26117_i)++) {
		{
			if ((!(_26813_check_params(this->self->_field_params[_26117_i],_23613_f->_field_params[_26117_i])))) {
				return false;
			}
		}
	_iter_next_4687939680:;
	}
	_iter_end_4687939680:;
	if ((!(this->self->_field_decl->_method_is_void()))) {
		if ((!(this->self->_field_result->_method_equals(_23613_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _222edb48e_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



inline jule::Bool _222edb48e_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (((*this)._field_decl != nullptr) && (*this)._field_decl->_method_is_anon());
}



inline jule::Bool _222edb48e_FnIns::_method_same(jule::Ptr<_222edb48e_FnIns> _32223_f) {
	if (((*this)._field_decl != _32223_f->_field_decl) || (_32223_f->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto &expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_4687954224:;
		if (it != expr.end()) {
			jule::Int _222edb48e_i = it - expr.begin();
			jule::Ptr<_2300b54e5_TypeKind> &_222edb48e_g = *it;
			{
				if ((!(_222edb48e_g->_method_equals(_32223_f->_field_generics[_222edb48e_i])))) {
					return false;
				}
			}
			_iter_next_4687954224:;
			++it;
			_222edb48e_i++;
			goto _iter_begin_4687954224;
		}
		_iter_end_4687954224:;
	}
	return true;
}



inline jule::Str _222edb48e_FnIns::_method_get_kind_str(jule::Bool _33831_ident) {
	jule::Str _33917_s = jule::Str();
	if ((*this)._field_decl->_field_statically) {
		_33917_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_33917_s+=jule::Str("unsafe ", 7);
	}
	_33917_s+=jule::Str("fn", 2);
	if (_33831_ident && ((*this)._field_decl != nullptr)) {
		_33917_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_33917_s+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_4687965280:;
			if (it != expr.end()) {
				jule::Int _222edb48e_i = it - expr.begin();
				jule::Ptr<_2300b54e5_TypeKind> &_222edb48e_t = *it;
				{
					_33917_s+=_222edb48e_t->_method_to_str();
					if ((_222edb48e_i + 1LL) < (*this)._field_generics.len()) {
						_33917_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4687965280:;
				++it;
				_222edb48e_i++;
				goto _iter_begin_4687965280;
			}
			_iter_end_4687965280:;
		}
		_33917_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_33917_s+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_decl->_field_generics;
			auto it = expr.begin();
			_iter_begin_4687970384:;
			if (it != expr.end()) {
				jule::Int _222edb48e_i = it - expr.begin();
				jule::Ptr<_221d8b043_GenericDecl> &_222edb48e_g = *it;
				{
					_33917_s+=_222edb48e_g->_field_ident;
					if ((_222edb48e_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_33917_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4687970384:;
				++it;
				_222edb48e_i++;
				goto _iter_begin_4687970384;
			}
			_iter_end_4687970384:;
		}
		_33917_s+=jule::Str("]", 1);
	}
	_33917_s+=jule::Str("(", 1);
	jule::I64 _37613_n = (*this)._field_params.len();
	if (_37613_n > 0LL) {
		{
			auto &expr = (*this)._field_params;
			auto it = expr.begin();
			_iter_begin_4687976640:;
			if (it != expr.end()) {
				jule::Ptr<_222edb48e_ParamIns> &_222edb48e_p = *it;
				{
					_33917_s+=_222edb48e_p->_method_to_str();
					_33917_s+=jule::Str(",", 1);
				}
				_iter_next_4687976640:;
				++it;
				goto _iter_begin_4687976640;
			}
			_iter_end_4687976640:;
		}
		_33917_s=_33917_s.slice(0LL,_33917_s.len() - 1LL);
	}
	_33917_s+=jule::Str(")", 1);
	if ((*this)._field_decl->_field_exceptional) {
		_33917_s+=jule::Str("!", 1);
	}
	if ((!((*this)._field_decl->_method_is_void()))) {
		_33917_s+=jule::Str(":", 1);
		_33917_s+=(*this)._field_result->_method_to_str();
	}
	return _33917_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _222edb48e_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_221db702a_ReferenceStack> _221db702a_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_221db702a_ReferenceStack>(new( std::nothrow ) _221db702a_ReferenceStack());
}



inline jule::Int _221db702a_ReferenceStack::_method_len(void) {
	return static_cast<jule::I64>((*this)._field_buffer.len());
}



inline jule::Any _221db702a_ReferenceStack::_method_at(jule::Int _5825_i) {
	return (*this)._field_buffer[_5825_i];
}



inline void _221db702a_ReferenceStack::_method_push(jule::Any _6331_ref) {
	(*this)._field_buffer = jule::alloc_for_append((*this)._field_buffer,1);(*this)._field_buffer.push(_6331_ref);
}



inline jule::Bool _221db702a_ReferenceStack::_method_exist_0(jule::Ptr<_2200a2657_Var> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4691473488:;
		if (it != expr.end()) {
			jule::Any &_221db702a_ref = *it;
			{
				if (_221db702a_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_4691473488:;
			++it;
			goto _iter_begin_4691473488;
		}
		_iter_end_4691473488:;
	}
	return false;
}

inline jule::Bool _221db702a_ReferenceStack::_method_exist_1(jule::Ptr<_222edb48e_FnIns> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4691482336:;
		if (it != expr.end()) {
			jule::Any &_221db702a_ref = *it;
			{
				if (_221db702a_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_4691482336:;
			++it;
			goto _iter_begin_4691482336;
		}
		_iter_end_4691482336:;
	}
	return false;
}

inline jule::Bool _221db702a_ReferenceStack::_method_exist_2(jule::Ptr<_2398d04dc_StructIns> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4691518128:;
		if (it != expr.end()) {
			jule::Any &_221db702a_ref = *it;
			{
				if (_221db702a_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_4691518128:;
			++it;
			goto _iter_begin_4691518128;
		}
		_iter_end_4691518128:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _221db702a_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_221db702a_SymbolBuilder> _221db702a_SymbolBuilder::_method_get_root(void) {
	jule::Ptr<_221db702a_SymbolBuilder> _31217_root = this->self;
	while (_31217_root->_field_owner != nullptr) {
		{
			_31217_root=_31217_root->_field_owner;
		}
	_iter_next_4687992336:;
	}
	_iter_end_4687992336:;
	return _31217_root;
}



inline void _221db702a_SymbolBuilder::_method_push_err(_2220dce43_Token& _31928_token,jule::Str _31942_fmt,jule::Slice<jule::Any> _31955_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_21eee051d_compiler_err(_31928_token,true,_31942_fmt,_31955_args));
}



inline void _221db702a_SymbolBuilder::_method_push_err_text(_2220dce43_Token& _32333_token,jule::Str _32347_fmt,jule::Slice<jule::Any> _32360_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_21eee051d_compiler_err(_32333_token,false,_32347_fmt,_32360_args));
}



inline void _221db702a_SymbolBuilder::_method_push_suggestion(jule::Str _32834_fmt,jule::Slice<jule::Any> _32847_args) {
	{
		_21eee051d_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_32834_fmt,_32847_args);
	}
}



inline jule::Bool _221db702a_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ptr<_221d8b043_UseDecl>& _33243_decl) {
	jule::Bool _33261_ok = jule::Bool();
	if (_23886cd0a_is_std_header_path(_33243_decl->_field_link_path)) {
		_33261_ok = true;
		return _33261_ok;
	}
	jule::Str _33713_ext = _23894b9cc_ext(_33243_decl->_field_link_path);
	if ((!(_23886cd0a_is_valid_header_ext(_33713_ext))) && (!(_23886cd0a_is_valid_cpp_ext(_33713_ext)))) {
		(*this)._method_push_err(_33243_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_33713_ext)}));
		_33261_ok = false;
		return _33261_ok;
	}
	jule::Ptr<_222bc7e6c_Status> _34314_info;
	jule::Int _34320_err;
	std::tie(_34314_info,_34320_err) = _222bc7e6c_Status::_static_method_of(_33243_decl->_field_link_path);
	if ((_34320_err != 0LLU) || _34314_info->_method_is_dir()) {
		(*this)._method_push_err(_33243_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_33243_decl->_field_link_path)}));
		_33261_ok = false;
		return _33261_ok;
	}
	_33261_ok = true;
	return _33261_ok;
}



inline jule::Ptr<_2200229c3_ImportInfo> _221db702a_SymbolBuilder::_method_build_cpp_header_import(jule::Ptr<_221d8b043_UseDecl>& _35347_decl) {
	jule::Str _35417_path = _35347_decl->_field_link_path;
	if ((!(_23886cd0a_is_std_header_path(_35347_decl->_field_link_path)))) {
		jule::Bool _35721_ok = (*this)._method_check_cpp_use_decl_path(_35347_decl);
		if ((!(_35721_ok))) {
			return nullptr;
		}
		std::tie(_35417_path,_35721_ok) = _23894b9cc_abs(_35347_decl->_field_link_path);
		if ((!(_35721_ok))) {
			(*this)._method_push_err(_35347_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35347_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_2200229c3_ImportInfo>(new( std::nothrow ) _2200229c3_ImportInfo(_35347_decl->_field_token,_35417_path,_35347_decl->_field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_2220dce43_Token>(),nullptr));
}



inline jule::Ptr<_2200229c3_ImportInfo> _221db702a_SymbolBuilder::_method_build_std_import(jule::Ptr<_221d8b043_UseDecl>& _38040_decl) {
	jule::Str _38117_path = _38040_decl->_field_link_path.slice(jule::Str("std::", 5).len());
	_38117_path=_38117_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38117_path=_23894b9cc_join(jule::Slice<jule::Str>({_23890715d_PATH_STDLIB,_38117_path}));
	jule::Bool _38420_ok;
	std::tie(_38117_path,_38420_ok) = _23894b9cc_abs(_38117_path);
	if ((!(_38420_ok))) {
		(*this)._method_push_err(_38040_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38040_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_222bc7e6c_Status> _39014_info;
	jule::Int _39020_err;
	std::tie(_39014_info,_39020_err) = _222bc7e6c_Status::_static_method_of(_38117_path);
	if ((_39020_err != 0LLU) || (!(_39014_info->_method_is_dir()))) {
		(*this)._method_push_err(_38040_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38040_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Str _39813_ident = _38040_decl->_field_link_path.slice(_38040_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_2200229c3_ImportInfo>(new( std::nothrow ) _2200229c3_ImportInfo(_38040_decl->_field_token,_38117_path,_38040_decl->_field_link_path,_39813_ident,_38040_decl->_field_alias,jule::Bool(),false,true,_38040_decl->_field_full,jule::Slice<_2220dce43_Token>(),jule::new_struct<_2200229c3_Package>(new( std::nothrow ) _2200229c3_Package(nullptr))));
}



inline jule::Ptr<_2200229c3_ImportInfo> _221db702a_SymbolBuilder::_method_build_ident_import(jule::Ptr<_221d8b043_UseDecl>& _41543_decl) {
	jule::Str _41617_path = _41543_decl->_field_link_path;
	_41617_path=_41617_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_41617_path=_23894b9cc_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_41617_path}));
	jule::Bool _42020_ok;
	std::tie(_41617_path,_42020_ok) = _23894b9cc_abs(_41617_path);
	if ((!(_42020_ok))) {
		this->self->_method_push_err(_41543_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41543_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_222bc7e6c_Status> _42614_info;
	jule::Int _42620_err;
	std::tie(_42614_info,_42620_err) = _222bc7e6c_Status::_static_method_of(_41617_path);
	if ((_42620_err != 0LLU) || (!(_42614_info->_method_is_dir()))) {
		this->self->_method_push_err(_41543_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41543_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Str _43413_ident = _41543_decl->_field_link_path.slice(_41543_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_2200229c3_ImportInfo>(new( std::nothrow ) _2200229c3_ImportInfo(_41543_decl->_field_token,_41617_path,_41543_decl->_field_link_path,_43413_ident,_41543_decl->_field_alias,jule::Bool(),false,false,_41543_decl->_field_full,jule::Slice<_2220dce43_Token>(),jule::new_struct<_2200229c3_Package>(new( std::nothrow ) _2200229c3_Package(nullptr))));
}



inline jule::Ptr<_2200229c3_ImportInfo> _221db702a_SymbolBuilder::_method_build_import(jule::Ptr<_221d8b043_UseDecl>& _45137_decl) {
	{
		if (!((_45137_decl->_field_cpp_linked))) { goto _case_end_4688078960; }
		_case_begin_4688078960:;
		{
			return this->self->_method_build_cpp_header_import(_45137_decl);
		}
		goto _match_end_4688077408;
		_case_end_4688078960:;
		if (!((_45137_decl->_field_std))) { goto _case_end_4688079984; }
		_case_begin_4688079984:;
		{
			return this->self->_method_build_std_import(_45137_decl);
		}
		goto _match_end_4688077408;
		_case_end_4688079984:;
		_case_begin_4688077584:;
		{
			return this->self->_method_build_ident_import(_45137_decl);
		}
		goto _match_end_4688077408;
		_case_end_4688077584:;
		_match_end_4688077408:;
	}
}



inline jule::Bool _221db702a_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ptr<_2200229c3_ImportInfo>& _45944_pkg) {
	jule::Bool _45964_ok = jule::Bool();
	jule::Ptr<_2200229c3_ImportInfo> _46113_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)>([=](jule::Ptr<_2200229c3_ImportInfo> _46149_spkg) mutable -> jule::Bool {
		return _45944_pkg->_field_path == _46149_spkg->_field_path;
	}));
	if (_46113_lpkg == nullptr) {
		_45964_ok = true;
		return _45964_ok;
	}
	(*this)._method_push_err(_45944_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_45944_pkg->_field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_45964_ok = false;
	return _45964_ok;
}



inline void _221db702a_SymbolBuilder::_method_impl_import_selections(jule::Ptr<_2200229c3_ImportInfo>& _47346_imp,jule::Ptr<_221d8b043_UseDecl>& _47369_decl) {
	{
		auto &expr = _47369_decl->_field_selected;
		auto it = expr.begin();
		_iter_begin_4688098704:;
		if (it != expr.end()) {
			_2220dce43_Token _221db702a_ident = *it;
			{
				if (_47346_imp->_method_exist_ident(_221db702a_ident._field_kind)) {
					(*this)._method_push_err(_221db702a_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_221db702a_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_4688098704;
				}
				_47346_imp->_field_selected = jule::alloc_for_append(_47346_imp->_field_selected,1);_47346_imp->_field_selected.push(_221db702a_ident);
			}
			_iter_next_4688098704:;
			++it;
			goto _iter_begin_4688098704;
		}
		_iter_end_4688098704:;
	}
}



inline jule::Str _221db702a_SymbolBuilder::_method_get_as_link_path(jule::Str _48540_path) {
	if (_48540_path.has_prefix(_23890715d_PATH_STDLIB)) {
		_48540_path=_48540_path.slice(_23890715d_PATH_STDLIB.len());
		return jule::Str("std", 3) + _48540_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _49114_root;
	std::tie(_49114_root,std::ignore) = _23894b9cc_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_48540_path=_48540_path.slice(_49114_root.len());
	if (_48540_path[0LL] == 47LL) {
		_48540_path=_48540_path.slice(1LL);
	}
	return _48540_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _221db702a_SymbolBuilder::_method_push_cycle_error(jule::Ptr<_221db702a_SymbolBuilder>& _49937_sb,jule::Str _49957_path,jule::Str& _49973_message) {
	
	jule::Str _50213_refers_to = _23886c227_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_49937_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_49957_path))}));
	_49973_message=((_221db702a_str_repeat(jule::Str(" ", 1),4LL) + _50213_refers_to) + jule::Str("\n", 1)) + _49973_message;
}



inline void _221db702a_SymbolBuilder::_method_push_cross_cycle_error(jule::Ptr<_221db702a_SymbolBuilder>& _50943_target,jule::Ptr<_2200229c3_ImportInfo>& _50968_imp,_2220dce43_Token& _50987_error_token) {
	jule::Str _51017_message = jule::Str();
	this->self->_method_push_cycle_error(this->self,_50968_imp->_field_path,_51017_message);
	jule::Ptr<_221db702a_SymbolBuilder> _51417_owner = this->self->_field_owner;
	jule::Ptr<_221db702a_SymbolBuilder> _51517_old = this->self;
	while (_51417_owner->_field_owner != nullptr) {
		{
			this->self->_method_push_cycle_error(_51517_old->_field_owner,_51517_old->_field_table->_field_file->_method_dir(),_51017_message);
			if (_51417_owner->_field_owner == _50943_target) {
				this->self->_method_push_cycle_error(_50943_target,_51417_owner->_field_table->_field_file->_method_dir(),_51017_message);
				goto _iter_end_4688134096;
			}
			_51517_old=_51417_owner;
			_51417_owner=_51417_owner->_field_owner;
		}
	_iter_next_4688134096:;
	}
	_iter_end_4688134096:;
	this->self->_method_push_err(_50987_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_51017_message)}));
}



inline jule::Bool _221db702a_SymbolBuilder::_method_check_import_cycles(jule::Ptr<_2200229c3_ImportInfo> _53239_imp,jule::Ptr<_221d8b043_UseDecl>& _53258_decl) {
	if (_53239_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_53258_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_53239_imp->_field_path))}));
		return false;
	}
	if (this->self->_field_owner == nullptr) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _53239_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_53239_imp,_53258_decl->_field_token);
		return false;
	}
	jule::Ptr<_221db702a_SymbolBuilder> _54717_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_54717_owner->_field_table->_field_file->_method_dir() == _53239_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_54717_owner,_53239_imp,_53258_decl->_field_token);
		return false;
	}
	if (_54717_owner->_field_owner != nullptr) {
		_54717_owner=_54717_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _221db702a_SymbolBuilder::_method_import_package(jule::Ptr<_2200229c3_ImportInfo>& _56239_imp,jule::Ptr<_221d8b043_UseDecl>& _56262_decl) {
	jule::Bool _56280_ok = jule::Bool();
	if (_56239_imp->_field_cpp_linked) {
		_56280_ok = true;
		return _56280_ok;
	}
	jule::Ptr<_2200229c3_ImportInfo> _56717_port = this->self->_field_importer.get()._method_get_import(_56239_imp->_field_path);
	if (_56717_port != nullptr) {
		_56239_imp->_field_package=_56717_port->_field_package;
		_56239_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_56239_imp,_56262_decl)))) {
			_56280_ok = false;
			return _56280_ok;
		}
		jule::Slice<jule::Ptr<_221d8c242_Ast>> _57622_asts;
		jule::Slice<_23886c227_Log> _57628_errors;
		std::tie(_57622_asts,_57628_errors) = this->self->_field_importer.get()._method_import_package(_56239_imp->_field_path);
		if (_57628_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_57628_errors);
			_56280_ok = false;
			return _56280_ok;
		}
		{
			auto &expr = _57622_asts;
			auto it = expr.begin();
			_iter_begin_4688177488:;
			if (it != expr.end()) {
				jule::Ptr<_221d8c242_Ast> _221db702a_ast = *it;
				{
					jule::Ptr<_2067a6b66_SymbolTable> _58326_table;
					jule::Slice<_23886c227_Log> _58333_errors;
					std::tie(_58326_table,_58333_errors) = _206d3c383_build_symbols(_221db702a_ast,this->self->_field_importer,this->self);
					if (_58333_errors.len() > 0LL) {
						this->self->_field_errors=jule::append(this->self->_field_errors,_58333_errors);
						this->self->_method_push_err_text(_56239_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56239_imp->_field_link_path)}));
						_56280_ok = false;
						return _56280_ok;
					}
					_56239_imp->_field_package->_field_files = jule::alloc_for_append(_56239_imp->_field_package->_field_files,1);_56239_imp->_field_package->_field_files.push(_58326_table);
				}
				_iter_next_4688177488:;
				++it;
				goto _iter_begin_4688177488;
			}
			_iter_end_4688177488:;
		}
	}
	this->self->_method_impl_import_selections(_56239_imp,_56262_decl);
	_56280_ok = true;
	return _56280_ok;
}



inline jule::Ptr<_2200229c3_ImportInfo> _221db702a_SymbolBuilder::_method_import_use_decl(jule::Ptr<_221d8b043_UseDecl>& _60140_decl) {
	jule::Ptr<_2200229c3_ImportInfo> _60217_imp = this->self->_method_build_import(_60140_decl);
	if (_60217_imp == nullptr) {
		return nullptr;
	}
	jule::Bool _60817_ok = this->self->_method_check_duplicate_use_decl(_60217_imp);
	if ((!(_60817_ok))) {
		return nullptr;
	}
	if ((_60217_imp->_field_alias.len() != 0LL) && (_60140_decl->_field_selected.len() > 0LL)) {
		this->self->_method_push_err(_60140_decl->_field_token,jule::Str("use aliases cannot useable for selected package defines", 55),jule::Slice<jule::Any>());
	}
	_60817_ok=this->self->_method_import_package(_60217_imp,_60140_decl);
	this->self->_field_table->_field_imports = jule::alloc_for_append(this->self->_field_table->_field_imports,1);this->self->_field_table->_field_imports.push(_60217_imp);
	if (_60817_ok) {
		this->self->_field_importer.get()._method_imported(_60217_imp);
		return _60217_imp;
	}
	return nullptr;
}



inline void _221db702a_SymbolBuilder::_method_import_use_decls(void) {
	{
		auto &expr = this->self->_field_ast->_field_use_decls;
		auto it = expr.begin();
		_iter_begin_4688215424:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_UseDecl> _221db702a_decl = *it;
			{
				this->self->_method_import_use_decl(_221db702a_decl);
				if (this->self->_field_errors.len() > 0LL) {
					goto _iter_end_4688215424;
				}
			}
			_iter_next_4688215424:;
			++it;
			goto _iter_begin_4688215424;
		}
		_iter_end_4688215424:;
	}
}



inline void _221db702a_SymbolBuilder::_method_append_decl(_221d8b043_Node& _63735_decl) {
	{
		auto &_match_expr{ _63735_decl._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TypeAliasDecl>>())) { goto _case_end_4688220752; }
		_case_begin_4688220752:;
		{
			jule::Ptr<_2300b54e5_TypeAlias> _64021_ta = _221db702a_build_type_alias(_63735_decl._field_data.operator jule::Ptr<_221d8b043_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases = jule::alloc_for_append((*this)._field_table->_field_type_aliases,1);(*this)._field_table->_field_type_aliases.push(_64021_ta);
		}
		goto _match_end_4688220288;
		_case_end_4688220752:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_StructDecl>>())) { goto _case_end_4688220848; }
		_case_begin_4688220848:;
		{
			jule::Ptr<_2398d04dc_Struct> _64421_srct = _221db702a_build_struct(_63735_decl._field_data.operator jule::Ptr<_221d8b043_StructDecl>());
			(*this)._field_table->_field_structs = jule::alloc_for_append((*this)._field_table->_field_structs,1);(*this)._field_table->_field_structs.push(_64421_srct);
		}
		goto _match_end_4688220288;
		_case_end_4688220848:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FnDecl>>())) { goto _case_end_4688220944; }
		_case_begin_4688220944:;
		{
			jule::Ptr<_222edb48e_Fn> _64821_f = _221db702a_build_fn(_63735_decl._field_data.operator jule::Ptr<_221d8b043_FnDecl>());
			(*this)._field_table->_field_funcs = jule::alloc_for_append((*this)._field_table->_field_funcs,1);(*this)._field_table->_field_funcs.push(_64821_f);
		}
		goto _match_end_4688220288;
		_case_end_4688220944:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TraitDecl>>())) { goto _case_end_4688221040; }
		_case_begin_4688221040:;
		{
			jule::Ptr<_2300167cb_Trait> _65221_t = _221db702a_build_trait(_63735_decl._field_data.operator jule::Ptr<_221d8b043_TraitDecl>());
			(*this)._field_table->_field_traits = jule::alloc_for_append((*this)._field_table->_field_traits,1);(*this)._field_table->_field_traits.push(_65221_t);
		}
		goto _match_end_4688220288;
		_case_end_4688221040:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_VarDecl>>())) { goto _case_end_4688222512; }
		_case_begin_4688222512:;
		{
			jule::Ptr<_2200a2657_Var> _65621_v = _221db702a_build_var(_63735_decl._field_data.operator jule::Ptr<_221d8b043_VarDecl>());
			(*this)._field_table->_field_vars = jule::alloc_for_append((*this)._field_table->_field_vars,1);(*this)._field_table->_field_vars.push(_65621_v);
		}
		goto _match_end_4688220288;
		_case_end_4688222512:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_EnumDecl>>())) { goto _case_end_4688222608; }
		_case_begin_4688222608:;
		{
			jule::Ptr<_23001604a_Enum> _66021_e = _221db702a_build_enum(_63735_decl._field_data.operator jule::Ptr<_221d8b043_EnumDecl>());
			(*this)._field_table->_field_enums = jule::alloc_for_append((*this)._field_table->_field_enums,1);(*this)._field_table->_field_enums.push(_66021_e);
		}
		goto _match_end_4688220288;
		_case_end_4688222608:;
		_case_begin_4688219744:;
		{
			(*this)._method_push_err(_63735_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		goto _match_end_4688220288;
		_case_end_4688219744:;
		_match_end_4688220288:;
	}
}



inline void _221db702a_SymbolBuilder::_method_append_decls(void) {
	{
		auto &expr = (*this)._field_ast->_field_decls;
		auto it = expr.begin();
		_iter_begin_4688243728:;
		if (it != expr.end()) {
			_221d8b043_Node _221db702a_decl = *it;
			{
				(*this)._method_append_decl(_221db702a_decl);
			}
			_iter_next_4688243728:;
			++it;
			goto _iter_begin_4688243728;
		}
		_iter_end_4688243728:;
	}
}



inline void _221db702a_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=jule::Slice<jule::Ptr<_230019081_Impl>>::alloc(0LL,static_cast<jule::I64>((*this)._field_ast->_field_impls.len()));
	{
		auto &expr = (*this)._field_ast->_field_impls;
		auto it = expr.begin();
		_iter_begin_4688248576:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_Impl> _221db702a_decl = *it;
			{
				(*this)._field_table->_field_impls = jule::alloc_for_append((*this)._field_table->_field_impls,1);(*this)._field_table->_field_impls.push(_221db702a_build_impl(_221db702a_decl));
			}
			_iter_next_4688248576:;
			++it;
			goto _iter_begin_4688248576;
		}
		_iter_end_4688248576:;
	}
}



inline void _221db702a_SymbolBuilder::_method_push_directive_pass(jule::Ptr<_221d8b043_Directive>& _68143_d) {
	if (_68143_d->_field_args.len() == 0LL) {
		(*this)._method_push_err(_68143_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if (_68143_d->_field_args.len() > 1LL) {
		_2220dce43_Token _68617_arg = _68143_d->_field_args[1LL];
		(*this)._method_push_err(_68617_arg,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	_2220dce43_Token _69013_arg = _68143_d->_field_args[0LL];
	if (_69013_arg._field_id != 6LLU) {
		(*this)._method_push_err(_69013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_69013_arg._field_kind[0LL] != '\"') {
		(*this)._method_push_err(_69013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*this)._field_table->_field_passes = jule::alloc_for_append((*this)._field_table->_field_passes,1);(*this)._field_table->_field_passes.push(_221db702a_Pass(_68143_d->_field_tag,_69013_arg._field_kind.slice(1LL,_69013_arg._field_kind.len() - 1LL)));
}



inline void _221db702a_SymbolBuilder::_method_append_top_directives(void) {
	{
		auto &expr = (*this)._field_ast->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_4688267584:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_Directive> _221db702a_d = *it;
			{
				{
					auto &_match_expr{ _221db702a_d->_field_tag._field_kind };
					if (!(_match_expr == (jule::Str("pass", 4)))) { goto _case_end_4688273056; }
					_case_begin_4688273056:;
					{
						(*this)._method_push_directive_pass(_221db702a_d);
					}
					goto _match_end_4688272944;
					_case_end_4688273056:;
					_match_end_4688272944:;
				}
			}
			_iter_next_4688267584:;
			++it;
			goto _iter_begin_4688267584;
		}
		_iter_end_4688267584:;
	}
}



inline void _221db702a_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_2067a6b66_SymbolTable>(new( std::nothrow ) _2067a6b66_SymbolTable(this->self->_field_ast->_field_file,jule::Slice<_221db702a_Pass>(),jule::Slice<jule::Ptr<_2200229c3_ImportInfo>>(),jule::Slice<jule::Ptr<_2200a2657_Var>>(),jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>(),jule::Slice<jule::Ptr<_2398d04dc_Struct>>(),jule::Slice<jule::Ptr<_222edb48e_Fn>>(),jule::Slice<jule::Ptr<_2300167cb_Trait>>(),jule::Slice<jule::Ptr<_23001604a_Enum>>(),jule::Slice<jule::Ptr<_230019081_Impl>>()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _221db702a_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2300254bb_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2300254bb_Match::_method_is_generic_type_match(void) {
	return ((*this)._field_type_match && ((*this)._field_expr != nullptr)) && (*this)._field_expr->_field_kind->_field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2300254bb_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2200229c3_ImportInfo> _2300254bb_ScopeChecker::_method_find_package(jule::Str _41835_ident) {
	return (*this)._field_s->_method_find_package(_41835_ident);
}



inline jule::Ptr<_2200229c3_ImportInfo> _2300254bb_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)> _42837_selector) {
	return (*this)._field_s->_method_select_package(_42837_selector);
}



inline jule::Ptr<_2200a2657_Var> _2300254bb_ScopeChecker::_method_find_var(jule::Str _43931_ident,jule::Bool _43943_cpp_linked) {
	
	jule::Ptr<_2200a2657_Var> _44217_v = (*this)._field_table->_method___find_var(_43931_ident,_43943_cpp_linked,true);
	if (_44217_v != nullptr) {
		return _44217_v;
	}
	jule::Ptr<_2300254bb_ScopeChecker> _44717_parent = (*this)._field_parent;
	while (_44717_parent != nullptr) {
		{
			_44217_v=_44717_parent->_field_table->_method___find_var(_43931_ident,_43943_cpp_linked,true);
			if (_44217_v != nullptr) {
				return _44217_v;
			}
			_44717_parent=_44717_parent->_field_parent;
		}
	_iter_next_4688336736:;
	}
	_iter_end_4688336736:;
	return (*this)._field_s->_method_find_var(_43931_ident,_43943_cpp_linked);
}



inline jule::Ptr<_2300b54e5_TypeAlias> _2300254bb_ScopeChecker::_method_find_type_alias(jule::Str _46638_ident,jule::Bool _46650_cpp_linked) {
	
	jule::Ptr<_2300b54e5_TypeAlias> _46917_ta = (*this)._field_table->_method___find_type_alias(_46638_ident,_46650_cpp_linked,true);
	if (_46917_ta != nullptr) {
		return _46917_ta;
	}
	jule::Ptr<_2300254bb_ScopeChecker> _47417_parent = (*this)._field_parent;
	while (_47417_parent != nullptr) {
		{
			_46917_ta=_47417_parent->_field_table->_method___find_type_alias(_46638_ident,_46650_cpp_linked,true);
			if (_46917_ta != nullptr) {
				return _46917_ta;
			}
			_47417_parent=_47417_parent->_field_parent;
		}
	_iter_next_4688349984:;
	}
	_iter_end_4688349984:;
	return (*this)._field_s->_method_find_type_alias(_46638_ident,_46650_cpp_linked);
}



inline jule::Ptr<_2398d04dc_Struct> _2300254bb_ScopeChecker::_method_find_struct(jule::Str _49134_ident,jule::Bool _49146_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_49134_ident,_49146_cpp_linked);
}



inline jule::Ptr<_222edb48e_Fn> _2300254bb_ScopeChecker::_method_find_fn(jule::Str _50030_ident,jule::Bool _50042_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_50030_ident,_50042_cpp_linked);
}



inline jule::Ptr<_2300167cb_Trait> _2300254bb_ScopeChecker::_method_find_trait(jule::Str _50933_ident) {
	return (*this)._field_s->_method_find_trait(_50933_ident);
}



inline jule::Ptr<_23001604a_Enum> _2300254bb_ScopeChecker::_method_find_enum(jule::Str _51832_ident) {
	return (*this)._field_s->_method_find_enum(_51832_ident);
}



inline jule::Bool _2300254bb_ScopeChecker::_method_is_unsafe(void) {
	jule::Ptr<_2300254bb_ScopeChecker> _52617_scope = this->self;
	_julec_label_iter:;
	if (_52617_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (_52617_scope->_field_parent != nullptr) {
		_52617_scope=_52617_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _2300254bb_ScopeChecker::_method_is_root(void) {
	return ((*this)._field_parent == nullptr) || ((*this)._field_owner != nullptr);
}



inline jule::Bool _2300254bb_ScopeChecker::_method_is_deferred(void) {
	jule::Ptr<_2300254bb_ScopeChecker> _54717_scope = this->self;
	_julec_label_iter:;
	if (_54717_scope->_field_scope->_field_deferred) {
		return true;
	}
	if (_54717_scope->_field_parent != nullptr) {
		_54717_scope=_54717_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_2300254bb_ScopeChecker> _2300254bb_ScopeChecker::_method_get_root(void) {
	jule::Ptr<_2300254bb_ScopeChecker> _56517_root = this->self;
	while ((_56517_root->_field_parent != nullptr) && (_56517_root->_field_owner == nullptr)) {
		{
			_56517_root=_56517_root->_field_parent;
		}
	_iter_next_4688390560:;
	}
	_iter_end_4688390560:;
	return _56517_root;
}



inline jule::Ptr<_2300254bb_Label> _2300254bb_ScopeChecker::_method_find_label(jule::Str _57529_ident) {
	{
		auto &expr = (*this)._field_scope->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4688395520:;
		if (it != expr.end()) {
			jule::Any _2300254bb_st = *it;
			{
				{
					auto &_match_expr{ _2300254bb_st };
					if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Label>>())) { goto _case_end_4688396752; }
					_case_begin_4688396752:;
					{
						jule::Ptr<_2300254bb_Label> _57925_label = _2300254bb_st.operator jule::Ptr<_2300254bb_Label>();
						if (_57925_label->_field_ident == _57529_ident) {
							return _57925_label;
						}
					}
					goto _match_end_4688397216;
					_case_end_4688396752:;
					_match_end_4688397216:;
				}
			}
			_iter_next_4688395520:;
			++it;
			goto _iter_begin_4688395520;
		}
		_iter_end_4688395520:;
	}
	return nullptr;
}



inline jule::Ptr<_2300254bb_ScopeLabel> _2300254bb_ScopeChecker::_method_find_label_scope(jule::Str _59136_ident) {
	jule::Ptr<_2300254bb_ScopeLabel> _59217_label = this->self->_method_find_label_all(_59136_ident);
	if ((_59217_label != nullptr) && (_59217_label->_field_scope == this->self)) {
		return _59217_label;
	}
	return nullptr;
}



inline jule::Ptr<_2300254bb_ScopeLabel> _2300254bb_ScopeChecker::_method_find_label_all(jule::Str _60333_ident) {
	{
		auto &expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_4688405680:;
		if (it != expr.end()) {
			jule::Ptr<_2300254bb_ScopeLabel> _2300254bb_lbl = *it;
			{
				if (_2300254bb_lbl->_field_label->_field_ident == _60333_ident) {
					return _2300254bb_lbl;
				}
			}
			_iter_next_4688405680:;
			++it;
			goto _iter_begin_4688405680;
		}
		_iter_end_4688405680:;
	}
	return nullptr;
}



inline jule::Bool _2300254bb_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _61538_itself,jule::Str _61555_ident) {
	jule::Ptr<_2200a2657_Var> _61613_v = (*this)._method_find_var(_61555_ident,false);
	if ((_61613_v != nullptr) && (static_cast<jule::Uintptr>(_61613_v) != _61538_itself)) {
		if (_61613_v->_field_scope == nullptr) {
			return false;
		}
		return (_61613_v->_field_scope == (*this)._field_scope) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	jule::Ptr<_2300b54e5_TypeAlias> _62413_ta = (*this)._method_find_type_alias(_61555_ident,false);
	if ((_62413_ta != nullptr) && (static_cast<jule::Uintptr>(_62413_ta) != _61538_itself)) {
		if (_62413_ta->_field_scope == nullptr) {
			return false;
		}
		return (_62413_ta->_field_scope == (*this)._field_tree) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	return false;
}



inline void _2300254bb_ScopeChecker::_method_check_var_decl(jule::Ptr<_221d8b043_VarDecl> _63538_decl) {
	jule::Ptr<_2200a2657_Var> _63617_v = _221db702a_build_var(_63538_decl);
	_63617_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars = jule::alloc_for_append(this->self->_field_table->_field_vars,1);this->self->_field_table->_field_vars.push(_63617_v);
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_63617_v));
	});
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_63617_v),_63617_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_63617_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_63617_v->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_field_s->_method_check_var_decl(_63617_v,this->self);
	if ((!(_63617_v->_method_is_type_inferred())) && ((_63617_v->_field_kind == nullptr) || (_63617_v->_field_kind->_field_kind == nullptr))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_63617_v,this->self);
}



inline void _2300254bb_ScopeChecker::_method_check_type_alias_decl(jule::Ptr<_221d8b043_TypeAliasDecl> _65745_decl) {
	jule::Ptr<_2300b54e5_TypeAlias> _65817_ta = _221db702a_build_type_alias(_65745_decl);
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_65817_ta),_65817_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_65817_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_65817_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_field_s->_method_check_type_alias_decl(_65817_ta,this->self);
	this->self->_field_table->_field_type_aliases = jule::alloc_for_append(this->self->_field_table->_field_type_aliases,1);this->self->_field_table->_field_type_aliases.push(_65817_ta);
}



inline jule::Ptr<_2300254bb_Scope> _2300254bb_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_2300254bb_Scope>(new( std::nothrow ) _2300254bb_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _2300254bb_ScopeChecker::_method_check_child_ssc(jule::Ptr<_221d8b043_ScopeTree>& _67440_tree,jule::Ptr<_2300254bb_Scope>& _67463_s,jule::Ptr<_2300254bb_ScopeChecker>& _67479_ssc) {
	_67479_ssc->_field_parent=this->self;
	_67479_ssc->_method_check(_67440_tree,_67463_s);
}



inline jule::Ptr<_2300254bb_Scope> _2300254bb_ScopeChecker::_method_check_child_sc(jule::Ptr<_221d8b043_ScopeTree>& _67939_tree,jule::Ptr<_2300254bb_ScopeChecker>& _67962_ssc) {
	jule::Ptr<_2300254bb_Scope> _68017_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_67939_tree,_68017_s,_67962_ssc);
	return _68017_s;
}



inline jule::Ptr<_2300254bb_Scope> _2300254bb_ScopeChecker::_method_check_child(jule::Ptr<_221d8b043_ScopeTree>& _68536_tree) {
	jule::Ptr<_2300254bb_ScopeChecker> _68617_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_68536_tree,_68617_ssc);
}



inline void _2300254bb_ScopeChecker::_method_check_anon_scope(jule::Ptr<_221d8b043_ScopeTree> _69040_tree) {
	jule::Ptr<_2300254bb_Scope> _69117_s = this->self->_method_check_child(_69040_tree);
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_69117_s));
}



inline void _2300254bb_ScopeChecker::_method_process_error_call(jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>& _69543_m,_2220dce43_Token _69574_err) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_69574_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	}
	jule::Ptr<_2300254bb_ScopeChecker> _70017_root = this->self->_method_get_root();
	if ((!(_70017_root->_field_owner->_field_decl->_field_exceptional))) {
		this->self->_field_s->_method_push_err(_69574_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		this->self->_field_s->_method_push_suggestion(jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	}
	_69543_m->_field_func=_70017_root->_field_owner;
}



inline void _2300254bb_ScopeChecker::_method_check_expr(jule::Ptr<_221d8b043_Expr> _70834_expr) {
	jule::Ptr<_20683ebaa_Eval> _70917_eval = this->self->_field_s->_method_eval(this->self);
	_70917_eval->_field_ignored=true;
	jule::Ptr<_20683ebaa_Data> _71117_d = _70917_eval->_method_eval_expr(_70834_expr);
	if (_71117_d == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _71117_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>>())) { goto _case_end_4688494256; }
		_case_begin_4688494256:;
		{
			jule::Ptr<_21eedb492_BuiltinErrorCallExprModel> _71821_m = _71117_d->_field_model.operator jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>();
			this->self->_method_process_error_call(_71821_m,_70834_expr->_field_token);
			this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_71117_d));
		}
		goto _match_end_4688493296;
		_case_end_4688494256:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21eedb492_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21eedb492_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21eedb492_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21eedb492_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21eedb492_FnCallExprModel>>())) { goto _case_end_4688494352; }
		_case_begin_4688494352:;
		{
			this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_71117_d));
		}
		goto _match_end_4688493296;
		_case_end_4688494352:;
		_case_begin_4688493616:;
		{
			this->self->_field_s->_method_push_err(_70834_expr->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		goto _match_end_4688493296;
		_case_end_4688493616:;
		_match_end_4688493296:;
	}
}



inline void _2300254bb_ScopeChecker::_method_check_co_expr(jule::Ptr<_221d8b043_CoExpr> _73537_expr) {
	jule::Ptr<_20683ebaa_Eval> _73617_eval = this->self->_field_s->_method_eval(this->self);
	_73617_eval->_field_ignored=true;
	jule::Ptr<_20683ebaa_Data> _73817_d = _73617_eval->_method_eval_expr(_73537_expr->_field_expr);
	if (_73817_d == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _73817_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_FnCallExprModel>>())) { goto _case_end_4688513232; }
		_case_begin_4688513232:;
		{
			jule::Ptr<_21eedb492_FnCallExprModel> _74521_model = _73817_d->_field_model.operator jule::Ptr<_21eedb492_FnCallExprModel>();
			if (_74521_model->_field_func->_field_decl->_field_exceptional) {
				this->self->_field_s->_method_push_err(_73537_expr->_field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
				this->self->_field_s->_method_push_suggestion(jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
			}
			_74521_model->_field_is_co=true;
			_73617_eval->_method_check_fn_of_concurrent_call(_74521_model->_field_func,_73537_expr->_field_expr->_field_token);
			this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_73817_d));
		}
		goto _match_end_4688509920;
		_case_end_4688513232:;
		_case_begin_4688510544:;
		{
			this->self->_field_s->_method_push_err(_73537_expr->_field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4688509920;
		_case_end_4688510544:;
		_match_end_4688509920:;
	}
}



inline jule::Ptr<_2300254bb_If> _2300254bb_ScopeChecker::_method_check_if(jule::Ptr<_221d8b043_If> _76132_i) {
	jule::Ptr<_2300254bb_Scope> _76217_s = this->self->_method_check_child(_76132_i->_field_scope);
	jule::Ptr<_20683ebaa_Data> _76417_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_76132_i->_field_expr);
	if (_76417_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_2300b54e5_Prim> _76917_prim = _76417_d->_field_kind->_method_prim();
	if ((_76917_prim == nullptr) || (!(_76917_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_76132_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_2300254bb_If>(new( std::nothrow ) _2300254bb_If(_76417_d->_field_model,_76217_s));
}



inline jule::Ptr<_2300254bb_Else> _2300254bb_ScopeChecker::_method_check_else(jule::Ptr<_221d8b043_Else> _78134_e) {
	return jule::new_struct<_2300254bb_Else>(new( std::nothrow ) _2300254bb_Else(this->self->_method_check_child(_78134_e->_field_scope)));
}



inline void _2300254bb_ScopeChecker::_method_check_conditional(jule::Ptr<_221d8b043_Conditional> _78741_conditional) {
	jule::Ptr<_2300254bb_Conditional> _78817_c = jule::new_struct<_2300254bb_Conditional>(new( std::nothrow ) _2300254bb_Conditional());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_78817_c));
	_78817_c->_field_elifs=jule::Slice<jule::Ptr<_2300254bb_If>>::alloc(0LL,static_cast<jule::I64>(_78741_conditional->_field_tail.len() + 1LL));
	_78817_c->_field_elifs = jule::alloc_for_append(_78817_c->_field_elifs,1);_78817_c->_field_elifs.push(this->self->_method_check_if(_78741_conditional->_field_head));
	{
		auto &expr = _78741_conditional->_field_tail;
		auto it = expr.begin();
		_iter_begin_4688542896:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_If> _2300254bb_elif = *it;
			{
				_78817_c->_field_elifs = jule::alloc_for_append(_78817_c->_field_elifs,1);_78817_c->_field_elifs.push(this->self->_method_check_if(_2300254bb_elif));
			}
			_iter_next_4688542896:;
			++it;
			goto _iter_begin_4688542896;
		}
		_iter_end_4688542896:;
	}
	if (_78741_conditional->_field_default != nullptr) {
		_78817_c->_field_default=this->self->_method_check_else(_78741_conditional->_field_default);
	}
}



inline jule::Ptr<_2300254bb_Scope> _2300254bb_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _80339_it,jule::Ptr<_221d8b043_ScopeTree> _80356_tree,jule::Ptr<_2300254bb_ScopeChecker> _80378_ssc) {
	_80378_ssc->_field_it=_80339_it;
	return this->self->_method_check_child_sc(_80356_tree,_80378_ssc);
}



inline jule::Ptr<_2300254bb_Scope> _2300254bb_ScopeChecker::_method_check_iter_scope(jule::Uintptr _80836_it,jule::Ptr<_221d8b043_ScopeTree>& _80854_tree) {
	jule::Ptr<_2300254bb_ScopeChecker> _80917_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_80836_it,_80854_tree,_80917_ssc);
}



inline void _2300254bb_ScopeChecker::_method_check_inf_iter(jule::Ptr<_221d8b043_Iter>& _81339_it) {
	jule::Ptr<_2300254bb_InfIter> _81417_kind = jule::new_struct<_2300254bb_InfIter>(new( std::nothrow ) _2300254bb_InfIter());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_81417_kind));
	_81417_kind->_field_scope=this->self->_method_check_iter_scope(static_cast<jule::Uintptr>(_81417_kind),_81339_it->_field_scope);
}



inline void _2300254bb_ScopeChecker::_method_check_while_iter(jule::Ptr<_221d8b043_Iter>& _82141_it) {
	jule::Ptr<_221d8b043_WhileKind> _82217_wh = _82141_it->_field_kind.operator jule::Ptr<_221d8b043_WhileKind>();
	if ((_82217_wh->_field_expr == nullptr) && (_82217_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_82141_it);
		return;
	}
	jule::Ptr<_2300254bb_WhileIter> _82817_kind = jule::new_struct<_2300254bb_WhileIter>(new( std::nothrow ) _2300254bb_WhileIter());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_82817_kind));
	_82817_kind->_field_scope=this->self->_method_check_iter_scope(static_cast<jule::Uintptr>(_82817_kind),_82141_it->_field_scope);
	if (_82217_wh->_field_expr != nullptr) {
		jule::Ptr<_20683ebaa_Data> _83521_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_82217_wh->_field_expr);
		if (_83521_d == nullptr) {
			return;
		}
		jule::Ptr<_2300b54e5_Prim> _84017_prim = _83521_d->_field_kind->_method_prim();
		if (_84017_prim == nullptr) {
			this->self->_field_s->_method_push_err(_82141_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		if ((!(_84017_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_82141_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		_82817_kind->_field_expr=_83521_d->_field_model;
	}
	if (_82217_wh->_method_is_while_next()) {
		if ((!(_2300254bb_is_valid_ast_st_for_next_st(_82217_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_82217_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;
		}
		jule::I64 _86017_n = this->self->_field_scope->_field_stmts.len();
		this->self->_method_check_node(_82217_wh->_field_next);
		if (_86017_n < this->self->_field_scope->_field_stmts.len()) {
			jule::Any _86325_st = this->self->_field_scope->_field_stmts[_86017_n];
			this->self->_field_scope->_field_stmts=this->self->_field_scope->_field_stmts.slice(0LL,_86017_n);
			if ((!(_2300254bb_is_valid_st_for_next_st(_86325_st)))) {
				this->self->_field_s->_method_push_err(_82217_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			}
			_82817_kind->_field_next=_86325_st;
		}
	}
}



inline void _2300254bb_ScopeChecker::_method_check_range_iter(jule::Ptr<_221d8b043_Iter>& _87441_it) {
	jule::Ptr<_221d8b043_RangeKind> _87517_rang = _87441_it->_field_kind.operator jule::Ptr<_221d8b043_RangeKind>();
	jule::Ptr<_20683ebaa_Data> _87717_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_87517_rang->_field_expr);
	if (_87717_d == nullptr) {
		return;
	}
	jule::Ptr<_2300254bb_RangeIter> _88217_kind = jule::new_struct<_2300254bb_RangeIter>(new( std::nothrow ) _2300254bb_RangeIter(_87717_d,jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_2200a2657_Var>(),jule::Ptr<_2200a2657_Var>()));
	_2200223c9_RangeChecker _88617_rc = _2200223c9_RangeChecker(this->self,_87517_rang,_88217_kind,_87717_d);
	jule::Bool _89213_ok = _88617_rc._method_check();
	if ((!(_89213_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_88217_kind));
	jule::Ptr<_2300254bb_ScopeChecker> _89917_ssc = this->self->_method_new_child_checker();
	if (_88217_kind->_field_key_a != nullptr) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_88217_kind->_field_key_a->_field_ident)) {
			this->self->_field_s->_method_push_err(_88217_kind->_field_key_a->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_88217_kind->_field_key_a->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_89917_ssc->_field_table->_field_vars = jule::alloc_for_append(_89917_ssc->_field_table->_field_vars,1);_89917_ssc->_field_table->_field_vars.push(_88217_kind->_field_key_a);
	}
	if (_88217_kind->_field_key_b != nullptr) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_88217_kind->_field_key_b->_field_ident)) {
			this->self->_field_s->_method_push_err(_88217_kind->_field_key_b->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_88217_kind->_field_key_b->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_89917_ssc->_field_table->_field_vars = jule::alloc_for_append(_89917_ssc->_field_table->_field_vars,1);_89917_ssc->_field_table->_field_vars.push(_88217_kind->_field_key_b);
	}
	_88217_kind->_field_scope=this->self->_method_check_iter_scope_sc(static_cast<jule::Uintptr>(_88217_kind),_87441_it->_field_scope,_89917_ssc);
}



inline void _2300254bb_ScopeChecker::_method_check_iter(jule::Ptr<_221d8b043_Iter> _92034_it) {
	if (_92034_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_92034_it);
		return;
	}
	{
		auto &_match_expr{ _92034_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_WhileKind>>())) { goto _case_end_4684544368; }
		_case_begin_4684544368:;
		{
			this->self->_method_check_while_iter(_92034_it);
		}
		goto _match_end_4684542912;
		_case_end_4684544368:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_RangeKind>>())) { goto _case_end_4684543840; }
		_case_begin_4684543840:;
		{
			this->self->_method_check_range_iter(_92034_it);
		}
		goto _match_end_4684542912;
		_case_end_4684543840:;
		_case_begin_4684541424:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_4684542912;
		_case_end_4684541424:;
		_match_end_4684542912:;
	}
}



inline jule::Bool _2300254bb_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _93342_it) {
	jule::Ptr<_2300254bb_ScopeChecker> _93417_scope = this->self;
	_julec_label_iter:;
	if (_93417_scope->_field_it == _93342_it) {
		return true;
	}
	if (_93417_scope->_field_parent != nullptr) {
		_93417_scope=_93417_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _2300254bb_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _94943_ptr) {
	jule::Ptr<_2300254bb_ScopeChecker> _95017_scope = this->self;
	_julec_label_iter:;
	if (_95017_scope->_field_it == _94943_ptr) {
		return true;
	}
	if (_95017_scope->_field_cse != 0LL) {
		jule::Uintptr _95817_mtch = static_cast<jule::Uintptr>(((_2300254bb_Case*)(_95017_scope->_field_cse))->_field_owner);
		if (_95817_mtch == _94943_ptr) {
			return true;
		}
	}
	if (_95017_scope->_field_parent != nullptr) {
		_95017_scope=_95017_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_2300254bb_ContSt> _2300254bb_ScopeChecker::_method_check_cont_valid_scope(jule::Ptr<_221d8b043_ContSt> _97242_c) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_97242_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_97242_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_2300254bb_ContSt>(new( std::nothrow ) _2300254bb_ContSt());
	}
	jule::Ptr<_2300254bb_ScopeChecker> _98217_scope = this->self;
	_julec_label_iter:;
	{
		if (!((((_98217_scope->_field_it == 0LL) && (_98217_scope->_field_parent != nullptr)) && (_98217_scope->_field_owner == nullptr)))) { goto _case_end_4684571872; }
		_case_begin_4684571872:;
		{
			_98217_scope=_98217_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4684571712;
		_case_end_4684571872:;
		if (!((_98217_scope->_field_it != 0LL))) { goto _case_end_4684571984; }
		_case_begin_4684571984:;
		{
			return jule::new_struct<_2300254bb_ContSt>(new( std::nothrow ) _2300254bb_ContSt(_98217_scope->_field_it));
		}
		goto _match_end_4684571712;
		_case_end_4684571984:;
		_match_end_4684571712:;
	}
	this->self->_field_s->_method_push_err(_97242_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _2300254bb_ScopeChecker::_method_check_cont(jule::Ptr<_221d8b043_ContSt> _99730_c) {
	jule::Ptr<_2300254bb_ContSt> _99817_cont = this->self->_method_check_cont_valid_scope(_99730_c);
	if (_99817_cont == nullptr) {
		return;
	}
	if (_99730_c->_field_label._field_id != 0LLU) {
		jule::Ptr<_2300254bb_ScopeLabel> _100421_label = _2300254bb_find_label_parent(_99730_c->_field_label._field_kind,this->self->_field_parent);
		if (_100421_label == nullptr) {
			this->self->_field_s->_method_push_err(_99730_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_99730_c->_field_label._field_kind)}));
			return;
		}
		_100421_label->_field_used=true;
		if ((_100421_label->_field_pos + 1LL) >= _100421_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_99730_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
			return;
		}
		jule::Int _101717_i = _100421_label->_field_pos + 1LL;
		if (_101717_i >= _100421_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_99730_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		} else {
			jule::Any _102125_st = _100421_label->_field_scope->_field_scope->_field_stmts[_101717_i];
			{
				auto &_match_expr{ _102125_st };
				if (!(_match_expr.type_is<jule::Ptr<_2300254bb_InfIter>>())) { goto _case_end_4684599232; }
				_case_begin_4684599232:;
				{
					_99817_cont->_field_it=static_cast<jule::Uintptr>(_102125_st.operator jule::Ptr<_2300254bb_InfIter>());
				}
				goto _match_end_4684598832;
				_case_end_4684599232:;
				if (!(_match_expr.type_is<jule::Ptr<_2300254bb_RangeIter>>())) { goto _case_end_4684599328; }
				_case_begin_4684599328:;
				{
					_99817_cont->_field_it=static_cast<jule::Uintptr>(_102125_st.operator jule::Ptr<_2300254bb_RangeIter>());
				}
				goto _match_end_4684598832;
				_case_end_4684599328:;
				if (!(_match_expr.type_is<jule::Ptr<_2300254bb_WhileIter>>())) { goto _case_end_4684599424; }
				_case_begin_4684599424:;
				{
					_99817_cont->_field_it=static_cast<jule::Uintptr>(_102125_st.operator jule::Ptr<_2300254bb_WhileIter>());
				}
				goto _match_end_4684598832;
				_case_end_4684599424:;
				_case_begin_4684593200:;
				{
					this->self->_field_s->_method_push_err(_99730_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
				}
				goto _match_end_4684598832;
				_case_end_4684593200:;
				_match_end_4684598832:;
			}
		}
	}
	if (_99817_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_99817_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_99730_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_99817_cont));
}



inline void _2300254bb_ScopeChecker::_method_check_label(jule::Ptr<_221d8b043_LabelSt> _104035_l) {
	if (this->self->_method_find_label(_104035_l->_field_ident) != nullptr) {
		this->self->_field_s->_method_push_err(_104035_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_104035_l->_field_ident)}));
		return;
	}
	jule::Ptr<_2300254bb_Label> _104617_label = jule::new_struct<_2300254bb_Label>(new( std::nothrow ) _2300254bb_Label(_104035_l->_field_ident));
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_104617_label));
	(*(this->self->_field_labels))=jule::append((*(this->self->_field_labels)),jule::Slice<jule::Ptr<_2300254bb_ScopeLabel>>({jule::new_struct<_2300254bb_ScopeLabel>(new( std::nothrow ) _2300254bb_ScopeLabel(_104035_l->_field_token,_104617_label,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL),this->self,jule::Bool()))}));
}



inline void _2300254bb_ScopeChecker::_method_push_goto(jule::Ptr<_221d8b043_GotoSt> _105933_gt) {
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_2300254bb_GotoSt>(new( std::nothrow ) _2300254bb_GotoSt(_105933_gt->_field_label._field_kind))));
	(*(this->self->_field_gotos))=jule::append((*(this->self->_field_gotos)),jule::Slice<jule::Ptr<_2300254bb_ScopeGoto>>({jule::new_struct<_2300254bb_ScopeGoto>(new( std::nothrow ) _2300254bb_ScopeGoto(_105933_gt,this->self,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL)))}));
}



inline void _2300254bb_ScopeChecker::_method_check_postfix(jule::Ptr<_221d8b043_AssignSt> _107137_a) {
	if (_107137_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_107137_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_221d8b043_Expr> _107717_expr = _107137_a->_field_left[0LL]->_field_expr;
	jule::Ptr<_20683ebaa_Data> _107817_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_107717_expr);
	if (_107817_d == nullptr) {
		return;
	}
	_2300254bb_check_assign(this->self->_field_s,_107817_d,nullptr,_107137_a->_field_setter);
	if (_107817_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_2300b54e5_Ptr> _108621_ptr = _107817_d->_field_kind->_method_ptr();
		if (_108621_ptr->_method_is_unsafe()) {
			this->self->_field_s->_method_push_err(_107137_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_107137_a->_field_setter._field_kind),jule::Any(_107817_d->_field_kind->_method_to_str())}));
			return;
		}
	} else {
		if ((_107817_d->_field_kind->_method_prim() == nullptr) || (!(_206ec1e1e_is_num(_107817_d->_field_kind->_method_prim()->_field_kind)))) {
			this->self->_field_s->_method_push_err(_107137_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_107137_a->_field_setter._field_kind),jule::Any(_107817_d->_field_kind->_method_to_str())}));
			return;
		}
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_2300254bb_Postfix>(new( std::nothrow ) _2300254bb_Postfix(_107817_d->_field_model,_107137_a->_field_setter._field_kind))));
}



inline jule::Bool _2300254bb_ScopeChecker::_method_is_new_assign_ident(jule::Str _110438_ident) {
	if (_2220dce43_is_ignore_ident(_110438_ident) || (_110438_ident == jule::Str())) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_110438_ident,false) == nullptr;
}



inline void _2300254bb_ScopeChecker::_method_check_single_assign(jule::Ptr<_221d8b043_AssignSt>& _111244_a) {
	jule::Ptr<_20683ebaa_Data> _111317_l = nullptr;
	if ((!(_2220dce43_is_ignore_ident(_111244_a->_field_left[0LL]->_field_ident)))) {
		jule::Ptr<_221d8b043_Expr> _111621_expr = _111244_a->_field_left[0LL]->_field_expr;
		_111317_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_111621_expr);
		if (_111317_l == nullptr) {
			return;
		}
	}
	jule::Ptr<_20683ebaa_Eval> _112317_eval = (((_111317_l != nullptr)) ? (this->self->_field_s->_method_evalp(this->self,_111317_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
	jule::Ptr<_20683ebaa_Data> _112817_r = _112317_eval->_method_eval_expr(_111244_a->_field_right);
	if (_112817_r == nullptr) {
		return;
	}
	if (_111317_l == nullptr) {
		if (_112817_r->_field_kind->_method_void()) {
			this->self->_field_s->_method_push_err(_111244_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_112817_r));
		return;
	}
	if ((!(_2300254bb_check_assign(this->self->_field_s,_111317_l,_112817_r,_111244_a->_field_setter)))) {
		return;
	}
	if (_112817_r->_field_kind->_method_tup() != nullptr) {
		this->self->_field_s->_method_push_err(_111244_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_2300254bb_Assign>(new( std::nothrow ) _2300254bb_Assign(_111317_l->_field_model,_112817_r->_field_model,_111244_a->_field_setter._field_kind))));
	if (_111244_a->_field_setter._field_kind != jule::Str("=", 1)) {
		_111244_a->_field_setter._field_kind=_111244_a->_field_setter._field_kind.slice(0LL,_111244_a->_field_setter._field_kind.len() - 1LL);
		_20683ebaa_BinopSolver _116021_solver = _20683ebaa_BinopSolver(jule::new_struct_ptr<_20683ebaa_Eval>(new( std::nothrow ) _20683ebaa_Eval(this->self->_field_s,this->self,jule::Ptr<_2300b54e5_TypeKind>(),this->self->_method_is_unsafe(),jule::Bool(),jule::Bool(),jule::Ptr<_2200a2657_Var>())),jule::Ptr<_20683ebaa_Data>(),jule::Ptr<_20683ebaa_Data>(),_111244_a->_field_setter);
		_112817_r=_116021_solver._method_solve_explicit(_111317_l,_112817_r);
		if (_112817_r == nullptr) {
			return;
		}
		_111244_a->_field_setter._field_kind+=jule::Str("=", 1);
		return;
	}
	_2200223c9_AssignTypeChecker _117717_checker = _2200223c9_AssignTypeChecker(this->self->_field_s,_111317_l->_field_kind,_112817_r,_111244_a->_field_setter);
	_117717_checker._method_check();
}



inline void _2300254bb_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ptr<_2300254bb_MultiAssign> _118657_st,jule::Ptr<_221d8b043_AssignSt> _118713_a,jule::Ptr<_221d8b043_AssignLeft> _118731_lexpr,jule::Ptr<_20683ebaa_Data> _118755_l,jule::Ptr<_20683ebaa_Data> _118769_r) {
	if (_2220dce43_is_ignore_ident(_118731_lexpr->_field_ident)) {
		if (_118769_r->_field_kind->_method_void()) {
			(*this)._field_s->_method_push_err(_118713_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_118657_st->_field_l = jule::alloc_for_append(_118657_st->_field_l,1);_118657_st->_field_l.push(jule::Any(nullptr));
		return;
	}
	if (_118713_a->_field_declarative && (*this)._method_is_new_assign_ident(_118731_lexpr->_field_ident)) {
		jule::Ptr<_2200a2657_Var> _119921_v = jule::new_struct<_2200a2657_Var>(new( std::nothrow ) _2200a2657_Var((*this)._field_scope,_118731_lexpr->_field_token,_118731_lexpr->_field_ident,jule::Bool(),jule::Bool(),_118731_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_118731_lexpr->_field_reference,jule::Str(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::new_struct<_20683ebaa_Value>(new( std::nothrow ) _20683ebaa_Value(_118713_a->_field_right,_118769_r)),jule::Ptr<_221db702a_ReferenceStack>(),jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Ptr<_2200a2657_IterRelation>(),jule::Slice<jule::Ptr<_2200a2657_Var>>()));
		(*this)._field_s->_method_check_var(_119921_v);
		_118657_st->_field_l = jule::alloc_for_append(_118657_st->_field_l,1);_118657_st->_field_l.push(jule::Any(_119921_v));
		(*this)._field_table->_field_vars = jule::alloc_for_append((*this)._field_table->_field_vars,1);(*this)._field_table->_field_vars.push(_119921_v);
		(*this)._field_scope->_field_stmts = jule::alloc_for_append((*this)._field_scope->_field_stmts,1);(*this)._field_scope->_field_stmts.push(jule::Any(_119921_v));
		return;
	}
	if (_118731_lexpr->_field_mutable || _118731_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_118731_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_118731_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((!(_2300254bb_check_assign((*this)._field_s,_118755_l,_118769_r,_118713_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_118755_l->_field_mutable,false,_118755_l->_field_kind,_118769_r,_118713_a->_field_setter);
	_2200223c9_AssignTypeChecker _123417_checker = _2200223c9_AssignTypeChecker((*this)._field_s,_118755_l->_field_kind,_118769_r,_118713_a->_field_setter);
	_123417_checker._method_check();
	_118657_st->_field_l = jule::alloc_for_append(_118657_st->_field_l,1);_118657_st->_field_l.push(_118755_l->_field_model);
}



inline void _2300254bb_ScopeChecker::_method_check_ret_multi_assign(jule::Ptr<_221d8b043_AssignSt>& _124547_a) {
	jule::Ptr<_20683ebaa_Data> _124617_rd = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_124547_a->_field_right);
	if (_124617_rd == nullptr) {
		return;
	}
	jule::Slice<jule::Ptr<_20683ebaa_Data>> _125117_r = _2300254bb_get_datas_from_tuple_data(_124617_rd);
	{
		if (!((_124547_a->_field_left.len() > _125117_r.len()))) { goto _case_end_4688580176; }
		_case_begin_4688580176:;
		{
			this->self->_field_s->_method_push_err(_124547_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4688579984;
		_case_end_4688580176:;
		if (!((_124547_a->_field_left.len() < _125117_r.len()))) { goto _case_end_4688580272; }
		_case_begin_4688580272:;
		{
			this->self->_field_s->_method_push_err(_124547_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4688579984;
		_case_end_4688580272:;
		_match_end_4688579984:;
	}
	jule::Ptr<_2300254bb_MultiAssign> _126317_st = jule::new_struct<_2300254bb_MultiAssign>(new( std::nothrow ) _2300254bb_MultiAssign(jule::Slice<jule::Any>(),_124617_rd->_field_model));
	if (_124617_rd->_field_kind->_method_tup() == nullptr) {
		_126317_st->_field_r=jule::Any(jule::new_struct<_21eedb492_TupleExprModel>(new( std::nothrow ) _21eedb492_TupleExprModel(_125117_r)));
	}
	{
		auto &expr = _124547_a->_field_left;
		auto it = expr.begin();
		_iter_begin_4688589968:;
		if (it != expr.end()) {
			jule::Int _2300254bb_i = it - expr.begin();
			{
				jule::Ptr<_221d8b043_AssignLeft> _127221_lexpr = _124547_a->_field_left[_2300254bb_i];
				jule::Ptr<_20683ebaa_Data> _127321_l = nullptr;
				if ((!(_2220dce43_is_ignore_ident(_127221_lexpr->_field_ident))) && ((!(_124547_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_127221_lexpr->_field_ident))))) {
					_127321_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_127221_lexpr->_field_expr);
					if (_127321_l == nullptr) {
						goto _iter_next_4688589968;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_126317_st,_124547_a,_127221_lexpr,_127321_l,_125117_r[_2300254bb_i]);
			}
			_iter_next_4688589968:;
			++it;
			_2300254bb_i++;
			goto _iter_begin_4688589968;
		}
		_iter_end_4688589968:;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_126317_st));
}



inline void _2300254bb_ScopeChecker::_method_check_multi_assign(jule::Ptr<_221d8b043_AssignSt>& _128943_a) {
	{
		auto &_match_expr{ _128943_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FnCallExpr>>())) { goto _case_end_4688601216; }
		_case_begin_4688601216:;
		{
			this->self->_method_check_ret_multi_assign(_128943_a);
			return;
		}
		goto _match_end_4688603536;
		_case_end_4688601216:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_UnsafeExpr>>())) { goto _case_end_4688603616; }
		_case_begin_4688603616:;
		{
			{
				auto &_match_expr{ _128943_a->_field_right->_field_kind.operator jule::Ptr<_221d8b043_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FnCallExpr>>())) { goto _case_end_4688603776; }
				_case_begin_4688603776:;
				{
					this->self->_method_check_ret_multi_assign(_128943_a);
					return;
				}
				goto _match_end_4688607680;
				_case_end_4688603776:;
				_match_end_4688607680:;
			}
		}
		goto _match_end_4688603536;
		_case_end_4688603616:;
		_match_end_4688603536:;
	}
	jule::Slice<jule::Any> _130317_right = _2300254bb_get_expr_models(_128943_a->_field_right->_field_kind);
	{
		if (!((_128943_a->_field_left.len() > _130317_right.len()))) { goto _case_end_4688610672; }
		_case_begin_4688610672:;
		{
			this->self->_field_s->_method_push_err(_128943_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4688610256;
		_case_end_4688610672:;
		if (!((_128943_a->_field_left.len() < _130317_right.len()))) { goto _case_end_4688610768; }
		_case_begin_4688610768:;
		{
			this->self->_field_s->_method_push_err(_128943_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4688610256;
		_case_end_4688610768:;
		_match_end_4688610256:;
	}
	jule::Ptr<_21eedb492_TupleExprModel> _131517_right_tuple = jule::new_struct<_21eedb492_TupleExprModel>(new( std::nothrow ) _21eedb492_TupleExprModel());
	jule::Ptr<_2300254bb_MultiAssign> _131717_st = jule::new_struct<_2300254bb_MultiAssign>(new( std::nothrow ) _2300254bb_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_131517_right_tuple)));
	{
		auto &expr = _128943_a->_field_left;
		auto it = expr.begin();
		_iter_begin_4688619360:;
		if (it != expr.end()) {
			jule::Int _2300254bb_i = it - expr.begin();
			{
				jule::Ptr<_221d8b043_AssignLeft> _132221_lexpr = _128943_a->_field_left[_2300254bb_i];
				jule::Ptr<_20683ebaa_Data> _132321_l = nullptr;
				if ((!(_2220dce43_is_ignore_ident(_132221_lexpr->_field_ident))) && ((!(_128943_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_132221_lexpr->_field_ident))))) {
					_132321_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_132221_lexpr->_field_expr);
					if (_132321_l == nullptr) {
						goto _iter_next_4688619360;
					}
				}
				jule::Ptr<_221d8b043_Expr> _133321_expr = jule::new_struct<_221d8b043_Expr>(new( std::nothrow ) _221d8b043_Expr(_128943_a->_field_right->_field_token,_130317_right[_2300254bb_i]));
				jule::Ptr<_20683ebaa_Eval> _133421_eval = (((_132321_l != nullptr)) ? (this->self->_field_s->_method_evalp(this->self,_132321_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
				jule::Ptr<_20683ebaa_Data> _133921_r = _133421_eval->_method_eval_expr(_133321_expr);
				if (_133921_r == nullptr) {
					goto _iter_next_4688619360;
				}
				_131517_right_tuple->_field_datas = jule::alloc_for_append(_131517_right_tuple->_field_datas,1);_131517_right_tuple->_field_datas.push(_133921_r);
				this->self->_method___process_end_part_of_multi_assign(_131717_st,_128943_a,_132221_lexpr,_132321_l,_133921_r);
			}
			_iter_next_4688619360:;
			++it;
			_2300254bb_i++;
			goto _iter_begin_4688619360;
		}
		_iter_end_4688619360:;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_131717_st));
}



inline void _2300254bb_ScopeChecker::_method_check_assign_st(jule::Ptr<_221d8b043_AssignSt> _135239_a) {
	if (_2220dce43_is_postfix_op(_135239_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_135239_a);
		return;
	}
	if ((_135239_a->_field_left.len() == 1LL) && (!(_135239_a->_field_declarative))) {
		this->self->_method_check_single_assign(_135239_a);
		return;
	}
	this->self->_method_check_multi_assign(_135239_a);
}



inline jule::Ptr<_2300254bb_Scope> _2300254bb_ScopeChecker::_method_check_case_scope(jule::Ptr<_2300254bb_Case>& _136637_c,jule::Ptr<_221d8b043_ScopeTree>& _136652_tree) {
	jule::Ptr<_2300254bb_ScopeChecker> _136717_ssc = this->self->_method_new_child_checker();
	_136717_ssc->_field_cse=static_cast<jule::Uintptr>(_136637_c);
	return this->self->_method_check_child_sc(_136652_tree,_136717_ssc);
}



inline jule::Ptr<_2300254bb_Case> _2300254bb_ScopeChecker::_method_check_case(jule::Ptr<_2300254bb_Match> _137234_m,jule::Int _137245_i,jule::Ptr<_221d8b043_Case> _137257_c,jule::Ptr<_20683ebaa_Data> _137287_expr) {
	jule::Ptr<_2300254bb_Case> _137317__case = _137234_m->_field_cases[_137245_i];
	_137317__case->_field_exprs=jule::Slice<jule::Ptr<_20683ebaa_Data>>::alloc(0LL,static_cast<jule::I64>(_137257_c->_field_exprs.len()));
	jule::Bool _137517_generic_matched = false;
	{
		auto &expr = _137257_c->_field_exprs;
		auto it = expr.begin();
		_iter_begin_4688660256:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_Expr> _2300254bb_e = *it;
			{
				if (_137234_m->_field_type_match) {
					jule::Ptr<_20683ebaa_Eval> _137925_eval = jule::new_struct_ptr<_20683ebaa_Eval>(new( std::nothrow ) _20683ebaa_Eval(this->self->_field_s,this->self,jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2200a2657_Var>()));
					jule::Ptr<_20683ebaa_Data> _138425_d = _137925_eval->_method_eval(_2300254bb_e);
					if (_138425_d != nullptr) {
						_137317__case->_field_exprs = jule::alloc_for_append(_137317__case->_field_exprs,1);_137317__case->_field_exprs.push(_138425_d);
						if (_2300254bb_count_match_type(_137234_m,_138425_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_2300254bb_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_138425_d->_field_kind->_method_to_str())}));
						}
					}
					if (_137287_expr->_field_kind->_field_generic) {
						_137517_generic_matched=_137517_generic_matched || _137287_expr->_field_kind->_method_equals(_138425_d->_field_kind);
					} else {
						jule::Ptr<_2300167cb_Trait> _139525_trt = _137287_expr->_field_kind->_method_trt();
						if (_139525_trt != nullptr) {
							this->self->_field_s->_method_check_type_compatibility(_137287_expr->_field_kind,_138425_d->_field_kind,_2300254bb_e->_field_token);
						}
					}
					goto _iter_next_4688660256;
				}
				jule::Ptr<_20683ebaa_Data> _140421_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_2300254bb_e);
				if (_140421_d == nullptr) {
					goto _iter_next_4688660256;
				}
				_137317__case->_field_exprs = jule::alloc_for_append(_137317__case->_field_exprs,1);_137317__case->_field_exprs.push(_140421_d);
				_2200223c9_AssignTypeChecker _141121_checker = _2200223c9_AssignTypeChecker(this->self->_field_s,_137287_expr->_field_kind,_140421_d,_2300254bb_e->_field_token);
				_141121_checker._method_check();
			}
			_iter_next_4688660256:;
			++it;
			goto _iter_begin_4688660256;
		}
		_iter_end_4688660256:;
	}
	if (((!(_137234_m->_field_type_match)) || (!(_137287_expr->_field_kind->_field_generic))) || _137517_generic_matched) {
		_137317__case->_field_scope=this->self->_method_check_case_scope(_137317__case,_137257_c->_field_scope);
	}
	return _137317__case;
}



inline void _2300254bb_ScopeChecker::_method_check_cases(jule::Ptr<_221d8b043_MatchCase>& _142636_m,jule::Ptr<_2300254bb_Match> _142655_rm,jule::Ptr<_20683ebaa_Data> _142671_expr) {
	_142655_rm->_field_cases=jule::Slice<jule::Ptr<_2300254bb_Case>>::alloc(static_cast<jule::I64>(_142636_m->_field_cases.len()));
	{
		auto &expr = _142636_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4688691712:;
		if (it != expr.end()) {
			jule::Int _2300254bb_i = it - expr.begin();
			{
				jule::Ptr<_2300254bb_Case> _142921__case = jule::new_struct<_2300254bb_Case>(new( std::nothrow ) _2300254bb_Case(_142655_rm,jule::Ptr<_2300254bb_Scope>(),jule::Slice<jule::Ptr<_20683ebaa_Data>>(),jule::Ptr<_2300254bb_Case>()));
				if (_2300254bb_i > 0LL) {
					_142655_rm->_field_cases[_2300254bb_i - 1LL]->_field_next=_142921__case;
				}
				_142655_rm->_field_cases[_2300254bb_i]=_142921__case;
			}
			_iter_next_4688691712:;
			++it;
			_2300254bb_i++;
			goto _iter_begin_4688691712;
		}
		_iter_end_4688691712:;
	}
	if ((_142655_rm->_field_default != nullptr) && (_142636_m->_field_cases.len() > 0LL)) {
		_142655_rm->_field_cases[_142655_rm->_field_cases.len() - 1LL]->_field_next=_142655_rm->_field_default;
	}
	{
		auto &expr = _142636_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4688700000:;
		if (it != expr.end()) {
			jule::Int _2300254bb_i = it - expr.begin();
			jule::Ptr<_221d8b043_Case> _2300254bb_c = *it;
			{
				this->self->_method_check_case(_142655_rm,_2300254bb_i,_2300254bb_c,_142671_expr);
			}
			_iter_next_4688700000:;
			++it;
			_2300254bb_i++;
			goto _iter_begin_4688700000;
		}
		_iter_end_4688700000:;
	}
}



inline jule::Ptr<_2300254bb_Case> _2300254bb_ScopeChecker::_method_check_default(jule::Ptr<_2300254bb_Match> _144937_m,jule::Ptr<_221d8b043_Else> _144952_d) {
	jule::Ptr<_2300254bb_Case> _145017_def = jule::new_struct<_2300254bb_Case>(new( std::nothrow ) _2300254bb_Case(_144937_m,jule::Ptr<_2300254bb_Scope>(),jule::Slice<jule::Ptr<_20683ebaa_Data>>(),jule::Ptr<_2300254bb_Case>()));
	_145017_def->_field_scope=this->self->_method_check_case_scope(_145017_def,_144952_d->_field_scope);
	return _145017_def;
}



inline void _2300254bb_ScopeChecker::_method_check_comptime_panic(jule::Ptr<_2300254bb_Scope>& _145740_s,_2220dce43_Token _145751_error_token) {
	if (_145740_s->_field_stmts.len() != 1LL) {
		return;
	}
	jule::Any _146213_stmt = _145740_s->_field_stmts[0LL];
	{
		auto &_match_expr{ _146213_stmt };
		if (!(_match_expr.type_is<jule::Ptr<_20683ebaa_Data>>())) { goto _case_end_4688712288; }
		_case_begin_4688712288:;
		{
			jule::Ptr<_20683ebaa_Data> _146517_d = _146213_stmt.operator jule::Ptr<_20683ebaa_Data>();
			{
				auto &_match_expr{ _146517_d->_field_model };
				if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinPanicCallExprModel>>())) { goto _case_end_4688713680; }
				_case_begin_4688713680:;
				{
					jule::Ptr<_21eedb492_BuiltinPanicCallExprModel> _146821_m = _146517_d->_field_model.operator jule::Ptr<_21eedb492_BuiltinPanicCallExprModel>();
					{
						auto &_match_expr{ _146821_m->_field_expr };
						if (!(_match_expr.type_is<jule::Ptr<_206e210e3_Const>>())) { goto _case_end_4688716704; }
						_case_begin_4688716704:;
						{
							jule::Ptr<_206e210e3_Const> _147125_c = _146821_m->_field_expr.operator jule::Ptr<_206e210e3_Const>();
							if (_147125_c->_method_is_str()) {
								(*this)._field_s->_method_push_err(_145751_error_token,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_147125_c->_method_read_str())}));
							}
						}
						goto _match_end_4688719824;
						_case_end_4688716704:;
						_match_end_4688719824:;
					}
				}
				goto _match_end_4688716544;
				_case_end_4688713680:;
				_match_end_4688716544:;
			}
		}
		goto _match_end_4688713552;
		_case_end_4688712288:;
		_match_end_4688713552:;
	}
}



inline void _2300254bb_ScopeChecker::_method_push_type_match(jule::Ptr<_2300254bb_Match> _148039_tm,jule::Ptr<_221d8b043_MatchCase>& _148052_m) {
	if (_148039_tm->_field_expr->_field_kind->_field_generic) {
		{
			auto &expr = _148039_tm->_field_cases;
			auto it = expr.begin();
			_iter_begin_4688727632:;
			if (it != expr.end()) {
				jule::Int _2300254bb_i = it - expr.begin();
				jule::Ptr<_2300254bb_Case> _2300254bb_c = *it;
				{
					if (_2300254bb_c->_field_scope != nullptr) {
						_148039_tm->_field_cases=nullptr;
						_148039_tm->_field_default=_2300254bb_c;
						this->self->_method_check_comptime_panic(_2300254bb_c->_field_scope,_148052_m->_field_cases[_2300254bb_i]->_field_token);
						goto _julec_label_push;
					}
				}
				_iter_next_4688727632:;
				++it;
				_2300254bb_i++;
				goto _iter_begin_4688727632;
			}
			_iter_end_4688727632:;
		}
		if (_148039_tm->_field_default != nullptr) {
			this->self->_method_check_comptime_panic(_148039_tm->_field_default->_field_scope,_148052_m->_field_default->_field_token);
		}
		_148039_tm->_field_cases=nullptr;
	}
	_julec_label_push:;
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_148039_tm));
}



inline void _2300254bb_ScopeChecker::_method_check_type_match(jule::Ptr<_221d8b043_MatchCase>& _150241_m) {
	jule::Ptr<_20683ebaa_Data> _150317_d = this->self->_field_s->_method_eval(this->self)->_method_eval(_150241_m->_field_expr);
	if (_150317_d == nullptr) {
		return;
	}
	if ((!(_150317_d->_field_kind->_field_generic)) && (!(((_150317_d->_field_kind->_method_prim() != nullptr) && _150317_d->_field_kind->_method_prim()->_method_is_any()) || (_150317_d->_field_kind->_method_trt() != nullptr)))) {
		this->self->_field_s->_method_push_err(_150241_m->_field_expr->_field_token,jule::Str("type-case must be have <any>, <trait> or <generic> typed expression", 67),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_2300254bb_Match> _151417_tm = jule::new_struct<_2300254bb_Match>(new( std::nothrow ) _2300254bb_Match(_150317_d,true,jule::Slice<jule::Ptr<_2300254bb_Case>>(),jule::Ptr<_2300254bb_Case>()));
	if (_150241_m->_field_default != nullptr) {
		_151417_tm->_field_default=this->self->_method_check_default(_151417_tm,_150241_m->_field_default);
	}
	this->self->_method_check_cases(_150241_m,_151417_tm,_150317_d);
	this->self->_method_push_type_match(_151417_tm,_150241_m);
}



inline void _2300254bb_ScopeChecker::_method_check_common_match(jule::Ptr<_221d8b043_MatchCase>& _152743_m) {
	jule::Ptr<_20683ebaa_Data> _152817_d = nullptr;
	if (_152743_m->_field_expr == nullptr) {
		_152817_d=jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_206e210e3_Const::_static_method_new_bool(true)));
		_152817_d->_field_model=jule::Any(_152817_d->_field_constant);
	} else {
		_152817_d=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_152743_m->_field_expr);
		if (_152817_d == nullptr) {
			return;
		}
	}
	jule::Ptr<_2300254bb_Match> _154217_mc = jule::new_struct<_2300254bb_Match>(new( std::nothrow ) _2300254bb_Match(_152817_d,jule::Bool(),jule::Slice<jule::Ptr<_2300254bb_Case>>(),jule::Ptr<_2300254bb_Case>()));
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_154217_mc));
	if (_152743_m->_field_default != nullptr) {
		_154217_mc->_field_default=this->self->_method_check_default(_154217_mc,_152743_m->_field_default);
	}
	this->self->_method_check_cases(_152743_m,_154217_mc,_152817_d);
}



inline void _2300254bb_ScopeChecker::_method_check_match(jule::Ptr<_221d8b043_MatchCase> _155435_m) {
	if (_155435_m->_field_type_match) {
		this->self->_method_check_type_match(_155435_m);
		return;
	}
	this->self->_method_check_common_match(_155435_m);
}



inline void _2300254bb_ScopeChecker::_method_check_fall(jule::Ptr<_221d8b043_FallSt> _156230_f) {
	if (((this->self->_field_cse == 0LL) || ((this->self->_field_scope->_field_stmts.len() + 1LL) < this->self->_field_scope->_field_stmts.len())) || this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_156230_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>());
		return;
	}
	_2300254bb_Case* _157017__case = ((_2300254bb_Case*)(this->self->_field_cse));
	if (_157017__case->_field_next == nullptr) {
		this->self->_field_s->_method_push_err(_156230_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>());
		this->self->_field_s->_method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_2300254bb_FallSt>(new( std::nothrow ) _2300254bb_FallSt(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_157017__case->_field_next))))));
}



inline jule::Ptr<_2300254bb_BreakSt> _2300254bb_ScopeChecker::_method_check_break_with_label(jule::Ptr<_221d8b043_BreakSt> _158242_b) {
	jule::Ptr<_2300254bb_BreakSt> _158317_brk = this->self->_method_check_plain_break(_158242_b);
	if (_158317_brk == nullptr) {
		return nullptr;
	}
	_158317_brk->_field_it=0LL;
	_158317_brk->_field_mtch=0LL;
	jule::Ptr<_2300254bb_ScopeLabel> _159317_label = _2300254bb_find_label_parent(_158242_b->_field_label._field_kind,this->self->_field_parent);
	if (_159317_label == nullptr) {
		this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_158242_b->_field_label._field_kind)}));
		return nullptr;
	}
	_159317_label->_field_used=true;
	if ((_159317_label->_field_pos + 1LL) >= _159317_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Int _160613_i = _159317_label->_field_pos + 1LL;
	if (_160613_i >= _159317_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
	} else {
		jule::Any _161021_st = _159317_label->_field_scope->_field_scope->_field_stmts[_160613_i];
		{
			auto &_match_expr{ _161021_st };
			if (!(_match_expr.type_is<jule::Ptr<_2300254bb_InfIter>>())) { goto _case_end_4688810224; }
			_case_begin_4688810224:;
			{
				_158317_brk->_field_it=static_cast<jule::Uintptr>(_161021_st.operator jule::Ptr<_2300254bb_InfIter>());
			}
			goto _match_end_4688809824;
			_case_end_4688810224:;
			if (!(_match_expr.type_is<jule::Ptr<_2300254bb_RangeIter>>())) { goto _case_end_4688810320; }
			_case_begin_4688810320:;
			{
				_158317_brk->_field_it=static_cast<jule::Uintptr>(_161021_st.operator jule::Ptr<_2300254bb_RangeIter>());
			}
			goto _match_end_4688809824;
			_case_end_4688810320:;
			if (!(_match_expr.type_is<jule::Ptr<_2300254bb_WhileIter>>())) { goto _case_end_4688810416; }
			_case_begin_4688810416:;
			{
				_158317_brk->_field_it=static_cast<jule::Uintptr>(_161021_st.operator jule::Ptr<_2300254bb_WhileIter>());
			}
			goto _match_end_4688809824;
			_case_end_4688810416:;
			if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Match>>())) { goto _case_end_4688810512; }
			_case_begin_4688810512:;
			{
				_158317_brk->_field_mtch=static_cast<jule::Uintptr>(_161021_st.operator jule::Ptr<_2300254bb_Match>());
			}
			goto _match_end_4688809824;
			_case_end_4688810512:;
			_case_begin_4688804624:;
			{
				this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
			}
			goto _match_end_4688809824;
			_case_end_4688804624:;
			_match_end_4688809824:;
		}
	}
	if (_158317_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_158317_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	if (_158317_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_158317_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	return _158317_brk;
}



inline jule::Ptr<_2300254bb_BreakSt> _2300254bb_ScopeChecker::_method_check_plain_break(jule::Ptr<_221d8b043_BreakSt> _163537_b) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_163537_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_2300254bb_ScopeChecker> _164117_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_164117_scope->_field_it == 0LL) && (_164117_scope->_field_cse == 0LL)) && (_164117_scope->_field_parent != nullptr)) && (_164117_scope->_field_owner == nullptr)))) { goto _case_end_4688829328; }
		_case_begin_4688829328:;
		{
			_164117_scope=_164117_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4688829152;
		_case_end_4688829328:;
		if (!((_164117_scope->_field_it != 0LL))) { goto _case_end_4688829440; }
		_case_begin_4688829440:;
		{
			return jule::new_struct<_2300254bb_BreakSt>(new( std::nothrow ) _2300254bb_BreakSt(_164117_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_4688829152;
		_case_end_4688829440:;
		if (!((_164117_scope->_field_cse != 0LL))) { goto _case_end_4688829552; }
		_case_begin_4688829552:;
		{
			return jule::new_struct<_2300254bb_BreakSt>(new( std::nothrow ) _2300254bb_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_2300254bb_Case*)(_164117_scope->_field_cse))->_field_owner))));
		}
		goto _match_end_4688829152;
		_case_end_4688829552:;
		_match_end_4688829152:;
	}
	this->self->_field_s->_method_push_err(_163537_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _2300254bb_ScopeChecker::_method_check_break(jule::Ptr<_221d8b043_BreakSt> _165931_b) {
	if (_165931_b->_field_label._field_id != 0LLU) {
		jule::Ptr<_2300254bb_BreakSt> _166121_brk = this->self->_method_check_break_with_label(_165931_b);
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_166121_brk));
		return;
	}
	jule::Ptr<_2300254bb_BreakSt> _166617_brk = this->self->_method_check_plain_break(_165931_b);
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_166617_brk));
}



inline void _2300254bb_ScopeChecker::_method_check_ret(jule::Ptr<_221d8b043_RetSt> _167033_r) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_167033_r->_field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	}
	jule::Ptr<_2300254bb_RetSt> _167517_rt = jule::new_struct<_2300254bb_RetSt>(new( std::nothrow ) _2300254bb_RetSt(this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ptr<_2200a2657_Var>>(),jule::Any()));
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_167517_rt));
	jule::Ptr<_2200223c9_RetTypeChecker> _168017_rtc = jule::new_struct<_2200223c9_RetTypeChecker>(new( std::nothrow ) _2200223c9_RetTypeChecker(this->self,_167517_rt->_field_func,jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_221d8b043_Expr>>(),jule::Slice<jule::Ptr<_2200a2657_Var>>(),_167033_r->_field_token,jule::Any()));
	jule::Bool _168513_ok = _168017_rtc->_method_check(_167033_r->_field_expr);
	if ((!(_168513_ok))) {
		return;
	}
	if ((_167033_r->_field_expr == nullptr) && (_168017_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_167517_rt->_field_vars=_168017_rtc->_field_vars;
	if (_167033_r->_field_expr != nullptr) {
		_167517_rt->_field_expr=_168017_rtc->_field_model;
	}
}



inline void _2300254bb_ScopeChecker::_method_check_use_expr(jule::Ptr<_221d8b043_UseExpr> _170134_ue) {
	if (this->self->_field_result == nullptr) {
		this->self->_field_s->_method_push_err(_170134_ue->_field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;
	}
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_170134_ue->_field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	}
	if ((this->self->_field_i + 1LL) < this->self->_field_tree->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_170134_ue->_field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	}
}



inline void _2300254bb_ScopeChecker::_method_check_node(jule::Any& _171835_node) {
	{
		auto &_match_expr{ _171835_node };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Comment>>())) { goto _case_end_4688880896; }
		_case_begin_4688880896:;
		{
			goto _match_end_4688879952;
		}
		goto _match_end_4688879952;
		_case_end_4688880896:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_ScopeTree>>())) { goto _case_end_4688880720; }
		_case_begin_4688880720:;
		{
			this->self->_method_check_anon_scope(_171835_node.operator jule::Ptr<_221d8b043_ScopeTree>());
		}
		goto _match_end_4688879952;
		_case_end_4688880720:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_VarDecl>>())) { goto _case_end_4688881504; }
		_case_begin_4688881504:;
		{
			this->self->_method_check_var_decl(_171835_node.operator jule::Ptr<_221d8b043_VarDecl>());
		}
		goto _match_end_4688879952;
		_case_end_4688881504:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TypeAliasDecl>>())) { goto _case_end_4688881040; }
		_case_begin_4688881040:;
		{
			this->self->_method_check_type_alias_decl(_171835_node.operator jule::Ptr<_221d8b043_TypeAliasDecl>());
		}
		goto _match_end_4688879952;
		_case_end_4688881040:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Expr>>())) { goto _case_end_4688881936; }
		_case_begin_4688881936:;
		{
			this->self->_method_check_expr(_171835_node.operator jule::Ptr<_221d8b043_Expr>());
		}
		goto _match_end_4688879952;
		_case_end_4688881936:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_CoExpr>>())) { goto _case_end_4688882032; }
		_case_begin_4688882032:;
		{
			this->self->_method_check_co_expr(_171835_node.operator jule::Ptr<_221d8b043_CoExpr>());
		}
		goto _match_end_4688879952;
		_case_end_4688882032:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Conditional>>())) { goto _case_end_4688882128; }
		_case_begin_4688882128:;
		{
			this->self->_method_check_conditional(_171835_node.operator jule::Ptr<_221d8b043_Conditional>());
		}
		goto _match_end_4688879952;
		_case_end_4688882128:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Iter>>())) { goto _case_end_4688882224; }
		_case_begin_4688882224:;
		{
			this->self->_method_check_iter(_171835_node.operator jule::Ptr<_221d8b043_Iter>());
		}
		goto _match_end_4688879952;
		_case_end_4688882224:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_ContSt>>())) { goto _case_end_4688882320; }
		_case_begin_4688882320:;
		{
			this->self->_method_check_cont(_171835_node.operator jule::Ptr<_221d8b043_ContSt>());
		}
		goto _match_end_4688879952;
		_case_end_4688882320:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_LabelSt>>())) { goto _case_end_4688882416; }
		_case_begin_4688882416:;
		{
			this->self->_method_check_label(_171835_node.operator jule::Ptr<_221d8b043_LabelSt>());
		}
		goto _match_end_4688879952;
		_case_end_4688882416:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_GotoSt>>())) { goto _case_end_4688882512; }
		_case_begin_4688882512:;
		{
			this->self->_method_push_goto(_171835_node.operator jule::Ptr<_221d8b043_GotoSt>());
		}
		goto _match_end_4688879952;
		_case_end_4688882512:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_AssignSt>>())) { goto _case_end_4688882608; }
		_case_begin_4688882608:;
		{
			this->self->_method_check_assign_st(_171835_node.operator jule::Ptr<_221d8b043_AssignSt>());
		}
		goto _match_end_4688879952;
		_case_end_4688882608:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_MatchCase>>())) { goto _case_end_4688882704; }
		_case_begin_4688882704:;
		{
			this->self->_method_check_match(_171835_node.operator jule::Ptr<_221d8b043_MatchCase>());
		}
		goto _match_end_4688879952;
		_case_end_4688882704:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FallSt>>())) { goto _case_end_4688882800; }
		_case_begin_4688882800:;
		{
			this->self->_method_check_fall(_171835_node.operator jule::Ptr<_221d8b043_FallSt>());
		}
		goto _match_end_4688879952;
		_case_end_4688882800:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_BreakSt>>())) { goto _case_end_4688882896; }
		_case_begin_4688882896:;
		{
			this->self->_method_check_break(_171835_node.operator jule::Ptr<_221d8b043_BreakSt>());
		}
		goto _match_end_4688879952;
		_case_end_4688882896:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_RetSt>>())) { goto _case_end_4688882992; }
		_case_begin_4688882992:;
		{
			this->self->_method_check_ret(_171835_node.operator jule::Ptr<_221d8b043_RetSt>());
		}
		goto _match_end_4688879952;
		_case_end_4688882992:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_UseExpr>>())) { goto _case_end_4688883088; }
		_case_begin_4688883088:;
		{
			this->self->_method_check_use_expr(_171835_node.operator jule::Ptr<_221d8b043_UseExpr>());
		}
		goto _match_end_4688879952;
		_case_end_4688883088:;
		_case_begin_4688879824:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_4688879952;
		_case_end_4688879824:;
		_match_end_4688879952:;
	}
}



inline void _2300254bb_ScopeChecker::_method_check_result(void) {
	jule::Any _174217_stmt = this->self->_field_tree->_field_stmts[this->self->_field_tree->_field_stmts.len() - 1LL];
	{
		auto &_match_expr{ _174217_stmt };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_UseExpr>>())) { goto _case_end_4688919584; }
		_case_begin_4688919584:;
		{
			jule::Ptr<_221d8b043_UseExpr> _174521_ue = _174217_stmt.operator jule::Ptr<_221d8b043_UseExpr>();
			jule::Ptr<_20683ebaa_Data> _174621_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_174521_ue->_field_expr);
			if (_174621_d == nullptr) {
				return;
			}
			this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_174621_d));
			jule::Ptr<_2200223c9_RetTypeChecker> _175321_rtc = jule::new_struct<_2200223c9_RetTypeChecker>(new( std::nothrow ) _2200223c9_RetTypeChecker(this->self,jule::Ptr<_222edb48e_FnIns>(),_2200223c9_get_result_types(this->self->_field_result),jule::Slice<jule::Ptr<_221d8b043_Expr>>(),jule::Slice<jule::Ptr<_2200a2657_Var>>(),_174521_ue->_field_expr->_field_token,jule::Any()));
			_175321_rtc->_method_check(_174521_ue->_field_expr);
		}
		goto _match_end_4688917664;
		_case_end_4688919584:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Expr>>())) { goto _case_end_4688919680; }
		_case_begin_4688919680:;
		{
			jule::Ptr<_221d8b043_Expr> _176121_expr = _174217_stmt.operator jule::Ptr<_221d8b043_Expr>();
			jule::Ptr<_20683ebaa_Data> _176221_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_176121_expr);
			if (_176221_d == nullptr) {
				return;
			}
			this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_176221_d));
			{
				auto &_match_expr{ _176221_d->_field_model };
				if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>>())) { goto _case_end_4688933472; }
				_case_begin_4688933472:;
				{
					jule::Ptr<_21eedb492_BuiltinErrorCallExprModel> _177125_m = _176221_d->_field_model.operator jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>();
					this->self->_method_process_error_call(_177125_m,_176121_expr->_field_token);
				}
				goto _match_end_4688936176;
				_case_end_4688933472:;
				_case_begin_4688932960:;
				{
					return;
				}
				goto _match_end_4688936176;
				_case_end_4688932960:;
				_match_end_4688936176:;
			}
		}
		goto _match_end_4688917664;
		_case_end_4688919680:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_GotoSt>>() || _match_expr.type_is<jule::Ptr<_221d8b043_BreakSt>>() || _match_expr.type_is<jule::Ptr<_221d8b043_ContSt>>() || _match_expr.type_is<jule::Ptr<_221d8b043_RetSt>>())) { goto _case_end_4688918080; }
		_case_begin_4688918080:;
		{
			this->self->_method_check_node(_174217_stmt);
		}
		goto _match_end_4688917664;
		_case_end_4688918080:;
		_case_begin_4688915200:;
		{
			this->self->_method_check_node(_174217_stmt);
			return;
		}
		goto _match_end_4688917664;
		_case_end_4688915200:;
		_match_end_4688917664:;
	}
	this->self->_field_result=nullptr;
}



inline void _2300254bb_ScopeChecker::_method_check_tree(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_tree->_field_stmts.len(); (this->self->_field_i)++) {
		{
			jule::Any _179621_stmt = this->self->_field_tree->_field_stmts[this->self->_field_i];
			this->self->_method_check_node(_179621_stmt);
		}
	_iter_next_4688942096:;
	}
	_iter_end_4688942096:;
	if ((this->self->_field_result != nullptr) && (this->self->_field_tree->_field_stmts.len() != 0LL)) {
		this->self->_method_check_result();
	}
}



inline void _2300254bb_ScopeChecker::_method_check_goto(jule::Ptr<_2300254bb_ScopeGoto>& _180534_gt,jule::Ptr<_2300254bb_ScopeLabel>& _180555_label) {
	jule::Ptr<_2300254bb_ScopeChecker> _180617_gtsc = _180534_gt->_field_scope;
	while ((_180617_gtsc->_field_child_index - 1LL) > _180555_label->_field_scope->_field_child_index) {
		{
			_180617_gtsc=_180617_gtsc->_field_parent;
		}
	_iter_next_4688951936:;
	}
	_iter_end_4688951936:;
	jule::Int _181117_n = 0LL;
	if (_180617_gtsc->_field_scope == _180555_label->_field_scope->_field_scope) {
		if (_180534_gt->_field_pos > _180555_label->_field_pos) {
			return;
		}
		_181117_n=_180534_gt->_field_pos;
	}
	jule::Int _182417_i = _180555_label->_field_pos - 1LL;
	if (_181117_n == 0LL) {
		{
			auto &expr = _180555_label->_field_scope->_field_scope->_field_stmts;
			auto it = expr.begin();
			_iter_begin_4688959984:;
			if (it != expr.end()) {
				jule::Int _2300254bb_j = it - expr.begin();
				jule::Any &_2300254bb_stmt = *it;
				{
					if (_2300254bb_stmt_is_goto_scope(_2300254bb_stmt,_180617_gtsc->_field_scope)) {
						_181117_n=_2300254bb_j;
						goto _iter_end_4688959984;
					}
				}
				_iter_next_4688959984:;
				++it;
				_2300254bb_j++;
				goto _iter_begin_4688959984;
			}
			_iter_end_4688959984:;
		}
	}
	for (; _182417_i >= _181117_n; (_182417_i)--) {
		{
			jule::Any _183721_stmt = _180555_label->_field_scope->_field_scope->_field_stmts[_182417_i];
			if (_2300254bb_st_is_def(_183721_stmt)) {
				(*this)._field_s->_method_push_err(_180534_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_180534_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
		}
	_iter_next_4688962992:;
	}
	_iter_end_4688962992:;
}



inline void _2300254bb_ScopeChecker::_method_check_gotos(void) {
	{
		auto &expr = (*((*this)._field_gotos));
		auto it = expr.begin();
		_iter_begin_4688961280:;
		if (it != expr.end()) {
			jule::Ptr<_2300254bb_ScopeGoto> _2300254bb_gt = *it;
			{
				jule::Ptr<_2300254bb_ScopeLabel> _184721_label = (*this)._method_find_label_all(_2300254bb_gt->_field_gt->_field_label._field_kind);
				if (_184721_label == nullptr) {
					(*this)._field_s->_method_push_err(_2300254bb_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_2300254bb_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_4688961280;
				}
				_184721_label->_field_used=true;
				(*this)._method_check_goto(_2300254bb_gt,_184721_label);
			}
			_iter_next_4688961280:;
			++it;
			goto _iter_begin_4688961280;
		}
		_iter_end_4688961280:;
	}
}



inline void _2300254bb_ScopeChecker::_method_check_labels(void) {
	{
		auto &expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_4688977840:;
		if (it != expr.end()) {
			jule::Ptr<_2300254bb_ScopeLabel> &_2300254bb_l = *it;
			{
				if ((!(_2300254bb_l->_field_used))) {
					(*this)._field_s->_method_push_err(_2300254bb_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_2300254bb_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_4688977840:;
			++it;
			goto _iter_begin_4688977840;
		}
		_iter_end_4688977840:;
	}
}



inline void _2300254bb_ScopeChecker::_method_check_vars(void) {
	{
		auto &expr = (*this)._field_table->_field_vars;
		auto it = expr.begin();
		_iter_begin_4688983072:;
		if (it != expr.end()) {
			jule::Ptr<_2200a2657_Var> &_2300254bb_v = *it;
			{
				if ((((!(_2300254bb_v->_field_used)) && (!(_2220dce43_is_ignore_ident(_2300254bb_v->_field_ident)))) && (!(_2220dce43_is_anon_ident(_2300254bb_v->_field_ident)))) && (_2300254bb_v->_field_ident != jule::Str("self", 4))) {
					(*this)._field_s->_method_push_err(_2300254bb_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_2300254bb_v->_field_ident)}));
				}
			}
			_iter_next_4688983072:;
			++it;
			goto _iter_begin_4688983072;
		}
		_iter_end_4688983072:;
	}
}



inline void _2300254bb_ScopeChecker::_method_check_aliases(void) {
	{
		auto &expr = (*this)._field_table->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4688990016:;
		if (it != expr.end()) {
			jule::Ptr<_2300b54e5_TypeAlias> &_2300254bb_a = *it;
			{
				if (((!(_2300254bb_a->_field_used)) && (!(_2220dce43_is_ignore_ident(_2300254bb_a->_field_ident)))) && (!(_2220dce43_is_anon_ident(_2300254bb_a->_field_ident)))) {
					(*this)._field_s->_method_push_err(_2300254bb_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_2300254bb_a->_field_ident)}));
				}
			}
			_iter_next_4688990016:;
			++it;
			goto _iter_begin_4688990016;
		}
		_iter_end_4688990016:;
	}
}



inline void _2300254bb_ScopeChecker::_method_check(jule::Ptr<_221d8b043_ScopeTree>& _188330_tree,jule::Ptr<_2300254bb_Scope>& _188353_s) {
	_188353_s->_field_deferred=_188330_tree->_field_deferred;
	_188353_s->_field_unsafety=_188330_tree->_field_unsafety;
	jule::I64 _188713_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_188330_tree;
	this->self->_field_scope=_188353_s;
	this->self->_method_check_tree();
	if (_188713_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
		if (this->self->_method_is_root()) {
			this->self->_method_check_gotos();
			this->self->_method_check_labels();
		}
	}
}



inline jule::Ptr<_2300254bb_ScopeChecker> _2300254bb_ScopeChecker::_method_new_child_checker(void) {
	jule::Ptr<_2300254bb_ScopeChecker> _190717_base = _2300254bb_new_scope_checker_base(this->self->_field_s,nullptr);
	_190717_base->_field_parent=this->self;
	_190717_base->_field_labels=this->self->_field_labels;
	_190717_base->_field_gotos=this->self->_field_gotos;
	_190717_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _190717_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_BuiltinErrorCallExprModel &_Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_IntegratedToStrExprModel &_Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_TernaryExprModel &_Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



inline void _21eee219b_DirectiveChecker::_method_check_cdef(jule::Ptr<_221d8b043_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (!(_match_expr.type_is<jule::Ptr<_222edb48e_Fn>>())) { goto _case_end_4689024240; }
		_case_begin_4689024240:;
		{
			if ((*this)._field_o.operator jule::Ptr<_222edb48e_Fn>()->_field_cpp_linked) {
				goto _match_end_4689023824;
			}
			goto _case_begin_4689023296;
		}
		goto _match_end_4689023824;
		_case_end_4689024240:;
		_case_begin_4689023296:;
		{
			(*this)._field_s->_method_push_err(_1630_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_1630_d->_field_tag._field_kind)}));
		}
		goto _match_end_4689023824;
		_case_end_4689023296:;
		_match_end_4689023824:;
	}
	if (_1630_d->_field_args.len() > 0LL) {
		(*this)._field_s->_method_push_err(_1630_d->_field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _21eee219b_DirectiveChecker::_method_check_typedef(jule::Ptr<_221d8b043_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4689033968; }
		_case_begin_4689033968:;
		{
			if ((*this)._field_o.operator jule::Ptr<_2398d04dc_Struct>()->_field_cpp_linked) {
				goto _match_end_4689033552;
			}
			goto _case_begin_4689033024;
		}
		goto _match_end_4689033552;
		_case_end_4689033968:;
		_case_begin_4689033024:;
		{
			(*this)._field_s->_method_push_err(_3233_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_3233_d->_field_tag._field_kind)}));
		}
		goto _match_end_4689033552;
		_case_end_4689033024:;
		_match_end_4689033552:;
	}
	if (_3233_d->_field_args.len() > 0LL) {
		(*this)._field_s->_method_push_err(_3233_d->_field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _21eee219b_DirectiveChecker::_method_check_derive(jule::Ptr<_221d8b043_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4689043696; }
		_case_begin_4689043696:;
		{
			if ((!((*this)._field_o.operator jule::Ptr<_2398d04dc_Struct>()->_field_cpp_linked))) {
				goto _match_end_4689043280;
			}
			goto _case_begin_4689042752;
		}
		goto _match_end_4689043280;
		_case_end_4689043696:;
		_case_begin_4689042752:;
		{
			(*this)._field_s->_method_push_err(_4832_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>());
		}
		goto _match_end_4689043280;
		_case_end_4689042752:;
		_match_end_4689043280:;
	}
	if (_4832_d->_field_args.len() == 0LL) {
		(*this)._field_s->_method_push_err(_4832_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		(*this)._field_s->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	} else if (_4832_d->_field_args.len() > 1LL) {
		(*this)._field_s->_method_push_err(_4832_d->_field_args[1LL],jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	{
		auto &_match_expr{ _4832_d->_field_args[0LL]._field_kind };
		if (!(_match_expr == (jule::Str("Clone", 5)))) { goto _case_end_4689055456; }
		goto _match_end_4689054576;
		_case_end_4689055456:;
		_case_begin_4689053104:;
		{
			(*this)._field_s->_method_push_err(_4832_d->_field_args[0LL],jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_4832_d->_field_args[0LL]._field_kind)}));
		}
		goto _match_end_4689054576;
		_case_end_4689053104:;
		_match_end_4689054576:;
	}
}



inline void _21eee219b_DirectiveChecker::_method_check_namespace(jule::Ptr<_221d8b043_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4689061792; }
		_case_begin_4689061792:;
		{
			if ((!((*this)._field_o.operator jule::Ptr<_2398d04dc_Struct>()->_field_cpp_linked))) {
				(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
			}
		}
		goto _match_end_4689061376;
		_case_end_4689061792:;
		if (!(_match_expr.type_is<jule::Ptr<_222edb48e_Fn>>())) { goto _case_end_4689061888; }
		_case_begin_4689061888:;
		{
			if ((!((*this)._field_o.operator jule::Ptr<_222edb48e_Fn>()->_field_cpp_linked))) {
				(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
			}
		}
		goto _match_end_4689061376;
		_case_end_4689061888:;
		if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4689061984; }
		_case_begin_4689061984:;
		{
			if ((!((*this)._field_o.operator jule::Ptr<_2200a2657_Var>()->_field_cpp_linked))) {
				(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
			}
		}
		goto _match_end_4689061376;
		_case_end_4689061984:;
		_case_begin_4689060848:;
		{
			(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
		}
		goto _match_end_4689061376;
		_case_end_4689060848:;
		_match_end_4689061376:;
	}
	if (_7439_d->_field_args.len() == 0LL) {
		(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if (_7439_d->_field_args.len() > 1LL) {
		(*this)._field_s->_method_push_err(_7439_d->_field_args[1LL],jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	_2220dce43_Token _10213_arg = _7439_d->_field_args[0LL];
	if (_10213_arg._field_id != 6LLU) {
		(*this)._field_s->_method_push_err(_10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_10213_arg._field_kind[0LL] != '\"') {
		(*this)._field_s->_method_push_err(_10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_7439_d->_field_args[0LL]._field_kind=_10213_arg._field_kind.slice(1LL,_10213_arg._field_kind.len() - 1LL);
}



inline void _21eee219b_DirectiveChecker::_method_check_directive(jule::Ptr<_221d8b043_Directive>& _11639_d) {
	{
		auto &_match_expr{ _11639_d->_field_tag._field_kind };
		if (!(_match_expr == (jule::Str("cdef", 4)))) { goto _case_end_4689091936; }
		_case_begin_4689091936:;
		{
			(*this)._method_check_cdef(_11639_d);
		}
		goto _match_end_4689091600;
		_case_end_4689091936:;
		if (!(_match_expr == (jule::Str("typedef", 7)))) { goto _case_end_4689092032; }
		_case_begin_4689092032:;
		{
			(*this)._method_check_typedef(_11639_d);
		}
		goto _match_end_4689091600;
		_case_end_4689092032:;
		if (!(_match_expr == (jule::Str("derive", 6)))) { goto _case_end_4689092128; }
		_case_begin_4689092128:;
		{
			(*this)._method_check_derive(_11639_d);
		}
		goto _match_end_4689091600;
		_case_end_4689092128:;
		if (!(_match_expr == (jule::Str("namespace", 9)))) { goto _case_end_4689092224; }
		_case_begin_4689092224:;
		{
			(*this)._method_check_namespace(_11639_d);
		}
		goto _match_end_4689091600;
		_case_end_4689092224:;
		if (!(_match_expr == (jule::Str("build", 5)) || _match_expr == (jule::Str("pass", 4)))) { goto _case_end_4689094128; }
		_case_begin_4689094128:;
		{
			(*this)._field_s->_method_push_err(_11639_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_11639_d->_field_tag._field_kind)}));
		}
		goto _match_end_4689091600;
		_case_end_4689094128:;
		_case_begin_4689090928:;
		{
			(*this)._field_s->_method_push_err(_11639_d->_field_tag,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
		goto _match_end_4689091600;
		_case_end_4689090928:;
		_match_end_4689091600:;
	}
}



inline void _21eee219b_DirectiveChecker::_method_check(void) {
	{
		auto &expr = (*this)._field_d;
		auto it = expr.begin();
		_iter_begin_4689104144:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_Directive> _21eee219b_d = *it;
			{
				(*this)._method_check_directive(_21eee219b_d);
			}
			_iter_next_4689104144:;
			++it;
			goto _iter_begin_4689104144;
		}
		_iter_end_4689104144:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _21eee219b_DirectiveChecker &_Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2200229c3_ImportInfo> _2200229c3_Package::_method_find_package(jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_2200229c3_ImportInfo> _2200229c3_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_2200a2657_Var> _2200229c3_Package::_method_find_var(jule::Str _26631_ident,jule::Bool _26643_cpp_linked) {
	return _2200229c3_find_var_in_package((*this)._field_files,_26631_ident,_26643_cpp_linked);
}



inline jule::Ptr<_2300b54e5_TypeAlias> _2200229c3_Package::_method_find_type_alias(jule::Str _27238_ident,jule::Bool _27250_cpp_linked) {
	return _2200229c3_find_type_alias_in_package((*this)._field_files,_27238_ident,_27250_cpp_linked);
}



inline jule::Ptr<_2398d04dc_Struct> _2200229c3_Package::_method_find_struct(jule::Str _27834_ident,jule::Bool _27846_cpp_linked) {
	return _2200229c3_find_struct_in_package((*this)._field_files,_27834_ident,_27846_cpp_linked);
}



inline jule::Ptr<_222edb48e_Fn> _2200229c3_Package::_method_find_fn(jule::Str _28430_ident,jule::Bool _28442_cpp_linked) {
	return _2200229c3_find_fn_in_package((*this)._field_files,_28430_ident,_28442_cpp_linked);
}



inline jule::Ptr<_2300167cb_Trait> _2200229c3_Package::_method_find_trait(jule::Str _29033_ident) {
	return _2200229c3_find_trait_in_package((*this)._field_files,_29033_ident);
}



inline jule::Ptr<_23001604a_Enum> _2200229c3_Package::_method_find_enum(jule::Str _29632_ident) {
	return _2200229c3_find_enum_in_package((*this)._field_files,_29632_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _2200229c3_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2200229c3_ImportInfo> _21eee051d_Sema::_method_find_package(jule::Str _33135_ident) {
	return (*this)._field_file->_method_find_package(_33135_ident);
}



inline jule::Ptr<_2200229c3_ImportInfo> _21eee051d_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)> _34137_selector) {
	return (*this)._field_file->_method_select_package(_34137_selector);
}



inline jule::Ptr<_2200a2657_Var> _21eee051d_Sema::_method_find_var(jule::Str _35131_ident,jule::Bool _35143_cpp_linked) {
	jule::Ptr<_2200a2657_Var> _35317_v = _2200229c3_find_var_in_package((*this)._field_files,_35131_ident,_35143_cpp_linked);
	if (_35317_v != nullptr) {
		return _35317_v;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4689182432:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _21eee051d_imp = *it;
			{
				if ((!(_21eee051d_imp_is_lookupable(_21eee051d_imp,_35131_ident)))) {
					goto _iter_next_4689182432;
				}
				_35317_v=_21eee051d_imp->_method_find_var(_35131_ident,_35143_cpp_linked);
				if ((_35317_v != nullptr) && (*this)._method_is_accessible_define(_35317_v->_field_public,_35317_v->_field_token)) {
					return _35317_v;
				}
			}
			_iter_next_4689182432:;
			++it;
			goto _iter_begin_4689182432;
		}
		_iter_end_4689182432:;
	}
	return nullptr;
}



inline jule::Ptr<_2300b54e5_TypeAlias> _21eee051d_Sema::_method_find_type_alias(jule::Str _37838_ident,jule::Bool _37850_cpp_linked) {
	jule::Ptr<_2300b54e5_TypeAlias> _38017_ta = _2200229c3_find_type_alias_in_package((*this)._field_files,_37838_ident,_37850_cpp_linked);
	if (_38017_ta != nullptr) {
		return _38017_ta;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4689192272:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _21eee051d_imp = *it;
			{
				if ((!(_21eee051d_imp_is_lookupable(_21eee051d_imp,_37838_ident)))) {
					goto _iter_next_4689192272;
				}
				_38017_ta=_21eee051d_imp->_method_find_type_alias(_37838_ident,_37850_cpp_linked);
				if ((_38017_ta != nullptr) && (*this)._method_is_accessible_define(_38017_ta->_field_public,_38017_ta->_field_token)) {
					return _38017_ta;
				}
			}
			_iter_next_4689192272:;
			++it;
			goto _iter_begin_4689192272;
		}
		_iter_end_4689192272:;
	}
	return nullptr;
}



inline jule::Ptr<_2398d04dc_Struct> _21eee051d_Sema::_method_find_struct(jule::Str _40534_ident,jule::Bool _40546_cpp_linked) {
	jule::Ptr<_2398d04dc_Struct> _40717_s = _2200229c3_find_struct_in_package((*this)._field_files,_40534_ident,_40546_cpp_linked);
	if (_40717_s != nullptr) {
		return _40717_s;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4689200800:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _21eee051d_imp = *it;
			{
				if ((!(_21eee051d_imp_is_lookupable(_21eee051d_imp,_40534_ident)))) {
					goto _iter_next_4689200800;
				}
				_40717_s=_21eee051d_imp->_method_find_struct(_40534_ident,_40546_cpp_linked);
				if ((_40717_s != nullptr) && (*this)._method_is_accessible_define(_40717_s->_field_public,_40717_s->_field_token)) {
					return _40717_s;
				}
			}
			_iter_next_4689200800:;
			++it;
			goto _iter_begin_4689200800;
		}
		_iter_end_4689200800:;
	}
	return nullptr;
}



inline jule::Ptr<_222edb48e_Fn> _21eee051d_Sema::_method_find_fn(jule::Str _43230_ident,jule::Bool _43242_cpp_linked) {
	jule::Ptr<_222edb48e_Fn> _43417_f = _2200229c3_find_fn_in_package((*this)._field_files,_43230_ident,_43242_cpp_linked);
	if (_43417_f != nullptr) {
		return _43417_f;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4689209440:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _21eee051d_imp = *it;
			{
				if ((!(_21eee051d_imp_is_lookupable(_21eee051d_imp,_43230_ident)))) {
					goto _iter_next_4689209440;
				}
				_43417_f=_21eee051d_imp->_method_find_fn(_43230_ident,_43242_cpp_linked);
				if ((_43417_f != nullptr) && (*this)._method_is_accessible_define(_43417_f->_field_public,_43417_f->_field_token)) {
					return _43417_f;
				}
			}
			_iter_next_4689209440:;
			++it;
			goto _iter_begin_4689209440;
		}
		_iter_end_4689209440:;
	}
	return nullptr;
}



inline jule::Ptr<_2300167cb_Trait> _21eee051d_Sema::_method_find_trait(jule::Str _45933_ident) {
	jule::Ptr<_2300167cb_Trait> _46117_t = _2200229c3_find_trait_in_package((*this)._field_files,_45933_ident);
	if (_46117_t != nullptr) {
		return _46117_t;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4689216992:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _21eee051d_imp = *it;
			{
				if ((!(_21eee051d_imp_is_lookupable(_21eee051d_imp,_45933_ident)))) {
					goto _iter_next_4689216992;
				}
				_46117_t=_21eee051d_imp->_method_find_trait(_45933_ident);
				if ((_46117_t != nullptr) && (*this)._method_is_accessible_define(_46117_t->_field_public,_46117_t->_field_token)) {
					return _46117_t;
				}
			}
			_iter_next_4689216992:;
			++it;
			goto _iter_begin_4689216992;
		}
		_iter_end_4689216992:;
	}
	return nullptr;
}



inline jule::Ptr<_23001604a_Enum> _21eee051d_Sema::_method_find_enum(jule::Str _48632_ident) {
	jule::Ptr<_23001604a_Enum> _48817_e = _2200229c3_find_enum_in_package((*this)._field_files,_48632_ident);
	if (_48817_e != nullptr) {
		return _48817_e;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_5640216512:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _21eee051d_imp = *it;
			{
				if ((!(_21eee051d_imp_is_lookupable(_21eee051d_imp,_48632_ident)))) {
					goto _iter_next_5640216512;
				}
				_48817_e=_21eee051d_imp->_method_find_enum(_48632_ident);
				if ((_48817_e != nullptr) && (*this)._method_is_accessible_define(_48817_e->_field_public,_48817_e->_field_token)) {
					return _48817_e;
				}
			}
			_iter_next_5640216512:;
			++it;
			goto _iter_begin_5640216512;
		}
		_iter_end_5640216512:;
	}
	return nullptr;
}



inline jule::Bool _21eee051d_Sema::_method_is_flag(jule::Int _51022_flags) {
	return ((*this)._field_flags & _51022_flags) == _51022_flags;
}



inline void _21eee051d_Sema::_method_set_current_file(jule::Ptr<_2067a6b66_SymbolTable> _51239_f) {
	(*this)._field_file=_51239_f;
}



inline void _21eee051d_Sema::_method_push_err(_2220dce43_Token _51427_token,jule::Str _51441_fmt,jule::Slice<jule::Any> _51454_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_21eee051d_compiler_err(_51427_token,true,_51441_fmt,_51454_args));
}



inline void _21eee051d_Sema::_method_push_suggestion(jule::Str _51934_fmt,jule::Slice<jule::Any> _51947_args) {
	{
		_21eee051d_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_51934_fmt,_51947_args);
	}
}



inline jule::Bool _21eee051d_Sema::_method_is_accessible_define(jule::Bool _52435_public,_2220dce43_Token _52449_token) {
	return (_52435_public || (_52449_token._field_file == nullptr)) || ((*this)._field_file->_field_file->_method_dir() == _52449_token._field_file->_method_dir());
}



inline jule::Bool _21eee051d_Sema::_method_is_duplicated_ident(jule::Uintptr _53134_itself,jule::Str _53151_ident,jule::Bool _53163_cpp_linked) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4680393504:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> &_21eee051d_f = *it;
			{
				if (_21eee051d_f->_method_is_duplicated_ident(_53134_itself,_53151_ident,_53163_cpp_linked)) {
					return true;
				}
				{
					auto &expr = _21eee051d_f->_field_imports;
					auto it = expr.begin();
					_iter_begin_4680398256:;
					if (it != expr.end()) {
						jule::Ptr<_2200229c3_ImportInfo> &_21eee051d_imp = *it;
						{
							{
								auto &expr = _21eee051d_imp->_field_selected;
								auto it = expr.begin();
								_iter_begin_4680400080:;
								if (it != expr.end()) {
									_2220dce43_Token &_21eee051d_selected = *it;
									{
										if (_21eee051d_selected._field_kind == _53151_ident) {
											return true;
										}
									}
									_iter_next_4680400080:;
									++it;
									goto _iter_begin_4680400080;
								}
								_iter_end_4680400080:;
							}
						}
						_iter_next_4680398256:;
						++it;
						goto _iter_begin_4680398256;
					}
					_iter_end_4680398256:;
				}
			}
			_iter_next_4680393504:;
			++it;
			goto _iter_begin_4680393504;
		}
		_iter_end_4680393504:;
	}
	return false;
}



inline void _21eee051d_Sema::_method_check_directives(jule::Slice<jule::Ptr<_221d8b043_Directive>>& _54841_d,jule::Any _54862_o) {
	_21eee219b_DirectiveChecker _54917_dc = _21eee219b_DirectiveChecker(this->self,_54841_d,_54862_o);
	_54917_dc._method_check();
}



inline jule::Bool _21eee051d_Sema::_method_check_generic_quantity(jule::Int _55741_required,jule::Int _55756_given,_2220dce43_Token _55768_error_token) {
	jule::Bool _55790_ok = jule::Bool();
	{
		if (!(((_55741_required == 0LL) && (_55756_given > 0LL)))) { goto _case_end_4680411984; }
		_case_begin_4680411984:;
		{
			(*this)._method_push_err(_55768_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
			_55790_ok = false;
			return _55790_ok;
		}
		goto _match_end_4680410320;
		_case_end_4680411984:;
		if (!(((_55741_required > 0LL) && (_55756_given == 0LL)))) { goto _case_end_4680412144; }
		_case_begin_4680412144:;
		{
			(*this)._method_push_err(_55768_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
			_55790_ok = false;
			return _55790_ok;
		}
		goto _match_end_4680410320;
		_case_end_4680412144:;
		if (!((_55741_required < _55756_given))) { goto _case_end_4680412256; }
		_case_begin_4680412256:;
		{
			(*this)._method_push_err(_55768_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
			_55790_ok = false;
			return _55790_ok;
		}
		goto _match_end_4680410320;
		_case_end_4680412256:;
		if (!((_55741_required > _55756_given))) { goto _case_end_4680411504; }
		_case_begin_4680411504:;
		{
			(*this)._method_push_err(_55768_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
			_55790_ok = false;
			return _55790_ok;
		}
		goto _match_end_4680410320;
		_case_end_4680411504:;
		_case_begin_4680410496:;
		{
			_55790_ok = true;
			return _55790_ok;
		}
		goto _match_end_4680410320;
		_case_end_4680410496:;
		_match_end_4680410320:;
	}
}



inline jule::Bool _21eee051d_Sema::_method_is_duplicated_import_selection(jule::Uintptr _58045_itself,jule::Str _58062_ident) {
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4680422976:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> &_21eee051d_imp = *it;
			{
				if (static_cast<jule::Uintptr>(_21eee051d_imp) == _58045_itself) {
					goto _iter_end_4680422976;
				}
				if (_21eee051d_imp->_method_exist_ident(_58062_ident)) {
					return true;
				}
			}
			_iter_next_4680422976:;
			++it;
			goto _iter_begin_4680422976;
		}
		_iter_end_4680422976:;
	}
	return false;
}



inline jule::Any _21eee051d_Sema::_method_get_import_def(jule::Str _59529_ident,jule::Ptr<_2200229c3_ImportInfo>& _59546_imp) {
	if (_206d53311_find_package_builtin_def(_59546_imp->_field_link_path,_59529_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto &expr = _59546_imp->_field_package->_field_files;
		auto it = expr.begin();
		_iter_begin_4680429536:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_f = *it;
			{
				
				jule::Any _60221_def = _21eee051d_f->_method_def_by_ident(_59529_ident,false);
				if (_60221_def != nullptr) {
					return _60221_def;
				}
			}
			_iter_next_4680429536:;
			++it;
			goto _iter_begin_4680429536;
		}
		_iter_end_4680429536:;
	}
	return jule::Any(nullptr);
}



inline void _21eee051d_Sema::_method_check_import_selections(jule::Ptr<_2200229c3_ImportInfo>& _61147_imp) {
	{
		auto &expr = _61147_imp->_field_selected;
		auto it = expr.begin();
		_iter_begin_4680436896:;
		if (it != expr.end()) {
			_2220dce43_Token &_21eee051d_ident = *it;
			{
				if (_21eee051d_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_4680436896;
				}
				if ((*this)._method_is_duplicated_import_selection(static_cast<jule::Uintptr>(_61147_imp),_21eee051d_ident._field_kind)) {
					(*this)._method_push_err(_21eee051d_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_21eee051d_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					goto _iter_next_4680436896;
				}
				jule::Any _62321_def = (*this)._method_get_import_def(_21eee051d_ident._field_kind,_61147_imp);
				{
					auto &_match_expr{ _62321_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4680445568; }
					_case_begin_4680445568:;
					{
						goto _iter_next_4680436896;
					}
					goto _match_end_4680445088;
					_case_end_4680445568:;
					if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4680445664; }
					_case_begin_4680445664:;
					{
						jule::Ptr<_2200a2657_Var> _63025_v = _62321_def.operator jule::Ptr<_2200a2657_Var>();
						if ((*this)._method_is_accessible_define(_63025_v->_field_public,_63025_v->_field_token)) {
							goto _iter_next_4680436896;
						}
					}
					goto _match_end_4680445088;
					_case_end_4680445664:;
					if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_TypeAlias>>())) { goto _case_end_4680445760; }
					_case_begin_4680445760:;
					{
						jule::Ptr<_2300b54e5_TypeAlias> _63625_ta = _62321_def.operator jule::Ptr<_2300b54e5_TypeAlias>();
						if ((*this)._method_is_accessible_define(_63625_ta->_field_public,_63625_ta->_field_token)) {
							goto _iter_next_4680436896;
						}
					}
					goto _match_end_4680445088;
					_case_end_4680445760:;
					if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4680445856; }
					_case_begin_4680445856:;
					{
						jule::Ptr<_2398d04dc_Struct> _64225_strct = _62321_def.operator jule::Ptr<_2398d04dc_Struct>();
						if ((*this)._method_is_accessible_define(_64225_strct->_field_public,_64225_strct->_field_token)) {
							goto _iter_next_4680436896;
						}
					}
					goto _match_end_4680445088;
					_case_end_4680445856:;
					if (!(_match_expr.type_is<jule::Ptr<_2300167cb_Trait>>())) { goto _case_end_4680447552; }
					_case_begin_4680447552:;
					{
						jule::Ptr<_2300167cb_Trait> _64825_t = _62321_def.operator jule::Ptr<_2300167cb_Trait>();
						if ((*this)._method_is_accessible_define(_64825_t->_field_public,_64825_t->_field_token)) {
							goto _iter_next_4680436896;
						}
					}
					goto _match_end_4680445088;
					_case_end_4680447552:;
					if (!(_match_expr.type_is<jule::Ptr<_23001604a_Enum>>())) { goto _case_end_4680447648; }
					_case_begin_4680447648:;
					{
						jule::Ptr<_23001604a_Enum> _65425_e = _62321_def.operator jule::Ptr<_23001604a_Enum>();
						if ((*this)._method_is_accessible_define(_65425_e->_field_public,_65425_e->_field_token)) {
							goto _iter_next_4680436896;
						}
					}
					goto _match_end_4680445088;
					_case_end_4680447648:;
					if (!(_match_expr.type_is<jule::Ptr<_222edb48e_Fn>>())) { goto _case_end_4680447760; }
					_case_begin_4680447760:;
					{
						jule::Ptr<_222edb48e_Fn> _66025_f = _62321_def.operator jule::Ptr<_222edb48e_Fn>();
						if ((*this)._method_is_accessible_define(_66025_f->_field_public,_66025_f->_field_token)) {
							goto _iter_next_4680436896;
						}
					}
					goto _match_end_4680445088;
					_case_end_4680447760:;
					_case_begin_4680439888:;
					{
						(*this)._method_push_err(_21eee051d_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_21eee051d_ident._field_kind)}));
						goto _iter_next_4680436896;
					}
					goto _match_end_4680445088;
					_case_end_4680439888:;
					_match_end_4680445088:;
				}
				(*this)._method_push_err(_21eee051d_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_21eee051d_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
			}
			_iter_next_4680436896:;
			++it;
			goto _iter_begin_4680436896;
		}
		_iter_end_4680436896:;
	}
}



inline jule::Bool _21eee051d_Sema::_method_is_use_alias_duplication(jule::Ptr<_2200229c3_ImportInfo>& _67544_imp) {
	if (_67544_imp->_field_alias.len() == 0LL) {
		return false;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4680470960:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _21eee051d_imp2 = *it;
			{
				if (_21eee051d_imp2 == _67544_imp) {
					goto _iter_end_4680470960;
				}
				if (_21eee051d_imp2->_field_alias == _67544_imp->_field_alias) {
					return true;
				}
			}
			_iter_next_4680470960:;
			++it;
			goto _iter_begin_4680470960;
		}
		_iter_end_4680470960:;
	}
	return false;
}



inline jule::Bool _21eee051d_Sema::_method_check_import(jule::Ptr<_2200229c3_ImportInfo>& _69136_imp) {
	if (_69136_imp->_field_cpp_linked || (_69136_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_69136_imp)) {
		(*this)._method_push_err(_69136_imp->_field_token,jule::Str("identifier \"@\" is already used for another use declaration", 58),jule::Slice<jule::Any>({jule::Any(_69136_imp->_field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	}
	if (_69136_imp->_field_duplicate) {
		return true;
	}
	jule::Ptr<_21eee051d_Sema> _70517_sema = jule::new_struct_ptr<_21eee051d_Sema>(new( std::nothrow ) _21eee051d_Sema(jule::Slice<_23886c227_Log>(),jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>(),jule::Ptr<_2067a6b66_SymbolTable>(),(*this)._field_flags));
	_70517_sema->_method_check(_69136_imp->_field_package->_field_files);
	if (_70517_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_70517_sema->_field_errors);
		_70517_sema->_field_errors=nullptr;
		return false;
	}
	(*this)._method_check_import_selections(_69136_imp);
	return true;
}



inline void _21eee051d_Sema::_method_check_imports(void) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4680490592:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_file = *it;
			{
				(*this)._method_set_current_file(_21eee051d_file);
				{
					auto &expr = _21eee051d_file->_field_imports;
					auto it = expr.begin();
					_iter_begin_4680493232:;
					if (it != expr.end()) {
						jule::Ptr<_2200229c3_ImportInfo> _21eee051d_imp = *it;
						{
							jule::Bool _72421_ok = (*this)._method_check_import(_21eee051d_imp);
							if ((!(_72421_ok))) {
								(*this)._method_push_err(_21eee051d_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_21eee051d_imp->_field_link_path)}));
								return;
							}
						}
						_iter_next_4680493232:;
						++it;
						goto _iter_begin_4680493232;
					}
					_iter_end_4680493232:;
				}
			}
			_iter_next_4680490592:;
			++it;
			goto _iter_begin_4680490592;
		}
		_iter_end_4680490592:;
	}
}



inline void _21eee051d_Sema::_method_impl_file_impls(void) {
	{
		auto &expr = this->self->_field_file->_field_impls;
		auto it = expr.begin();
		_iter_begin_4680494320:;
		if (it != expr.end()) {
			jule::Ptr<_230019081_Impl> _21eee051d_imp = *it;
			{
				this->self->_method_impl_impl(_21eee051d_imp);
			}
			_iter_next_4680494320:;
			++it;
			goto _iter_begin_4680494320;
		}
		_iter_end_4680494320:;
	}
}



inline void _21eee051d_Sema::_method_impl_impls(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4680503120:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_file = *it;
			{
				this->self->_method_set_current_file(_21eee051d_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_4680503120:;
			++it;
			goto _iter_begin_4680503120;
		}
		_iter_end_4680503120:;
	}
}



inline void _21eee051d_Sema::_method_check_enums(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4680507200:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_file = *it;
			{
				this->self->_method_set_current_file(_21eee051d_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_4680507200:;
			++it;
			goto _iter_begin_4680507200;
		}
		_iter_end_4680507200:;
	}
}



inline jule::Bool _21eee051d_Sema::_method_check_type_with_refers(jule::Ptr<_2300b54e5_TypeSymbol>& _75747_t,jule::Trait<_206c9641e_Lookup> _75813_l,jule::Ptr<_2300b54e5_Referencer> _75828_referencer) {
	jule::Bool _75855_ok = jule::Bool();
	if (_75747_t->_method_checked()) {
		_75855_ok = true;
		return _75855_ok;
	}
	_2300b54e5_TypeChecker _76217_tc = _2300b54e5_TypeChecker(this->self,_75813_l,_75828_referencer,_2220dce43_Token(),jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>(),jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>(),jule::Bool());
	_76217_tc._method_check(_75747_t);
	_75855_ok = _75747_t->_method_checked();
	return _75855_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_type(jule::Ptr<_2300b54e5_TypeSymbol>& _77335_t,jule::Trait<_206c9641e_Lookup> _77355_l) {
	jule::Bool _77368_ok = jule::Bool();
	_77368_ok = this->self->_method_check_type_with_refers(_77335_t,_77355_l,nullptr);
	return _77368_ok;
}



inline jule::Ptr<_2300b54e5_TypeKind> _21eee051d_Sema::_method_build_type_with_generics(jule::Ptr<_221d8b043_TypeDecl>& _77949_t,jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>> _78013_generics) {
	jule::Ptr<_2300b54e5_TypeChecker> _78117_tc = jule::new_struct<_2300b54e5_TypeChecker>(new( std::nothrow ) _2300b54e5_TypeChecker(this->self,this->self,jule::Ptr<_2300b54e5_Referencer>(),_2220dce43_Token(),jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>(),_78013_generics,jule::Bool()));
	return _78117_tc->_method_check_decl(_77949_t);
}



inline jule::Ptr<_2300b54e5_TypeKind> _21eee051d_Sema::_method_build_type(jule::Ptr<_221d8b043_TypeDecl>& _79035_t) {
	return this->self->_method_build_type_with_generics(_79035_t,nullptr);
}



inline jule::Ptr<_20683ebaa_Eval> _21eee051d_Sema::_method_evalpd(jule::Trait<_206c9641e_Lookup> _79630_l,jule::Ptr<_2300b54e5_TypeKind> _79645_p,jule::Ptr<_2200a2657_Var> _79663_owner) {
	jule::Ptr<_20683ebaa_Eval> _79717_e = jule::new_struct_ptr<_20683ebaa_Eval>(new( std::nothrow ) _20683ebaa_Eval(this->self,_79630_l,jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),_79663_owner));
	{
		auto &_match_expr{ _79630_l };
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ScopeChecker>>())) { goto _case_end_4680552832; }
		_case_begin_4680552832:;
		{
			_79717_e->_field_unsafety=_79630_l.operator jule::Ptr<_2300254bb_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_4680554304;
		_case_end_4680552832:;
		_match_end_4680554304:;
	}
	_79717_e->_field_prefix=_79645_p;
	return _79717_e;
}



inline jule::Ptr<_20683ebaa_Eval> _21eee051d_Sema::_method_evalp(jule::Trait<_206c9641e_Lookup> _81429_l,jule::Ptr<_2300b54e5_TypeKind> _81444_p) {
	return this->self->_method_evalpd(_81429_l,_81444_p,nullptr);
}



inline jule::Ptr<_20683ebaa_Eval> _21eee051d_Sema::_method_eval(jule::Trait<_206c9641e_Lookup> _81928_l) {
	return this->self->_method_evalp(_81928_l,nullptr);
}



inline void _21eee051d_Sema::_method_check_assign_type(jule::Bool _82337_dest_is_ref,jule::Ptr<_2300b54e5_TypeKind>& _82361_dest,jule::Ptr<_20683ebaa_Data>& _82414_d,_2220dce43_Token _82428_error_token) {
	if (_82337_dest_is_ref) {
		if ((!(_82361_dest->_method_equals(_82414_d->_field_kind)))) {
			this->self->_method_push_err(_82428_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_82361_dest->_method_to_str()),jule::Any(_82414_d->_field_kind->_method_to_str())}));
		}
	} else {
		jule::Ptr<_2200223c9_AssignTypeChecker> _83021_atc = jule::new_struct<_2200223c9_AssignTypeChecker>(new( std::nothrow ) _2200223c9_AssignTypeChecker(this->self,_82361_dest,_82414_d,_82428_error_token));
		jule::Bool _83617_ok = _83021_atc->_method_check();
		if ((!(_83617_ok))) {
			return;
		}
	}
	if ((!(_82414_d->_method_is_const())) || (_82361_dest->_method_prim() == nullptr)) {
		return;
	}
	jule::Str _84617_kind = _82361_dest->_method_prim()->_field_kind;
	{
		if (!((_206ec1e1e_is_sig_int(_84617_kind)))) { goto _case_end_4680576048; }
		_case_begin_4680576048:;
		{
			_82414_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_82414_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4680575872;
		_case_end_4680576048:;
		if (!((_206ec1e1e_is_unsig_int(_84617_kind)))) { goto _case_end_4680576160; }
		_case_begin_4680576160:;
		{
			_82414_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_82414_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4680575872;
		_case_end_4680576160:;
		if (!((_206ec1e1e_is_float(_84617_kind)))) { goto _case_end_4680576272; }
		_case_begin_4680576272:;
		{
			_82414_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_82414_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4680575872;
		_case_end_4680576272:;
		_match_end_4680575872:;
	}
}



inline jule::Bool _21eee051d_Sema::_method_check_type_compatibility(jule::Ptr<_2300b54e5_TypeKind>& _85549_dest,jule::Ptr<_2300b54e5_TypeKind>& _85614_src,_2220dce43_Token& _85635_error_token) {
	if (_85614_src == nullptr) {
		this->self->_method_push_err(_85635_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_85549_dest->_method_to_str()),jule::Any(_85614_src->_method_to_str())}));
		return false;
	}
	if (_85614_src->_method_tup() != nullptr) {
		this->self->_method_push_err(_85635_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_85549_dest->_method_to_str()),jule::Any(_85614_src->_method_to_str())}));
		return false;
	}
	_2200223c9_TypeCompatibilityChecker _87017_tcc = _2200223c9_TypeCompatibilityChecker(this->self,_85549_dest,_85614_src,_85635_error_token);
	if (_87017_tcc._method_check()) {
		return true;
	}
	this->self->_method_push_err(_85635_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_85549_dest->_method_to_str()),jule::Any(_85614_src->_method_to_str())}));
	return false;
}



inline jule::Ptr<_2300b54e5_TypeKind> _21eee051d_Sema::_method_build_non_generic_type_kind(jule::Ptr<_221d8b043_TypeDecl>& _89152_ast,jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>& _89214_generics) {
	jule::Ptr<_2300b54e5_TypeChecker> _89317_tc = jule::new_struct<_2300b54e5_TypeChecker>(new( std::nothrow ) _2300b54e5_TypeChecker(this->self,this->self,jule::Ptr<_2300b54e5_Referencer>(),_2220dce43_Token(),_89214_generics,jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>(),jule::Bool()));
	return _89317_tc->_method_check_decl(_89152_ast);
}



inline void _21eee051d_Sema::_method_build_fn_non_generic_type_kinds(jule::Ptr<_222edb48e_FnIns>& _90156_f) {
	jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> _90217_generics = nullptr;
	if (_90156_f->_field_decl->_method_is_method()) {
		_90217_generics=jule::append(_90156_f->_field_decl->_field_generics,_90156_f->_field_decl->_field_owner->_field_generics);
	} else {
		_90217_generics=_90156_f->_field_decl->_field_generics;
	}
	{
		auto &expr = _90156_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4680606944:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_ParamIns> _21eee051d_p = *it;
			{
				if ((!(_21eee051d_p->_field_decl->_method_is_self()))) {
					_21eee051d_p->_field_kind=this->self->_method_build_non_generic_type_kind(_21eee051d_p->_field_decl->_field_kind->_field_decl,_90217_generics);
				}
			}
			_iter_next_4680606944:;
			++it;
			goto _iter_begin_4680606944;
		}
		_iter_end_4680606944:;
	}
	if ((!(_90156_f->_field_decl->_method_is_void()))) {
		_90156_f->_field_result=this->self->_method_build_non_generic_type_kind(_90156_f->_field_decl->_field_result->_field_kind->_field_decl,_90217_generics);
	}
}



inline jule::Ptr<_222edb48e_FnIns> _21eee051d_Sema::_method_get_trait_check_fn_kind(jule::Ptr<_222edb48e_Fn>& _91948_f) {
	jule::Ptr<_222edb48e_FnIns> _92017_ins = _91948_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_92017_ins);
	return _92017_ins;
}



inline jule::Bool _21eee051d_Sema::_method_reload_fn_ins_types(jule::Ptr<_222edb48e_FnIns>& _92544_f) {
	jule::Bool _92557_ok = jule::Bool();
	if (_92544_f->_method_is_builtin() || _92544_f->_method_is_anon()) {
		_92557_ok = true;
		return _92557_ok;
	}
	jule::Ptr<_21eee051d_Sema> _93017_sema = _92544_f->_field_decl->_field_sema;
	jule::Ptr<_2067a6b66_SymbolTable> _93217_old = _92544_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_92544_f->_field_decl->_field_sema->_method_set_current_file(_93217_old);
	});
	jule::Ptr<_2067a6b66_SymbolTable> _93417_file = _21eee051d_find_file(_92544_f->_field_decl->_field_sema->_field_files,_92544_f->_field_decl->_field_token._field_file);
	if (_93417_file != nullptr) {
		_92544_f->_field_decl->_field_sema->_method_set_current_file(_93417_file);
	}
	jule::I64 _93917_size = _92544_f->_field_generics.len();
	if ((_92544_f->_field_decl != nullptr) && (_92544_f->_field_decl->_field_owner != nullptr)) {
		_93917_size+=static_cast<jule::I64>(_92544_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>> _94417_generics = jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>::alloc(0LL,_93917_size);
	{
		auto &expr = _92544_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4680638384:;
		if (it != expr.end()) {
			jule::Int _21eee051d_i = it - expr.begin();
			jule::Ptr<_2300b54e5_TypeKind> _21eee051d_g = *it;
			{
				_94417_generics.push(jule::new_struct<_2300b54e5_TypeAlias>(new( std::nothrow ) _2300b54e5_TypeAlias(jule::Ptr<_221d8b043_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_2220dce43_Token(),_92544_f->_field_decl->_field_generics[_21eee051d_i]->_field_ident,jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),_21eee051d_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_4680638384:;
			++it;
			_21eee051d_i++;
			goto _iter_begin_4680638384;
		}
		_iter_end_4680638384:;
	}
	if ((_92544_f->_field_decl != nullptr) && (_92544_f->_field_decl->_field_owner != nullptr)) {
		jule::Ptr<_2398d04dc_StructIns> _95621_owner = _92544_f->_field_owner;
		{
			auto &expr = _95621_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_4680641712:;
			if (it != expr.end()) {
				jule::Int _21eee051d_i = it - expr.begin();
				jule::Ptr<_2300b54e5_TypeKind> _21eee051d_g = *it;
				{
					_94417_generics.push(jule::new_struct<_2300b54e5_TypeAlias>(new( std::nothrow ) _2300b54e5_TypeAlias(jule::Ptr<_221d8b043_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_2220dce43_Token(),_95621_owner->_field_decl->_field_generics[_21eee051d_i]->_field_ident,jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),_21eee051d_g)),jule::Str(),jule::Slice<jule::Any>())));
				}
				_iter_next_4680641712:;
				++it;
				_21eee051d_i++;
				goto _iter_begin_4680641712;
			}
			_iter_end_4680641712:;
		}
	}
	_92557_ok=true;
	{
		auto &expr = _92544_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4680640096:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_ParamIns> _21eee051d_p = *it;
			{
				if ((!(_21eee051d_p->_field_decl->_method_is_self()))) {
					_21eee051d_p->_field_kind=_93017_sema->_method_build_type_with_generics(_21eee051d_p->_field_decl->_field_kind->_field_decl,_94417_generics);
					if (_21eee051d_p->_field_kind != nullptr) {
						_21eee051d_p->_field_kind->_field_variadic=_21eee051d_p->_field_decl->_field_variadic;
						if (_21eee051d_p->_field_decl->_field_reference && (!(_2300b54e5_is_valid_for_ref(_21eee051d_p->_field_kind)))) {
							this->self->_method_push_err(_21eee051d_p->_field_decl->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_21eee051d_p->_field_kind->_method_to_str())}));
						}
					} else {
						_92557_ok=false;
					}
				}
			}
			_iter_next_4680640096:;
			++it;
			goto _iter_begin_4680640096;
		}
		_iter_end_4680640096:;
	}
	if ((!(_92544_f->_field_decl->_method_is_void()))) {
		_92544_f->_field_result=_93017_sema->_method_build_type_with_generics(_92544_f->_field_decl->_field_result->_field_kind->_field_decl,_94417_generics);
		_92557_ok=(_92544_f->_field_result != nullptr) && _92557_ok;
	}
	if (_93017_sema != this->self) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_93017_sema->_field_errors);
		_93017_sema->_field_errors=nullptr;
	}
	return _92557_ok;
}



inline void _21eee051d_Sema::_method_check_ref_validity_for_init_expr(jule::Bool _99552_left_mut,jule::Ptr<_20683ebaa_Data>& _99569_d,_2220dce43_Token& _99584_error_token) {
	{
		auto &_match_expr{ _99569_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4680668000; }
		goto _match_end_4680667232;
		_case_end_4680668000:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_TraitSubIdentExprModel>>())) { goto _case_end_4680667600; }
		_case_begin_4680667600:;
		{
			jule::Ptr<_21eedb492_TraitSubIdentExprModel> _100117_model = _99569_d->_field_model.operator jule::Ptr<_21eedb492_TraitSubIdentExprModel>();
			if ((!(_21eee051d_is_valid_model_for_ref(_100117_model->_field_expr)))) {
				this->self->_method_push_err(_99584_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_100117_model->_field_ident)}));
			}
		}
		goto _match_end_4680667232;
		_case_end_4680667600:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_StructSubIdentExprModel>>())) { goto _case_end_4680667696; }
		_case_begin_4680667696:;
		{
			jule::Ptr<_21eedb492_StructSubIdentExprModel> _100717_model = _99569_d->_field_model.operator jule::Ptr<_21eedb492_StructSubIdentExprModel>();
			if ((!(_21eee051d_is_valid_model_for_ref(_100717_model->_field_expr)))) {
				this->self->_method_push_err(_99584_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_100717_model->_field_field->_field_decl->_field_ident)}));
			}
		}
		goto _match_end_4680667232;
		_case_end_4680667696:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_21eedb492_CommonSubIdentExprModel>>())) { goto _case_end_4680667792; }
		_case_begin_4680667792:;
		{
			this->self->_method_push_err(_99584_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
		}
		goto _match_end_4680667232;
		_case_end_4680667792:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_UnaryExprModel>>())) { goto _case_end_4680667888; }
		_case_begin_4680667888:;
		{
			jule::Ptr<_21eedb492_UnaryExprModel> _101717_unary = _99569_d->_field_model.operator jule::Ptr<_21eedb492_UnaryExprModel>();
			if (_101717_unary->_field_op == jule::Str("*", 1)) {
				goto _match_end_4680667232;
			}
			goto _case_begin_4680666768;
		}
		goto _match_end_4680667232;
		_case_end_4680667888:;
		_case_begin_4680666768:;
		{
			this->self->_method_push_err(_99584_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
		}
		goto _match_end_4680667232;
		_case_end_4680666768:;
		_match_end_4680667232:;
	}
	if (_99552_left_mut && (!(_99569_d->_field_mutable))) {
		this->self->_method_push_err(_99584_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
	}
}



inline void _21eee051d_Sema::_method_check_validity_for_init_expr(jule::Bool _103348_left_mut,jule::Bool _103364_left_ref,jule::Ptr<_2300b54e5_TypeKind>& _103410_left_kind,jule::Ptr<_20683ebaa_Data>& _103437_d,_2220dce43_Token& _103452_error_token) {
	if ((_103348_left_mut && (!(_103437_d->_field_mutable))) && _103437_d->_field_kind->_method_mutable()) {
		this->self->_method_push_err(_103452_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>());
	}
	if (_103364_left_ref) {
		this->self->_method_check_ref_validity_for_init_expr(_103348_left_mut,_103437_d,_103452_error_token);
	}
	jule::Ptr<_2200223c9_AssignTypeChecker> _104217_atc = jule::new_struct<_2200223c9_AssignTypeChecker>(new( std::nothrow ) _2200223c9_AssignTypeChecker(this->self,jule::Ptr<_2300b54e5_TypeKind>(),_103437_d,_103452_error_token));
	_104217_atc->_method_check_validity();
}



inline jule::Bool _21eee051d_Sema::_method_check_type_alias_decl_kind(jule::Ptr<_2300b54e5_TypeAlias>& _105051_ta,jule::Trait<_206c9641e_Lookup> _105071_l) {
	jule::Bool _105084_ok = jule::Bool();
	jule::Ptr<_2067a6b66_SymbolTable> _105117_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_105117_old);
	});
	jule::Ptr<_2067a6b66_SymbolTable> _105317_file = _21eee051d_find_file(this->self->_field_files,_105051_ta->_field_token._field_file);
	if (_105317_file != nullptr) {
		this->self->_method_set_current_file(_105317_file);
	}
	_105084_ok=this->self->_method_check_type_with_refers(_105051_ta->_field_kind,_105071_l,jule::new_struct<_2300b54e5_Referencer>(new( std::nothrow ) _2300b54e5_Referencer(_105051_ta->_field_ident,jule::Any(_105051_ta),(&(_105051_ta->_field_refers)))));
	if ((_105084_ok && (_105051_ta->_field_kind->_field_kind->_method_arr() != nullptr)) && _105051_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_105051_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_105084_ok=false;
	}
	return _105084_ok;
}



inline void _21eee051d_Sema::_method_check_type_alias_decl(jule::Ptr<_2300b54e5_TypeAlias>& _107046_ta,jule::Trait<_206c9641e_Lookup> _107066_l) {
	if (_2220dce43_is_ignore_ident(_107046_ta->_field_ident)) {
		this->self->_method_push_err(_107046_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	this->self->_method_check_type_alias_decl_kind(_107046_ta,_107066_l);
}



inline void _21eee051d_Sema::_method_check_type_alias_decl_dup(jule::Ptr<_2300b54e5_TypeAlias>& _107850_ta) {
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_107850_ta),_107850_ta->_field_ident,_107850_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_107850_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_107850_ta->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_type_alias_decl_kind(_107850_ta,this->self);
}



inline jule::Bool _21eee051d_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _108744_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4680725376:;
		if (it != expr.end()) {
			jule::Ptr<_2300b54e5_TypeAlias> _21eee051d_ta = *it;
			{
				this->self->_method_check_type_alias_decl_dup(_21eee051d_ta);
				if (this->self->_field_errors.len() > 0LL) {
					_108744_ok = false;
					return _108744_ok;
				}
			}
			_iter_next_4680725376:;
			++it;
			goto _iter_begin_4680725376;
		}
		_iter_end_4680725376:;
	}
	_108744_ok = true;
	return _108744_ok;
}



inline void _21eee051d_Sema::_method_check_enum_items_dup(jule::Ptr<_23001604a_Enum> _109939_e) {
	{
		auto &expr = _109939_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4680730928:;
		if (it != expr.end()) {
			jule::Ptr<_23001604a_EnumItem> &_21eee051d_item = *it;
			{
				if (_2220dce43_is_ignore_ident(_21eee051d_item->_field_ident)) {
					(*this)._method_push_err(_21eee051d_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _109939_e->_field_items;
						auto it = expr.begin();
						_iter_begin_4680735664:;
						if (it != expr.end()) {
							jule::Ptr<_23001604a_EnumItem> &_21eee051d_citem = *it;
							{
								if (_21eee051d_item == _21eee051d_citem) {
									goto _iter_end_4680735664;
								} else if (_21eee051d_item->_field_ident == _21eee051d_citem->_field_ident) {
									(*this)._method_push_err(_21eee051d_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_21eee051d_item->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_4680735664;
								}
							}
							_iter_next_4680735664:;
							++it;
							goto _iter_begin_4680735664;
						}
						_iter_end_4680735664:;
					}
				}
			}
			_iter_next_4680730928:;
			++it;
			goto _iter_begin_4680730928;
		}
		_iter_end_4680730928:;
	}
}



inline void _21eee051d_Sema::_method_check_enum_items_str(jule::Ptr<_23001604a_Enum>& _111745_e) {
	{
		auto &expr = _111745_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4680736576:;
		if (it != expr.end()) {
			jule::Ptr<_23001604a_EnumItem> _21eee051d_item = *it;
			{
				if (_21eee051d_item->_method_auto_expr()) {
					_21eee051d_item->_field_value=jule::new_struct<_20683ebaa_Value>(new( std::nothrow ) _20683ebaa_Value(jule::Ptr<_221d8b043_Expr>(),jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::Ptr<_2300b54e5_TypeKind>(),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_206e210e3_Const::_static_method_new_str(_21eee051d_item->_field_ident)))));
					_21eee051d_item->_field_value->_field_data->_field_model=jule::Any(_21eee051d_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ptr<_20683ebaa_Data> _112725_d = this->self->_method_eval(this->self)->_method_eval_expr(_21eee051d_item->_field_value->_field_expr);
					if (_112725_d == nullptr) {
						goto _iter_next_4680736576;
					}
					if ((!(_112725_d->_method_is_const()))) {
						this->self->_method_push_err(_21eee051d_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					this->self->_method_check_assign_type(false,_111745_e->_field_kind->_field_kind,_112725_d,_21eee051d_item->_field_token);
					_21eee051d_item->_field_value->_field_data=_112725_d;
				}
			}
			_iter_next_4680736576:;
			++it;
			goto _iter_begin_4680736576;
		}
		_iter_end_4680736576:;
	}
}



inline void _21eee051d_Sema::_method_check_enum_items_int(jule::Ptr<_23001604a_Enum>& _114245_e) {
	jule::U64 _114317_max = static_cast<jule::U64>(_206e286b1_max(_114245_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto &expr = _114245_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4680759040:;
		if (it != expr.end()) {
			jule::Int _21eee051d_i = it - expr.begin();
			jule::Ptr<_23001604a_EnumItem> _21eee051d_item = *it;
			{
				if (_114317_max == 0LL) {
					this->self->_method_push_err(_21eee051d_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_114317_max)--;
				}
				if (_21eee051d_item->_method_auto_expr()) {
					_21eee051d_item->_field_value=jule::new_struct<_20683ebaa_Value>(new( std::nothrow ) _20683ebaa_Value(jule::Ptr<_221d8b043_Expr>(),jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::Ptr<_2300b54e5_TypeKind>(),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_206e210e3_Const::_static_method_new_u64(static_cast<jule::U64>(_114317_max - (_114317_max - static_cast<jule::U64>(_21eee051d_i))))))));
					_21eee051d_item->_field_value->_field_data->_field_model=jule::Any(_21eee051d_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ptr<_20683ebaa_Data> _115925_d = this->self->_method_eval(this->self)->_method_eval_expr(_21eee051d_item->_field_value->_field_expr);
					if (_115925_d == nullptr) {
						goto _iter_next_4680759040;
					}
					if ((!(_115925_d->_method_is_const()))) {
						this->self->_method_push_err(_21eee051d_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					this->self->_method_check_assign_type(false,_114245_e->_field_kind->_field_kind,_115925_d,_21eee051d_item->_field_token);
					_21eee051d_item->_field_value->_field_data=_115925_d;
				}
			}
			_iter_next_4680759040:;
			++it;
			_21eee051d_i++;
			goto _iter_begin_4680759040;
		}
		_iter_end_4680759040:;
	}
}



inline void _21eee051d_Sema::_method_check_enum_decl(jule::Ptr<_23001604a_Enum>& _117440_e) {
	if (_2220dce43_is_ignore_ident(_117440_e->_field_ident)) {
		this->self->_method_push_err(_117440_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_117440_e),_117440_e->_field_ident,false)) {
		this->self->_method_push_err(_117440_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_117440_e->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_117440_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_117440_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_117440_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_117440_e);
	if (_117440_e->_field_kind != nullptr) {
		if ((!(this->self->_method_check_type(_117440_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_117440_e->_field_kind=jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ptr<_2300b54e5_Prim> _120117_t = _117440_e->_field_kind->_field_kind->_method_prim();
	if (_120117_t == nullptr) {
		this->self->_method_push_err(_117440_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>());
		return;
	}
	{
		if (!((_120117_t->_method_is_str()))) { goto _case_end_4680795184; }
		_case_begin_4680795184:;
		{
			this->self->_method_check_enum_items_str(_117440_e);
		}
		goto _match_end_4680792288;
		_case_end_4680795184:;
		if (!((_206ec1e1e_is_int(_120117_t->_method_to_str())))) { goto _case_end_4680794736; }
		_case_begin_4680794736:;
		{
			this->self->_method_check_enum_items_int(_117440_e);
		}
		goto _match_end_4680792288;
		_case_end_4680794736:;
		_case_begin_4680787344:;
		{
			this->self->_method_push_err(_117440_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>());
		}
		goto _match_end_4680792288;
		_case_end_4680787344:;
		_match_end_4680792288:;
	}
}



inline jule::Bool _21eee051d_Sema::_method_check_enum_decls(void) {
	jule::Bool _122138_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_enums;
		auto it = expr.begin();
		_iter_begin_4680801552:;
		if (it != expr.end()) {
			jule::Ptr<_23001604a_Enum> _21eee051d_e = *it;
			{
				this->self->_method_check_enum_decl(_21eee051d_e);
				if (this->self->_field_errors.len() > 0LL) {
					_122138_ok = false;
					return _122138_ok;
				}
			}
			_iter_next_4680801552:;
			++it;
			goto _iter_begin_4680801552;
		}
		_iter_end_4680801552:;
	}
	_122138_ok = true;
	return _122138_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_decl_generics(jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>& _123339_generics) {
	jule::Bool _123367_ok = jule::Bool();
	_123367_ok=true;
	{
		auto &expr = _123339_generics;
		auto it = expr.begin();
		_iter_begin_4680807664:;
		if (it != expr.end()) {
			jule::Int _21eee051d_i = it - expr.begin();
			jule::Ptr<_221d8b043_GenericDecl> &_21eee051d_g = *it;
			{
				if (_2220dce43_is_ignore_ident(_21eee051d_g->_field_ident)) {
					(*this)._method_push_err(_21eee051d_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_123367_ok=false;
					goto _iter_next_4680807664;
				}
				_julec_label_duplication_lookup:;
				{
					auto &expr = _123339_generics;
					auto it = expr.begin();
					_iter_begin_4680812944:;
					if (it != expr.end()) {
						jule::Int _21eee051d_j = it - expr.begin();
						jule::Ptr<_221d8b043_GenericDecl> &_21eee051d_ct = *it;
						{
							{
								if (!((_21eee051d_j >= _21eee051d_i))) { goto _case_end_4680815296; }
								_case_begin_4680815296:;
								{
									goto _iter_end_4680812944;
								}
								goto _match_end_4680815072;
								_case_end_4680815296:;
								if (!((_21eee051d_g->_field_ident == _21eee051d_ct->_field_ident))) { goto _case_end_4680815408; }
								_case_begin_4680815408:;
								{
									(*this)._method_push_err(_21eee051d_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_21eee051d_g->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									_123367_ok=false;
									goto _iter_end_4680812944;
								}
								goto _match_end_4680815072;
								_case_end_4680815408:;
								_match_end_4680815072:;
							}
						}
						_iter_next_4680812944:;
						++it;
						_21eee051d_j++;
						goto _iter_begin_4680812944;
					}
					_iter_end_4680812944:;
				}
			}
			_iter_next_4680807664:;
			++it;
			_21eee051d_i++;
			goto _iter_begin_4680807664;
		}
		_iter_end_4680807664:;
	}
	return _123367_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_fn_decl_params_dup(jule::Ptr<_222edb48e_Fn>& _126144_f) {
	jule::Bool _126154_ok = jule::Bool();
	_126154_ok=true;
	_julec_label_check:;
	{
		auto &expr = _126144_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4680825104:;
		if (it != expr.end()) {
			jule::Int _21eee051d_i = it - expr.begin();
			jule::Ptr<_222edb48e_Param> &_21eee051d_p = *it;
			{
				{
					auto &expr = _126144_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_4680827440:;
					if (it != expr.end()) {
						jule::Ptr<_221d8b043_GenericDecl> &_21eee051d_g = *it;
						{
							if (_21eee051d_p->_field_ident == _21eee051d_g->_field_ident) {
								_126154_ok=false;
								(*this)._method_push_err(_21eee051d_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_21eee051d_p->_field_ident)}));
								(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_4680825104;
							}
						}
						_iter_next_4680827440:;
						++it;
						goto _iter_begin_4680827440;
					}
					_iter_end_4680827440:;
				}
				_julec_label_params_lookup:;
				{
					auto &expr = _126144_f->_field_params;
					auto it = expr.begin();
					_iter_begin_4680827888:;
					if (it != expr.end()) {
						jule::Int _21eee051d_j = it - expr.begin();
						jule::Ptr<_222edb48e_Param> &_21eee051d_jp = *it;
						{
							{
								if (!((_21eee051d_j >= _21eee051d_i))) { goto _case_end_4680835104; }
								_case_begin_4680835104:;
								{
									goto _iter_end_4680827888;
								}
								goto _match_end_4680834864;
								_case_end_4680835104:;
								if (!((_2220dce43_is_anon_ident(_21eee051d_p->_field_ident) || _2220dce43_is_anon_ident(_21eee051d_jp->_field_ident)))) { goto _case_end_4680835216; }
								_case_begin_4680835216:;
								{
									goto _iter_end_4680827888;
								}
								goto _match_end_4680834864;
								_case_end_4680835216:;
								if (!((_21eee051d_p->_field_ident == _21eee051d_jp->_field_ident))) { goto _case_end_4680835328; }
								_case_begin_4680835328:;
								{
									_126154_ok=false;
									(*this)._method_push_err(_21eee051d_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_21eee051d_p->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_next_4680825104;
								}
								goto _match_end_4680834864;
								_case_end_4680835328:;
								_match_end_4680834864:;
							}
						}
						_iter_next_4680827888:;
						++it;
						_21eee051d_j++;
						goto _iter_begin_4680827888;
					}
					_iter_end_4680827888:;
				}
			}
			_iter_next_4680825104:;
			++it;
			_21eee051d_i++;
			goto _iter_begin_4680825104;
		}
		_iter_end_4680825104:;
	}
	return _126154_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_fn_decl_result_dup(jule::Ptr<_222edb48e_Fn>& _129744_f) {
	jule::Bool _129754_ok = jule::Bool();
	_129754_ok=true;
	if (_129744_f->_method_is_void()) {
		return _129754_ok;
	}
	{
		auto &expr = _129744_f->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4689252064:;
		if (it != expr.end()) {
			jule::Int _21eee051d_i = it - expr.begin();
			_2220dce43_Token &_21eee051d_v = *it;
			{
				if (_2220dce43_is_ignore_ident(_21eee051d_v._field_kind)) {
					goto _iter_next_4689252064;
				}
				{
					auto &expr = _129744_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_4689255392:;
					if (it != expr.end()) {
						jule::Ptr<_221d8b043_GenericDecl> &_21eee051d_g = *it;
						{
							if (_21eee051d_v._field_kind == _21eee051d_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4689255392:;
						++it;
						goto _iter_begin_4689255392;
					}
					_iter_end_4689255392:;
				}
				{
					auto &expr = _129744_f->_field_params;
					auto it = expr.begin();
					_iter_begin_4689258752:;
					if (it != expr.end()) {
						jule::Ptr<_222edb48e_Param> &_21eee051d_p = *it;
						{
							if (_21eee051d_v._field_kind == _21eee051d_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4689258752:;
						++it;
						goto _iter_begin_4689258752;
					}
					_iter_end_4689258752:;
				}
				_julec_label_itself_lookup:;
				{
					auto &expr = _129744_f->_field_result->_field_idents;
					auto it = expr.begin();
					_iter_begin_4689262832:;
					if (it != expr.end()) {
						jule::Int _21eee051d_j = it - expr.begin();
						_2220dce43_Token &_21eee051d_jv = *it;
						{
							{
								if (!((_21eee051d_j >= _21eee051d_i))) { goto _case_end_4689265104; }
								_case_begin_4689265104:;
								{
									goto _iter_end_4689262832;
								}
								goto _match_end_4689264880;
								_case_end_4689265104:;
								if (!((_21eee051d_jv._field_kind == _21eee051d_v._field_kind))) { goto _case_end_4689265216; }
								_case_begin_4689265216:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_4689264880;
								_case_end_4689265216:;
								_match_end_4689264880:;
							}
						}
						_iter_next_4689262832:;
						++it;
						_21eee051d_j++;
						goto _iter_begin_4689262832;
					}
					_iter_end_4689262832:;
				}
				goto _iter_next_4689252064;
				_julec_label_exist:;
				(*this)._method_push_err(_21eee051d_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_21eee051d_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_129754_ok=false;
			}
			_iter_next_4689252064:;
			++it;
			_21eee051d_i++;
			goto _iter_begin_4689252064;
		}
		_iter_end_4689252064:;
	}
	return _129754_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_fn_decl_types(jule::Ptr<_222edb48e_Fn>& _134644_f) {
	jule::Bool _134654_ok = jule::Bool();
	_134654_ok=true;
	jule::Slice<jule::Ptr<_221d8b043_GenericDecl>> _134917_generics = _134644_f->_field_generics;
	if (_134644_f->_field_owner != nullptr) {
		_134917_generics=jule::append(_134917_generics,_134644_f->_field_owner->_field_generics);
	}
	{
		auto &expr = _134644_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4689278896:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Param> _21eee051d_p = *it;
			{
				if ((!(_21eee051d_p->_method_is_self()))) {
					jule::Ptr<_2300b54e5_TypeKind> _135625_kind = this->self->_method_build_non_generic_type_kind(_21eee051d_p->_field_kind->_field_decl,_134917_generics);
					_134654_ok=(_135625_kind != nullptr) && _134654_ok;
					_21eee051d_p->_field_kind->_field_kind=_135625_kind;
				}
			}
			_iter_next_4689278896:;
			++it;
			goto _iter_begin_4689278896;
		}
		_iter_end_4689278896:;
	}
	if ((!(_134644_f->_method_is_void()))) {
		jule::Ptr<_2300b54e5_TypeKind> _136321_kind = this->self->_method_build_non_generic_type_kind(_134644_f->_field_result->_field_kind->_field_decl,_134917_generics);
		_134654_ok=(_136321_kind != nullptr) && _134654_ok;
		_134644_f->_field_result->_field_kind->_field_kind=_136321_kind;
	}
	return _134654_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_fn_decl_prototype(jule::Ptr<_222edb48e_Fn>& _137348_f) {
	jule::Bool _137358_ok = jule::Bool();
	if (_137348_f->_field_exceptional && _137348_f->_field_cpp_linked) {
		this->self->_method_push_err(_137348_f->_field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		_137358_ok = false;
		return _137358_ok;
	}
	{
		if (!(((!(this->self->_method_check_decl_generics(_137348_f->_field_generics)))))) { goto _case_end_4678779056; }
		_case_begin_4678779056:;
		{
			_137358_ok = false;
			return _137358_ok;
		}
		goto _match_end_4678778464;
		_case_end_4678779056:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_137348_f)))))) { goto _case_end_4677682560; }
		_case_begin_4677682560:;
		{
			_137358_ok = false;
			return _137358_ok;
		}
		goto _match_end_4678778464;
		_case_end_4677682560:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_137348_f)))))) { goto _case_end_4677682656; }
		_case_begin_4677682656:;
		{
			_137358_ok = false;
			return _137358_ok;
		}
		goto _match_end_4678778464;
		_case_end_4677682656:;
		if (!(((!(this->self->_method_check_fn_decl_types(_137348_f)))))) { goto _case_end_4677682752; }
		_case_begin_4677682752:;
		{
			_137358_ok = false;
			return _137358_ok;
		}
		goto _match_end_4678778464;
		_case_end_4677682752:;
		_case_begin_4678778736:;
		{
			_137358_ok = true;
			return _137358_ok;
		}
		goto _match_end_4678778464;
		_case_end_4678778736:;
		_match_end_4678778464:;
	}
}



inline void _21eee051d_Sema::_method_check_trait_decl_method(jule::Ptr<_222edb48e_Fn>& _138848_f) {
	if (_2220dce43_is_ignore_ident(_138848_f->_field_ident)) {
		this->self->_method_push_err(_138848_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	this->self->_method_check_fn_decl_prototype(_138848_f);
	_138848_f->_field_sema=this->self;
}



inline void _21eee051d_Sema::_method_check_trait_decl_methods(jule::Ptr<_2300167cb_Trait>& _139749_t) {
	{
		auto &expr = _139749_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4678793200:;
		if (it != expr.end()) {
			jule::Int _21eee051d_i = it - expr.begin();
			jule::Ptr<_222edb48e_Fn> _21eee051d_f = *it;
			{
				this->self->_method_check_trait_decl_method(_21eee051d_f);
				_139749_t->_field_mutable=_139749_t->_field_mutable || _21eee051d_f->_field_params[0LL]->_field_mutable;
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _139749_t->_field_methods;
					auto it = expr.begin();
					_iter_begin_4678799200:;
					if (it != expr.end()) {
						jule::Int _21eee051d_j = it - expr.begin();
						jule::Ptr<_222edb48e_Fn> &_21eee051d_jf = *it;
						{
							{
								if (!((_21eee051d_j >= _21eee051d_i))) { goto _case_end_4678801696; }
								_case_begin_4678801696:;
								{
									goto _iter_end_4678799200;
								}
								goto _match_end_4678801472;
								_case_end_4678801696:;
								if (!((_21eee051d_f->_field_ident == _21eee051d_jf->_field_ident))) { goto _case_end_4678801808; }
								_case_begin_4678801808:;
								{
									this->self->_method_push_err(_21eee051d_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_21eee051d_f->_field_ident)}));
									this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_4678799200;
								}
								goto _match_end_4678801472;
								_case_end_4678801808:;
								_match_end_4678801472:;
							}
						}
						_iter_next_4678799200:;
						++it;
						_21eee051d_j++;
						goto _iter_begin_4678799200;
					}
					_iter_end_4678799200:;
				}
			}
			_iter_next_4678793200:;
			++it;
			_21eee051d_i++;
			goto _iter_begin_4678793200;
		}
		_iter_end_4678793200:;
	}
}



inline void _21eee051d_Sema::_method_check_trait_decl(jule::Ptr<_2300167cb_Trait>& _142941_t) {
	if (_2220dce43_is_ignore_ident(_142941_t->_field_ident)) {
		this->self->_method_push_err(_142941_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_142941_t),_142941_t->_field_ident,false)) {
		this->self->_method_push_err(_142941_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_142941_t->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_trait_decl_methods(_142941_t);
}



inline jule::Bool _21eee051d_Sema::_method_check_trait_decls(void) {
	jule::Bool _144139_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_traits;
		auto it = expr.begin();
		_iter_begin_4678818944:;
		if (it != expr.end()) {
			jule::Ptr<_2300167cb_Trait> _21eee051d_t = *it;
			{
				this->self->_method_check_trait_decl(_21eee051d_t);
				if (this->self->_field_errors.len() > 0LL) {
					_144139_ok = false;
					return _144139_ok;
				}
			}
			_iter_next_4678818944:;
			++it;
			goto _iter_begin_4678818944;
		}
		_iter_end_4678818944:;
	}
	_144139_ok = true;
	return _144139_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_trait_impl_methods(jule::Ptr<_2300167cb_Trait>& _145348_base,jule::Ptr<_230019081_Impl>& _145363_ipl) {
	jule::Bool _145377_ok = jule::Bool();
	_145377_ok=true;
	{
		auto &expr = _145363_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_4678825936:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> &_21eee051d_f = *it;
			{
				if (_145348_base->_method_find_method(_21eee051d_f->_field_ident) == nullptr) {
					(*this)._method_push_err(_21eee051d_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_145348_base->_field_ident),jule::Any(_21eee051d_f->_field_ident)}));
					_145377_ok=false;
				}
			}
			_iter_next_4678825936:;
			++it;
			goto _iter_begin_4678825936;
		}
		_iter_end_4678825936:;
	}
	return _145377_ok;
}



inline jule::Bool _21eee051d_Sema::_method_impl_to_struct(jule::Ptr<_2398d04dc_Struct>& _146439_dest,jule::Ptr<_230019081_Impl>& _146459_ipl) {
	jule::Bool _146473_ok = jule::Bool();
	_146473_ok=true;
	{
		auto &expr = _146459_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_4678834832:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _21eee051d_f = *it;
			{
				if ((_146439_dest->_method_find_method(_21eee051d_f->_field_ident,_21eee051d_f->_field_statically) != nullptr) || (_146439_dest->_method_find_field(_21eee051d_f->_field_ident) != nullptr)) {
					this->self->_method_push_err(_21eee051d_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_146439_dest->_field_ident),jule::Any(_21eee051d_f->_field_ident)}));
					_146473_ok=false;
					goto _iter_next_4678834832;
				}
				if ((_146439_dest->_field_generics.len() > 0LL) && (_21eee051d_f->_field_generics.len() > 0LL)) {
					{
						auto &expr = _21eee051d_f->_field_generics;
						auto it = expr.begin();
						_iter_begin_4678842912:;
						if (it != expr.end()) {
							jule::Ptr<_221d8b043_GenericDecl> &_21eee051d_fg = *it;
							{
								{
									auto &expr = _146439_dest->_field_generics;
									auto it = expr.begin();
									_iter_begin_4678844656:;
									if (it != expr.end()) {
										jule::Ptr<_221d8b043_GenericDecl> &_21eee051d_dg = *it;
										{
											if (_21eee051d_fg->_field_ident == _21eee051d_dg->_field_ident) {
												this->self->_method_push_err(_21eee051d_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_146473_ok=false;
											}
										}
										_iter_next_4678844656:;
										++it;
										goto _iter_begin_4678844656;
									}
									_iter_end_4678844656:;
								}
							}
							_iter_next_4678842912:;
							++it;
							goto _iter_begin_4678842912;
						}
						_iter_end_4678842912:;
					}
				}
				_21eee051d_f->_field_sema=this->self;
				_21eee051d_f->_field_owner=_146439_dest;
				_146439_dest->_field_methods = jule::alloc_for_append(_146439_dest->_field_methods,1);_146439_dest->_field_methods.push(_21eee051d_f);
			}
			_iter_next_4678834832:;
			++it;
			goto _iter_begin_4678834832;
		}
		_iter_end_4678834832:;
	}
	{
		auto &expr = _146459_ipl->_field_statics;
		auto it = expr.begin();
		_iter_begin_4678851360:;
		if (it != expr.end()) {
			jule::Ptr<_2200a2657_Var> _21eee051d_v = *it;
			{
				
				if ((_146439_dest->_method_find_method(_21eee051d_v->_field_ident,true) != nullptr) || (_146439_dest->_method_find_static(_21eee051d_v->_field_ident) != nullptr)) {
					this->self->_method_push_err(_21eee051d_v->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_146439_dest->_field_ident),jule::Any(_21eee051d_v->_field_ident)}));
					_146473_ok=false;
					goto _iter_next_4678851360;
				}
				this->self->_method_check_var_decl(_21eee051d_v,this->self);
				this->self->_method_check_type_var(_21eee051d_v,this->self);
				_146439_dest->_field_statics = jule::alloc_for_append(_146439_dest->_field_statics,1);_146439_dest->_field_statics.push(_21eee051d_v);
			}
			_iter_next_4678851360:;
			++it;
			goto _iter_begin_4678851360;
		}
		_iter_end_4678851360:;
	}
	return _146473_ok;
}



inline void _21eee051d_Sema::_method_impl_trait(jule::Ptr<_230019081_Impl>& _150735_decl) {
	jule::Ptr<_2300167cb_Trait> _150817_base = this->self->_method_find_trait(_150735_decl->_field_base._field_kind);
	if (_150817_base == nullptr) {
		_150817_base=_206d53311_find_builtin_trait(_150735_decl->_field_base._field_kind);
	}
	if (_150817_base == nullptr) {
		this->self->_method_push_err(_150735_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_150735_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ptr<_2398d04dc_Struct> _152117_dest = this->self->_method_find_struct(_150735_decl->_field_dest._field_kind,false);
	if (_152117_dest == nullptr) {
		this->self->_method_push_err(_150735_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_150735_decl->_field_dest._field_kind)}));
		return;
	}
	if (_152117_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_150735_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	_150817_base->_field_implemented = jule::alloc_for_append(_150817_base->_field_implemented,1);_150817_base->_field_implemented.push(_152117_dest);
	_152117_dest->_field_implements = jule::alloc_for_append(_152117_dest->_field_implements,1);_152117_dest->_field_implements.push(_150817_base);
	if (_150735_decl->_field_statics.len() > 0LL) {
		this->self->_method_push_err(_150735_decl->_field_statics[0LL]->_field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	}
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_150817_base,_150735_decl)))))) { goto _case_end_4678879120; }
		_case_begin_4678879120:;
		{
			return;
		}
		goto _match_end_4678875008;
		_case_end_4678879120:;
		if (!(((!(this->self->_method_impl_to_struct(_152117_dest,_150735_decl)))))) { goto _case_end_4678879216; }
		_case_begin_4678879216:;
		{
			return;
		}
		goto _match_end_4678875008;
		_case_end_4678879216:;
		_match_end_4678875008:;
	}
}



inline void _21eee051d_Sema::_method_impl_struct(jule::Ptr<_230019081_Impl>& _154536_decl) {
	
	jule::Ptr<_2398d04dc_Struct> _155017_dest = this->self->_method_find_struct(_154536_decl->_field_dest._field_kind,false);
	if (_155017_dest == nullptr) {
		this->self->_method_push_err(_154536_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_154536_decl->_field_dest._field_kind)}));
		return;
	}
	if (_155017_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_154536_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_155017_dest,_154536_decl)))))) { goto _case_end_4678887120; }
		_case_begin_4678887120:;
		{
			return;
		}
		goto _match_end_4678886976;
		_case_end_4678887120:;
		_match_end_4678886976:;
	}
}



inline void _21eee051d_Sema::_method_impl_impl(jule::Ptr<_230019081_Impl>& _156834_decl) {
	{
		if (!((_156834_decl->_method_is_trait_impl()))) { goto _case_end_4678896848; }
		_case_begin_4678896848:;
		{
			this->self->_method_impl_trait(_156834_decl);
		}
		goto _match_end_4678896624;
		_case_end_4678896848:;
		if (!((_156834_decl->_method_is_struct_impl()))) { goto _case_end_4678896960; }
		_case_begin_4678896960:;
		{
			this->self->_method_impl_struct(_156834_decl);
		}
		goto _match_end_4678896624;
		_case_end_4678896960:;
		_match_end_4678896624:;
	}
}



inline void _21eee051d_Sema::_method_check_var_decl(jule::Ptr<_2200a2657_Var>& _157739_decl,jule::Trait<_206c9641e_Lookup> _157755_l) {
	if (_2220dce43_is_ignore_ident(_157739_decl->_field_ident)) {
		this->self->_method_push_err(_157739_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	if (_157739_decl->_method_is_type_inferred()) {
		if ((!(_157739_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_157739_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>());
		}
	} else {
		this->self->_method_check_type(_157739_decl->_field_kind,_157755_l);
	}
	if (_157739_decl->_field_constant && _157739_decl->_field_reference) {
		this->self->_method_push_err(_157739_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	}
	if ((!(_157739_decl->_method_is_initialized()))) {
		if (_157739_decl->_field_constant) {
			this->self->_method_push_err(_157739_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>());
		}
		if (_157739_decl->_field_statically) {
			this->self->_method_push_err(_157739_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		}
		if (_157739_decl->_field_reference) {
			this->self->_method_push_err(_157739_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		}
	}
}



inline void _21eee051d_Sema::_method_check_global_var_decl(jule::Ptr<_2200a2657_Var>& _161146_decl) {
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_161146_decl),_161146_decl->_field_ident,_161146_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_161146_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_161146_decl->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_161146_decl->_field_cpp_linked && _161146_decl->_field_constant) {
		this->self->_method_push_err(_161146_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>());
	}
	if (((!(_161146_decl->_field_cpp_linked)) && (!(_161146_decl->_field_constant))) && (!(_161146_decl->_field_statically))) {
		this->self->_method_push_err(_161146_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_161146_decl->_field_directives,jule::Any(_161146_decl));
	this->self->_method_check_var_decl(_161146_decl,this->self);
}



inline jule::Bool _21eee051d_Sema::_method_check_global_decls(void) {
	jule::Bool _163040_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_4678934928:;
		if (it != expr.end()) {
			jule::Ptr<_2200a2657_Var> _21eee051d_decl = *it;
			{
				this->self->_method_check_global_var_decl(_21eee051d_decl);
				if (this->self->_field_errors.len() > 0LL) {
					_163040_ok = false;
					return _163040_ok;
				}
			}
			_iter_next_4678934928:;
			++it;
			goto _iter_begin_4678934928;
		}
		_iter_end_4678934928:;
	}
	_163040_ok = true;
	return _163040_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_struct_trait_impl(jule::Ptr<_2398d04dc_Struct>& _164248_strct,jule::Ptr<_2300167cb_Trait>& _164269_trt) {
	jule::Bool _164284_ok = jule::Bool();
	{
		auto &expr = _164269_trt->_field_methods;
		auto it = expr.begin();
		_iter_begin_4678942288:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _21eee051d_tf = *it;
			{
				jule::Bool _164421_exist = false;
				jule::Ptr<_222edb48e_Fn> _164521_sf = _164248_strct->_method_find_method(_21eee051d_tf->_field_ident,_21eee051d_tf->_field_statically);
				jule::Ptr<_222edb48e_FnIns> _164617_tf_k = this->self->_method_get_trait_check_fn_kind(_21eee051d_tf);
				if (_164521_sf != nullptr) {
					jule::Ptr<_222edb48e_FnIns> _164825_sf_k = this->self->_method_get_trait_check_fn_kind(_164521_sf);
					_164421_exist=((_164617_tf_k->_field_decl->_field_public == _164825_sf_k->_field_decl->_field_public) && (_164617_tf_k->_field_decl->_field_ident == _164825_sf_k->_field_decl->_field_ident)) && _164617_tf_k->_method_equals(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_164825_sf_k)));
				}
				if ((!(_164421_exist))) {
					
					jule::Str _165725_s = _164617_tf_k->_method_get_kind_str(true);
					if (_21eee051d_tf->_field_public) {
						_165725_s=jule::Str("pub ", 4) + _165725_s;
					}
					this->self->_method_push_err(_164248_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_164269_trt->_field_ident),jule::Any(_165725_s)}));
					_164284_ok=false;
				}
			}
			_iter_next_4678942288:;
			++it;
			goto _iter_begin_4678942288;
		}
		_iter_end_4678942288:;
	}
	return _164284_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_struct_impls(jule::Ptr<_2398d04dc_Struct>& _166843_s) {
	jule::Bool _166857_ok = jule::Bool();
	_166857_ok=true;
	{
		auto &expr = _166843_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_4678960192:;
		if (it != expr.end()) {
			jule::Ptr<_2300167cb_Trait> _21eee051d_trt = *it;
			{
				_166857_ok=this->self->_method_check_struct_trait_impl(_166843_s,_21eee051d_trt) && _166857_ok;
			}
			_iter_next_4678960192:;
			++it;
			goto _iter_begin_4678960192;
		}
		_iter_end_4678960192:;
	}
	return _166857_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_struct_fields(jule::Ptr<_2398d04dc_Struct>& _167644_st) {
	jule::Bool _167659_ok = jule::Bool();
	_167659_ok=true;
	jule::Ptr<_2300b54e5_TypeChecker> _167917_tc = jule::new_struct<_2300b54e5_TypeChecker>(new( std::nothrow ) _2300b54e5_TypeChecker(this->self,this->self,jule::new_struct<_2300b54e5_Referencer>(new( std::nothrow ) _2300b54e5_Referencer(_167644_st->_field_ident,jule::Any(_167644_st),nullptr)),_2220dce43_Token(),_167644_st->_field_generics,jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>(),jule::Bool()));
	jule::I64 _168913_n = _167644_st->_field_instances.len();
	{
		auto &expr = _167644_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_4678969504:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Field> _21eee051d_f = *it;
			{
				_21eee051d_f->_field_owner=_167644_st;
				_21eee051d_f->_field_kind->_field_kind=_167917_tc->_method_check_decl(_21eee051d_f->_field_kind->_field_decl);
				_167659_ok=(_21eee051d_f->_field_kind->_field_kind != nullptr) && _167659_ok;
				{
					auto &expr = _167644_st->_field_fields;
					auto it = expr.begin();
					_iter_begin_4678974064:;
					if (it != expr.end()) {
						jule::Ptr<_2398d04dc_Field> &_21eee051d_cf = *it;
						{
							if (_21eee051d_f == _21eee051d_cf) {
								goto _iter_end_4678974064;
							} else if (_21eee051d_f->_field_ident == _21eee051d_cf->_field_ident) {
								this->self->_method_push_err(_21eee051d_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_21eee051d_f->_field_ident)}));
								this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_167659_ok=false;
							}
						}
						_iter_next_4678974064:;
						++it;
						goto _iter_begin_4678974064;
					}
					_iter_end_4678974064:;
				}
			}
			_iter_next_4678969504:;
			++it;
			goto _iter_begin_4678969504;
		}
		_iter_end_4678969504:;
	}
	if (_167659_ok && (_168913_n != _167644_st->_field_instances.len())) {
		_167917_tc->_field_referencer=nullptr;
		_167644_st->_field_instances=_167644_st->_field_instances.slice(0LL,_168913_n);
		{
			auto &expr = _167644_st->_field_fields;
			auto it = expr.begin();
			_iter_begin_4678981216:;
			if (it != expr.end()) {
				jule::Ptr<_2398d04dc_Field> _21eee051d_f = *it;
				{
					_21eee051d_f->_field_kind->_field_kind=_167917_tc->_method_check_decl(_21eee051d_f->_field_kind->_field_decl);
				}
				_iter_next_4678981216:;
				++it;
				goto _iter_begin_4678981216;
			}
			_iter_end_4678981216:;
		}
	}
	return _167659_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_struct_decl_methods(jule::Ptr<_2398d04dc_Struct>& _171850_s) {
	jule::Bool _171864_ok = jule::Bool();
	{
		auto &expr = _171850_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4678986512:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _21eee051d_m = *it;
			{
				if ((!(this->self->_method_check_fn_decl_types(_21eee051d_m)))) {
					_171864_ok = false;
					return _171864_ok;
				}
			}
			_iter_next_4678986512:;
			++it;
			goto _iter_begin_4678986512;
		}
		_iter_end_4678986512:;
	}
	_171864_ok = true;
	return _171864_ok;
}



inline void _21eee051d_Sema::_method_check_struct_decl(jule::Ptr<_2398d04dc_Struct>& _172742_s) {
	if (_2220dce43_is_ignore_ident(_172742_s->_field_ident)) {
		this->self->_method_push_err(_172742_s->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_172742_s),_172742_s->_field_ident,_172742_s->_field_cpp_linked)) {
		this->self->_method_push_err(_172742_s->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_172742_s->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_172742_s->_field_directives,jule::Any(_172742_s));
	_172742_s->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_172742_s->_field_generics)))))) { goto _case_end_4678998896; }
		_case_begin_4678998896:;
		{
			return;
		}
		goto _match_end_4678991584;
		_case_end_4678998896:;
		if (!(((!(this->self->_method_check_struct_fields(_172742_s)))))) { goto _case_end_4678999296; }
		_case_begin_4678999296:;
		{
			return;
		}
		goto _match_end_4678991584;
		_case_end_4678999296:;
		if (!(((!(this->self->_method_check_struct_decl_methods(_172742_s)))))) { goto _case_end_4678999392; }
		_case_begin_4678999392:;
		{
			return;
		}
		goto _match_end_4678991584;
		_case_end_4678999392:;
		if (!(((!(this->self->_method_check_struct_impls(_172742_s)))))) { goto _case_end_4678999488; }
		_case_begin_4678999488:;
		{
			return;
		}
		goto _match_end_4678991584;
		_case_end_4678999488:;
		_match_end_4678991584:;
	}
}



inline jule::Bool _21eee051d_Sema::_method_check_struct_decls(void) {
	jule::Bool _174740_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4679006640:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> _21eee051d_s = *it;
			{
				this->self->_method_check_struct_decl(_21eee051d_s);
				if (this->self->_field_errors.len() > 0LL) {
					_174740_ok = false;
					return _174740_ok;
				}
			}
			_iter_next_4679006640:;
			++it;
			goto _iter_begin_4679006640;
		}
		_iter_end_4679006640:;
	}
	_174740_ok = true;
	return _174740_ok;
}



inline void _21eee051d_Sema::_method_check_fn_decl(jule::Ptr<_222edb48e_Fn>& _176038_f) {
	if (_2220dce43_is_ignore_ident(_176038_f->_field_ident)) {
		this->self->_method_push_err(_176038_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_176038_f),_176038_f->_field_ident,_176038_f->_field_cpp_linked)) {
		this->self->_method_push_err(_176038_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_176038_f->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_176038_f->_field_directives,jule::Any(_176038_f));
	_176038_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_176038_f);
}



inline jule::Bool _21eee051d_Sema::_method_check_fn_decls(void) {
	jule::Bool _177536_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4685210080:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _21eee051d_f = *it;
			{
				this->self->_method_check_fn_decl(_21eee051d_f);
				if (this->self->_field_errors.len() > 0LL) {
					_177536_ok = false;
					return _177536_ok;
				}
			}
			_iter_next_4685210080:;
			++it;
			goto _iter_begin_4685210080;
		}
		_iter_end_4685210080:;
	}
	_177536_ok = true;
	return _177536_ok;
}



inline void _21eee051d_Sema::_method_push_cycle_error(jule::Ptr<_2398d04dc_Struct>& _178732_st1,jule::Ptr<_2398d04dc_Struct>& _178747_st2,jule::Str& _178766_message) {
	
	jule::Str _179013_refers_to = _23886c227_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_178732_st1->_field_ident),jule::Any(_178747_st2->_field_ident)}));
	_178766_message=((_221db702a_str_repeat(jule::Str(" ", 1),4LL) + _179013_refers_to) + jule::Str("\n", 1)) + _178766_message;
}



inline jule::Bool _21eee051d_Sema::_method_check_cross_cycle(jule::Ptr<_2398d04dc_Struct>& _179433_st1,jule::Ptr<_2398d04dc_Struct>& _179448_st2,jule::Str& _179467_message) {
	{
		auto &expr = _179448_st2->_field_uses;
		auto it = expr.begin();
		_iter_begin_4685224752:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> &_21eee051d_u = *it;
			{
				if (_21eee051d_u == _179433_st1) {
					(*this)._method_push_cycle_error(_179448_st2,_21eee051d_u,_179467_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_179433_st1,_21eee051d_u,_179467_message)))) {
					(*this)._method_push_cycle_error(_179448_st2,_21eee051d_u,_179467_message);
					return false;
				}
			}
			_iter_next_4685224752:;
			++it;
			goto _iter_begin_4685224752;
		}
		_iter_end_4685224752:;
	}
	return true;
}



inline jule::Bool _21eee051d_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _181053_derive,jule::Ptr<_2398d04dc_Struct>& _181067_st1,jule::Ptr<_2300b54e5_TypeKind>& _181086_k) {
	jule::Bool _1810102_ok = jule::Bool();
	jule::Ptr<_2398d04dc_Struct> _181117_st2 = _2300b54e5_get_struct_from_kind(_181086_k);
	if (_181117_st2 == nullptr) {
		_1810102_ok = true;
		return _1810102_ok;
	}
	if (_181067_st1 == _181117_st2) {
		(*this)._method_push_err(_181067_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_181053_derive),jule::Any(_181067_st1->_field_ident)}));
		_1810102_ok = false;
		return _1810102_ok;
	}
	jule::Str _182317_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_181067_st1,_181117_st2,_182317_message)))) {
		jule::Str _182621_err_msg = _182317_message;
		_182317_message=jule::Str();
		(*this)._method_push_cycle_error(_181067_st1,_181117_st2,_182317_message);
		_182621_err_msg=_182621_err_msg + _182317_message;
		(*this)._method_push_err(_181067_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_181053_derive),jule::Any(_182621_err_msg)}));
		_1810102_ok = false;
		return _1810102_ok;
	}
	_1810102_ok = true;
	return _1810102_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_struct_ins_derive_clone(jule::Ptr<_2398d04dc_StructIns> _183752_st) {
	jule::Bool _183770_ok = jule::Bool();
	if ((!(_183752_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_183770_ok = true;
		return _183770_ok;
	}
	{
		auto &expr = _183752_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_4685247856:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_FieldIns> _21eee051d_f = *it;
			{
				if ((_21eee051d_f->_field_kind == nullptr) || (!(_21eee051d_f->_field_kind->_method_mutable()))) {
					goto _iter_next_4685247856;
				}
				if ((!(_21eee051d_f->_field_kind->_method_supports_cloning()))) {
					(*this)._method_push_err(_183752_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_21eee051d_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_183770_ok = false;
					return _183770_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_183752_st->_field_decl,_21eee051d_f->_field_kind)))) {
					_183770_ok = false;
					return _183770_ok;
				}
			}
			_iter_next_4685247856:;
			++it;
			goto _iter_begin_4685247856;
		}
		_iter_end_4685247856:;
	}
	_183770_ok = true;
	return _183770_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_struct_derive_clone(jule::Ptr<_2398d04dc_Struct>& _186049_st) {
	jule::Bool _186064_ok = jule::Bool();
	_186064_ok = (*this)._method_check_struct_ins_derive_clone(_186049_st->_method_instance());
	return _186064_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_file_derives(void) {
	jule::Bool _186439_ok = jule::Bool();
	{
		auto &expr = (*this)._field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4685264080:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> _21eee051d_st = *it;
			{
				_186439_ok=(*this)._method_check_struct_derive_clone(_21eee051d_st);
				if ((!(_186439_ok))) {
					goto _iter_end_4685264080;
				}
			}
			_iter_next_4685264080:;
			++it;
			goto _iter_begin_4685264080;
		}
		_iter_end_4685264080:;
	}
	return _186439_ok;
}



inline void _21eee051d_Sema::_method_check_package_derives(void) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4685267648:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_f = *it;
			{
				(*this)._method_set_current_file(_21eee051d_f);
				jule::Bool _187917_ok = (*this)._method_check_file_derives();
				if ((!(_187917_ok))) {
					return;
				}
			}
			_iter_next_4685267648:;
			++it;
			goto _iter_begin_4685267648;
		}
		_iter_end_4685267648:;
	}
}



inline void _21eee051d_Sema::_method_check_package_decls(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4685272912:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_f = *it;
			{
				this->self->_method_set_current_file(_21eee051d_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_4685272912:;
			++it;
			goto _iter_begin_4685272912;
		}
		_iter_end_4685272912:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4685273680:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_f = *it;
			{
				this->self->_method_set_current_file(_21eee051d_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_4685273680:;
			++it;
			goto _iter_begin_4685273680;
		}
		_iter_end_4685273680:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4685276944:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_f = *it;
			{
				this->self->_method_set_current_file(_21eee051d_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_4685276944:;
			++it;
			goto _iter_begin_4685276944;
		}
		_iter_end_4685276944:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4685279872:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_f = *it;
			{
				this->self->_method_set_current_file(_21eee051d_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_4685279872:;
			++it;
			goto _iter_begin_4685279872;
		}
		_iter_end_4685279872:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4685282768:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_f = *it;
			{
				this->self->_method_set_current_file(_21eee051d_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_4685282768:;
			++it;
			goto _iter_begin_4685282768;
		}
		_iter_end_4685282768:;
	}
	this->self->_method_check_package_derives();
}



inline void _21eee051d_Sema::_method_check_data_for_type_inference(jule::Ptr<_20683ebaa_Data>& _192749_d,_2220dce43_Token& _192760_err_token) {
	{
		if (!((_192749_d->_method_is_nil()))) { goto _case_end_4685291792; }
		_case_begin_4685291792:;
		{
			(*this)._method_push_err(_192760_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
		}
		goto _match_end_4685291584;
		_case_end_4685291792:;
		if (!((_192749_d->_method_is_void()))) { goto _case_end_4685291904; }
		_case_begin_4685291904:;
		{
			(*this)._method_push_err(_192760_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
		}
		goto _match_end_4685291584;
		_case_end_4685291904:;
		if (!((_192749_d->_field_kind->_field_variadic))) { goto _case_end_4685292016; }
		_case_begin_4685292016:;
		{
			(*this)._method_push_err(_192760_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
		}
		goto _match_end_4685291584;
		_case_end_4685292016:;
		_match_end_4685291584:;
	}
}



inline void _21eee051d_Sema::_method_check_var(jule::Ptr<_2200a2657_Var>& _194034_v) {
	if (_194034_v->_field_cpp_linked) {
		return;
	}
	if (_194034_v->_method_is_type_inferred()) {
		_194034_v->_field_kind=jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),_194034_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_194034_v->_field_value->_field_data,_194034_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ptr<_2300b54e5_Arr> _195221_arr = _194034_v->_field_kind->_field_kind->_method_arr();
		if (_195221_arr != nullptr) {
			if (_195221_arr->_field_auto) {
				jule::Ptr<_2300b54e5_Arr> _195525_data_arr = _194034_v->_field_value->_field_data->_field_kind->_method_arr();
				if (_195525_data_arr != nullptr) {
					_195221_arr->_field_n=_195525_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_194034_v->_field_reference,_194034_v->_field_kind->_field_kind,_194034_v->_field_value->_field_data,_194034_v->_field_value->_field_expr->_field_token);
	}
	if (_194034_v->_field_reference && (!(_2300b54e5_is_valid_for_ref(_194034_v->_field_kind->_field_kind)))) {
		this->self->_method_push_err(_194034_v->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_194034_v->_field_kind->_field_kind->_method_to_str())}));
	}
	this->self->_method_check_validity_for_init_expr(_194034_v->_field_mutable,_194034_v->_field_reference,_194034_v->_field_kind->_field_kind,_194034_v->_field_value->_field_data,_194034_v->_field_value->_field_expr->_field_token);
	if (_194034_v->_field_constant) {
		if ((!(_194034_v->_field_value->_field_data->_method_is_const()))) {
			this->self->_method_push_err(_194034_v->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		}
	} else {
		_194034_v->_field_value->_field_data->_field_constant=nullptr;
	}
	if (_194034_v->_field_kind->_field_kind->_method_tup() != nullptr) {
		_194034_v->_field_kind->_field_kind=nullptr;
	}
}



inline void _21eee051d_Sema::_method_check_type_var(jule::Ptr<_2200a2657_Var>& _199039_decl,jule::Trait<_206c9641e_Lookup> _199055_l) {
	if (_199039_decl->_field_cpp_linked || (!(_199039_decl->_method_is_initialized()))) {
		return;
	}
	jule::Ptr<_20683ebaa_Eval> _199517_eval = (((_199039_decl->_field_kind != nullptr)) ? (this->self->_method_evalpd(_199055_l,_199039_decl->_field_kind->_field_kind,_199039_decl)) : (this->self->_method_evalpd(_199055_l,nullptr,_199039_decl)));
	_199517_eval->_field_immutable=(!(_199039_decl->_field_mutable));
	_199039_decl->_field_value->_field_data=_199517_eval->_method_eval_expr(_199039_decl->_field_value->_field_expr);
	if (_199039_decl->_field_value->_field_data == nullptr) {
		return;
	}
	this->self->_method_check_var(_199039_decl);
}



inline void _21eee051d_Sema::_method_check_global_types(void) {
	{
		auto &expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_4685337104:;
		if (it != expr.end()) {
			jule::Ptr<_2200a2657_Var> _21eee051d_decl = *it;
			{
				if ((_21eee051d_decl->_method_is_initialized() && (_21eee051d_decl->_field_value->_field_data == nullptr)) || (_21eee051d_decl->_method_is_type_inferred() && (_21eee051d_decl->_field_kind->_field_kind == nullptr))) {
					this->self->_method_check_type_var(_21eee051d_decl,this->self);
				}
			}
			_iter_next_4685337104:;
			++it;
			goto _iter_begin_4685337104;
		}
		_iter_end_4685337104:;
	}
}



inline void _21eee051d_Sema::_method_check_type_method(jule::Ptr<_2398d04dc_StructIns>& _201942_strct,jule::Ptr<_222edb48e_Fn>& _201966_f) {
	if (_201966_f->_field_cpp_linked) {
		return;
	}
	if (_201966_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_201966_f->_field_instances.len() == 0LL) {
		jule::Ptr<_222edb48e_FnIns> _203021_ins = _201966_f->_method_instance();
		_203021_ins->_field_owner=_201942_strct;
		_201966_f->_method_append_instance(_203021_ins);
		this->self->_method_reload_fn_ins_types(_203021_ins);
		_203021_ins->_field_reloaded=true;
	}
	{
		auto &expr = _201966_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4685347360:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_FnIns> _21eee051d_ins = *it;
			{
				if (_21eee051d_ins->_field_scope->_field_stmts.len() > 0LL) {
					goto _iter_next_4685347360;
				}
				this->self->_method_check_fn_ins(_21eee051d_ins);
			}
			_iter_next_4685347360:;
			++it;
			goto _iter_begin_4685347360;
		}
		_iter_end_4685347360:;
	}
}



inline void _21eee051d_Sema::_method_check_type_struct(jule::Ptr<_2398d04dc_Struct>& _204642_strct) {
	if (_204642_strct->_field_cpp_linked) {
		return;
	}
	if (_204642_strct->_field_generics.len() > 0LL) {
		return;
	}
	if (_204642_strct->_field_instances.len() == 0LL) {
		jule::Ptr<_2398d04dc_StructIns> _205721_ins = _204642_strct->_method_instance();
		_205721_ins->_field_checked=true;
		_204642_strct->_method_append_instance(_205721_ins);
	}
	{
		auto &expr = _204642_strct->_field_instances;
		auto it = expr.begin();
		_iter_begin_4685362352:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_StructIns> _21eee051d_ins = *it;
			{
				{
					auto &expr = _21eee051d_ins->_field_methods;
					auto it = expr.begin();
					_iter_begin_4685364128:;
					if (it != expr.end()) {
						jule::Ptr<_222edb48e_Fn> _21eee051d_f = *it;
						{
							this->self->_method_check_type_method(_21eee051d_ins,_21eee051d_f);
						}
						_iter_next_4685364128:;
						++it;
						goto _iter_begin_4685364128;
					}
					_iter_end_4685364128:;
				}
			}
			_iter_next_4685362352:;
			++it;
			goto _iter_begin_4685362352;
		}
		_iter_end_4685362352:;
	}
}



inline void _21eee051d_Sema::_method_check_struct_types(void) {
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4685366912:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> _21eee051d_s = *it;
			{
				this->self->_method_check_type_struct(_21eee051d_s);
			}
			_iter_next_4685366912:;
			++it;
			goto _iter_begin_4685366912;
		}
		_iter_end_4685366912:;
	}
}



inline void _21eee051d_Sema::_method_check_rets(jule::Ptr<_222edb48e_FnIns>& _207534_f) {
	if (_207534_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _208013_ok = _21eee051d_has_ret(_207534_f->_field_scope);
	if ((!(_208013_ok))) {
		(*this)._method_push_err(_207534_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	}
}



inline void _21eee051d_Sema::_method_check_fn_ins_sc(jule::Ptr<_222edb48e_FnIns>& _208639_f,jule::Ptr<_2300254bb_ScopeChecker>& _208655_sc) {
	if (_208639_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ptr<_2200a2657_Var>> _209117_vars = _21eee051d_build_ret_vars(_208639_f);
	_208655_sc->_field_table->_field_vars=jule::append(_208655_sc->_field_table->_field_vars,_209117_vars);
	_208655_sc->_field_table->_field_vars=jule::append(_208655_sc->_field_table->_field_vars,_21eee051d_build_param_vars(_208639_f));
	_208655_sc->_field_table->_field_type_aliases=jule::append(_208655_sc->_field_table->_field_type_aliases,_21eee051d_build_generic_type_aliases(_208639_f));
	_208655_sc->_method_check(_208639_f->_field_decl->_field_scope,_208639_f->_field_scope);
	if (_209117_vars.len() > 0LL) {
		jule::Slice<jule::Any> _210121_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_208639_f->_field_scope->_field_stmts.len() + _209117_vars.len()));
		{
			auto &expr = _209117_vars;
			auto it = expr.begin();
			_iter_begin_4685387520:;
			if (it != expr.end()) {
				jule::Ptr<_2200a2657_Var> _21eee051d_v = *it;
				{
					_210121_stmts.push(jule::Any(_21eee051d_v));
				}
				_iter_next_4685387520:;
				++it;
				goto _iter_begin_4685387520;
			}
			_iter_end_4685387520:;
		}
		_210121_stmts=jule::append(_210121_stmts,_208639_f->_field_scope->_field_stmts);
		_208639_f->_field_scope->_field_stmts=_210121_stmts;
	}
	(*this)._method_check_rets(_208639_f);
}



inline void _21eee051d_Sema::_method_check_fn_ins(jule::Ptr<_222edb48e_FnIns>& _211337_f) {
	if (_211337_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ptr<_2067a6b66_SymbolTable> _211817_old = _211337_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_211337_f->_field_decl->_field_sema->_method_set_current_file(_211817_old);
	});
	jule::Ptr<_2067a6b66_SymbolTable> _212017_file = _21eee051d_find_file(_211337_f->_field_decl->_field_sema->_field_files,_211337_f->_field_decl->_field_token._field_file);
	if (_212017_file != nullptr) {
		_211337_f->_field_decl->_field_sema->_method_set_current_file(_212017_file);
	}
	jule::Ptr<_2300254bb_ScopeChecker> _212517_sc = _2300254bb_new_scope_checker(_211337_f->_field_decl->_field_sema,_211337_f);
	this->self->_method_check_fn_ins_sc(_211337_f,_212517_sc);
	if (_211337_f->_field_decl->_field_sema != this->self) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_211337_f->_field_decl->_field_sema->_field_errors);
		_211337_f->_field_decl->_field_sema->_field_errors=nullptr;
	}
}



inline void _21eee051d_Sema::_method_check_type_fn(jule::Ptr<_222edb48e_Fn>& _213438_f) {
	if (_213438_f->_field_cpp_linked) {
		return;
	}
	if (_213438_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto &expr = _213438_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4685409776:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_FnIns> _21eee051d_ins = *it;
			{
				this->self->_method_check_fn_ins(_21eee051d_ins);
			}
			_iter_next_4685409776:;
			++it;
			goto _iter_begin_4685409776;
		}
		_iter_end_4685409776:;
	}
}



inline void _21eee051d_Sema::_method_precheck_type_fn(jule::Ptr<_222edb48e_Fn>& _214941_f) {
	if (_214941_f->_field_cpp_linked) {
		return;
	}
	if (_214941_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_214941_f->_field_instances.len() == 0LL) {
		jule::Ptr<_222edb48e_FnIns> _216021_ins = _214941_f->_method_instance();
		_214941_f->_field_instances = jule::alloc_for_append(_214941_f->_field_instances,1);_214941_f->_field_instances.push(_216021_ins);
		this->self->_method_reload_fn_ins_types(_216021_ins);
		_216021_ins->_field_reloaded=true;
	}
}



inline jule::Bool _21eee051d_Sema::_method_precheck_fn_types(void) {
	jule::Bool _216839_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4685422656:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _21eee051d_decl = *it;
			{
				this->self->_method_precheck_type_fn(_21eee051d_decl);
			}
			_iter_next_4685422656:;
			++it;
			goto _iter_begin_4685422656;
		}
		_iter_end_4685422656:;
	}
	_216839_ok = true;
	return _216839_ok;
}



inline jule::Bool _21eee051d_Sema::_method_check_fn_types(void) {
	jule::Bool _217636_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4685427152:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _21eee051d_decl = *it;
			{
				this->self->_method_check_type_fn(_21eee051d_decl);
			}
			_iter_next_4685427152:;
			++it;
			goto _iter_begin_4685427152;
		}
		_iter_end_4685427152:;
	}
	_217636_ok = true;
	return _217636_ok;
}



inline void _21eee051d_Sema::_method_check_package_types(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4685430768:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_f = *it;
			{
				this->self->_method_set_current_file(_21eee051d_f);
				this->self->_method_check_global_types();
			}
			_iter_next_4685430768:;
			++it;
			goto _iter_begin_4685430768;
		}
		_iter_end_4685430768:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4685431392:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_f = *it;
			{
				this->self->_method_set_current_file(_21eee051d_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_4685431392:;
			++it;
			goto _iter_begin_4685431392;
		}
		_iter_end_4685431392:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4685434208:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_f = *it;
			{
				this->self->_method_set_current_file(_21eee051d_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_4685434208:;
			++it;
			goto _iter_begin_4685434208;
		}
		_iter_end_4685434208:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4685436592:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_f = *it;
			{
				this->self->_method_set_current_file(_21eee051d_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_4685436592:;
			++it;
			goto _iter_begin_4685436592;
		}
		_iter_end_4685436592:;
	}
}



inline void _21eee051d_Sema::_method_set_file_sema_fields(void) {
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4685442768:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _21eee051d_f = *it;
			{
				_21eee051d_f->_field_sema=this->self;
			}
			_iter_next_4685442768:;
			++it;
			goto _iter_begin_4685442768;
		}
		_iter_end_4685442768:;
	}
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4685443440:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> _21eee051d_st = *it;
			{
				_21eee051d_st->_field_sema=this->self;
			}
			_iter_next_4685443440:;
			++it;
			goto _iter_begin_4685443440;
		}
		_iter_end_4685443440:;
	}
}



inline void _21eee051d_Sema::_method_set_sema_fields(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4685443872:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_file = *it;
			{
				this->self->_method_set_current_file(_21eee051d_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_4685443872:;
			++it;
			goto _iter_begin_4685443872;
		}
		_iter_end_4685443872:;
	}
}



inline void _21eee051d_Sema::_method_check(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>& _222430_files) {
	this->self->_field_files=_222430_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _21eee051d_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2200a2657_IterRelation &_Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2200a2657_Var> _2200223c9_RangeChecker::_method_build_var(jule::Ptr<_221d8b043_VarDecl>& _88829_decl) {
	jule::Ptr<_2200a2657_Var> _88917_v = _221db702a_build_var(_88829_decl);
	return _88917_v;
}



inline void _2200223c9_RangeChecker::_method_set_size_key(void) {
	if (((*this)._field_rang->_field_key_a == nullptr) || _2220dce43_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("int", 3))))));
	{
		auto &_match_expr{ (*this)._field_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4685905616; }
		_case_begin_4685905616:;
		{
			(*this)._field_kind->_field_key_a->_field_iter_relation=jule::new_struct<_2200a2657_IterRelation>(new( std::nothrow ) _2200a2657_IterRelation((*this)._field_d->_field_model.operator jule::Ptr<_2200a2657_Var>()));
		}
		goto _match_end_4685909824;
		_case_end_4685905616:;
		_match_end_4685909824:;
	}
}



inline void _2200223c9_RangeChecker::_method_check_range_expr_validity(jule::Ptr<_20683ebaa_Data>& _91949_d,jule::Ptr<_2200a2657_Var>& _91960_key,jule::Ptr<_2300b54e5_TypeKind>& _91976_k) {
	jule::Bool _92017__mut = _91960_key->_field_mutable;
	if (_92017__mut && (!(_91976_k->_method_mutable()))) {
		_92017__mut=false;
	}
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr(_92017__mut,_91960_key->_field_reference,_91960_key->_field_kind->_field_kind,_91949_d,(*this)._field_rang->_field_in_token);
}



inline void _2200223c9_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _2220dce43_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_2300b54e5_Slc> _93817_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),_93817_slc->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_93817_slc->_field_elem);
}



inline void _2200223c9_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _2220dce43_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_2300b54e5_Arr> _95117_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),_95117_arr->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_95117_arr->_field_elem);
}



inline void _2200223c9_RangeChecker::_method_check_map_key_a(void) {
	if (((*this)._field_rang->_field_key_a == nullptr) || _2220dce43_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ptr<_2300b54e5_Map> _96317_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),_96317_m->_field_key));
	jule::Ptr<_20683ebaa_Data> _96717_d = jule::new_ptr<_20683ebaa_Data>((*((*this)._field_d)));
	_96717_d->_field_kind=_96317_m->_field_key;
	(*this)._method_check_range_expr_validity(_96717_d,(*this)._field_kind->_field_key_a,_96317_m->_field_key);
}



inline void _2200223c9_RangeChecker::_method_check_map_key_b(void) {
	if (((*this)._field_rang->_field_key_b == nullptr) || _2220dce43_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_2300b54e5_Map> _97817_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),_97817_m->_field_val));
	jule::Ptr<_20683ebaa_Data> _98217_d = jule::new_ptr<_20683ebaa_Data>((*((*this)._field_d)));
	_98217_d->_field_kind=_97817_m->_field_val;
	(*this)._method_check_range_expr_validity(_98217_d,(*this)._field_kind->_field_key_b,_97817_m->_field_val);
}



inline void _2200223c9_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _2200223c9_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _2220dce43_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _2200223c9_RangeChecker::_method_check(void) {
	{
		if (!(((*this)._field_d->_field_kind->_field_variadic))) { goto _case_end_4685977552; }
		goto _match_end_4685971248;
		_case_end_4685977552:;
		if (!(((*this)._field_d->_field_kind->_method_slc() != nullptr))) { goto _case_end_4685973376; }
		_case_begin_4685973376:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_4685971248;
		_case_end_4685973376:;
		if (!(((*this)._field_d->_field_kind->_method_arr() != nullptr))) { goto _case_end_4685973472; }
		_case_begin_4685973472:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_4685971248;
		_case_end_4685973472:;
		if (!(((*this)._field_d->_field_kind->_method_map() != nullptr))) { goto _case_end_4685973568; }
		_case_begin_4685973568:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_4685971248;
		_case_end_4685973568:;
		_case_begin_4685973072:;
		{
			jule::Ptr<_2300b54e5_Prim> _102517_prim = (*this)._field_d->_field_kind->_method_prim();
			if ((_102517_prim != nullptr) && _102517_prim->_method_is_str()) {
				(*this)._method_check_str();
				return true;
			}
		}
		goto _match_end_4685971248;
		_case_end_4685973072:;
		_match_end_4685971248:;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _2200223c9_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2200229c3_ImportInfo> _2067a6b66_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	{
		auto &expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_4690301360:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _2067a6b66_pkg = *it;
			{
				if (_2067a6b66_pkg->_field_ident == _2535_ident) {
					return _2067a6b66_pkg;
				}
			}
			_iter_next_4690301360:;
			++it;
			goto _iter_begin_4690301360;
		}
		_iter_end_4690301360:;
	}
	return nullptr;
}



inline jule::Ptr<_2200229c3_ImportInfo> _2067a6b66_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return nullptr;
	}
	{
		auto &expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_4690305776:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _2067a6b66_pkg = *it;
			{
				if (_3737_selector(_2067a6b66_pkg)) {
					return _2067a6b66_pkg;
				}
			}
			_iter_next_4690305776:;
			++it;
			goto _iter_begin_4690305776;
		}
		_iter_end_4690305776:;
	}
	return nullptr;
}



inline jule::Ptr<_2200a2657_Var> _2067a6b66_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_2300b54e5_TypeAlias> _2067a6b66_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_2398d04dc_Struct> _2067a6b66_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4690314560:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> _2067a6b66_s = *it;
			{
				if ((_2067a6b66_s->_field_ident == _6434_ident) && (_2067a6b66_s->_field_cpp_linked == _6446_cpp_linked)) {
					return _2067a6b66_s;
				}
			}
			_iter_next_4690314560:;
			++it;
			goto _iter_begin_4690314560;
		}
		_iter_end_4690314560:;
	}
	return nullptr;
}



inline jule::Ptr<_222edb48e_Fn> _2067a6b66_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4690318896:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _2067a6b66_f = *it;
			{
				if ((_2067a6b66_f->_field_ident == _7530_ident) && (_2067a6b66_f->_field_cpp_linked == _7542_cpp_linked)) {
					return _2067a6b66_f;
				}
			}
			_iter_next_4690318896:;
			++it;
			goto _iter_begin_4690318896;
		}
		_iter_end_4690318896:;
	}
	return nullptr;
}



inline jule::Ptr<_2300167cb_Trait> _2067a6b66_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4690322608:;
		if (it != expr.end()) {
			jule::Ptr<_2300167cb_Trait> _2067a6b66_t = *it;
			{
				if (_2067a6b66_t->_field_ident == _8633_ident) {
					return _2067a6b66_t;
				}
			}
			_iter_next_4690322608:;
			++it;
			goto _iter_begin_4690322608;
		}
		_iter_end_4690322608:;
	}
	return nullptr;
}



inline jule::Ptr<_23001604a_Enum> _2067a6b66_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4690323632:;
		if (it != expr.end()) {
			jule::Ptr<_23001604a_Enum> _2067a6b66_e = *it;
			{
				if (_2067a6b66_e->_field_ident == _9732_ident) {
					return _2067a6b66_e;
				}
			}
			_iter_next_4690323632:;
			++it;
			goto _iter_begin_4690323632;
		}
		_iter_end_4690323632:;
	}
	return nullptr;
}



inline jule::Ptr<_2200a2657_Var> _2067a6b66_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = (*this)._field_vars.len() - 1LL;
		for (; _11021_i >= 0LL; (_11021_i)--) {
			{
				jule::Ptr<_2200a2657_Var> _11225_v = (*this)._field_vars[_11021_i];
				if ((_11225_v->_field_ident == _10829_ident) && (_11225_v->_field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_4690331312:;
		}
		_iter_end_4690331312:;
	} else {
		{
			auto &expr = (*this)._field_vars;
			auto it = expr.begin();
			_iter_begin_4690334976:;
			if (it != expr.end()) {
				jule::Ptr<_2200a2657_Var> _2067a6b66_v = *it;
				{
					if ((_2067a6b66_v->_field_ident == _10829_ident) && (_2067a6b66_v->_field_cpp_linked == _10841_cpp_linked)) {
						return _2067a6b66_v;
					}
				}
				_iter_next_4690334976:;
				++it;
				goto _iter_begin_4690334976;
			}
			_iter_end_4690334976:;
		}
	}
	return nullptr;
}



inline jule::Ptr<_2300b54e5_TypeAlias> _2067a6b66_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = (*this)._field_type_aliases.len() - 1LL;
		for (; _12921_i >= 0LL; (_12921_i)--) {
			{
				jule::Ptr<_2300b54e5_TypeAlias> _13125_ta = (*this)._field_type_aliases[_12921_i];
				if ((_13125_ta->_field_ident == _12736_ident) && (_13125_ta->_field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_4690341344:;
		}
		_iter_end_4690341344:;
	} else {
		{
			auto &expr = (*this)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_4690345008:;
			if (it != expr.end()) {
				jule::Ptr<_2300b54e5_TypeAlias> _2067a6b66_ta = *it;
				{
					if ((_2067a6b66_ta->_field_ident == _12736_ident) && (_2067a6b66_ta->_field_cpp_linked == _12748_cpp_linked)) {
						return _2067a6b66_ta;
					}
				}
				_iter_next_4690345008:;
				++it;
				goto _iter_begin_4690345008;
			}
			_iter_end_4690345008:;
		}
	}
	return nullptr;
}



inline jule::Any _2067a6b66_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_4686027328:;
		if (it != expr.end()) {
			jule::Ptr<_2200a2657_Var> _2067a6b66_v = *it;
			{
				if ((_2067a6b66_v->_field_ident == _14831_ident) && (_2067a6b66_v->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_2067a6b66_v);
				}
			}
			_iter_next_4686027328:;
			++it;
			goto _iter_begin_4686027328;
		}
		_iter_end_4686027328:;
	}
	{
		auto &expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4686029888:;
		if (it != expr.end()) {
			jule::Ptr<_2300b54e5_TypeAlias> _2067a6b66_ta = *it;
			{
				if ((_2067a6b66_ta->_field_ident == _14831_ident) && (_2067a6b66_ta->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_2067a6b66_ta);
				}
			}
			_iter_next_4686029888:;
			++it;
			goto _iter_begin_4686029888;
		}
		_iter_end_4686029888:;
	}
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4686032400:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> _2067a6b66_s = *it;
			{
				if ((_2067a6b66_s->_field_ident == _14831_ident) && (_2067a6b66_s->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_2067a6b66_s);
				}
			}
			_iter_next_4686032400:;
			++it;
			goto _iter_begin_4686032400;
		}
		_iter_end_4686032400:;
	}
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4686034912:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _2067a6b66_f = *it;
			{
				if ((_2067a6b66_f->_field_ident == _14831_ident) && (_2067a6b66_f->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_2067a6b66_f);
				}
			}
			_iter_next_4686034912:;
			++it;
			goto _iter_begin_4686034912;
		}
		_iter_end_4686034912:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4686038272:;
		if (it != expr.end()) {
			jule::Ptr<_2300167cb_Trait> _2067a6b66_t = *it;
			{
				if (_2067a6b66_t->_field_ident == _14831_ident) {
					return jule::Any(_2067a6b66_t);
				}
			}
			_iter_next_4686038272:;
			++it;
			goto _iter_begin_4686038272;
		}
		_iter_end_4686038272:;
	}
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4686038416:;
		if (it != expr.end()) {
			jule::Ptr<_23001604a_Enum> _2067a6b66_e = *it;
			{
				if (_2067a6b66_e->_field_ident == _14831_ident) {
					return jule::Any(_2067a6b66_e);
				}
			}
			_iter_next_4686038416:;
			++it;
			goto _iter_begin_4686038416;
		}
		_iter_end_4686038416:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _2067a6b66_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_4686045248:;
		if (it != expr.end()) {
			jule::Ptr<_2200a2657_Var> &_2067a6b66_v = *it;
			{
				if (((static_cast<jule::Uintptr>(_2067a6b66_v) != _19534_itself) && (_2067a6b66_v->_field_ident == _19551_ident)) && (_2067a6b66_v->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4686045248:;
			++it;
			goto _iter_begin_4686045248;
		}
		_iter_end_4686045248:;
	}
	{
		auto &expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4686048768:;
		if (it != expr.end()) {
			jule::Ptr<_2300b54e5_TypeAlias> &_2067a6b66_ta = *it;
			{
				if (((static_cast<jule::Uintptr>(_2067a6b66_ta) != _19534_itself) && (_2067a6b66_ta->_field_ident == _19551_ident)) && (_2067a6b66_ta->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4686048768:;
			++it;
			goto _iter_begin_4686048768;
		}
		_iter_end_4686048768:;
	}
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4686050640:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> &_2067a6b66_s = *it;
			{
				if (((static_cast<jule::Uintptr>(_2067a6b66_s) != _19534_itself) && (_2067a6b66_s->_field_ident == _19551_ident)) && (_2067a6b66_s->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4686050640:;
			++it;
			goto _iter_begin_4686050640;
		}
		_iter_end_4686050640:;
	}
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4686052720:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> &_2067a6b66_f = *it;
			{
				if (((static_cast<jule::Uintptr>(_2067a6b66_f) != _19534_itself) && (_2067a6b66_f->_field_ident == _19551_ident)) && (_2067a6b66_f->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4686052720:;
			++it;
			goto _iter_begin_4686052720;
		}
		_iter_end_4686052720:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4686058032:;
		if (it != expr.end()) {
			jule::Ptr<_2300167cb_Trait> &_2067a6b66_t = *it;
			{
				if ((static_cast<jule::Uintptr>(_2067a6b66_t) != _19534_itself) && (_2067a6b66_t->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4686058032:;
			++it;
			goto _iter_begin_4686058032;
		}
		_iter_end_4686058032:;
	}
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4686060544:;
		if (it != expr.end()) {
			jule::Ptr<_23001604a_Enum> &_2067a6b66_e = *it;
			{
				if ((static_cast<jule::Uintptr>(_2067a6b66_e) != _19534_itself) && (_2067a6b66_e->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4686060544:;
			++it;
			goto _iter_begin_4686060544;
		}
		_iter_end_4686060544:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _2067a6b66_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20683ebaa_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _20683ebaa_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_void();
}



inline jule::Bool _20683ebaa_Data::_method_is_const(void) {
	return (*this)._field_constant != nullptr;
}



inline jule::Bool _20683ebaa_Data::_method_good_operand(jule::Ptr<_20683ebaa_Data>& _27336_other) {
	return (((_27336_other->_field_kind->_method_prim() == nullptr) || (!(_27336_other->_field_kind->_method_prim()->_method_is_any()))) && (_27336_other->_field_kind->_method_trt() == nullptr)) && (!((*this)._field_kind->_method_is_nil()));
}







std::ostream &operator<<(std::ostream &_Stream, const _20683ebaa_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _20683ebaa_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _20683ebaa_Eval::_method_push_err(_2220dce43_Token _29827_token,jule::Str _29841_fmt,jule::Slice<jule::Any> _29854_args) {
	(*this)._field_s->_method_push_err(_29827_token,_29841_fmt,_29854_args);
}



inline void _20683ebaa_Eval::_method_push_suggestion(jule::Str _30334_fmt,jule::Slice<jule::Any> _30347_args) {
	(*this)._field_s->_method_push_suggestion(_30334_fmt,_30347_args);
}



inline jule::Bool _20683ebaa_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _20683ebaa_Eval::_method_is_global(void) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_21eee051d_Sema>>())) { goto _case_end_4686084016; }
		_case_begin_4686084016:;
		{
			return true;
		}
		goto _match_end_4686082464;
		_case_end_4686084016:;
		_case_begin_4686081936:;
		{
			return false;
		}
		goto _match_end_4686082464;
		_case_end_4686081936:;
		_match_end_4686082464:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_lit_nil(void) {
	jule::Ptr<_206e210e3_Const> _32217_constant = _206e210e3_Const::_static_method_new_nil();
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_32217_constant),false,_32217_constant));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_lit_str(jule::Ptr<_221d8b043_LitExpr>& _33323_l) {
	jule::Str _33417_s = _33323_l->_field_value.slice(1LL,_33323_l->_field_value.len() - 1LL);
	if (_2220dce43_is_raw_str(_33323_l->_field_value)) {
		_33417_s=_20707b281_to_raw_str(static_cast<jule::Slice<jule::U8>>(_33417_s));
	} else {
		_33417_s=_20707b281_to_str(static_cast<jule::Slice<jule::U8>>(_33417_s));
	}
	jule::Ptr<_206e210e3_Const> _34017_constant = _206e210e3_Const::_static_method_new_str(_33417_s);
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_34017_constant),false,_34017_constant));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_lit_bool(jule::Ptr<_221d8b043_LitExpr>& _35424_l) {
	jule::Ptr<_206e210e3_Const> _35517_constant = _206e210e3_Const::_static_method_new_bool(_35424_l->_field_value == jule::Str("true", 4));
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_35517_constant),false,_35517_constant));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_lit_rune(jule::Ptr<_221d8b043_LitExpr>& _36824_l) {
	
	
	jule::Str _37213_lt = _36824_l->_field_value.slice(1LL,_36824_l->_field_value.len() - 1LL);
	jule::I32 _37313_r = _20707b281_to_rune(static_cast<jule::Slice<jule::U8>>(_37213_lt));
	jule::Ptr<_20683ebaa_Data> _37417_data = jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::Ptr<_2300b54e5_TypeKind>(),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_206e210e3_Const::_static_method_new_i64(static_cast<jule::I64>(_37313_r))));
	jule::Bool _38113_is_ascii = _20707b281_is_ascii(_37313_r);
	if (_38113_is_ascii) {
		_37417_data->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("u8", 2))));
	} else {
		_37417_data->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i32", 3))));
	}
	_37417_data->_field_model=jule::Any(jule::new_struct<_21eedb492_RuneExprModel>(new( std::nothrow ) _21eedb492_RuneExprModel(_37313_r)));
	_37417_data->_field_is_rune=true;
	return _37417_data;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_lit_float(jule::Ptr<_221d8b043_LitExpr>& _39725_l) {
	
	jule::F64 _40014_f;
	std::tie(_40014_f,std::ignore) = _2398a6c55_parse_float(_39725_l->_field_value,64LL);
	jule::Ptr<_206e210e3_Const> _40117_constant = _206e210e3_Const::_static_method_new_f64(_40014_f);
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_40117_constant),false,_40117_constant));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_lit_int(jule::Ptr<_221d8b043_LitExpr>& _41527_l) {
	
	jule::Str _41817_lit = _41527_l->_field_value;
	jule::Int _41917_base = 0LL;
	{
		if (!((_41817_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4691389472; }
		_case_begin_4691389472:;
		{
			_41817_lit=_41817_lit.slice(2LL);
			_41917_base=16LL;
		}
		goto _match_end_4691387952;
		_case_end_4691389472:;
		if (!((_41817_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4691389200; }
		_case_begin_4691389200:;
		{
			_41817_lit=_41817_lit.slice(2LL);
			_41917_base=2LL;
		}
		goto _match_end_4691387952;
		_case_end_4691389200:;
		if (!((_41817_lit.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4691389296; }
		_case_begin_4691389296:;
		{
			_41817_lit=_41817_lit.slice(2LL);
			_41917_base=8LL;
		}
		goto _match_end_4691387952;
		_case_end_4691389296:;
		if (!(((_41817_lit[0LL] == '0') && (_41817_lit.len() > 1LL)))) { goto _case_end_4691388368; }
		_case_begin_4691388368:;
		{
			_41817_lit=_41817_lit.slice(1LL);
			_41917_base=8LL;
		}
		goto _match_end_4691387952;
		_case_end_4691388368:;
		_case_begin_4691388064:;
		{
			_41917_base=10LL;
		}
		goto _match_end_4691387952;
		_case_end_4691388064:;
		_match_end_4691387952:;
	}
	jule::Ptr<_20683ebaa_Data> _44217_d = jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::Ptr<_2300b54e5_TypeKind>(),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_206e210e3_Const>()));
	jule::Any _44817_value = jule::Any(nullptr);
	jule::I64 _44914_sig;
	jule::Int _44919_err;
	std::tie(_44914_sig,_44919_err) = _2388cbb6b_parse_int(_41817_lit,_41917_base,64LL);
	if (_44919_err == 0LLU) {
		_44817_value=jule::Any(_44914_sig);
		_44217_d->_field_constant=_206e210e3_Const::_static_method_new_i64(_44914_sig);
	} else {
		jule::U64 _45418_unsig;
		jule::Int _45425_err;
		std::tie(_45418_unsig,_45425_err) = _2388cbb6b_parse_uint(_41817_lit,_41917_base,64LL);
		if (_45425_err != 0LLU) {
			(*this)._method_push_err(_41527_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>());
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
		}
		_44217_d->_field_constant=_206e210e3_Const::_static_method_new_u64(_45418_unsig);
		_44817_value=jule::Any(_45418_unsig);
	}
	_44217_d->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(_20683ebaa_kind_by_bitsize(_44817_value))));
	_20683ebaa_normalize_bitsize(_44217_d);
	_44217_d->_field_model=jule::Any(_44217_d->_field_constant);
	return _44217_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_lit_num(jule::Ptr<_221d8b043_LitExpr>& _47327_l) {
	{
		if (!((_2220dce43_is_float(_47327_l->_field_value)))) { goto _case_end_4691416464; }
		_case_begin_4691416464:;
		{
			return (*this)._method_lit_float(_47327_l);
		}
		goto _match_end_4691414912;
		_case_end_4691416464:;
		_case_begin_4691415088:;
		{
			return (*this)._method_lit_int(_47327_l);
		}
		goto _match_end_4691414912;
		_case_end_4691415088:;
		_match_end_4691414912:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_lit(jule::Ptr<_221d8b043_LitExpr> _48027_lit) {
	{
		if (!((_48027_lit->_method_is_nil()))) { goto _case_end_4691422192; }
		_case_begin_4691422192:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_4691420448;
		_case_end_4691422192:;
		if (!((_2220dce43_is_str(_48027_lit->_field_value)))) { goto _case_end_4691422288; }
		_case_begin_4691422288:;
		{
			return (*this)._method_lit_str(_48027_lit);
		}
		goto _match_end_4691420448;
		_case_end_4691422288:;
		if (!((_2220dce43_is_bool(_48027_lit->_field_value)))) { goto _case_end_4691421632; }
		_case_begin_4691421632:;
		{
			return (*this)._method_lit_bool(_48027_lit);
		}
		goto _match_end_4691420448;
		_case_end_4691421632:;
		if (!((_2220dce43_is_rune(_48027_lit->_field_value)))) { goto _case_end_4691421728; }
		_case_begin_4691421728:;
		{
			return (*this)._method_lit_rune(_48027_lit);
		}
		goto _match_end_4691420448;
		_case_end_4691421728:;
		if (!((_2220dce43_is_num(_48027_lit->_field_value)))) { goto _case_end_4691421824; }
		_case_begin_4691421824:;
		{
			return (*this)._method_lit_num(_48027_lit);
		}
		goto _match_end_4691420448;
		_case_end_4691421824:;
		_case_begin_4691420624:;
		{
			return nullptr;
		}
		goto _match_end_4691420448;
		_case_end_4691420624:;
		_match_end_4691420448:;
	}
}



inline jule::Any _20683ebaa_Eval::_method_find_builtins(jule::Str _49132_ident) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_2200229c3_ImportInfo>>())) { goto _case_end_4691431392; }
		_case_begin_4691431392:;
		{
			jule::Any _49421_def = _20683ebaa_find_builtins_import(_49132_ident,(*this)._field_lookup.operator jule::Ptr<_2200229c3_ImportInfo>());
			if (_49421_def != nullptr) {
				return _49421_def;
			}
		}
		goto _match_end_4691431920;
		_case_end_4691431392:;
		if (!(_match_expr.type_is<jule::Ptr<_21eee051d_Sema>>())) { goto _case_end_4691432064; }
		_case_begin_4691432064:;
		{
			jule::Any _50021_def = _20683ebaa_find_builtins_sema(_49132_ident,(*this)._field_lookup.operator jule::Ptr<_21eee051d_Sema>());
			if (_50021_def != nullptr) {
				return _50021_def;
			}
		}
		goto _match_end_4691431920;
		_case_end_4691432064:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ScopeChecker>>())) { goto _case_end_4691432160; }
		_case_begin_4691432160:;
		{
			jule::Any _50621_def = _20683ebaa_find_builtins_sema(_49132_ident,(*this)._field_lookup.operator jule::Ptr<_2300254bb_ScopeChecker>()->_field_s);
			if (_50621_def != nullptr) {
				return _50621_def;
			}
		}
		goto _match_end_4691431920;
		_case_end_4691432160:;
		_match_end_4691431920:;
	}
	return _206d53311_find_builtin_def(_49132_ident);
}



inline jule::Any _20683ebaa_Eval::_method_get_def(jule::Str _51526_ident,jule::Bool _51538_cpp_linked) {
	if ((!(_51538_cpp_linked))) {
		jule::Ptr<_23001604a_Enum> _51721_enm = (*this)._field_lookup.get()._method_find_enum(_51526_ident);
		if (_51721_enm != nullptr) {
			return jule::Any(_51721_enm);
		}
	}
	jule::Ptr<_2200a2657_Var> _52317_v = (*this)._field_lookup.get()._method_find_var(_51526_ident,_51538_cpp_linked);
	if (_52317_v != nullptr) {
		return jule::Any(_52317_v);
	}
	jule::Ptr<_222edb48e_Fn> _52817_f = (*this)._field_lookup.get()._method_find_fn(_51526_ident,_51538_cpp_linked);
	if (_52817_f != nullptr) {
		return jule::Any(_52817_f);
	}
	jule::Ptr<_2398d04dc_Struct> _53317_s = (*this)._field_lookup.get()._method_find_struct(_51526_ident,_51538_cpp_linked);
	if (_53317_s != nullptr) {
		return jule::Any(_53317_s);
	}
	jule::Ptr<_2300b54e5_TypeAlias> _53817_ta = (*this)._field_lookup.get()._method_find_type_alias(_51526_ident,_51538_cpp_linked);
	if (_53817_ta != nullptr) {
		return jule::Any(_53817_ta);
	}
	return (*this)._method_find_builtins(_51526_ident);
}



inline void _20683ebaa_Eval::_method_push_reference(jule::Ptr<_221db702a_ReferenceStack>& _54638_references) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ScopeChecker>>())) { goto _case_end_4691472560; }
		_case_begin_4691472560:;
		{
			jule::Ptr<_2300254bb_ScopeChecker> _54921_sc = (*this)._field_lookup.operator jule::Ptr<_2300254bb_ScopeChecker>()->_method_get_root();
			if ((!(_54638_references->_method_exist_1(_54921_sc->_field_owner)))) {
				_54638_references->_method_push(jule::Any(_54921_sc->_field_owner));
			}
		}
		goto _match_end_4691465392;
		_case_end_4691472560:;
		_case_begin_4691464864:;
		{
			if (((*this)._field_owner != nullptr) && (!(_54638_references->_method_exist_0((*this)._field_owner)))) {
				_54638_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_4691465392;
		_case_end_4691464864:;
		_match_end_4691465392:;
	}
}



inline void _20683ebaa_Eval::_method_push_reference_to_fn(jule::Ptr<_222edb48e_FnIns>& _56144_f) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ScopeChecker>>())) { goto _case_end_4691481616; }
		_case_begin_4691481616:;
		{
			jule::Ptr<_2300254bb_ScopeChecker> _56421_sc = (*this)._field_lookup.operator jule::Ptr<_2300254bb_ScopeChecker>()->_method_get_root();
			if (_56421_sc->_field_owner->_field_decl->_method_is_init() && (!(_56421_sc->_field_owner->_field_references->_method_exist_1(_56144_f)))) {
				_56421_sc->_field_owner->_field_refers->_method_push(jule::Any(_56144_f));
			}
		}
		goto _match_end_4691483264;
		_case_end_4691481616:;
		_match_end_4691483264:;
	}
	(*this)._method_push_reference(_56144_f->_field_references);
}



inline void _20683ebaa_Eval::_method_push_reference_to_var(jule::Ptr<_2200a2657_Var>& _57245_v) {
	if (_57245_v->_field_references == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ScopeChecker>>())) { goto _case_end_4691495856; }
		_case_begin_4691495856:;
		{
			jule::Ptr<_2300254bb_ScopeChecker> _57921_sc = (*this)._field_lookup.operator jule::Ptr<_2300254bb_ScopeChecker>()->_method_get_root();
			if (_57921_sc->_field_owner->_field_decl->_method_is_init() && (!(_57921_sc->_field_owner->_field_references->_method_exist_0(_57245_v)))) {
				_57921_sc->_field_owner->_field_refers->_method_push(jule::Any(_57245_v));
			}
		}
		goto _match_end_4691496448;
		_case_end_4691495856:;
		_match_end_4691496448:;
	}
	(*this)._method_push_reference(_57245_v->_field_references);
}



inline void _20683ebaa_Eval::_method_push_reference_to_struct(jule::Ptr<_2398d04dc_StructIns>& _58848_s) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ScopeChecker>>())) { goto _case_end_4691506528; }
		_case_begin_4691506528:;
		{
			jule::Ptr<_2300254bb_ScopeChecker> _59121_sc = (*this)._field_lookup.operator jule::Ptr<_2300254bb_ScopeChecker>()->_method_get_root();
			if (_59121_sc->_field_owner->_field_decl->_method_is_init() && (!(_59121_sc->_field_owner->_field_references->_method_exist_2(_58848_s)))) {
				_59121_sc->_field_owner->_field_refers->_method_push(jule::Any(_58848_s));
			}
		}
		goto _match_end_4691507056;
		_case_end_4691506528:;
		_match_end_4691507056:;
	}
	(*this)._method_push_reference(_58848_s->_field_references);
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method___eval_enum(jule::Ptr<_23001604a_Enum> _59930_enm) {
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_59930_enm)),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,nullptr));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_enum(jule::Ptr<_23001604a_Enum> _61132_enm,_2220dce43_Token _61144_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_61132_enm->_field_public,_61132_enm->_field_token)))) {
		(*this)._method_push_err(_61144_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_61132_enm->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return (*this)._method___eval_enum(_61132_enm);
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method___eval_struct(jule::Ptr<_2398d04dc_StructIns> _62132_s) {
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_62132_s)),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_62132_s),true,nullptr));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_struct(jule::Ptr<_2398d04dc_StructIns> _63434_s,_2220dce43_Token _63449_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_63434_s->_field_decl->_field_public,_63434_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_63449_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_63434_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return (*this)._method___eval_struct(_63434_s);
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_fn_ins(jule::Ptr<_222edb48e_FnIns> _64430_f) {
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_64430_f)),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_64430_f),false,nullptr));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_fn(jule::Ptr<_222edb48e_Fn> _65730_f,_2220dce43_Token _65738_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_65730_f->_field_public,_65730_f->_field_token)))) {
		(*this)._method_push_err(_65738_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_65730_f->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_222edb48e_FnIns> _66417_ins = _65730_f->_method_instance();
	(*this)._method_push_reference_to_fn(_66417_ins);
	return (*this)._method_eval_fn_ins(_66417_ins);
}



inline void _20683ebaa_Eval::_method_push_illegal_cycle_error(jule::Ptr<_2200a2657_Var>& _66944_v1,jule::Ptr<_2200a2657_Var>& _66955_v2,jule::Str& _66970_message) {
	
	jule::Str _67213_refers_to = _23886c227_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_66944_v1->_field_ident),jule::Any(_66955_v2->_field_ident)}));
	_66970_message=((_221db702a_str_repeat(jule::Str(" ", 1),4LL) + _67213_refers_to) + jule::Str("\n", 1)) + _66970_message;
}



inline jule::Bool _20683ebaa_Eval::_method_check_cross_cycle(jule::Ptr<_2200a2657_Var>& _67637_v,jule::Str& _67651_message) {
	{
		auto &expr = _67637_v->_field_depends;
		auto it = expr.begin();
		_iter_begin_4691565696:;
		if (it != expr.end()) {
			jule::Ptr<_2200a2657_Var> &_20683ebaa_d = *it;
			{
				if (_20683ebaa_d == (*this)._field_owner) {
					(*this)._method_push_illegal_cycle_error(_67637_v,_20683ebaa_d,_67651_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_20683ebaa_d,_67651_message)))) {
					(*this)._method_push_illegal_cycle_error(_67637_v,_20683ebaa_d,_67651_message);
					return false;
				}
			}
			_iter_next_4691565696:;
			++it;
			goto _iter_begin_4691565696;
		}
		_iter_end_4691565696:;
	}
	return true;
}



inline jule::Bool _20683ebaa_Eval::_method_check_illegal_cycles(jule::Ptr<_2200a2657_Var>& _69544_v,_2220dce43_Token _69553_decl_token) {
	jule::Bool _69574_ok = jule::Bool();
	if ((*this)._field_owner == nullptr) {
		_69574_ok = true;
		return _69574_ok;
	}
	if ((*this)._field_owner == _69544_v) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_69574_ok = false;
		return _69574_ok;
	}
	jule::Str _70717_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_69544_v,_70717_message)))) {
		jule::Str _71021_err_msg = _70717_message;
		_70717_message=jule::Str();
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_69544_v,_70717_message);
		_71021_err_msg=_71021_err_msg + _70717_message;
		(*this)._method_push_err(_69553_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_71021_err_msg)}));
		_69574_ok = false;
		return _69574_ok;
	}
	(*this)._field_owner->_field_depends = jule::alloc_for_append((*this)._field_owner->_field_depends,1);(*this)._field_owner->_field_depends.push(_69544_v);
	_69574_ok = true;
	return _69574_ok;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_var(jule::Ptr<_2200a2657_Var> _72231_v,_2220dce43_Token _72240_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_72231_v->_field_public,_72231_v->_field_token)))) {
		(*this)._method_push_err(_72240_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_72231_v->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_72231_v->_field_used=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_21eee051d_Sema>>())) { goto _case_end_4691592336; }
		_case_begin_4691592336:;
		{
			jule::Bool _73417_ok = (*this)._method_check_illegal_cycles(_72231_v,_72240_error_token);
			if ((!(_73417_ok))) {
				return nullptr;
			}
		}
		goto _match_end_4691593584;
		_case_end_4691592336:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ScopeChecker>>())) { goto _case_end_4691593024; }
		_case_begin_4691593024:;
		{
			if ((!(_72231_v->_field_reference)) || (*this)._method_is_unsafe()) {
				goto _match_end_4691593584;
			}
			jule::Ptr<_2300254bb_ScopeChecker> _74421_s = (*this)._field_lookup.operator jule::Ptr<_2300254bb_ScopeChecker>();
			while ((_74421_s->_field_owner == nullptr) && (_74421_s->_field_parent != nullptr)) {
				{
					_74421_s=_74421_s->_field_parent;
				}
			_iter_next_4691597824:;
			}
			_iter_end_4691597824:;
			if (((_74421_s->_field_owner != nullptr) && _74421_s->_field_owner->_field_anon) && (_72231_v->_field_scope != _74421_s->_field_owner->_field_scope)) {
				(*this)._method_push_err(_72240_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_72231_v->_field_ident)}));
			}
		}
		goto _match_end_4691593584;
		_case_end_4691593024:;
		_match_end_4691593584:;
	}
	(*this)._method_push_reference_to_var(_72231_v);
	if ((!(_72231_v->_field_cpp_linked)) && ((_72231_v->_field_value == nullptr) || (_72231_v->_field_value->_field_data == nullptr))) {
		if (_72231_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_72231_v,(*this)._field_s);
			if (_72231_v->_field_value->_field_data == nullptr) {
				return nullptr;
			}
		}
	}
	if ((_72231_v->_field_kind == nullptr) || (_72231_v->_field_kind->_field_kind == nullptr)) {
		if (_72231_v->_field_scope != nullptr) {
			return nullptr;
		}
		(*this)._field_s->_method_check_type_var(_72231_v,(*this)._field_lookup);
		if ((_72231_v->_field_kind == nullptr) || (_72231_v->_field_kind->_field_kind == nullptr)) {
			return nullptr;
		}
	}
	jule::Ptr<_20683ebaa_Data> _78417_d = jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(_72231_v->_field_kind->_field_kind->_method_clone(),jule::Ptr<_2300b54e5_TypeKind>(),_72231_v->_field_mutable,_72231_v->_field_reference,(!(_72231_v->_field_constant)),jule::Bool(),jule::Bool(),jule::Any(_72231_v),false,jule::Ptr<_206e210e3_Const>()));
	if (((!(_72231_v->_field_cpp_linked)) && _72231_v->_method_is_initialized()) && (_72231_v->_field_value->_field_data != nullptr)) {
		_78417_d->_field_is_rune=_72231_v->_field_value->_field_data->_field_is_rune;
	}
	if (_72231_v->_field_constant && (_72231_v->_field_value->_field_data->_field_constant != nullptr)) {
		_78417_d->_field_constant=jule::new_ptr<_206e210e3_Const>((*(_72231_v->_field_value->_field_data->_field_constant)));
		_78417_d->_field_model=jule::Any(_78417_d->_field_constant);
	}
	if (_78417_d->_field_kind->_method_fnc() != nullptr) {
		jule::Ptr<_222edb48e_FnIns> _80321_f = _78417_d->_field_kind->_method_fnc();
		if (_80321_f->_field_decl != nullptr) {
			_80321_f->_field_decl->_field_ident=_72231_v->_field_ident;
		}
	}
	return _78417_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_type_alias(jule::Ptr<_2300b54e5_TypeAlias> _81438_ta,_2220dce43_Token _81454_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_81438_ta->_field_public,_81438_ta->_field_token)))) {
		(*this)._method_push_err(_81454_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_81438_ta->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_81438_ta->_field_used=true;
	jule::Trait<_2300b54e5_Kind> _82317_kind = _81438_ta->_field_kind->_field_kind->_field_kind;
	{
		auto &_match_expr{ _82317_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_StructIns>>())) { goto _case_end_4691642400; }
		_case_begin_4691642400:;
		{
			return (*this)._method___eval_struct(_82317_kind.operator jule::Ptr<_2398d04dc_StructIns>());
		}
		goto _match_end_4691637184;
		_case_end_4691642400:;
		if (!(_match_expr.type_is<jule::Ptr<_23001604a_Enum>>())) { goto _case_end_4691637600; }
		_case_begin_4691637600:;
		{
			return (*this)._method___eval_enum(_82317_kind.operator jule::Ptr<_23001604a_Enum>());
		}
		goto _match_end_4691637184;
		_case_end_4691637600:;
		_case_begin_4691634960:;
		{
			jule::Ptr<_20683ebaa_Data> _83221_d = jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(_81438_ta->_field_kind->_field_kind->_method_clone(),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_206e210e3_Const>()));
			_83221_d->_field_kind->_field_generic=_81438_ta->_field_generic;
			if (_81438_ta->_field_cpp_linked) {
				_83221_d->_field_kind->_field_cpp_ident=_81438_ta->_field_ident;
			}
			_83221_d->_field_model=jule::Any(_83221_d->_field_kind);
			return _83221_d;
		}
		goto _match_end_4691637184;
		_case_end_4691634960:;
		_match_end_4691637184:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_def(jule::Any _84931_def,_2220dce43_Token _84941_ident) {
	{
		auto &_match_expr{ _84931_def };
		if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4691650032; }
		_case_begin_4691650032:;
		{
			return (*this)._method_eval_var(_84931_def.operator jule::Ptr<_2200a2657_Var>(),_84941_ident);
		}
		goto _match_end_4691649040;
		_case_end_4691650032:;
		if (!(_match_expr.type_is<jule::Ptr<_23001604a_Enum>>())) { goto _case_end_4691652272; }
		_case_begin_4691652272:;
		{
			return (*this)._method_eval_enum(_84931_def.operator jule::Ptr<_23001604a_Enum>(),_84941_ident);
		}
		goto _match_end_4691649040;
		_case_end_4691652272:;
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4691652368; }
		_case_begin_4691652368:;
		{
			return (*this)._method_eval_struct(_84931_def.operator jule::Ptr<_2398d04dc_Struct>()->_method_instance(),_84941_ident);
		}
		goto _match_end_4691649040;
		_case_end_4691652368:;
		if (!(_match_expr.type_is<jule::Ptr<_222edb48e_Fn>>())) { goto _case_end_4691651808; }
		_case_begin_4691651808:;
		{
			return (*this)._method_eval_fn(_84931_def.operator jule::Ptr<_222edb48e_Fn>(),_84941_ident);
		}
		goto _match_end_4691649040;
		_case_end_4691651808:;
		if (!(_match_expr.type_is<jule::Ptr<_222edb48e_FnIns>>())) { goto _case_end_4691651904; }
		_case_begin_4691651904:;
		{
			return (*this)._method_eval_fn_ins(_84931_def.operator jule::Ptr<_222edb48e_FnIns>());
		}
		goto _match_end_4691649040;
		_case_end_4691651904:;
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_TypeAlias>>())) { goto _case_end_4691649536; }
		_case_begin_4691649536:;
		{
			return (*this)._method_eval_type_alias(_84931_def.operator jule::Ptr<_2300b54e5_TypeAlias>(),_84941_ident);
		}
		goto _match_end_4691649040;
		_case_end_4691649536:;
		_case_begin_4691648944:;
		{
			(*this)._method_push_err(_84941_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_84941_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4691649040;
		_case_end_4691648944:;
		_match_end_4691649040:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_ident(jule::Ptr<_221d8b043_IdentExpr> _87529_ident) {
	jule::Any _87617_def = (*this)._method_get_def(_87529_ident->_field_ident,_87529_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_87617_def,_87529_ident->_field_token);
}



inline void _20683ebaa_Eval::_method_eval_unary_minus(jule::Ptr<_20683ebaa_Data>& _88036_d) {
	jule::Ptr<_2300b54e5_Prim> _88113_t = _88036_d->_field_kind->_method_prim();
	if ((_88113_t == nullptr) || (!(_206ec1e1e_is_num(_88113_t->_method_to_str())))) {
		_88036_d=nullptr;
		return;
	}
	if (_88036_d->_method_is_const()) {
		{
			if (!((_88036_d->_field_constant->_method_is_f64()))) { goto _case_end_4691674176; }
			_case_begin_4691674176:;
			{
				_88036_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_88036_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4691673936;
			_case_end_4691674176:;
			if (!((_88036_d->_field_constant->_method_is_i64()))) { goto _case_end_4691674288; }
			_case_begin_4691674288:;
			{
				_88036_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_88036_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4691673936;
			_case_end_4691674288:;
			if (!((_88036_d->_field_constant->_method_is_u64()))) { goto _case_end_4691674400; }
			_case_begin_4691674400:;
			{
				_88036_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_88036_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4691673936;
			_case_end_4691674400:;
			_match_end_4691673936:;
		}
		_20683ebaa_normalize_type(_88036_d);
	}
	_88036_d->_field_lvalue=false;
	_88036_d->_field_model=jule::Any(jule::new_struct<_21eedb492_UnaryExprModel>(new( std::nothrow ) _21eedb492_UnaryExprModel(_88036_d->_field_model,jule::Str("-", 1))));
}



inline void _20683ebaa_Eval::_method_eval_unary_plus(jule::Ptr<_20683ebaa_Data>& _90335_d) {
	jule::Ptr<_2300b54e5_Prim> _90413_t = _90335_d->_field_kind->_method_prim();
	if ((_90413_t == nullptr) || (!(_206ec1e1e_is_num(_90413_t->_method_to_str())))) {
		_90335_d=nullptr;
		return;
	}
	if (_90335_d->_method_is_const()) {
		{
			if (!((_90335_d->_field_constant->_method_is_f64()))) { goto _case_end_4691690736; }
			_case_begin_4691690736:;
			{
				_90335_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_90335_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4691690496;
			_case_end_4691690736:;
			if (!((_90335_d->_field_constant->_method_is_i64()))) { goto _case_end_4691690848; }
			_case_begin_4691690848:;
			{
				_90335_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_90335_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4691690496;
			_case_end_4691690848:;
			if (!((_90335_d->_field_constant->_method_is_u64()))) { goto _case_end_4691690960; }
			_case_begin_4691690960:;
			{
				_90335_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_90335_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4691690496;
			_case_end_4691690960:;
			_match_end_4691690496:;
		}
		_20683ebaa_normalize_type(_90335_d);
	}
	_90335_d->_field_lvalue=false;
	_90335_d->_field_model=jule::Any(jule::new_struct<_21eedb492_UnaryExprModel>(new( std::nothrow ) _21eedb492_UnaryExprModel(_90335_d->_field_model,jule::Str("+", 1))));
}



inline void _20683ebaa_Eval::_method_eval_unary_caret(jule::Ptr<_20683ebaa_Data>& _92636_d) {
	jule::Ptr<_2300b54e5_Prim> _92713_t = _92636_d->_field_kind->_method_prim();
	if ((_92713_t == nullptr) || (!(_206ec1e1e_is_int(_92713_t->_method_to_str())))) {
		_92636_d=nullptr;
		return;
	}
	if (_92636_d->_method_is_const()) {
		{
			if (!((_92636_d->_field_constant->_method_is_i64()))) { goto _case_end_4691707552; }
			_case_begin_4691707552:;
			{
				_92636_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_92636_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_4691707328;
			_case_end_4691707552:;
			if (!((_92636_d->_field_constant->_method_is_u64()))) { goto _case_end_4691707664; }
			_case_begin_4691707664:;
			{
				_92636_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_92636_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_4691707328;
			_case_end_4691707664:;
			_match_end_4691707328:;
		}
	}
	_92636_d->_field_lvalue=false;
	_92636_d->_field_model=jule::Any(jule::new_struct<_21eedb492_UnaryExprModel>(new( std::nothrow ) _21eedb492_UnaryExprModel(_92636_d->_field_model,jule::Str("^", 1))));
}



inline void _20683ebaa_Eval::_method_eval_unary_excl(jule::Ptr<_20683ebaa_Data>& _95035_d) {
	jule::Ptr<_2300b54e5_Prim> _95113_t = _95035_d->_field_kind->_method_prim();
	if ((_95113_t == nullptr) || (!(_95113_t->_method_is_bool()))) {
		_95035_d=nullptr;
		return;
	}
	if (_95035_d->_method_is_const()) {
		{
			if (!((_95035_d->_field_constant->_method_is_bool()))) { goto _case_end_4691721280; }
			_case_begin_4691721280:;
			{
				_95035_d->_field_constant->_method_set_bool((!(_95035_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_4691721072;
			_case_end_4691721280:;
			_match_end_4691721072:;
		}
	}
	_95035_d->_field_lvalue=false;
	_95035_d->_field_model=jule::Any(jule::new_struct<_21eedb492_UnaryExprModel>(new( std::nothrow ) _21eedb492_UnaryExprModel(_95035_d->_field_model,jule::Str("!", 1))));
}



inline void _20683ebaa_Eval::_method_eval_unary_star(jule::Ptr<_20683ebaa_Data>& _97139_d,_2220dce43_Token& _97150_op) {
	{
		if (!((_97139_d->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4691730128; }
		_case_begin_4691730128:;
		{
			if ((!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_97150_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
			jule::Ptr<_2300b54e5_Ptr> _97821_t = _97139_d->_field_kind->_method_ptr();
			if (_97821_t->_method_is_unsafe()) {
				_97139_d=nullptr;
				return;
			}
			_97139_d->_field_kind=_97821_t->_field_elem;
		}
		goto _match_end_4691728896;
		_case_end_4691730128:;
		if (!((_97139_d->_field_kind->_method_sptr() != nullptr))) { goto _case_end_4691730224; }
		_case_begin_4691730224:;
		{
			_97139_d->_field_kind=_97139_d->_field_kind->_method_sptr()->_field_elem;
		}
		goto _match_end_4691728896;
		_case_end_4691730224:;
		_case_begin_4691729040:;
		{
			_97139_d=nullptr;
			return;
		}
		goto _match_end_4691728896;
		_case_end_4691729040:;
		_match_end_4691728896:;
	}
	_97139_d->_field_constant=nullptr;
	_97139_d->_field_lvalue=true;
	_97139_d->_field_model=jule::Any(jule::new_struct<_21eedb492_UnaryExprModel>(new( std::nothrow ) _21eedb492_UnaryExprModel(_97139_d->_field_model,jule::Str("*", 1))));
}



inline void _20683ebaa_Eval::_method_eval_unary_amper(jule::Ptr<_20683ebaa_Data>& _100136_d) {
	{
		auto &_match_expr{ _100136_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_StructLitExprModel>>())) { goto _case_end_4691750336; }
		_case_begin_4691750336:;
		{
			jule::Ptr<_21eedb492_StructLitExprModel> _100421_lit = _100136_d->_field_model.operator jule::Ptr<_21eedb492_StructLitExprModel>();
			_20683ebaa_make_struct_lit_alloc(_100136_d,_100421_lit);
		}
		goto _match_end_4691743008;
		_case_end_4691750336:;
		_case_begin_4691742464:;
		{
			{
				if (!((_2300b54e5_can_get_ptr(_100136_d)))) { goto _case_end_4691745056; }
				_case_begin_4691745056:;
				{
					_100136_d->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2300b54e5_Ptr>(new( std::nothrow ) _2300b54e5_Ptr(_100136_d->_field_kind->_method_clone()))));
					_100136_d->_field_model=jule::Any(jule::new_struct<_21eedb492_UnaryExprModel>(new( std::nothrow ) _21eedb492_UnaryExprModel(_100136_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_4691744080;
				_case_end_4691745056:;
				_case_begin_4691744256:;
				{
					_100136_d=nullptr;
				}
				goto _match_end_4691744080;
				_case_end_4691744256:;
				_match_end_4691744080:;
			}
		}
		goto _match_end_4691743008;
		_case_end_4691742464:;
		_match_end_4691743008:;
	}
	if (_100136_d != nullptr) {
		_100136_d->_field_constant=nullptr;
		_100136_d->_field_lvalue=false;
		_100136_d->_field_mutable=true;
	}
}



inline void _20683ebaa_Eval::_method_eval_unary_type_decl(jule::Ptr<_20683ebaa_Data>& _103044_d,jule::Ptr<_221d8b043_UnaryExpr>& _103059_u) {
	_2300b54e5_TypeChecker _103117_tc = _2300b54e5_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ptr<_2300b54e5_Referencer>(),_103059_u->_field_op,jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>(),jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>(),jule::Bool());
	{
		auto &_match_expr{ _103059_u->_field_op._field_kind };
		if (!(_match_expr == (jule::Str("*", 1)))) { goto _case_end_4691761936; }
		_case_begin_4691761936:;
		{
			_103044_d->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_103117_tc._method_build_ptr_from_type(_103044_d->_field_kind)));
		}
		goto _match_end_4691758768;
		_case_end_4691761936:;
		if (!(_match_expr == (jule::Str("&", 1)))) { goto _case_end_4691762032; }
		_case_begin_4691762032:;
		{
			_103044_d->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_103117_tc._method_build_sptr_from_type(_103044_d->_field_kind)));
		}
		goto _match_end_4691758768;
		_case_end_4691762032:;
		_case_begin_4691756752:;
		{
			(*this)._method_push_err(_103059_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_103059_u->_field_op._field_kind)}));
			_103044_d=nullptr;
			return;
		}
		goto _match_end_4691758768;
		_case_end_4691756752:;
		_match_end_4691758768:;
	}
	_103044_d->_field_decl=true;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_unary(jule::Ptr<_221d8b043_UnaryExpr> _105334_u) {
	jule::Ptr<_2300b54e5_TypeKind> _105417_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_105417_prefix;
	});
	jule::Ptr<_20683ebaa_Data> _105817_d = this->self->_method_eval_expr_kind(_105334_u->_field_expr);
	if (_105817_d == nullptr) {
		return nullptr;
	}
	if (_105817_d->_field_decl) {
		this->self->_method_eval_unary_type_decl(_105817_d,_105334_u);
		return _105817_d;
	}
	jule::Ptr<_2300b54e5_TypeKind> _106817_cast_kind = _105817_d->_field_cast_kind;
	{
		auto &_match_expr{ _105334_u->_field_op._field_kind };
		if (!(_match_expr == (jule::Str("-", 1)))) { goto _case_end_4691778944; }
		_case_begin_4691778944:;
		{
			this->self->_method_eval_unary_minus(_105817_d);
		}
		goto _match_end_4691777872;
		_case_end_4691778944:;
		if (!(_match_expr == (jule::Str("+", 1)))) { goto _case_end_4691779040; }
		_case_begin_4691779040:;
		{
			this->self->_method_eval_unary_plus(_105817_d);
		}
		goto _match_end_4691777872;
		_case_end_4691779040:;
		if (!(_match_expr == (jule::Str("^", 1)))) { goto _case_end_4691779136; }
		_case_begin_4691779136:;
		{
			this->self->_method_eval_unary_caret(_105817_d);
		}
		goto _match_end_4691777872;
		_case_end_4691779136:;
		if (!(_match_expr == (jule::Str("!", 1)))) { goto _case_end_4691779232; }
		_case_begin_4691779232:;
		{
			this->self->_method_eval_unary_excl(_105817_d);
		}
		goto _match_end_4691777872;
		_case_end_4691779232:;
		if (!(_match_expr == (jule::Str("*", 1)))) { goto _case_end_4691778160; }
		_case_begin_4691778160:;
		{
			this->self->_method_eval_unary_star(_105817_d,_105334_u->_field_op);
		}
		goto _match_end_4691777872;
		_case_end_4691778160:;
		if (!(_match_expr == (jule::Str("&", 1)))) { goto _case_end_4691778256; }
		_case_begin_4691778256:;
		{
			this->self->_method_eval_unary_amper(_105817_d);
		}
		goto _match_end_4691777872;
		_case_end_4691778256:;
		_case_begin_4691773248:;
		{
			_105817_d=nullptr;
		}
		goto _match_end_4691777872;
		_case_end_4691773248:;
		_match_end_4691777872:;
	}
	if (_105817_d == nullptr) {
		this->self->_method_push_err(_105334_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_105334_u->_field_op._field_kind)}));
	} else if (_105817_d->_method_is_const()) {
		_105817_d->_field_model=jule::Any(_105817_d->_field_constant);
	} else if (_106817_cast_kind != nullptr) {
		_105817_d->_field_cast_kind=_106817_cast_kind;
		_20683ebaa_apply_cast_kind(_105817_d);
	}
	return _105817_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_variadic(jule::Ptr<_221d8b043_VariadicExpr> _109137_v) {
	jule::Ptr<_2300b54e5_TypeKind> _109217_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_109217_prefix;
	});
	jule::Ptr<_20683ebaa_Data> _109617_d = this->self->_method_eval_expr_kind(_109137_v->_field_expr);
	if (_109617_d == nullptr) {
		return nullptr;
	}
	if ((!(_109617_d->_field_kind->_method_variadicable()))) {
		this->self->_method_push_err(_109137_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_109617_d->_field_kind->_method_to_str())}));
		return nullptr;
	}
	_109617_d->_field_variadiced=true;
	_109617_d->_field_kind=_109617_d->_field_kind->_method_slc()->_field_elem;
	_109617_d->_field_kind->_field_variadic=true;
	return _109617_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_unsafe(jule::Ptr<_221d8b043_UnsafeExpr> _111235_u) {
	jule::Bool _111313_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ptr<_20683ebaa_Data> _111617_d = this->self->_method_eval_expr_kind(_111235_u->_field_expr);
	this->self->_field_unsafety=_111313_unsafety;
	return _111617_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_arr(jule::Ptr<_221d8b043_SliceExpr> _112332_s) {
	jule::Ptr<_2300b54e5_Arr> _112517_pt = this->self->_field_prefix->_method_arr();
	jule::Ptr<_2300b54e5_Arr> _112717_arr = jule::new_struct_ptr<_2300b54e5_Arr>(new( std::nothrow ) _2300b54e5_Arr(false,0LL,_112517_pt->_field_elem));
	if (_112517_pt->_field_auto) {
		_112717_arr->_field_n=static_cast<jule::I64>(_112332_s->_field_elems.len());
	} else {
		_112717_arr->_field_n=static_cast<jule::I64>(_112332_s->_field_elems.len());
		if (_112717_arr->_field_n > _112517_pt->_field_n) {
			this->self->_method_push_err(_112332_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if (_112717_arr->_field_n < _112517_pt->_field_n) {
			_112717_arr->_field_n=_112517_pt->_field_n;
		}
	}
	jule::Ptr<_21eedb492_ArrayExprModel> _114417_model = jule::new_struct<_21eedb492_ArrayExprModel>(new( std::nothrow ) _21eedb492_ArrayExprModel(_112717_arr,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_112332_s->_field_elems.len()))));
	jule::Ptr<_2300b54e5_TypeKind> _114917_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_112717_arr->_field_elem;
	{
		auto &expr = _112332_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4691827488:;
		if (it != expr.end()) {
			jule::Any _20683ebaa_elem = *it;
			{
				jule::Ptr<_20683ebaa_Data> _115221_d = this->self->_method_eval_expr_kind(_20683ebaa_elem);
				if (_115221_d == nullptr) {
					goto _iter_next_4691827488;
				}
				this->self->_field_s->_method_check_assign_type(false,_112717_arr->_field_elem,_115221_d,_112332_s->_field_token);
				_114417_model->_field_elems = jule::alloc_for_append(_114417_model->_field_elems,1);_114417_model->_field_elems.push(_115221_d->_field_model);
			}
			_iter_next_4691827488:;
			++it;
			goto _iter_begin_4691827488;
		}
		_iter_end_4691827488:;
	}
	this->self->_field_prefix=_114917_prefix;
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_112717_arr)),jule::Ptr<_2300b54e5_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_114417_model),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_exp_slc(jule::Ptr<_221d8b043_SliceExpr> _116936_s,jule::Ptr<_2300b54e5_TypeKind> _116955_elem_type) {
	jule::Ptr<_2300b54e5_Slc> _117017_slc = jule::new_struct_ptr<_2300b54e5_Slc>(new( std::nothrow ) _2300b54e5_Slc(_116955_elem_type));
	jule::Ptr<_21eedb492_SliceExprModel> _117417_model = jule::new_struct<_21eedb492_SliceExprModel>(new( std::nothrow ) _21eedb492_SliceExprModel(_116955_elem_type,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_116936_s->_field_elems.len()))));
	jule::Ptr<_2300b54e5_TypeKind> _117917_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_117017_slc->_field_elem;
	{
		auto &expr = _116936_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4691842384:;
		if (it != expr.end()) {
			jule::Any _20683ebaa_elem = *it;
			{
				jule::Ptr<_20683ebaa_Data> _118221_d = this->self->_method_eval_expr_kind(_20683ebaa_elem);
				if (_118221_d == nullptr) {
					goto _iter_next_4691842384;
				}
				this->self->_field_s->_method_check_assign_type(false,_117017_slc->_field_elem,_118221_d,_116936_s->_field_token);
				_117417_model->_field_elems = jule::alloc_for_append(_117417_model->_field_elems,1);_117417_model->_field_elems.push(_118221_d->_field_model);
			}
			_iter_next_4691842384:;
			++it;
			goto _iter_begin_4691842384;
		}
		_iter_end_4691842384:;
	}
	this->self->_field_prefix=_117917_prefix;
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_117017_slc)),jule::Ptr<_2300b54e5_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_117417_model),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_slice_expr(jule::Ptr<_221d8b043_SliceExpr> _119939_s) {
	if (this->self->_field_prefix != nullptr) {
		{
			if (!((this->self->_field_prefix->_method_arr() != nullptr))) { goto _case_end_4691854016; }
			_case_begin_4691854016:;
			{
				return this->self->_method_eval_arr(_119939_s);
			}
			goto _match_end_4691853792;
			_case_end_4691854016:;
			if (!((this->self->_field_prefix->_method_slc() != nullptr))) { goto _case_end_4691854128; }
			_case_begin_4691854128:;
			{
				jule::Ptr<_2300b54e5_Slc> _120625_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_119939_s,_120625_pt->_field_elem);
			}
			goto _match_end_4691853792;
			_case_end_4691854128:;
			_match_end_4691853792:;
		}
	}
	jule::Ptr<_2300b54e5_TypeKind> _121117_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	if (_119939_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_119939_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_20683ebaa_Data> _121917_first_elem = this->self->_method_eval_expr_kind(_119939_s->_field_elems[0LL]);
	if (_121917_first_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_20683ebaa_Data> _122417_d = this->self->_method_eval_exp_slc(_119939_s,_121917_first_elem->_field_kind);
	this->self->_field_prefix=_121117_prefix;
	return _122417_d;
}



inline void _20683ebaa_Eval::_method_check_integer_indexing_by_data(jule::Ptr<_20683ebaa_Data>& _123054_d,_2220dce43_Token _123064_token) {
	jule::Str _123113_err_key = _20683ebaa_check_data_for_integer_indexing(_123054_d);
	{
		auto &_match_expr{ _123113_err_key };
		if (!(_match_expr == (jule::Str()))) { goto _case_end_4691870944; }
		_case_begin_4691870944:;
		{
			return;
		}
		goto _match_end_4691870800;
		_case_end_4691870944:;
		if (!(_match_expr == (jule::Str("type \"@\" is invalid for indexing", 32)))) { goto _case_end_4691871264; }
		_case_begin_4691871264:;
		{
			(*this)._method_push_err(_123064_token,_123113_err_key,jule::Slice<jule::Any>({jule::Any(_123054_d->_field_kind->_method_to_str())}));
		}
		goto _match_end_4691870800;
		_case_end_4691871264:;
		_case_begin_4691869728:;
		{
			(*this)._method_push_err(_123064_token,_123113_err_key,jule::Slice<jule::Any>());
		}
		goto _match_end_4691870800;
		_case_end_4691869728:;
		_match_end_4691870800:;
	}
}



inline void _20683ebaa_Eval::_method_indexing_ptr(jule::Ptr<_20683ebaa_Data>& _124436_d,jule::Ptr<_20683ebaa_Data>& _124451_index,jule::Ptr<_221d8b043_IndexingExpr>& _124466_i) {
	(*this)._method_check_integer_indexing_by_data(_124451_index,_124466_i->_field_token);
	jule::Ptr<_2300b54e5_Ptr> _124717_ptr = _124436_d->_field_kind->_method_ptr();
	{
		if (!((_124717_ptr->_method_is_unsafe()))) { goto _case_end_4691881776; }
		_case_begin_4691881776:;
		{
			(*this)._method_push_err(_124466_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>());
			return;
		}
		goto _match_end_4691881536;
		_case_end_4691881776:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_4691881872; }
		_case_begin_4691881872:;
		{
			(*this)._method_push_err(_124466_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		goto _match_end_4691881536;
		_case_end_4691881872:;
		_match_end_4691881536:;
	}
	_124436_d->_field_kind=_124717_ptr->_field_elem->_method_clone();
}



inline void _20683ebaa_Eval::_method_indexing_arr(jule::Ptr<_20683ebaa_Data>& _126036_d,jule::Ptr<_20683ebaa_Data>& _126051_index,jule::Ptr<_221d8b043_IndexingExpr>& _126066_i) {
	jule::Ptr<_2300b54e5_Arr> _126117_arr = _126036_d->_field_kind->_method_arr();
	_126036_d->_field_kind=_126117_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_126051_index,_126066_i->_field_token);
	if (_126051_index->_method_is_const() && (_126051_index->_field_constant->_method_as_f64() >= static_cast<jule::F64>(_126117_arr->_field_n))) {
		(*this)._method_push_err(_126066_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	}
}



inline void _20683ebaa_Eval::_method_indexing_slc(jule::Ptr<_20683ebaa_Data>& _126936_d,jule::Ptr<_20683ebaa_Data>& _126951_index,jule::Ptr<_221d8b043_IndexingExpr>& _126966_i) {
	jule::Ptr<_2300b54e5_Slc> _127017_slc = _126936_d->_field_kind->_method_slc();
	_126936_d->_field_kind=_127017_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_126951_index,_126966_i->_field_token);
	if ((!(_126951_index->_method_is_const()))) {
		return;
	}
	{
		auto &_match_expr{ _126936_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_SliceExprModel>>())) { goto _case_end_4691906560; }
		_case_begin_4691906560:;
		{
			jule::Ptr<_21eedb492_SliceExprModel> _128021_m = _126936_d->_field_model.operator jule::Ptr<_21eedb492_SliceExprModel>();
			jule::F64 _128117_indx = _126951_index->_field_constant->_method_as_f64();
			if (_128117_indx >= static_cast<jule::F64>(_128021_m->_field_elems.len())) {
				(*this)._method_push_err(_126966_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			} else {
				_126936_d->_field_model=_128021_m->_field_elems[static_cast<jule::Int>(static_cast<jule::U64>(_128117_indx))];
				_126936_d->_field_decl=true;
			}
		}
		goto _match_end_4691907040;
		_case_end_4691906560:;
		_match_end_4691907040:;
	}
}



inline void _20683ebaa_Eval::_method_indexing_map(jule::Ptr<_20683ebaa_Data>& _129136_d,jule::Ptr<_20683ebaa_Data>& _129151_index,jule::Ptr<_221d8b043_IndexingExpr>& _129170_i) {
	if (_129151_index == nullptr) {
		return;
	}
	jule::Ptr<_2300b54e5_Map> _129617_m = _129136_d->_field_kind->_method_map();
	_2200223c9_AssignTypeChecker _129717_atc = _2200223c9_AssignTypeChecker((*this)._field_s,_129617_m->_field_key,_129151_index,_129170_i->_field_token);
	_129717_atc._method_check();
	_129136_d->_field_kind=_129617_m->_field_val->_method_clone();
}



inline void _20683ebaa_Eval::_method_indexing_str(jule::Ptr<_20683ebaa_Data>& _130836_d,jule::Ptr<_20683ebaa_Data>& _130851_index,jule::Ptr<_221d8b043_IndexingExpr>& _130866_i) {
	
	_130836_d->_field_kind->_field_kind=_2300b54e5_build_prim_type(jule::Str("u8", 2));
	if (_130851_index == nullptr) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_130851_index,_130866_i->_field_token);
	if ((!(_130851_index->_method_is_const()))) {
		_130836_d->_field_constant=nullptr;
		return;
	}
	if (_130836_d->_method_is_const()) {
		_2220dce43_Token _132417_error_token = _130866_i->_field_token;
		jule::I64 _132517_j = _130851_index->_field_constant->_method_as_i64();
		jule::Str _132617_s = _130836_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_132517_j) >= _132617_s.len()) {
			(*this)._method_push_err(_132417_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_130836_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_132617_s[_132517_j]));
		}
	}
}



inline void _20683ebaa_Eval::_method_to_indexing(jule::Ptr<_20683ebaa_Data>& _133535_d,jule::Ptr<_20683ebaa_Data>& _133550_index,jule::Ptr<_221d8b043_IndexingExpr>& _133569_i) {
	{
		if (!((_133535_d->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4691946688; }
		_case_begin_4691946688:;
		{
			(*this)._method_indexing_ptr(_133535_d,_133550_index,_133569_i);
			return;
		}
		goto _match_end_4691946416;
		_case_end_4691946688:;
		if (!((_133535_d->_field_kind->_method_arr() != nullptr))) { goto _case_end_4691946800; }
		_case_begin_4691946800:;
		{
			(*this)._method_indexing_arr(_133535_d,_133550_index,_133569_i);
			return;
		}
		goto _match_end_4691946416;
		_case_end_4691946800:;
		if (!((_133535_d->_field_kind->_method_slc() != nullptr))) { goto _case_end_4691946912; }
		_case_begin_4691946912:;
		{
			(*this)._method_indexing_slc(_133535_d,_133550_index,_133569_i);
			return;
		}
		goto _match_end_4691946416;
		_case_end_4691946912:;
		if (!((_133535_d->_field_kind->_method_map() != nullptr))) { goto _case_end_4691947024; }
		_case_begin_4691947024:;
		{
			(*this)._method_indexing_map(_133535_d,_133550_index,_133569_i);
			return;
		}
		goto _match_end_4691946416;
		_case_end_4691947024:;
		if (!((_133535_d->_field_kind->_method_prim() != nullptr))) { goto _case_end_4691947136; }
		_case_begin_4691947136:;
		{
			jule::Ptr<_2300b54e5_Prim> _135417_prim = _133535_d->_field_kind->_method_prim();
			{
				if (!((_135417_prim->_method_is_str()))) { goto _case_end_4691959888; }
				_case_begin_4691959888:;
				{
					(*this)._method_indexing_str(_133535_d,_133550_index,_133569_i);
					return;
				}
				goto _match_end_4691959744;
				_case_end_4691959888:;
				_match_end_4691959744:;
			}
		}
		goto _match_end_4691946416;
		_case_end_4691947136:;
		_match_end_4691946416:;
	}
	(*this)._method_push_err(_133569_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_133535_d->_field_kind->_method_to_str())}));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_ident_decl_from_indexing(jule::Ptr<_221d8b043_IndexingExpr>& _136554_i) {
	{
		auto &_match_expr{ _136554_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_IdentExpr>>())) { goto _case_end_4691968672; }
		goto _match_end_4691966176;
		_case_end_4691968672:;
		_case_begin_4691965632:;
		{
			this->self->_method_push_err(_136554_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4691966176;
		_case_end_4691965632:;
		_match_end_4691966176:;
	}
	jule::Ptr<_221d8b043_IdentTypeDecl> _137317_decl = jule::new_struct<_221d8b043_IdentTypeDecl>(new( std::nothrow ) _221d8b043_IdentTypeDecl(_2220dce43_Token(),_136554_i->_field_expr.operator jule::Ptr<_221d8b043_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_221d8b043_TypeDecl>>()));
	{
		auto &_match_expr{ _136554_i->_field_index };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_UnaryExpr>>())) { goto _case_end_4691973360; }
		_case_begin_4691973360:;
		{
			jule::Ptr<_20683ebaa_Data> _138121_d = this->self->_method_eval_unary(_136554_i->_field_index.operator jule::Ptr<_221d8b043_UnaryExpr>());
			if ((!(_138121_d->_field_decl))) {
				this->self->_method_push_err(_136554_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			_137317_decl->_field_generics = jule::alloc_for_append(_137317_decl->_field_generics,1);_137317_decl->_field_generics.push(jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_2220dce43_Token(),jule::Any(_138121_d->_field_kind))));
		}
		goto _match_end_4691970832;
		_case_end_4691973360:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TypeDecl>>())) { goto _case_end_4691973552; }
		_case_begin_4691973552:;
		{
			_137317_decl->_field_generics = jule::alloc_for_append(_137317_decl->_field_generics,1);_137317_decl->_field_generics.push(_136554_i->_field_index.operator jule::Ptr<_221d8b043_TypeDecl>());
		}
		goto _match_end_4691970832;
		_case_end_4691973552:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_IdentExpr>>())) { goto _case_end_4691973648; }
		_case_begin_4691973648:;
		{
			_137317_decl->_field_generics = jule::alloc_for_append(_137317_decl->_field_generics,1);_137317_decl->_field_generics.push(jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_2220dce43_Token(),jule::Any(jule::new_struct<_221d8b043_IdentTypeDecl>(new( std::nothrow ) _221d8b043_IdentTypeDecl(_2220dce43_Token(),_136554_i->_field_index.operator jule::Ptr<_221d8b043_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_221d8b043_TypeDecl>>()))))));
		}
		goto _match_end_4691970832;
		_case_end_4691973648:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TupleExpr>>())) { goto _case_end_4691973088; }
		_case_begin_4691973088:;
		{
			{
				auto &expr = _136554_i->_field_index.operator jule::Ptr<_221d8b043_TupleExpr>()->_field_expr;
				auto it = expr.begin();
				_iter_begin_4691979072:;
				if (it != expr.end()) {
					jule::Ptr<_221d8b043_Expr> _20683ebaa_expr = *it;
					{
						{
							auto &_match_expr{ _20683ebaa_expr->_field_kind };
							if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TypeDecl>>())) { goto _case_end_4691987376; }
							_case_begin_4691987376:;
							{
								_137317_decl->_field_generics = jule::alloc_for_append(_137317_decl->_field_generics,1);_137317_decl->_field_generics.push(_20683ebaa_expr->_field_kind.operator jule::Ptr<_221d8b043_TypeDecl>());
							}
							goto _match_end_4691988064;
							_case_end_4691987376:;
							if (!(_match_expr.type_is<jule::Ptr<_221d8b043_IdentExpr>>())) { goto _case_end_4691988144; }
							_case_begin_4691988144:;
							{
								_137317_decl->_field_generics = jule::alloc_for_append(_137317_decl->_field_generics,1);_137317_decl->_field_generics.push(jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_2220dce43_Token(),jule::Any(jule::new_struct<_221d8b043_IdentTypeDecl>(new( std::nothrow ) _221d8b043_IdentTypeDecl(_2220dce43_Token(),_20683ebaa_expr->_field_kind.operator jule::Ptr<_221d8b043_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_221d8b043_TypeDecl>>()))))));
							}
							goto _match_end_4691988064;
							_case_end_4691988144:;
							_match_end_4691988064:;
						}
					}
					_iter_next_4691979072:;
					++it;
					goto _iter_begin_4691979072;
				}
				_iter_end_4691979072:;
			}
		}
		goto _match_end_4691970832;
		_case_end_4691973088:;
		_case_begin_4691966608:;
		{
			this->self->_method_push_err(_136554_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4691970832;
		_case_end_4691966608:;
		_match_end_4691970832:;
	}
	return this->self->_method_eval_type(jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_2220dce43_Token(),jule::Any(_137317_decl))));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_indexing(jule::Ptr<_221d8b043_IndexingExpr> _141737_i) {
	jule::Ptr<_2300b54e5_TypeKind> _141817_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_141817_prefix;
	});
	jule::Ptr<_20683ebaa_Data> _142217_d = this->self->_method_eval_expr_kind(_141737_i->_field_expr);
	if (_142217_d == nullptr) {
		return nullptr;
	}
	if (_142217_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_141737_i);
	}
	_20683ebaa_Data _143217_old_d = (*(_142217_d));
	jule::Ptr<_20683ebaa_Data> _143417_index = this->self->_method_eval_expr_kind(_141737_i->_field_index);
	if (_143417_index == nullptr) {
		return nullptr;
	}
	_142217_d->_field_decl=false;
	this->self->_method_to_indexing(_142217_d,_143417_index,_141737_i);
	if (_142217_d->_method_is_const()) {
		_142217_d->_field_decl=false;
		_142217_d->_field_model=jule::Any(_142217_d->_field_constant);
	} else if (_142217_d->_field_decl) {
		_142217_d->_field_decl=false;
	} else {
		_142217_d->_field_model=jule::Any(jule::new_struct<_21eedb492_IndexigExprModel>(new( std::nothrow ) _21eedb492_IndexigExprModel(jule::new_ptr<_20683ebaa_Data>(_143217_old_d),_143417_index)));
	}
	return _142217_d;
}



inline std::tuple<jule::Ptr<_20683ebaa_Data>,jule::Ptr<_20683ebaa_Data>> _20683ebaa_Eval::_method_eval_slicing_exprs(jule::Ptr<_221d8b043_SlicingExpr>& _146443_s) {
	jule::Ptr<_2300b54e5_TypeKind> _146517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_146517_prefix;
	});
	jule::Ptr<_20683ebaa_Data> _146917_l = nullptr;
	jule::Ptr<_20683ebaa_Data> _147017_r = nullptr;
	if (_146443_s->_field_start != nullptr) {
		_146917_l=this->self->_method_eval_expr_kind(_146443_s->_field_start);
		if (_146917_l != nullptr) {
			this->self->_method_check_integer_indexing_by_data(_146917_l,_146443_s->_field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	} else {
		_146917_l=jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_206e210e3_Const::_static_method_new_i64(0LL)));
		_146917_l->_field_model=jule::Any(_146917_l->_field_constant);
	}
	if (_146443_s->_field_to != nullptr) {
		_147017_r=this->self->_method_eval_expr_kind(_146443_s->_field_to);
		if (_147017_r != nullptr) {
			this->self->_method_check_integer_indexing_by_data(_147017_r,_146443_s->_field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	}
	return std::make_tuple(_146917_l,_147017_r);
}



inline void _20683ebaa_Eval::_method_slicing_arr(jule::Ptr<_20683ebaa_Data>& _149931_d) {
	jule::Ptr<_2300b54e5_TypeKind> _150017_elem_type = _149931_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_149931_d->_field_kind->_field_kind=jule::new_struct_ptr<_2300b54e5_Slc>(new( std::nothrow ) _2300b54e5_Slc(_150017_elem_type));
	_149931_d->_field_lvalue=false;
	_149931_d->_field_mutable=_149931_d->_field_mutable || (!(_150017_elem_type->_method_mutable()));
}



inline void _20683ebaa_Eval::_method_slicing_slc(jule::Ptr<_20683ebaa_Data>& _151031_d) {
	_151031_d->_field_lvalue=false;
}



inline void _20683ebaa_Eval::_method_slicing_str(jule::Ptr<_20683ebaa_Data>& _151431_d,jule::Ptr<_20683ebaa_Data>& _151442_l,jule::Ptr<_20683ebaa_Data>& _151453_r) {
	_151431_d->_field_lvalue=false;
	_151431_d->_field_mutable=true;
	if ((!(_151431_d->_method_is_const()))) {
		return;
	}
	if ((_151442_l == nullptr) || (_151453_r == nullptr)) {
		_151431_d->_field_constant=nullptr;
		return;
	}
	if (_151442_l->_method_is_const() && _151453_r->_method_is_const()) {
		jule::I64 _152717_left = _151442_l->_field_constant->_method_as_i64();
		if (_152717_left < 0LL) {
			return;
		}
		jule::Str _153217_s = _151431_d->_field_constant->_method_read_str();
		jule::I64 _153321_right = 0LL;
		if (_151453_r == nullptr) {
			_153321_right=static_cast<jule::I64>(_153217_s.len());
		} else {
			_153321_right=static_cast<jule::I64>(_151453_r->_field_constant->_method_as_i64());
		}
		if (_152717_left > _153321_right) {
			return;
		}
		_151431_d->_field_constant->_method_set_str(_153217_s.slice(_152717_left,_153321_right));
		_151431_d->_field_decl=true;
	} else {
		_151431_d->_field_constant=nullptr;
	}
}



inline void _20683ebaa_Eval::_method_check_slicing(jule::Ptr<_20683ebaa_Data>& _155037_d,jule::Ptr<_20683ebaa_Data>& _155048_l,jule::Ptr<_20683ebaa_Data>& _155059_r,jule::Ptr<_221d8b043_SlicingExpr>& _155070_s) {
	{
		if (!((_155037_d->_field_kind->_method_arr() != nullptr))) { goto _case_end_4692059344; }
		_case_begin_4692059344:;
		{
			(*this)._method_slicing_arr(_155037_d);
			return;
		}
		goto _match_end_4692059168;
		_case_end_4692059344:;
		if (!((_155037_d->_field_kind->_method_slc() != nullptr))) { goto _case_end_4692059456; }
		_case_begin_4692059456:;
		{
			(*this)._method_slicing_slc(_155037_d);
			return;
		}
		goto _match_end_4692059168;
		_case_end_4692059456:;
		if (!((_155037_d->_field_kind->_method_prim() != nullptr))) { goto _case_end_4692059568; }
		_case_begin_4692059568:;
		{
			jule::Ptr<_2300b54e5_Prim> _156117_prim = _155037_d->_field_kind->_method_prim();
			{
				if (!((_156117_prim->_method_is_str()))) { goto _case_end_4692067584; }
				_case_begin_4692067584:;
				{
					(*this)._method_slicing_str(_155037_d,_155048_l,_155059_r);
					return;
				}
				goto _match_end_4692067440;
				_case_end_4692067584:;
				_match_end_4692067440:;
			}
		}
		goto _match_end_4692059168;
		_case_end_4692059568:;
		_match_end_4692059168:;
	}
	(*this)._method_push_err(_155070_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_155037_d->_field_kind->_method_to_str())}));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_slicing(jule::Ptr<_221d8b043_SlicingExpr> _157236_s) {
	jule::Ptr<_20683ebaa_Data> _157317_d = this->self->_method_eval_expr_kind(_157236_s->_field_expr);
	if (_157317_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_20683ebaa_Data> _157818_l;
	jule::Ptr<_20683ebaa_Data> _157825_r;
	std::tie(_157818_l,_157825_r) = this->self->_method_eval_slicing_exprs(_157236_s);
	if (_157818_l == nullptr) {
		return _157317_d;
	}
	_157317_d->_field_decl=false;
	this->self->_method_check_slicing(_157317_d,_157818_l,_157825_r,_157236_s);
	_157317_d->_field_cast_kind=nullptr;
	if (_157317_d->_method_is_const()) {
		_157317_d->_field_decl=false;
		_157317_d->_field_model=jule::Any(_157317_d->_field_constant);
	} else if (_157317_d->_field_decl) {
		_157317_d->_field_decl=false;
	} else {
		jule::Ptr<_21eedb492_SlicingExprModel> _159721_model = jule::new_struct<_21eedb492_SlicingExprModel>(new( std::nothrow ) _21eedb492_SlicingExprModel(_157317_d->_field_model,_157818_l->_field_model,jule::Any()));
		if (_157825_r != nullptr) {
			_159721_model->_field_right=_157825_r->_field_model;
		}
		_157317_d->_field_model=jule::Any(_159721_model);
	}
	return _157317_d;
}



inline void _20683ebaa_Eval::_method_cast_ptr(jule::Ptr<_2300b54e5_TypeKind> _161231_t,jule::Ptr<_20683ebaa_Data> _161249_d,_2220dce43_Token _161259_error_token) {
	jule::Ptr<_2300b54e5_Sptr> _161313_sptr = _161249_d->_field_kind->_method_sptr();
	if (_161313_sptr != nullptr) {
		if ((!(_161231_t->_method_ptr()->_field_elem->_method_equals(_161313_sptr->_field_elem)))) {
			(*this)._method_push_err(_161259_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_161249_d->_field_kind->_method_to_str()),jule::Any(_161231_t->_method_to_str())}));
		}
		return;
	}
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_161259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_2300b54e5_Prim> _162613_prim = _161249_d->_field_kind->_method_prim();
	if ((_161249_d->_field_kind->_method_ptr() == nullptr) && ((_162613_prim == nullptr) || (!(_206ec1e1e_is_int(_162613_prim->_method_to_str()))))) {
		(*this)._method_push_err(_161259_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_161249_d->_field_kind->_method_to_str()),jule::Any(_161231_t->_method_to_str())}));
	}
	_161249_d->_field_constant=nullptr;
}



inline void _20683ebaa_Eval::_method_cast_struct(jule::Ptr<_2300b54e5_TypeKind> _163434_t,jule::Ptr<_20683ebaa_Data> _163452_d,_2220dce43_Token _163462_error_token) {
	jule::Ptr<_2300167cb_Trait> _163517_tr = _163452_d->_field_kind->_method_trt();
	if (_163517_tr == nullptr) {
		(*this)._method_push_err(_163462_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_163452_d->_field_kind->_method_to_str()),jule::Any(_163434_t->_method_to_str())}));
		return;
	}
	jule::Ptr<_2398d04dc_StructIns> _164117_s = _163434_t->_method_strct();
	(*this)._method_push_reference_to_struct(_164117_s);
	if ((!(_164117_s->_field_decl->_method_is_implements(_163517_tr)))) {
		(*this)._method_push_err(_163462_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_163452_d->_field_kind->_method_to_str()),jule::Any(_163434_t->_method_to_str())}));
	}
}



inline void _20683ebaa_Eval::_method_cast_ref(jule::Ptr<_2300b54e5_TypeKind> _164931_t,jule::Ptr<_20683ebaa_Data> _164949_d,_2220dce43_Token _164959_error_token) {
	jule::Ptr<_2300b54e5_Sptr> _165017_sptr = _164931_t->_method_sptr();
	jule::Ptr<_2300b54e5_Ptr> _165217_ptr = _164949_d->_field_kind->_method_ptr();
	if ((_165217_ptr != nullptr) && _165017_sptr->_field_elem->_method_equals(_165217_ptr->_field_elem)) {
		if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_164959_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		return;
	}
	if (_165017_sptr->_field_elem->_method_strct() != nullptr) {
		(*this)._method_cast_struct(_165017_sptr->_field_elem,_164949_d,_164959_error_token);
		return;
	}
	(*this)._method_push_err(_164959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_164949_d->_field_kind->_method_to_str()),jule::Any(_164931_t->_method_to_str())}));
}



inline void _20683ebaa_Eval::_method_cast_slc(jule::Ptr<_2300b54e5_TypeKind> _167131_t,jule::Ptr<_20683ebaa_Data> _167149_d,_2220dce43_Token _167159_error_token) {
	if (_167149_d->_field_kind->_method_enm() != nullptr) {
		if ((_167149_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim() == nullptr) || (!(_167149_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_167159_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_167149_d->_field_kind->_method_to_str()),jule::Any(_167131_t->_method_to_str())}));
			return;
		}
	} else if ((_167149_d->_field_kind->_method_prim() == nullptr) || (!(_167149_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_167159_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_167149_d->_field_kind->_method_to_str()),jule::Any(_167131_t->_method_to_str())}));
		return;
	}
	_167131_t=_167131_t->_method_slc()->_field_elem;
	jule::Ptr<_2300b54e5_Prim> _168313_prim = _167131_t->_method_prim();
	if ((_168313_prim == nullptr) || ((!(_168313_prim->_method_is_u8())) && (!(_168313_prim->_method_is_i32())))) {
		(*this)._method_push_err(_167159_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_167149_d->_field_kind->_method_to_str()),jule::Any(_167131_t->_method_to_str())}));
	}
}



inline void _20683ebaa_Eval::_method_cast_str(jule::Ptr<_20683ebaa_Data> _168931_d,_2220dce43_Token _168941_error_token) {
	if (_168931_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_23001604a_Enum> _169121_e = _168931_d->_field_kind->_method_enm();
		if ((_169121_e->_field_kind->_field_kind->_method_prim() != nullptr) && _169121_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (_168931_d->_field_kind->_method_prim() != nullptr) {
		jule::Ptr<_2300b54e5_Prim> _169817_prim = _168931_d->_field_kind->_method_prim();
		if ((!(_169817_prim->_method_is_u8())) && (!(_169817_prim->_method_is_i32()))) {
			(*this)._method_push_err(_168941_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_168931_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if (_168931_d->_field_kind->_method_slc() == nullptr) {
		(*this)._method_push_err(_168941_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_168931_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ptr<_2300b54e5_TypeKind> _171017_t = _168931_d->_field_kind->_method_slc()->_field_elem;
	jule::Ptr<_2300b54e5_Prim> _171113_prim = _171017_t->_method_prim();
	if ((_171113_prim == nullptr) || ((!(_171113_prim->_method_is_u8())) && (!(_171113_prim->_method_is_i32())))) {
		(*this)._method_push_err(_168941_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_168931_d->_field_kind->_method_to_str())}));
	}
}



inline void _20683ebaa_Eval::_method_cast_int(jule::Ptr<_2300b54e5_TypeKind> _171731_t,jule::Ptr<_20683ebaa_Data> _171749_d,_2220dce43_Token _171759_error_token) {
	if (_171749_d->_method_is_const()) {
		jule::Ptr<_2300b54e5_Prim> _171917_prim = _171731_t->_method_prim();
		{
			if (!((_206ec1e1e_is_sig_int(_171917_prim->_field_kind)))) { goto _case_end_4692185200; }
			_case_begin_4692185200:;
			{
				_171749_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_171749_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4692185040;
			_case_end_4692185200:;
			if (!((_206ec1e1e_is_unsig_int(_171917_prim->_field_kind)))) { goto _case_end_4692185312; }
			_case_begin_4692185312:;
			{
				_171749_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_171749_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4692185040;
			_case_end_4692185312:;
			_match_end_4692185040:;
		}
	}
	if (_171749_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_23001604a_Enum> _173017_e = _171749_d->_field_kind->_method_enm();
		if (_206ec1e1e_is_num(_173017_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (_171749_d->_field_kind->_method_sptr() != nullptr) {
		jule::Ptr<_2300b54e5_Prim> _173717_prim = _171731_t->_method_prim();
		if ((!(_173717_prim->_method_is_uintptr()))) {
			(*this)._method_push_err(_171759_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_171749_d->_field_kind->_method_to_str()),jule::Any(_171731_t->_method_to_str())}));
		}
		return;
	}
	if (_171749_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_2300b54e5_Prim> _174417_prim = _171731_t->_method_prim();
		if (_174417_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_171759_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if (((((!(_174417_prim->_method_is_i32())) && (!(_174417_prim->_method_is_i64()))) && (!(_174417_prim->_method_is_u16()))) && (!(_174417_prim->_method_is_u32()))) && (!(_174417_prim->_method_is_u64()))) {
			(*this)._method_push_err(_171759_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_171749_d->_field_kind->_method_to_str()),jule::Any(_171731_t->_method_to_str())}));
		}
		return;
	}
	jule::Ptr<_2300b54e5_Prim> _175513_prim = _171749_d->_field_kind->_method_prim();
	if ((_175513_prim != nullptr) && _206ec1e1e_is_num(_175513_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_171759_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_171749_d->_field_kind->_method_to_str()),jule::Any(_171731_t->_method_to_str())}));
}



inline void _20683ebaa_Eval::_method_cast_num(jule::Ptr<_2300b54e5_TypeKind> _176331_t,jule::Ptr<_20683ebaa_Data> _176349_d,_2220dce43_Token _176359_error_token) {
	if (_176349_d->_method_is_const()) {
		jule::Ptr<_2300b54e5_Prim> _176517_prim = _176331_t->_method_prim();
		{
			if (!((_206ec1e1e_is_float(_176517_prim->_field_kind)))) { goto _case_end_4692225184; }
			_case_begin_4692225184:;
			{
				_176349_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_176349_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_4692225008;
			_case_end_4692225184:;
			if (!((_206ec1e1e_is_sig_int(_176517_prim->_field_kind)))) { goto _case_end_4692225296; }
			_case_begin_4692225296:;
			{
				_176349_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_176349_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4692225008;
			_case_end_4692225296:;
			if (!((_206ec1e1e_is_unsig_int(_176517_prim->_field_kind)))) { goto _case_end_4692225408; }
			_case_begin_4692225408:;
			{
				_176349_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_176349_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4692225008;
			_case_end_4692225408:;
			_match_end_4692225008:;
		}
	}
	if (_176349_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_23001604a_Enum> _177917_e = _176349_d->_field_kind->_method_enm();
		if (_206ec1e1e_is_num(_177917_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ptr<_2300b54e5_Prim> _178513_prim = _176349_d->_field_kind->_method_prim();
	if ((_178513_prim != nullptr) && _206ec1e1e_is_num(_178513_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_176359_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_176349_d->_field_kind->_method_to_str()),jule::Any(_176331_t->_method_to_str())}));
}



inline void _20683ebaa_Eval::_method_cast_prim(jule::Ptr<_2300b54e5_TypeKind> _179332_t,jule::Ptr<_20683ebaa_Data> _179350_d,_2220dce43_Token _179360_error_token) {
	jule::Ptr<_2300b54e5_Prim> _179413_prim = _179332_t->_method_prim();
	{
		if (!((_179413_prim->_method_is_any()))) { goto _case_end_4692248496; }
		goto _match_end_4692247584;
		_case_end_4692248496:;
		if (!((_179413_prim->_method_is_str()))) { goto _case_end_4692248000; }
		_case_begin_4692248000:;
		{
			(*this)._method_cast_str(_179350_d,_179360_error_token);
		}
		goto _match_end_4692247584;
		_case_end_4692248000:;
		if (!((_206ec1e1e_is_int(_179413_prim->_method_to_str())))) { goto _case_end_4692248096; }
		_case_begin_4692248096:;
		{
			(*this)._method_cast_int(_179332_t,_179350_d,_179360_error_token);
		}
		goto _match_end_4692247584;
		_case_end_4692248096:;
		if (!((_206ec1e1e_is_num(_179413_prim->_method_to_str())))) { goto _case_end_4692248192; }
		_case_begin_4692248192:;
		{
			(*this)._method_cast_num(_179332_t,_179350_d,_179360_error_token);
		}
		goto _match_end_4692247584;
		_case_end_4692248192:;
		_case_begin_4692247696:;
		{
			(*this)._method_push_err(_179360_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_179332_t->_method_to_str())}));
		}
		goto _match_end_4692247584;
		_case_end_4692247696:;
		_match_end_4692247584:;
	}
}



inline void _20683ebaa_Eval::_method_cast_constant(jule::Ptr<_2300b54e5_TypeKind>& _181337_t,jule::Ptr<_20683ebaa_Data>& _181356_d) {
	jule::Ptr<_2300b54e5_Prim> _181413_prim = _181337_t->_method_prim();
	if ((_181413_prim == nullptr) || (!(_181356_d->_method_is_const()))) {
		return;
	}
	{
		if (!((_206ec1e1e_is_sig_int(_181413_prim->_field_kind)))) { goto _case_end_4692262912; }
		_case_begin_4692262912:;
		{
			_181356_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_181356_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4692261792;
		_case_end_4692262912:;
		if (!((_206ec1e1e_is_unsig_int(_181413_prim->_field_kind)))) { goto _case_end_4692263008; }
		_case_begin_4692263008:;
		{
			_181356_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_181356_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4692261792;
		_case_end_4692263008:;
		if (!((_206ec1e1e_is_float(_181413_prim->_field_kind)))) { goto _case_end_4692263104; }
		_case_begin_4692263104:;
		{
			_181356_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_181356_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4692261792;
		_case_end_4692263104:;
		_match_end_4692261792:;
	}
	_181356_d->_field_model=jule::Any(_181356_d->_field_constant);
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_cast_by_type_n_data(jule::Ptr<_2300b54e5_TypeKind> _183347_t,jule::Ptr<_20683ebaa_Data> _183365_d,_2220dce43_Token _183375_error_token) {
	{
		if (!(((_183365_d->_field_kind->_method_prim() != nullptr) && _183365_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4692278912; }
		_case_begin_4692278912:;
		{
			if (_183347_t->_method_enm() != nullptr) {
				(*this)._method_push_err(_183375_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
			}
		}
		goto _match_end_4692275952;
		_case_end_4692278912:;
		if (!((_183347_t->_method_ptr() != nullptr))) { goto _case_end_4692279008; }
		_case_begin_4692279008:;
		{
			(*this)._method_cast_ptr(_183347_t,_183365_d,_183375_error_token);
		}
		goto _match_end_4692275952;
		_case_end_4692279008:;
		if (!((_183347_t->_method_sptr() != nullptr))) { goto _case_end_4692279104; }
		_case_begin_4692279104:;
		{
			(*this)._method_cast_ref(_183347_t,_183365_d,_183375_error_token);
		}
		goto _match_end_4692275952;
		_case_end_4692279104:;
		if (!((_183347_t->_method_slc() != nullptr))) { goto _case_end_4692276432; }
		_case_begin_4692276432:;
		{
			(*this)._method_cast_slc(_183347_t,_183365_d,_183375_error_token);
		}
		goto _match_end_4692275952;
		_case_end_4692276432:;
		if (!((_183347_t->_method_strct() != nullptr))) { goto _case_end_4692276528; }
		_case_begin_4692276528:;
		{
			(*this)._method_cast_struct(_183347_t,_183365_d,_183375_error_token);
		}
		goto _match_end_4692275952;
		_case_end_4692276528:;
		if (!((_183347_t->_method_prim() != nullptr))) { goto _case_end_4692276624; }
		_case_begin_4692276624:;
		{
			(*this)._method_cast_prim(_183347_t,_183365_d,_183375_error_token);
		}
		goto _match_end_4692275952;
		_case_end_4692276624:;
		_case_begin_4692276128:;
		{
			(*this)._method_push_err(_183375_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_183347_t->_method_to_str())}));
			_183365_d=nullptr;
		}
		goto _match_end_4692275952;
		_case_end_4692276128:;
		_match_end_4692275952:;
	}
	if (_183365_d == nullptr) {
		return nullptr;
	}
	_183365_d->_field_mutable=_183365_d->_field_mutable || ((!(_183365_d->_field_kind->_method_mutable())) && _183347_t->_method_mutable());
	_183365_d->_field_lvalue=false;
	_183365_d->_field_decl=false;
	(*this)._method_cast_constant(_183347_t,_183365_d);
	if ((_183365_d->_field_kind->_method_enm() == nullptr) || (_183365_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _183347_t->_method_to_str())) {
		_183365_d->_field_cast_kind=_183347_t;
	} else {
		_183365_d->_field_kind=_183347_t;
	}
	return _183365_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_cast(jule::Ptr<_221d8b043_CastExpr> _188333_c) {
	jule::Ptr<_2300b54e5_TypeSymbol> _188417_t = _221db702a_build_type(_188333_c->_field_kind);
	jule::Bool _188513_ok = this->self->_field_s->_method_check_type(_188417_t,this->self->_field_lookup);
	if ((!(_188513_ok))) {
		return nullptr;
	}
	jule::Ptr<_2300b54e5_TypeKind> _189017_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_189017_prefix;
	});
	jule::Ptr<_20683ebaa_Data> _189417_d = this->self->_method_eval_expr_kind(_188333_c->_field_expr);
	if (_189417_d == nullptr) {
		return nullptr;
	}
	_189417_d=this->self->_method_eval_cast_by_type_n_data(_188417_t->_field_kind,_189417_d,_188333_c->_field_kind->_field_token);
	return _189417_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_ns_selection(jule::Ptr<_221d8b043_NsSelectionExpr> _190436_s) {
	jule::Str _190513_path = _2300b54e5_build_link_path_by_tokens(_190436_s->_field_ns);
	jule::Ptr<_2200229c3_ImportInfo> _190617_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)>([=](jule::Ptr<_2200229c3_ImportInfo> _190653_p) mutable -> jule::Bool {
		if ((_190436_s->_field_ns.len() == 1LL) && (_190653_p->_field_alias == _190513_path)) {
			return true;
		}
		return _190653_p->_field_link_path == _190513_path;
	}));
	if ((_190617_imp == nullptr) || (!(_190617_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_190436_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_190513_path)}));
		return nullptr;
	}
	jule::Trait<_206c9641e_Lookup> _191817_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_190617_imp;
	
	jule::Any _192217_def = (*this)._method_get_def(_190436_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_191817_lookup;
	jule::Ptr<_20683ebaa_Data> _192517_d = (*this)._method_eval_def(_192217_def,_190436_s->_field_ident);
	return _192517_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_struct_lit_explicit(jule::Ptr<_2398d04dc_StructIns> _193048_s,jule::Slice<jule::Any> _193113_exprs,_2220dce43_Token _193136_error_token) {
	jule::Bool _193213_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_193048_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_193048_s->_field_generics.len()),_193136_error_token);
	if ((!(_193213_ok))) {
		return nullptr;
	}
	this->self->_method_push_reference_to_struct(_193048_s);
	_2200223c9_StructLitChecker _194017_slc = _2200223c9_StructLitChecker(this->self,_193136_error_token,_193048_s,jule::Slice<jule::Ptr<_21eedb492_StructArgExprModel>>());
	_194017_slc._method_check(_193113_exprs);
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_193048_s)),jule::Ptr<_2300b54e5_TypeKind>(),(!(this->self->_field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_StructLitExprModel>(new( std::nothrow ) _21eedb492_StructLitExprModel(_193048_s,_194017_slc._field_args))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_struct_lit(jule::Ptr<_221d8b043_StructLit> _195739_lit) {
	jule::Ptr<_2300b54e5_TypeSymbol> _195817_t = _221db702a_build_type(_195739_lit->_field_kind);
	jule::Bool _195913_ok = this->self->_field_s->_method_check_type(_195817_t,this->self->_field_lookup);
	if ((!(_195913_ok))) {
		return nullptr;
	}
	jule::Ptr<_2398d04dc_StructIns> _196417_s = _195817_t->_field_kind->_method_strct();
	if (_196417_s == nullptr) {
		if (_195817_t->_field_kind->_method_sptr() != nullptr) {
			_196417_s=_195817_t->_field_kind->_method_sptr()->_field_elem->_method_strct();
			if (_196417_s != nullptr) {
				goto _julec_label_eval;
			}
		}
		this->self->_method_push_err(_195739_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_eval:;
	jule::Ptr<_20683ebaa_Data> _197717_d = this->self->_method_eval_struct_lit_explicit(_196417_s,_195739_lit->_field_exprs,_195739_lit->_field_kind->_field_token);
	if (_195817_t->_field_kind->_method_sptr() != nullptr) {
		jule::Ptr<_21eedb492_StructLitExprModel> _197921_model = _197717_d->_field_model.operator jule::Ptr<_21eedb492_StructLitExprModel>();
		_20683ebaa_make_struct_lit_alloc(_197717_d,_197921_model);
	}
	return _197717_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_type(jule::Ptr<_221d8b043_TypeDecl> _198532_t) {
	jule::Ptr<_2300b54e5_TypeSymbol> _198617_tk = _221db702a_build_type(_198532_t);
	jule::Bool _198713_ok = (*this)._field_s->_method_check_type(_198617_tk,(*this)._field_lookup);
	if ((!(_198713_ok))) {
		return nullptr;
	}
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(_198617_tk->_field_kind,jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_198617_tk->_field_kind),true,jule::Ptr<_206e210e3_Const>()));
}



inline void _20683ebaa_Eval::_method_call_type_fn(jule::Ptr<_221d8b043_FnCallExpr>& _199937_fc,jule::Ptr<_20683ebaa_Data>& _199959_d) {
	if (_199937_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_199937_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_199959_d->_field_kind->_method_to_str())}));
	} else if (_199937_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_199937_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_199937_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_199937_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	if (_199937_fc->_field_args.len() > 0LL) {
		jule::Ptr<_20683ebaa_Data> _200921_arg = this->self->_method_eval_expr_kind(_199937_fc->_field_args[0LL]->_field_kind);
		if (_200921_arg != nullptr) {
			_199959_d=this->self->_method_eval_cast_by_type_n_data(_199959_d->_field_kind,_200921_arg,_199937_fc->_field_args[0LL]->_field_token);
		}
	}
	_199959_d->_field_decl=false;
}



inline std::tuple<jule::Bool,jule::Bool> _20683ebaa_Eval::_method_check_fn_call_generics(jule::Ptr<_222edb48e_FnIns> _201945_f,jule::Ptr<_221d8b043_FnCallExpr> _202013_fc) {
	jule::Bool _202032_ok = jule::Bool();
	jule::Bool _202042_dynamic_annotation = jule::Bool();
	{
		if (!((((_201945_f->_field_decl->_field_generics.len() > 0LL) && (_202013_fc->_field_generics.len() == 0LL)) && (_201945_f->_field_params.len() > 0LL)))) { goto _case_end_4689368528; }
		_case_begin_4689368528:;
		{
			_202042_dynamic_annotation=true;
			_201945_f->_field_generics=jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>::alloc(static_cast<jule::I64>(_201945_f->_field_decl->_field_generics.len()));
			_202032_ok = true;
			_202042_dynamic_annotation = true;
			return std::make_tuple(_202032_ok,_202042_dynamic_annotation);
		}
		goto _match_end_4689357456;
		_case_end_4689368528:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_201945_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_202013_fc->_field_generics.len()),_202013_fc->_field_token)))))) { goto _case_end_4689368624; }
		_case_begin_4689368624:;
		{
			_202032_ok = false;
			_202042_dynamic_annotation = false;
			return std::make_tuple(_202032_ok,_202042_dynamic_annotation);
		}
		goto _match_end_4689357456;
		_case_end_4689368624:;
		_case_begin_4689357600:;
		{
			_201945_f->_field_generics=jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_201945_f->_field_decl->_field_generics.len()));
			{
				auto &expr = _202013_fc->_field_generics;
				auto it = expr.begin();
				_iter_begin_4689359632:;
				if (it != expr.end()) {
					jule::Ptr<_221d8b043_TypeDecl> _20683ebaa_g = *it;
					{
						jule::Ptr<_2300b54e5_TypeSymbol> _203525_k = _221db702a_build_type(_20683ebaa_g);
						_202032_ok=(*this)._field_s->_method_check_type(_203525_k,(*this)._field_lookup);
						if ((!(_202032_ok))) {
							_202032_ok = false;
							_202042_dynamic_annotation = false;
							return std::make_tuple(_202032_ok,_202042_dynamic_annotation);
						}
						_201945_f->_field_generics = jule::alloc_for_append(_201945_f->_field_generics,1);_201945_f->_field_generics.push(_203525_k->_field_kind);
					}
					_iter_next_4689359632:;
					++it;
					goto _iter_begin_4689359632;
				}
				_iter_end_4689359632:;
			}
			_202032_ok = true;
			_202042_dynamic_annotation = false;
			return std::make_tuple(_202032_ok,_202042_dynamic_annotation);
		}
		goto _match_end_4689357456;
		_case_end_4689357600:;
		_match_end_4689357456:;
	}
}



inline void _20683ebaa_Eval::_method_call_builtin_fn(jule::Ptr<_221d8b043_FnCallExpr>& _204740_fc,jule::Ptr<_20683ebaa_Data>& _204762_d) {
	jule::Ptr<_222edb48e_FnIns> _204817_f = _204762_d->_field_kind->_method_fnc();
	_204762_d=_204817_f->_field_caller(this->self,_204740_fc,_204762_d);
	if (_204762_d == nullptr) {
		return;
	}
	_204762_d->_field_mutable=true;
}



inline void _20683ebaa_Eval::_method_check_fn_of_concurrent_call(jule::Ptr<_222edb48e_FnIns>& _205847_f,_2220dce43_Token _205858_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto &expr = _205847_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4689385424:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_ParamIns> &_20683ebaa_p = *it;
			{
				if (_20683ebaa_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_205858_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;
				}
			}
			_iter_next_4689385424:;
			++it;
			goto _iter_begin_4689385424;
		}
		_iter_end_4689385424:;
	}
}



inline void _20683ebaa_Eval::_method_process_exceptional_handler(jule::Ptr<_222edb48e_FnIns>& _207151_f,jule::Ptr<_221d8b043_FnCallExpr>& _207167_fc,jule::Ptr<_20683ebaa_Data>& _207189_d) {
	jule::Bool _207213_result_needed = (!(_207151_f->_field_decl->_method_is_void())) && (!((*this)._field_ignored));
	jule::Ptr<_2300254bb_ScopeChecker> _207317_csc = nullptr;
	jule::Ptr<_2300254bb_Scope> _207417_ch = nullptr;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_21eee051d_Sema>>())) { goto _case_end_4689395392; }
		_case_begin_4689395392:;
		{
			jule::Ptr<_21eee051d_Sema> _207821_s = (*this)._field_lookup.operator jule::Ptr<_21eee051d_Sema>();
			_207317_csc=_2300254bb_new_scope_checker(_207821_s,nullptr);
			if (_207213_result_needed) {
				_207317_csc->_field_result=_207151_f->_field_result;
			}
			_207417_ch=jule::new_struct<_2300254bb_Scope>(new( std::nothrow ) _2300254bb_Scope());
			_207317_csc->_field_table->_field_vars = jule::alloc_for_append(_207317_csc->_field_table->_field_vars,1);_207317_csc->_field_table->_field_vars.push(_20683ebaa_build_error_var(_207417_ch,_207167_fc));
			_207317_csc->_method_check(_207167_fc->_field_exception,_207417_ch);
		}
		goto _match_end_4689396320;
		_case_end_4689395392:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ScopeChecker>>())) { goto _case_end_4689396400; }
		_case_begin_4689396400:;
		{
			jule::Ptr<_2300254bb_ScopeChecker> _208821_sc = (*this)._field_lookup.operator jule::Ptr<_2300254bb_ScopeChecker>();
			_207317_csc=_208821_sc->_method_new_child_checker();
			if (_207213_result_needed) {
				_207317_csc->_field_result=_207151_f->_field_result;
			}
			_207417_ch=_208821_sc->_method_get_child();
			_207317_csc->_field_table->_field_vars = jule::alloc_for_append(_207317_csc->_field_table->_field_vars,1);_207317_csc->_field_table->_field_vars.push(_20683ebaa_build_error_var(_207417_ch,_207167_fc));
			_208821_sc->_method_check_child_ssc(_207167_fc->_field_exception,_207417_ch,_207317_csc);
		}
		goto _match_end_4689396320;
		_case_end_4689396400:;
		_match_end_4689396320:;
	}
	_207189_d->_field_model.operator jule::Ptr<_21eedb492_FnCallExprModel>()->_field_except=_207417_ch;
	if (_207213_result_needed && (_207317_csc->_field_result != nullptr)) {
		(*this)._method_push_err(_207167_fc->_field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	}
}



inline void _20683ebaa_Eval::_method_call_fn(jule::Ptr<_221d8b043_FnCallExpr>& _210532_fc,jule::Ptr<_20683ebaa_Data>& _210554_d) {
	jule::Ptr<_222edb48e_FnIns> _210617_f = _210554_d->_field_kind->_method_fnc();
	if (_210617_f->_method_is_builtin()) {
		this->self->_method_call_builtin_fn(_210532_fc,_210554_d);
		return;
	}
	if ((((!(_210554_d->_field_mutable)) && _210617_f->_field_decl->_method_is_method()) && (!(_210617_f->_field_decl->_field_statically))) && _210617_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_210532_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	} else if ((!(this->self->_method_is_unsafe())) && _210617_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_210532_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	jule::Bool _211818_ok;
	jule::Bool _211822_dynamic_annotation;
	std::tie(_211818_ok,_211822_dynamic_annotation) = this->self->_method_check_fn_call_generics(_210617_f,_210532_fc);
	if ((!(_211818_ok))) {
		_210554_d=nullptr;
		return;
	}
	jule::Ptr<_21eee051d_Sema> _212417_old = this->self->_field_s;
	if (_210617_f->_field_decl->_field_owner != nullptr) {
		this->self->_field_s=_210617_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if (_212417_old != this->self->_field_s) {
			_212417_old->_field_errors=jule::append(_212417_old->_field_errors,this->self->_field_s->_field_errors);
			this->self->_field_s->_field_errors=nullptr;
		}
		this->self->_field_s=_212417_old;
	});
	if ((!(_211822_dynamic_annotation))) {
		if ((!(_210617_f->_field_reloaded))) {
			_211818_ok=this->self->_field_s->_method_reload_fn_ins_types(_210617_f);
			if ((!(_211818_ok))) {
				_210554_d=nullptr;
				return;
			}
			_210617_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_210617_f);
	}
	_2200223c9_FnCallArgChecker _215017_fcac = _2200223c9_FnCallArgChecker(this->self,_210532_fc->_field_args,_210532_fc->_field_token,_210617_f,_211822_dynamic_annotation,jule::Slice<jule::Any>());
	if (_210617_f->_field_decl->_field_owner != nullptr) {
		std::tie(_212417_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_212417_old);
		_211818_ok=_215017_fcac._method_check();
		std::tie(_212417_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_212417_old);
	} else {
		_211818_ok=_215017_fcac._method_check();
	}
	if ((!(_211818_ok)) && _211822_dynamic_annotation) {
		_210554_d=nullptr;
		return;
	}
	jule::Bool _217014_is_unique_ins;
	jule::Int _217029_pos;
	std::tie(_217014_is_unique_ins,_217029_pos) = _210617_f->_field_decl->_method_append_instance(_210617_f);
	if ((!(_217014_is_unique_ins))) {
		_210617_f=_210617_f->_field_decl->_field_instances[_217029_pos];
	}
	jule::Any _217517_call_model = _210554_d->_field_model;
	if (_210617_f->_field_decl->_method_is_void()) {
		_210554_d=_20683ebaa_build_void_data();
	} else {
		if (_211822_dynamic_annotation) {
			_211818_ok=this->self->_field_s->_method_reload_fn_ins_types(_210617_f);
			if ((!(_211818_ok))) {
				_210554_d=nullptr;
				return;
			}
			_210617_f->_field_reloaded=true;
		}
		_210554_d->_field_kind=_210617_f->_field_result;
		_210554_d->_field_lvalue=false;
	}
	_210554_d->_field_mutable=true;
	_210554_d->_field_model=jule::Any(jule::new_struct<_21eedb492_FnCallExprModel>(new( std::nothrow ) _21eedb492_FnCallExprModel(_210532_fc->_field_token,_210617_f,jule::Bool(),_217517_call_model,_215017_fcac._field_arg_models,jule::Ptr<_2300254bb_Scope>())));
	if (_210617_f->_field_decl->_field_exceptional) {
		{
			if (!((_210532_fc->_method_unhandled()))) { goto _case_end_4689459248; }
			_case_begin_4689459248:;
			{
				this->self->_method_push_err(_210532_fc->_field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
				this->self->_method_push_suggestion(jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
			}
			goto _match_end_4689458272;
			_case_end_4689459248:;
			if (!((_210532_fc->_method_ignored()))) { goto _case_end_4689458752; }
			goto _match_end_4689458272;
			_case_end_4689458752:;
			_case_begin_4689458448:;
			{
				this->self->_method_process_exceptional_handler(_210617_f,_210532_fc,_210554_d);
			}
			goto _match_end_4689458272;
			_case_end_4689458448:;
			_match_end_4689458272:;
		}
	} else if ((!(_210532_fc->_method_unhandled()))) {
		this->self->_method_push_err(_210532_fc->_field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	}
	if ((_210617_f->_field_generics.len() > 0LL) && _217014_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_210617_f);
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_fn_call(jule::Ptr<_221d8b043_FnCallExpr> _222336_fc) {
	jule::Ptr<_2300b54e5_TypeKind> _222417_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_222417_prefix;
	});
	{
		auto &_match_expr{ _222336_fc->_field_expr->_field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_IdentExpr>>())) { goto _case_end_4689471072; }
		_case_begin_4689471072:;
		{
			if (_222336_fc->_field_expr->_field_token._field_kind == jule::Str("error", 5)) {
				return _206d53311_builtin_caller_error(this->self,_222336_fc);
			}
		}
		goto _match_end_4689471728;
		_case_end_4689471072:;
		_match_end_4689471728:;
	}
	jule::Ptr<_20683ebaa_Data> _223717_d = this->self->_method_eval_expr_kind(_222336_fc->_field_expr->_field_kind);
	if (_223717_d == nullptr) {
		return nullptr;
	}
	if (_223717_d->_field_decl) {
		this->self->_method_call_type_fn(_222336_fc,_223717_d);
		return _223717_d;
	}
	if (_223717_d->_field_kind->_method_fnc() == nullptr) {
		this->self->_method_push_err(_222336_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	this->self->_method_call_fn(_222336_fc,_223717_d);
	return _223717_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_enum_static(jule::Ptr<_23001604a_Enum> _225639_enm,_2220dce43_Token _225651_ident) {
	jule::Ptr<_20683ebaa_Data> _225717_d = jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_225639_enm)),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_206e210e3_Const>()));
	jule::Ptr<_23001604a_EnumItem> _226417_item = _225639_enm->_method_find_item(_225651_ident._field_kind);
	if (_226417_item == nullptr) {
		(*this)._method_push_err(_225651_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_225651_ident._field_kind)}));
	} else {
		_225717_d->_field_constant=jule::new_ptr<_206e210e3_Const>((*(_226417_item->_field_value->_field_data->_field_constant)));
		_225717_d->_field_model=jule::Any(_225717_d->_field_constant);
	}
	return _225717_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_struct_static(jule::Ptr<_2398d04dc_StructIns> _227541_s,_2220dce43_Token _227556_ident) {
	jule::Ptr<_20683ebaa_Data> _227617_d = jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::Ptr<_2300b54e5_TypeKind>(),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_206e210e3_Const>()));
	
	jule::Ptr<_222edb48e_Fn> _228417_method = _227541_s->_method_find_method(_227556_ident._field_kind,true);
	if (_228417_method != nullptr) {
		if ((!((*this)._field_s->_method_is_accessible_define(_228417_method->_field_public,_228417_method->_field_token)))) {
			(*this)._method_push_err(_227556_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_227556_ident._field_kind)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_222edb48e_FnIns> _229121_ins = _228417_method->_method_instance();
		_229121_ins->_field_owner=_227541_s;
		(*this)._method_push_reference_to_fn(_229121_ins);
		_227617_d->_field_model=jule::Any(jule::new_struct<_21eedb492_StructStaticIdentExprModel>(new( std::nothrow ) _21eedb492_StructStaticIdentExprModel(_227541_s,_227617_d->_field_model,_229121_ins)));
		_227617_d->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_229121_ins));
		return _227617_d;
	}
	jule::Ptr<_2200a2657_Var> _230317_sttc = _227541_s->_field_decl->_method_find_static(_227556_ident._field_kind);
	if (_230317_sttc != nullptr) {
		return (*this)._method_eval_var(_230317_sttc,_227556_ident);
	}
	(*this)._method_push_err(_227556_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_227556_ident._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_trait_sub_ident(jule::Ptr<_20683ebaa_Data> _231243_d,jule::Ptr<_2300167cb_Trait> _231257_trt,_2220dce43_Token _231270_ident) {
	jule::Ptr<_222edb48e_Fn> _231317_f = _231257_trt->_method_find_method(_231270_ident._field_kind);
	if (_231317_f == nullptr) {
		(*this)._method_push_err(_231270_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_231270_ident._field_kind)}));
		return nullptr;
	}
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_231317_f->_method_instance())),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_TraitSubIdentExprModel>(new( std::nothrow ) _21eedb492_TraitSubIdentExprModel(_231243_d->_field_model,_231270_ident._field_kind))),false,jule::Ptr<_206e210e3_Const>()));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_struct_sub_ident(jule::Ptr<_20683ebaa_Data> _233144_d,jule::Ptr<_2398d04dc_StructIns> _233158_s,jule::Ptr<_221d8b043_SubIdentExpr> _233173_si,jule::Bool _233192_ref) {
	jule::Ptr<_2398d04dc_FieldIns> _233217_f = _233158_s->_method_find_field(_233173_si->_field_ident._field_kind);
	if (_233217_f != nullptr) {
		if ((!((*this)._field_s->_method_is_accessible_define(_233217_f->_field_decl->_field_public,_233217_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_233173_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_233217_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_21eedb492_StructSubIdentExprModel> _233921_model = jule::new_struct<_21eedb492_StructSubIdentExprModel>(new( std::nothrow ) _21eedb492_StructSubIdentExprModel(_233144_d->_field_model,_233144_d->_field_kind,jule::Ptr<_222edb48e_FnIns>(),_233217_f));
		_233144_d->_field_model=jule::Any(_233921_model);
		_233144_d->_field_kind=_233217_f->_field_kind->_method_clone();
		_233144_d->_field_lvalue=true;
		if (_233217_f->_field_decl->_field_mutable && (!(_233144_d->_field_mutable))) {
			{
				auto &_match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ScopeChecker>>())) { goto _case_end_4689534080; }
				_case_begin_4689534080:;
				{
					jule::Ptr<_2300254bb_ScopeChecker> _235225_scope = (*this)._field_lookup.operator jule::Ptr<_2300254bb_ScopeChecker>()->_method_get_root();
					_233144_d->_field_mutable=(_235225_scope->_field_owner != nullptr) && (_235225_scope->_field_owner->_field_owner == _233158_s);
					if (_233144_d->_field_mutable) {
						jule::Ptr<_2200a2657_Var> _235533_field = _233921_model->_field_expr.operator jule::Ptr<_2200a2657_Var>();
						jule::Ptr<_2200a2657_Var> _235633_v = jule::new_struct<_2200a2657_Var>(new( std::nothrow ) _2200a2657_Var(_235533_field->_field_scope,_235533_field->_field_token,_235533_field->_field_ident,_235533_field->_field_cpp_linked,_235533_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_235533_field->_field_kind,_235533_field->_field_value,jule::Ptr<_221db702a_ReferenceStack>(),jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Ptr<_2200a2657_IterRelation>(),jule::Slice<jule::Ptr<_2200a2657_Var>>()));
						_235633_v->_field_mutable=true;
						_233921_model->_field_expr=jule::Any(_235633_v);
					}
				}
				goto _match_end_4689543744;
				_case_end_4689534080:;
				_match_end_4689543744:;
			}
		}
		return _233144_d;
	}
	
	jule::Ptr<_222edb48e_Fn> _237517_m = _233158_s->_method_find_method(_233173_si->_field_ident._field_kind,false);
	if (_237517_m == nullptr) {
		(*this)._method_push_err(_233173_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_233173_si->_field_ident._field_kind)}));
		return nullptr;
	}
	if (_237517_m->_field_params[0LL]->_method_is_ref() && (!(_233192_ref))) {
		(*this)._method_push_err(_233173_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	}
	jule::Ptr<_222edb48e_FnIns> _238517_ins = _237517_m->_method_instance();
	_238517_ins->_field_owner=_233158_s;
	(*this)._method_push_reference_to_fn(_238517_ins);
	_233144_d->_field_model=jule::Any(jule::new_struct<_21eedb492_StructSubIdentExprModel>(new( std::nothrow ) _21eedb492_StructSubIdentExprModel(_233144_d->_field_model,_233144_d->_field_kind,_238517_ins,jule::Ptr<_2398d04dc_FieldIns>())));
	_233144_d->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_238517_ins));
	return _233144_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_slice_sub_ident(jule::Ptr<_20683ebaa_Data> _239743_d,_2220dce43_Token _239753_ident) {
	{
		auto &_match_expr{ _239753_ident._field_kind };
		if (!(_match_expr == (jule::Str("len", 3)))) { goto _case_end_4689573328; }
		_case_begin_4689573328:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_239743_d->_field_kind,_239743_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689570384;
		_case_end_4689573328:;
		if (!(_match_expr == (jule::Str("cap", 3)))) { goto _case_end_4689573520; }
		_case_begin_4689573520:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_239743_d->_field_kind,_239743_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689570384;
		_case_end_4689573520:;
		_case_begin_4689569904:;
		{
			(*this)._method_push_err(_239753_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_239753_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689570384;
		_case_end_4689569904:;
		_match_end_4689570384:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_array_sub_ident(jule::Ptr<_20683ebaa_Data> _242743_d,_2220dce43_Token _242753_ident) {
	{
		auto &_match_expr{ _242753_ident._field_kind };
		if (!(_match_expr == (jule::Str("len", 3)))) { goto _case_end_4689585408; }
		_case_begin_4689585408:;
		{
			jule::Ptr<_206e210e3_Const> _243021_c = _206e210e3_Const::_static_method_new_i64(static_cast<jule::I64>(_242743_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_243021_c),jule::Bool(),_243021_c));
		}
		goto _match_end_4689582464;
		_case_end_4689585408:;
		_case_begin_4689581984:;
		{
			(*this)._method_push_err(_242753_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_242753_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689582464;
		_case_end_4689581984:;
		_match_end_4689582464:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_map_sub_ident(jule::Ptr<_20683ebaa_Data> _244441_d,_2220dce43_Token _244451_ident) {
	jule::Ptr<_2300b54e5_Map> _244517_map_kind = _244441_d->_field_kind->_method_map();
	{
		auto &_match_expr{ _244451_ident._field_kind };
		if (!(_match_expr == (jule::Str("len", 3)))) { goto _case_end_4689594448; }
		_case_begin_4689594448:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_244441_d->_field_kind,_244441_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689593632;
		_case_end_4689594448:;
		if (!(_match_expr == (jule::Str("clear", 5)))) { goto _case_end_4689596704; }
		_case_begin_4689596704:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>(),jule::Ptr<_2300b54e5_TypeKind>(),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),_244441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_244441_d->_field_kind,_244441_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689593632;
		_case_end_4689596704:;
		if (!(_match_expr == (jule::Str("keys", 4)))) { goto _case_end_4689596800; }
		_case_begin_4689596800:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>(),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2300b54e5_Slc>(new( std::nothrow ) _2300b54e5_Slc(_244517_map_kind->_field_key)))),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),_244441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_244441_d->_field_kind,_244441_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689593632;
		_case_end_4689596800:;
		if (!(_match_expr == (jule::Str("values", 6)))) { goto _case_end_4689596240; }
		_case_begin_4689596240:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>(),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2300b54e5_Slc>(new( std::nothrow ) _2300b54e5_Slc(_244517_map_kind->_field_val)))),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),_244441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_244441_d->_field_kind,_244441_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689593632;
		_case_end_4689596240:;
		if (!(_match_expr == (jule::Str("has", 3)))) { goto _case_end_4689596336; }
		_case_begin_4689596336:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("key", 3))),_244517_map_kind->_field_key))}),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),_244441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_244441_d->_field_kind,_244441_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689593632;
		_case_end_4689596336:;
		if (!(_match_expr == (jule::Str("del", 3)))) { goto _case_end_4689593984; }
		_case_begin_4689593984:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("key", 3))),_244517_map_kind->_field_key))}),jule::Ptr<_2300b54e5_TypeKind>(),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),_244441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_244441_d->_field_kind,_244441_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689593632;
		_case_end_4689593984:;
		_case_begin_4689592288:;
		{
			(*this)._method_push_err(_244451_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_244451_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689593632;
		_case_end_4689592288:;
		_match_end_4689593632:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_str_sub_ident(jule::Ptr<_20683ebaa_Data> _256741_d,_2220dce43_Token _256751_ident) {
	jule::Ptr<_2300b54e5_TypeKind> _256817_str_kind = jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("str", 3))));
	{
		auto &_match_expr{ _256751_ident._field_kind };
		if (!(_match_expr == (jule::Str("len", 3)))) { goto _case_end_4689625616; }
		_case_begin_4689625616:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_256741_d->_field_kind,_256741_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689624800;
		_case_end_4689625616:;
		if (!(_match_expr == (jule::Str("has_prefix", 10)))) { goto _case_end_4689627680; }
		_case_begin_4689627680:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("sub", 3))),_256817_str_kind))}),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_256741_d->_field_kind,_256741_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689624800;
		_case_end_4689627680:;
		if (!(_match_expr == (jule::Str("has_suffix", 10)))) { goto _case_end_4689627408; }
		_case_begin_4689627408:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("sub", 3))),_256817_str_kind))}),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_256741_d->_field_kind,_256741_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689624800;
		_case_end_4689627408:;
		if (!(_match_expr == (jule::Str("find", 4)))) { goto _case_end_4689627504; }
		_case_begin_4689627504:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("sub", 3))),_256817_str_kind))}),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_256741_d->_field_kind,_256741_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689624800;
		_case_end_4689627504:;
		if (!(_match_expr == (jule::Str("rfind", 5)))) { goto _case_end_4689625184; }
		_case_begin_4689625184:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("sub", 3))),_256817_str_kind))}),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_256741_d->_field_kind,_256741_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689624800;
		_case_end_4689625184:;
		if (!(_match_expr == (jule::Str("trim", 4)))) { goto _case_end_4689625280; }
		_case_begin_4689625280:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("bytes", 5))),_256817_str_kind))}),_256817_str_kind,jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_256741_d->_field_kind,_256741_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689624800;
		_case_end_4689625280:;
		if (!(_match_expr == (jule::Str("ltrim", 5)))) { goto _case_end_4689625376; }
		_case_begin_4689625376:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("bytes", 5))),_256817_str_kind))}),_256817_str_kind,jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_256741_d->_field_kind,_256741_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689624800;
		_case_end_4689625376:;
		if (!(_match_expr == (jule::Str("rtrim", 5)))) { goto _case_end_4689625472; }
		_case_begin_4689625472:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("bytes", 5))),_256817_str_kind))}),_256817_str_kind,jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_256741_d->_field_kind,_256741_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689624800;
		_case_end_4689625472:;
		if (!(_match_expr == (jule::Str("split", 5)))) { goto _case_end_4689628096; }
		_case_begin_4689628096:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("sub", 3))),_256817_str_kind)),jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2300b54e5_Slc>(new( std::nothrow ) _2300b54e5_Slc(_256817_str_kind)))),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_256741_d->_field_kind,_256741_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689624800;
		_case_end_4689628096:;
		if (!(_match_expr == (jule::Str("replace", 7)))) { goto _case_end_4689628192; }
		_case_begin_4689628192:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("sub", 3))),_256817_str_kind)),jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("new", 3))),_256817_str_kind)),jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("int", 3))))))}),_256817_str_kind,jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_CommonSubIdentExprModel>(new( std::nothrow ) _21eedb492_CommonSubIdentExprModel(_256741_d->_field_kind,_256741_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4689624800;
		_case_end_4689628192:;
		_case_begin_4689623216:;
		{
			(*this)._method_push_err(_256751_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_256751_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689624800;
		_case_end_4689623216:;
		_match_end_4689624800:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_int_type_static(_2220dce43_Token _281639_ident) {
	
	{
		auto &_match_expr{ _281639_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689676304; }
		_case_begin_4689676304:;
		{
			jule::Ptr<_206e210e3_Const> _282121_c = _206e210e3_Const::_static_method_new_i64(static_cast<jule::I64>(_206e286b1_max(jule::Str("int", 3))));
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_282121_c),jule::Bool(),_282121_c));
		}
		goto _match_end_4689673104;
		_case_end_4689676304:;
		if (!(_match_expr == (jule::Str("MIN", 3)))) { goto _case_end_4689676448; }
		_case_begin_4689676448:;
		{
			jule::Ptr<_206e210e3_Const> _282921_c = _206e210e3_Const::_static_method_new_i64(static_cast<jule::I64>(_206e286b1_min(jule::Str("int", 3))));
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_282921_c),jule::Bool(),_282921_c));
		}
		goto _match_end_4689673104;
		_case_end_4689676448:;
		_case_begin_4689672032:;
		{
			(*this)._method_push_err(_281639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_281639_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689673104;
		_case_end_4689672032:;
		_match_end_4689673104:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_uint_type_static(_2220dce43_Token _284240_ident) {
	
	{
		auto &_match_expr{ _284240_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689690112; }
		_case_begin_4689690112:;
		{
			jule::Ptr<_206e210e3_Const> _284721_c = _206e210e3_Const::_static_method_new_u64(static_cast<jule::U64>(_206e286b1_max(jule::Str("uint", 4))));
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_284721_c),jule::Bool(),_284721_c));
		}
		goto _match_end_4689686208;
		_case_end_4689690112:;
		_case_begin_4689685136:;
		{
			(*this)._method_push_err(_284240_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_284240_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689686208;
		_case_end_4689685136:;
		_match_end_4689686208:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_i8_type_static(_2220dce43_Token _286038_ident) {
	
	
	
	{
		auto &_match_expr{ _286038_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689701840; }
		_case_begin_4689701840:;
		{
			jule::Ptr<_206e210e3_Const> _286721_c = _206e210e3_Const::_static_method_new_i64(127LL);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_286721_c),jule::Bool(),_286721_c));
		}
		goto _match_end_4689698624;
		_case_end_4689701840:;
		if (!(_match_expr == (jule::Str("MIN", 3)))) { goto _case_end_4689702032; }
		_case_begin_4689702032:;
		{
			jule::Ptr<_206e210e3_Const> _287521_c = _206e210e3_Const::_static_method_new_i64(-128LL);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287521_c),jule::Bool(),_287521_c));
		}
		goto _match_end_4689698624;
		_case_end_4689702032:;
		_case_begin_4689697072:;
		{
			(*this)._method_push_err(_286038_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_286038_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689698624;
		_case_end_4689697072:;
		_match_end_4689698624:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_i16_type_static(_2220dce43_Token _288839_ident) {
	
	
	
	{
		auto &_match_expr{ _288839_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689716000; }
		_case_begin_4689716000:;
		{
			jule::Ptr<_206e210e3_Const> _289521_c = _206e210e3_Const::_static_method_new_i64(32767LL);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_289521_c),jule::Bool(),_289521_c));
		}
		goto _match_end_4689712784;
		_case_end_4689716000:;
		if (!(_match_expr == (jule::Str("MIN", 3)))) { goto _case_end_4689716192; }
		_case_begin_4689716192:;
		{
			jule::Ptr<_206e210e3_Const> _290321_c = _206e210e3_Const::_static_method_new_i64(-32768LL);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_290321_c),jule::Bool(),_290321_c));
		}
		goto _match_end_4689712784;
		_case_end_4689716192:;
		_case_begin_4689711232:;
		{
			(*this)._method_push_err(_288839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_288839_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689712784;
		_case_end_4689711232:;
		_match_end_4689712784:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_i32_type_static(_2220dce43_Token _291639_ident) {
	
	
	
	{
		auto &_match_expr{ _291639_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689731856; }
		_case_begin_4689731856:;
		{
			jule::Ptr<_206e210e3_Const> _292321_c = _206e210e3_Const::_static_method_new_i64(2147483647LL);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_292321_c),jule::Bool(),_292321_c));
		}
		goto _match_end_4689728640;
		_case_end_4689731856:;
		if (!(_match_expr == (jule::Str("MIN", 3)))) { goto _case_end_4689732048; }
		_case_begin_4689732048:;
		{
			jule::Ptr<_206e210e3_Const> _293121_c = _206e210e3_Const::_static_method_new_i64(-2147483648LL);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_293121_c),jule::Bool(),_293121_c));
		}
		goto _match_end_4689728640;
		_case_end_4689732048:;
		_case_begin_4689727088:;
		{
			(*this)._method_push_err(_291639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_291639_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689728640;
		_case_end_4689727088:;
		_match_end_4689728640:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_i64_type_static(_2220dce43_Token _294439_ident) {
	
	
	
	{
		auto &_match_expr{ _294439_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689745696; }
		_case_begin_4689745696:;
		{
			jule::Ptr<_206e210e3_Const> _295121_c = _206e210e3_Const::_static_method_new_i64(jule::MAX_I64);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_295121_c),jule::Bool(),_295121_c));
		}
		goto _match_end_4689742480;
		_case_end_4689745696:;
		if (!(_match_expr == (jule::Str("MIN", 3)))) { goto _case_end_4689745888; }
		_case_begin_4689745888:;
		{
			jule::Ptr<_206e210e3_Const> _295921_c = _206e210e3_Const::_static_method_new_i64(jule::MIN_I64);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_295921_c),jule::Bool(),_295921_c));
		}
		goto _match_end_4689742480;
		_case_end_4689745888:;
		_case_begin_4689741088:;
		{
			(*this)._method_push_err(_294439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_294439_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689742480;
		_case_end_4689741088:;
		_match_end_4689742480:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_u8_type_static(_2220dce43_Token _297238_ident) {
	
	
	{
		auto &_match_expr{ _297238_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689758784; }
		_case_begin_4689758784:;
		{
			jule::Ptr<_206e210e3_Const> _297821_c = _206e210e3_Const::_static_method_new_u64(255LLU);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("u8", 2)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_297821_c),jule::Bool(),_297821_c));
		}
		goto _match_end_4689755504;
		_case_end_4689758784:;
		_case_begin_4689753872:;
		{
			(*this)._method_push_err(_297238_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_297238_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689755504;
		_case_end_4689753872:;
		_match_end_4689755504:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_u16_type_static(_2220dce43_Token _299139_ident) {
	
	
	{
		auto &_match_expr{ _299139_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689768864; }
		_case_begin_4689768864:;
		{
			jule::Ptr<_206e210e3_Const> _299721_c = _206e210e3_Const::_static_method_new_u64(65535LLU);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("u16", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_299721_c),jule::Bool(),_299721_c));
		}
		goto _match_end_4689765584;
		_case_end_4689768864:;
		_case_begin_4689763952:;
		{
			(*this)._method_push_err(_299139_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_299139_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689765584;
		_case_end_4689763952:;
		_match_end_4689765584:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_u32_type_static(_2220dce43_Token _301039_ident) {
	
	
	{
		auto &_match_expr{ _301039_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689778944; }
		_case_begin_4689778944:;
		{
			jule::Ptr<_206e210e3_Const> _301621_c = _206e210e3_Const::_static_method_new_u64(4294967295LLU);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("u32", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_301621_c),jule::Bool(),_301621_c));
		}
		goto _match_end_4689775664;
		_case_end_4689778944:;
		_case_begin_4689774032:;
		{
			(*this)._method_push_err(_301039_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_301039_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689775664;
		_case_end_4689774032:;
		_match_end_4689775664:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_u64_type_static(_2220dce43_Token _302939_ident) {
	
	
	{
		auto &_match_expr{ _302939_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689788864; }
		_case_begin_4689788864:;
		{
			jule::Ptr<_206e210e3_Const> _303521_c = _206e210e3_Const::_static_method_new_u64(jule::MAX_U64);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("u64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_303521_c),jule::Bool(),_303521_c));
		}
		goto _match_end_4689785584;
		_case_end_4689788864:;
		_case_begin_4689784112:;
		{
			(*this)._method_push_err(_302939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_302939_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689785584;
		_case_end_4689784112:;
		_match_end_4689785584:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_f32_type_tatic(_2220dce43_Token _304838_ident) {
	
	
	
	{
		auto &_match_expr{ _304838_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689800016; }
		_case_begin_4689800016:;
		{
			jule::Ptr<_206e210e3_Const> _305521_c = _206e210e3_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_305521_c),jule::Bool(),_305521_c));
		}
		goto _match_end_4689796800;
		_case_end_4689800016:;
		if (!(_match_expr == (jule::Str("MIN", 3)))) { goto _case_end_4689800208; }
		_case_begin_4689800208:;
		{
			jule::Ptr<_206e210e3_Const> _306321_c = _206e210e3_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_306321_c),jule::Bool(),_306321_c));
		}
		goto _match_end_4689796800;
		_case_end_4689800208:;
		_case_begin_4689796496:;
		{
			(*this)._method_push_err(_304838_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_304838_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689796800;
		_case_end_4689796496:;
		_match_end_4689796800:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_f64_type_static(_2220dce43_Token _307639_ident) {
	
	
	
	{
		auto &_match_expr{ _307639_ident._field_kind };
		if (!(_match_expr == (jule::Str("MAX", 3)))) { goto _case_end_4689813760; }
		_case_begin_4689813760:;
		{
			jule::Ptr<_206e210e3_Const> _308321_c = _206e210e3_Const::_static_method_new_f64(jule::MAX_F64);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_308321_c),jule::Bool(),_308321_c));
		}
		goto _match_end_4689810544;
		_case_end_4689813760:;
		if (!(_match_expr == (jule::Str("MIN", 3)))) { goto _case_end_4689813952; }
		_case_begin_4689813952:;
		{
			jule::Ptr<_206e210e3_Const> _309121_c = _206e210e3_Const::_static_method_new_f64(jule::MIN_F64);
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_309121_c),jule::Bool(),_309121_c));
		}
		goto _match_end_4689810544;
		_case_end_4689813952:;
		_case_begin_4689810240:;
		{
			(*this)._method_push_err(_307639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_307639_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689810544;
		_case_end_4689810240:;
		_match_end_4689810544:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_prim_static(jule::Str _310435_kind,_2220dce43_Token _310446_ident) {
	{
		auto &_match_expr{ _310435_kind };
		if (!(_match_expr == (jule::Str("int", 3)))) { goto _case_end_4689825648; }
		_case_begin_4689825648:;
		{
			return (*this)._method_eval_int_type_static(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689825648:;
		if (!(_match_expr == (jule::Str("uint", 4)))) { goto _case_end_4689825840; }
		_case_begin_4689825840:;
		{
			return (*this)._method_eval_uint_type_static(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689825840:;
		if (!(_match_expr == (jule::Str("i8", 2)))) { goto _case_end_4689825936; }
		_case_begin_4689825936:;
		{
			return (*this)._method_eval_i8_type_static(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689825936:;
		if (!(_match_expr == (jule::Str("i16", 3)))) { goto _case_end_4689825376; }
		_case_begin_4689825376:;
		{
			return (*this)._method_eval_i16_type_static(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689825376:;
		if (!(_match_expr == (jule::Str("i32", 3)))) { goto _case_end_4689825472; }
		_case_begin_4689825472:;
		{
			return (*this)._method_eval_i32_type_static(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689825472:;
		if (!(_match_expr == (jule::Str("i64", 3)))) { goto _case_end_4689823040; }
		_case_begin_4689823040:;
		{
			return (*this)._method_eval_i64_type_static(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689823040:;
		if (!(_match_expr == (jule::Str("u8", 2)))) { goto _case_end_4689823136; }
		_case_begin_4689823136:;
		{
			return (*this)._method_eval_u8_type_static(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689823136:;
		if (!(_match_expr == (jule::Str("u16", 3)))) { goto _case_end_4689823232; }
		_case_begin_4689823232:;
		{
			return (*this)._method_eval_u16_type_static(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689823232:;
		if (!(_match_expr == (jule::Str("u32", 3)))) { goto _case_end_4689823328; }
		_case_begin_4689823328:;
		{
			return (*this)._method_eval_u32_type_static(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689823328:;
		if (!(_match_expr == (jule::Str("u64", 3)))) { goto _case_end_4689823424; }
		_case_begin_4689823424:;
		{
			return (*this)._method_eval_u64_type_static(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689823424:;
		if (!(_match_expr == (jule::Str("f32", 3)))) { goto _case_end_4689826064; }
		_case_begin_4689826064:;
		{
			return (*this)._method_eval_f32_type_tatic(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689826064:;
		if (!(_match_expr == (jule::Str("f64", 3)))) { goto _case_end_4689826160; }
		_case_begin_4689826160:;
		{
			return (*this)._method_eval_f64_type_static(_310446_ident);
		}
		goto _match_end_4689822320;
		_case_end_4689826160:;
		_case_begin_4689822224:;
		{
			(*this)._method_push_err(_310446_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_310435_kind),jule::Any(_310446_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4689822320;
		_case_end_4689822224:;
		_match_end_4689822320:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_type_static(jule::Ptr<_20683ebaa_Data> _312439_d,jule::Ptr<_221d8b043_SubIdentExpr> _312453_si) {
	{
		if (!((_312439_d->_field_kind->_method_prim() != nullptr))) { goto _case_end_4689848160; }
		_case_begin_4689848160:;
		{
			return (*this)._method_eval_prim_static(_312439_d->_field_kind->_method_prim()->_method_to_str(),_312453_si->_field_ident);
		}
		goto _match_end_4689844640;
		_case_end_4689848160:;
		if (!((_312439_d->_field_kind->_method_enm() != nullptr))) { goto _case_end_4689848352; }
		_case_begin_4689848352:;
		{
			return (*this)._method_eval_enum_static(_312439_d->_field_kind->_method_enm(),_312453_si->_field_ident);
		}
		goto _match_end_4689844640;
		_case_end_4689848352:;
		if (!((_312439_d->_field_kind->_method_strct() != nullptr))) { goto _case_end_4689848448; }
		_case_begin_4689848448:;
		{
			return (*this)._method_eval_struct_static(_312439_d->_field_kind->_method_strct(),_312453_si->_field_ident);
		}
		goto _match_end_4689844640;
		_case_end_4689848448:;
		_case_begin_4689844784:;
		{
			(*this)._method_push_err(_312453_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_312439_d->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4689844640;
		_case_end_4689844784:;
		_match_end_4689844640:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_obj_sub_ident(jule::Ptr<_20683ebaa_Data> _314141_d,jule::Ptr<_221d8b043_SubIdentExpr> _314155_si) {
	jule::Ptr<_2300b54e5_TypeKind> _314217_kind = _314141_d->_field_kind;
	if (_314141_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_2300b54e5_Ptr> _314417_ptr = _314141_d->_field_kind->_method_ptr();
		if ((!(_314417_ptr->_method_is_unsafe()))) {
			if ((!(_314155_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_314155_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
			_314217_kind=_314141_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (_314141_d->_field_kind->_method_sptr() != nullptr) {
		_314217_kind=_314141_d->_field_kind->_method_sptr()->_field_elem;
	}
	{
		if (!((_314141_d->_field_kind->_method_trt() != nullptr))) { goto _case_end_4689869312; }
		_case_begin_4689869312:;
		{
			return (*this)._method_eval_trait_sub_ident(_314141_d,_314141_d->_field_kind->_method_trt(),_314155_si->_field_ident);
		}
		goto _match_end_4689860816;
		_case_end_4689869312:;
		if (!((_314217_kind->_method_strct() != nullptr))) { goto _case_end_4689869408; }
		_case_begin_4689869408:;
		{
			jule::Ptr<_2398d04dc_StructIns> _316017_s = _314217_kind->_method_strct();
			if (_20683ebaa_is_instanced_struct(_316017_s)) {
				jule::Bool _316225_used_reference_elem = _314141_d->_field_kind->_method_sptr() != nullptr;
				return (*this)._method_eval_struct_sub_ident(_314141_d,_314217_kind->_method_strct(),_314155_si,_316225_used_reference_elem);
			}
		}
		goto _match_end_4689860816;
		_case_end_4689869408:;
		if (!((_314217_kind->_method_slc() != nullptr))) { goto _case_end_4689869504; }
		_case_begin_4689869504:;
		{
			return (*this)._method_eval_slice_sub_ident(_314141_d,_314155_si->_field_ident);
		}
		goto _match_end_4689860816;
		_case_end_4689869504:;
		if (!((_314217_kind->_method_arr() != nullptr))) { goto _case_end_4689869600; }
		_case_begin_4689869600:;
		{
			return (*this)._method_eval_array_sub_ident(_314141_d,_314155_si->_field_ident);
		}
		goto _match_end_4689860816;
		_case_end_4689869600:;
		if (!((_314217_kind->_method_map() != nullptr))) { goto _case_end_4689869696; }
		_case_begin_4689869696:;
		{
			return (*this)._method_eval_map_sub_ident(_314141_d,_314155_si->_field_ident);
		}
		goto _match_end_4689860816;
		_case_end_4689869696:;
		if (!((_314217_kind->_method_prim() != nullptr))) { goto _case_end_4689869792; }
		_case_begin_4689869792:;
		{
			jule::Ptr<_2300b54e5_Prim> _317617_p = _314217_kind->_method_prim();
			{
				auto &_match_expr{ _317617_p->_field_kind };
				if (!(_match_expr == (jule::Str("str", 3)))) { goto _case_end_4689884976; }
				_case_begin_4689884976:;
				{
					return (*this)._method_eval_str_sub_ident(_314141_d,_314155_si->_field_ident);
				}
				goto _match_end_4689887440;
				_case_end_4689884976:;
				_match_end_4689887440:;
			}
		}
		goto _match_end_4689860816;
		_case_end_4689869792:;
		_match_end_4689860816:;
	}
	(*this)._method_push_err(_314155_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_314141_d->_field_kind->_method_to_str())}));
	return nullptr;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_sub_ident(jule::Ptr<_221d8b043_SubIdentExpr> _318738_si) {
	jule::Ptr<_2300b54e5_TypeKind> _318817_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_318817_prefix;
	});
	jule::Ptr<_20683ebaa_Data> _319217_d = this->self->_method_eval_expr_kind(_318738_si->_field_expr);
	if (_319217_d == nullptr) {
		return nullptr;
	}
	if (_319217_d->_field_decl) {
		return this->self->_method_eval_type_static(_319217_d,_318738_si);
	}
	return this->self->_method_eval_obj_sub_ident(_319217_d,_318738_si);
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_tuple(jule::Ptr<_221d8b043_TupleExpr> _320434_tup) {
	jule::Ptr<_2300b54e5_Tuple> _320517_tup_t = jule::new_struct_ptr<_2300b54e5_Tuple>(new( std::nothrow ) _2300b54e5_Tuple());
	_320517_tup_t->_field_types=jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_320434_tup->_field_expr.len()));
	jule::Ptr<_21eedb492_TupleExprModel> _320817_model = jule::new_struct<_21eedb492_TupleExprModel>(new( std::nothrow ) _21eedb492_TupleExprModel(jule::Slice<jule::Ptr<_20683ebaa_Data>>::alloc(0LL,static_cast<jule::I64>(_320434_tup->_field_expr.len()))));
	jule::Bool _321217_ok = true;
	{
		auto &expr = _320434_tup->_field_expr;
		auto it = expr.begin();
		_iter_begin_4689909408:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_Expr> _20683ebaa_expr = *it;
			{
				jule::Ptr<_20683ebaa_Data> _321421_d = this->self->_method_eval_expr_kind(_20683ebaa_expr->_field_kind);
				if (_321421_d == nullptr) {
					_321217_ok=false;
					goto _iter_next_4689909408;
				}
				_320517_tup_t->_field_types = jule::alloc_for_append(_320517_tup_t->_field_types,1);_320517_tup_t->_field_types.push(_321421_d->_field_kind);
				_320817_model->_field_datas = jule::alloc_for_append(_320817_model->_field_datas,1);_320817_model->_field_datas.push(_321421_d);
			}
			_iter_next_4689909408:;
			++it;
			goto _iter_begin_4689909408;
		}
		_iter_end_4689909408:;
	}
	if ((!(_321217_ok))) {
		return nullptr;
	}
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_320517_tup_t)),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_320817_model),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_map(jule::Ptr<_2300b54e5_Map> _323332_m,jule::Ptr<_221d8b043_BraceLit> _323345_lit) {
	jule::Ptr<_21eedb492_MapExprModel> _323417_model = jule::new_struct<_21eedb492_MapExprModel>(new( std::nothrow ) _21eedb492_MapExprModel(_323332_m->_field_key,_323332_m->_field_val,jule::Slice<jule::Ptr<_21eedb492_KeyValPairExprModel>>()));
	{
		auto &expr = _323345_lit->_field_exprs;
		auto it = expr.begin();
		_iter_begin_4689921440:;
		if (it != expr.end()) {
			jule::Any _20683ebaa_expr = *it;
			{
				{
					auto &_match_expr{ _20683ebaa_expr };
					if (!(_match_expr.type_is<jule::Ptr<_221d8b043_KeyValPair>>())) { goto _case_end_4689925600; }
					goto _match_end_4689923072;
					_case_end_4689925600:;
					_case_begin_4689922608:;
					{
						this->self->_method_push_err(_323345_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						return nullptr;
					}
					goto _match_end_4689923072;
					_case_end_4689922608:;
					_match_end_4689923072:;
				}
				jule::Ptr<_221d8b043_KeyValPair> _324921_pair = _20683ebaa_expr.operator jule::Ptr<_221d8b043_KeyValPair>();
				jule::Ptr<_20683ebaa_Data> _325121_key = this->self->_method_eval_expr_kind(_324921_pair->_field_key);
				if (_325121_key == nullptr) {
					return nullptr;
				}
				jule::Ptr<_20683ebaa_Data> _325621_val = this->self->_method_eval_expr_kind(_324921_pair->_field_val);
				if (_325621_val == nullptr) {
					return nullptr;
				}
				this->self->_field_s->_method_check_assign_type(false,_323332_m->_field_key,_325121_key,_324921_pair->_field_colon);
				this->self->_field_s->_method_check_assign_type(false,_323332_m->_field_val,_325621_val,_324921_pair->_field_colon);
				_323417_model->_field_entries = jule::alloc_for_append(_323417_model->_field_entries,1);_323417_model->_field_entries.push(jule::new_struct<_21eedb492_KeyValPairExprModel>(new( std::nothrow ) _21eedb492_KeyValPairExprModel(_325121_key->_field_model,_325621_val->_field_model)));
			}
			_iter_next_4689921440:;
			++it;
			goto _iter_begin_4689921440;
		}
		_iter_end_4689921440:;
	}
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_323332_m)),jule::Ptr<_2300b54e5_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),jule::Any(_323417_model),false,jule::Ptr<_206e210e3_Const>()));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_brace_lit(jule::Ptr<_221d8b043_BraceLit> _328038_lit) {
	{
		if (!((this->self->_field_prefix == nullptr))) { goto _case_end_4689941696; }
		_case_begin_4689941696:;
		{
			this->self->_method_push_err(_328038_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4689938944;
		_case_end_4689941696:;
		if (!((this->self->_field_prefix->_method_map() != nullptr))) { goto _case_end_4689941888; }
		_case_begin_4689941888:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_328038_lit);
		}
		goto _match_end_4689938944;
		_case_end_4689941888:;
		if (!((this->self->_field_prefix->_method_strct() != nullptr))) { goto _case_end_4689941984; }
		_case_begin_4689941984:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_328038_lit->_field_exprs,_328038_lit->_field_token);
		}
		goto _match_end_4689938944;
		_case_end_4689941984:;
		_case_begin_4689939120:;
		{
			this->self->_method_push_err(_328038_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4689938944;
		_case_end_4689939120:;
		_match_end_4689938944:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_anon_fn(jule::Ptr<_221d8b043_FnDecl> _329835_decl) {
	_2300b54e5_TypeChecker _329917_tc = _2300b54e5_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ptr<_2300b54e5_Referencer>(),_2220dce43_Token(),jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>(),jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>(),jule::Bool());
	jule::Ptr<_222edb48e_FnIns> _330317_ins = _329917_tc._method_build_fn(_329835_decl);
	_330317_ins->_field_anon=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ScopeChecker>>())) { goto _case_end_4689956384; }
		_case_begin_4689956384:;
		{
			jule::Ptr<_2300254bb_ScopeChecker> _330821_sc = (*this)._field_lookup.operator jule::Ptr<_2300254bb_ScopeChecker>();
			jule::Ptr<_2300254bb_ScopeChecker> _330921_scc = _330821_sc->_method_new_child_checker();
			_330921_scc->_field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeLabel>>>(nullptr);
			_330921_scc->_field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeGoto>>>(nullptr);
			_330921_scc->_field_owner=nullptr;
			_330921_scc->_field_child_index=0LL;
			_330921_scc->_field_it=0LL;
			_330921_scc->_field_cse=0LL;
			_330921_scc->_field_owner=_330317_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_330317_ins,_330921_scc);
		}
		goto _match_end_4689955696;
		_case_end_4689956384:;
		_case_begin_4689952944:;
		{
			(*this)._field_s->_method_check_fn_ins(_330317_ins);
		}
		goto _match_end_4689955696;
		_case_end_4689952944:;
		_match_end_4689955696:;
	}
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_330317_ins)),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_AnonFnExprModel>(new( std::nothrow ) _21eedb492_AnonFnExprModel(_330317_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_binop(jule::Ptr<_221d8b043_BinopExpr> _333234_op) {
	jule::Ptr<_2300b54e5_TypeKind> _333317_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_333317_prefix;
	});
	_20683ebaa_BinopSolver _333717_bs = _20683ebaa_BinopSolver(this->self,jule::Ptr<_20683ebaa_Data>(),jule::Ptr<_20683ebaa_Data>(),_2220dce43_Token());
	return _333717_bs._method_solve(_333234_op);
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_ternary(jule::Ptr<_221d8b043_TernaryExpr> _334336_ter) {
	jule::Ptr<_20683ebaa_Data> _334417_d = this->self->_method_eval_expr_kind(_334336_ter->_field_condition);
	if (_334417_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_2300b54e5_Prim> _334913_prim = _334417_d->_field_kind->_method_prim();
	if ((_334913_prim == nullptr) || (!(_334913_prim->_method_is_bool()))) {
		this->self->_method_push_err(_334336_ter->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_20683ebaa_Data> _335517_td = this->self->_method_eval_expr_kind(_334336_ter->_field_true_expr);
	if (_335517_td == nullptr) {
		return nullptr;
	}
	if (_335517_td->_field_kind->_method_void()) {
		this->self->_method_push_err(_334336_ter->_field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_2300b54e5_TypeKind> _336517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_335517_td->_field_kind;
	jule::Ptr<_20683ebaa_Data> _336817_fd = this->self->_method_eval_expr_kind(_334336_ter->_field_false_expr);
	this->self->_field_prefix=_336517_prefix;
	if (_336817_fd == nullptr) {
		return nullptr;
	}
	_2200223c9_AssignTypeChecker _337517_ac = _2200223c9_AssignTypeChecker(this->self->_field_s,jule::Ptr<_2300b54e5_TypeKind>(),jule::Ptr<_20683ebaa_Data>(),_334336_ter->_field_token);
	if (_335517_td->_method_is_const() && (!(_336817_fd->_method_is_const()))) {
		_337517_ac._field_dest=_336817_fd->_field_kind;
		_337517_ac._field_d=_335517_td;
	} else {
		_337517_ac._field_dest=_335517_td->_field_kind;
		_337517_ac._field_d=_336817_fd;
	}
	if ((!(_337517_ac._method_check()))) {
		this->self->_method_push_suggestion(jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>());
	}
	if (_334417_d->_method_is_const()) {
		if (_334417_d->_field_constant->_method_read_bool()) {
			return _335517_td;
		}
		return _336817_fd;
	}
	jule::Ptr<_20683ebaa_Data> _339717_r = jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data());
	_339717_r->_field_kind=_337517_ac._field_dest;
	_339717_r->_field_lvalue=false;
	_339717_r->_field_mutable=_339717_r->_field_kind->_method_mutable();
	_339717_r->_field_model=jule::Any(jule::new_struct<_21eedb492_TernaryExprModel>(new( std::nothrow ) _21eedb492_TernaryExprModel(_334417_d->_field_model,_335517_td->_field_model,_336817_fd->_field_model)));
	return _339717_r;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_expr_kind(jule::Any _340938_kind) {
	jule::Ptr<_20683ebaa_Data> _341017_d = nullptr;
	{
		auto &_match_expr{ _340938_kind };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_LitExpr>>())) { goto _case_end_4690006928; }
		_case_begin_4690006928:;
		{
			_341017_d=this->self->_method_eval_lit(_340938_kind.operator jule::Ptr<_221d8b043_LitExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690006928:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_IdentExpr>>())) { goto _case_end_4690007776; }
		_case_begin_4690007776:;
		{
			_341017_d=this->self->_method_eval_ident(_340938_kind.operator jule::Ptr<_221d8b043_IdentExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690007776:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_UnaryExpr>>())) { goto _case_end_4690008256; }
		_case_begin_4690008256:;
		{
			_341017_d=this->self->_method_eval_unary(_340938_kind.operator jule::Ptr<_221d8b043_UnaryExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690008256:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_VariadicExpr>>())) { goto _case_end_4690008352; }
		_case_begin_4690008352:;
		{
			_341017_d=this->self->_method_eval_variadic(_340938_kind.operator jule::Ptr<_221d8b043_VariadicExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690008352:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_UnsafeExpr>>())) { goto _case_end_4690008448; }
		_case_begin_4690008448:;
		{
			_341017_d=this->self->_method_eval_unsafe(_340938_kind.operator jule::Ptr<_221d8b043_UnsafeExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690008448:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_SliceExpr>>())) { goto _case_end_4690008544; }
		_case_begin_4690008544:;
		{
			_341017_d=this->self->_method_eval_slice_expr(_340938_kind.operator jule::Ptr<_221d8b043_SliceExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690008544:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_IndexingExpr>>())) { goto _case_end_4690008640; }
		_case_begin_4690008640:;
		{
			_341017_d=this->self->_method_eval_indexing(_340938_kind.operator jule::Ptr<_221d8b043_IndexingExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690008640:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_SlicingExpr>>())) { goto _case_end_4690008736; }
		_case_begin_4690008736:;
		{
			_341017_d=this->self->_method_eval_slicing(_340938_kind.operator jule::Ptr<_221d8b043_SlicingExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690008736:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_CastExpr>>())) { goto _case_end_4690008832; }
		_case_begin_4690008832:;
		{
			_341017_d=this->self->_method_eval_cast(_340938_kind.operator jule::Ptr<_221d8b043_CastExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690008832:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_NsSelectionExpr>>())) { goto _case_end_4690008928; }
		_case_begin_4690008928:;
		{
			_341017_d=this->self->_method_eval_ns_selection(_340938_kind.operator jule::Ptr<_221d8b043_NsSelectionExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690008928:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_StructLit>>())) { goto _case_end_4690009024; }
		_case_begin_4690009024:;
		{
			_341017_d=this->self->_method_eval_struct_lit(_340938_kind.operator jule::Ptr<_221d8b043_StructLit>());
		}
		goto _match_end_4690007696;
		_case_end_4690009024:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TypeDecl>>())) { goto _case_end_4690009120; }
		_case_begin_4690009120:;
		{
			_341017_d=this->self->_method_eval_type(_340938_kind.operator jule::Ptr<_221d8b043_TypeDecl>());
		}
		goto _match_end_4690007696;
		_case_end_4690009120:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FnCallExpr>>())) { goto _case_end_4690009232; }
		_case_begin_4690009232:;
		{
			_341017_d=this->self->_method_eval_fn_call(_340938_kind.operator jule::Ptr<_221d8b043_FnCallExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690009232:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_SubIdentExpr>>())) { goto _case_end_4690009344; }
		_case_begin_4690009344:;
		{
			_341017_d=this->self->_method_eval_sub_ident(_340938_kind.operator jule::Ptr<_221d8b043_SubIdentExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690009344:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TupleExpr>>())) { goto _case_end_4690009456; }
		_case_begin_4690009456:;
		{
			_341017_d=this->self->_method_eval_tuple(_340938_kind.operator jule::Ptr<_221d8b043_TupleExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690009456:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_BraceLit>>())) { goto _case_end_4690009568; }
		_case_begin_4690009568:;
		{
			_341017_d=this->self->_method_eval_brace_lit(_340938_kind.operator jule::Ptr<_221d8b043_BraceLit>());
		}
		goto _match_end_4690007696;
		_case_end_4690009568:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FnDecl>>())) { goto _case_end_4690009680; }
		_case_begin_4690009680:;
		{
			_341017_d=this->self->_method_eval_anon_fn(_340938_kind.operator jule::Ptr<_221d8b043_FnDecl>());
		}
		goto _match_end_4690007696;
		_case_end_4690009680:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_BinopExpr>>())) { goto _case_end_4690009792; }
		_case_begin_4690009792:;
		{
			_341017_d=this->self->_method_eval_binop(_340938_kind.operator jule::Ptr<_221d8b043_BinopExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690009792:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TernaryExpr>>())) { goto _case_end_4690009904; }
		_case_begin_4690009904:;
		{
			_341017_d=this->self->_method_eval_ternary(_340938_kind.operator jule::Ptr<_221d8b043_TernaryExpr>());
		}
		goto _match_end_4690007696;
		_case_end_4690009904:;
		_match_end_4690007696:;
	}
	if (_341017_d == nullptr) {
		return nullptr;
	}
	if (_341017_d->_field_kind == nullptr) {
		return _341017_d;
	}
	if ((((_341017_d->_field_cast_kind == nullptr) && _341017_d->_method_is_const()) && (!(_341017_d->_field_is_rune))) && (_341017_d->_field_kind->_method_prim() != nullptr)) {
		{
			if (!((_341017_d->_field_constant->_method_is_i64()))) { goto _case_end_4690045488; }
			_case_begin_4690045488:;
			{
				if (_2200223c9_int_assignable(jule::Str("int", 3),_341017_d)) {
					_341017_d->_field_kind->_field_kind=_2300b54e5_build_prim_type(jule::Str("int", 3));
					_341017_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_341017_d->_field_constant->_method_as_i64()));
				}
			}
			goto _match_end_4690044064;
			_case_end_4690045488:;
			if (!((_341017_d->_field_constant->_method_is_u64()))) { goto _case_end_4690045600; }
			_case_begin_4690045600:;
			{
				if (_2200223c9_int_assignable(jule::Str("uint", 4),_341017_d)) {
					_341017_d->_field_kind->_field_kind=_2300b54e5_build_prim_type(jule::Str("uint", 4));
					_341017_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_341017_d->_field_constant->_method_as_u64()));
				}
			}
			goto _match_end_4690044064;
			_case_end_4690045600:;
			_match_end_4690044064:;
		}
	}
	if ((!(_341017_d->_field_decl))) {
		if ((((((((!(_341017_d->_field_kind->_method_cpp_linked())) && (this->self->_field_prefix != nullptr)) && (_341017_d->_field_cast_kind == nullptr)) && (!(_341017_d->_field_variadiced))) && (!(_341017_d->_field_lvalue))) && (!(_341017_d->_method_is_const()))) && (_341017_d->_field_kind->_method_prim() != nullptr)) && _206ec1e1e_is_num(_341017_d->_field_kind->_method_prim()->_field_kind)) {
			_341017_d->_field_cast_kind=_341017_d->_field_kind;
		}
		_20683ebaa_apply_cast_kind(_341017_d);
		if ((_341017_d->_field_kind->_method_prim() == nullptr) || (!(_341017_d->_field_kind->_method_prim()->_method_is_any()))) {
			if (((this->self->_field_prefix != nullptr) && (this->self->_field_prefix->_method_prim() != nullptr)) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_341017_d->_field_cast_kind=this->self->_field_prefix;
				_20683ebaa_apply_cast_kind_model(_341017_d);
				_341017_d->_field_cast_kind=nullptr;
			}
		}
	}
	return _341017_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval(jule::Ptr<_221d8b043_Expr> _348628_expr) {
	jule::Ptr<_20683ebaa_Data> _348717_d = this->self->_method_eval_expr_kind(_348628_expr->_field_kind);
	if ((_348717_d == nullptr) || (_348717_d->_field_kind == nullptr)) {
		return nullptr;
	}
	{
		if (!((_348717_d->_field_kind->_method_fnc() != nullptr))) { goto _case_end_4690073008; }
		_case_begin_4690073008:;
		{
			jule::Ptr<_222edb48e_FnIns> _349421_f = _348717_d->_field_kind->_method_fnc();
			if (_349421_f->_method_is_builtin()) {
				goto _match_end_4690072720;
			}
			if (_349421_f->_field_generics.len() != _349421_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_348628_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
			}
			if (_349421_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_348628_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
			}
		}
		goto _match_end_4690072720;
		_case_end_4690073008:;
		_match_end_4690072720:;
	}
	return _348717_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_Eval::_method_eval_expr(jule::Ptr<_221d8b043_Expr> _351433_expr) {
	jule::Ptr<_20683ebaa_Data> _351517_d = this->self->_method_eval(_351433_expr);
	{
		if (!((_351517_d == nullptr))) { goto _case_end_4690087312; }
		_case_begin_4690087312:;
		{
			return nullptr;
		}
		goto _match_end_4690085872;
		_case_end_4690087312:;
		if (!((_351517_d->_field_decl))) { goto _case_end_4690087408; }
		_case_begin_4690087408:;
		{
			this->self->_method_push_err(_351433_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4690085872;
		_case_end_4690087408:;
		_case_begin_4690085952:;
		{
			return _351517_d;
		}
		goto _match_end_4690085872;
		_case_end_4690085952:;
		_match_end_4690085872:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _20683ebaa_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2300b54e5_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6517_kind = jule::Str();
	if ((*this)._field_variadic) {
		_6517_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_cpp_linked()) {
		_6517_kind+=jule::Str("cpp.", 4);
		_6517_kind+=(*this)._field_cpp_ident;
	} else {
		_6517_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6517_kind;
}



inline jule::Bool _2300b54e5_TypeKind::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _8122_other) {
	if (this->self->_method_is_nil()) {
		return _8122_other->_method_is_nil();
	}
	if (this->self->_method_cpp_linked()) {
		return _8122_other->_method_cpp_linked() && (this->self->_field_cpp_ident == _8122_other->_field_cpp_ident);
	}
	return this->self->_field_kind.get()._method_equals(_8122_other);
}



inline jule::Ptr<_2300b54e5_TypeKind> _2300b54e5_TypeKind::_method_clone(void) {
	if (this->self == nullptr) {
		return nullptr;
	}
	jule::Ptr<_2300b54e5_TypeKind> _10217_kind = jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(this->self->_field_cpp_ident,jule::Bool(),jule::Bool(),this->self->_field_kind));
	return _10217_kind;
}



inline jule::Bool _2300b54e5_TypeKind::_method_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



inline jule::Bool _2300b54e5_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _2300b54e5_TypeKind::_method_void(void) {
	jule::Ptr<_2300b54e5_Prim> _11713_prim = (*this)._method_prim();
	return (_11713_prim != nullptr) && (_11713_prim->_method_to_str() == jule::Str("void", 4));
}



inline jule::Bool _2300b54e5_TypeKind::_method_mutable(void) {
	{
		_2300b54e5_TypeKind* _12421__self = (&((*this)));
		if (_12421__self->_method_strct() != nullptr) {
			return _12421__self->_method_strct()->_field_mutable;
		}
		if (_12421__self->_method_trt() != nullptr) {
			return _12421__self->_method_trt()->_field_mutable;
		}
		if (_12421__self->_method_prim() != nullptr) {
			jule::Ptr<_2300b54e5_Prim> _13321_p = _12421__self->_method_prim();
			return _13321_p->_method_is_any();
		}
		if (_12421__self->_method_arr() != nullptr) {
			return _12421__self->_method_arr()->_field_elem->_method_mutable();
		}
		return ((_12421__self->_method_slc() != nullptr) || (_12421__self->_method_ptr() != nullptr)) || (_12421__self->_method_sptr() != nullptr);
	}
}



inline jule::Bool _2300b54e5_TypeKind::_method_nil_compatible(void) {
	{
		_2300b54e5_TypeKind* _14821__self = (&((*this)));
		jule::Ptr<_2300b54e5_Prim> _15017_prim = _14821__self->_method_prim();
		if ((_15017_prim != nullptr) && _15017_prim->_method_is_any()) {
			return true;
		}
		return (((((_14821__self->_method_is_nil() || (_14821__self->_method_fnc() != nullptr)) || (_14821__self->_method_sptr() != nullptr)) || (_14821__self->_method_ptr() != nullptr)) || (_14821__self->_method_trt() != nullptr)) || (_14821__self->_method_slc() != nullptr)) || (_14821__self->_method_map() != nullptr);
	}
}



inline jule::Bool _2300b54e5_TypeKind::_method_supports_cloning(void) {
	{
		_2300b54e5_TypeKind* _16821__self = (&((*this)));
		{
			if (!((_16821__self->_method_prim() != nullptr))) { goto _case_end_4692610208; }
			_case_begin_4692610208:;
			{
				return (!(_16821__self->_method_prim()->_method_is_any()));
			}
			goto _match_end_4692608336;
			_case_end_4692610208:;
			if (!((_16821__self->_method_enm() != nullptr))) { goto _case_end_4692608752; }
			_case_begin_4692608752:;
			{
				return true;
			}
			goto _match_end_4692608336;
			_case_end_4692608752:;
			if (!((_16821__self->_method_fnc() != nullptr))) { goto _case_end_4692608848; }
			_case_begin_4692608848:;
			{
				return true;
			}
			goto _match_end_4692608336;
			_case_end_4692608848:;
			if (!((_16821__self->_method_ptr() != nullptr))) { goto _case_end_4692608960; }
			_case_begin_4692608960:;
			{
				return true;
			}
			goto _match_end_4692608336;
			_case_end_4692608960:;
			if (!((_16821__self->_method_slc() != nullptr))) { goto _case_end_4692609072; }
			_case_begin_4692609072:;
			{
				return _16821__self->_method_slc()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4692608336;
			_case_end_4692609072:;
			if (!((_16821__self->_method_map() != nullptr))) { goto _case_end_4692609472; }
			_case_begin_4692609472:;
			{
				jule::Ptr<_2300b54e5_Map> _18221_m = _16821__self->_method_map();
				return _18221_m->_field_key->_method_supports_cloning() && _18221_m->_field_val->_method_supports_cloning();
			}
			goto _match_end_4692608336;
			_case_end_4692609472:;
			if (!((_16821__self->_method_arr() != nullptr))) { goto _case_end_4692609584; }
			_case_begin_4692609584:;
			{
				return _16821__self->_method_arr()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4692608336;
			_case_end_4692609584:;
			if (!((_16821__self->_method_sptr() != nullptr))) { goto _case_end_4692609696; }
			_case_begin_4692609696:;
			{
				return _16821__self->_method_sptr()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4692608336;
			_case_end_4692609696:;
			if (!((_16821__self->_method_strct() != nullptr))) { goto _case_end_4692609808; }
			_case_begin_4692609808:;
			{
				jule::Ptr<_2398d04dc_StructIns> _19225_s = _16821__self->_method_strct();
				if ((!(_19225_s->_field_mutable))) {
					return true;
				}
				if (((_19225_s->_field_decl == nullptr) || _19225_s->_field_decl->_field_cpp_linked) || (!(_19225_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					return false;
				}
				return true;
			}
			goto _match_end_4692608336;
			_case_end_4692609808:;
			_case_begin_4692608448:;
			{
				return false;
			}
			goto _match_end_4692608336;
			_case_end_4692608448:;
			_match_end_4692608336:;
		}
	}
}



inline jule::Bool _2300b54e5_TypeKind::_method_variadicable(void) {
	{
		_2300b54e5_TypeKind* _21221__self = (&((*this)));
		return _21221__self->_method_slc() != nullptr;
	}
}



inline jule::Ptr<_2300b54e5_Prim> _2300b54e5_TypeKind::_method_prim(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_Prim>>())) { goto _case_end_4692634944; }
		_case_begin_4692634944:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2300b54e5_Prim>();
		}
		goto _match_end_4692585040;
		_case_end_4692634944:;
		_case_begin_4692596832:;
		{
			return nullptr;
		}
		goto _match_end_4692585040;
		_case_end_4692596832:;
		_match_end_4692585040:;
	}
}



inline jule::Ptr<_2300b54e5_Sptr> _2300b54e5_TypeKind::_method_sptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_Sptr>>())) { goto _case_end_4692638048; }
		_case_begin_4692638048:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2300b54e5_Sptr>();
		}
		goto _match_end_4692635664;
		_case_end_4692638048:;
		_case_begin_4692632544:;
		{
			return nullptr;
		}
		goto _match_end_4692635664;
		_case_end_4692632544:;
		_match_end_4692635664:;
	}
}



inline jule::Ptr<_2300b54e5_Ptr> _2300b54e5_TypeKind::_method_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_Ptr>>())) { goto _case_end_4692641152; }
		_case_begin_4692641152:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2300b54e5_Ptr>();
		}
		goto _match_end_4692637264;
		_case_end_4692641152:;
		_case_begin_4692638992:;
		{
			return nullptr;
		}
		goto _match_end_4692637264;
		_case_end_4692638992:;
		_match_end_4692637264:;
	}
}



inline jule::Ptr<_23001604a_Enum> _2300b54e5_TypeKind::_method_enm(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_23001604a_Enum>>())) { goto _case_end_4692644224; }
		_case_begin_4692644224:;
		{
			return (*this)._field_kind.operator jule::Ptr<_23001604a_Enum>();
		}
		goto _match_end_4692640400;
		_case_end_4692644224:;
		_case_begin_4692642064:;
		{
			return nullptr;
		}
		goto _match_end_4692640400;
		_case_end_4692642064:;
		_match_end_4692640400:;
	}
}



inline jule::Ptr<_2300b54e5_Arr> _2300b54e5_TypeKind::_method_arr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_Arr>>())) { goto _case_end_4692647472; }
		_case_begin_4692647472:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2300b54e5_Arr>();
		}
		goto _match_end_4692643472;
		_case_end_4692647472:;
		_case_begin_4692644832:;
		{
			return nullptr;
		}
		goto _match_end_4692643472;
		_case_end_4692644832:;
		_match_end_4692643472:;
	}
}



inline jule::Ptr<_2300b54e5_Slc> _2300b54e5_TypeKind::_method_slc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_Slc>>())) { goto _case_end_4692650544; }
		_case_begin_4692650544:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2300b54e5_Slc>();
		}
		goto _match_end_4692646720;
		_case_end_4692650544:;
		_case_begin_4692648384:;
		{
			return nullptr;
		}
		goto _match_end_4692646720;
		_case_end_4692648384:;
		_match_end_4692646720:;
	}
}



inline jule::Ptr<_222edb48e_FnIns> _2300b54e5_TypeKind::_method_fnc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_222edb48e_FnIns>>())) { goto _case_end_4692653808; }
		_case_begin_4692653808:;
		{
			return (*this)._field_kind.operator jule::Ptr<_222edb48e_FnIns>();
		}
		goto _match_end_4692649792;
		_case_end_4692653808:;
		_case_begin_4692651424:;
		{
			return nullptr;
		}
		goto _match_end_4692649792;
		_case_end_4692651424:;
		_match_end_4692649792:;
	}
}



inline jule::Ptr<_2398d04dc_StructIns> _2300b54e5_TypeKind::_method_strct(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_StructIns>>())) { goto _case_end_4692656912; }
		_case_begin_4692656912:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2398d04dc_StructIns>();
		}
		goto _match_end_4692653072;
		_case_end_4692656912:;
		_case_begin_4692654752:;
		{
			return nullptr;
		}
		goto _match_end_4692653072;
		_case_end_4692654752:;
		_match_end_4692653072:;
	}
}



inline jule::Ptr<_2300167cb_Trait> _2300b54e5_TypeKind::_method_trt(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2300167cb_Trait>>())) { goto _case_end_4692660160; }
		_case_begin_4692660160:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2300167cb_Trait>();
		}
		goto _match_end_4692656160;
		_case_end_4692660160:;
		_case_begin_4692657520:;
		{
			return nullptr;
		}
		goto _match_end_4692656160;
		_case_end_4692657520:;
		_match_end_4692656160:;
	}
}



inline jule::Ptr<_2300b54e5_Map> _2300b54e5_TypeKind::_method_map(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_Map>>())) { goto _case_end_4692663424; }
		_case_begin_4692663424:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2300b54e5_Map>();
		}
		goto _match_end_4692659408;
		_case_end_4692663424:;
		_case_begin_4692660768:;
		{
			return nullptr;
		}
		goto _match_end_4692659408;
		_case_end_4692660768:;
		_match_end_4692659408:;
	}
}



inline jule::Ptr<_2300b54e5_Tuple> _2300b54e5_TypeKind::_method_tup(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_Tuple>>())) { goto _case_end_4692666592; }
		_case_begin_4692666592:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2300b54e5_Tuple>();
		}
		goto _match_end_4692662672;
		_case_end_4692666592:;
		_case_begin_4692664032:;
		{
			return nullptr;
		}
		goto _match_end_4692662672;
		_case_end_4692664032:;
		_match_end_4692662672:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2300b54e5_TypeSymbol::_method_checked(void) {
	return (*this)._field_kind != nullptr;
}



inline void _2300b54e5_TypeSymbol::_method_remove_kind(void) {
	(*this)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2300b54e5_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _2300b54e5_Prim::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _33122_other) {
	jule::Ptr<_2300b54e5_Prim> _33213_prim = _33122_other->_method_prim();
	if (_33213_prim == nullptr) {
		return false;
	}
	return _206e24cd9_real_kind_of(this->self->_field_kind) == _206e24cd9_real_kind_of(_33213_prim->_field_kind);
}



inline jule::Bool _2300b54e5_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _2300b54e5_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _2300b54e5_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _2300b54e5_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _2300b54e5_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _2300b54e5_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _2300b54e5_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _2300b54e5_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _2300b54e5_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _2300b54e5_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _2300b54e5_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _2300b54e5_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _2300b54e5_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _2300b54e5_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _2300b54e5_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _2300b54e5_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2300b54e5_Sptr::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _2300b54e5_Sptr::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _40022_other) {
	jule::Ptr<_2300b54e5_Sptr> _40113_sptr = _40022_other->_method_sptr();
	if (_40113_sptr == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_40113_sptr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_Sptr &_Src) {
	_Stream << "Sptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2300b54e5_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _2300b54e5_Slc::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _41922_other) {
	jule::Ptr<_2300b54e5_Slc> _42013_slc = _41922_other->_method_slc();
	if (_42013_slc == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_42013_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2300b54e5_Tuple::_method_to_str(void) {
	jule::Str _43617_s = jule::Str("(", 1);
	_43617_s+=(*this)._field_types[0LL]->_method_to_str();
	{
		auto expr = (*this)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4692719808:;
		if (it != expr.end()) {
			jule::Ptr<_2300b54e5_TypeKind> &_2300b54e5_t = *it;
			{
				_43617_s+=jule::Str(",", 1);
				_43617_s+=_2300b54e5_t->_method_to_str();
			}
			_iter_next_4692719808:;
			++it;
			goto _iter_begin_4692719808;
		}
		_iter_end_4692719808:;
	}
	_43617_s+=jule::Str(")", 1);
	return _43617_s;
}



inline jule::Bool _2300b54e5_Tuple::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _44722_other) {
	jule::Ptr<_2300b54e5_Tuple> _44813_tup = _44722_other->_method_tup();
	if (_44813_tup == nullptr) {
		return false;
	}
	if (this->self->_field_types.len() != _44813_tup->_field_types.len()) {
		return false;
	}
	jule::Int _45717_i = 0LL;
	for (; _45717_i < this->self->_field_types.len(); (_45717_i)++) {
		{
			if ((!(this->self->_field_types[_45717_i]->_method_equals(_44813_tup->_field_types[_45717_i])))) {
				return false;
			}
		}
	_iter_next_4692727952:;
	}
	_iter_end_4692727952:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2300b54e5_Map::_method_to_str(void) {
	jule::Str _47717_s = jule::Str("[", 1);
	_47717_s+=(*this)._field_key->_method_to_str();
	_47717_s+=jule::Str(":", 1);
	_47717_s+=(*this)._field_val->_method_to_str();
	_47717_s+=jule::Str("]", 1);
	return _47717_s;
}



inline jule::Bool _2300b54e5_Map::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _48622_other) {
	jule::Ptr<_2300b54e5_Map> _48713_map = _48622_other->_method_map();
	if (_48713_map == nullptr) {
		return false;
	}
	return this->self->_field_key->_method_equals(_48713_map->_field_key) && this->self->_field_val->_method_equals(_48713_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2300b54e5_Arr::_method_to_str(void) {
	jule::Str _50517_s = jule::Str("[", 1);
	_50517_s+=_2397e4467_itoa((*this)._field_n);
	_50517_s+=jule::Str("]", 1);
	_50517_s+=(*this)._field_elem->_method_to_str();
	return _50517_s;
}



inline jule::Bool _2300b54e5_Arr::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _51322_other) {
	jule::Ptr<_2300b54e5_Arr> _51413_arr = _51322_other->_method_arr();
	if (_51413_arr == nullptr) {
		return false;
	}
	return (this->self->_field_n == _51413_arr->_field_n) && this->self->_field_elem->_method_equals(_51413_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2300b54e5_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _2300b54e5_Ptr::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _53722_other) {
	jule::Ptr<_2300b54e5_Ptr> _53813_ptr = _53722_other->_method_ptr();
	if (_53813_ptr == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_53813_ptr->_field_elem);
}



inline jule::Bool _2300b54e5_Ptr::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _221a72a71_DirectiveEval::_method_push_err(_2220dce43_Token _2027_t,jule::Str _2037_fmt,jule::Slice<jule::Any> _2050_args) {
	(*this)._field_logs = jule::alloc_for_append((*this)._field_logs,1);(*this)._field_logs.push(_23886c227_Log(1LLU,_2027_t._field_row,_2027_t._field_column,_2027_t._field_file->_method_path(),_23886c227_logf(_2037_fmt,_2050_args),jule::Str(),jule::Str()));
}



inline jule::Slice<jule::Slice<_2220dce43_Token>> _221a72a71_DirectiveEval::_method_split_operans(jule::Str _3232_op,jule::Slice<_2220dce43_Token>& _3252_tokens) {
	jule::Slice<jule::Slice<_2220dce43_Token>> _3317_parts = jule::Slice<jule::Slice<_2220dce43_Token>>::alloc(0LL,10LL);
	jule::Int _3517_i = 0LL;
	jule::Int _3617_range_n = 0LL;
	jule::Int _3717_last = 0LL;
	for (; _3517_i < (_3252_tokens.len() - 1LL); (_3517_i)++) {
		{
			_2220dce43_Token _3917_b = _3252_tokens[_3517_i];
			if (_3917_b._field_id == 3LLU) {
				{
					auto &_match_expr{ _3917_b._field_kind };
					if (!(_match_expr == (jule::Str("(", 1)))) { goto _case_end_4693266736; }
					_case_begin_4693266736:;
					{
						(_3617_range_n)++;
						goto _iter_next_4693262480;
					}
					goto _match_end_4693266448;
					_case_end_4693266736:;
					if (!(_match_expr == (jule::Str(")", 1)))) { goto _case_end_4693266832; }
					_case_begin_4693266832:;
					{
						(_3617_range_n)--;
					}
					goto _match_end_4693266448;
					_case_end_4693266832:;
					_match_end_4693266448:;
				}
			}
			if ((_3617_range_n > 0LL) || (_3917_b._field_id != 7LLU)) {
				goto _iter_next_4693262480;
			}
			if (_3917_b._field_kind == _3232_op) {
				_3317_parts.push(_3252_tokens.slice(_3717_last,_3517_i));
				_3717_last=static_cast<jule::Int>(_3517_i + 1LL);
			}
		}
	_iter_next_4693262480:;
	}
	_iter_end_4693262480:;
	if (_3717_last < _3252_tokens.len()) {
		_3317_parts.push(_3252_tokens.slice(_3717_last));
	} else {
		(*this)._method_push_err(_3252_tokens[_3717_last - 1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _3317_parts;
}



inline jule::Bool _221a72a71_DirectiveEval::_method_eval_directive_ident(jule::Str _7335_ident) {
	if (_7335_ident == jule::Str()) {
		return false;
	}
	{
		auto &expr = _221c201c4_FLAGS;
		auto it = expr.begin();
		_iter_begin_4693278256:;
		if (it != expr.end()) {
			jule::Str &_221a72a71_flag = *it;
			{
				if (_221a72a71_flag == _7335_ident) {
					return true;
				}
			}
			_iter_next_4693278256:;
			++it;
			goto _iter_begin_4693278256;
		}
		_iter_end_4693278256:;
	}
	return false;
}



inline jule::Bool _221a72a71_DirectiveEval::_method_eval_directive_part(jule::Slice<_2220dce43_Token> _8942_part) {
	jule::Bool _9013_logical_not = (_8942_part[0LL]._field_id == 7LLU) && (_8942_part[0LL]._field_kind == jule::Str("!", 1));
	if (_9013_logical_not) {
		_8942_part=_8942_part.slice(1LL);
	}
	if (_8942_part.len() > 1LL) {
		(*this)._method_push_err(_8942_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _10017_result = (*this)._method_eval_directive_ident(_8942_part[0LL]._field_kind);
	if (_9013_logical_not) {
		_10017_result=(!(_10017_result));
	}
	return _10017_result;
}



inline jule::Bool _221a72a71_DirectiveEval::_method_eval(void) {
	if ((*this)._field_d->_field_args.len() == 0LL) {
		(*this)._method_push_err((*this)._field_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _11317_result = false;
	jule::Slice<jule::Slice<_2220dce43_Token>> _11517_logical_or_parts = (*this)._method_split_operans(jule::Str("||", 2),(*this)._field_d->_field_args);
	if (_11517_logical_or_parts == nullptr) {
		return false;
	}
	{
		auto &expr = _11517_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_4693297200:;
		if (it != expr.end()) {
			jule::Slice<_2220dce43_Token> _221a72a71_part = *it;
			{
				jule::Bool _12121_and = true;
				jule::Slice<jule::Slice<_2220dce43_Token>> _12221_logical_and_parts = (*this)._method_split_operans(jule::Str("&&", 2),_221a72a71_part);
				if (_12221_logical_and_parts == nullptr) {
					return false;
				}
				{
					auto &expr = _12221_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_4693301664:;
					if (it != expr.end()) {
						jule::Slice<_2220dce43_Token> _221a72a71_and_part = *it;
						{
							_2220dce43_Token _12821_first = _221a72a71_and_part[0LL];
							if ((_12821_first._field_id == 3LLU) && (_12821_first._field_kind == jule::Str("(", 1))) {
								_2220dce43_Token _13025_end = _221a72a71_and_part[_221a72a71_and_part.len() - 1LL];
								if ((_13025_end._field_id != 3LLU) || (_13025_end._field_kind != jule::Str(")", 1))) {
									(*this)._method_push_err(_12821_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								}
								_221a72a71_and_part=_221a72a71_and_part.slice(1LL,_221a72a71_and_part.len() - 1LL);
							}
							_12121_and=_12121_and && (*this)._method_eval_directive_part(_221a72a71_and_part);
						}
						_iter_next_4693301664:;
						++it;
						goto _iter_begin_4693301664;
					}
					_iter_end_4693301664:;
				}
				_11317_result=_11317_result || _12121_and;
			}
			_iter_next_4693297200:;
			++it;
			goto _iter_begin_4693297200;
		}
		_iter_end_4693297200:;
	}
	return _11317_result;
}







std::ostream &operator<<(std::ostream &_Stream, const _221a72a71_DirectiveEval &_Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2200229c3_ImportInfo> _221c9ee02_PlainImporter::_method_get_import(jule::Str _9633_path) {
	{
		auto &expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_4693313744:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _221c9ee02_p = *it;
			{
				if (_221c9ee02_p->_field_path == _9633_path) {
					return _221c9ee02_p;
				}
			}
			_iter_next_4693313744:;
			++it;
			goto _iter_begin_4693313744;
		}
		_iter_end_4693313744:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_221d8c242_Ast>>,jule::Slice<_23886c227_Log>> _221c9ee02_PlainImporter::_method_import_package(jule::Str _10637_path) {
	jule::Slice<jule::Ptr<_222bb918e_DirEntry>> _10714_dirents;
	jule::Str _10723_err_msg;
	std::tie(_10714_dirents,_10723_err_msg) = _221c9ee02_read_package_dirents(_10637_path);
	if (_10723_err_msg != jule::Str()) {
		jule::Slice<_23886c227_Log> _10921_errors = jule::Slice<_23886c227_Log>({_221c9ee02_flat_compiler_err(_10723_err_msg)});
		return std::make_tuple(nullptr,_10921_errors);
	}
	jule::Slice<jule::Ptr<_221d8c242_Ast>> _11317_asts = jule::Slice<jule::Ptr<_221d8c242_Ast>>::alloc(0LL,static_cast<jule::I64>(_10714_dirents.len()));
	{
		auto &expr = _10714_dirents;
		auto it = expr.begin();
		_iter_begin_4693322880:;
		if (it != expr.end()) {
			jule::Ptr<_222bb918e_DirEntry> &_221c9ee02_dirent = *it;
			{
				jule::Str _11517__path = _23894b9cc_join(jule::Slice<jule::Str>({_10637_path,_221c9ee02_dirent->_field_name}));
				jule::Ptr<_22212e407_File> _11621_file = _22212e407_new_file_set(_11517__path);
				_11621_file->_method_fill(_221c9ee02_read_buff(_11621_file->_method_path()));
				jule::Slice<_23886c227_Log> _11821_errors = _221db36ec_lex(_11621_file);
				if (_11821_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_11821_errors);
				}
				jule::Ptr<_221e0ec98_FileInfo> _12321_finfo = _221e0ec98_parse_file(_11621_file);
				if (_12321_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12321_finfo->_field_errors);
				}
				if ((!(_221a6dac2_is_pass_file_annotation(_221c9ee02_dirent->_field_name)))) {
					goto _iter_next_4693322880;
				}
				jule::Bool _13318_r;
				jule::Slice<_23886c227_Log> _13325_logs;
				std::tie(_13318_r,_13325_logs) = _221c9ee02_is_pass_build_directives(_12321_finfo->_field_ast);
				if (_13325_logs.len() > 0LL) {
					return std::make_tuple(nullptr,_13325_logs);
				}
				if ((!(_13318_r))) {
					goto _iter_next_4693322880;
				}
				_11317_asts.push(_12321_finfo->_field_ast);
			}
			_iter_next_4693322880:;
			++it;
			goto _iter_begin_4693322880;
		}
		_iter_end_4693322880:;
	}
	return std::make_tuple(_11317_asts,nullptr);
}



inline void _221c9ee02_PlainImporter::_method_imported(jule::Ptr<_2200229c3_ImportInfo> _14935_imp) {
	{
		auto &expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_5640232640:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> &_221c9ee02_p = *it;
			{
				if ((_221c9ee02_p->_field_cpp_linked == _14935_imp->_field_cpp_linked) && (_221c9ee02_p->_field_link_path == _14935_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_5640232640:;
			++it;
			goto _iter_begin_5640232640;
		}
		_iter_end_5640232640:;
	}
	(*this)._field_all_packages = jule::alloc_for_append((*this)._field_all_packages,1);(*this)._field_all_packages.push(_14935_imp);
}







std::ostream &operator<<(std::ostream &_Stream, const _221c9ee02_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2219e5a9e_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2219e5a9e_DefineOrderer::_static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_2200a2657_Var>>& _1837_s,jule::Ptr<_2200a2657_Var> _1846_t) {
	jule::Ptr<_2200a2657_Var>* _1917_p = (&(_1846_t->_field_depends[0LL]));
	jule::Ptr<_2200a2657_Var>* _2013_end = _1917_p + _1846_t->_field_depends.len();
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_4693497136:;
		if (it != expr.end()) {
			jule::Ptr<_2200a2657_Var> &_2219e5a9e_tt = *it;
			{
				{
					if (_2219e5a9e_tt == _1846_t) {
						goto _iter_end_4693497136;
					}
					if (((*(_1917_p))->_field_cpp_linked || ((*(_1917_p))->_field_depends.len() == 0LL)) || (_2219e5a9e_tt == (*(_1917_p)))) {
						(_1917_p)++;
						if (_1917_p == _2013_end) {
							return true;
						}
					}
				}
			}
			_iter_next_4693497136:;
			++it;
			goto _iter_begin_4693497136;
		}
		_iter_end_4693497136:;
	}
	return false;
}

inline jule::Bool _2219e5a9e_DefineOrderer::_static_method_is_common_ordered_1(jule::Slice<jule::Ptr<_2398d04dc_Struct>>& _1837_s,jule::Ptr<_2398d04dc_Struct> _1846_t) {
	jule::Ptr<_2398d04dc_Struct>* _1917_p = (&(_1846_t->_field_depends[0LL]));
	jule::Ptr<_2398d04dc_Struct>* _2013_end = _1917_p + _1846_t->_field_depends.len();
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_4693524464:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> &_2219e5a9e_tt = *it;
			{
				{
					if (_2219e5a9e_tt == _1846_t) {
						goto _iter_end_4693524464;
					}
					if (((*(_1917_p))->_field_cpp_linked || ((*(_1917_p))->_field_depends.len() == 0LL)) || (_2219e5a9e_tt == (*(_1917_p)))) {
						(_1917_p)++;
						if (_1917_p == _2013_end) {
							return true;
						}
					}
				}
			}
			_iter_next_4693524464:;
			++it;
			goto _iter_begin_4693524464;
		}
		_iter_end_4693524464:;
	}
	return false;
}



inline void _2219e5a9e_DefineOrderer::_static_method_order_common_0(jule::Slice<jule::Ptr<_2200a2657_Var>>& _3940_s) {
	jule::Int _4017_i = 0LL;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_4693477456:;
		if (it != expr.end()) {
			jule::Int _2219e5a9e_j = it - expr.begin();
			jule::Ptr<_2200a2657_Var> _2219e5a9e_t = *it;
			{
				if (_2219e5a9e_t->_field_cpp_linked || (_2219e5a9e_t->_field_depends.len() == 0LL)) {
					std::tie(_3940_s[_4017_i],_3940_s.__at(_2219e5a9e_j)) = std::make_tuple(_2219e5a9e_t,_3940_s[_4017_i]);
					(_4017_i)++;
				}
			}
			_iter_next_4693477456:;
			++it;
			_2219e5a9e_j++;
			goto _iter_begin_4693477456;
		}
		_iter_end_4693477456:;
	}
	jule::Int _4817_j = _4017_i;
	for (; _4817_j < _3940_s.len(); (_4817_j)++) {
		{
			jule::Int _5021_k = _4017_i;
			for (; _5021_k < (_3940_s.len() - 1LL); (_5021_k)++) {
				{
					if ((!(_2219e5a9e_DefineOrderer::_static_method_is_common_ordered_0(_3940_s,_3940_s[_5021_k])))) {
						std::tie(_3940_s[_5021_k],_3940_s[_5021_k + 1LL]) = std::make_tuple(_3940_s[_5021_k + 1LL],_3940_s[_5021_k]);
					}
				}
			_iter_next_4693479872:;
			}
			_iter_end_4693479872:;
		}
	_iter_next_4693477280:;
	}
	_iter_end_4693477280:;
}

inline void _2219e5a9e_DefineOrderer::_static_method_order_common_1(jule::Slice<jule::Ptr<_2398d04dc_Struct>>& _3940_s) {
	jule::Int _4017_i = 0LL;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_4693504848:;
		if (it != expr.end()) {
			jule::Int _2219e5a9e_j = it - expr.begin();
			jule::Ptr<_2398d04dc_Struct> _2219e5a9e_t = *it;
			{
				if (_2219e5a9e_t->_field_cpp_linked || (_2219e5a9e_t->_field_depends.len() == 0LL)) {
					std::tie(_3940_s[_4017_i],_3940_s.__at(_2219e5a9e_j)) = std::make_tuple(_2219e5a9e_t,_3940_s[_4017_i]);
					(_4017_i)++;
				}
			}
			_iter_next_4693504848:;
			++it;
			_2219e5a9e_j++;
			goto _iter_begin_4693504848;
		}
		_iter_end_4693504848:;
	}
	jule::Int _4817_j = _4017_i;
	for (; _4817_j < _3940_s.len(); (_4817_j)++) {
		{
			jule::Int _5021_k = _4017_i;
			for (; _5021_k < (_3940_s.len() - 1LL); (_5021_k)++) {
				{
					if ((!(_2219e5a9e_DefineOrderer::_static_method_is_common_ordered_1(_3940_s,_3940_s[_5021_k])))) {
						std::tie(_3940_s[_5021_k],_3940_s[_5021_k + 1LL]) = std::make_tuple(_3940_s[_5021_k + 1LL],_3940_s[_5021_k]);
					}
				}
			_iter_next_4693507264:;
			}
			_iter_end_4693507264:;
		}
	_iter_next_4693504672:;
	}
	_iter_end_4693504672:;
}



inline void _2219e5a9e_DefineOrderer::_static_method_order_variables(jule::Slice<jule::Ptr<_2200a2657_Var>>& _6140_vars) {
	_2219e5a9e_DefineOrderer::_static_method_order_common_0(_6140_vars);
}



inline void _2219e5a9e_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ptr<_2398d04dc_Struct>>& _6741_structs) {
	_2219e5a9e_DefineOrderer::_static_method_order_common_1(_6741_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _2219e5a9e_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _221eb825d_ScopeDeadCode::_method_optimize_child(jule::Ptr<_2300254bb_Scope>& _2339_s) {
	jule::Ptr<_221eb825d_ScopeDeadCode> _2417_sdc = jule::new_struct_ptr<_221eb825d_ScopeDeadCode>(new( std::nothrow ) _221eb825d_ScopeDeadCode(this->self,_2339_s,(&(_2339_s->_field_stmts)),jule::Int()));
	{
		_2417_sdc->_method_optimize_stmts();
	}
}



inline void _221eb825d_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,(*this)._field_i + 1LL);
	jule::Ptr<_221eb825d_ScopeDeadCode> _3417_parent = (*this)._field_parent;
	while (_3417_parent != nullptr) {
		{
			(*(_3417_parent->_field_stmts))=(*(_3417_parent->_field_stmts)).slice(0LL,_3417_parent->_field_i + 1LL);
			_3417_parent=_3417_parent->_field_parent;
		}
	_iter_next_4693701632:;
	}
	_iter_end_4693701632:;
}



inline void _221eb825d_ScopeDeadCode::_method_optimize_stmt(jule::Any _4144_st) {
	{
		auto &_match_expr{ _4144_st };
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Scope>>())) { goto _case_end_4693707904; }
		_case_begin_4693707904:;
		{
			jule::Ptr<_2300254bb_Scope> _4421_scope = _4144_st.operator jule::Ptr<_2300254bb_Scope>();
			if (_4421_scope->_field_deferred) {
				_221eb825d_eliminate_dead_code_of_scope(_4421_scope);
			} else {
				this->self->_method_optimize_child(_4421_scope);
			}
		}
		goto _match_end_4693708144;
		_case_end_4693707904:;
		if (!(_match_expr.type_is<jule::Ptr<_20683ebaa_Data>>())) { goto _case_end_4693708224; }
		_case_begin_4693708224:;
		{
			{
				auto &_match_expr{ _4144_st.operator jule::Ptr<_20683ebaa_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21eedb492_BuiltinPanicCallExprModel>>())) { goto _case_end_4693713952; }
				_case_begin_4693713952:;
				{
					this->self->_method_eliminate_followed();
				}
				goto _match_end_4693714384;
				_case_end_4693713952:;
				_match_end_4693714384:;
			}
		}
		goto _match_end_4693708144;
		_case_end_4693708224:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_RetSt>>())) { goto _case_end_4693708336; }
		_case_begin_4693708336:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_4693708144;
		_case_end_4693708336:;
		_match_end_4693708144:;
	}
}



inline void _221eb825d_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_stmts->len(); (this->self->_field_i)++) {
		{
			this->self->_method_optimize_stmt((*(this->self->_field_stmts))[this->self->_field_i]);
		}
	_iter_next_4693717952:;
	}
	_iter_end_4693717952:;
}







std::ostream &operator<<(std::ostream &_Stream, const _221eb825d_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcda1323_FileStream> _1dcda1323_FileStream::_static_method_new(jule::Ptr<_222bcb8bb_File> _3827_f) {
	return jule::new_struct<_1dcda1323_FileStream>(new( std::nothrow ) _1dcda1323_FileStream(_3827_f));
}



inline jule::Exceptional<jule::Int> _1dcda1323_FileStream::_method_read(jule::Slice<jule::U8> _4731_buff) {
	jule::Int _4748_n = jule::Int();
	jule::Int _4817_fserr;
	std::tie(_4748_n,_4817_fserr) = (*this)._field_buff->_method_read(_4731_buff);
	if (_4817_fserr != 0LLU) {
		return jule::Exceptional<jule::Int>(_4817_fserr);
	}
	return jule::Exceptional(jule::Any(),_4748_n);
}



inline jule::Exceptional<jule::Int> _1dcda1323_FileStream::_method_write(jule::Slice<jule::U8> _5528_buff) {
	jule::Int _5545_n = jule::Int();
	jule::Int _5617_fserr;
	std::tie(_5545_n,_5617_fserr) = (*this)._field_buff->_method_write(_5528_buff);
	if (_5617_fserr != 0LLU) {
		return jule::Exceptional<jule::Int>(_5617_fserr);
	}
	return jule::Exceptional(jule::Any(),_5545_n);
}



inline jule::Exceptional<jule::Slice<jule::U8>> _1dcda1323_FileStream::_method_read_line(void) {
	
	jule::Slice<jule::U8> _7117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _7217_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::Int _7418_n;
			jule::Int _7421_fserr;
			std::tie(_7418_n,_7421_fserr) = (*this)._field_buff->_method_read(_7217_part);
			if (_7421_fserr != 0LLU) {
				return jule::Exceptional<jule::Slice<jule::U8>>(_7421_fserr);
			}
			if (_7418_n == 0LL) {
				goto _iter_end_4693757552;
			}
			jule::U8 _8217_b = _7217_part[0LL];
			_7117_buff.push(_8217_b);
			if (_8217_b == 10LL) {
				goto _iter_end_4693757552;
			}
		}
	_iter_next_4693757552:;
	}
	_iter_end_4693757552:;
	return jule::Exceptional(jule::Any(),_7117_buff);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dcda1323_FileStream &_Src) {
	_Stream << "FileStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcdd7ca5_Scanner> _1dcdd7ca5_Scanner::_static_method_new(jule::Trait<_1dcda1323_Reader> _1627_r) {
	return jule::new_struct<_1dcdd7ca5_Scanner>(new( std::nothrow ) _1dcdd7ca5_Scanner(_1627_r,jule::Slice<jule::U8>()));
}



inline jule::Ptr<_1dcdd7ca5_Scanner> _1dcdd7ca5_Scanner::_static_method_newf(jule::Ptr<_222bcb8bb_File> _2428_f) {
	return jule::new_struct<_1dcdd7ca5_Scanner>(new( std::nothrow ) _1dcdd7ca5_Scanner(_1dcda1323_FileStream::_static_method_new(_2428_f),jule::Slice<jule::U8>()));
}



inline void _1dcdd7ca5_Scanner::_method_reset(void) {
	(*this)._field_b=nullptr;
}



inline jule::Slice<jule::U8> _1dcdd7ca5_Scanner::_method_bytes(void) {
	return (*this)._field_b;
}



inline jule::Str _1dcdd7ca5_Scanner::_method_text(void) {
	return static_cast<jule::Str>((*this)._field_b);
}



inline jule::Exceptional<jule::Bool> _1dcdd7ca5_Scanner::_method_scan(void) {
	
	(*this)._method_reset();
	jule::Slice<jule::U8> _5117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _5217_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::Int _5417_n = ({
				auto except = (*this)._field_r.get()._method_read(_5217_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional(jule::Any(),false);
					return jule::Exceptional(jule::Any(),false);
				} jule::Int();});
			});
			if (_5417_n == 0LL) {
				goto _iter_end_4693778848;
			}
			jule::U8 _6117_b = _5217_part[0LL];
			if (_6117_b == 10LL) {
				goto _iter_end_4693778848;
			}
			_5117_buff.push(_6117_b);
		}
	_iter_next_4693778848:;
	}
	_iter_end_4693778848:;
	(*this)._field_b=_5117_buff;
	return jule::Exceptional(jule::Any(),_5217_part[0LL] != 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dcdd7ca5_Scanner &_Src) {
	_Stream << "Scanner{";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "b:" << _Src._field_b;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1dce1143d_AbsTime::_method_unix(void) {
	jule::Bool _5417_leap = false;
	jule::Uint _5517_y = (*this)._field_year - 1900LL;
	jule::Uint _5617_m = (*this)._field_month - 1LL;
	if ((_5617_m >= 12LL) || (_5617_m < 0LL)) {
		jule::Uint _5821_adj = jule::unsafe_div(_5617_m,12LL);
		_5617_m = jule::unsafe_mod(_5617_m,12LL);
		if (_5617_m < 0LL) {
			(_5821_adj)--;
			_5617_m+=12LL;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _1dce1143d_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_1dce1143d_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::Uint>(86400LL * ((*this)._field_day - 1LL));
	_6617_t+=static_cast<jule::Uint>(3600LL * (*this)._field_hour);
	_6617_t+=static_cast<jule::Uint>(60LL * (*this)._field_minute);
	_6617_t+=(*this)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dce1143d_AbsTime &_Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1dce1143d_Time _1dce1143d_Time::_static_method_unix(jule::U64 _8924_sec) {
	return _1dce1143d_Time(_8924_sec);
}



inline _1dce1143d_Time _1dce1143d_Time::_static_method_now(void) {
	return _1dce1143d_Time::_static_method_unix(static_cast<jule::U64>(_1dce1143d_unix()));
}



inline jule::U64 _1dce1143d_Time::_method_unix(void) {
	return (*this)._field_sec;
}



inline jule::Uint _1dce1143d_Time::_method_day(void) {
	return (*this)._method_abs()._field_day;
}



inline jule::Uint _1dce1143d_Time::_method_month(void) {
	return (*this)._method_abs()._field_month;
}



inline jule::Uint _1dce1143d_Time::_method_year(void) {
	return (*this)._method_abs()._field_year;
}



inline jule::Uint _1dce1143d_Time::_method_second(void) {
	return (*this)._method_abs()._field_second;
}



inline jule::Uint _1dce1143d_Time::_method_minute(void) {
	return (*this)._method_abs()._field_minute;
}



inline jule::Uint _1dce1143d_Time::_method_hour(void) {
	return (*this)._method_abs()._field_hour;
}



inline _1dce1143d_AbsTime _1dce1143d_Time::_method_abs(void) {
	jule::U64 _12513_secs = (*this)._field_sec - 951868800LL;
	jule::U64 _12617_days = jule::unsafe_div(_12513_secs,86400LL);
	jule::U64 _12717_rem_secs = jule::unsafe_mod(_12513_secs,86400LL);
	if (_12717_rem_secs < 0LL) {
		_12717_rem_secs+=86400LL;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = jule::unsafe_div(_12617_days,146097LL);
	jule::U64 _13417_rem_days = jule::unsafe_mod(_12617_days,146097LL);
	if (_13417_rem_days < 0LL) {
		_13417_rem_days+=146097LL;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = jule::unsafe_div(_13417_rem_days,36524LL);
	if (_14017_c_cycles == 4LL) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14017_c_cycles * 36524LL);
	jule::U64 _14617_q_cycles = jule::unsafe_div(_13417_rem_days,1461LL);
	if (_14617_q_cycles == 25LL) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14617_q_cycles * 1461LL);
	jule::U64 _15217_rem_years = jule::unsafe_div(_13417_rem_days,365LL);
	if (_15217_rem_years == 4LL) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_15217_rem_years * 365LL);
	jule::Int _15813_leap = ((((_15217_rem_years == 0LL) && ((_14617_q_cycles > 0LL) || (_14017_c_cycles == 0LL)))) ? (1LL) : (0LL));
	jule::U64 _15917_y_day = ((_13417_rem_days + 31LL) + 28LL) + _15813_leap;
	if (_15917_y_day >= (365LL + _15813_leap)) {
		_15917_y_day-=static_cast<jule::Int>(365LL + _15813_leap);
	}
	jule::Int _16417_months = 0LL;
	for (; _1dce1143d_MDAYS[_16417_months] <= _13417_rem_days; (_16417_months)++) {
		{
			_13417_rem_days-=_1dce1143d_MDAYS[_16417_months];
		}
	_iter_next_4694001472:;
	}
	_iter_end_4694001472:;
	_1dce1143d_AbsTime _16917_t = _1dce1143d_AbsTime();
	_16917_t._field_year=static_cast<jule::U64>((((_15217_rem_years + (4LL * _14617_q_cycles)) + (100LL * _14017_c_cycles)) + (400LL * _13317_qc_cycles)) + 100LL);
	_16917_t._field_month=static_cast<jule::Uint>(_16417_months + 2LL);
	if (_16917_t._field_month >= 12LL) {
		_16917_t._field_month-=12LL;
		(_16917_t._field_year)++;
	}
	_16917_t._field_month+=1LL;
	_16917_t._field_year+=1900LL;
	_16917_t._field_day=static_cast<jule::U64>(_13417_rem_days + 1LL);
	_16917_t._field_week_day=static_cast<jule::U64>(jule::unsafe_mod(3LL + _12617_days,7LL));
	if (_16917_t._field_week_day < 0LL) {
		_16917_t._field_week_day+=7LL;
	}
	_16917_t._field_year_day=_15917_y_day;
	_16917_t._field_hour=static_cast<jule::U64>(jule::unsafe_div(_12717_rem_secs,3600LL));
	_16917_t._field_minute=static_cast<jule::U64>(jule::unsafe_mod(jule::unsafe_div(_12717_rem_secs,60LL),60LL));
	_16917_t._field_second=static_cast<jule::U64>(jule::unsafe_mod(_12717_rem_secs,60LL));
	return _16917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dce1143d_Time &_Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 _1dce1143d_Duration::_static_method_nanoseconds(jule::I64 _22231_d) {
	return static_cast<jule::I64>(_22231_d * 1LL);
}



inline jule::I64 _1dce1143d_Duration::_static_method_microseconds(jule::I64 _22732_d) {
	return static_cast<jule::I64>(_22732_d * 1000LL);
}



inline jule::I64 _1dce1143d_Duration::_static_method_milliseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>(_23232_d * 1000000LL);
}



inline jule::I64 _1dce1143d_Duration::_static_method_seconds(jule::I64 _23727_d) {
	return static_cast<jule::I64>(_23727_d * 1000000000LL);
}



inline jule::I64 _1dce1143d_Duration::_static_method_minutes(jule::I64 _24227_d) {
	return static_cast<jule::I64>(_24227_d * 60000000000LL);
}



inline jule::I64 _1dce1143d_Duration::_static_method_hours(jule::I64 _24725_d) {
	return static_cast<jule::I64>(_24725_d * 3600000000000LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dce1143d_Duration &_Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dccb6843_Flag_0::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1dccb6843_Flag_0::_method_what(void) {
	return (*this)._field__what;
}



inline void _1dccb6843_Flag_0::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1dccb6843_Flag_0::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dccb6843_Flag_0 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dccb6843_Flag_1::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1dccb6843_Flag_1::_method_what(void) {
	return (*this)._field__what;
}



inline void _1dccb6843_Flag_1::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1dccb6843_Flag_1::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dccb6843_Flag_1 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dccb6843_Flag_2::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1dccb6843_Flag_2::_method_what(void) {
	return (*this)._field__what;
}



inline void _1dccb6843_Flag_2::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1dccb6843_Flag_2::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dccb6843_Flag_2 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dccb6843_Flag_3::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1dccb6843_Flag_3::_method_what(void) {
	return (*this)._field__what;
}



inline void _1dccb6843_Flag_3::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1dccb6843_Flag_3::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dccb6843_Flag_3 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dccb6843_Flag_4::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1dccb6843_Flag_4::_method_what(void) {
	return (*this)._field__what;
}



inline void _1dccb6843_Flag_4::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1dccb6843_Flag_4::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dccb6843_Flag_4 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dccb6843_FlagSet> _1dccb6843_FlagSet::_static_method_new(void) {
	return jule::new_struct<_1dccb6843_FlagSet>(new( std::nothrow ) _1dccb6843_FlagSet(jule::Slice<jule::Trait<_1dccb6843_CommonFlag>>::alloc(0LL,20LL),jule::Slice<jule::Str>()));
}



inline jule::Trait<_1dccb6843_CommonFlag> _1dccb6843_FlagSet::_method_find_flag(jule::Str _6732_name) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4695694960:;
		if (it != expr.end()) {
			jule::Trait<_1dccb6843_CommonFlag> _1dccb6843_flag = *it;
			{
				if (_1dccb6843_flag.get()._method_name() == _6732_name) {
					return _1dccb6843_flag;
				}
			}
			_iter_next_4695694960:;
			++it;
			goto _iter_begin_4695694960;
		}
		_iter_end_4695694960:;
	}
	return nullptr;
}



inline jule::Trait<_1dccb6843_CommonFlag> _1dccb6843_FlagSet::_method_find_flag_short(jule::I32 _7738_name) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4695699968:;
		if (it != expr.end()) {
			jule::Trait<_1dccb6843_CommonFlag> _1dccb6843_flag = *it;
			{
				if (_1dccb6843_flag.get()._method_short() == _7738_name) {
					return _1dccb6843_flag;
				}
			}
			_iter_next_4695699968:;
			++it;
			goto _iter_begin_4695699968;
		}
		_iter_end_4695699968:;
	}
	return nullptr;
}



inline jule::Slice<jule::Trait<_1dccb6843_CommonFlag>> _1dccb6843_FlagSet::_method_flags(void) {
	return (*this)._field__flags;
}



inline std::tuple<jule::Slice<jule::Str>,jule::Str> _1dccb6843_FlagSet::_method_parse(jule::Slice<jule::Str> _11128_args) {
	jule::Slice<jule::Str> _11143_content = jule::Slice<jule::Str>();
	jule::Str _11159_err = jule::Str();
	_1dccb6843_ArgParser _11217_ap = _1dccb6843_ArgParser((*this),_11128_args,jule::Str(),jule::Slice<jule::Str>(),jule::Int());
	_11217_ap._method_parse();
	_11143_content = _11217_ap._field_content;
	_11159_err = _11217_ap._field_err;
	return std::make_tuple(_11143_content,_11159_err);
}



inline void _1dccb6843_FlagSet::_method_reset(void) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4695718192:;
		if (it != expr.end()) {
			jule::Trait<_1dccb6843_CommonFlag> &_1dccb6843_f = *it;
			{
				_1dccb6843_f.get()._method_reset();
			}
			_iter_next_4695718192:;
			++it;
			goto _iter_begin_4695718192;
		}
		_iter_end_4695718192:;
	}
}



inline jule::Ptr<_1dccb6843_Flag_3> _1dccb6843_FlagSet::_method_add_flag_common_0(jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	
	if ((*this)._method_find_flag(_12741_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name);
	}
	if ((_12752_short != 0LL) && ((*this)._method_find_flag_short(_12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short));
	}
	jule::Ptr<_1dccb6843_Flag_3> _14417_flag = jule::new_struct<_1dccb6843_Flag_3>(new( std::nothrow ) _1dccb6843_Flag_3(_12741_name,_12752_short,jule::Bool(),_12765_what,jule::Ptr<jule::Bool>()));
	(*this)._field__flags = jule::alloc_for_append((*this)._field__flags,1);(*this)._field__flags.push(_14417_flag);
	return _14417_flag;
}

inline jule::Ptr<_1dccb6843_Flag_4> _1dccb6843_FlagSet::_method_add_flag_common_1(jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	
	if ((*this)._method_find_flag(_12741_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name);
	}
	if ((_12752_short != 0LL) && ((*this)._method_find_flag_short(_12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short));
	}
	jule::Ptr<_1dccb6843_Flag_4> _14417_flag = jule::new_struct<_1dccb6843_Flag_4>(new( std::nothrow ) _1dccb6843_Flag_4(_12741_name,_12752_short,jule::Str(),_12765_what,jule::Ptr<jule::Str>()));
	(*this)._field__flags = jule::alloc_for_append((*this)._field__flags,1);(*this)._field__flags.push(_14417_flag);
	return _14417_flag;
}





inline void _1dccb6843_FlagSet::_method_add_var_0(jule::Ptr<jule::Bool> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_1dccb6843_Flag_3> _17217_flag = (*this)._method_add_flag_common_0(_17146_name,_17157_short,_17170_what);
	_17217_flag->_field__default=(*(_17137_var));
	_17217_flag->_field__data=_17137_var;
}

inline void _1dccb6843_FlagSet::_method_add_var_1(jule::Ptr<jule::Str> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_1dccb6843_Flag_4> _17217_flag = (*this)._method_add_flag_common_1(_17146_name,_17157_short,_17170_what);
	_17217_flag->_field__default=(*(_17137_var));
	_17217_flag->_field__data=_17137_var;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dccb6843_FlagSet &_Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags << ", ";
	_Stream << "_errors:" << _Src._field__errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21eedb492_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_EnumItemDecl::_method_auto_expr(void) {
	return (*this)._field_expr == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_EnumDecl::_method_default_typed(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _221d8b043_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_UseExpr &_Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_CoExpr &_Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _222d4854e_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2398d04dc_FieldIns> _2398d04dc_Field::_method_instance(void) {
	return jule::new_struct<_2398d04dc_FieldIns>(new( std::nothrow ) _2398d04dc_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _2398d04dc_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2398d04dc_StructIns> _2398d04dc_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ptr<_2398d04dc_StructIns> _6717_ins = jule::new_struct_ptr<_2398d04dc_StructIns>(new( std::nothrow ) _2398d04dc_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_2398d04dc_FieldIns>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_fields.len())),jule::Slice<jule::Ptr<_222edb48e_Fn>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_methods.len())),jule::Bool(),_221db702a_ReferenceStack::_static_method_new()));
	{
		auto &expr = this->self->_field_fields;
		auto it = expr.begin();
		_iter_begin_4687902160:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Field> _2398d04dc_f = *it;
			{
				_6717_ins->_field_fields = jule::alloc_for_append(_6717_ins->_field_fields,1);_6717_ins->_field_fields.push(_2398d04dc_f->_method_instance());
				if ((_2398d04dc_f->_field_kind->_field_kind != nullptr) && _2398d04dc_f->_field_kind->_field_kind->_method_mutable()) {
					_6717_ins->_field_mutable=true;
				}
			}
			_iter_next_4687902160:;
			++it;
			goto _iter_begin_4687902160;
		}
		_iter_end_4687902160:;
	}
	{
		auto &expr = this->self->_field_methods;
		auto it = expr.begin();
		_iter_begin_4687895152:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _2398d04dc_f = *it;
			{
				jule::Ptr<_222edb48e_Fn> _8221_fins = jule::new_struct_ptr<_222edb48e_Fn>(new( std::nothrow ) _222edb48e_Fn(_2398d04dc_f->_field_sema,_2398d04dc_f->_field_token,_2398d04dc_f->_field_global,_2398d04dc_f->_field_unsafety,_2398d04dc_f->_field_public,_2398d04dc_f->_field_cpp_linked,_2398d04dc_f->_field_statically,_2398d04dc_f->_field_exceptional,_2398d04dc_f->_field_ident,_2398d04dc_f->_field_directives,_2398d04dc_f->_field_doc,_2398d04dc_f->_field_scope,_2398d04dc_f->_field_generics,_2398d04dc_f->_field_result,_2398d04dc_f->_field_params,_2398d04dc_f->_field_owner,nullptr));
				_6717_ins->_field_methods = jule::alloc_for_append(_6717_ins->_field_methods,1);_6717_ins->_field_methods.push(_8221_fins);
			}
			_iter_next_4687895152:;
			++it;
			goto _iter_begin_4687895152;
		}
		_iter_end_4687895152:;
	}
	return _6717_ins;
}



inline jule::Ptr<_2398d04dc_StructIns> _2398d04dc_Struct::_method_append_instance(jule::Ptr<_2398d04dc_StructIns>& _10939_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto &expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_4684377056:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_StructIns> _2398d04dc_ains = *it;
			{
				if (_2398d04dc_ains->_method_same(_10939_ins)) {
					return _2398d04dc_ains;
				}
			}
			_iter_next_4684377056:;
			++it;
			goto _iter_begin_4684377056;
		}
		_iter_end_4684377056:;
	}
	(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_10939_ins);
	return nullptr;
}



inline jule::Ptr<_222edb48e_Fn> _2398d04dc_Struct::_method_find_method(jule::Str _12734_ident,jule::Bool _12746_statically) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4684384704:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _2398d04dc_f = *it;
			{
				if ((_2398d04dc_f->_field_statically == _12746_statically) && (_2398d04dc_f->_field_ident == _12734_ident)) {
					return _2398d04dc_f;
				}
			}
			_iter_next_4684384704:;
			++it;
			goto _iter_begin_4684384704;
		}
		_iter_end_4684384704:;
	}
	return nullptr;
}



inline jule::Ptr<_2200a2657_Var> _2398d04dc_Struct::_method_find_static(jule::Str _13834_ident) {
	{
		auto &expr = (*this)._field_statics;
		auto it = expr.begin();
		_iter_begin_4684389552:;
		if (it != expr.end()) {
			jule::Ptr<_2200a2657_Var> _2398d04dc_v = *it;
			{
				if (_2398d04dc_v->_field_ident == _13834_ident) {
					return _2398d04dc_v;
				}
			}
			_iter_next_4684389552:;
			++it;
			goto _iter_begin_4684389552;
		}
		_iter_end_4684389552:;
	}
	return nullptr;
}



inline jule::Ptr<_2398d04dc_Field> _2398d04dc_Struct::_method_find_field(jule::Str _14933_ident) {
	{
		auto &expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_4684393968:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Field> _2398d04dc_f = *it;
			{
				if (_2398d04dc_f->_field_ident == _14933_ident) {
					return _2398d04dc_f;
				}
			}
			_iter_next_4684393968:;
			++it;
			goto _iter_begin_4684393968;
		}
		_iter_end_4684393968:;
	}
	return nullptr;
}



inline jule::Bool _2398d04dc_Struct::_method_is_implements(jule::Ptr<_2300167cb_Trait> _15932_t) {
	{
		auto &expr = (*this)._field_implements;
		auto it = expr.begin();
		_iter_begin_4684398384:;
		if (it != expr.end()) {
			jule::Ptr<_2300167cb_Trait> &_2398d04dc_it = *it;
			{
				if (_15932_t == _2398d04dc_it) {
					return true;
				}
			}
			_iter_next_4684398384:;
			++it;
			goto _iter_begin_4684398384;
		}
		_iter_end_4684398384:;
	}
	return false;
}



inline jule::Bool _2398d04dc_Struct::_method_is_derives(jule::Str _16929_ident) {
	{
		auto &expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_4684399312:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_Directive> &_2398d04dc_d = *it;
			{
				if (_2398d04dc_d->_field_tag._field_kind == jule::Str("derive", 6)) {
					if ((_2398d04dc_d->_field_args.len() == 1LL) && (_2398d04dc_d->_field_args[0LL]._field_kind == _16929_ident)) {
						return true;
					}
				}
			}
			_iter_next_4684399312:;
			++it;
			goto _iter_begin_4684399312;
		}
		_iter_end_4684399312:;
	}
	return false;
}



inline jule::Bool _2398d04dc_Struct::_method_is_uses(jule::Ptr<_2398d04dc_Struct> _18126_s) {
	{
		auto &expr = (*this)._field_uses;
		auto it = expr.begin();
		_iter_begin_4684408400:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> &_2398d04dc_u = *it;
			{
				while (_18126_s == _2398d04dc_u) {
					{
						return true;
					}
				_iter_next_4684409568:;
				}
				_iter_end_4684409568:;
			}
			_iter_next_4684408400:;
			++it;
			goto _iter_begin_4684408400;
		}
		_iter_end_4684408400:;
	}
	return false;
}



inline jule::Bool _2398d04dc_Struct::_method_has_ref_accessible(void) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4684411568:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> &_2398d04dc_m = *it;
			{
				if ((_2398d04dc_m->_field_params.len() > 0LL) && _2398d04dc_m->_field_params[0LL]->_method_is_ref()) {
					return true;
				}
			}
			_iter_next_4684411568:;
			++it;
			goto _iter_begin_4684411568;
		}
		_iter_end_4684411568:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _2398d04dc_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_222edb48e_ParamIns> _222edb48e_Param::_method_instance(void) {
	return jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(this->self,jule::Ptr<_2300b54e5_TypeKind>()));
}



inline jule::Bool _222edb48e_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _222edb48e_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _222edb48e_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _222edb48e_Fn::_method_is_void(void) {
	return (*this)._field_result == nullptr;
}



inline jule::Bool _222edb48e_Fn::_method_is_method(void) {
	return (*this)._field_owner != nullptr;
}



inline jule::Bool _222edb48e_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _222edb48e_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _222edb48e_Fn::_method_is_anon(void) {
	return _2220dce43_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _222edb48e_Fn::_method_any_var(void) {
	return ((*this)._field_result != nullptr) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _222edb48e_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto &expr = (*this)._field_params;
		auto it = expr.begin();
		_iter_begin_4684471440:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Param> &_222edb48e_p = *it;
			{
				if (_222edb48e_parameter_uses_generics(_222edb48e_p,(*this)._field_generics)) {
					return true;
				}
			}
			_iter_next_4684471440:;
			++it;
			goto _iter_begin_4684471440;
		}
		_iter_end_4684471440:;
	}
	return false;
}



inline jule::Bool _222edb48e_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if (((*this)._field_result->_field_kind == nullptr) || ((*this)._field_result->_field_kind->_field_kind == nullptr)) {
		return false;
	}
	return _222edb48e_kind_uses_generics((*this)._field_result->_field_kind->_field_kind,(*this)._field_generics);
}



inline jule::Ptr<_222edb48e_FnIns> _222edb48e_Fn::_method_instance_force(void) {
	jule::Ptr<_222edb48e_FnIns> _11117_ins = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),this->self,jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>(),jule::Ptr<_2300b54e5_TypeKind>(),jule::new_struct<_2300254bb_Scope>(new( std::nothrow ) _2300254bb_Scope()),_221db702a_ReferenceStack::_static_method_new(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(),jule::Bool(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_11117_ins->_field_refers=_221db702a_ReferenceStack::_static_method_new();
	}
	_11117_ins->_field_params=jule::Slice<jule::Ptr<_222edb48e_ParamIns>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_params.len()));
	{
		auto &expr = this->self->_field_params;
		auto it = expr.begin();
		_iter_begin_4684483920:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Param> _222edb48e_p = *it;
			{
				_11117_ins->_field_params = jule::alloc_for_append(_11117_ins->_field_params,1);_11117_ins->_field_params.push(_222edb48e_p->_method_instance());
			}
			_iter_next_4684483920:;
			++it;
			goto _iter_begin_4684483920;
		}
		_iter_end_4684483920:;
	}
	if (_11117_ins->_field_decl->_field_result != nullptr) {
		_11117_ins->_field_result=_11117_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _11117_ins;
}



inline jule::Ptr<_222edb48e_FnIns> _222edb48e_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _222edb48e_Fn::_method_append_instance(jule::Ptr<_222edb48e_FnIns>& _14239_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14239_ins);
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14239_ins);
		return std::make_tuple(true,-1LL);
	}
	{
		auto &expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_4684500576:;
		if (it != expr.end()) {
			jule::Int _222edb48e_j = it - expr.begin();
			jule::Ptr<_222edb48e_FnIns> &_222edb48e_ains = *it;
			{
				if (_222edb48e_ains->_method_same(_14239_ins)) {
					return std::make_tuple(false,_222edb48e_j);
				}
			}
			_iter_next_4684500576:;
			++it;
			_222edb48e_j++;
			goto _iter_begin_4684500576;
		}
		_iter_end_4684500576:;
	}
	(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14239_ins);
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _222edb48e_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_FnCallExpr::_method_unhandled(void) {
	return (*this)._field_exception == nullptr;
}



inline jule::Bool _221d8b043_FnCallExpr::_method_ignored(void) {
	return ((*this)._field_exception != nullptr) && (*this)._field_exception->_field_deferred;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2200229c3_ImportInfo> _2200229c3_ImportInfo::_method_find_package(jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_2200229c3_ImportInfo> _2200229c3_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_2200a2657_Var> _2200229c3_ImportInfo::_method_find_var(jule::Str _14731_ident,jule::Bool _14743_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14731_ident)))) {
		return nullptr;
	}
	return _2200229c3_find_var_in_package((*this)._field_package->_field_files,_14731_ident,false);
}



inline jule::Ptr<_2300b54e5_TypeAlias> _2200229c3_ImportInfo::_method_find_type_alias(jule::Str _16038_ident,jule::Bool _16050_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16038_ident)))) {
		return nullptr;
	}
	return _2200229c3_find_type_alias_in_package((*this)._field_package->_field_files,_16038_ident,false);
}



inline jule::Ptr<_2398d04dc_Struct> _2200229c3_ImportInfo::_method_find_struct(jule::Str _17334_ident,jule::Bool _17346_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17334_ident)))) {
		return nullptr;
	}
	return _2200229c3_find_struct_in_package((*this)._field_package->_field_files,_17334_ident,false);
}



inline jule::Ptr<_222edb48e_Fn> _2200229c3_ImportInfo::_method_find_fn(jule::Str _18630_ident,jule::Bool _18642_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18630_ident)))) {
		return nullptr;
	}
	return _2200229c3_find_fn_in_package((*this)._field_package->_field_files,_18630_ident,false);
}



inline jule::Ptr<_2300167cb_Trait> _2200229c3_ImportInfo::_method_find_trait(jule::Str _19833_ident) {
	if ((!((*this)._method_is_lookupable(_19833_ident)))) {
		return nullptr;
	}
	return _2200229c3_find_trait_in_package((*this)._field_package->_field_files,_19833_ident);
}



inline jule::Ptr<_23001604a_Enum> _2200229c3_ImportInfo::_method_find_enum(jule::Str _21032_ident) {
	if ((!((*this)._method_is_lookupable(_21032_ident)))) {
		return nullptr;
	}
	return _2200229c3_find_enum_in_package((*this)._field_package->_field_files,_21032_ident);
}



inline jule::Bool _2200229c3_ImportInfo::_method_is_lookupable(jule::Str _22028_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_22028_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _2200229c3_ImportInfo::_method_exist_ident(jule::Str _24026_ident) {
	{
		auto &expr = (*this)._field_selected;
		auto it = expr.begin();
		_iter_begin_4689145792:;
		if (it != expr.end()) {
			_2220dce43_Token &_2200229c3_sident = *it;
			{
				if (_2200229c3_sident._field_kind == _24026_ident) {
					return true;
				}
			}
			_iter_next_4689145792:;
			++it;
			goto _iter_begin_4689145792;
		}
		_iter_end_4689145792:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _2200229c3_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_Node::_method_is_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_221d8b043_FnDecl>>() || _match_expr.type_is<jule::Ptr<_221d8b043_StructDecl>>() || _match_expr.type_is<jule::Ptr<_221d8b043_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_221d8b043_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_221d8b043_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_221d8b043_UseDecl>>() || _match_expr.type_is<jule::Ptr<_221d8b043_VarDecl>>() || _match_expr.type_is<jule::Ptr<_221d8b043_TypeDecl>>())) { goto _case_end_4681372864; }
		_case_begin_4681372864:;
		{
			return true;
		}
		goto _match_end_4681371264;
		_case_end_4681372864:;
		_case_begin_4681370752:;
		{
			return false;
		}
		goto _match_end_4681371264;
		_case_end_4681370752:;
		_match_end_4681371264:;
	}
}



inline jule::Bool _221d8b043_Node::_method_is_comment(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Comment>>() || _match_expr.type_is<jule::Ptr<_221d8b043_CommentGroup>>())) { goto _case_end_4681388816; }
		_case_begin_4681388816:;
		{
			return true;
		}
		goto _match_end_4681387216;
		_case_end_4681388816:;
		_case_begin_4681386720:;
		{
			return false;
		}
		goto _match_end_4681387216;
		_case_end_4681386720:;
		_match_end_4681387216:;
	}
}



inline jule::Bool _221d8b043_Node::_method_is_directive(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Directive>>())) { goto _case_end_4681392432; }
		_case_begin_4681392432:;
		{
			return true;
		}
		goto _match_end_4681390832;
		_case_end_4681392432:;
		_case_begin_4681390336:;
		{
			return false;
		}
		goto _match_end_4681390832;
		_case_end_4681390336:;
		_match_end_4681390832:;
	}
}



inline jule::Bool _221d8b043_Node::_method_is_impl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Impl>>())) { goto _case_end_4681395664; }
		_case_begin_4681395664:;
		{
			return true;
		}
		goto _match_end_4681394064;
		_case_end_4681395664:;
		_case_begin_4681393568:;
		{
			return false;
		}
		goto _match_end_4681394064;
		_case_end_4681393568:;
		_match_end_4681394064:;
	}
}



inline jule::Bool _221d8b043_Node::_method_is_use_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_UseDecl>>())) { goto _case_end_4681398896; }
		_case_begin_4681398896:;
		{
			return true;
		}
		goto _match_end_4681397296;
		_case_end_4681398896:;
		_case_begin_4681396800:;
		{
			return false;
		}
		goto _match_end_4681397296;
		_case_end_4681396800:;
		_match_end_4681397296:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221db702a_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2200a2657_Var::_method_is_initialized(void) {
	return (*this)._field_value != nullptr;
}



inline jule::Bool _2200a2657_Var::_method_is_type_inferred(void) {
	return ((*this)._field_kind == nullptr) || ((*this)._field_kind->_field_decl == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _2200a2657_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline void _2200223c9_TypeCompatibilityChecker::_method_push_err(jule::Str _13527_fmt,jule::Slice<jule::Any> _13540_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_13527_fmt,_13540_args);
}



inline jule::Bool _2200223c9_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _13932_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_13932_ok = true;
		return _13932_ok;
	}
	jule::Ptr<_2300167cb_Trait> _14413_trt = (*this)._field_dest->_method_trt();
	jule::Bool _14517_ref = false;
	{
		if (!(((*this)._field_src->_method_sptr() != nullptr))) { goto _case_end_4685475248; }
		_case_begin_4685475248:;
		{
			_14517_ref=true;
			(*this)._field_src=(*this)._field_src->_method_sptr()->_field_elem;
			if ((*this)._field_src->_method_strct() == nullptr) {
				_13932_ok = false;
				return _13932_ok;
			}
			goto _case_begin_4685475424;
		}
		goto _match_end_4685473664;
		_case_end_4685475248:;
		if (!(((*this)._field_src->_method_strct() != nullptr))) { goto _case_end_4685475424; }
		_case_begin_4685475424:;
		{
			jule::Ptr<_2398d04dc_StructIns> _15617_s = (*this)._field_src->_method_strct();
			if ((!(_15617_s->_field_decl->_method_is_implements(_14413_trt)))) {
				_13932_ok = false;
				return _13932_ok;
			}
			if ((!(_14517_ref)) && _2200223c9_trait_has_reference_receiver(_14413_trt)) {
				(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
				_13932_ok = false;
				return _13932_ok;
			}
			_13932_ok = true;
			return _13932_ok;
		}
		goto _match_end_4685473664;
		_case_end_4685475424:;
		if (!(((*this)._field_src->_method_trt() != nullptr))) { goto _case_end_4685475520; }
		_case_begin_4685475520:;
		{
			_13932_ok = _14413_trt == (*this)._field_src->_method_trt();
			return _13932_ok;
		}
		goto _match_end_4685473664;
		_case_end_4685475520:;
		_case_begin_4685473776:;
		{
			_13932_ok = false;
			return _13932_ok;
		}
		goto _match_end_4685473664;
		_case_end_4685473776:;
		_match_end_4685473664:;
	}
}



inline jule::Bool _2200223c9_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _17630_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_17630_ok = true;
		return _17630_ok;
	}
	jule::Ptr<_2300b54e5_Ptr> _18117_dest = (*this)._field_dest->_method_ptr();
	if (_18117_dest->_method_is_unsafe()) {
		_17630_ok = true;
		return _17630_ok;
	}
	_17630_ok = (*this)._field_dest->_method_equals((*this)._field_src);
	return _17630_ok;
}



inline jule::Bool _2200223c9_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _19031_ok = jule::Bool();
	jule::Ptr<_2300b54e5_Prim> _19113_prim = (*this)._field_dest->_method_prim();
	if ((_19113_prim != nullptr) && _19113_prim->_method_is_any()) {
		_19031_ok = true;
		return _19031_ok;
	}
	_19031_ok = (*this)._field_dest->_method_equals((*this)._field_src);
	return _19031_ok;
}



inline jule::Bool _2200223c9_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _19826_ok = jule::Bool();
	if ((*this)._field_dest->_method_ptr() != nullptr) {
		_19826_ok = (*this)._method_check_ptr();
		return _19826_ok;
	}
	if ((*this)._field_dest->_method_nil_compatible()) {
		if ((*this)._field_src->_method_is_nil()) {
			_19826_ok = true;
			return _19826_ok;
		}
	}
	{
		if (!(((*this)._field_dest->_method_prim() != nullptr))) { goto _case_end_4685507296; }
		_case_begin_4685507296:;
		{
			_19826_ok = (*this)._method_check_prim();
			return _19826_ok;
		}
		goto _match_end_4685505712;
		_case_end_4685507296:;
		if (!(((*this)._field_dest->_method_trt() != nullptr))) { goto _case_end_4685508656; }
		_case_begin_4685508656:;
		{
			_19826_ok = (*this)._method_check_trait();
			return _19826_ok;
		}
		goto _match_end_4685505712;
		_case_end_4685508656:;
		_case_begin_4685505952:;
		{
			_19826_ok = (*this)._field_dest->_method_equals((*this)._field_src);
			return _19826_ok;
		}
		goto _match_end_4685505712;
		_case_end_4685505952:;
		_match_end_4685505712:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _2200223c9_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _2200223c9_AssignTypeChecker::_method_push_err(jule::Str _22527_fmt,jule::Slice<jule::Any> _22540_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_22527_fmt,_22540_args);
}



inline jule::Bool _2200223c9_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _23017_valid = true;
	{
		if (!(((*this)._field_d->_field_kind->_method_fnc() != nullptr))) { goto _case_end_4685517280; }
		_case_begin_4685517280:;
		{
			jule::Ptr<_222edb48e_FnIns> _23417_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_23417_f->_method_is_builtin()))) { goto _case_end_4685521872; }
				_case_begin_4685521872:;
				{
					(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>());
					_23017_valid=false;
				}
				goto _match_end_4685521680;
				_case_end_4685521872:;
				if (!((_23417_f->_field_decl->_field_cpp_linked))) { goto _case_end_4685521984; }
				_case_begin_4685521984:;
				{
					(*this)._method_push_err(jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
					_23017_valid=false;
				}
				goto _match_end_4685521680;
				_case_end_4685521984:;
				if (!((_23417_f->_field_decl->_method_is_method()))) { goto _case_end_4685522096; }
				_case_begin_4685522096:;
				{
					(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
					_23017_valid=false;
				}
				goto _match_end_4685521680;
				_case_end_4685522096:;
				if (!((_23417_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_4685522208; }
				_case_begin_4685522208:;
				{
					(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
					_23017_valid=false;
				}
				goto _match_end_4685521680;
				_case_end_4685522208:;
				_match_end_4685521680:;
			}
		}
		goto _match_end_4685517120;
		_case_end_4685517280:;
		if (!(((*this)._field_d->_field_kind->_method_tup() != nullptr))) { goto _case_end_4685517392; }
		_case_begin_4685517392:;
		{
			(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
			_23017_valid=false;
		}
		goto _match_end_4685517120;
		_case_end_4685517392:;
		_match_end_4685517120:;
	}
	return _23017_valid;
}



inline jule::Bool _2200223c9_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || ((*this)._field_dest->_method_prim() == nullptr)) || ((*this)._field_d->_field_kind->_method_prim() == nullptr)) || (!(_206ec1e1e_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _26913_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_206ec1e1e_is_float(_26913_kind)))) { goto _case_end_4685542224; }
		_case_begin_4685542224:;
		{
			if ((!(_2200223c9_float_assignable(_26913_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				return false;
			}
		}
		goto _match_end_4685540400;
		_case_end_4685542224:;
		if (!((_206ec1e1e_is_int(_26913_kind)))) { goto _case_end_4685542320; }
		_case_begin_4685542320:;
		{
			if ((!(_2200223c9_int_assignable(_26913_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				return false;
			}
		}
		goto _match_end_4685540400;
		_case_end_4685542320:;
		_case_begin_4685540672:;
		{
			return false;
		}
		goto _match_end_4685540400;
		_case_end_4685540672:;
		_match_end_4685540400:;
	}
	return true;
}



inline jule::Bool _2200223c9_AssignTypeChecker::_method_is_prim(void) {
	if ((*this)._field_dest->_field_variadic || (*this)._field_d->_field_kind->_field_variadic) {
		return false;
	}
	if ((*this)._field_dest->_method_cpp_linked() || (*this)._field_d->_field_kind->_method_cpp_linked()) {
		return false;
	}
	return ((*this)._field_dest->_method_prim() != nullptr) && ((*this)._field_d->_field_kind->_method_prim() != nullptr);
}



inline jule::Bool _2200223c9_AssignTypeChecker::_method_check(void) {
	{
		if (!(((*this)._field_d == nullptr))) { goto _case_end_4685553632; }
		_case_begin_4685553632:;
		{
			return false;
		}
		goto _match_end_4685553408;
		_case_end_4685553632:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_4685556336; }
		_case_begin_4685556336:;
		{
			return false;
		}
		goto _match_end_4685553408;
		_case_end_4685556336:;
		if (!(((*this)._method_check_const()))) { goto _case_end_4685556432; }
		_case_begin_4685556432:;
		{
			return true;
		}
		goto _match_end_4685553408;
		_case_end_4685556432:;
		if (!(((*this)._method_is_prim()))) { goto _case_end_4685556528; }
		_case_begin_4685556528:;
		{
			jule::Ptr<_2300b54e5_Prim> _31817_dest = (*this)._field_dest->_method_prim();
			if (_31817_dest->_method_is_any()) {
				return true;
			}
			jule::Ptr<_2300b54e5_Prim> _32221_src = (*this)._field_d->_field_kind->_method_prim();
			if (_206e22a2e_types_are_compatible(_31817_dest->_field_kind,_32221_src->_field_kind)) {
				return true;
			}
		}
		goto _match_end_4685553408;
		_case_end_4685556528:;
		_match_end_4685553408:;
	}
	return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token);
}







std::ostream &operator<<(std::ostream &_Stream, const _2200223c9_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _2200223c9_DynamicTypeAnnotation::_method_push_generic(jule::Ptr<_2300b54e5_TypeKind>& _34136_k,jule::Int _34150_i) {
	(*this)._field_f->_field_generics[_34150_i]=_34136_k;
}



inline jule::Bool _2200223c9_DynamicTypeAnnotation::_method_annotate_prim(jule::Ptr<_2300b54e5_TypeKind>& _34544_k) {
	jule::Bool _34560_ok = jule::Bool();
	jule::Str _34613_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4685582016:;
		if (it != expr.end()) {
			jule::Int _2200223c9_i = it - expr.begin();
			jule::Ptr<_221d8b043_GenericDecl> &_2200223c9_g = *it;
			{
				if (_34613_kind != _2200223c9_g->_field_ident) {
					goto _iter_next_4685582016;
				}
				jule::Ptr<_2300b54e5_TypeKind> _35217_t = (*this)._field_f->_field_generics[_2200223c9_i];
				{
					if (!((_35217_t == nullptr))) { goto _case_end_4685586944; }
					_case_begin_4685586944:;
					{
						(*this)._method_push_generic(_34544_k,_2200223c9_i);
					}
					goto _match_end_4685586704;
					_case_end_4685586944:;
					if (!(((!(_35217_t->_method_equals(_34544_k)))))) { goto _case_end_4685587040; }
					_case_begin_4685587040:;
					{
						_34560_ok = false;
						return _34560_ok;
					}
					goto _match_end_4685586704;
					_case_end_4685587040:;
					_match_end_4685586704:;
				}
				(*((*this)._field_k))->_field_kind=_34544_k->_field_kind;
				_34560_ok = true;
				return _34560_ok;
			}
			_iter_next_4685582016:;
			++it;
			_2200223c9_i++;
			goto _iter_begin_4685582016;
		}
		_iter_end_4685582016:;
	}
	_34560_ok = false;
	return _34560_ok;
}



inline jule::Bool _2200223c9_DynamicTypeAnnotation::_method_annotate_slc(jule::Ptr<_2300b54e5_TypeKind>& _36943_k) {
	jule::Bool _36959_ok = jule::Bool();
	jule::Ptr<_2300b54e5_Slc> _37017_pslc = (*((*this)._field_k))->_method_slc();
	if (_37017_pslc == nullptr) {
		_36959_ok = false;
		return _36959_ok;
	}
	jule::Ptr<_2300b54e5_Slc> _37517_slc = _36943_k->_method_slc();
	(*this)._field_k=(&(_37017_pslc->_field_elem));
	_36959_ok = (*this)._method_annotate_kind(_37517_slc->_field_elem);
	return _36959_ok;
}



inline jule::Bool _2200223c9_DynamicTypeAnnotation::_method_check_map_key(jule::Ptr<_2300b54e5_TypeKind>* _38043_k,jule::Ptr<_2300b54e5_TypeKind>& _38063_ck) {
	jule::Bool _38080_ok = jule::Bool();
	jule::Ptr<_2300b54e5_TypeKind>* _38117_old = (*this)._field_k;
	(*this)._field_k=_38043_k;
	_38080_ok=(*this)._method_annotate_kind(_38063_ck);
	(*this)._field_k=_38117_old;
	return _38080_ok;
}



inline jule::Bool _2200223c9_DynamicTypeAnnotation::_method_annotate_map(jule::Ptr<_2300b54e5_TypeKind>& _38843_k) {
	jule::Bool _38859_ok = jule::Bool();
	jule::Ptr<_2300b54e5_Map> _38917_pmap = (*((*this)._field_k))->_method_map();
	if (_38917_pmap == nullptr) {
		_38859_ok = false;
		return _38859_ok;
	}
	jule::Ptr<_2300b54e5_Map> _39417_m = _38843_k->_method_map();
	_38859_ok = (*this)._method_check_map_key((&(_38917_pmap->_field_key)),_39417_m->_field_key) && (*this)._method_check_map_key((&(_38917_pmap->_field_val)),_39417_m->_field_val);
	return _38859_ok;
}



inline jule::Bool _2200223c9_DynamicTypeAnnotation::_method_annotate_fn(jule::Ptr<_2300b54e5_TypeKind>& _40042_k) {
	jule::Bool _40058_ok = jule::Bool();
	jule::Ptr<_222edb48e_FnIns> _40117_pf = (*((*this)._field_k))->_method_fnc();
	if (_40117_pf == nullptr) {
		_40058_ok = false;
		return _40058_ok;
	}
	jule::Ptr<_222edb48e_FnIns> _40517_f = _40042_k->_method_fnc();
	{
		if (!((_40117_pf->_field_params.len() != _40517_f->_field_params.len()))) { goto _case_end_4685619600; }
		_case_begin_4685619600:;
		{
			_40058_ok = false;
			return _40058_ok;
		}
		goto _match_end_4685619440;
		_case_end_4685619600:;
		if (!((_40117_pf->_field_decl->_method_is_void() != _40517_f->_field_decl->_method_is_void()))) { goto _case_end_4685619712; }
		_case_begin_4685619712:;
		{
			_40058_ok = false;
			return _40058_ok;
		}
		goto _match_end_4685619440;
		_case_end_4685619712:;
		_match_end_4685619440:;
	}
	_40058_ok=true;
	jule::Ptr<_2300b54e5_TypeKind>* _41517_old = (*this)._field_k;
	{
		auto &expr = _40517_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4685624880:;
		if (it != expr.end()) {
			jule::Int _2200223c9_i = it - expr.begin();
			jule::Ptr<_222edb48e_ParamIns> _2200223c9_fp = *it;
			{
				(*this)._field_k=(&(_40117_pf->_field_params[_2200223c9_i]->_field_kind));
				_40058_ok=(*this)._method_annotate_kind(_2200223c9_fp->_field_kind) && _40058_ok;
			}
			_iter_next_4685624880:;
			++it;
			_2200223c9_i++;
			goto _iter_begin_4685624880;
		}
		_iter_end_4685624880:;
	}
	if ((!(_40117_pf->_field_decl->_method_is_void()))) {
		(*this)._field_k=(&(_40117_pf->_field_result));
		_40058_ok=(*this)._method_annotate_kind(_40517_f->_field_result) && _40058_ok;
	}
	(*this)._field_k=_41517_old;
	return _40058_ok;
}



inline jule::Bool _2200223c9_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ptr<_2300b54e5_TypeKind>& _43043_k) {
	jule::Bool _43059_ok = jule::Bool();
	jule::Ptr<_2300b54e5_Ptr> _43117_pptr = (*((*this)._field_k))->_method_ptr();
	if (_43117_pptr == nullptr) {
		_43059_ok = false;
		return _43059_ok;
	}
	jule::Ptr<_2300b54e5_Ptr> _43617_ptr = _43043_k->_method_ptr();
	(*this)._field_k=(&(_43117_pptr->_field_elem));
	_43059_ok = (*this)._method_annotate_kind(_43617_ptr->_field_elem);
	return _43059_ok;
}



inline jule::Bool _2200223c9_DynamicTypeAnnotation::_method_annotate_sptr(jule::Ptr<_2300b54e5_TypeKind>& _44144_k) {
	jule::Bool _44160_ok = jule::Bool();
	jule::Ptr<_2300b54e5_Sptr> _44217_ssptr = (*((*this)._field_k))->_method_sptr();
	if (_44217_ssptr == nullptr) {
		_44160_ok = false;
		return _44160_ok;
	}
	jule::Ptr<_2300b54e5_Sptr> _44717_sptr = _44144_k->_method_sptr();
	(*this)._field_k=(&(_44217_ssptr->_field_elem));
	_44160_ok = (*this)._method_annotate_kind(_44717_sptr->_field_elem);
	return _44160_ok;
}



inline jule::Bool _2200223c9_DynamicTypeAnnotation::_method_annotate_any(jule::Ptr<_2300b54e5_TypeKind>& _45243_k) {
	jule::Bool _45259_ok = jule::Bool();
	jule::Str _45313_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4685651824:;
		if (it != expr.end()) {
			jule::Int _2200223c9_i = it - expr.begin();
			jule::Ptr<_221d8b043_GenericDecl> &_2200223c9_g = *it;
			{
				if (_45313_kind != _2200223c9_g->_field_ident) {
					goto _iter_next_4685651824;
				}
				jule::Ptr<_2300b54e5_TypeKind> _45917_t = (*this)._field_f->_field_generics[_2200223c9_i];
				{
					if (!((_45917_t == nullptr))) { goto _case_end_4685656704; }
					_case_begin_4685656704:;
					{
						(*this)._method_push_generic(_45243_k,_2200223c9_i);
					}
					goto _match_end_4685656464;
					_case_end_4685656704:;
					if (!(((!(_45917_t->_method_equals(_45243_k)))))) { goto _case_end_4685656800; }
					_case_begin_4685656800:;
					{
						_45259_ok = false;
						return _45259_ok;
					}
					goto _match_end_4685656464;
					_case_end_4685656800:;
					_match_end_4685656464:;
				}
				(*((*this)._field_k))->_field_kind=_45243_k->_field_kind;
				_45259_ok = true;
				return _45259_ok;
			}
			_iter_next_4685651824:;
			++it;
			_2200223c9_i++;
			goto _iter_begin_4685651824;
		}
		_iter_end_4685651824:;
	}
	_45259_ok = false;
	return _45259_ok;
}



inline jule::Bool _2200223c9_DynamicTypeAnnotation::_method_annotate_kind(jule::Ptr<_2300b54e5_TypeKind>& _47644_k) {
	jule::Bool _47660_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _47660_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_47644_k)))) { goto _case_end_4685665104; }
		_case_begin_4685665104:;
		{
			_47660_ok = true;
			return _47660_ok;
		}
		goto _match_end_4685662256;
		_case_end_4685665104:;
		if (!((_47644_k->_method_prim() != nullptr))) { goto _case_end_4685665200; }
		_case_begin_4685665200:;
		{
			_47660_ok = (*this)._method_annotate_prim(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4685662256;
		_case_end_4685665200:;
		if (!((_47644_k->_method_slc() != nullptr))) { goto _case_end_4685664464; }
		_case_begin_4685664464:;
		{
			_47660_ok = (*this)._method_annotate_slc(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4685662256;
		_case_end_4685664464:;
		if (!((_47644_k->_method_map() != nullptr))) { goto _case_end_4685664560; }
		_case_begin_4685664560:;
		{
			_47660_ok = (*this)._method_annotate_map(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4685662256;
		_case_end_4685664560:;
		if (!((_47644_k->_method_fnc() != nullptr))) { goto _case_end_4685664656; }
		_case_begin_4685664656:;
		{
			_47660_ok = (*this)._method_annotate_fn(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4685662256;
		_case_end_4685664656:;
		if (!((_47644_k->_method_ptr() != nullptr))) { goto _case_end_4685663888; }
		_case_begin_4685663888:;
		{
			_47660_ok = (*this)._method_annotate_ptr(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4685662256;
		_case_end_4685663888:;
		if (!((_47644_k->_method_sptr() != nullptr))) { goto _case_end_4685663984; }
		_case_begin_4685663984:;
		{
			_47660_ok = (*this)._method_annotate_sptr(_47644_k);
			return _47660_ok;
		}
		goto _match_end_4685662256;
		_case_end_4685663984:;
		_case_begin_4685663280:;
		{
			_47660_ok = false;
			return _47660_ok;
		}
		goto _match_end_4685662256;
		_case_end_4685663280:;
		_match_end_4685662256:;
	}
}



inline jule::Bool _2200223c9_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _49336_ok = jule::Bool();
	(*this)._field_k=(&((*this)._field_p->_field_kind));
	_49336_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _49336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _2200223c9_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _2200223c9_FnCallArgChecker::_method_push_err_token(_2220dce43_Token _50933_token,jule::Str _50947_fmt,jule::Slice<jule::Any> _50960_args) {
	(*this)._field_e->_field_s->_method_push_err(_50933_token,_50947_fmt,_50960_args);
}



inline void _2200223c9_FnCallArgChecker::_method_push_err(jule::Str _51327_fmt,jule::Slice<jule::Any> _51340_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_51327_fmt,_51340_args);
}



inline jule::Slice<jule::Ptr<_222edb48e_ParamIns>> _2200223c9_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && ((*this)._field_f->_field_params[0LL]->_field_decl != nullptr)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _2200223c9_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ptr<_222edb48e_ParamIns>>& _52632_params) {
	jule::Bool _52655_ok = jule::Bool();
	jule::I64 _52717_n = _52632_params.len();
	if ((_52717_n > 0LL) && _52632_params[0LL]->_field_decl->_method_is_self()) {
		(_52717_n)--;
	}
	jule::I64 _53217_diff = _52717_n - (*this)._field_args.len();
	{
		if (!((_53217_diff == 0LL))) { goto _case_end_4685704512; }
		_case_begin_4685704512:;
		{
			_52655_ok = true;
			return _52655_ok;
		}
		goto _match_end_4685704368;
		_case_end_4685704512:;
		if (!(((_52717_n > 0LL) && _52632_params[_52717_n - 1LL]->_field_decl->_field_variadic))) { goto _case_end_4685704624; }
		_case_begin_4685704624:;
		{
			_52655_ok = true;
			return _52655_ok;
		}
		goto _match_end_4685704368;
		_case_end_4685704624:;
		if (!(((_53217_diff < 0LL) || (_53217_diff > _52632_params.len())))) { goto _case_end_4685704736; }
		_case_begin_4685704736:;
		{
			(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
			_52655_ok = false;
			return _52655_ok;
		}
		goto _match_end_4685704368;
		_case_end_4685704736:;
		_match_end_4685704368:;
	}
	jule::Str _54517_idents = jule::Str();
	for (; _53217_diff > 0LL; (_53217_diff)--) {
		{
			_54517_idents+=jule::Str(", ", 2) + _52632_params[_52717_n - _53217_diff]->_field_decl->_field_ident;
		}
	_iter_next_4685708688:;
	}
	_iter_end_4685708688:;
	_54517_idents=_54517_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_54517_idents)}));
	_52655_ok = false;
	return _52655_ok;
}



inline jule::Bool _2200223c9_FnCallArgChecker::_method_check_arg(jule::Ptr<_222edb48e_ParamIns>& _55533_p,jule::Ptr<_20683ebaa_Data>& _55552_arg,_2220dce43_Token& _55569_error_token) {
	jule::Bool _55591_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation && _222edb48e_parameter_uses_generics(_55533_p->_field_decl,(*this)._field_f->_field_decl->_field_generics)) {
		_2200223c9_DynamicTypeAnnotation _55721_dta = _2200223c9_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_55533_p,_55552_arg,_55569_error_token,nullptr);
		_55591_ok=_55721_dta._method_annotate();
		if ((!(_55591_ok))) {
			(*this)._method_push_err_token(_55569_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_55591_ok = false;
			return _55591_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_55533_p->_field_decl->_field_mutable,_55533_p->_field_decl->_field_reference,_55533_p->_field_kind,_55552_arg,_55569_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_55533_p->_field_decl->_field_reference,_55533_p->_field_kind,_55552_arg,_55569_error_token);
	_55591_ok = true;
	return _55591_ok;
}



inline jule::Bool _2200223c9_FnCallArgChecker::_method_push(jule::Ptr<_222edb48e_ParamIns>& _57728_p,jule::Ptr<_221d8b043_Expr> _57746_arg) {
	jule::Bool _57760_ok = jule::Bool();
	jule::Ptr<_2300b54e5_TypeKind> _57817_old = (*this)._field_e->_field_prefix;
	jule::Bool _57913_old_immut = (*this)._field_e->_field_immutable;
	jule::Ptr<_20683ebaa_Data> _58017_d = nullptr;
	(*this)._field_e->_field_immutable=(!(_57728_p->_field_decl->_field_mutable));
	if ((!((*this)._field_dynamic_annotation)) && (!(_57728_p->_field_decl->_field_variadic))) {
		(*this)._field_e->_field_prefix=_57728_p->_field_kind;
	} else {
		(*this)._field_e->_field_prefix=nullptr;
	}
	_58017_d=(*this)._field_e->_method_eval_expr_kind(_57746_arg->_field_kind);
	(*this)._field_e->_field_prefix=_57817_old;
	(*this)._field_e->_field_immutable=_57913_old_immut;
	if (_58017_d == nullptr) {
		_57760_ok = false;
		return _57760_ok;
	}
	(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(_58017_d->_field_model);
	_57760_ok = (*this)._method_check_arg(_57728_p,_58017_d,_57746_arg->_field_token);
	return _57760_ok;
}



inline jule::Bool _2200223c9_FnCallArgChecker::_method_push_variadic(jule::Ptr<_222edb48e_ParamIns>& _60137_p,jule::Int _60155_i) {
	jule::Bool _60165_ok = jule::Bool();
	_60165_ok=true;
	jule::Bool _60317_variadiced = false;
	jule::Bool _60413_more = (_60155_i + 1LL) < (*this)._field_args.len();
	jule::Ptr<_21eedb492_SliceExprModel> _60517_model = jule::new_struct<_21eedb492_SliceExprModel>(new( std::nothrow ) _21eedb492_SliceExprModel(_60137_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ptr<_2300b54e5_TypeKind> _60917_old = (*this)._field_e->_field_prefix;
	for (; _60155_i < (*this)._field_args.len(); (_60155_i)++) {
		{
			jule::Ptr<_221d8b043_Expr> _61121_arg = (*this)._field_args[_60155_i];
			{
				auto &_match_expr{ _61121_arg->_field_kind };
				if (!(_match_expr.type_is<jule::Ptr<_221d8b043_VariadicExpr>>())) { goto _case_end_4685757920; }
				_case_begin_4685757920:;
				{
					(*this)._field_e->_field_prefix=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2300b54e5_Slc>(new( std::nothrow ) _2300b54e5_Slc(_60137_p->_field_kind))));
				}
				goto _match_end_4685756896;
				_case_end_4685757920:;
				_case_begin_4685755152:;
				{
					(*this)._field_e->_field_prefix=_60137_p->_field_kind;
				}
				goto _match_end_4685756896;
				_case_end_4685755152:;
				_match_end_4685756896:;
			}
			jule::Ptr<_20683ebaa_Data> _62121_d = (*this)._field_e->_method_eval_expr_kind(_61121_arg->_field_kind);
			if (_62121_d == nullptr) {
				_60165_ok=false;
				goto _iter_next_4685753072;
			}
			if (_62121_d->_field_variadiced) {
				_60317_variadiced=true;
				_62121_d->_field_variadiced=false;
				_60137_p->_field_kind->_field_variadic=true;
				_62121_d->_field_kind->_field_variadic=true;
				__JULE_DEFER({
					_62121_d->_field_kind->_field_variadic=false;
					_60137_p->_field_kind->_field_variadic=false;
				});
				{
					auto &_match_expr{ _62121_d->_field_model };
					if (!(_match_expr.type_is<jule::Ptr<_21eedb492_SliceExprModel>>())) { goto _case_end_4685767424; }
					_case_begin_4685767424:;
					{
						_60517_model=_62121_d->_field_model.operator jule::Ptr<_21eedb492_SliceExprModel>();
						_60517_model->_field_elem_kind=_60137_p->_field_kind;
					}
					goto _match_end_4685765456;
					_case_end_4685767424:;
					_case_begin_4685763024:;
					{
						_60517_model=nullptr;
						(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(_62121_d->_field_model);
					}
					goto _match_end_4685765456;
					_case_end_4685763024:;
					_match_end_4685765456:;
				}
				_60165_ok=(*this)._method_check_arg(_60137_p,_62121_d,_61121_arg->_field_token) && _60165_ok;
				goto _iter_next_4685753072;
			}
			_60517_model->_field_elems = jule::alloc_for_append(_60517_model->_field_elems,1);_60517_model->_field_elems.push(_62121_d->_field_model);
			_60165_ok=(*this)._method_check_arg(_60137_p,_62121_d,_61121_arg->_field_token) && _60165_ok;
		}
	_iter_next_4685753072:;
	}
	_iter_end_4685753072:;
	(*this)._field_e->_field_prefix=_60917_old;
	if (_60317_variadiced && _60413_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	}
	if (_60517_model != nullptr) {
		(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(jule::Any(_60517_model));
	}
	return _60165_ok;
}



inline jule::Bool _2200223c9_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ptr<_222edb48e_ParamIns>>& _66734_params) {
	jule::Bool _66757_ok = jule::Bool();
	_66757_ok=true;
	jule::Int _66917_i = 0LL;
	_julec_label_iter:;
	while (_66917_i < _66734_params.len()) {
		{
			jule::Ptr<_222edb48e_ParamIns> _67221_p = _66734_params[_66917_i];
			{
				if (!((_67221_p->_field_decl->_method_is_self()))) { goto _case_end_4685784528; }
				goto _match_end_4685783616;
				_case_end_4685784528:;
				if (!((_67221_p->_field_decl->_field_variadic))) { goto _case_end_4685784832; }
				_case_begin_4685784832:;
				{
					_66757_ok=(*this)._method_push_variadic(_67221_p,_66917_i) && _66757_ok;
					goto _iter_end_4685780432;
				}
				goto _match_end_4685783616;
				_case_end_4685784832:;
				if (!(((*this)._field_args.len() <= _66917_i))) { goto _case_end_4685784928; }
				_case_begin_4685784928:;
				{
					_66757_ok=false;
					goto _iter_end_4685780432;
				}
				goto _match_end_4685783616;
				_case_end_4685784928:;
				_case_begin_4685783728:;
				{
					_66757_ok=(*this)._method_push(_67221_p,(*this)._field_args[_66917_i]) && _66757_ok;
				}
				goto _match_end_4685783616;
				_case_end_4685783728:;
				_match_end_4685783616:;
			}
			(_66917_i)++;
		}
	_iter_next_4685780432:;
	}
	_iter_end_4685780432:;
	return _66757_ok;
}



inline jule::Bool _2200223c9_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _69450_ok = jule::Bool();
	{
		auto &expr = (*this)._field_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4685792960:;
		if (it != expr.end()) {
			jule::Ptr<_2300b54e5_TypeKind> &_2200223c9_g = *it;
			{
				if (_2200223c9_g == nullptr) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_69450_ok = false;
					return _69450_ok;
				}
			}
			_iter_next_4685792960:;
			++it;
			goto _iter_begin_4685792960;
		}
		_iter_end_4685792960:;
	}
	_69450_ok = true;
	return _69450_ok;
}



inline jule::Bool _2200223c9_FnCallArgChecker::_method_check(void) {
	jule::Bool _70426_ok = jule::Bool();
	jule::Slice<jule::Ptr<_222edb48e_ParamIns>> _70517_params = (*this)._method_get_params();
	_70426_ok=(*this)._method_check_counts(_70517_params);
	if ((!(_70426_ok))) {
		_70426_ok = false;
		return _70426_ok;
	}
	_70426_ok=(*this)._method_check_args(_70517_params);
	if (_70426_ok && (*this)._field_dynamic_annotation) {
		_70426_ok=(*this)._method_check_dynamic_type_annotation();
	}
	return _70426_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _2200223c9_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _2200223c9_StructLitChecker::_method_push_err(_2220dce43_Token _72827_token,jule::Str _72841_fmt,jule::Slice<jule::Any> _72854_args) {
	(*this)._field_e->_method_push_err(_72827_token,_72841_fmt,_72854_args);
}



inline void _2200223c9_StructLitChecker::_method_push_suggestion(jule::Str _73334_fmt,jule::Slice<jule::Any> _73347_args) {
	(*this)._field_e->_method_push_suggestion(_73334_fmt,_73347_args);
}



inline void _2200223c9_StructLitChecker::_method_push_match(jule::Ptr<_2398d04dc_FieldIns>& _73734_f,jule::Ptr<_20683ebaa_Data>& _73753_d,_2220dce43_Token& _73768_error_token) {
	(*this)._field_args = jule::alloc_for_append((*this)._field_args,1);(*this)._field_args.push(jule::new_struct<_21eedb492_StructArgExprModel>(new( std::nothrow ) _21eedb492_StructArgExprModel(_73734_f,_73753_d->_field_model)));
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr((!((*this)._field_e->_field_immutable)),false,_73734_f->_field_kind,_73753_d,_73768_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(false,_73734_f->_field_kind,_73753_d,_73768_error_token);
}



inline void _2200223c9_StructLitChecker::_method_check_pair(jule::Ptr<_221d8b043_FieldExprPair>& _74834_pair,jule::Slice<jule::Any>& _74861_exprs) {
	jule::Ptr<_2398d04dc_FieldIns> _75017_f = (*this)._field_s->_method_find_field(_74834_pair->_field_field._field_kind);
	if (_75017_f == nullptr) {
		(*this)._method_push_err(_74834_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_74834_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_75017_f->_field_decl->_field_public,_75017_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_74834_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_74834_pair->_field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	_julec_label_dup_lookup:;
	{
		auto &expr = _74861_exprs;
		auto it = expr.begin();
		_iter_begin_4685837840:;
		if (it != expr.end()) {
			jule::Any _2200223c9_expr = *it;
			{
				{
					auto &_match_expr{ _2200223c9_expr };
					if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FieldExprPair>>())) { goto _case_end_4685839328; }
					_case_begin_4685839328:;
					{
						jule::Ptr<_221d8b043_FieldExprPair> _76625_dpair = _2200223c9_expr.operator jule::Ptr<_221d8b043_FieldExprPair>();
						{
							if (!((_74834_pair == _76625_dpair))) { goto _case_end_4685842608; }
							_case_begin_4685842608:;
							{
								goto _iter_end_4685837840;
							}
							goto _match_end_4685842448;
							_case_end_4685842608:;
							if (!((_74834_pair->_field_field._field_kind == _76625_dpair->_field_field._field_kind))) { goto _case_end_4685842720; }
							_case_begin_4685842720:;
							{
								(*this)._method_push_err(_74834_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_74834_pair->_field_field._field_kind)}));
								goto _iter_end_4685837840;
							}
							goto _match_end_4685842448;
							_case_end_4685842720:;
							_match_end_4685842448:;
						}
					}
					goto _match_end_4685839760;
					_case_end_4685839328:;
					_match_end_4685839760:;
				}
			}
			_iter_next_4685837840:;
			++it;
			goto _iter_begin_4685837840;
		}
		_iter_end_4685837840:;
	}
	jule::Ptr<_2300b54e5_TypeKind> _77817_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_77817_prefix;
	});
	(*this)._field_e->_field_prefix=_75017_f->_field_kind;
	jule::Ptr<_20683ebaa_Data> _78217_d = (*this)._field_e->_method_eval_expr_kind(_74834_pair->_field_expr);
	if (_78217_d == nullptr) {
		return;
	}
	(*this)._method_push_match(_75017_f,_78217_d,_74834_pair->_field_field);
}



inline jule::Bool _2200223c9_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any>& _78935_exprs) {
	jule::Bool _79017_ok = true;
	{
		auto &expr = _78935_exprs;
		auto it = expr.begin();
		_iter_begin_4685855600:;
		if (it != expr.end()) {
			jule::Int _2200223c9_i = it - expr.begin();
			jule::Any _2200223c9_expr = *it;
			{
				{
					auto &_match_expr{ _2200223c9_expr };
					if (!(_match_expr.type_is<jule::Ptr<_221d8b043_KeyValPair>>())) { goto _case_end_4685857504; }
					_case_begin_4685857504:;
					{
						jule::Ptr<_221d8b043_KeyValPair> _79425_pair = _2200223c9_expr.operator jule::Ptr<_221d8b043_KeyValPair>();
						{
							auto &_match_expr{ _79425_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ptr<_221d8b043_IdentExpr>>())) { goto _case_end_4685861264; }
							goto _match_end_4685860976;
							_case_end_4685861264:;
							_case_begin_4685858160:;
							{
								(*this)._method_push_err(_79425_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								_79017_ok=false;
								goto _iter_next_4685855600;
							}
							goto _match_end_4685860976;
							_case_end_4685858160:;
							_match_end_4685860976:;
						}
						_78935_exprs.__at(_2200223c9_i)=jule::Any(jule::new_struct<_221d8b043_FieldExprPair>(new( std::nothrow ) _221d8b043_FieldExprPair(_79425_pair->_field_key.operator jule::Ptr<_221d8b043_IdentExpr>()->_field_token,_79425_pair->_field_val)));
					}
					goto _match_end_4685857968;
					_case_end_4685857504:;
					_match_end_4685857968:;
				}
			}
			_iter_next_4685855600:;
			++it;
			_2200223c9_i++;
			goto _iter_begin_4685855600;
		}
		_iter_end_4685855600:;
	}
	return _79017_ok;
}



inline void _2200223c9_StructLitChecker::_method_check(jule::Slice<jule::Any>& _81529_exprs) {
	if (_81529_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_81529_exprs)))) {
		return;
	}
	jule::Bool _82417_paired = false;
	{
		auto &expr = _81529_exprs;
		auto it = expr.begin();
		_iter_begin_4685869888:;
		if (it != expr.end()) {
			jule::Int _2200223c9_i = it - expr.begin();
			jule::Any _2200223c9_expr = *it;
			{
				{
					auto &_match_expr{ _2200223c9_expr };
					if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FieldExprPair>>())) { goto _case_end_4685871792; }
					_case_begin_4685871792:;
					{
						jule::Ptr<_221d8b043_FieldExprPair> _82825_pair = _2200223c9_expr.operator jule::Ptr<_221d8b043_FieldExprPair>();
						if ((_2200223c9_i > 0LL) && (!(_82417_paired))) {
							(*this)._method_push_err(_82825_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						}
						_82417_paired=true;
						(*this)._method_check_pair(_82825_pair,_81529_exprs);
					}
					goto _match_end_4685872256;
					_case_end_4685871792:;
					if (!(_match_expr.type_is<jule::Ptr<_221d8b043_Expr>>())) { goto _case_end_4685872336; }
					_case_begin_4685872336:;
					{
						jule::Ptr<_221d8b043_Expr> _83625_e = _2200223c9_expr.operator jule::Ptr<_221d8b043_Expr>();
						if (_82417_paired) {
							(*this)._method_push_err(_83625_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
						}
						if (_2200223c9_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_83625_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
							goto _iter_next_4685869888;
						}
						jule::Ptr<_2398d04dc_FieldIns> _84525_field = (*this)._field_s->_field_fields[_2200223c9_i];
						jule::Ptr<_2300b54e5_TypeKind> _84725_prefix = (*this)._field_e->_field_prefix;
						__JULE_DEFER({
							(*this)._field_e->_field_prefix=_84725_prefix;
						});
						(*this)._field_e->_field_prefix=_84525_field->_field_kind;
						jule::Ptr<_20683ebaa_Data> _85125_d = (*this)._field_e->_method_eval_expr_kind(_83625_e->_field_kind);
						if (_85125_d == nullptr) {
							goto _iter_next_4685869888;
						}
						(*this)._method_push_match(_84525_field,_85125_d,_83625_e->_field_token);
					}
					goto _match_end_4685872256;
					_case_end_4685872336:;
					_match_end_4685872256:;
				}
			}
			_iter_next_4685869888:;
			++it;
			_2200223c9_i++;
			goto _iter_begin_4685869888;
		}
		_iter_end_4685869888:;
	}
	if ((!(_82417_paired))) {
		jule::I64 _86217_n = (*this)._field_s->_field_fields.len();
		jule::I64 _86321_diff = _86217_n - _81529_exprs.len();
		{
			if (!((_86321_diff <= 0LL))) { goto _case_end_4685893696; }
			_case_begin_4685893696:;
			{
				return;
			}
			goto _match_end_4685893504;
			_case_end_4685893696:;
			_match_end_4685893504:;
		}
		jule::Str _86921_idents = jule::Str();
		for (; _86321_diff > 0LL; (_86321_diff)--) {
			{
				_86921_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[_86217_n - _86321_diff]->_field_decl->_field_ident;
			}
		_iter_next_4685871712:;
		}
		_iter_end_4685871712:;
		_86921_idents=_86921_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_86921_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _2200223c9_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline void _2200223c9_RetTypeChecker::_method_prepare_types(void) {
	if ((*this)._field_f != nullptr) {
		(*this)._field_types=_2200223c9_get_result_types((*this)._field_f->_field_result);
	}
}



inline void _2200223c9_RetTypeChecker::_method_prepare_exprs(jule::Ptr<_221d8b043_Expr>& _105537_e) {
	if (_105537_e == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _105537_e->_field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TupleExpr>>())) { goto _case_end_4685997744; }
		_case_begin_4685997744:;
		{
			(*this)._field_exprs=_105537_e->_field_kind.operator jule::Ptr<_221d8b043_TupleExpr>()->_field_expr;
		}
		goto _match_end_4685992992;
		_case_end_4685997744:;
		_case_begin_4685993808:;
		{
			(*this)._field_exprs = jule::alloc_for_append((*this)._field_exprs,1);(*this)._field_exprs.push(_105537_e);
		}
		goto _match_end_4685992992;
		_case_end_4685993808:;
		_match_end_4685992992:;
	}
}



inline void _2200223c9_RetTypeChecker::_method_ret_vars(void) {
	if (((*this)._field_f == nullptr) || (*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ptr<_2200a2657_Var>>::alloc(0LL,static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len()));
	jule::Ptr<_2300254bb_ScopeChecker> _107517_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _107717_j = 0LL;
	{
		auto &expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4686005152:;
		if (it != expr.end()) {
			jule::Int _2200223c9_i = it - expr.begin();
			_2220dce43_Token &_2200223c9_ident = *it;
			{
				if ((!(_2220dce43_is_ignore_ident(_2200223c9_ident._field_kind)))) {
					(*this)._field_vars = jule::alloc_for_append((*this)._field_vars,1);(*this)._field_vars.push(_107517_root_scope->_field_table->_field_vars[_107717_j]);
					(_107717_j)++;
				} else {
					(*this)._field_vars = jule::alloc_for_append((*this)._field_vars,1);(*this)._field_vars.push(jule::new_struct<_2200a2657_Var>(new( std::nothrow ) _2200a2657_Var(jule::Ptr<_2300254bb_Scope>(),_2220dce43_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),(*this)._field_types[_2200223c9_i])),jule::Ptr<_20683ebaa_Value>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Ptr<_2200a2657_IterRelation>(),jule::Slice<jule::Ptr<_2200a2657_Var>>())));
				}
			}
			_iter_next_4686005152:;
			++it;
			_2200223c9_i++;
			goto _iter_begin_4686005152;
		}
		_iter_end_4686005152:;
	}
	if (_107717_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _2200223c9_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_20683ebaa_Data>> _110117_datas = jule::Slice<jule::Ptr<_20683ebaa_Data>>::alloc(0LL,static_cast<jule::I64>((*this)._field_exprs.len()));
	{
		auto &expr = (*this)._field_exprs;
		auto it = expr.begin();
		_iter_begin_4686016704:;
		if (it != expr.end()) {
			jule::Int _2200223c9_i = it - expr.begin();
			jule::Ptr<_221d8b043_Expr> _2200223c9_expr = *it;
			{
				if (_2200223c9_i >= (*this)._field_types.len()) {
					goto _iter_end_4686016704;
				}
				jule::Ptr<_2300b54e5_TypeKind> _110821_t = (*this)._field_types[_2200223c9_i];
				jule::Ptr<_20683ebaa_Data> _111021_d = (*this)._field_sc->_field_s->_method_evalp((*this)._field_sc,_110821_t)->_method_eval_expr(_2200223c9_expr);
				if (_111021_d == nullptr) {
					goto _iter_next_4686016704;
				}
				_110117_datas.push(_111021_d);
				if ((!(_111021_d->_field_mutable)) && _111021_d->_field_kind->_method_mutable()) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;
				}
				_2200223c9_AssignTypeChecker _112221_ac = _2200223c9_AssignTypeChecker((*this)._field_sc->_field_s,_110821_t,_111021_d,(*this)._field_error_token);
				_112221_ac._method_check();
			}
			_iter_next_4686016704:;
			++it;
			_2200223c9_i++;
			goto _iter_begin_4686016704;
		}
		_iter_end_4686016704:;
	}
	if (_110117_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_21eedb492_TupleExprModel>(new( std::nothrow ) _21eedb492_TupleExprModel(_110117_datas)));
	} else if (_110117_datas.len() == 1LL) {
		(*this)._field_model=_110117_datas[0LL]->_field_model;
	}
}



inline jule::Bool _2200223c9_RetTypeChecker::_method_check(jule::Ptr<_221d8b043_Expr>& _114129_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_114129_e);
	(*this)._method_ret_vars();
	jule::I64 _114613_n = (*this)._field_exprs.len();
	if ((_114613_n == 0LL) && ((*this)._field_types.len() > 0LL)) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		}
		return true;
	}
	if (((_114613_n > 0LL) && ((*this)._field_f != nullptr)) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	}
	if (_114613_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if (_114613_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>());
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _2200223c9_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2300167cb_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _2300167cb_Trait::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _2522_other) {
	jule::Ptr<_2300167cb_Trait> _2613_trt = _2522_other->_method_trt();
	return this->self == _2613_trt;
}



inline jule::Bool _2300167cb_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ptr<_222edb48e_Fn> _2300167cb_Trait::_method_find_method(jule::Str _3734_ident) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4688291424:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _2300167cb_f = *it;
			{
				if (_2300167cb_f->_field_ident == _3734_ident) {
					return _2300167cb_f;
				}
			}
			_iter_next_4688291424:;
			++it;
			goto _iter_begin_4688291424;
		}
		_iter_end_4688291424:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300167cb_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23001604a_EnumItem::_method_auto_expr(void) {
	return (*this)._field_value == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _23001604a_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _23001604a_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _23001604a_Enum::_method_equals(jule::Ptr<_2300b54e5_TypeKind> _3522_other) {
	jule::Ptr<_23001604a_Enum> _3613_enm = _3522_other->_method_enm();
	return this->self == _3613_enm;
}



inline jule::Ptr<_23001604a_EnumItem> _23001604a_Enum::_method_find_item(jule::Str _4432_ident) {
	{
		auto &expr = (*this)._field_items;
		auto it = expr.begin();
		_iter_begin_4688303376:;
		if (it != expr.end()) {
			jule::Ptr<_23001604a_EnumItem> _23001604a_item = *it;
			{
				if (_23001604a_item->_field_ident == _4432_ident) {
					return _23001604a_item;
				}
			}
			_iter_next_4688303376:;
			++it;
			goto _iter_begin_4688303376;
		}
		_iter_end_4688303376:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _23001604a_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _230019081_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _230019081_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _230019081_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20683ebaa_BinopSolver::_method_check_type_compatibility(void) {
	return (*this)._field_e->_field_s->_method_check_type_compatibility((*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op);
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_nil(void) {
	if ((!((*this)._field_r->_field_kind->_method_nil_compatible()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)))) { goto _case_end_4690103264; }
		_case_begin_4690103264:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4690099312;
		_case_end_4690103264:;
		_case_begin_4690095360:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return nullptr;
		}
		goto _match_end_4690099312;
		_case_end_4690095360:;
		_match_end_4690099312:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_enum(void) {
	jule::Ptr<_23001604a_Enum> _356617_enm = (*this)._field_l->_field_kind->_method_enm();
	if (((*this)._field_r->_field_kind->_method_enm() == nullptr) || (_356617_enm != (*this)._field_r->_field_kind->_method_enm())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_356617_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str(">", 1)) || _match_expr == (jule::Str("<", 1)) || _match_expr == (jule::Str(">=", 2)) || _match_expr == (jule::Str("<=", 2)))) { goto _case_end_4690116928; }
		_case_begin_4690116928:;
		{
			if ((!(_206ec1e1e_is_num(_356617_enm->_field_kind->_field_kind->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_356617_enm->_field_ident)}));
				return nullptr;
			}
			goto _case_begin_4690117056;
		}
		goto _match_end_4690113136;
		_case_end_4690116928:;
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)))) { goto _case_end_4690117056; }
		_case_begin_4690117056:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4690113136;
		_case_end_4690117056:;
		if (!(_match_expr == (jule::Str("&", 1)) || _match_expr == (jule::Str("|", 1)))) { goto _case_end_4690117152; }
		_case_begin_4690117152:;
		{
			if ((_356617_enm->_field_kind->_field_kind->_method_prim() == nullptr) || (!(_206ec1e1e_is_int(_356617_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_356617_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_4690113136;
		_case_end_4690117152:;
		_case_begin_4690107728:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_356617_enm->_field_ident)}));
			return nullptr;
		}
		goto _match_end_4690113136;
		_case_end_4690107728:;
		_match_end_4690113136:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_sptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)))) { goto _case_end_4690138048; }
		_case_begin_4690138048:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4690132496;
		_case_end_4690138048:;
		_case_begin_4690133328:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4690132496;
		_case_end_4690133328:;
		_match_end_4690132496:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)) || _match_expr == (jule::Str("<", 1)) || _match_expr == (jule::Str(">", 1)) || _match_expr == (jule::Str("<=", 2)) || _match_expr == (jule::Str(">=", 2)))) { goto _case_end_4690145648; }
		_case_begin_4690145648:;
		{
			if ((!((*this)._method_check_type_compatibility()))) {
				return nullptr;
			}
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4690141248;
		_case_end_4690145648:;
		if (!(_match_expr == (jule::Str("+", 1)) || _match_expr == (jule::Str("-", 1)))) { goto _case_end_4690145840; }
		_case_begin_4690145840:;
		{
			if ((*this)._field_l->_field_kind->_method_ptr() == nullptr) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			if ((*this)._field_l->_field_kind->_method_ptr()->_method_is_unsafe()) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			}
			if ((!(_20683ebaa_is_ptr_arithmetic_compatible_int((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("type \"@\" is incompatible to use for pointer arithmetic", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
				return nullptr;
			}
			return (*this)._field_l;
		}
		goto _match_end_4690141248;
		_case_end_4690145840:;
		_case_begin_4690139104:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4690141248;
		_case_end_4690139104:;
		_match_end_4690141248:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)))) { goto _case_end_4690170128; }
		_case_begin_4690170128:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4690164704;
		_case_end_4690170128:;
		_case_begin_4690165440:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4690164704;
		_case_end_4690165440:;
		_match_end_4690164704:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)))) { goto _case_end_4690178752; }
		_case_begin_4690178752:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4690173376;
		_case_end_4690178752:;
		_case_begin_4690174096:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4690173376;
		_case_end_4690174096:;
		_match_end_4690173376:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)))) { goto _case_end_4690187344; }
		_case_begin_4690187344:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4690181968;
		_case_end_4690187344:;
		_case_begin_4690182688:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4690181968;
		_case_end_4690182688:;
		_match_end_4690181968:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)))) { goto _case_end_4690195936; }
		_case_begin_4690195936:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4690190560;
		_case_end_4690195936:;
		_case_begin_4690191280:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4690190560;
		_case_end_4690191280:;
		_match_end_4690190560:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)))) { goto _case_end_4690204624; }
		_case_begin_4690204624:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4690200288;
		_case_end_4690204624:;
		_case_begin_4690199872:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4690200288;
		_case_end_4690199872:;
		_match_end_4690200288:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_any(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)))) { goto _case_end_4690208688; }
		_case_begin_4690208688:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4690207824;
		_case_end_4690208688:;
		_case_begin_4690205680:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return nullptr;
		}
		goto _match_end_4690207824;
		_case_end_4690205680:;
		_match_end_4690207824:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)) || _match_expr == (jule::Str("&&", 2)) || _match_expr == (jule::Str("||", 2)))) { goto _case_end_4690220288; }
		_case_begin_4690220288:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4690214912;
		_case_end_4690220288:;
		_case_begin_4690215632:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4690214912;
		_case_end_4690215632:;
		_match_end_4690214912:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_str(void) {
	jule::Str _379617_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_379617_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_379617_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("+", 1)))) { goto _case_end_4690232272; }
		_case_begin_4690232272:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4690224672;
		_case_end_4690232272:;
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)))) { goto _case_end_4690232368; }
		_case_begin_4690232368:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4690224672;
		_case_end_4690232368:;
		_case_begin_4690228032:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return nullptr;
		}
		goto _match_end_4690224672;
		_case_end_4690228032:;
		_match_end_4690224672:;
	}
}



inline void _20683ebaa_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _382217_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _382317_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_206e22a2e_is_greater(_382317_rk,_382217_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _20683ebaa_BinopSolver::_method_check_mod_data(jule::Ptr<_20683ebaa_Data>& _383838_d) {
	if ((!(_383838_d->_method_is_const()))) {
		if ((_383838_d->_field_kind->_method_prim() == nullptr) || (!(_206ec1e1e_is_int(_383838_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		return;
	}
	{
		if (!((_2200223c9_sig_assignable(jule::Str("i64", 3),_383838_d)))) { goto _case_end_4690253888; }
		_case_begin_4690253888:;
		{
			_383838_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_383838_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4690248448;
		_case_end_4690253888:;
		if (!((_2200223c9_unsig_assignable(jule::Str("u64", 3),_383838_d)))) { goto _case_end_4690253984; }
		_case_begin_4690253984:;
		{
			_383838_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_383838_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4690248448;
		_case_end_4690253984:;
		_case_begin_4690248560:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		goto _match_end_4690248448;
		_case_end_4690248560:;
		_match_end_4690248448:;
	}
}



inline void _20683ebaa_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Bool _20683ebaa_BinopSolver::_method_numbers_are_compatibile(jule::Str& _386339_lk,jule::Str& _386349_rk) {
	if ((!(_206ec1e1e_is_num(_386349_rk)))) {
		return false;
	}
	if ((*this)._field_l->_method_is_const()) {
		return true;
	}
	if (_386339_lk == jule::Str("f32", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _386349_rk == jule::Str("f32", 3);
	}
	if (_386339_lk == jule::Str("f64", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _386349_rk == jule::Str("f64", 3);
	}
	if ((*this)._field_r->_method_is_const()) {
		if ((!((*this)._field_r->_field_constant->_method_is_f64()))) {
			return true;
		}
		{
			auto &_match_expr{ (*this)._field_r->_field_model };
			if (!(_match_expr.type_is<jule::Ptr<_206e210e3_Const>>())) { goto _case_end_4679028528; }
			_case_begin_4679028528:;
			{
				return _2200223c9_int_assignable(jule::Str("int", 3),(*this)._field_r) || _2200223c9_int_assignable(jule::Str("uint", 4),(*this)._field_r);
			}
			goto _match_end_4679026928;
			_case_end_4679028528:;
			_case_begin_4679026416:;
			{
				return false;
			}
			goto _match_end_4679026928;
			_case_end_4679026416:;
			_match_end_4679026928:;
		}
	}
	return (!(_206ec1e1e_is_float(_386349_rk)));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_float(void) {
	jule::Str _390613_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _390713_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_390613_lk,_390713_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_390613_lk),jule::Any(_390713_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)) || _match_expr == (jule::Str("<", 1)) || _match_expr == (jule::Str(">", 1)) || _match_expr == (jule::Str(">=", 2)) || _match_expr == (jule::Str("<=", 2)))) { goto _case_end_4679039648; }
		_case_begin_4679039648:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4679039552;
		_case_end_4679039648:;
		_match_end_4679039552:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("+", 1)) || _match_expr == (jule::Str("-", 1)) || _match_expr == (jule::Str("*", 1)) || _match_expr == (jule::Str("/", 1)))) { goto _case_end_4692316576; }
		_case_begin_4692316576:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4679045728;
		_case_end_4692316576:;
		if (!(_match_expr == (jule::Str("%", 1)))) { goto _case_end_4692326096; }
		_case_begin_4692326096:;
		{
			if ((!(_206ec1e1e_is_int(_390713_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_390613_lk),jule::Any(_390713_rk)}));
				return nullptr;
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_4679045728;
		_case_end_4692326096:;
		_case_begin_4679039920:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return nullptr;
		}
		goto _match_end_4679045728;
		_case_end_4679039920:;
		_match_end_4679045728:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _395213_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _395313_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_395213_lk,_395313_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_395213_lk),jule::Any(_395313_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)) || _match_expr == (jule::Str("<", 1)) || _match_expr == (jule::Str(">", 1)) || _match_expr == (jule::Str(">=", 2)) || _match_expr == (jule::Str("<=", 2)))) { goto _case_end_4692330160; }
		_case_begin_4692330160:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4692328608;
		_case_end_4692330160:;
		_match_end_4692328608:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("+", 1)) || _match_expr == (jule::Str("-", 1)) || _match_expr == (jule::Str("*", 1)) || _match_expr == (jule::Str("/", 1)) || _match_expr == (jule::Str("&", 1)) || _match_expr == (jule::Str("|", 1)) || _match_expr == (jule::Str("^", 1)))) { goto _case_end_4692338112; }
		_case_begin_4692338112:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4692335616;
		_case_end_4692338112:;
		if (!(_match_expr == (jule::Str("%", 1)))) { goto _case_end_4692338304; }
		_case_begin_4692338304:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4692335616;
		_case_end_4692338304:;
		if (!(_match_expr == (jule::Str("<<", 2)) || _match_expr == (jule::Str(">>", 2)))) { goto _case_end_4692338400; }
		_case_begin_4692338400:;
		{
			if ((!(_20683ebaa_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_4692335616;
		_case_end_4692338400:;
		_case_begin_4692330816:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for unsigned integer type(s)", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return nullptr;
		}
		goto _match_end_4692335616;
		_case_end_4692330816:;
		_match_end_4692335616:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _401113_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _401213_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_401113_lk,_401213_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_401113_lk),jule::Any(_401213_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)) || _match_expr == (jule::Str("!=", 2)) || _match_expr == (jule::Str("<", 1)) || _match_expr == (jule::Str(">", 1)) || _match_expr == (jule::Str(">=", 2)) || _match_expr == (jule::Str("<=", 2)))) { goto _case_end_4692357744; }
		_case_begin_4692357744:;
		{
			return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
		}
		goto _match_end_4692354832;
		_case_end_4692357744:;
		_match_end_4692354832:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("+", 1)) || _match_expr == (jule::Str("-", 1)) || _match_expr == (jule::Str("*", 1)) || _match_expr == (jule::Str("/", 1)) || _match_expr == (jule::Str("&", 1)) || _match_expr == (jule::Str("|", 1)) || _match_expr == (jule::Str("^", 1)))) { goto _case_end_4692365664; }
		_case_begin_4692365664:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4692363008;
		_case_end_4692365664:;
		if (!(_match_expr == (jule::Str("%", 1)))) { goto _case_end_4692365856; }
		_case_begin_4692365856:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4692363008;
		_case_end_4692365856:;
		if (!(_match_expr == (jule::Str("<<", 2)) || _match_expr == (jule::Str(">>", 2)))) { goto _case_end_4692365952; }
		_case_begin_4692365952:;
		{
			if ((!(_20683ebaa_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
				return nullptr;
			}
			return (*this)._field_l;
		}
		goto _match_end_4692363008;
		_case_end_4692365952:;
		_case_begin_4692358352:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return nullptr;
		}
		goto _match_end_4692363008;
		_case_end_4692358352:;
		_match_end_4692363008:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval_prim(void) {
	jule::Ptr<_2300b54e5_Prim> _406613_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_406613_prim->_method_is_bool()))) { goto _case_end_4692394688; }
		_case_begin_4692394688:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_4692394528;
		_case_end_4692394688:;
		if (!((_406613_prim->_method_is_str()))) { goto _case_end_4692394800; }
		_case_begin_4692394800:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_4692394528;
		_case_end_4692394800:;
		_match_end_4692394528:;
	}
	jule::Ptr<_2300b54e5_Prim> _407213_rprim = (*this)._field_r->_field_kind->_method_prim();
	if (_407213_rprim == nullptr) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_406613_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	jule::Str _407813_lk = _406613_prim->_method_to_str();
	{
		if (!((_206ec1e1e_is_float(_407813_lk)))) { goto _case_end_4692405680; }
		_case_begin_4692405680:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_4692404144;
		_case_end_4692405680:;
		if (!((_206ec1e1e_is_unsig_int(_407813_lk)))) { goto _case_end_4692405808; }
		_case_begin_4692405808:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_4692404144;
		_case_end_4692405808:;
		if (!((_206ec1e1e_is_sig_int(_407813_lk)))) { goto _case_end_4692405920; }
		_case_begin_4692405920:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_4692404144;
		_case_end_4692405920:;
		_case_begin_4692404240:;
		{
			return nullptr;
		}
		goto _match_end_4692404144;
		_case_end_4692404240:;
		_match_end_4692404144:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_void()))) { goto _case_end_4692412368; }
		_case_begin_4692412368:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return nullptr;
		}
		goto _match_end_4692410816;
		_case_end_4692412368:;
		if (!((((*this)._field_r->_field_kind->_method_prim() != nullptr) && (*this)._field_r->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4692412560; }
		_case_begin_4692412560:;
		{
			std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			goto _case_begin_4692412656;
		}
		goto _match_end_4692410816;
		_case_end_4692412560:;
		if (!((((*this)._field_l->_field_kind->_method_prim() != nullptr) && (*this)._field_l->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4692412656; }
		_case_begin_4692412656:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_4692410816;
		_case_end_4692412656:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_4692411296; }
		_case_begin_4692411296:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_4692410816;
		_case_end_4692411296:;
		if (!(((*this)._field_l->_field_kind->_method_enm() != nullptr))) { goto _case_end_4692411392; }
		_case_begin_4692411392:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_4692410816;
		_case_end_4692411392:;
		if (!(((*this)._field_r->_field_kind->_method_sptr() != nullptr))) { goto _case_end_4692411488; }
		_case_begin_4692411488:;
		{
			std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			goto _case_begin_4692411584;
		}
		goto _match_end_4692410816;
		_case_end_4692411488:;
		if (!(((*this)._field_l->_field_kind->_method_sptr() != nullptr))) { goto _case_end_4692411584; }
		_case_begin_4692411584:;
		{
			return (*this)._method_eval_sptr();
		}
		goto _match_end_4692410816;
		_case_end_4692411584:;
		if (!(((*this)._field_r->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4692412784; }
		_case_begin_4692412784:;
		{
			std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			goto _case_begin_4692412880;
		}
		goto _match_end_4692410816;
		_case_end_4692412784:;
		if (!(((*this)._field_l->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4692412880; }
		_case_begin_4692412880:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_4692410816;
		_case_end_4692412880:;
		if (!(((*this)._field_l->_field_kind->_method_arr() != nullptr))) { goto _case_end_4692412976; }
		_case_begin_4692412976:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_4692410816;
		_case_end_4692412976:;
		if (!(((*this)._field_l->_field_kind->_method_slc() != nullptr))) { goto _case_end_4692413072; }
		_case_begin_4692413072:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_4692410816;
		_case_end_4692413072:;
		if (!(((*this)._field_l->_field_kind->_method_fnc() != nullptr))) { goto _case_end_4692413168; }
		_case_begin_4692413168:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_4692410816;
		_case_end_4692413168:;
		if (!(((*this)._field_r->_field_kind->_method_trt() != nullptr))) { goto _case_end_4692413264; }
		_case_begin_4692413264:;
		{
			std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			goto _case_begin_4692413360;
		}
		goto _match_end_4692410816;
		_case_end_4692413264:;
		if (!(((*this)._field_l->_field_kind->_method_trt() != nullptr))) { goto _case_end_4692413360; }
		_case_begin_4692413360:;
		{
			return (*this)._method_eval_trait();
		}
		goto _match_end_4692410816;
		_case_end_4692413360:;
		if (!(((*this)._field_l->_field_kind->_method_strct() != nullptr))) { goto _case_end_4692413456; }
		_case_begin_4692413456:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_4692410816;
		_case_end_4692413456:;
		if (!(((*this)._field_l->_field_kind->_method_prim() != nullptr))) { goto _case_end_4692413568; }
		_case_begin_4692413568:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_4692410816;
		_case_end_4692413568:;
		_case_begin_4692410992:;
		{
			return nullptr;
		}
		goto _match_end_4692410816;
		_case_end_4692410992:;
		_match_end_4692410816:;
	}
}



inline void _20683ebaa_BinopSolver::_method_solve_const(jule::Ptr<_20683ebaa_Data>& _414335_d) {
	{
		if (!((_414335_d == nullptr))) { goto _case_end_4692456704; }
		_case_begin_4692456704:;
		{
			return;
		}
		goto _match_end_4692456480;
		_case_end_4692456704:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_4692456816; }
		_case_begin_4692456816:;
		{
			_414335_d->_field_constant=nullptr;
			return;
		}
		goto _match_end_4692456480;
		_case_end_4692456816:;
		_match_end_4692456480:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!(_match_expr == (jule::Str("==", 2)))) { goto _case_end_4692456976; }
		_case_begin_4692456976:;
		{
			_414335_d->_field_constant=_206e210e3_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4692459488;
		_case_end_4692456976:;
		if (!(_match_expr == (jule::Str("!=", 2)))) { goto _case_end_4692459872; }
		_case_begin_4692459872:;
		{
			_414335_d->_field_constant=_206e210e3_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))))));
		}
		goto _match_end_4692459488;
		_case_end_4692459872:;
		if (!(_match_expr == (jule::Str("::", 2)))) { goto _case_end_4692459984; }
		_case_begin_4692459984:;
		{
			_414335_d->_field_constant=_206e210e3_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4692459488;
		_case_end_4692459984:;
		if (!(_match_expr == (jule::Str("&&", 2)))) { goto _case_end_4692461232; }
		_case_begin_4692461232:;
		{
			_414335_d->_field_constant=_206e210e3_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4692459488;
		_case_end_4692461232:;
		if (!(_match_expr == (jule::Str(">", 1)))) { goto _case_end_4692461344; }
		_case_begin_4692461344:;
		{
			_414335_d->_field_constant=_206e210e3_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4692459488;
		_case_end_4692461344:;
		if (!(_match_expr == (jule::Str("<", 1)))) { goto _case_end_4692461456; }
		_case_begin_4692461456:;
		{
			_414335_d->_field_constant=_206e210e3_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4692459488;
		_case_end_4692461456:;
		if (!(_match_expr == (jule::Str(">=", 2)))) { goto _case_end_4692461568; }
		_case_begin_4692461568:;
		{
			_414335_d->_field_constant=_206e210e3_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*((*this)._field_r->_field_constant))) || (*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4692459488;
		_case_end_4692461568:;
		if (!(_match_expr == (jule::Str("<=", 2)))) { goto _case_end_4692461680; }
		_case_begin_4692461680:;
		{
			_414335_d->_field_constant=_206e210e3_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*((*this)._field_r->_field_constant))) || (*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4692459488;
		_case_end_4692461680:;
		if (!(_match_expr == (jule::Str("+", 1)))) { goto _case_end_4692461792; }
		_case_begin_4692461792:;
		{
			(*this)._field_l->_field_constant->_method_add((*((*this)._field_r->_field_constant)));
			_414335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4692459488;
		_case_end_4692461792:;
		if (!(_match_expr == (jule::Str("-", 1)))) { goto _case_end_4692461904; }
		_case_begin_4692461904:;
		{
			(*this)._field_l->_field_constant->_method_sub((*((*this)._field_r->_field_constant)));
			_414335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4692459488;
		_case_end_4692461904:;
		if (!(_match_expr == (jule::Str("*", 1)))) { goto _case_end_4692462016; }
		_case_begin_4692462016:;
		{
			(*this)._field_l->_field_constant->_method_mul((*((*this)._field_r->_field_constant)));
			_414335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4692459488;
		_case_end_4692462016:;
		if (!(_match_expr == (jule::Str("/", 1)))) { goto _case_end_4692462128; }
		_case_begin_4692462128:;
		{
			jule::Bool _419617_ok = (*this)._field_l->_field_constant->_method_div((*((*this)._field_r->_field_constant)));
			if ((!(_419617_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
			}
			_414335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4692459488;
		_case_end_4692462128:;
		if (!(_match_expr == (jule::Str("%", 1)))) { goto _case_end_4692462240; }
		_case_begin_4692462240:;
		{
			jule::Bool _420317_ok = (*this)._field_l->_field_constant->_method_mod((*((*this)._field_r->_field_constant)));
			if ((!(_420317_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
			}
			_414335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4692459488;
		_case_end_4692462240:;
		if (!(_match_expr == (jule::Str("|", 1)))) { goto _case_end_4692462352; }
		_case_begin_4692462352:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*((*this)._field_r->_field_constant)));
			_414335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4692459488;
		_case_end_4692462352:;
		if (!(_match_expr == (jule::Str("&", 1)))) { goto _case_end_4692462464; }
		_case_begin_4692462464:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*((*this)._field_r->_field_constant)));
			_414335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4692459488;
		_case_end_4692462464:;
		if (!(_match_expr == (jule::Str("^", 1)))) { goto _case_end_4692462576; }
		_case_begin_4692462576:;
		{
			(*this)._field_l->_field_constant->_method_xor((*((*this)._field_r->_field_constant)));
			_414335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4692459488;
		_case_end_4692462576:;
		if (!(_match_expr == (jule::Str("<<", 2)))) { goto _case_end_4692462688; }
		_case_begin_4692462688:;
		{
			(*this)._field_l->_field_constant->_method_lshift((*((*this)._field_r->_field_constant)));
			_414335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4692459488;
		_case_end_4692462688:;
		if (!(_match_expr == (jule::Str(">>", 2)))) { goto _case_end_4692462800; }
		_case_begin_4692462800:;
		{
			(*this)._field_l->_field_constant->_method_rshift((*((*this)._field_r->_field_constant)));
			_414335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4692459488;
		_case_end_4692462800:;
		_match_end_4692459488:;
	}
	_414335_d->_field_model=jule::Any(_414335_d->_field_constant);
}



inline void _20683ebaa_BinopSolver::_method_post_const(jule::Ptr<_20683ebaa_Data>& _423330_d) {
	if (_423330_d == nullptr) {
		return;
	}
	_20683ebaa_normalize_bitsize(_423330_d);
}



inline void _20683ebaa_BinopSolver::_method_check_data(jule::Ptr<_20683ebaa_Data>& _424134_d) {
	jule::Ptr<_222edb48e_FnIns> _424213_f = _424134_d->_field_kind->_method_fnc();
	if (((_424213_f != nullptr) && (_424213_f->_field_decl != nullptr)) && _424213_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	}
}



inline void _20683ebaa_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline void _20683ebaa_BinopSolver::_method_set_model(jule::Ptr<_20683ebaa_Data>& _425333_d) {
	if (_425333_d->_method_is_const()) {
		return;
	}
	jule::Ptr<_20683ebaa_Data> _425818_l = (*this)._field_l;
	jule::Ptr<_20683ebaa_Data> _425825_r = (*this)._field_r;
	std::tie(_425818_l,_425825_r) = std::make_tuple((*this)._field_l,(*this)._field_r);
	if ((!(_425818_l->_method_good_operand(_425825_r)))) {
		std::tie(_425818_l,_425825_r) = std::make_tuple(_425825_r,_425818_l);
	}
	_425333_d->_field_model=jule::Any(jule::new_struct<_21eedb492_BinopExprModel>(new( std::nothrow ) _21eedb492_BinopExprModel(_425818_l->_field_model,_425825_r->_field_model,(*this)._field_op._field_kind)));
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_solve_explicit(jule::Ptr<_20683ebaa_Data>& _427038_l,jule::Ptr<_20683ebaa_Data>& _427053_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_427038_l,_427053_r);
	(*this)._method_check_datas();
	jule::Ptr<_20683ebaa_Data> _427517_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_427038_l,_427053_r);
	(*this)._method_solve_const(_427517_d);
	(*this)._method_post_const(_427517_d);
	if (_427517_d != nullptr) {
		_427517_d->_field_lvalue=false;
		(*this)._method_set_model(_427517_d);
	}
	return _427517_d;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_BinopSolver::_method_solve(jule::Ptr<_221d8b043_BinopExpr>& _429029_op) {
	jule::Ptr<_20683ebaa_Data> _429117_l = (*this)._field_e->_method_eval_expr_kind(_429029_op->_field_left);
	if ((_429117_l == nullptr) || (_429117_l->_field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_20683ebaa_Data> _429617_r = (*this)._field_e->_method_eval_expr_kind(_429029_op->_field_right);
	if ((_429617_r == nullptr) || (_429617_r->_field_kind == nullptr)) {
		return nullptr;
	}
	(*this)._field_op=_429029_op->_field_op;
	jule::Ptr<_20683ebaa_Data> _430317_d = (*this)._method_solve_explicit(_429117_l,_429617_r);
	if (((_430317_d != nullptr) && _429117_l->_field_is_rune) && _429617_r->_field_is_rune) {
		_430317_d->_field_is_rune=true;
	}
	return _430317_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _20683ebaa_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_TernaryExpr &_Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline void _2300b54e5_TypeChecker::_method_push_err(_2220dce43_Token _68427_token,jule::Str _68441_fmt,jule::Slice<jule::Any> _68454_args) {
	(*this)._field_s->_method_push_err(_68427_token,_68441_fmt,_68454_args);
}



inline jule::Ptr<_2300b54e5_Prim> _2300b54e5_TypeChecker::_method_build_prim(jule::Ptr<_221d8b043_IdentTypeDecl>& _68830_decl) {
	if ((!(_2300b54e5_is_prim(_68830_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_68830_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_68830_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_68830_decl->_field_ident)}));
		return nullptr;
	}
	return _2300b54e5_build_prim_type(_68830_decl->_field_ident);
}



inline void _2300b54e5_TypeChecker::_method_push_cycle_error(jule::Any _70231_def1,jule::Any _70242_def2,jule::Str& _70258_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _70513_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70529_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70529_def };
			if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_TypeAlias>>())) { goto _case_end_4692785248; }
			_case_begin_4692785248:;
			{
				return _70529_def.operator jule::Ptr<_2300b54e5_TypeAlias>()->_field_ident;
			}
			goto _match_end_4692783712;
			_case_end_4692785248:;
			if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4692785440; }
			_case_begin_4692785440:;
			{
				return _70529_def.operator jule::Ptr<_2398d04dc_Struct>()->_field_ident;
			}
			goto _match_end_4692783712;
			_case_end_4692785440:;
			if (!(_match_expr.type_is<jule::Ptr<_23001604a_Enum>>())) { goto _case_end_4692785536; }
			_case_begin_4692785536:;
			{
				return _70529_def.operator jule::Ptr<_23001604a_Enum>()->_field_ident;
			}
			goto _match_end_4692783712;
			_case_end_4692785536:;
			_case_begin_4692783520:;
			{
				return jule::Str();
			}
			goto _match_end_4692783712;
			_case_end_4692783520:;
			_match_end_4692783712:;
		}
	});
	jule::Str _71413_def1_ident = _70513_get_ident(_70231_def1);
	jule::Str _71513_def2_ident = _70513_get_ident(_70242_def2);
	jule::Str _71613_refers_to = _23886c227_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_71413_def1_ident),jule::Any(_71513_def2_ident)}));
	_70258_message=((_221db702a_str_repeat(jule::Str(" ", 1),4LL) + _71613_refers_to) + jule::Str("\n", 1)) + _70258_message;
}



inline jule::Bool _2300b54e5_TypeChecker::_method_check_cross_cycle(jule::Any _72032_decl,jule::Str& _72048_message) {
	{
		auto &_match_expr{ _72032_decl };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_TypeAlias>>())) { goto _case_end_4692794864; }
		_case_begin_4692794864:;
		{
			jule::Ptr<_2300b54e5_TypeAlias> _72317_ta = _72032_decl.operator jule::Ptr<_2300b54e5_TypeAlias>();
			{
				auto &expr = _72317_ta->_field_refers;
				auto it = expr.begin();
				_iter_begin_4692798304:;
				if (it != expr.end()) {
					jule::Any &_2300b54e5_d = *it;
					{
						if (_2300b54e5_d == (*this)._field_referencer->_field_owner) {
							(*this)._method_push_cycle_error(jule::Any(_72317_ta),_2300b54e5_d,_72048_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(_2300b54e5_d,_72048_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_72317_ta),_2300b54e5_d,_72048_message);
							return false;
						}
					}
					_iter_next_4692798304:;
					++it;
					goto _iter_begin_4692798304;
				}
				_iter_end_4692798304:;
			}
		}
		goto _match_end_4692794960;
		_case_end_4692794864:;
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4692795280; }
		_case_begin_4692795280:;
		{
			jule::Ptr<_2398d04dc_Struct> _73717_s = _72032_decl.operator jule::Ptr<_2398d04dc_Struct>();
			{
				auto &expr = _73717_s->_field_depends;
				auto it = expr.begin();
				_iter_begin_4692805488:;
				if (it != expr.end()) {
					jule::Ptr<_2398d04dc_Struct> &_2300b54e5_d = *it;
					{
						if ((*this)._field_referencer->_field_owner == _2300b54e5_d) {
							(*this)._method_push_cycle_error(jule::Any(_73717_s),jule::Any(_2300b54e5_d),_72048_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(jule::Any(_2300b54e5_d),_72048_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_73717_s),jule::Any(_2300b54e5_d),_72048_message);
							return false;
						}
					}
					_iter_next_4692805488:;
					++it;
					goto _iter_begin_4692805488;
				}
				_iter_end_4692805488:;
			}
		}
		goto _match_end_4692794960;
		_case_end_4692795280:;
		_match_end_4692794960:;
	}
	return true;
}



inline jule::Bool _2300b54e5_TypeChecker::_method_check_illegal_cycles(jule::Ptr<_221d8b043_IdentTypeDecl>& _75840_ident,jule::Any _75867_decl) {
	jule::Bool _75880_ok = jule::Bool();
	if ((*this)._field_referencer == nullptr) {
		_75880_ok = true;
		return _75880_ok;
	}
	{
		auto &_match_expr{ _75867_decl };
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4692815488; }
		_case_begin_4692815488:;
		{
			if ((*this)._field_not_plain) {
				_75880_ok = true;
				return _75880_ok;
			}
		}
		goto _match_end_4692815872;
		_case_end_4692815488:;
		_match_end_4692815872:;
	}
	if (_75867_decl == (*this)._field_referencer->_field_owner) {
		(*this)._method_push_err(_75840_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_75880_ok = false;
		return _75880_ok;
	}
	jule::Str _77717_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_75867_decl,_77717_message)))) {
		jule::Str _78021_err_msg = _77717_message;
		_77717_message=jule::Str();
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_75867_decl,_77717_message);
		_78021_err_msg=_78021_err_msg + _77717_message;
		(*this)._method_push_err(_75840_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_78021_err_msg)}));
		_75880_ok = false;
		return _75880_ok;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_TypeAlias>>())) { goto _case_end_4692826448; }
		_case_begin_4692826448:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_75867_decl}));
			}
		}
		goto _match_end_4692826800;
		_case_end_4692826448:;
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4692821120; }
		_case_begin_4692821120:;
		{
			{
				auto &_match_expr{ _75867_decl };
				if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4692829472; }
				_case_begin_4692829472:;
				{
					jule::Ptr<_2398d04dc_Struct> _79525_s = (*this)._field_referencer->_field_owner.operator jule::Ptr<_2398d04dc_Struct>();
					_79525_s->_field_depends = jule::alloc_for_append(_79525_s->_field_depends,1);_79525_s->_field_depends.push(_75867_decl.operator jule::Ptr<_2398d04dc_Struct>());
				}
				goto _match_end_4692832032;
				_case_end_4692829472:;
				_match_end_4692832032:;
			}
		}
		goto _match_end_4692826800;
		_case_end_4692821120:;
		_match_end_4692826800:;
	}
	_75880_ok = true;
	return _75880_ok;
}



inline jule::Trait<_2300b54e5_Kind> _2300b54e5_TypeChecker::_method_from_type_alias(jule::Ptr<_221d8b043_IdentTypeDecl>& _80335_decl,jule::Ptr<_2300b54e5_TypeAlias>& _80362_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_80362_ta->_field_public,_80362_ta->_field_token)))) {
		(*this)._method_push_err(_80335_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_80335_decl->_field_ident)}));
		return nullptr;
	}
	_80362_ta->_field_used=true;
	if (_80335_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_80335_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_80335_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _81617_ok = (*this)._method_check_illegal_cycles(_80335_decl,jule::Any(_80362_ta));
	if ((!(_81617_ok))) {
		return nullptr;
	}
	_81617_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_80362_ta,(*this)._field_lookup);
	if ((!(_81617_ok))) {
		return nullptr;
	}
	jule::Ptr<_2300b54e5_TypeKind> _82717_kind = _80362_ta->_field_kind->_field_kind->_method_clone();
	_82717_kind->_field_generic=_80362_ta->_field_generic;
	if (_80362_ta->_field_cpp_linked) {
		_82717_kind->_field_cpp_ident=_80362_ta->_field_ident;
	}
	return _82717_kind;
}



inline jule::Ptr<_23001604a_Enum> _2300b54e5_TypeChecker::_method_from_enum(jule::Ptr<_221d8b043_IdentTypeDecl>& _83729_decl,jule::Ptr<_23001604a_Enum>& _83756_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_83756_e->_field_public,_83756_e->_field_token)))) {
		(*this)._method_push_err(_83729_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_83729_decl->_field_ident)}));
		return nullptr;
	}
	if (_83729_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_83729_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_83729_decl->_field_ident)}));
		return nullptr;
	}
	return _83756_e;
}



inline jule::Bool _2300b54e5_TypeChecker::_method_check_struct_ins(jule::Ptr<_2398d04dc_StructIns>& _85140_ins,_2220dce43_Token& _85158_error_token) {
	jule::Bool _85180_ok = jule::Bool();
	if (_85140_ins->_field_checked) {
		_85180_ok = true;
		return _85180_ok;
	}
	_85140_ins->_field_checked=true;
	if (((*this)._field_referencer != nullptr) && ((*this)._field_referencer->_field_owner == _85140_ins->_field_decl)) {
		_85180_ok = true;
		return _85180_ok;
	}
	jule::Ptr<_2067a6b66_SymbolTable> _86517_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_86517_old_file);
	});
	jule::Ptr<_2067a6b66_SymbolTable> _86817_file = _21eee051d_find_file((*this)._field_s->_field_files,_85140_ins->_field_decl->_field_token._field_file);
	if (_86817_file != nullptr) {
		(*this)._field_s->_method_set_current_file(_86817_file);
	}
	jule::Ptr<_2300b54e5_Referencer> _87317_referencer = jule::new_struct<_2300b54e5_Referencer>(new( std::nothrow ) _2300b54e5_Referencer(_85140_ins->_field_decl->_field_ident,jule::Any(_85140_ins->_field_decl),nullptr));
	jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>> _87817_generics = jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>::alloc(0LL,static_cast<jule::I64>(_85140_ins->_field_generics.len()));
	{
		auto &expr = _85140_ins->_field_generics;
		auto it = expr.begin();
		_iter_begin_4692875968:;
		if (it != expr.end()) {
			jule::Int _2300b54e5_i = it - expr.begin();
			jule::Ptr<_2300b54e5_TypeKind> _2300b54e5_g = *it;
			{
				_87817_generics.push(jule::new_struct<_2300b54e5_TypeAlias>(new( std::nothrow ) _2300b54e5_TypeAlias(jule::Ptr<_221d8b043_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_2220dce43_Token(),_85140_ins->_field_decl->_field_generics[_2300b54e5_i]->_field_ident,jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),_2300b54e5_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_4692875968:;
			++it;
			_2300b54e5_i++;
			goto _iter_begin_4692875968;
		}
		_iter_end_4692875968:;
	}
	jule::Ptr<_2067a6b66_SymbolTable> _88817_old_sema_file = _85140_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_85140_ins->_field_decl->_field_sema->_method_set_current_file(_88817_old_sema_file);
	});
	_2300b54e5_TypeChecker _89117_tc = _2300b54e5_TypeChecker(_85140_ins->_field_decl->_field_sema,_85140_ins->_field_decl->_field_sema,_87317_referencer,_2220dce43_Token(),jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>(),_87817_generics,jule::Bool());
	{
		auto &expr = _85140_ins->_field_fields;
		auto it = expr.begin();
		_iter_begin_4692885904:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_FieldIns> _2300b54e5_field = *it;
			{
				jule::Ptr<_2300b54e5_TypeKind> _90021_kind = _89117_tc._method_check_decl(_2300b54e5_field->_field_decl->_field_kind->_field_decl);
				_85180_ok=_90021_kind != nullptr;
				if (((_85140_ins->_field_decl->_field_sema != nullptr) && ((*this)._field_s != _85140_ins->_field_decl->_field_sema)) && (_85140_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_85140_ins->_field_decl->_field_sema->_field_errors);
					_85140_ins->_field_decl->_field_sema->_field_errors=nullptr;
				}
				if ((!(_85180_ok))) {
					_85180_ok = false;
					return _85180_ok;
				}
				_2300b54e5_field->_field_kind=_90021_kind;
				if (_2300b54e5_field->_field_kind->_method_mutable()) {
					_85140_ins->_field_mutable=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_85140_ins);
				}
			}
			_iter_next_4692885904:;
			++it;
			goto _iter_begin_4692885904;
		}
		_iter_end_4692885904:;
	}
	if (_85140_ins->_field_generics.len() > 0LL) {
		{
			auto &expr = _85140_ins->_field_methods;
			auto it = expr.begin();
			_iter_begin_4692871200:;
			if (it != expr.end()) {
				jule::Ptr<_222edb48e_Fn> _2300b54e5_m = *it;
				{
					(*this)._field_s->_method_check_type_method(_85140_ins,_2300b54e5_m);
				}
				_iter_next_4692871200:;
				++it;
				goto _iter_begin_4692871200;
			}
			_iter_end_4692871200:;
		}
	}
	_85180_ok = true;
	return _85180_ok;
}



inline void _2300b54e5_TypeChecker::_method_append_used_struct_reference(jule::Ptr<_2398d04dc_Struct>& _92852_s) {
	if ((*this)._field_referencer == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4692902384; }
		_case_begin_4692902384:;
		{
			jule::Ptr<_2398d04dc_Struct> _93521_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ptr<_2398d04dc_Struct>();
			if ((!(_93521_ref_s->_method_is_uses(_92852_s)))) {
				_93521_ref_s->_field_uses = jule::alloc_for_append(_93521_ref_s->_field_uses,1);_93521_ref_s->_field_uses.push(_92852_s);
			}
		}
		goto _match_end_4692903136;
		_case_end_4692902384:;
		_match_end_4692903136:;
	}
}



inline jule::Ptr<_2398d04dc_StructIns> _2300b54e5_TypeChecker::_method_from_struct(jule::Ptr<_221d8b043_IdentTypeDecl>& _94235_decl,jule::Ptr<_2398d04dc_Struct>& _94262_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_94262_s->_field_public,_94262_s->_field_token)))) {
		(*this)._method_push_err(_94235_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_94235_decl->_field_ident)}));
		return nullptr;
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return nullptr;
	}
	jule::Bool _95317_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_94235_decl,jule::Any(_94262_s));
	if ((!(_95317_ok))) {
		return nullptr;
	}
	(*this)._method_append_used_struct_reference(_94262_s);
	jule::Ptr<_2398d04dc_StructIns> _95917_ins = _94262_s->_method_instance();
	_95917_ins->_field_generics=jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_94235_decl->_field_generics.len()));
	jule::Ptr<_2300b54e5_Referencer> _96117_referencer = (*this)._field_referencer;
	(*this)._field_referencer=nullptr;
	{
		auto &expr = _94235_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4692922432:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_TypeDecl> _2300b54e5_g = *it;
			{
				jule::Ptr<_2300b54e5_TypeKind> _96421_kind = (*this)._method_build(_2300b54e5_g->_field_kind);
				if (_96421_kind == nullptr) {
					_95317_ok=false;
					goto _iter_next_4692922432;
				}
				_95917_ins->_field_generics = jule::alloc_for_append(_95917_ins->_field_generics,1);_95917_ins->_field_generics.push(_96421_kind);
			}
			_iter_next_4692922432:;
			++it;
			goto _iter_begin_4692922432;
		}
		_iter_end_4692922432:;
	}
	(*this)._field_referencer=_96117_referencer;
	if ((!(_95317_ok))) {
		return nullptr;
	}
	_95317_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_95917_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_95917_ins->_field_generics.len()),_94235_decl->_field_token);
	if ((!(_95317_ok))) {
		return nullptr;
	}
	jule::Ptr<_2398d04dc_StructIns> _98317_exist_instance = _94262_s->_method_append_instance(_95917_ins);
	if (_98317_exist_instance != nullptr) {
		return _98317_exist_instance;
	}
	_95317_ok=(*this)._method_check_struct_ins(_95917_ins,_94235_decl->_field_token);
	if ((!(_95317_ok))) {
		return nullptr;
	}
	return _95917_ins;
}



inline jule::Trait<_2300b54e5_Kind> _2300b54e5_TypeChecker::_method_get_def(jule::Ptr<_221d8b043_IdentTypeDecl>& _99831_decl) {
	{
		auto &expr = (*this)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_4692937744:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_GenericDecl> &_2300b54e5_g = *it;
			{
				if (_2300b54e5_g->_field_ident == _99831_decl->_field_ident) {
					return _2300b54e5_build_prim_type(_2300b54e5_g->_field_ident);
				}
			}
			_iter_next_4692937744:;
			++it;
			goto _iter_begin_4692937744;
		}
		_iter_end_4692937744:;
	}
	{
		auto &expr = (*this)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_4692939136:;
		if (it != expr.end()) {
			jule::Ptr<_2300b54e5_TypeAlias> _2300b54e5_g = *it;
			{
				if (_2300b54e5_g->_field_ident == _99831_decl->_field_ident) {
					jule::Ptr<_2398d04dc_StructIns> _100725_st = _2300b54e5_g->_field_kind->_field_kind->_method_strct();
					if (_100725_st != nullptr) {
						jule::Bool _100925_ok = (*this)._method_check_illegal_cycles(_99831_decl,jule::Any(_100725_st->_field_decl));
						if ((!(_100925_ok))) {
							return nullptr;
						}
					}
					return _2300b54e5_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_4692939136:;
			++it;
			goto _iter_begin_4692939136;
		}
		_iter_end_4692939136:;
	}
	if ((!(_99831_decl->_field_cpp_linked))) {
		jule::Ptr<_23001604a_Enum> _101921_e = (*this)._field_lookup.get()._method_find_enum(_99831_decl->_field_ident);
		if (_101921_e != nullptr) {
			return (*this)._method_from_enum(_99831_decl,_101921_e);
		}
		jule::Ptr<_2300167cb_Trait> _102421_t = (*this)._field_lookup.get()._method_find_trait(_99831_decl->_field_ident);
		if (_102421_t == nullptr) {
			_102421_t=_206d53311_find_builtin_trait(_99831_decl->_field_ident);
		}
		if (_102421_t != nullptr) {
			if ((!((*this)._field_s->_method_is_accessible_define(_102421_t->_field_public,_102421_t->_field_token)))) {
				(*this)._method_push_err(_99831_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_99831_decl->_field_ident)}));
				return nullptr;
			}
			if (_99831_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_99831_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_99831_decl->_field_ident)}));
				return nullptr;
			}
			return _102421_t;
		}
	}
	jule::Ptr<_2398d04dc_Struct> _104217_s = (*this)._field_lookup.get()._method_find_struct(_99831_decl->_field_ident,_99831_decl->_field_cpp_linked);
	if (_104217_s != nullptr) {
		return (*this)._method_from_struct(_99831_decl,_104217_s);
	}
	jule::Ptr<_2300b54e5_TypeAlias> _104717_ta = (*this)._field_lookup.get()._method_find_type_alias(_99831_decl->_field_ident,_99831_decl->_field_cpp_linked);
	if (_104717_ta == nullptr) {
		_104717_ta=_206d53311_find_builtin_type_alias(_99831_decl->_field_ident);
	}
	if (_104717_ta != nullptr) {
		return (*this)._method_from_type_alias(_99831_decl,_104717_ta);
	}
	(*this)._method_push_err(_99831_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_99831_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_2300b54e5_Kind> _2300b54e5_TypeChecker::_method_build_ident(jule::Ptr<_221d8b043_IdentTypeDecl> _105934_decl) {
	{
		if (!((_2300b54e5_is_prim(_105934_decl->_field_ident)))) { goto _case_end_4692973536; }
		_case_begin_4692973536:;
		{
			return (*this)._method_build_prim(_105934_decl);
		}
		goto _match_end_4692971984;
		_case_end_4692973536:;
		_case_begin_4692972160:;
		{
			return (*this)._method_get_def(_105934_decl);
		}
		goto _match_end_4692971984;
		_case_end_4692972160:;
		_match_end_4692971984:;
	}
}



inline jule::Ptr<_2300b54e5_Sptr> _2300b54e5_TypeChecker::_method_build_sptr_from_type(jule::Ptr<_2300b54e5_TypeKind>& _106644_elem) {
	{
		if (!((_106644_elem == nullptr))) { goto _case_end_4692976512; }
		_case_begin_4692976512:;
		{
			return nullptr;
		}
		goto _match_end_4692976272;
		_case_end_4692976512:;
		if (!((_106644_elem->_method_strct() != nullptr))) { goto _case_end_4692976624; }
		_case_begin_4692976624:;
		{
			jule::Ptr<_2398d04dc_StructIns> _107317_s = _106644_elem->_method_strct();
			if ((_107317_s->_field_decl != nullptr) && _107317_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		goto _match_end_4692976272;
		_case_end_4692976624:;
		if (!(((_106644_elem->_method_arr() != nullptr) && _106644_elem->_method_arr()->_field_auto))) { goto _case_end_4692976736; }
		_case_begin_4692976736:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4692976272;
		_case_end_4692976736:;
		_match_end_4692976272:;
	}
	return jule::new_struct_ptr<_2300b54e5_Sptr>(new( std::nothrow ) _2300b54e5_Sptr(_106644_elem));
}



inline jule::Ptr<_2300b54e5_Sptr> _2300b54e5_TypeChecker::_method_build_sptr(jule::Ptr<_221d8b043_SptrTypeDecl> _108933_decl) {
	jule::Bool _109013_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_109013_not_plain;
	});
	jule::Ptr<_2300b54e5_TypeKind> _109417_elem = (*this)._method_check_decl(_108933_decl->_field_elem);
	return (*this)._method_build_sptr_from_type(_109417_elem);
}



inline jule::Ptr<_2300b54e5_Ptr> _2300b54e5_TypeChecker::_method_build_ptr_from_type(jule::Ptr<_2300b54e5_TypeKind>& _109843_elem) {
	{
		if (!((_109843_elem == nullptr))) { goto _case_end_4692993792; }
		_case_begin_4692993792:;
		{
			return nullptr;
		}
		goto _match_end_4692993568;
		_case_end_4692993792:;
		if (!(((_109843_elem->_method_arr() != nullptr) && _109843_elem->_method_arr()->_field_auto))) { goto _case_end_4692993904; }
		_case_begin_4692993904:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
			return jule::new_ptr<_2300b54e5_Ptr>();
		}
		goto _match_end_4692993568;
		_case_end_4692993904:;
		_match_end_4692993568:;
	}
	return jule::new_struct_ptr<_2300b54e5_Ptr>(new( std::nothrow ) _2300b54e5_Ptr(_109843_elem));
}



inline jule::Ptr<_2300b54e5_Ptr> _2300b54e5_TypeChecker::_method_build_ptr(jule::Ptr<_221d8b043_PtrTypeDecl> _111432_decl) {
	jule::Bool _111513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_111513_not_plain;
	});
	jule::Ptr<_2300b54e5_TypeKind> _111917_elem = nullptr;
	if ((!(_111432_decl->_method_is_unsafe()))) {
		_111917_elem=(*this)._method_check_decl(_111432_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_111917_elem);
	}
	return jule::new_struct_ptr<_2300b54e5_Ptr>(new( std::nothrow ) _2300b54e5_Ptr(_111917_elem));
}



inline jule::Ptr<_2300b54e5_Slc> _2300b54e5_TypeChecker::_method_build_slc(jule::Ptr<_221d8b043_SlcTypeDecl> _113132_decl) {
	jule::Bool _113213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_113213_not_plain;
	});
	jule::Ptr<_2300b54e5_TypeKind> _113617_elem = (*this)._method_check_decl(_113132_decl->_field_elem);
	{
		if (!((_113617_elem == nullptr))) { goto _case_end_4693012816; }
		_case_begin_4693012816:;
		{
			return nullptr;
		}
		goto _match_end_4693012688;
		_case_end_4693012816:;
		if (!(((_113617_elem->_method_arr() != nullptr) && _113617_elem->_method_arr()->_field_auto))) { goto _case_end_4693012912; }
		_case_begin_4693012912:;
		{
			(*this)._method_push_err(_113132_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4693012688;
		_case_end_4693012912:;
		_match_end_4693012688:;
	}
	return jule::new_struct_ptr<_2300b54e5_Slc>(new( std::nothrow ) _2300b54e5_Slc(_113617_elem));
}



inline jule::Ptr<_2300b54e5_Arr> _2300b54e5_TypeChecker::_method_build_arr(jule::Ptr<_221d8b043_ArrTypeDecl> _115332_decl) {
	jule::Bool _115413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_115413_not_plain;
	});
	jule::Int _115817_n = 0LL;
	if ((!(_115332_decl->_method_auto_sized()))) {
		jule::Ptr<_20683ebaa_Data> _116121_size = (*this)._field_s->_method_eval((*this)._field_lookup)->_method_eval_expr(_115332_decl->_field_size);
		if (_116121_size == nullptr) {
			return nullptr;
		}
		if ((!(_116121_size->_method_is_const()))) {
			(*this)._method_push_err(_115332_decl->_field_size->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_116121_size->_field_kind->_method_prim() == nullptr) || (!(_206ec1e1e_is_int(_116121_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_115332_decl->_field_size->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		}
		_115817_n=static_cast<jule::Int>(_116121_size->_field_constant->_method_as_i64());
		if (_115817_n < 0LL) {
			(*this)._method_push_err(_115332_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	jule::Ptr<_2300b54e5_TypeKind> _118117_elem = (*this)._method_check_decl(_115332_decl->_field_elem);
	{
		if (!((_118117_elem == nullptr))) { goto _case_end_4693022528; }
		_case_begin_4693022528:;
		{
			return nullptr;
		}
		goto _match_end_4693029968;
		_case_end_4693022528:;
		if (!(((_118117_elem->_method_arr() != nullptr) && _118117_elem->_method_arr()->_field_auto))) { goto _case_end_4693037840; }
		_case_begin_4693037840:;
		{
			(*this)._method_push_err(_115332_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4693029968;
		_case_end_4693037840:;
		_match_end_4693029968:;
	}
	return jule::new_struct_ptr<_2300b54e5_Arr>(new( std::nothrow ) _2300b54e5_Arr(_115332_decl->_method_auto_sized(),_115817_n,_118117_elem));
}



inline jule::Ptr<_2300b54e5_Map> _2300b54e5_TypeChecker::_method_build_map(jule::Ptr<_221d8b043_MapTypeDecl> _120032_decl) {
	jule::Bool _120113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_120113_not_plain;
	});
	jule::Ptr<_2300b54e5_TypeKind> _120517_key = (*this)._method_check_decl(_120032_decl->_field_key);
	if (_120517_key == nullptr) {
		return nullptr;
	}
	jule::Ptr<_2300b54e5_TypeKind> _121017_val = (*this)._method_check_decl(_120032_decl->_field_val);
	if (_121017_val == nullptr) {
		return nullptr;
	}
	if (_121017_val->_method_enm() != nullptr) {
		(*this)._method_push_err(_120032_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	}
	return jule::new_struct_ptr<_2300b54e5_Map>(new( std::nothrow ) _2300b54e5_Map(_120517_key,_121017_val));
}



inline jule::Ptr<_2300b54e5_Tuple> _2300b54e5_TypeChecker::_method_build_tuple(jule::Ptr<_221d8b043_TupleTypeDecl> _122434_decl) {
	jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> _122517_types = jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_122434_decl->_field_types.len()));
	{
		auto &expr = _122434_decl->_field_types;
		auto it = expr.begin();
		_iter_begin_4693057936:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_TypeDecl> _2300b54e5_t = *it;
			{
				jule::Ptr<_2300b54e5_TypeKind> _122721_kind = (*this)._method_check_decl(_2300b54e5_t);
				if (_122721_kind == nullptr) {
					return nullptr;
				}
				_122517_types.push(_122721_kind);
			}
			_iter_next_4693057936:;
			++it;
			goto _iter_begin_4693057936;
		}
		_iter_end_4693057936:;
	}
	return jule::new_struct_ptr<_2300b54e5_Tuple>(new( std::nothrow ) _2300b54e5_Tuple(_122517_types));
}



inline jule::Bool _2300b54e5_TypeChecker::_method_check_fn_types(jule::Ptr<_222edb48e_FnIns>& _123738_f) {
	jule::Bool _123751_ok = jule::Bool();
	{
		auto &expr = _123738_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4693065792:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_ParamIns> _2300b54e5_p = *it;
			{
				_2300b54e5_p->_field_kind=(*this)._method_build(_2300b54e5_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_123751_ok=_2300b54e5_p->_field_kind != nullptr;
				if ((!(_123751_ok))) {
					_123751_ok = false;
					return _123751_ok;
				}
			}
			_iter_next_4693065792:;
			++it;
			goto _iter_begin_4693065792;
		}
		_iter_end_4693065792:;
	}
	if ((!(_123738_f->_field_decl->_method_is_void()))) {
		_123738_f->_field_result=(*this)._method_build(_123738_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_123751_ok = _123738_f->_field_result != nullptr;
		return _123751_ok;
	}
	_123751_ok = true;
	return _123751_ok;
}



inline jule::Ptr<_222edb48e_FnIns> _2300b54e5_TypeChecker::_method_build_fn(jule::Ptr<_221d8b043_FnDecl> _125431_decl) {
	if (_125431_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_125431_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_222edb48e_Fn> _126017_f = _221db702a_build_fn(_125431_decl);
	jule::Ptr<_222edb48e_FnIns> _126117_ins = _126017_f->_method_instance_force();
	_126117_ins->_field_anon=true;
	jule::Bool _126413_ok = (*this)._method_check_fn_types(_126117_ins);
	if ((!(_126413_ok))) {
		return nullptr;
	}
	return _126117_ins;
}



inline jule::Trait<_2300b54e5_Kind> _2300b54e5_TypeChecker::_method_build_by_namespace(jule::Ptr<_221d8b043_NamespaceTypeDecl> _127241_decl) {
	jule::Str _127313_path = _2300b54e5_build_link_path_by_tokens(_127241_decl->_field_idents);
	jule::Ptr<_2200229c3_ImportInfo> _127417_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_2200229c3_ImportInfo>)>([=](jule::Ptr<_2200229c3_ImportInfo> _127453_imp) mutable -> jule::Bool {
		if ((_127241_decl->_field_idents.len() == 1LL) && (_127453_imp->_field_alias == _127313_path)) {
			return true;
		}
		return _127453_imp->_field_link_path == _127313_path;
	}));
	if ((_127417_imp == nullptr) || (!(_127417_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_127241_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_127313_path)}));
		return nullptr;
	}
	jule::Trait<_206c9641e_Lookup> _128617_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_127417_imp;
	jule::Trait<_2300b54e5_Kind> _128917_kind = (*this)._method_build_ident(_127241_decl->_field_kind);
	(*this)._field_lookup=_128617_lookup;
	return _128917_kind;
}



inline jule::Ptr<_2300b54e5_TypeKind> _2300b54e5_TypeChecker::_method_build(jule::Any& _129629_decl_kind) {
	jule::Trait<_2300b54e5_Kind> _129717_kind = nullptr;
	{
		auto &_match_expr{ _129629_decl_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_TypeKind>>())) { goto _case_end_4693100240; }
		_case_begin_4693100240:;
		{
			_129717_kind=_129629_decl_kind.operator jule::Ptr<_2300b54e5_TypeKind>();
		}
		goto _match_end_4693100160;
		_case_end_4693100240:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_IdentTypeDecl>>())) { goto _case_end_4693102608; }
		_case_begin_4693102608:;
		{
			jule::Trait<_2300b54e5_Kind> _130421_t = (*this)._method_build_ident(_129629_decl_kind.operator jule::Ptr<_221d8b043_IdentTypeDecl>());
			if (_130421_t != nullptr) {
				_129717_kind=_130421_t;
			}
		}
		goto _match_end_4693100160;
		_case_end_4693102608:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_SptrTypeDecl>>())) { goto _case_end_4693102352; }
		_case_begin_4693102352:;
		{
			jule::Ptr<_2300b54e5_Sptr> _131021_t = (*this)._method_build_sptr(_129629_decl_kind.operator jule::Ptr<_221d8b043_SptrTypeDecl>());
			if (_131021_t != nullptr) {
				_129717_kind=_131021_t;
			}
		}
		goto _match_end_4693100160;
		_case_end_4693102352:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_PtrTypeDecl>>())) { goto _case_end_4693102448; }
		_case_begin_4693102448:;
		{
			jule::Ptr<_2300b54e5_Ptr> _131621_t = (*this)._method_build_ptr(_129629_decl_kind.operator jule::Ptr<_221d8b043_PtrTypeDecl>());
			if (_131621_t != nullptr) {
				_129717_kind=_131621_t;
			}
		}
		goto _match_end_4693100160;
		_case_end_4693102448:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_SlcTypeDecl>>())) { goto _case_end_4693100608; }
		_case_begin_4693100608:;
		{
			jule::Ptr<_2300b54e5_Slc> _132221_t = (*this)._method_build_slc(_129629_decl_kind.operator jule::Ptr<_221d8b043_SlcTypeDecl>());
			if (_132221_t != nullptr) {
				_129717_kind=_132221_t;
			}
		}
		goto _match_end_4693100160;
		_case_end_4693100608:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_ArrTypeDecl>>())) { goto _case_end_4693100704; }
		_case_begin_4693100704:;
		{
			jule::Ptr<_2300b54e5_Arr> _132821_t = (*this)._method_build_arr(_129629_decl_kind.operator jule::Ptr<_221d8b043_ArrTypeDecl>());
			if (_132821_t != nullptr) {
				_129717_kind=_132821_t;
			}
		}
		goto _match_end_4693100160;
		_case_end_4693100704:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_MapTypeDecl>>())) { goto _case_end_4693100800; }
		_case_begin_4693100800:;
		{
			jule::Ptr<_2300b54e5_Map> _133421_t = (*this)._method_build_map(_129629_decl_kind.operator jule::Ptr<_221d8b043_MapTypeDecl>());
			if (_133421_t != nullptr) {
				_129717_kind=_133421_t;
			}
		}
		goto _match_end_4693100160;
		_case_end_4693100800:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TupleTypeDecl>>())) { goto _case_end_4693100896; }
		_case_begin_4693100896:;
		{
			jule::Ptr<_2300b54e5_Tuple> _134021_t = (*this)._method_build_tuple(_129629_decl_kind.operator jule::Ptr<_221d8b043_TupleTypeDecl>());
			if (_134021_t != nullptr) {
				_129717_kind=_134021_t;
			}
		}
		goto _match_end_4693100160;
		_case_end_4693100896:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FnDecl>>())) { goto _case_end_4693103024; }
		_case_begin_4693103024:;
		{
			jule::Ptr<_222edb48e_FnIns> _134621_t = (*this)._method_build_fn(_129629_decl_kind.operator jule::Ptr<_221d8b043_FnDecl>());
			if (_134621_t != nullptr) {
				_129717_kind=_134621_t;
			}
		}
		goto _match_end_4693100160;
		_case_end_4693103024:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_NamespaceTypeDecl>>())) { goto _case_end_4693103120; }
		_case_begin_4693103120:;
		{
			jule::Trait<_2300b54e5_Kind> _135221_t = (*this)._method_build_by_namespace(_129629_decl_kind.operator jule::Ptr<_221d8b043_NamespaceTypeDecl>());
			if (_135221_t != nullptr) {
				_129717_kind=_135221_t;
			}
		}
		goto _match_end_4693100160;
		_case_end_4693103120:;
		_case_begin_4693099504:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
			return nullptr;
		}
		goto _match_end_4693100160;
		_case_end_4693099504:;
		_match_end_4693100160:;
	}
	if (_129717_kind == nullptr) {
		return nullptr;
	}
	{
		auto &_match_expr{ _129717_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_TypeKind>>())) { goto _case_end_4693132736; }
		_case_begin_4693132736:;
		{
			return _129717_kind.operator jule::Ptr<_2300b54e5_TypeKind>();
		}
		goto _match_end_4693130960;
		_case_end_4693132736:;
		_case_begin_4693131072:;
		{
			return jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_129717_kind));
		}
		goto _match_end_4693130960;
		_case_end_4693131072:;
		_match_end_4693130960:;
	}
}



inline jule::Ptr<_2300b54e5_TypeKind> _2300b54e5_TypeChecker::_method_check_decl(jule::Ptr<_221d8b043_TypeDecl>& _137734_decl) {
	_2220dce43_Token _137917_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_137734_decl->_field_token;
	jule::Ptr<_2300b54e5_TypeKind> _138217_kind = (*this)._method_build(_137734_decl->_field_kind);
	(*this)._field_error_token=_137917_error_token;
	return _138217_kind;
}



inline void _2300b54e5_TypeChecker::_method_check(jule::Ptr<_2300b54e5_TypeSymbol>& _138829_t) {
	if (_138829_t->_field_decl == nullptr) {
		return;
	}
	jule::Ptr<_2300b54e5_TypeKind> _139317_kind = (*this)._method_check_decl(_138829_t->_field_decl);
	if (_139317_kind == nullptr) {
		_138829_t->_method_remove_kind();
		return;
	}
	_138829_t->_field_kind=_139317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300b54e5_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_239823e36_IR>,jule::Slice<_23886c227_Log>> _239823e36_IR::_static_method_build(jule::Str _2525_path,jule::Int _2536_flags) {
	jule::Ptr<_221c9ee02_PlainImporter> _2617_importer = jule::new_struct<_221c9ee02_PlainImporter>(new( std::nothrow ) _221c9ee02_PlainImporter());
	jule::Slice<jule::Ptr<_221d8c242_Ast>> _2718_files;
	jule::Slice<_23886c227_Log> _2729_logs;
	std::tie(_2718_files,_2729_logs) = _2617_importer->_method_import_package(_2525_path);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_2729_logs);
	}
	if (_2718_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_2200229c3_Package> _3618_pkg;
	std::tie(_3618_pkg,_2729_logs) = _206d3c383_analyze_package(_2718_files,_2617_importer,_2536_flags);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_2729_logs);
	}
	jule::Ptr<_239823e36_IR> _4117_ir = jule::new_struct<_239823e36_IR>(new( std::nothrow ) _239823e36_IR(jule::Slice<jule::Str>(),_3618_pkg,_2617_importer->_field_all_packages,_2219e5a9e_OrderedDefines()));
	_4117_ir->_field_passes=_239823e36_get_all_unique_passes(_4117_ir->_field_main,_4117_ir->_field_used);
	return std::make_tuple(_4117_ir,nullptr);
}



inline void _239823e36_IR::_method_append_structs(jule::Ptr<_2200229c3_Package>& _5234_p,jule::Slice<jule::Ptr<_2398d04dc_Struct>>& _5258_buffer) {
	{
		auto &expr = _5234_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4690273072:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _239823e36_f = *it;
			{
				{
					auto &expr = _239823e36_f->_field_structs;
					auto it = expr.begin();
					_iter_begin_4690274976:;
					if (it != expr.end()) {
						jule::Ptr<_2398d04dc_Struct> _239823e36_s = *it;
						{
							if ((!(_239823e36_s->_field_cpp_linked))) {
								_5258_buffer.push(_239823e36_s);
							}
						}
						_iter_next_4690274976:;
						++it;
						goto _iter_begin_4690274976;
					}
					_iter_end_4690274976:;
				}
			}
			_iter_next_4690273072:;
			++it;
			goto _iter_begin_4690273072;
		}
		_iter_end_4690273072:;
	}
}



inline jule::Slice<jule::Ptr<_2398d04dc_Struct>> _239823e36_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ptr<_2398d04dc_Struct>> _6517_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_6517_buffer);
	{
		auto &expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_4690279776:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _239823e36_u = *it;
			{
				if ((!(_239823e36_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_239823e36_u->_field_package,_6517_buffer);
				}
			}
			_iter_next_4690279776:;
			++it;
			goto _iter_begin_4690279776;
		}
		_iter_end_4690279776:;
	}
	return _6517_buffer;
}



inline void _239823e36_IR::_method_append_vars(jule::Ptr<_2200229c3_Package>& _7831_p,jule::Slice<jule::Ptr<_2200a2657_Var>>& _7855_buffer) {
	{
		auto &expr = _7831_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4693448176:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _239823e36_f = *it;
			{
				{
					auto &expr = _239823e36_f->_field_vars;
					auto it = expr.begin();
					_iter_begin_4693450080:;
					if (it != expr.end()) {
						jule::Ptr<_2200a2657_Var> _239823e36_v = *it;
						{
							if ((!(_239823e36_v->_field_cpp_linked)) && (!(_239823e36_v->_field_constant))) {
								_7855_buffer.push(_239823e36_v);
							}
						}
						_iter_next_4693450080:;
						++it;
						goto _iter_begin_4693450080;
					}
					_iter_end_4693450080:;
				}
			}
			_iter_next_4693448176:;
			++it;
			goto _iter_begin_4693448176;
		}
		_iter_end_4693448176:;
	}
}



inline jule::Slice<jule::Ptr<_2200a2657_Var>> _239823e36_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ptr<_2200a2657_Var>> _9117_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_9117_buffer);
	{
		auto &expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_4693455264:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _239823e36_u = *it;
			{
				if ((!(_239823e36_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_239823e36_u->_field_package,_9117_buffer);
				}
			}
			_iter_next_4693455264:;
			++it;
			goto _iter_begin_4693455264;
		}
		_iter_end_4693455264:;
	}
	return _9117_buffer;
}



inline void _239823e36_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	(*this)._field_ordered._field_globals=(*this)._method_get_all_variables();
	_2219e5a9e_DefineOrderer::_static_method_order_variables((*this)._field_ordered._field_globals);
	_2219e5a9e_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _239823e36_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _221d8b043_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _221d8b043_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2300254bb_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _221d8b043_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Int,jule::Bool> _1dccb6843_ArgParser::_method_parse_integer_0(jule::Str& _18732_s,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)> _18740_parser) {
	jule::Int _18784_x = jule::Int();
	jule::Bool _18790_ok = jule::Bool();
	{
		if (!((_18732_s == jule::Str()))) { goto _case_end_4695751392; }
		_case_begin_4695751392:;
		{
			_18784_x = 0LL;
			_18790_ok = false;
			return std::make_tuple(_18784_x,_18790_ok);
		}
		goto _match_end_4695750912;
		_case_end_4695751392:;
		if (!((_18732_s.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4695751488; }
		_case_begin_4695751488:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),16LL);
		}
		goto _match_end_4695750912;
		_case_end_4695751488:;
		if (!((_18732_s.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4695751584; }
		_case_begin_4695751584:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),2LL);
		}
		goto _match_end_4695750912;
		_case_end_4695751584:;
		if (!((_18732_s.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4695751680; }
		_case_begin_4695751680:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),8LL);
		}
		goto _match_end_4695750912;
		_case_end_4695751680:;
		if (!((_18732_s[0LL] == '0'))) { goto _case_end_4695753008; }
		_case_begin_4695753008:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(1LL),8LL);
		}
		goto _match_end_4695750912;
		_case_end_4695753008:;
		_case_begin_4695751088:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s,10LL);
		}
		goto _match_end_4695750912;
		_case_end_4695751088:;
		_match_end_4695750912:;
	}
	return std::make_tuple(_18784_x,_18790_ok);
}

inline std::tuple<jule::Uint,jule::Bool> _1dccb6843_ArgParser::_method_parse_integer_1(jule::Str& _18732_s,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)> _18740_parser) {
	jule::Uint _18784_x = jule::Uint();
	jule::Bool _18790_ok = jule::Bool();
	{
		if (!((_18732_s == jule::Str()))) { goto _case_end_4695781264; }
		_case_begin_4695781264:;
		{
			_18784_x = 0LL;
			_18790_ok = false;
			return std::make_tuple(_18784_x,_18790_ok);
		}
		goto _match_end_4695780784;
		_case_end_4695781264:;
		if (!((_18732_s.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4695781360; }
		_case_begin_4695781360:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),16LL);
		}
		goto _match_end_4695780784;
		_case_end_4695781360:;
		if (!((_18732_s.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4695781456; }
		_case_begin_4695781456:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),2LL);
		}
		goto _match_end_4695780784;
		_case_end_4695781456:;
		if (!((_18732_s.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4695781552; }
		_case_begin_4695781552:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),8LL);
		}
		goto _match_end_4695780784;
		_case_end_4695781552:;
		if (!((_18732_s[0LL] == '0'))) { goto _case_end_4695782880; }
		_case_begin_4695782880:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(1LL),8LL);
		}
		goto _match_end_4695780784;
		_case_end_4695782880:;
		_case_begin_4695780960:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s,10LL);
		}
		goto _match_end_4695780784;
		_case_end_4695780960:;
		_match_end_4695780784:;
	}
	return std::make_tuple(_18784_x,_18790_ok);
}



inline jule::Str _1dccb6843_ArgParser::_method_get_data(void) {
	if (((*this)._field_i + 1LL) >= (*this)._field_args.len()) {
		return jule::Str();
	}
	((*this)._field_i)++;
	return (*this)._field_args[(*this)._field_i];
}



inline void _1dccb6843_ArgParser::_method_process_flag(jule::Trait<_1dccb6843_CommonFlag>& _21836_flag) {
	{
		auto &_match_expr{ _21836_flag };
		if (!(_match_expr.type_is<jule::Ptr<_1dccb6843_Flag_3>>())) { goto _case_end_4695726544; }
		_case_begin_4695726544:;
		{
			jule::Ptr<_1dccb6843_Flag_3> _22121_bf = _21836_flag.operator jule::Ptr<_1dccb6843_Flag_3>();
			(*(_22121_bf->_field__data))=(!(_22121_bf->_field__default));
			return;
		}
		goto _match_end_4695726928;
		_case_end_4695726544:;
		_match_end_4695726928:;
	}
	jule::Str _22613_data = (*this)._method_get_data();
	if (_22613_data == jule::Str()) {
		(*this)._field_err=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression missing", 20);
		return;
	}
	{
		auto &_match_expr{ _21836_flag };
		if (!(_match_expr.type_is<jule::Ptr<_1dccb6843_Flag_0>>())) { goto _case_end_4695733216; }
		_case_begin_4695733216:;
		{
			jule::Ptr<_1dccb6843_Flag_0> _23421_intf = _21836_flag.operator jule::Ptr<_1dccb6843_Flag_0>();
			jule::Bool _23533_ok;
			std::tie((*(_23421_intf->_field__data)),_23533_ok) = (*this)._method_parse_integer_0(_22613_data,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _23572_s,jule::Int _23580_base) mutable -> std::tuple<jule::Int,jule::Bool> {
				jule::I64 _23622_x;
				jule::Int _23625_err;
				std::tie(_23622_x,_23625_err) = _2388cbb6b_parse_int(_23572_s,_23580_base,64LL);
				return std::make_tuple(_23622_x,_23625_err == 0LLU);
			}));
			if ((!(_23533_ok))) {
				(*this)._field_err=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid signed integer", 41);
			}
		}
		goto _match_end_4695733072;
		_case_end_4695733216:;
		if (!(_match_expr.type_is<jule::Ptr<_1dccb6843_Flag_1>>())) { goto _case_end_4695732048; }
		_case_begin_4695732048:;
		{
			jule::Ptr<_1dccb6843_Flag_1> _24421_uintf = _21836_flag.operator jule::Ptr<_1dccb6843_Flag_1>();
			jule::Bool _24534_ok;
			std::tie((*(_24421_uintf->_field__data)),_24534_ok) = (*this)._method_parse_integer_1(_22613_data,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _24574_s,jule::Int _24582_base) mutable -> std::tuple<jule::Uint,jule::Bool> {
				jule::U64 _24622_x;
				jule::Int _24625_err;
				std::tie(_24622_x,_24625_err) = _2388cbb6b_parse_uint(_24574_s,_24582_base,64LL);
				return std::make_tuple(_24622_x,_24625_err == 0LLU);
			}));
			if ((!(_24534_ok))) {
				(*this)._field_err=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid unsigned integer", 43);
			}
		}
		goto _match_end_4695733072;
		_case_end_4695732048:;
		if (!(_match_expr.type_is<jule::Ptr<_1dccb6843_Flag_2>>())) { goto _case_end_4695730944; }
		_case_begin_4695730944:;
		{
			jule::Ptr<_1dccb6843_Flag_2> _25421_ff = _21836_flag.operator jule::Ptr<_1dccb6843_Flag_2>();
			jule::Int _25531_err;
			std::tie((*(_25421_ff->_field__data)),_25531_err) = _2398a6c55_parse_float(_22613_data,64LL);
			if (_25531_err != 0LLU) {
				(*this)._field_err=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid floating-point", 41);
			}
		}
		goto _match_end_4695733072;
		_case_end_4695730944:;
		if (!(_match_expr.type_is<jule::Ptr<_1dccb6843_Flag_4>>())) { goto _case_end_4695731040; }
		_case_begin_4695731040:;
		{
			(*(_21836_flag.operator jule::Ptr<_1dccb6843_Flag_4>()->_field__data))=_22613_data;
		}
		goto _match_end_4695733072;
		_case_end_4695731040:;
		_match_end_4695733072:;
	}
}



inline void _1dccb6843_ArgParser::_method_single_dash(jule::Str& _26531_arg) {
	jule::Slice<jule::I32> _26613_rarg = static_cast<jule::Slice<jule::I32>>(_26531_arg).slice(1LL);
	{
		auto &expr = _26613_rarg;
		auto it = expr.begin();
		_iter_begin_4695802368:;
		if (it != expr.end()) {
			jule::I32 &_1dccb6843_r = *it;
			{
				jule::Trait<_1dccb6843_CommonFlag> _26821_flag = (*this)._field_set._method_find_flag_short(_1dccb6843_r);
				if (_26821_flag == nullptr) {
					(*this)._field_err=(_26531_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_1dccb6843_r);
					return;
				}
				(*this)._method_process_flag(_26821_flag);
			}
			_iter_next_4695802368:;
			++it;
			goto _iter_begin_4695802368;
		}
		_iter_end_4695802368:;
	}
}



inline void _1dccb6843_ArgParser::_method_double_dash(jule::Str& _27831_arg) {
	jule::Trait<_1dccb6843_CommonFlag> _27917_flag = (*this)._field_set._method_find_flag(_27831_arg.slice(2LL));
	if (_27917_flag == nullptr) {
		(*this)._field_err=_27831_arg + jule::Str(": flag is not exist", 19);
		return;
	}
	(*this)._method_process_flag(_27917_flag);
}



inline void _1dccb6843_ArgParser::_method_try_arg(void) {
	jule::Str _28913_arg = (*this)._field_args[(*this)._field_i];
	if ((*this)._field_args.len() == 0LL) {
		return;
	}
	if (_28913_arg[0LL] == '-') {
		if (((*this)._field_args.len() > 1LL) && (_28913_arg[1LL] == '-')) {
			(*this)._method_double_dash(_28913_arg);
			return;
		}
		(*this)._method_single_dash(_28913_arg);
		return;
	}
	(*this)._field_content = jule::alloc_for_append((*this)._field_content,1);(*this)._field_content.push(_28913_arg);
}



inline void _1dccb6843_ArgParser::_method_parse(void) {
	for (; (*this)._field_i < (*this)._field_args.len(); ((*this)._field_i)++) {
		{
			(*this)._method_try_arg();
			if ((*this)._field_err.len() != 0LL) {
				goto _iter_end_4695818576;
			}
		}
	_iter_next_4695818576:;
	}
	_iter_end_4695818576:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dccb6843_ArgParser &_Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "err:" << _Src._field_err << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2389b4e0d_free(void* _5124_ptr) {
	free(_5124_ptr);
}



inline jule::Str _238a38e4e_byte_ptr_to_str(jule::U8* _7431_s) {
	if (_7431_s == nullptr) {
		return jule::Str();
	}
	return __jule_str_from_byte_ptr(_7431_s);
}



inline jule::Int _2389b599c_get_last_errno(void) {
	return errno;
}



inline jule::Int _2389b68c1_stat(jule::U8* _4620_path,struct stat* _4637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_4620_path)),_4637_stat));
}



inline jule::Int _2389b68c1_open(jule::U8* _5120_path,jule::Int _5133_flag,jule::Int _5144_mode) {
	return static_cast<jule::Int>(open(((char*)(_5120_path)),_5133_flag,_5144_mode));
}



inline jule::U8* _2389b68c1_getcwd(jule::U8* _5722_buff,jule::Uint _5735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5722_buff)),_5735_bufflen)));
}



inline DIR* _2389b68c1_opendir(jule::U8* _6223_path) {
	return opendir(((char*)(_6223_path)));
}



inline struct dirent* _2389b68c1_readdir(DIR* _6527_dir) {
	return readdir(_6527_dir);
}



inline jule::Int _2389b68c1_closedir(DIR* _6828_dir) {
	return static_cast<jule::Int>(closedir(_6828_dir));
}



inline jule::Int _2389b68c1_mkdir(jule::U8* _7721_path,jule::Int _7734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_7721_path)),_7734_mode));
}



inline jule::Int _2389b68c1_rmdir(jule::U8* _8221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_8221_path))));
}



inline jule::Int _2389b68c1_unlink(jule::U8* _8522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_8522_path))));
}



inline jule::I64 _2389cd8e9_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _2389cd8e9_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _2389cd8e9_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _2389cd8e9_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _2389cd8e9_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline jule::Int _2389a07ab_get_last_os_error(void) {
	jule::Int _309_err = _2389b599c_get_last_errno();
	{
		auto &_match_expr{ _309_err };
		if (!(_match_expr == (13LL))) { goto _case_end_4663740992; }
		_case_begin_4663740992:;
		{
			return 0LLU;
		}
		goto _match_end_4663739888;
		_case_end_4663740992:;
		if (!(_match_expr == (5LL))) { goto _case_end_4663741088; }
		_case_begin_4663741088:;
		{
			return 1LLU;
		}
		goto _match_end_4663739888;
		_case_end_4663741088:;
		if (!(_match_expr == (40LL))) { goto _case_end_4663741184; }
		_case_begin_4663741184:;
		{
			return 2LLU;
		}
		goto _match_end_4663739888;
		_case_end_4663741184:;
		if (!(_match_expr == (36LL))) { goto _case_end_4663741568; }
		_case_begin_4663741568:;
		{
			return 3LLU;
		}
		goto _match_end_4663739888;
		_case_end_4663741568:;
		if (!(_match_expr == (2LL))) { goto _case_end_4663741664; }
		_case_begin_4663741664:;
		{
			return 4LLU;
		}
		goto _match_end_4663739888;
		_case_end_4663741664:;
		if (!(_match_expr == (20LL))) { goto _case_end_4663741760; }
		_case_begin_4663741760:;
		{
			return 5LLU;
		}
		goto _match_end_4663739888;
		_case_end_4663741760:;
		if (!(_match_expr == (12LL))) { goto _case_end_4663740384; }
		_case_begin_4663740384:;
		{
			return 6LLU;
		}
		goto _match_end_4663739888;
		_case_end_4663740384:;
		_case_begin_4663738960:;
		{
			return 1LLU;
		}
		goto _match_end_4663739888;
		_case_end_4663738960:;
		_match_end_4663739888:;
	}
}



inline jule::Slice<jule::Str> _2389a04e2_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _2389a04e2_working_dir(void) {
	return jule::Exceptional(jule::Any(),({
		auto except = _2389ab1e0___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _2389ab1e0___getwd(void) {
	jule::U8* _1113_buff = _2389b68c1_getcwd(nullptr,0LLU);
	if (_1113_buff == nullptr) {
		return jule::Exceptional<jule::Str>(_2389a07ab_get_last_os_error());
	}
	jule::Str _159_pwd = _238a38e4e_byte_ptr_to_str(_1113_buff);
	{
		_2389b4e0d_free(_1113_buff);
	}
	return jule::Exceptional(jule::Any(),_159_pwd);
}



inline jule::Str _23894b9cc_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _238949eb4_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(_1099_vol_len);
	if (_10718_path == jule::Str()) {
		if (((_1099_vol_len > 1LL) && _238949eb4_is_path_sep(_1089_original_path[0LL])) && _238949eb4_is_path_sep(_1089_original_path[1LL])) {
			return _23894b9cc_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _238949eb4_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_23894b9cc_LazyBuff _12613_out = _23894b9cc_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13114_r < _1259_n) {
		{
			{
				if (!((_238949eb4_is_path_sep(_10718_path[_13114_r])))) { goto _case_end_4663817264; }
				_case_begin_4663817264:;
				{
					(_13114_r)++;
				}
				goto _match_end_4663803904;
				_case_end_4663817264:;
				if (!(((_10718_path[_13114_r] == '.') && (((_13114_r + 1LL) == _1259_n) || _238949eb4_is_path_sep(_10718_path[_13114_r + 1LL]))))) { goto _case_end_4663813952; }
				_case_begin_4663813952:;
				{
					(_13114_r)++;
				}
				goto _match_end_4663803904;
				_case_end_4663813952:;
				if (!((((_10718_path[_13114_r] == '.') && (_10718_path[_13114_r + 1LL] == '.')) && (((_13114_r + 2LL) == _1259_n) || _238949eb4_is_path_sep(_10718_path[_13114_r + 2LL]))))) { goto _case_end_4663816992; }
				_case_begin_4663816992:;
				{
					_13114_r+=2LL;
					{
						if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_4663825024; }
						_case_begin_4663825024:;
						{
							(_12613_out._field_w)--;
							while ((_12613_out._field_w > _13121_dotdot) && (!(_238949eb4_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w)))))) {
								{
									(_12613_out._field_w)--;
								}
							_iter_next_4663827328:;
							}
							_iter_end_4663827328:;
						}
						goto _match_end_4663824832;
						_case_end_4663825024:;
						if (!(((!(_1189_rooted))))) { goto _case_end_4663825504; }
						_case_begin_4663825504:;
						{
							if (_12613_out._field_w > 0LL) {
								_12613_out._method_append(47LLU);
							}
							_12613_out._method_append('.');
							_12613_out._method_append('.');
							_13121_dotdot=_12613_out._field_w;
						}
						goto _match_end_4663824832;
						_case_end_4663825504:;
						_match_end_4663824832:;
					}
				}
				goto _match_end_4663803904;
				_case_end_4663816992:;
				_case_begin_4663804016:;
				{
					if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
						_12613_out._method_append(47LLU);
					}
					if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
						jule::Int _17425_i = _13114_r;
						for (; (_17425_i < _1259_n) && (!(_238949eb4_is_path_sep(_10718_path[_17425_i]))); (_17425_i)++) {
							{
								if (_10718_path[_17425_i] == ':') {
									_12613_out._method_append('.');
									_12613_out._method_append(47LLU);
									goto _iter_end_4663806272;
								}
							}
						_iter_next_4663806272:;
						}
						_iter_end_4663806272:;
					}
					for (; (_13114_r < _1259_n) && (!(_238949eb4_is_path_sep(_10718_path[_13114_r]))); (_13114_r)++) {
						{
							_12613_out._method_append(_10718_path[_13114_r]);
						}
					_iter_next_4663808384:;
					}
					_iter_end_4663808384:;
				}
				goto _match_end_4663803904;
				_case_end_4663804016:;
				_match_end_4663803904:;
			}
		}
	_iter_next_4663802544:;
	}
	_iter_end_4663802544:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _23894b9cc_from_slash(_12613_out._method_string());
}



inline jule::Str _23894b9cc_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _23894b9cc_join(jule::Slice<jule::Str> _22413_elem) {
	return _238949eb4___join(_22413_elem);
}



inline jule::Str _23894b9cc_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	for (; (_23013_i >= 0LL) && (!(_238949eb4_is_path_sep(_22912_path[_23013_i]))); (_23013_i)--) {
		{
			if (_22912_path[_23013_i] == '.') {
				return _22912_path.slice(_23013_i);
			}
		}
	_iter_next_4663837216:;
	}
	_iter_end_4663837216:;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _23894b9cc_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _238949eb4___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



inline jule::Str _23894b9cc_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str()) {
		return jule::Str(".", 1);
	}
	while ((_25317_path.len() > 0LL) && _238949eb4_is_path_sep(_25317_path[_25317_path.len() - 1LL])) {
		{
			_25317_path=_25317_path.slice(0LL,_25317_path.len() - 1LL);
		}
	_iter_next_4663852592:;
	}
	_iter_end_4663852592:;
	_25317_path=_25317_path.slice(_23894b9cc_volume_name(_25317_path).len());
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	while ((_26413_i >= 0LL) && (!(_238949eb4_is_path_sep(_25317_path[_26413_i])))) {
		{
			(_26413_i)--;
		}
	_iter_next_4663853888:;
	}
	_iter_end_4663853888:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(_26413_i + 1LL);
	}
	if (_25317_path == jule::Str()) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



inline jule::Str _23894b9cc_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _23894b9cc_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	while ((_28613_i >= _2859_vol.len()) && (!(_238949eb4_is_path_sep(_28412_path[_28613_i])))) {
		{
			(_28613_i)--;
		}
	_iter_next_4663831152:;
	}
	_iter_end_4663831152:;
	jule::Str _2909_dir = _23894b9cc_clean(_28412_path.slice(_2859_vol.len(),_28613_i + 1LL));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



inline jule::Str _23894b9cc_volume_name(jule::Str _30220_path) {
	return _23894b9cc_from_slash(_30220_path.slice(0LL,_238949eb4_volume_name_len(_30220_path)));
}



inline jule::Bool _238949eb4_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _238949eb4_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _238949eb4_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _238949eb4___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_238949eb4_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_23894b9cc_clean(_5810_path),_5828_ok);
	}
	jule::Str _629_wd = ({
		auto except = _2389a04e2_working_dir();
		(except.ok()) ? (except.result) : ({{
			_5828_ok = false;
			return std::make_tuple(jule::Str(),_5828_ok);
			_5828_ok = false;
			return std::make_tuple(jule::Str(),_5828_ok);
		} jule::Str();});
	});
	_5828_ok = true;
	return std::make_tuple(_238949eb4___join(jule::Slice<jule::Str>({_629_wd,_5810_path})),_5828_ok);
}



inline jule::Str _238949eb4_str_join(jule::Slice<jule::Str> _6813_elems,jule::Str _6827_sep) {
	{
		auto _match_expr{ _6813_elems.len() };
		if (!(_match_expr == (0LL))) { goto _case_end_4663884384; }
		_case_begin_4663884384:;
		{
			return jule::Str();
		}
		goto _match_end_4663883824;
		_case_end_4663884384:;
		if (!(_match_expr == (1LL))) { goto _case_end_4663884480; }
		_case_begin_4663884480:;
		{
			return _6813_elems[0LL];
		}
		goto _match_end_4663883824;
		_case_end_4663884480:;
		_match_end_4663883824:;
	}
	jule::Str _7413_s = _6813_elems[0LL];
	{
		auto expr = _6813_elems.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4663888336:;
		if (it != expr.end()) {
			jule::Str &_238949eb4_elem = *it;
			{
				_7413_s+=_6827_sep + _238949eb4_elem;
			}
			_iter_next_4663888336:;
			++it;
			goto _iter_begin_4663888336;
		}
		_iter_end_4663888336:;
	}
	return _7413_s;
}



inline jule::Str _238949eb4___join(jule::Slice<jule::Str> _8111_elem) {
	{
		auto &expr = _8111_elem;
		auto it = expr.begin();
		_iter_begin_4663889408:;
		if (it != expr.end()) {
			jule::Int _238949eb4_i = it - expr.begin();
			jule::Str &_238949eb4_e = *it;
			{
				if (_238949eb4_e != jule::Str()) {
					return _23894b9cc_clean(_238949eb4_str_join(_8111_elem.slice(_238949eb4_i),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_4663889408:;
			++it;
			_238949eb4_i++;
			goto _iter_begin_4663889408;
		}
		_iter_end_4663889408:;
	}
	return jule::Str();
}



inline void _23893acc9_exit(jule::Int _1213_code) {
	_2389cd8e9_exit(_1213_code);
}



inline jule::Str _23893acc9_executable(void) {
	return jule::executable();
}



inline jule::Bool _23886cd0a_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[_2627_p.len() - 1LL] == '>');
}



inline jule::Bool _23886cd0a_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _23886cd0a_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_4664056640:;
		if (it != expr.end()) {
			jule::Str &_23886cd0a_valid_ext = *it;
			{
				if (_3128_ext == _23886cd0a_valid_ext) {
					return true;
				}
			}
			_iter_next_4664056640:;
			++it;
			goto _iter_begin_4664056640;
		}
		_iter_end_4664056640:;
	}
	return false;
}



inline jule::Bool _23886cd0a_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto &expr = _23886cd0a_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_4664057344:;
		if (it != expr.end()) {
			jule::Str &_23886cd0a_e = *it;
			{
				if (_4225_ext == _23886cd0a_e) {
					return true;
				}
			}
			_iter_next_4664057344:;
			++it;
			goto _iter_begin_4664057344;
		}
		_iter_end_4664057344:;
	}
	{
		auto &expr = _23886cd0a_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_4664061376:;
		if (it != expr.end()) {
			jule::Str &_23886cd0a_e = *it;
			{
				if (_4225_ext == _23886cd0a_e) {
					return true;
				}
			}
			_iter_next_4664061376:;
			++it;
			goto _iter_begin_4664061376;
		}
		_iter_end_4664061376:;
	}
	return false;
}



inline jule::Str _23886c227_logf(jule::Str _27413_fmt,jule::Slice<jule::Any> _27426_args) {
	return _23886c227_apply_fmt(_27413_fmt,_27426_args);
}



inline jule::Str _23886c227_arg_to_str(jule::Any _27815_arg) {
	{
		auto &_match_expr{ _27815_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4672471568; }
		_case_begin_4672471568:;
		{
			return _27815_arg.operator jule::Str();
		}
		goto _match_end_4664064544;
		_case_end_4672471568:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4672471760; }
		_case_begin_4672471760:;
		{
			return static_cast<jule::Str>(_27815_arg.operator jule::U8());
		}
		goto _match_end_4664064544;
		_case_end_4672471760:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4672471856; }
		_case_begin_4672471856:;
		{
			return static_cast<jule::Str>(_27815_arg.operator jule::I32());
		}
		goto _match_end_4664064544;
		_case_end_4672471856:;
		_case_begin_4664064096:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_4664064544;
		_case_end_4664064096:;
		_match_end_4664064544:;
	}
}



inline jule::Int _23886c227_find_next_fmt(jule::Str _28718_fmt) {
	{
		auto &expr = _28718_fmt;
		auto it = expr.begin();
		_iter_begin_4664063856:;
		if (it != expr.end()) {
			jule::Int _23886c227_i = it - expr.begin();
			jule::U8 &_23886c227_b = *it;
			{
				if (_23886c227_b == '@') {
					return _23886c227_i;
				}
			}
			_iter_next_4664063856:;
			++it;
			_23886c227_i++;
			goto _iter_begin_4664063856;
		}
		_iter_end_4664063856:;
	}
	return -1LL;
}



inline jule::Str _23886c227_apply_fmt(jule::Str _29618_fmt,jule::Slice<jule::Any> _29628_args) {
	jule::Str _29713_s = jule::Str();
	{
		auto &expr = _29628_args;
		auto it = expr.begin();
		_iter_begin_4672479792:;
		if (it != expr.end()) {
			jule::Any &_23886c227_arg = *it;
			{
				jule::Int _30013_i = _23886c227_find_next_fmt(_29618_fmt);
				if (_30013_i == -1LL) {
					goto _iter_end_4672479792;
				}
				_29713_s+=_29618_fmt.slice(0LL,_30013_i);
				_29713_s+=_23886c227_arg_to_str(_23886c227_arg);
				_29618_fmt=_29618_fmt.slice(_30013_i + 1LL);
			}
			_iter_next_4672479792:;
			++it;
			goto _iter_begin_4672479792;
		}
		_iter_end_4672479792:;
	}
	_29713_s+=_29618_fmt;
	return _29713_s;
}



inline jule::Bool _2388c1347_is_top_directive(jule::Str _2625_directive) {
	return (_2625_directive == jule::Str("pass", 4)) || (_2625_directive == jule::Str("build", 5));
}



inline jule::Bool _2389027b8_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _2389027b8_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _2389027b8_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _2389027b8_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _2389027b8_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _2389027b8_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _2389027b8_is_unix(jule::Str _6316_os) {
	return _2389027b8_is_darwin(_6316_os) || _2389027b8_is_linux(_6316_os);
}



inline jule::Bool _2389027b8_is_32bit(jule::Str _6517_arch) {
	return _2389027b8_is_i386(_6517_arch);
}



inline jule::Bool _2389027b8_is_64bit(jule::Str _6717_arch) {
	return _2389027b8_is_amd64(_6717_arch) || _2389027b8_is_arm64(_6717_arch);
}



inline void _23890715d_exit_err(jule::Str _1613_msg) {
	
	jule::outln(_1613_msg);
	_23893acc9_exit(1LL);
}



inline void _23890715d_init(void) {
	jule::Str _2413_path = _23893acc9_executable();
	if (_2413_path == jule::Str()) {
		_23890715d_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _299_pwd = ({
		auto except = _2389a04e2_working_dir();
		(except.ok()) ? (except.result) : ({{
			_23890715d_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
			return;
			return;
		} jule::Str();});
	});
	jule::Str _349_path_exec = _23894b9cc_dir(_2413_path);
	_2413_path=_23894b9cc_join(jule::Slice<jule::Str>({_349_path_exec,jule::Str("..", 2)}));
	{
		_23890715d_PATH_WD=_299_pwd;
		_23890715d_PATH_EXEC=_349_path_exec;
		_23890715d_PATH_STDLIB=_23894b9cc_join(jule::Slice<jule::Str>({_2413_path,jule::Str("std", 3)}));
		_23890715d_PATH_API=_23894b9cc_join(jule::Slice<jule::Str>({_23890715d_PATH_EXEC,jule::Str("..", 2)}));
		_23890715d_PATH_API=_23894b9cc_join(jule::Slice<jule::Str>({_23890715d_PATH_API,jule::Str("api", 3)}));
		_23890715d_PATH_API=_23894b9cc_join(jule::Slice<jule::Str>({_23890715d_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Int _221ee1e35_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _221ee1e35_len64(_6124_x));
}



inline jule::Int _221ee1e35_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_221ee1e35_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_221ee1e35_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _221ee1e35_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_221ee1e35_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _221ee1e35_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_221ee1e35_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _221ee1e35_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LLU) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LLU) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



inline jule::Int _221ee1e35_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LLU) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LLU) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LLU) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _221ee1e35_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _221ee1e35_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LLU;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LLU;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LLU;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _23981d073_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _23981d073_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _23981d073_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _23981d073_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _221a1d7b9_nan(void) {
	return static_cast<jule::F64>(_23981d073_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _221a1d7b9_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _221a1d7b9_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_23981d073_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_23981d073_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _221a1d7b9_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline jule::F64 _221ad8411_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_23981d073_f64_from_bits(static_cast<jule::U64>(_23981d073_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



inline std::tuple<jule::F64,jule::F64> _221b4456b_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _221ad8411_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_4674225840:;
		}
		_iter_end_4674225840:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::Str _2389d34d1_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_2389d34d1_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _2389d34d1_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_2389d34d1_FloatInfo* _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		if (!(_match_expr == (32LL))) { goto _case_end_4675641104; }
		_case_begin_4675641104:;
		{
			_8313_bits=static_cast<jule::U64>(_23981d073_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_2389d34d1_F32_INFO));
		}
		goto _match_end_4675639568;
		_case_end_4675641104:;
		if (!(_match_expr == (64LL))) { goto _case_end_4675640672; }
		_case_begin_4675640672:;
		{
			_8313_bits=static_cast<jule::U64>(_23981d073_f64_bits(_8234_val));
			_8413_flt=(&(_2389d34d1_F64_INFO));
		}
		goto _match_end_4675639568;
		_case_end_4675640672:;
		_case_begin_4675639040:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_4675639568;
		_case_end_4675639040:;
		_match_end_4675639568:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto &_match_expr{ _9713_exp };
		if (!(_match_expr == ((1LL << _8413_flt->_field_expbits) - 1LL))) { goto _case_end_4675650608; }
		_case_begin_4675650608:;
		{
			jule::Str _10317_s = jule::Str();
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_4675655104; }
				_case_begin_4675655104:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_4675654192;
				_case_end_4675655104:;
				if (!((_969_neg))) { goto _case_end_4675655280; }
				_case_begin_4675655280:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_4675654192;
				_case_end_4675655280:;
				_case_begin_4675654304:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_4675654192;
				_case_end_4675654304:;
				_match_end_4675654192:;
			}
			return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_4675649456;
		_case_end_4675650608:;
		if (!(_match_expr == (0LL))) { goto _case_end_4675652032; }
		_case_begin_4675652032:;
		{
			(_9713_exp)++;
		}
		goto _match_end_4675649456;
		_case_end_4675652032:;
		_case_begin_4675644032:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_4675649456;
		_case_end_4675644032:;
		_match_end_4675649456:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _2389d34d1_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _2389d34d1_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _2389d34d1_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_2389d34d1_DecimalSlice _13413_digs = _2389d34d1_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>();
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_23993a5d0_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			if (!(_match_expr == ('e') || _match_expr == ('E'))) { goto _case_end_4675666384; }
			_case_begin_4675666384:;
			{
				_8259_prec=static_cast<jule::Int>(_2389d34d1_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
			}
			goto _match_end_4675669904;
			_case_end_4675666384:;
			if (!(_match_expr == ('f'))) { goto _case_end_4675669984; }
			_case_begin_4675669984:;
			{
				_8259_prec=static_cast<jule::Int>(_2389d34d1_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
			}
			goto _match_end_4675669904;
			_case_end_4675669984:;
			if (!(_match_expr == ('g') || _match_expr == ('G'))) { goto _case_end_4675670240; }
			_case_begin_4675670240:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_4675669904;
			_case_end_4675670240:;
			_match_end_4675669904:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			if (!(_match_expr == ('e') || _match_expr == ('E'))) { goto _case_end_4675678144; }
			_case_begin_4675678144:;
			{
				(_15517_digits)++;
			}
			goto _match_end_4675676688;
			_case_end_4675678144:;
			if (!(_match_expr == ('g') || _match_expr == ('G'))) { goto _case_end_4675677232; }
			_case_begin_4675677232:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_4675676688;
			_case_end_4675677232:;
			_case_begin_4675675680:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_4675676688;
			_case_end_4675675680:;
			_match_end_4675676688:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>();
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_23993a5d0_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_23993a5d0_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _2389d34d1_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _2389d34d1_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _2389d34d1_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_2389d34d1_FloatInfo& _18735_flt) {
	_239796a57_Decimal _18813_d = _239796a57_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(static_cast<jule::Int>(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits)));
	_2389d34d1_DecimalSlice _19113_digs = _2389d34d1_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_2389d34d1_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_2389d34d1_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18645_fmt };
			if (!(_match_expr == ('e') || _match_expr == ('E'))) { goto _case_end_4675700144; }
			_case_begin_4675700144:;
			{
				_18634_prec=static_cast<jule::Int>(_19113_digs._field_nd - 1LL);
			}
			goto _match_end_4675702944;
			_case_end_4675700144:;
			if (!(_match_expr == ('f'))) { goto _case_end_4675703824; }
			_case_begin_4675703824:;
			{
				_18634_prec=static_cast<jule::Int>(_2389d34d1_max(static_cast<jule::Int>(_19113_digs._field_nd - _19113_digs._field_dp),0LL));
			}
			goto _match_end_4675702944;
			_case_end_4675703824:;
			if (!(_match_expr == ('g') || _match_expr == ('G'))) { goto _case_end_4675703920; }
			_case_begin_4675703920:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_4675702944;
			_case_end_4675703920:;
			_match_end_4675702944:;
		}
	} else {
		{
			auto &_match_expr{ _18645_fmt };
			if (!(_match_expr == ('e') || _match_expr == ('E'))) { goto _case_end_4675708464; }
			_case_begin_4675708464:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18634_prec + 1LL));
			}
			goto _match_end_4675709312;
			_case_end_4675708464:;
			if (!(_match_expr == ('f'))) { goto _case_end_4675708560; }
			_case_begin_4675708560:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18813_d._field_dp + _18634_prec));
			}
			goto _match_end_4675709312;
			_case_end_4675708560:;
			if (!(_match_expr == ('g') || _match_expr == ('G'))) { goto _case_end_4675708656; }
			_case_begin_4675708656:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_4675709312;
			_case_end_4675708656:;
			_match_end_4675709312:;
		}
		_19113_digs=_2389d34d1_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _2389d34d1_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



inline jule::Slice<jule::U8> _2389d34d1_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_2389d34d1_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto &_match_expr{ _22448_fmt };
		if (!(_match_expr == ('e') || _match_expr == ('E'))) { goto _case_end_4675721920; }
		_case_begin_4675721920:;
		{
			return _2389d34d1_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_4675721728;
		_case_end_4675721920:;
		if (!(_match_expr == ('f'))) { goto _case_end_4675722032; }
		_case_begin_4675722032:;
		{
			return _2389d34d1_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_4675721728;
		_case_end_4675722032:;
		if (!(_match_expr == ('g') || _match_expr == ('G'))) { goto _case_end_4675722128; }
		_case_begin_4675722128:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _2389d34d1_fmt_e(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_22437_prec - 1LL),static_cast<jule::U8>((_22448_fmt + 'e') - 'g'));
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _2389d34d1_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_2389d34d1_max(static_cast<jule::Int>(_22437_prec - _22413_digs._field_dp),0LL)));
		}
		goto _match_end_4675721728;
		_case_end_4675722128:;
		_match_end_4675721728:;
	}
	return jule::append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



inline void _2389d34d1_round_shortest(_239796a57_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_2389d34d1_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_239796a57_Decimal _29113_upper = _239796a57_Decimal();
	_29113_upper._method_assign(static_cast<jule::U64>((_26136_mant * 2LL) + 1LL));
	_29113_upper._method_shift(static_cast<jule::Int>((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=static_cast<jule::U64>(_26136_mant - 1LL);
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=static_cast<jule::U64>((_26136_mant * 2LL) - 1LL);
		_30213_explo=static_cast<jule::Int>(_26147_exp - 1LL);
	}
	_239796a57_Decimal _31013_lower = _239796a57_Decimal();
	_31013_lower._method_assign(static_cast<jule::U64>((_30113_mantlo * 2LL) + 1LL));
	_31013_lower._method_shift(static_cast<jule::Int>((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::Bool _3179_inclusive = jule::unsafe_mod(_26136_mant,2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	for (; ; (_33413_ui)++) {
		{
			jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
			if (_33913_mi >= _26124_d._field_nd) {
				goto _iter_end_4675747824;
			}
			jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
			jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
			if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
				_34417_l=_31013_lower._field_d[_34313_li];
			}
			jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
			if (_33913_mi >= 0LL) {
				_34817_m=_26124_d._field_d[_33913_mi];
			}
			jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
			if (_33413_ui < _29113_upper._field_nd) {
				_35217_u=_29113_upper._field_d[_33413_ui];
			}
			jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
			{
				if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_4675773232; }
				_case_begin_4675773232:;
				{
					_33013_upperdelta=2LL;
				}
				goto _match_end_4675771152;
				_case_end_4675773232:;
				if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_4675773328; }
				_case_begin_4675773328:;
				{
					_33013_upperdelta=1LL;
				}
				goto _match_end_4675771152;
				_case_end_4675773328:;
				if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_4675773696; }
				_case_begin_4675773696:;
				{
					_33013_upperdelta=2LL;
				}
				goto _match_end_4675771152;
				_case_end_4675773696:;
				_match_end_4675771152:;
			}
			jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
			{
				if (!((_36013_okdown && _38113_okup))) { goto _case_end_4675779248; }
				_case_begin_4675779248:;
				{
					_26124_d._method_round(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4675764496;
				_case_end_4675779248:;
				if (!((_36013_okdown))) { goto _case_end_4675780016; }
				_case_begin_4675780016:;
				{
					_26124_d._method_round_down(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4675764496;
				_case_end_4675780016:;
				if (!((_38113_okup))) { goto _case_end_4675780112; }
				_case_begin_4675780112:;
				{
					_26124_d._method_round_up(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4675764496;
				_case_end_4675780112:;
				_match_end_4675764496:;
			}
		}
	_iter_next_4675747824:;
	}
	_iter_end_4675747824:;
}



inline jule::Slice<jule::U8> _2389d34d1_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_2389d34d1_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst.push('-');
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[0LL];
	}
	_40014_dst.push(_40713_ch);
	if (_40055_prec > 0LL) {
		_40014_dst.push('.');
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _2389d34d1_min(_40038_d._field_nd,static_cast<jule::Int>(_40055_prec + 1LL));
		if (_41617_i < _41713_m) {
			_40014_dst=jule::append(_40014_dst,_40038_d._field_d.slice(_41617_i,_41713_m));
			_41617_i=_41713_m;
		}
		for (; _41617_i <= _40055_prec; (_41617_i)++) {
			{
				_40014_dst.push('0');
			}
		_iter_next_4675801136:;
		}
		_iter_end_4675801136:;
	}
	_40014_dst.push(_40066_fmt);
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst.push(_40713_ch);
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_4675804048; }
		_case_begin_4675804048:;
		{
			_40014_dst.push('0');_40014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0'));
		}
		goto _match_end_4675801840;
		_case_end_4675804048:;
		if (!((_42913_exp < 100LL))) { goto _case_end_4675803600; }
		_case_begin_4675803600:;
		{
			_40014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_42913_exp,10LL)) + '0'));_40014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_42913_exp,10LL)) + '0'));
		}
		goto _match_end_4675801840;
		_case_end_4675803600:;
		_case_begin_4675804928:;
		{
			_40014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_42913_exp,100LL)) + '0'));_40014_dst.push(static_cast<jule::U8>(jule::unsafe_mod(static_cast<jule::U8>(jule::unsafe_div(_42913_exp,10LL)),10LL) + '0'));_40014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_42913_exp,10LL)) + '0'));
		}
		goto _match_end_4675801840;
		_case_end_4675804928:;
		_match_end_4675801840:;
	}
	return _40014_dst;
}



inline jule::Slice<jule::U8> _2389d34d1_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_2389d34d1_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst.push('-');
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _2389d34d1_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=jule::append(_45514_dst,_45538_d._field_d.slice(0LL,_46317_m));
		for (; _46317_m < _45538_d._field_dp; (_46317_m)++) {
			{
				_45514_dst.push('0');
			}
		_iter_next_4675818656:;
		}
		_iter_end_4675818656:;
	} else {
		_45514_dst.push('0');
	}
	if (_45555_prec > 0LL) {
		_45514_dst.push('.');
		jule::Int _47417_i = 0LL;
		for (; _47417_i < _45555_prec; (_47417_i)++) {
			{
				jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
				jule::Int _47717_j = _45538_d._field_dp + _47417_i;
				if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
					_47621_ch=_45538_d._field_d[_47717_j];
				}
				_45514_dst.push(_47621_ch);
			}
		_iter_next_4675821936:;
		}
		_iter_end_4675821936:;
	}
	return _45514_dst;
}



inline jule::Slice<jule::U8> _2389d34d1_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_2389d34d1_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst.push('-');
	}
	std::tie(_48814_dst,std::ignore) = _2397e4467_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst.push('p');
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst.push('+');
	}
	std::tie(_48814_dst,std::ignore) = _2397e4467_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



inline jule::Slice<jule::U8> _2389d34d1_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_2389d34d1_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	while ((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LLU) == 0LL)) {
		{
			_51113_mant<<=1LL;
			(_51128_exp)--;
		}
	_iter_next_4675839584:;
	}
	_iter_end_4675839584:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846975LLU;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LLU) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LLU) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst.push('-');
	}
	_51014_dst.push('0');_51014_dst.push(_51038_fmt);_51014_dst.push(static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL)));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst.push('.');
		while (_51113_mant != 0LL) {
			{
				_51014_dst.push(_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]);
				_51113_mant<<=4LL;
			}
		_iter_next_4675853568:;
		}
		_iter_end_4675853568:;
	} else if (_51027_prec > 0LL) {
		_51014_dst.push('.');
		jule::Int _56017_i = 0LL;
		for (; _56017_i < _51027_prec; (_56017_i)++) {
			{
				_51014_dst.push(_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]);
				_51113_mant<<=4LL;
			}
		_iter_next_4675842224:;
		}
		_iter_end_4675842224:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _2388cbb6b_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst.push(_56813_ch);
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst.push(_56813_ch);
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_4675849472; }
		_case_begin_4675849472:;
		{
			_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_51128_exp,10LL)) + '0'));_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_51128_exp,10LL)) + '0'));
		}
		goto _match_end_4675862352;
		_case_end_4675849472:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_4675864560; }
		_case_begin_4675864560:;
		{
			_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_51128_exp,100LL)) + '0'));_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(jule::unsafe_div(_51128_exp,10LL),10LL)) + '0'));_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_51128_exp,10LL)) + '0'));
		}
		goto _match_end_4675862352;
		_case_end_4675864560:;
		_case_begin_4675863680:;
		{
			_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_51128_exp,1000LL)) + '0'));_51014_dst.push(static_cast<jule::U8>(jule::unsafe_mod(static_cast<jule::U8>(jule::unsafe_div(_51128_exp,100LL)),10LL) + '0'));_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(jule::unsafe_div(_51128_exp,10LL),10LL)) + '0'));_51014_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_51128_exp,10LL)) + '0'));
		}
		goto _match_end_4675862352;
		_case_end_4675863680:;
		_match_end_4675862352:;
	}
	return _51014_dst;
}



inline jule::Int _2389d34d1_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



inline jule::Int _2389d34d1_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



inline jule::U8 _2388cbb6b_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



inline std::tuple<jule::U64,jule::Int> _2388cbb6b_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str()) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_4675883328; }
		goto _match_end_4675881264;
		_case_end_4675883328:;
		if (!((_5435_base == 0LL))) { goto _case_end_4675883904; }
		_case_begin_4675883904:;
		{
			_5435_base=10LL;
			if (_5423_s[0LL] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_2388cbb6b_lower(_5423_s[1LL]) == 'b')))) { goto _case_end_4675888816; }
					_case_begin_4675888816:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4675886880;
					_case_end_4675888816:;
					if (!(((_5423_s.len() >= 3LL) && (_2388cbb6b_lower(_5423_s[1LL]) == 'o')))) { goto _case_end_4675887824; }
					_case_begin_4675887824:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4675886880;
					_case_end_4675887824:;
					if (!(((_5423_s.len() >= 3LL) && (_2388cbb6b_lower(_5423_s[1LL]) == 'x')))) { goto _case_end_4675888352; }
					_case_begin_4675888352:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4675886880;
					_case_end_4675888352:;
					_case_begin_4675887024:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(1LL);
					}
					goto _match_end_4675886880;
					_case_end_4675887024:;
					_match_end_4675886880:;
				}
			}
		}
		goto _match_end_4675881264;
		_case_end_4675883904:;
		_case_begin_4675880352:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_4675881264;
		_case_end_4675880352:;
		_match_end_4675881264:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LLU;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto &_match_expr{ _5435_base };
		if (!(_match_expr == (10LL))) { goto _case_end_4675899984; }
		_case_begin_4675899984:;
		{
			_9313_cutoff=1844674407370955264LL;
		}
		goto _match_end_4675885632;
		_case_end_4675899984:;
		if (!(_match_expr == (16LL))) { goto _case_end_4675899600; }
		_case_begin_4675899600:;
		{
			_9313_cutoff=1152921504606846976LL;
		}
		goto _match_end_4675885632;
		_case_end_4675899600:;
		_case_begin_4675896912:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_4675885632;
		_case_end_4675896912:;
		_match_end_4675885632:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto &_match_expr{ _5450_bit_size };
		if (!(_match_expr == (32LL))) { goto _case_end_4675895344; }
		_case_begin_4675895344:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_4675902464;
		_case_end_4675895344:;
		if (!(_match_expr == (64LL))) { goto _case_end_4675902592; }
		_case_begin_4675902592:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_4675902464;
		_case_end_4675902592:;
		_match_end_4675902464:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto &expr = _5423_s;
		auto it = expr.begin();
		_iter_begin_4675905120:;
		if (it != expr.end()) {
			jule::U8 &_2388cbb6b_c = *it;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (!((('0' <= _2388cbb6b_c) && (_2388cbb6b_c <= '9')))) { goto _case_end_4675910624; }
					_case_begin_4675910624:;
					{
						_11417_d=static_cast<jule::U8>(_2388cbb6b_c - '0');
					}
					goto _match_end_4675908624;
					_case_end_4675910624:;
					if (!((('a' <= _2388cbb6b_lower(_2388cbb6b_c)) && (_2388cbb6b_lower(_2388cbb6b_c) <= 'z')))) { goto _case_end_4675909744; }
					_case_begin_4675909744:;
					{
						_11417_d=static_cast<jule::U8>((_2388cbb6b_lower(_2388cbb6b_c) - 'a') + 10LL);
					}
					goto _match_end_4675908624;
					_case_end_4675909744:;
					_case_begin_4675908736:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_4675908624;
					_case_end_4675908736:;
					_match_end_4675908624:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_4675905120:;
			++it;
			goto _iter_begin_4675905120;
		}
		_iter_end_4675905120:;
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _2388cbb6b_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::I64 _16562_i = jule::I64();
	jule::Int _16570_err = 0LLU;
	if (_16522_s == jule::Str()) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _2388cbb6b_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LLU;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _238adb74e_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_23981d073_f64_from_bits(9223372036854775808LLU));
		}
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _221ee1e35_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _221ee1e35_mul64(_4123_man,_238adb74e_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL].__at(1LL));
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _221ee1e35_mul64(_4123_man,_238adb74e_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL].__at(0LL));
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_23981d073_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _238adb74e_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_23981d073_f32_from_bits(2147483648LLU));
		}
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _221ee1e35_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _221ee1e35_mul64(_11023_man,_238adb74e_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL].__at(1LL));
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _221ee1e35_mul64(_11023_man,_238adb74e_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL].__at(0LL));
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_23981d073_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _2398a6c55_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+=32LL;
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_4676012032:;
	}
	_iter_end_4676012032:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _2398a6c55_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[0LL] };
		if (!(_match_expr == ('+') || _match_expr == ('-'))) { goto _case_end_4676025008; }
		_case_begin_4676025008:;
		{
			if (_6816_s[0LL] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(1LL);
			goto _case_begin_4676025104;
		}
		goto _match_end_4676024928;
		_case_end_4676025008:;
		if (!(_match_expr == ('i') || _match_expr == ('I'))) { goto _case_end_4676025104; }
		_case_begin_4676025104:;
		{
			jule::Int _8317_case_n = _2398a6c55_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = static_cast<jule::F64>(_221a1d7b9_inf(_7213_sign));
				_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4676024928;
		_case_end_4676025104:;
		if (!(_match_expr == ('n') || _match_expr == ('N'))) { goto _case_end_4676025200; }
		_case_begin_4676025200:;
		{
			if (_2398a6c55_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = static_cast<jule::F64>(_221a1d7b9_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4676024928;
		_case_end_4676025200:;
		_match_end_4676024928:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _2398a6c55_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[_10449_i] == '+'))) { goto _case_end_4672722864; }
		_case_begin_4672722864:;
		{
			(_10449_i)++;
		}
		goto _match_end_4672722240;
		_case_end_4672722864:;
		if (!((_10315_s[_10449_i] == '-'))) { goto _case_end_4672607024; }
		_case_begin_4672607024:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_4672722240;
		_case_end_4672607024:;
		_match_end_4672722240:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[_10449_i] == '0')) && (_2388cbb6b_lower(_10315_s[_10449_i + 1LL]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	for (; _10449_i < _10315_s.len(); (_10449_i)++) {
		{
			jule::U8 _13413_c = _10315_s[_10449_i];
			{
				if (!((_13413_c == '.'))) { goto _case_end_4672739968; }
				_case_begin_4672739968:;
				{
					if (_12813_sawdot) {
						goto _julec_label_loop_end;
					}
					_12813_sawdot=true;
					_13213_dp=_13013_nd;
					goto _iter_next_4672736208;
				}
				goto _match_end_4672739888;
				_case_end_4672739968:;
				if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_4672740064; }
				_case_begin_4672740064:;
				{
					_12913_sawdigits=true;
					if ((_13413_c == '0') && (_13013_nd == 0LL)) {
						(_13213_dp)--;
						goto _iter_next_4672736208;
					}
					(_13013_nd)++;
					if (_13113_nd_mant < _11913_max_mant_digits) {
						_10325_mantissa*=_11813_base;
						_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
						(_13113_nd_mant)++;
					} else if (_13413_c != '0') {
						_10425_trunc=true;
					}
					goto _iter_next_4672736208;
				}
				goto _match_end_4672739888;
				_case_end_4672740064:;
				if (!((((_11813_base == 16LL) && ('a' <= _2388cbb6b_lower(_13413_c))) && (_2388cbb6b_lower(_13413_c) <= 'f')))) { goto _case_end_4672740160; }
				_case_begin_4672740160:;
				{
					_12913_sawdigits=true;
					(_13013_nd)++;
					if (_13113_nd_mant < _11913_max_mant_digits) {
						_10325_mantissa*=16LL;
						_10325_mantissa+=static_cast<jule::U64>((_2388cbb6b_lower(_13413_c) - 'a') + 10LL);
						(_13113_nd_mant)++;
					} else {
						_10425_trunc=true;
					}
					goto _iter_next_4672736208;
				}
				goto _match_end_4672739888;
				_case_end_4672740160:;
				_match_end_4672739888:;
			}
			goto _iter_end_4672736208;
		}
	_iter_next_4672736208:;
	}
	_iter_end_4672736208:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_2388cbb6b_lower(_10315_s[_10449_i]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[_10449_i] == '+') {
			(_10449_i)++;
		} else if (_10315_s[_10449_i] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[_10449_i] < '0')) || (_10315_s[_10449_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		for (; (_10449_i < _10315_s.len()) && (('0' <= _10315_s[_10449_i]) && (_10315_s[_10449_i] <= '9')); (_10449_i)++) {
			{
				if (_20517_e < 10000LL) {
					_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[_10449_i])) - '0');
				}
			}
		_iter_next_4672759744:;
		}
		_iter_end_4672759744:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _2398a6c55_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::F64 _47258_f = jule::F64();
	jule::Bool _47266_ok = jule::Bool();
	if ((_47216_mantissa >> _2389d34d1_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_4672792448; }
		_case_begin_4672792448:;
		{
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4672792272;
		_case_end_4672792448:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_4672792560; }
		_case_begin_4672792560:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_2398a6c55_F64_POW10[_47235_exp - 22LL];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = static_cast<jule::F64>(_47258_f * _2398a6c55_F64_POW10[_47235_exp]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4672792272;
		_case_end_4672792560:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_4672792672; }
		_case_begin_4672792672:;
		{
			_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_2398a6c55_F64_POW10[(-(_47235_exp))]));
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4672792272;
		_case_end_4672792672:;
		_match_end_4672792272:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _2398a6c55_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::F32 _50662_f = jule::F32();
	jule::Bool _50670_ok = jule::Bool();
	if ((_50616_mantissa >> _2389d34d1_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_4672807280; }
		_case_begin_4672807280:;
		{
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4672807888;
		_case_end_4672807280:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_4672807376; }
		_case_begin_4672807376:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_2398a6c55_F32_POW10[_50635_exp - 10LL];
				_50635_exp=10LL;
			}
			if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = static_cast<jule::F32>(_50662_f * _2398a6c55_F32_POW10[_50635_exp]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4672807888;
		_case_end_4672807376:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_4672807488; }
		_case_begin_4672807488:;
		{
			_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_2398a6c55_F32_POW10[(-(_50635_exp))]));
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4672807888;
		_case_end_4672807488:;
		_match_end_4672807888:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _2398a6c55_atof_hex(jule::Str _54213_s,_2389d34d1_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	while ((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL)) {
		{
			_54242_mantissa<<=1LL;
			(_54261_exp)--;
		}
	_iter_next_4672822272:;
	}
	_iter_end_4672822272:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	while ((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4672825296:;
	}
	_iter_end_4672825296:;
	while ((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL))) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4672826512:;
	}
	_iter_end_4672826512:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _2389d34d1_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_23981d073_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_23981d073_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _2398a6c55_atof32(jule::Str _60711_s) {
	jule::F32 _60721_f = jule::F32();
	jule::Int _60729_n = jule::Int();
	jule::Int _60737_err = 0LLU;
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _2398a6c55_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60729_n = _60919__n;
			_60737_err = 0LLU;
			return std::make_tuple(_60721_f,_60729_n,_60737_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _2398a6c55_read_float(_60711_s);
	_60729_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60737_err) = _2398a6c55_atof_hex(_60711_s.slice(0LL,_60729_n),_2389d34d1_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _2398a6c55_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _238adb74e_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _238adb74e_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
	}
	_239796a57_Decimal _65313_d = _239796a57_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,_60729_n))))) {
		_60721_f = 0LL;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_2389d34d1_F32_INFO);
	_60721_f=static_cast<jule::F32>(_23981d073_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60737_err=1LLU;
	}
	return std::make_tuple(_60721_f,_60729_n,_60737_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _2398a6c55_atof64(jule::Str _66511_s) {
	jule::F64 _66521_f = jule::F64();
	jule::Int _66529_n = jule::Int();
	jule::Int _66537_err = 0LLU;
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _2398a6c55_special(_66511_s);
		if (_66723_ok) {
			_66521_f = _66714_val;
			_66529_n = _66719__n;
			_66537_err = 0LLU;
			return std::make_tuple(_66521_f,_66529_n,_66537_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _2398a6c55_read_float(_66511_s);
	_66529_n=_67342__n;
	if ((!(_67350_ok))) {
		_66521_f = 0LL;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (_67337_hex) {
		std::tie(_66521_f,_66537_err) = _2398a6c55_atof_hex(_66511_s.slice(0LL,_66529_n),_2389d34d1_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66521_f,_67350_ok) = _2398a6c55_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
		std::tie(_66521_f,_67350_ok) = _238adb74e_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _238adb74e_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66521_f == _70121_f_up)) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
	}
	_239796a57_Decimal _71013_d = _239796a57_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,_66529_n))))) {
		_66521_f = 0LL;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_2389d34d1_F64_INFO);
	_66521_f=static_cast<jule::F64>(_23981d073_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66537_err=1LLU;
	}
	return std::make_tuple(_66521_f,_66529_n,_66537_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _2398a6c55_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _2398a6c55_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _2398a6c55_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



inline std::tuple<jule::F64,jule::Int> _2398a6c55_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _2398a6c55_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



inline void _23993a5d0_ryu_ftoa_fixed32(_2389d34d1_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _221ee1e35_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_23993a5d0_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _23993a5d0_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _23993a5d0_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_23993a5d0_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _23993a5d0_ryu_ftoa_fixed64(_2389d34d1_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _221ee1e35_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_23993a5d0_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _23993a5d0_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _23993a5d0_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_23993a5d0_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _23993a5d0_format_decimal(_2389d34d1_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _23993a5d0_U64_POW10[_20490_prec];
	jule::Int _20613_trimmed = 0LL;
	while (_20445_m >= _2059_max) {
		{
			jule::U64 _20814_a = jule::unsafe_div(_20445_m,10LL);
			jule::U64 _20817_b = jule::unsafe_mod(_20445_m,10LL);
			std::tie(_20814_a,_20817_b) = std::make_tuple(jule::unsafe_div(_20445_m,10LL),jule::unsafe_mod(_20445_m,10LL));
			_20445_m=_20814_a;
			(_20613_trimmed)++;
			if (_20817_b > 5LL) {
				_20474_round_up=true;
			} else if (_20817_b < 5LL) {
				_20474_round_up=false;
			} else {
				_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
			}
			if (_20817_b != 0LL) {
				_20457_trunc=true;
			}
		}
	_iter_next_4672988720:;
	}
	_iter_end_4672988720:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = jule::unsafe_div(_20445_m,10LL);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	while (_23513_v >= 100LL) {
		{
			jule::U64 _23717_v1 = 0LLU;
			jule::U64 _23817_v2 = 0LLU;
			if ((_23513_v >> 32LL) == 0LL) {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::unsafe_div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::unsafe_mod(static_cast<jule::U32>(_23513_v),100LL)));
			} else {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::unsafe_div(_23513_v,100LL)),static_cast<jule::U64>(jule::unsafe_mod(_23513_v,100LL)));
			}
			_23313_n-=2LL;
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
			_23513_v=_23717_v1;
		}
	_iter_next_4672989264:;
	}
	_iter_end_4672989264:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	while (_20424_d._field_d[_20424_d._field_nd - 1LL] == '0') {
		{
			(_20424_d._field_nd)--;
			(_20613_trimmed)++;
		}
	_iter_next_4673015072:;
	}
	_iter_end_4673015072:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



inline void _23993a5d0_ryu_ftoa_shortest(_2389d34d1_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_2389d34d1_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_221ee1e35_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_23993a5d0_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _23993a5d0_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_23993a5d0_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _23993a5d0_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _2389d34d1_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _23993a5d0_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _23993a5d0_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _23993a5d0_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _23993a5d0_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _23993a5d0_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _23993a5d0_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_23993a5d0_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_23993a5d0_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_23993a5d0_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_23993a5d0_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _23993a5d0_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _23993a5d0_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _23993a5d0_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_2389d34d1_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _23993a5d0_ryu_digits(_2389d34d1_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _23993a5d0_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _23993a5d0_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _23993a5d0_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_23993a5d0_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_23993a5d0_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		while (_43517_v > 0LL) {
			{
				jule::U32 _43718_v1 = jule::unsafe_div(_43517_v,10LL);
				jule::U32 _43722_v2 = jule::unsafe_mod(_43517_v,10LL);
				std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::unsafe_div(_43517_v,10LL),jule::unsafe_mod(_43517_v,10LL));
				_43517_v=_43718_v1;
				(_43417_n)--;
				_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
			}
		_iter_next_4673105120:;
		}
		_iter_end_4673105120:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_23993a5d0_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[_41520_d._field_nd - 1LL] == '0')) {
		{
			(_41520_d._field_nd)--;
		}
	_iter_next_4673104848:;
	}
	_iter_end_4673104848:;
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0')) {
		{
			(_41520_d._field_nd)--;
			(_41520_d._field_dp)--;
			_41520_d._field_d=_41520_d._field_d.slice(1LL);
		}
	_iter_next_4673101232:;
	}
	_iter_end_4673101232:;
}



inline void _23993a5d0_ryu_digits32(_2389d34d1_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	while (_46121_upper > 0LL) {
		{
			jule::U32 _47613_l = jule::unsafe_div(_46043_lower + 9LL,10LL);
			jule::U32 _47718_c = jule::unsafe_div(_46059_central,10LL);
			jule::U32 _47725_cdigit = jule::unsafe_mod(_46059_central,10LL);
			std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::unsafe_div(_46059_central,10LL),jule::unsafe_mod(_46059_central,10LL));
			jule::U32 _47813_u = jule::unsafe_div(_46121_upper,10LL);
			if (_47613_l > _47813_u) {
				goto _iter_end_4673122752;
			}
			if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
				(_47718_c)++;
				_47725_cdigit=0LL;
				_46151_cup=false;
			}
			(_46613_trimmed)++;
			_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
			_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
			std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
		}
	_iter_next_4673122752:;
	}
	_iter_end_4673122752:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	while (_51813_n > _46022_d._field_nd) {
		{
			jule::U32 _52014_v1 = jule::unsafe_div(_51713_v,100LL);
			jule::U32 _52018_v2 = jule::unsafe_mod(_51713_v,100LL);
			std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::unsafe_div(_51713_v,100LL),jule::unsafe_mod(_51713_v,100LL));
			_46022_d._field_d[_51813_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
			_46022_d._field_d[_51813_n - 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
			_51813_n-=2LL;
			_51713_v=_52014_v1;
		}
	_iter_next_4673136032:;
	}
	_iter_end_4673136032:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[_51813_n]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _23993a5d0_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _238adb74e_DETAILED_POWS_OF_TEN[_54241_q - -348LL].__at(1LL);
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _221ee1e35_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_23993a5d0_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _23993a5d0_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _238adb74e_DETAILED_POWS_OF_TEN[_57042_q - -348LL];
	if (_57042_q < 0LL) {
		_57913_pow.__at(0LL)+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_23993a5d0_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _221ee1e35_mul64(_57021_m,_57913_pow.__at(0LL));
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _221ee1e35_mul64(_57021_m,_57913_pow.__at(1LL));
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _221ee1e35_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _23993a5d0_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	for (; _59813_i < _59434_k; (_59813_i)++) {
		{
			if (jule::unsafe_mod(_59426_m,5LL) != 0LL) {
				return false;
			}
			_59426_m = jule::unsafe_div(_59426_m,5LL);
		}
	_iter_next_4673177648:;
	}
	_iter_end_4673177648:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _23993a5d0_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::unsafe_div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::unsafe_mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _221ee1e35_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



inline void _239796a57_trim(_239796a57_Decimal& _27514_a) {
	while ((_27514_a._field_nd > 0LL) && (_27514_a._field_d[_27514_a._field_nd - 1LL] == '0')) {
		{
			(_27514_a._field_nd)--;
		}
	_iter_next_4673196048:;
	}
	_iter_end_4673196048:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _239796a57_right_shift(_239796a57_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	for (; (_29013_n >> _28533_k) == 0LL; (_28613_r)++) {
		{
			if (_28613_r >= _28521_a._field_nd) {
				if (_29013_n == 0LL) {
					_28521_a._field_nd=0LL;
					return;
				}
				while ((_29013_n >> _28533_k) == 0LL) {
					{
						_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
						(_28613_r)++;
					}
				_iter_next_4673207968:;
				}
				_iter_end_4673207968:;
				goto _iter_end_4673203216;
			}
			jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
		}
	_iter_next_4673203216:;
	}
	_iter_end_4673203216:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	for (; _28613_r < _28521_a._field_nd; (_28613_r)++) {
		{
			jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			jule::Uint _31413_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_31413_dig + '0');
			(_28713_w)++;
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
		}
	_iter_next_4673212752:;
	}
	_iter_end_4673212752:;
	while (_29013_n > 0LL) {
		{
			jule::Uint _32313_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			if (_28713_w < 800LL) {
				_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_32313_dig + '0');
				(_28713_w)++;
			} else if (_32313_dig > 0LL) {
				_28521_a._field_trunc=true;
			}
			_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
		}
	_iter_next_4673214496:;
	}
	_iter_end_4673214496:;
	_28521_a._field_nd=_28713_w;
	_239796a57_trim(_28521_a);
}



inline jule::Bool _239796a57_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	for (; _34013_i < _33935_s.len(); (_34013_i)++) {
		{
			if (_34013_i >= _33924_b.len()) {
				return true;
			}
			if (_33924_b[_34013_i] != _33935_s[_34013_i]) {
				return _33924_b[_34013_i] < _33935_s[_34013_i];
			}
		}
	_iter_next_4673226560:;
	}
	_iter_end_4673226560:;
	return false;
}



inline void _239796a57_left_shift(_239796a57_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _239796a57_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_239796a57_prefix_is_less_than(_35320_a._field_d.slice(0LL,_35320_a._field_nd),_239796a57_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	for (; _35913_r >= 0LL; (_35913_r)--) {
		{
			_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[_35913_r]) - '0') << _35332_k);
			jule::Uint _36713_quo = jule::unsafe_div(_36313_n,10LL);
			jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_36813_rem + '0');
			} else if (_36813_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_36713_quo;
		}
	_iter_next_4673239728:;
	}
	_iter_end_4673239728:;
	while (_36313_n > 0LL) {
		{
			jule::Uint _38013_quo = jule::unsafe_div(_36313_n,10LL);
			jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_38113_rem + '0');
			} else if (_38113_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_38013_quo;
		}
	_iter_next_4673245488:;
	}
	_iter_end_4673245488:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_239796a57_trim(_35320_a);
}



inline jule::Bool _239796a57_should_round_up(_239796a57_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[_40033_nd] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::unsafe_mod(_40021_a._field_d[_40033_nd - 1LL] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[_40033_nd] >= '5';
}



inline jule::Str _2397e4467_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _2397e4467_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _2397e4467_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _2397e4467_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _2397e4467_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _2397e4467_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _2397e4467_itoa(jule::Int _8213_i) {
	return _2397e4467_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _2397e4467_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,_8510_i + 1LL);
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8510_i * 2LL,(_8510_i * 2LL) + 2LL);
}



inline jule::Bool _2397e4467_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _2397e4467_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	jule::Str _9992_s = jule::Str();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>();
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			while (_9934_u >= 1000000000LL) {
				{
					jule::U64 _12521_q = jule::unsafe_div(_9934_u,1000000000LL);
					jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
					jule::Int _12725_j = 4LL;
					for (; _12725_j > 0LL; (_12725_j)--) {
						{
							jule::Uint _12925_is = jule::unsafe_mod(_12625_us,100LL) * 2LL;
							_12625_us = jule::unsafe_div(_12625_us,100LL);
							_10613_i-=2LL;
							_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
							_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
						}
					_iter_next_4673288944:;
					}
					_iter_end_4673288944:;
					(_10613_i)--;
					_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
					_9934_u=_12521_q;
				}
			_iter_next_4673287056:;
			}
			_iter_end_4673287056:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		while (_14717_us >= 100LL) {
			{
				jule::Uint _14917_is = jule::unsafe_mod(_14717_us,100LL) * 2LL;
				_14717_us = jule::unsafe_div(_14717_us,100LL);
				_10613_i-=2LL;
				_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
				_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
			}
		_iter_next_4673293632:;
		}
		_iter_end_4673293632:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_2397e4467_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_221ee1e35_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		while (_9934_u >= _17313_b) {
			{
				(_10613_i)--;
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
				_9934_u>>=_17213_shift;
			}
		_iter_next_4673310752:;
		}
		_iter_end_4673310752:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		while (_9934_u >= _18513_b) {
			{
				(_10613_i)--;
				jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
				_9934_u=_19117_q;
			}
		_iter_next_4673312256:;
		}
		_iter_end_4673312256:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[_10613_i]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(_10613_i));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(_10613_i));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _2388c6e74_push_opt_level(jule::Int _3023_level) {
	_2388c6e74_OPT_COPY=_3023_level >= 1LLU;
	_2388c6e74_OPT_DEADCODE=_3023_level >= 1LLU;
	_2388c6e74_OPT_APPEND=_3023_level >= 1LLU;
	_2388c6e74_OPT_MATH=_3023_level >= 1LLU;
	_2388c6e74_OPT_ACCESS=_3023_level >= 1LLU;
	_2388c6e74_OPT_INLINE=_3023_level >= 1LLU;
	_2388c6e74_OPT_PTR=_3023_level >= 1LLU;
}



inline jule::Bool _222197063_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LL) {
		return (_2221ebea8__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LL) != 0LL;
	}
	return _222216247_is_excluding_latin(_2221ebea8_LETTER,_7618_r);
}



inline jule::Bool _222216247_is16(jule::Slice<_222216247_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LL)) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_5637716608:;
			if (it != expr.end()) {
				jule::Int _222216247_i = it - expr.begin();
				{
					_222216247_Range16* _19417_range = (&(_1919_ranges.__at(_222216247_i)));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LL) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_5637716608:;
				++it;
				_222216247_i++;
				goto _iter_begin_5637716608;
			}
			_iter_end_5637716608:;
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::Int _21113_m = _20813_lo + jule::unsafe_div(_20913_hi - _20813_lo,2LL);
			_222216247_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LL) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LL);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
				}
			}
		}
	_iter_next_5637712048:;
	}
	_iter_end_5637712048:;
	return false;
}



inline jule::Bool _222216247_is32(jule::Slice<_222216247_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_5637733760:;
			if (it != expr.end()) {
				jule::Int _222216247_i = it - expr.begin();
				{
					_222216247_Range32* _23117_range = (&(_2289_ranges.__at(_222216247_i)));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LL) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_5637733760:;
				++it;
				_222216247_i++;
				goto _iter_begin_5637733760;
			}
			_iter_end_5637733760:;
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::Int _24813_m = _24513_lo + jule::unsafe_div(_24613_hi - _24513_lo,2LL);
			_222216247_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LL) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LL);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
				}
			}
		}
	_iter_next_5637727024:;
	}
	_iter_end_5637727024:;
	return false;
}



inline jule::Bool _222216247_is_excluding_latin(jule::Ptr<_222216247_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_222216247_Range16> &_28014_r16 = _27823_range_tab->_field_r16;
		jule::Int _28213_off = _27823_range_tab->_field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[_28014_r16.len() - 1LL]._field_hi))) {
			return _222216247_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(_27847_r));
		}
	}
	jule::Slice<_222216247_Range32> &_28710_r32 = _27823_range_tab->_field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo))) {
		return _222216247_is32(_28710_r32,static_cast<jule::U32>(_27847_r));
	}
	return false;
}



inline std::tuple<jule::I32,jule::Int> _2221ee98e_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _2221ee98e_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_2221ee98e_accept_range _1969_accept = _2221ee98e_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline jule::Slice<jule::U8> _2221ee98e_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (_39835_r <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _2221ee98e_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _2221ee98e_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (!((_4079_i <= 2047LLU))) { goto _case_end_5637992848; }
		_case_begin_5637992848:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_5637991168;
		_case_end_5637992848:;
		if (!((_4079_i > 1114111LL) || ((55296LL <= _4079_i) && (_4079_i <= 57343LL)))) { goto _case_end_5637994064; }
		_case_begin_5637994064:;
		{
			_40545_r=65533LL;
			goto _case_begin_5637994160;
		}
		goto _match_end_5637991168;
		_case_end_5637994064:;
		if (!((_4079_i <= 65535LLU))) { goto _case_end_5637994160; }
		_case_begin_5637994160:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_5637991168;
		_case_end_5637994160:;
		_case_begin_5637991296:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_5637991168;
		_case_end_5637991296:;
		_match_end_5637991168:;
	}
}



inline jule::Int _22221b6e2_get_last_fs_error(void) {
	jule::Int _739_err = _2389b599c_get_last_errno();
	{
		auto &_match_expr{ _739_err };
		if (!(_match_expr == (13LL))) { goto _case_end_5638135728; }
		_case_begin_5638135728:;
		{
			return 1LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638135728:;
		if (!(_match_expr == (5LL))) { goto _case_end_5638135824; }
		_case_begin_5638135824:;
		{
			return 2LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638135824:;
		if (!(_match_expr == (40LL))) { goto _case_end_5638135360; }
		_case_begin_5638135360:;
		{
			return 3LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638135360:;
		if (!(_match_expr == (36LL))) { goto _case_end_5638135456; }
		_case_begin_5638135456:;
		{
			return 4LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638135456:;
		if (!(_match_expr == (2LL))) { goto _case_end_5638135552; }
		_case_begin_5638135552:;
		{
			return 5LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638135552:;
		if (!(_match_expr == (20LL))) { goto _case_end_5638135936; }
		_case_begin_5638135936:;
		{
			return 6LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638135936:;
		if (!(_match_expr == (75LL))) { goto _case_end_5638136032; }
		_case_begin_5638136032:;
		{
			return 7LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638136032:;
		if (!(_match_expr == (9LL))) { goto _case_end_5638136128; }
		_case_begin_5638136128:;
		{
			return 8LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638136128:;
		if (!(_match_expr == (24LL))) { goto _case_end_5638134752; }
		_case_begin_5638134752:;
		{
			return 9LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638134752:;
		if (!(_match_expr == (23LL))) { goto _case_end_5638134848; }
		_case_begin_5638134848:;
		{
			return 10LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638134848:;
		if (!(_match_expr == (12LL))) { goto _case_end_5638134944; }
		_case_begin_5638134944:;
		{
			return 11LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638134944:;
		if (!(_match_expr == (17LL))) { goto _case_end_5638135040; }
		_case_begin_5638135040:;
		{
			return 12LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638135040:;
		if (!(_match_expr == (4LL))) { goto _case_end_5638136816; }
		_case_begin_5638136816:;
		{
			return 13LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638136816:;
		if (!(_match_expr == (22LL))) { goto _case_end_5638136912; }
		_case_begin_5638136912:;
		{
			return 14LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638136912:;
		if (!(_match_expr == (21LL))) { goto _case_end_5638137024; }
		_case_begin_5638137024:;
		{
			return 15LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638137024:;
		if (!(_match_expr == (63LL))) { goto _case_end_5638137136; }
		_case_begin_5638137136:;
		{
			return 16LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638137136:;
		if (!(_match_expr == (28LL))) { goto _case_end_5638137248; }
		_case_begin_5638137248:;
		{
			return 17LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638137248:;
		if (!(_match_expr == (6LL))) { goto _case_end_5638137360; }
		_case_begin_5638137360:;
		{
			return 18LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638137360:;
		if (!(_match_expr == (30LL))) { goto _case_end_5638137472; }
		_case_begin_5638137472:;
		{
			return 19LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638137472:;
		if (!(_match_expr == (11LL))) { goto _case_end_5638137584; }
		_case_begin_5638137584:;
		{
			return 20LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638137584:;
		if (!(_match_expr == (26LL) || _match_expr == (16LL))) { goto _case_end_5638137696; }
		_case_begin_5638137696:;
		{
			return 21LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638137696:;
		if (!(_match_expr == (27LL))) { goto _case_end_5638137808; }
		_case_begin_5638137808:;
		{
			return 22LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638137808:;
		if (!(_match_expr == (32LL))) { goto _case_end_5638137920; }
		_case_begin_5638137920:;
		{
			return 23LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638137920:;
		if (!(_match_expr == (34LL))) { goto _case_end_5638138032; }
		_case_begin_5638138032:;
		{
			return 24LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638138032:;
		if (!(_match_expr == (29LL))) { goto _case_end_5638138144; }
		_case_begin_5638138144:;
		{
			return 25LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638138144:;
		if (!(_match_expr == (105LL))) { goto _case_end_5638138256; }
		_case_begin_5638138256:;
		{
			return 26LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638138256:;
		if (!(_match_expr == (74LL))) { goto _case_end_5638138368; }
		_case_begin_5638138368:;
		{
			return 27LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638138368:;
		if (!(_match_expr == (39LL))) { goto _case_end_5638138480; }
		_case_begin_5638138480:;
		{
			return 28LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638138480:;
		_case_begin_5638133392:;
		{
			return 0LLU;
		}
		goto _match_end_5638134256;
		_case_end_5638133392:;
		_match_end_5638134256:;
	}
}



inline jule::Bool _2220dce43_is_unary_op(jule::Str _31420_kind) {
	{
		auto &expr = _2220dce43_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_4680148688:;
		if (it != expr.end()) {
			jule::Str &_2220dce43_op = *it;
			{
				if (_31420_kind == _2220dce43_op) {
					return true;
				}
			}
			_iter_next_4680148688:;
			++it;
			goto _iter_begin_4680148688;
		}
		_iter_end_4680148688:;
	}
	return false;
}



inline jule::Bool _2220dce43_is_bin_op(jule::Str _32518_kind) {
	{
		auto &expr = _2220dce43_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_4680147808:;
		if (it != expr.end()) {
			jule::Str &_2220dce43_op = *it;
			{
				if (_32518_kind == _2220dce43_op) {
					return true;
				}
			}
			_iter_next_4680147808:;
			++it;
			goto _iter_begin_4680147808;
		}
		_iter_end_4680147808:;
	}
	return false;
}



inline jule::Bool _2220dce43_is_str(jule::Str _34715_k) {
	return (_34715_k != jule::Str()) && ((_34715_k[0LL] == '\"') || _2220dce43_is_raw_str(_34715_k));
}



inline jule::Bool _2220dce43_is_raw_str(jule::Str _34919_k) {
	return (_34919_k != jule::Str()) && (_34919_k[0LL] == '`');
}



inline jule::Bool _2220dce43_is_rune(jule::Str _35216_k) {
	return (_35216_k != jule::Str()) && (_35216_k[0LL] == '\'');
}



inline jule::Bool _2220dce43_is_bool(jule::Str _35616_k) {
	return (_35616_k == jule::Str("true", 4)) || (_35616_k == jule::Str("false", 5));
}



inline jule::Bool _2220dce43_contains_any(jule::Str _35817_s,jule::Str _35825_bytes) {
	{
		auto &expr = _35825_bytes;
		auto it = expr.begin();
		_iter_begin_4680164560:;
		if (it != expr.end()) {
			jule::U8 &_2220dce43_b = *it;
			{
				jule::Int _36013_i = _35817_s.find(static_cast<jule::Str>(_2220dce43_b));
				if (_36013_i >= 0LL) {
					return true;
				}
			}
			_iter_next_4680164560:;
			++it;
			goto _iter_begin_4680164560;
		}
		_iter_end_4680164560:;
	}
	return false;
}



inline jule::Bool _2220dce43_is_float(jule::Str _37017_k) {
	if (_37017_k.has_prefix(jule::Str("0x", 2))) {
		return _2220dce43_contains_any(_37017_k,jule::Str(".pP", 3));
	}
	return _2220dce43_contains_any(_37017_k,jule::Str(".eE", 3));
}



inline jule::Bool _2220dce43_is_num(jule::Str _37915_k) {
	if (_37915_k == jule::Str()) {
		return false;
	}
	jule::U8 _3849_b = _37915_k[0LL];
	return (_3849_b == '.') || (('0' <= _3849_b) && (_3849_b <= '9'));
}



inline jule::Bool _2220dce43_is_ignore_ident(jule::Str _39424_ident) {
	return _39424_ident == jule::Str("_", 1);
}



inline jule::Bool _2220dce43_is_anon_ident(jule::Str _39622_ident) {
	return _39622_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _2220dce43_is_space(jule::I32 _41017_r) {
	{
		auto &expr = _2220dce43_SPACES;
		auto it = expr.begin();
		_iter_begin_4680185440:;
		if (it != expr.end()) {
			jule::I32 &_2220dce43_cr = *it;
			{
				if (_41017_r == _2220dce43_cr) {
					return true;
				}
			}
			_iter_next_4680185440:;
			++it;
			goto _iter_begin_4680185440;
		}
		_iter_end_4680185440:;
	}
	return false;
}



inline jule::Bool _2220dce43_is_letter(jule::I32 _42118_r) {
	return _222197063_is_letter(_42118_r);
}



inline jule::Bool _2220dce43_is_decimal(jule::U8 _44319_b) {
	return ('0' <= _44319_b) && (_44319_b <= '9');
}



inline jule::Bool _2220dce43_is_binary(jule::U8 _44518_b) {
	return (_44518_b == '0') || (_44518_b == '1');
}



inline jule::Bool _2220dce43_is_octal(jule::U8 _44717_b) {
	return ('0' <= _44717_b) && (_44717_b <= '7');
}



inline jule::Bool _2220dce43_is_hex(jule::U8 _45015_b) {
	{
		if (!((('0' <= _45015_b) && (_45015_b <= '9')))) { goto _case_end_4680198576; }
		_case_begin_4680198576:;
		{
			return true;
		}
		goto _match_end_4680192800;
		_case_end_4680198576:;
		if (!((('a' <= _45015_b) && (_45015_b <= 'f')))) { goto _case_end_4680198672; }
		_case_begin_4680198672:;
		{
			return true;
		}
		goto _match_end_4680192800;
		_case_end_4680198672:;
		if (!((('A' <= _45015_b) && (_45015_b <= 'F')))) { goto _case_end_4680197360; }
		_case_begin_4680197360:;
		{
			return true;
		}
		goto _match_end_4680192800;
		_case_end_4680197360:;
		_case_begin_4680197008:;
		{
			return false;
		}
		goto _match_end_4680192800;
		_case_end_4680197008:;
		_match_end_4680192800:;
	}
}



inline jule::Bool _2220dce43_is_assign(jule::Uint _46218_id) {
	return ((((((_46218_id == 2LLU) || (_46218_id == 31LLU)) || (_46218_id == 34LLU)) || (_46218_id == 20LLU)) || (_46218_id == 28LLU)) || (_46218_id == 3LLU)) || (_46218_id == 7LLU);
}



inline jule::Bool _2220dce43_is_postfix_op(jule::Str _47522_kind) {
	{
		auto &expr = _2220dce43_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_4680202560:;
		if (it != expr.end()) {
			jule::Str &_2220dce43_op = *it;
			{
				if (_47522_kind == _2220dce43_op) {
					return true;
				}
			}
			_iter_next_4680202560:;
			++it;
			goto _iter_begin_4680202560;
		}
		_iter_end_4680202560:;
	}
	return false;
}



inline jule::Bool _2220dce43_is_assign_op(jule::Str _48621_kind) {
	if (_2220dce43_is_postfix_op(_48621_kind)) {
		return true;
	}
	{
		auto &expr = _2220dce43_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_4680207664:;
		if (it != expr.end()) {
			jule::Str &_2220dce43_op = *it;
			{
				if (_48621_kind == _2220dce43_op) {
					return true;
				}
			}
			_iter_next_4680207664:;
			++it;
			goto _iter_begin_4680207664;
		}
		_iter_end_4680207664:;
	}
	return false;
}



inline jule::Ptr<_22212e407_File> _22212e407_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_22212e407_File>(new( std::nothrow ) _22212e407_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_2220dce43_Token>()));
}



inline _23886c227_Log _221db36ec_make_err(jule::Int _10513_row,jule::Int _10523_col,jule::Ptr<_22212e407_File>& _10534_f,jule::Str _10544_fmt,jule::Slice<jule::Any> _10557_args) {
	return _23886c227_Log(1LLU,_10513_row,_10523_col,_10534_f->_method_path(),_23886c227_logf(_10544_fmt,_10557_args),jule::Str(),jule::Str());
}



inline jule::Bool _221db36ec_bytes_has_prefix(jule::Slice<jule::U8>& _11522_bytes,jule::Str _11537_prefix) {
	if (_11522_bytes.len() < _11537_prefix.len()) {
		return false;
	}
	{
		auto &expr = _11537_prefix;
		auto it = expr.begin();
		_iter_begin_4680219056:;
		if (it != expr.end()) {
			jule::Int _221db36ec_i = it - expr.begin();
			{
				if (_11522_bytes[_221db36ec_i] != _11537_prefix.__at(_221db36ec_i)) {
					return false;
				}
			}
			_iter_next_4680219056:;
			++it;
			_221db36ec_i++;
			goto _iter_begin_4680219056;
		}
		_iter_end_4680219056:;
	}
	return true;
}



inline jule::Str _221db36ec_float_fmt_e(jule::Slice<jule::U8>& _12717_txt,jule::Int _12734_i) {
	jule::Str _12744_lit = jule::Str();
	(_12734_i)++;
	if (_12734_i >= _12717_txt.len()) {
		return _12744_lit;
	}
	jule::U8 _13313_b = _12717_txt[_12734_i];
	if ((_13313_b == '+') || (_13313_b == '-')) {
		(_12734_i)++;
		if (_12734_i >= _12717_txt.len()) {
			return _12744_lit;
		}
	}
	jule::Int _1419_first = _12734_i;
	for (; _12734_i < _12717_txt.len(); (_12734_i)++) {
		{
			_13313_b=_12717_txt[_12734_i];
			if ((!(_2220dce43_is_decimal(_13313_b)))) {
				goto _iter_end_4680227136;
			}
		}
	_iter_next_4680227136:;
	}
	_iter_end_4680227136:;
	if (_12734_i == _1419_first) {
		_12744_lit = jule::Str();
		return _12744_lit;
	}
	_12744_lit = static_cast<jule::Str>(_12717_txt.slice(0LL,_12734_i));
	return _12744_lit;
}



inline jule::Str _221db36ec_float_fmt_p(jule::Slice<jule::U8>& _15517_txt,jule::Int _15530_i) {
	return _221db36ec_float_fmt_e(_15517_txt,_15530_i);
}



inline jule::Str _221db36ec_float_fmt_dotnp(jule::Slice<jule::U8>& _15721_txt,jule::Int _15738_i) {
	if (_15721_txt[_15738_i] != '.') {
		return jule::Str();
	}
	(_15738_i)++;
	_julec_label_loop:;
	for (; _15738_i < _15721_txt.len(); (_15738_i)++) {
		{
			jule::U8 _16513_b = _15721_txt[_15738_i];
			{
				if (!((_2220dce43_is_decimal(_16513_b)))) { goto _case_end_4680915728; }
				_case_begin_4680915728:;
				{
					goto _iter_next_4680907008;
				}
				goto _match_end_4680915264;
				_case_end_4680915728:;
				if (!((_221db36ec_is_float_fmt_p(_16513_b,_15738_i)))) { goto _case_end_4680915824; }
				_case_begin_4680915824:;
				{
					return _221db36ec_float_fmt_p(_15721_txt,_15738_i);
				}
				goto _match_end_4680915264;
				_case_end_4680915824:;
				_case_begin_4680915376:;
				{
					goto _iter_end_4680907008;
				}
				goto _match_end_4680915264;
				_case_end_4680915376:;
				_match_end_4680915264:;
			}
		}
	_iter_next_4680907008:;
	}
	_iter_end_4680907008:;
	return jule::Str();
}



inline jule::Str _221db36ec_float_fmt_dotfp(jule::Slice<jule::U8>& _17521_txt,jule::Int _17538_i) {
	_17538_i+=2LL;
	return _221db36ec_float_fmt_e(_17521_txt,_17538_i);
}



inline jule::Str _221db36ec_float_fmt_dotp(jule::Slice<jule::U8>& _18220_txt,jule::Int _18237_i) {
	(_18237_i)++;
	return _221db36ec_float_fmt_e(_18220_txt,_18237_i);
}



inline jule::Str _221db36ec_float_num(jule::Slice<jule::U8>& _18915_txt,jule::Int _18932_i) {
	jule::Str _18942_lit = jule::Str();
	(_18932_i)++;
	for (; _18932_i < _18915_txt.len(); (_18932_i)++) {
		{
			jule::U8 _19213_b = _18915_txt[_18932_i];
			if ((_18932_i > 1LL) && ((_19213_b == 'e') || (_19213_b == 'E'))) {
				_18942_lit = _221db36ec_float_fmt_e(_18915_txt,_18932_i);
				return _18942_lit;
			}
			if ((!(_2220dce43_is_decimal(_19213_b)))) {
				goto _iter_end_4680922240;
			}
		}
	_iter_next_4680922240:;
	}
	_iter_end_4680922240:;
	if (_18932_i == 1LL) {
		return _18942_lit;
	}
	_18942_lit = static_cast<jule::Str>(_18915_txt.slice(0LL,_18932_i));
	return _18942_lit;
}



inline jule::Str _221db36ec_common_num(jule::Slice<jule::U8>& _20716_txt) {
	jule::Str _20731_lit = jule::Str();
	jule::Int _20813_i = 0LL;
	_julec_label_loop:;
	for (; _20813_i < _20716_txt.len(); (_20813_i)++) {
		{
			jule::U8 _21113_b = _20716_txt[_20813_i];
			{
				if (!((_21113_b == '.'))) { goto _case_end_4680934912; }
				_case_begin_4680934912:;
				{
					_20731_lit = _221db36ec_float_num(_20716_txt,_20813_i);
					return _20731_lit;
				}
				goto _match_end_4680934736;
				_case_end_4680934912:;
				if (!((_221db36ec_is_float_fmt_e(_21113_b,_20813_i)))) { goto _case_end_4680935024; }
				_case_begin_4680935024:;
				{
					_20731_lit = _221db36ec_float_fmt_e(_20716_txt,_20813_i);
					return _20731_lit;
				}
				goto _match_end_4680934736;
				_case_end_4680935024:;
				if (!(((!(_2220dce43_is_decimal(_21113_b)))))) { goto _case_end_4680935136; }
				_case_begin_4680935136:;
				{
					goto _iter_end_4680932224;
				}
				goto _match_end_4680934736;
				_case_end_4680935136:;
				_match_end_4680934736:;
			}
		}
	_iter_next_4680932224:;
	}
	_iter_end_4680932224:;
	if (_20813_i == 0LL) {
		return _20731_lit;
	}
	_20731_lit = static_cast<jule::Str>(_20716_txt.slice(0LL,_20813_i));
	return _20731_lit;
}



inline jule::Str _221db36ec_binary_num(jule::Slice<jule::U8>& _22516_txt) {
	jule::Str _22531_lit = jule::Str();
	if ((!(_221db36ec_bytes_has_prefix(_22516_txt,jule::Str("0b", 2))))) {
		_22531_lit = jule::Str();
		return _22531_lit;
	}
	if (_22516_txt.len() < 2LL) {
		return _22531_lit;
	}
	
	jule::Int _23413_i = 2LL;
	for (; _23413_i < _22516_txt.len(); (_23413_i)++) {
		{
			if ((!(_2220dce43_is_binary(_22516_txt[_23413_i])))) {
				goto _iter_end_4680942976;
			}
		}
	_iter_next_4680942976:;
	}
	_iter_end_4680942976:;
	if (_23413_i == 2LL) {
		return _22531_lit;
	}
	_22531_lit = static_cast<jule::Str>(_22516_txt.slice(0LL,_23413_i));
	return _22531_lit;
}



inline jule::Bool _221db36ec_is_float_fmt_e(jule::U8 _24719_b,jule::Int _24728_i) {
	return (_24728_i > 0LL) && ((_24719_b == 'e') || (_24719_b == 'E'));
}



inline jule::Bool _221db36ec_is_float_fmt_p(jule::U8 _24819_b,jule::Int _24828_i) {
	return (_24828_i > 0LL) && ((_24819_b == 'p') || (_24819_b == 'P'));
}



inline jule::Bool _221db36ec_is_float_fmt_dotnp(jule::Slice<jule::U8>& _25024_txt,jule::Int _25041_i) {
	if (_25024_txt[_25041_i] != '.') {
		return false;
	}
	(_25041_i)++;
	_julec_label_loop:;
	for (; _25041_i < _25024_txt.len(); (_25041_i)++) {
		{
			jule::U8 _25813_b = _25024_txt[_25041_i];
			{
				if (!((_2220dce43_is_decimal(_25813_b)))) { goto _case_end_4680958384; }
				_case_begin_4680958384:;
				{
					goto _iter_next_4680951008;
				}
				goto _match_end_4680957920;
				_case_end_4680958384:;
				if (!((_221db36ec_is_float_fmt_p(_25813_b,_25041_i)))) { goto _case_end_4680958480; }
				_case_begin_4680958480:;
				{
					return true;
				}
				goto _match_end_4680957920;
				_case_end_4680958480:;
				_case_begin_4680958032:;
				{
					goto _iter_end_4680951008;
				}
				goto _match_end_4680957920;
				_case_end_4680958032:;
				_match_end_4680957920:;
			}
		}
	_iter_next_4680951008:;
	}
	_iter_end_4680951008:;
	return false;
}



inline jule::Bool _221db36ec_is_float_fmt_dotp(jule::Slice<jule::U8>& _26923_txt,jule::Int _26936_i) {
	{
		if (!((_26923_txt.len() < 3LL))) { goto _case_end_4680964208; }
		_case_begin_4680964208:;
		{
			goto _case_begin_4680964304;
		}
		goto _match_end_4680962368;
		_case_end_4680964208:;
		if (!((_26923_txt[_26936_i] != '.'))) { goto _case_end_4680964304; }
		_case_begin_4680964304:;
		{
			goto _case_begin_4680962848;
		}
		goto _match_end_4680962368;
		_case_end_4680964304:;
		if (!(((_26923_txt[_26936_i + 1LL] != 'p') && (_26923_txt[_26936_i + 1LL] != 'P')))) { goto _case_end_4680962848; }
		_case_begin_4680962848:;
		{
			return false;
		}
		goto _match_end_4680962368;
		_case_end_4680962848:;
		_case_begin_4680962544:;
		{
			return true;
		}
		goto _match_end_4680962368;
		_case_end_4680962544:;
		_match_end_4680962368:;
	}
}



inline jule::Bool _221db36ec_is_float_fmt_dotfp(jule::Slice<jule::U8>& _27824_txt,jule::Int _27837_i) {
	{
		if (!((_27824_txt.len() < 4LL))) { goto _case_end_4680971024; }
		_case_begin_4680971024:;
		{
			goto _case_begin_4680971120;
		}
		goto _match_end_4680969168;
		_case_end_4680971024:;
		if (!((_27824_txt[_27837_i] != '.'))) { goto _case_end_4680971120; }
		_case_begin_4680971120:;
		{
			goto _case_begin_4680969664;
		}
		goto _match_end_4680969168;
		_case_end_4680971120:;
		if (!(((_27824_txt[_27837_i + 1LL] != 'f') && (_27824_txt[_27837_i + 1LL] != 'F')))) { goto _case_end_4680969664; }
		_case_begin_4680969664:;
		{
			goto _case_begin_4680969776;
		}
		goto _match_end_4680969168;
		_case_end_4680969664:;
		if (!(((_27824_txt[_27837_i + 2LL] != 'p') && (_27824_txt[_27837_i + 1LL] != 'P')))) { goto _case_end_4680969776; }
		_case_begin_4680969776:;
		{
			return false;
		}
		goto _match_end_4680969168;
		_case_end_4680969776:;
		_case_begin_4680969344:;
		{
			return true;
		}
		goto _match_end_4680969168;
		_case_end_4680969344:;
		_match_end_4680969168:;
	}
}



inline jule::Str _221db36ec_octal_num(jule::Slice<jule::U8>& _28815_txt) {
	jule::Str _28830_lit = jule::Str();
	if (_28815_txt[0LL] != '0') {
		_28830_lit = jule::Str();
		return _28830_lit;
	}
	if (_28815_txt.len() < 2LL) {
		return _28830_lit;
	}
	jule::Int _29613_octal_start = 1LL;
	if (_28815_txt[1LL] == 'o') {
		if (_28815_txt.len() < 3LL) {
			return _28830_lit;
		}
		(_29613_octal_start)++;
	}
	jule::Int _30513_i = _29613_octal_start;
	for (; _30513_i < _28815_txt.len(); (_30513_i)++) {
		{
			jule::U8 _30713_b = _28815_txt[_30513_i];
			if (_221db36ec_is_float_fmt_e(_30713_b,_30513_i)) {
				_28830_lit = _221db36ec_float_fmt_e(_28815_txt,_30513_i);
				return _28830_lit;
			}
			if ((!(_2220dce43_is_octal(_30713_b)))) {
				goto _iter_end_4680982288;
			}
		}
	_iter_next_4680982288:;
	}
	_iter_end_4680982288:;
	if (_30513_i == _29613_octal_start) {
		return _28830_lit;
	}
	_28830_lit = static_cast<jule::Str>(_28815_txt.slice(0LL,_30513_i));
	return _28830_lit;
}



inline jule::Str _221db36ec_hex_num(jule::Slice<jule::U8>& _32213_txt) {
	jule::Str _32228_lit = jule::Str();
	if (_32213_txt.len() < 3LL) {
		return _32228_lit;
	}
	if ((_32213_txt[0LL] != '0') || ((_32213_txt[1LL] != 'x') && (_32213_txt[1LL] != 'X'))) {
		return _32228_lit;
	}
	
	jule::Int _33113_i = 2LL;
	_julec_label_loop:;
	for (; _33113_i < _32213_txt.len(); (_33113_i)++) {
		{
			jule::U8 _33413_b = _32213_txt[_33113_i];
			{
				if (!((_221db36ec_is_float_fmt_dotp(_32213_txt,_33113_i)))) { goto _case_end_4680998816; }
				_case_begin_4680998816:;
				{
					_32228_lit = _221db36ec_float_fmt_dotp(_32213_txt,_33113_i);
					return _32228_lit;
				}
				goto _match_end_4680998608;
				_case_end_4680998816:;
				if (!((_221db36ec_is_float_fmt_dotfp(_32213_txt,_33113_i)))) { goto _case_end_4680998928; }
				_case_begin_4680998928:;
				{
					_32228_lit = _221db36ec_float_fmt_dotfp(_32213_txt,_33113_i);
					return _32228_lit;
				}
				goto _match_end_4680998608;
				_case_end_4680998928:;
				if (!((_221db36ec_is_float_fmt_p(_33413_b,_33113_i)))) { goto _case_end_4680999040; }
				_case_begin_4680999040:;
				{
					_32228_lit = _221db36ec_float_fmt_p(_32213_txt,_33113_i);
					return _32228_lit;
				}
				goto _match_end_4680998608;
				_case_end_4680999040:;
				if (!((_221db36ec_is_float_fmt_dotnp(_32213_txt,_33113_i)))) { goto _case_end_4680999152; }
				_case_begin_4680999152:;
				{
					_32228_lit = _221db36ec_float_fmt_dotnp(_32213_txt,_33113_i);
					return _32228_lit;
				}
				goto _match_end_4680998608;
				_case_end_4680999152:;
				if (!(((!(_2220dce43_is_hex(_33413_b)))))) { goto _case_end_4680999264; }
				_case_begin_4680999264:;
				{
					goto _iter_end_4680996160;
				}
				goto _match_end_4680998608;
				_case_end_4680999264:;
				_match_end_4680998608:;
			}
		}
	_iter_next_4680996160:;
	}
	_iter_end_4680996160:;
	if (_33113_i == 2LL) {
		return _32228_lit;
	}
	_32228_lit = static_cast<jule::Str>(_32213_txt.slice(0LL,_33113_i));
	return _32228_lit;
}



inline jule::Str _221db36ec_hex_escape(jule::Slice<jule::U8>& _35916_txt,jule::Int _35929_n) {
	jule::Str _35939_seq = jule::Str();
	if (_35916_txt.len() < _35929_n) {
		return _35939_seq;
	}
	
	jule::Int _36513_i = 2LL;
	for (; _36513_i < _35929_n; (_36513_i)++) {
		{
			if ((!(_2220dce43_is_hex(_35916_txt[_36513_i])))) {
				return _35939_seq;
			}
		}
	_iter_next_4681007168:;
	}
	_iter_end_4681007168:;
	_35939_seq=static_cast<jule::Str>(_35916_txt.slice(0LL,_35929_n));
	return _35939_seq;
}



inline jule::Str _221db36ec_big_unicode_point_escape(jule::Slice<jule::U8>& _37730_txt) {
	return _221db36ec_hex_escape(_37730_txt,10LL);
}



inline jule::Str _221db36ec_little_unicode_point_escape(jule::Slice<jule::U8>& _37933_txt) {
	return _221db36ec_hex_escape(_37933_txt,6LL);
}



inline jule::Str _221db36ec_hex_byte_escape(jule::Slice<jule::U8>& _38121_txt) {
	return _221db36ec_hex_escape(_38121_txt,4LL);
}



inline jule::Str _221db36ec_byte_escape(jule::Slice<jule::U8>& _38417_txt) {
	jule::Str _38432_seq = jule::Str();
	if (_38417_txt.len() < 4LL) {
		return _38432_seq;
	}
	if (((!(_2220dce43_is_octal(_38417_txt[1LL]))) || (!(_2220dce43_is_octal(_38417_txt[2LL])))) || (!(_2220dce43_is_octal(_38417_txt[3LL])))) {
		return _38432_seq;
	}
	_38432_seq = static_cast<jule::Str>(_38417_txt.slice(0LL,4LL));
	return _38432_seq;
}



inline jule::Slice<_23886c227_Log> _221db36ec_lex(jule::Ptr<_22212e407_File> _78016_f) {
	if (_78016_f == nullptr) {
		return nullptr;
	}
	_221db36ec_Lex _78513_lex = _221db36ec_Lex(jule::Slice<_2220dce43_Token>(),_78016_f,0LL,jule::Int(),-1LL,jule::Slice<_23886c227_Log>());
	_78513_lex._method_new_line();
	_78513_lex._method_lex();
	if (_78513_lex._field_errors.len() > 0LL) {
		return _78513_lex._field_errors;
	}
	_78016_f->_field__tokens=_78513_lex._field_tokens;
	return nullptr;
}



inline jule::Ptr<_221e0ec98_FileInfo> _221e0ec98_parse_file(jule::Ptr<_22212e407_File> _2223_f) {
	if (_2223_f == nullptr) {
		return nullptr;
	}
	jule::Ptr<_221e0ec98_FileInfo> _2713_finf = jule::new_struct<_221e0ec98_FileInfo>(new( std::nothrow ) _221e0ec98_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _221e0ec98_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		_2713_finf->_field_ast=nullptr;
	}
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_221d8c242_Ast>,jule::Slice<_23886c227_Log>> _221e0ec98_parse_fileset(jule::Ptr<_22212e407_File> _5822_f) {
	jule::Ptr<_222e5128e_Parser> _5913_p = jule::new_struct_ptr<_222e5128e_Parser>(new( std::nothrow ) _222e5128e_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



inline jule::Ptr<_221d8b043_ScopeTree> _221e8c8b4_new_scope(void) {
	return jule::new_struct<_221d8b043_ScopeTree>(new( std::nothrow ) _221d8b043_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _221e8c8b4_is_st(_2220dce43_Token _4610_current,_2220dce43_Token _4626_prev) {
	jule::Bool _4641_ok = jule::Bool();
	jule::Bool _4651_terminated = jule::Bool();
	_4641_ok=(_4610_current._field_id == 5LLU) || (_4626_prev._field_row < _4610_current._field_row);
	_4651_terminated=_4610_current._field_id == 5LLU;
	return std::make_tuple(_4641_ok,_4651_terminated);
}



inline jule::Bool _221e8c8b4_prev_is_incomplete_expr(jule::Slice<_2220dce43_Token>& _5229_tokens,jule::Int& _5247_i) {
	if ((_5247_i > 1LL) && (_5229_tokens[_5247_i - 2LL]._field_id == 23LLU)) {
		return false;
	}
	{
		_2220dce43_Token* _5913_prev = (&(_5229_tokens[_5247_i - 1LL]));
		return (_5913_prev->_field_id == 20LLU) || (((_5913_prev->_field_id == 7LLU) && _2220dce43_is_bin_op(_5913_prev->_field_kind)) && (_5913_prev->_field_row < _5229_tokens[_5247_i]._field_row));
	}
}



inline std::tuple<jule::Int,jule::Bool> _221e8c8b4_next_st_pos(jule::Slice<_2220dce43_Token>& _6817_tokens,jule::Int _6834_start) {
	jule::Int _6913_brace_n = 0LL;
	jule::Int _7013_i = _6834_start;
	for (; _7013_i < _6817_tokens.len(); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;
			jule::Bool _7317_terminated = false;
			_2220dce43_Token _7413_tok = _6817_tokens[_7013_i];
			{
				auto &_match_expr{ _7413_tok._field_id };
				if (!(_match_expr == (3LLU))) { goto _case_end_4681688576; }
				_case_begin_4681688576:;
				{
					{
						auto &_match_expr{ _7413_tok._field_kind };
						if (!(_match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4681697952; }
						_case_begin_4681697952:;
						{
							if ((_6913_brace_n == 0LL) && (_7013_i > _6834_start)) {
								if ((!(_221e8c8b4_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
									std::tie(_7217_ok,_7317_terminated) = _221e8c8b4_is_st(_7413_tok,_6817_tokens[_7013_i - 1LL]);
									if (_7217_ok) {
										goto _julec_label_return;
									}
								}
							}
							(_6913_brace_n)++;
						}
						goto _match_end_4681693248;
						_case_end_4681697952:;
						_case_begin_4681691696:;
						{
							(_6913_brace_n)--;
							if ((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < _6817_tokens.len())) {
								std::tie(_7217_ok,_7317_terminated) = _221e8c8b4_is_st(_6817_tokens[_7013_i + 1LL],_7413_tok);
								if (_7217_ok) {
									(_7013_i)++;
									goto _julec_label_return;
								}
							}
						}
						goto _match_end_4681693248;
						_case_end_4681691696:;
						_match_end_4681693248:;
					}
					goto _iter_next_4681686576;
				}
				goto _match_end_4681691584;
				_case_end_4681688576:;
				_match_end_4681691584:;
			}
			if (_6913_brace_n != 0LL) {
				goto _iter_next_4681686576;
			}
			if (_7013_i > _6834_start) {
				if (_221e8c8b4_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_4681686576;
				}
				std::tie(_7217_ok,_7317_terminated) = _221e8c8b4_is_st(_7413_tok,_6817_tokens[_7013_i - 1LL]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _221e8c8b4_is_st(_7413_tok,_7413_tok);
			}
			if ((!(_7217_ok))) {
				goto _iter_next_4681686576;
			}
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			}
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_4681686576:;
	}
	_iter_end_4681686576:;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<_2220dce43_Token>,jule::Bool> _221e8c8b4_skip_st(jule::Int& _13117_i,jule::Slice<_2220dce43_Token> _13129_tokens) {
	jule::Int _1329_start = _13117_i;
	jule::Bool _13313_terminated = false;
	std::tie(_13117_i,_13313_terminated) = _221e8c8b4_next_st_pos(_13129_tokens,_1329_start);
	jule::Slice<_2220dce43_Token> _13513_st_tokens = _13129_tokens.slice(_1329_start,_13117_i);
	if (_13313_terminated) {
		if (_13513_st_tokens.len() == 1LL) {
			std::tie(_13513_st_tokens,_13313_terminated) = _221e8c8b4_skip_st(_13117_i,_13129_tokens);
			return std::make_tuple(_13513_st_tokens,_13313_terminated);
		}
		_13513_st_tokens=_13513_st_tokens.slice(0LL,_13513_st_tokens.len() - 1LL);
	}
	return std::make_tuple(_13513_st_tokens,_13313_terminated);
}



inline jule::Slice<jule::Ptr<_221e8c8b4_Stmt>> _221e8c8b4_split_stmts(jule::Slice<_2220dce43_Token>& _15321_tokens) {
	jule::Slice<jule::Ptr<_221e8c8b4_Stmt>> _15413_stms = nullptr;
	jule::Int _15513_pos = 0LL;
	while (_15513_pos < _15321_tokens.len()) {
		{
			jule::Slice<_2220dce43_Token> _15718_tokens;
			jule::Bool _15726_terminated;
			std::tie(_15718_tokens,_15726_terminated) = _221e8c8b4_skip_st(_15513_pos,_15321_tokens);
			_15413_stms.push(jule::new_struct<_221e8c8b4_Stmt>(new( std::nothrow ) _221e8c8b4_Stmt(_15718_tokens,_15726_terminated)));
		}
	_iter_next_4681717824:;
	}
	_iter_end_4681717824:;
	return _15413_stms;
}



inline jule::Ptr<_23999731d_CallData> _23999731d_get_call_data(jule::Slice<_2220dce43_Token>& _4523_tokens) {
	jule::Ptr<_23999731d_CallData> _4613_data = jule::new_struct<_23999731d_CallData>(new( std::nothrow ) _23999731d_CallData());
	std::tie(_4613_data->_field_expr_tokens,_4613_data->_field_args_tokens) = _222e5128e_range_last(_4523_tokens);
	if (_4613_data->_field_expr_tokens.len() == 0LL) {
		return _4613_data;
	}
	_2220dce43_Token _539_token = _4613_data->_field_expr_tokens[_4613_data->_field_expr_tokens.len() - 1LL];
	if ((_539_token._field_id == 3LLU) && (_539_token._field_kind == jule::Str("]", 1))) {
		std::tie(_4613_data->_field_expr_tokens,_4613_data->_field_generics_tokens) = _222e5128e_range_last(_4613_data->_field_expr_tokens);
	}
	return _4613_data;
}



inline jule::Slice<_2220dce43_Token> _23999731d_get_block_expr(jule::Slice<_2220dce43_Token>& _6124_tokens) {
	jule::Int _6213_brace_n = 0LL;
	jule::Int _6313_skip_to_next_brace_close = 0LL;
	{
		auto &expr = _6124_tokens;
		auto it = expr.begin();
		_iter_begin_4681738288:;
		if (it != expr.end()) {
			jule::Int _23999731d_i = it - expr.begin();
			_2220dce43_Token &_23999731d_tok = *it;
			{
				{
					auto &_match_expr{ _23999731d_tok._field_id };
					if (!(_match_expr == (16LLU) || _match_expr == (17LLU) || _match_expr == (35LLU))) { goto _case_end_4681741008; }
					_case_begin_4681741008:;
					{
						(_6313_skip_to_next_brace_close)++;
					}
					goto _match_end_4681740928;
					_case_end_4681741008:;
					if (!(_match_expr == (3LLU))) { goto _case_end_4681741104; }
					_case_begin_4681741104:;
					{
						{
							auto &_match_expr{ _23999731d_tok._field_kind };
							if (!(_match_expr == (jule::Str("{", 1)))) { goto _case_end_4681744800; }
							_case_begin_4681744800:;
							{
								if ((_6213_brace_n > 0LL) || (_6313_skip_to_next_brace_close > 0LL)) {
									if (_6313_skip_to_next_brace_close > 0LL) {
										(_6313_skip_to_next_brace_close)--;
									}
									(_6213_brace_n)++;
									goto _match_end_4681742736;
								}
								return _6124_tokens.slice(0LL,_23999731d_i);
							}
							goto _match_end_4681742736;
							_case_end_4681744800:;
							if (!(_match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4681745360; }
							_case_begin_4681745360:;
							{
								(_6213_brace_n)++;
							}
							goto _match_end_4681742736;
							_case_end_4681745360:;
							_case_begin_4681741264:;
							{
								(_6213_brace_n)--;
							}
							goto _match_end_4681742736;
							_case_end_4681741264:;
							_match_end_4681742736:;
						}
					}
					goto _match_end_4681740928;
					_case_end_4681741104:;
					_match_end_4681740928:;
				}
			}
			_iter_next_4681738288:;
			++it;
			_23999731d_i++;
			goto _iter_begin_4681738288;
		}
		_iter_end_4681738288:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_2220dce43_Token>,jule::Slice<_2220dce43_Token>> _23999731d_split_colon(jule::Slice<_2220dce43_Token>& _9521_tokens) {
	jule::Int _9613_range_n = 0LL;
	{
		auto &expr = _9521_tokens;
		auto it = expr.begin();
		_iter_begin_4681739904:;
		if (it != expr.end()) {
			jule::Int _23999731d_i = it - expr.begin();
			_2220dce43_Token &_23999731d_token = *it;
			{
				{
					auto &_match_expr{ _23999731d_token._field_id };
					if (!(_match_expr == (3LLU))) { goto _case_end_4681751232; }
					_case_begin_4681751232:;
					{
						{
							auto &_match_expr{ _23999731d_token._field_kind };
							if (!(_match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4681754416; }
							_case_begin_4681754416:;
							{
								(_9613_range_n)++;
								goto _iter_next_4681739904;
							}
							goto _match_end_4681753008;
							_case_end_4681754416:;
							_case_begin_4681751456:;
							{
								(_9613_range_n)--;
							}
							goto _match_end_4681753008;
							_case_end_4681751456:;
							_match_end_4681753008:;
						}
					}
					goto _match_end_4681751152;
					_case_end_4681751232:;
					if (!(_match_expr == (11LLU))) { goto _case_end_4681751328; }
					_case_begin_4681751328:;
					{
						if (_9613_range_n < 1LL) {
							jule::Slice<_2220dce43_Token> _11325_l = _9521_tokens.slice(0LL,_23999731d_i);
							jule::Slice<_2220dce43_Token> _11425_r = _9521_tokens.slice(_23999731d_i + 1LL);
							return std::make_tuple(_11325_l,_11425_r);
						}
					}
					goto _match_end_4681751152;
					_case_end_4681751328:;
					_match_end_4681751152:;
				}
			}
			_iter_next_4681739904:;
			++it;
			_23999731d_i++;
			goto _iter_begin_4681739904;
		}
		_iter_end_4681739904:;
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_2220dce43_Token> _23999731d_eliminate_comments(jule::Slice<_2220dce43_Token>& _15328_tokens) {
	jule::Slice<_2220dce43_Token> _15413_cutted = nullptr;
	{
		auto &expr = _15328_tokens;
		auto it = expr.begin();
		_iter_begin_4681760032:;
		if (it != expr.end()) {
			_2220dce43_Token _23999731d_token = *it;
			{
				if (_23999731d_token._field_id != 18LLU) {
					_15413_cutted.push(_23999731d_token);
				}
			}
			_iter_next_4681760032:;
			++it;
			goto _iter_begin_4681760032;
		}
		_iter_end_4681760032:;
	}
	return _15413_cutted;
}



inline jule::Int _23999731d_find_lowest_prec_op(jule::Slice<_2220dce43_Token>& _16525_tokens) {
	_23999731d_Precedencer _16613_prec = _23999731d_Precedencer();
	jule::Int _16713_brace_n = 0LL;
	jule::Bool _16813_skip_to_next_brace_open = false;
	{
		auto &expr = _16525_tokens;
		auto it = expr.begin();
		_iter_begin_4681767472:;
		if (it != expr.end()) {
			jule::Int _23999731d_i = it - expr.begin();
			_2220dce43_Token &_23999731d_token = *it;
			{
				{
					if (!((_23999731d_token._field_id == 3LLU))) { goto _case_end_4681769984; }
					_case_begin_4681769984:;
					{
						{
							auto &_match_expr{ _23999731d_token._field_kind };
							if (!(_match_expr == (jule::Str("{", 1)))) { goto _case_end_4681774112; }
							_case_begin_4681774112:;
							{
								_16813_skip_to_next_brace_open=false;
								goto _case_begin_4681773520;
							}
							goto _match_end_4681772672;
							_case_end_4681774112:;
							if (!(_match_expr == (jule::Str("(", 1)) || _match_expr == (jule::Str("[", 1)))) { goto _case_end_4681773520; }
							_case_begin_4681773520:;
							{
								(_16713_brace_n)++;
							}
							goto _match_end_4681772672;
							_case_end_4681773520:;
							_case_begin_4681770704:;
							{
								(_16713_brace_n)--;
							}
							goto _match_end_4681772672;
							_case_end_4681770704:;
							_match_end_4681772672:;
						}
						goto _iter_next_4681767472;
					}
					goto _match_end_4681769696;
					_case_end_4681769984:;
					if (!((_16813_skip_to_next_brace_open))) { goto _case_end_4681770096; }
					_case_begin_4681770096:;
					{
						goto _iter_next_4681767472;
					}
					goto _match_end_4681769696;
					_case_end_4681770096:;
					if (!((_23999731d_token._field_id == 16LLU))) { goto _case_end_4681770208; }
					_case_begin_4681770208:;
					{
						_16813_skip_to_next_brace_open=true;
						goto _iter_next_4681767472;
					}
					goto _match_end_4681769696;
					_case_end_4681770208:;
					if (!((_23999731d_i == 0LL))) { goto _case_end_4681770320; }
					_case_begin_4681770320:;
					{
						goto _iter_next_4681767472;
					}
					goto _match_end_4681769696;
					_case_end_4681770320:;
					if (!((_23999731d_token._field_id != 7LLU))) { goto _case_end_4681770432; }
					_case_begin_4681770432:;
					{
						goto _iter_next_4681767472;
					}
					goto _match_end_4681769696;
					_case_end_4681770432:;
					if (!((_16713_brace_n > 0LL))) { goto _case_end_4681770544; }
					_case_begin_4681770544:;
					{
						goto _iter_next_4681767472;
					}
					goto _match_end_4681769696;
					_case_end_4681770544:;
					_match_end_4681769696:;
				}
				_2220dce43_Token _20313_left = _16525_tokens[_23999731d_i - 1LL];
				if ((_20313_left._field_id == 7LLU) || (_20313_left._field_id == 11LLU)) {
					goto _iter_next_4681767472;
				}
				if (((_23999731d_i > 1LL) && (_20313_left._field_id == 3LLU)) && (_20313_left._field_kind == jule::Str("]", 1))) {
					_2220dce43_Token _21117_lleft = _16525_tokens[_23999731d_i - 2LL];
					if ((_21117_lleft._field_id == 3LLU) && (_21117_lleft._field_kind == jule::Str("[", 1))) {
						if ((_23999731d_token._field_kind == jule::Str("&", 1)) || (_23999731d_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_4681767472;
						}
					}
				}
				jule::Int _22013_p = _23999731d_token._method_prec();
				if (_22013_p != -1LL) {
					_16613_prec._method_set(_22013_p,jule::Any(_23999731d_i));
				}
			}
			_iter_next_4681767472:;
			++it;
			_23999731d_i++;
			goto _iter_begin_4681767472;
		}
		_iter_end_4681767472:;
	}
	jule::Any _2269_data = _16613_prec._method_get_lower();
	if (_2269_data == nullptr) {
		return -1LL;
	}
	return _2269_data.operator jule::Int();
}



inline jule::Ptr<_221d8b043_IdentExpr> _23999731d_build_ident_expr(_2220dce43_Token& _23326_token) {
	return jule::new_struct<_221d8b043_IdentExpr>(new( std::nothrow ) _221d8b043_IdentExpr(_23326_token,_23326_token._field_kind,false));
}



inline std::tuple<jule::Slice<_2220dce43_Token>,jule::Int> _23999731d_get_range_expr_tokens(jule::Slice<_2220dce43_Token>& _24131_tokens) {
	jule::Int _24213_range_n = 0LL;
	jule::I64 _24313_i = _24131_tokens.len() - 1LL;
	for (; _24313_i >= 0LL; (_24313_i)--) {
		{
			_2220dce43_Token _24513_tok = _24131_tokens[_24313_i];
			if (_24513_tok._field_id == 3LLU) {
				{
					auto &_match_expr{ _24513_tok._field_kind };
					if (!(_match_expr == (jule::Str("}", 1)) || _match_expr == (jule::Str("]", 1)) || _match_expr == (jule::Str(")", 1)))) { goto _case_end_4681801920; }
					_case_begin_4681801920:;
					{
						(_24213_range_n)++;
					}
					goto _match_end_4681800544;
					_case_end_4681801920:;
					_case_begin_4681799856:;
					{
						(_24213_range_n)--;
					}
					goto _match_end_4681800544;
					_case_end_4681799856:;
					_match_end_4681800544:;
				}
			}
			if (_24213_range_n == 0LL) {
				return std::make_tuple(_24131_tokens.slice(0LL,_24313_i),_24213_range_n);
			}
		}
	_iter_next_4681794848:;
	}
	_iter_end_4681794848:;
	return std::make_tuple(nullptr,_24213_range_n);
}



inline jule::Bool _222d4854e_check_assign_tokens(jule::Slice<_2220dce43_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_2220dce43_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_4681807888:;
		if (it != expr.end()) {
			_2220dce43_Token &_222d4854e_t = *it;
			{
				if (_222d4854e_t._field_id == 3LLU) {
					{
						auto &_match_expr{ _222d4854e_t._field_kind };
						if (!(_match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4681812064; }
						_case_begin_4681812064:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_4681810688;
						_case_end_4681812064:;
						_case_begin_4681810000:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_4681810688;
						_case_end_4681810000:;
						_match_end_4681810688:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_4681807888;
				} else if ((_222d4854e_t._field_id == 7LLU) && _2220dce43_is_assign_op(_222d4854e_t._field_kind)) {
					return true;
				}
			}
			_iter_next_4681807888:;
			++it;
			goto _iter_begin_4681807888;
		}
		_iter_end_4681807888:;
	}
	return false;
}



inline _23886c227_Log _222e5128e_make_err(jule::Int _5013_row,jule::Int _5023_col,jule::Ptr<_22212e407_File>& _5034_f,jule::Str _5044_fmt,jule::Slice<jule::Any> _5057_args) {
	return _23886c227_Log(1LLU,_5013_row,_5023_col,_5034_f->_method_path(),_23886c227_logf(_5044_fmt,_5057_args),jule::Str(),jule::Str());
}



inline jule::Slice<_2220dce43_Token> _222e5128e_range(jule::Int& _6915_i,jule::Str _6923_open,jule::Str _6940_close,jule::Slice<_2220dce43_Token>& _6963_tokens) {
	if (_6915_i >= _6963_tokens.len()) {
		return nullptr;
	}
	_2220dce43_Token _749_tok = _6963_tokens[_6915_i];
	if ((_749_tok._field_id != 3LLU) || (_749_tok._field_kind != _6923_open)) {
		return nullptr;
	}
	(_6915_i)++;
	jule::Int _8013_range_n = 1LL;
	jule::Int _819_start = _6915_i;
	for (; (_8013_range_n != 0LL) && (_6915_i < _6963_tokens.len()); (_6915_i)++) {
		{
			_2220dce43_Token _8313_token = _6963_tokens[_6915_i];
			if (_8313_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _8313_token._field_kind };
					if (!(_match_expr == (_6923_open))) { goto _case_end_4681830400; }
					_case_begin_4681830400:;
					{
						(_8013_range_n)++;
					}
					goto _match_end_4681830320;
					_case_end_4681830400:;
					if (!(_match_expr == (_6940_close))) { goto _case_end_4681830496; }
					_case_begin_4681830496:;
					{
						(_8013_range_n)--;
					}
					goto _match_end_4681830320;
					_case_end_4681830496:;
					_match_end_4681830320:;
				}
			}
		}
	_iter_next_4681826016:;
	}
	_iter_end_4681826016:;
	return _6963_tokens.slice(_819_start,_6915_i - 1LL);
}



inline std::tuple<jule::Slice<_2220dce43_Token>,jule::Slice<_2220dce43_Token>> _222e5128e_range_last(jule::Slice<_2220dce43_Token>& _10220_tokens) {
	jule::Slice<_2220dce43_Token> _10239_cutted = jule::Slice<_2220dce43_Token>();
	jule::Slice<_2220dce43_Token> _10256_cut = jule::Slice<_2220dce43_Token>();
	if (_10220_tokens.len() == 0LL) {
		_10239_cutted = _10220_tokens;
		_10256_cut = nullptr;
		return std::make_tuple(_10239_cutted,_10256_cut);
	} else if (_10220_tokens[_10220_tokens.len() - 1LL]._field_id != 3LLU) {
		_10239_cutted = _10220_tokens;
		_10256_cut = nullptr;
		return std::make_tuple(_10239_cutted,_10256_cut);
	}
	jule::Int _10913_brace_n = 0LL;
	jule::I64 _11013_i = _10220_tokens.len() - 1LL;
	for (; _11013_i >= 0LL; (_11013_i)--) {
		{
			_2220dce43_Token _11213_token = _10220_tokens[_11013_i];
			if (_11213_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _11213_token._field_kind };
					if (!(_match_expr == (jule::Str("}", 1)) || _match_expr == (jule::Str("]", 1)) || _match_expr == (jule::Str(")", 1)))) { goto _case_end_4681844512; }
					_case_begin_4681844512:;
					{
						(_10913_brace_n)++;
						goto _iter_next_4681832944;
					}
					goto _match_end_4681843136;
					_case_end_4681844512:;
					_case_begin_4681842448:;
					{
						(_10913_brace_n)--;
					}
					goto _match_end_4681843136;
					_case_end_4681842448:;
					_match_end_4681843136:;
				}
			}
			if (_10913_brace_n == 0LL) {
				_10239_cutted = _10220_tokens.slice(0LL,_11013_i);
				_10256_cut = _10220_tokens.slice(_11013_i);
				return std::make_tuple(_10239_cutted,_10256_cut);
			}
		}
	_iter_next_4681832944:;
	}
	_iter_end_4681832944:;
	_10239_cutted = _10220_tokens;
	_10256_cut = nullptr;
	return std::make_tuple(_10239_cutted,_10256_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_2220dce43_Token>>,jule::Slice<_23886c227_Log>> _222e5128e_parts(jule::Slice<_2220dce43_Token>& _14015_tokens,jule::Uint _14032_id,jule::Bool _14045_expr_must) {
	if (_14015_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_2220dce43_Token>> _14513_parts = nullptr;
	jule::Slice<_23886c227_Log> _14613_errors = nullptr;
	jule::Int _14813_range_n = 0LL;
	jule::Int _14913_last = 0LL;
	{
		auto &expr = _14015_tokens;
		auto it = expr.begin();
		_iter_begin_4681848384:;
		if (it != expr.end()) {
			jule::Int _222e5128e_i = it - expr.begin();
			_2220dce43_Token &_222e5128e_token = *it;
			{
				if (_222e5128e_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _222e5128e_token._field_kind };
						if (!(_match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4681858960; }
						_case_begin_4681858960:;
						{
							(_14813_range_n)++;
							goto _iter_next_4681848384;
						}
						goto _match_end_4681857584;
						_case_end_4681858960:;
						_case_begin_4681856896:;
						{
							(_14813_range_n)--;
						}
						goto _match_end_4681857584;
						_case_end_4681856896:;
						_match_end_4681857584:;
					}
				}
				if (_14813_range_n > 0LL) {
					goto _iter_next_4681848384;
				}
				if (_222e5128e_token._field_id == _14032_id) {
					if (_14045_expr_must && ((_222e5128e_i - _14913_last) <= 0LL)) {
						_23886c227_Log _16921_err = _222e5128e_make_err(_222e5128e_token._field_row,_222e5128e_token._field_column,_222e5128e_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
						_14613_errors.push(_16921_err);
					}
					_14513_parts.push(_14015_tokens.slice(_14913_last,_222e5128e_i));
					_14913_last=static_cast<jule::Int>(_222e5128e_i + 1LL);
				}
			}
			_iter_next_4681848384:;
			++it;
			_222e5128e_i++;
			goto _iter_begin_4681848384;
		}
		_iter_end_4681848384:;
	}
	if (_14913_last < _14015_tokens.len()) {
		_14513_parts.push(_14015_tokens.slice(_14913_last));
	} else if ((!(_14045_expr_must))) {
		_14513_parts.push(jule::Slice<_2220dce43_Token>());
	}
	return std::make_tuple(_14513_parts,_14613_errors);
}



inline jule::Str _222e5128e_get_close_kind_of_brace(jule::Str _18628_left) {
	{
		auto &_match_expr{ _18628_left };
		if (!(_match_expr == (jule::Str(")", 1)))) { goto _case_end_4681869472; }
		_case_begin_4681869472:;
		{
			return jule::Str("(", 1);
		}
		goto _match_end_4681868944;
		_case_end_4681869472:;
		if (!(_match_expr == (jule::Str("}", 1)))) { goto _case_end_4681869216; }
		_case_begin_4681869216:;
		{
			return jule::Str("{", 1);
		}
		goto _match_end_4681868944;
		_case_end_4681869216:;
		if (!(_match_expr == (jule::Str("]", 1)))) { goto _case_end_4681869312; }
		_case_begin_4681869312:;
		{
			return jule::Str("[", 1);
		}
		goto _match_end_4681868944;
		_case_end_4681869312:;
		_case_begin_4681853984:;
		{
			return jule::Str();
		}
		goto _match_end_4681868944;
		_case_end_4681853984:;
		_match_end_4681868944:;
	}
}



inline _23886c227_Log _222e5128e_compiler_err(_2220dce43_Token& _19518_token,jule::Str& _19533_fmt,jule::Slice<jule::Any> _19546_args) {
	return _23886c227_Log(1LLU,_19518_token._field_row,_19518_token._field_column,_19518_token._field_file->_method_path(),_23886c227_logf(_19533_fmt,_19546_args),_19518_token._field_file->_method_get_row(_19518_token._field_row),jule::Str());
}



inline void _222e5128e_push_suggestion(_23886c227_Log* _20631_log,jule::Str _20642_fmt,jule::Slice<jule::Any> _20655_args) {
	_20631_log->_field_suggestion=_23886c227_logf(_20642_fmt,_20655_args);
}



inline jule::Ptr<_221d8b043_Comment> _222e5128e_build_comment(_2220dce43_Token& _21023_token) {
	_21023_token._field_kind=_21023_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_221d8b043_Comment>(new( std::nothrow ) _221d8b043_Comment(_21023_token,_21023_token._field_kind));
}



inline jule::Str _222e5128e_tokstoa(jule::Slice<_2220dce43_Token>& _21913_tokens) {
	jule::Str _22013_s = jule::Str();
	{
		auto &expr = _21913_tokens;
		auto it = expr.begin();
		_iter_begin_4681884240:;
		if (it != expr.end()) {
			_2220dce43_Token &_222e5128e_token = *it;
			{
				_22013_s+=_222e5128e_token._field_kind;
			}
			_iter_next_4681884240:;
			++it;
			goto _iter_begin_4681884240;
		}
		_iter_end_4681884240:;
	}
	return _22013_s;
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_build_void_type(void) {
	return jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl());
}



inline jule::Ptr<_221d8b043_TypeDecl> _222e76d20_build_prim_type(_2220dce43_Token _2024_token) {
	return jule::new_struct<_221d8b043_TypeDecl>(new( std::nothrow ) _221d8b043_TypeDecl(_2024_token,jule::Any(jule::new_struct<_221d8b043_IdentTypeDecl>(new( std::nothrow ) _221d8b043_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



inline std::tuple<jule::Slice<_2220dce43_Token>,jule::Int> _222e76d20_split_map_range(jule::Slice<_2220dce43_Token>& _3525_tokens,jule::Int& _3547_i) {
	jule::Slice<_2220dce43_Token> _3557_range_tokens = jule::Slice<_2220dce43_Token>();
	jule::Int _3580_colon = jule::Int();
	_3580_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3547_i;
	for (; _3547_i < _3525_tokens.len(); (_3547_i)++) {
		{
			_2220dce43_Token _4013_token = _3525_tokens[_3547_i];
			if (_4013_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _4013_token._field_kind };
					if (!(_match_expr == (jule::Str("{", 1)) || _match_expr == (jule::Str("[", 1)) || _match_expr == (jule::Str("(", 1)))) { goto _case_end_4681913760; }
					_case_begin_4681913760:;
					{
						(_3713_range_n)++;
						goto _iter_next_4681891056;
					}
					goto _match_end_4681912384;
					_case_end_4681913760:;
					_case_begin_4681911696:;
					{
						(_3713_range_n)--;
					}
					goto _match_end_4681912384;
					_case_end_4681911696:;
					_match_end_4681912384:;
				}
			}
			if (_3713_range_n == 0LL) {
				if ((_389_start + 1LL) > _3547_i) {
					return std::make_tuple(_3557_range_tokens,_3580_colon);
				}
				_3557_range_tokens=_3525_tokens.slice(_389_start + 1LL,_3547_i);
				goto _iter_end_4681891056;
			} else if (_3713_range_n != 1LL) {
				goto _iter_next_4681891056;
			}
			if ((_3580_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
				_3580_colon=static_cast<jule::Int>((_3547_i - _389_start) - 1LL);
			}
		}
	_iter_next_4681891056:;
	}
	_iter_end_4681891056:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



inline void _206e210e3_lshift_unsig(_206e210e3_Const& _55822_c,_206e210e3_Const& _55833_x) {
	jule::U64 _5599_l = _55822_c._method_as_u64();
	jule::U64 _5609_r = _55833_x._method_as_u64();
	_55822_c._method_set_u64(static_cast<jule::U64>(_5599_l << _5609_r));
}



inline void _206e210e3_rshift_unsig(_206e210e3_Const& _56422_c,_206e210e3_Const& _56433_x) {
	jule::U64 _5659_l = _56422_c._method_as_u64();
	jule::U64 _5669_r = _56433_x._method_as_u64();
	_56422_c._method_set_u64(static_cast<jule::U64>(_5659_l >> _5669_r));
}



inline jule::Str _206e24cd9_real_kind_of(jule::Str _2421_kind) {
	{
		auto &_match_expr{ _2421_kind };
		if (!(_match_expr == (jule::Str("int", 3)))) { goto _case_end_4683918224; }
		_case_begin_4683918224:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4683934928;
		_case_end_4683918224:;
		if (!(_match_expr == (jule::Str("uint", 4)) || _match_expr == (jule::Str("uintptr", 7)))) { goto _case_end_4683935040; }
		_case_begin_4683935040:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4683934928;
		_case_end_4683935040:;
		_case_begin_4683920256:;
		{
			return _2421_kind;
		}
		goto _match_end_4683934928;
		_case_end_4683920256:;
		_match_end_4683934928:;
	}
}



inline jule::Int _206e24cd9_bitsize_of(jule::Str _4019_k) {
	{
		auto &_match_expr{ _4019_k };
		if (!(_match_expr == (jule::Str("i8", 2)) || _match_expr == (jule::Str("u8", 2)))) { goto _case_end_4683939216; }
		_case_begin_4683939216:;
		{
			return 8LL;
		}
		goto _match_end_4683937568;
		_case_end_4683939216:;
		if (!(_match_expr == (jule::Str("i16", 3)) || _match_expr == (jule::Str("u16", 3)))) { goto _case_end_4683939312; }
		_case_begin_4683939312:;
		{
			return 16LL;
		}
		goto _match_end_4683937568;
		_case_end_4683939312:;
		if (!(_match_expr == (jule::Str("i32", 3)) || _match_expr == (jule::Str("u32", 3)) || _match_expr == (jule::Str("f32", 3)))) { goto _case_end_4683939568; }
		_case_begin_4683939568:;
		{
			return 32LL;
		}
		goto _match_end_4683937568;
		_case_end_4683939568:;
		if (!(_match_expr == (jule::Str("i64", 3)) || _match_expr == (jule::Str("u64", 3)) || _match_expr == (jule::Str("f64", 3)))) { goto _case_end_4683939664; }
		_case_begin_4683939664:;
		{
			return 64LL;
		}
		goto _match_end_4683937568;
		_case_end_4683939664:;
		if (!(_match_expr == (jule::Str("uint", 4)) || _match_expr == (jule::Str("int", 3)))) { goto _case_end_4683939760; }
		_case_begin_4683939760:;
		{
			return 64LL;
		}
		goto _match_end_4683937568;
		_case_end_4683939760:;
		_case_begin_4683935840:;
		{
			return -1LL;
		}
		goto _match_end_4683937568;
		_case_end_4683935840:;
		_match_end_4683937568:;
	}
}



inline jule::Str _206e24cd9_int_from_bits(jule::U64 _7222_bits) {
	{
		auto &_match_expr{ _7222_bits };
		if (!(_match_expr == (8LL))) { goto _case_end_4683947616; }
		_case_begin_4683947616:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_4683945664;
		_case_end_4683947616:;
		if (!(_match_expr == (16LL))) { goto _case_end_4683947712; }
		_case_begin_4683947712:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_4683945664;
		_case_end_4683947712:;
		if (!(_match_expr == (32LL))) { goto _case_end_4683947808; }
		_case_begin_4683947808:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4683945664;
		_case_end_4683947808:;
		if (!(_match_expr == (64LL))) { goto _case_end_4683946992; }
		_case_begin_4683946992:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4683945664;
		_case_end_4683946992:;
		_case_begin_4683946160:;
		{
			return jule::Str();
		}
		goto _match_end_4683945664;
		_case_end_4683946160:;
		_match_end_4683945664:;
	}
}



inline jule::Str _206e24cd9_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto &_match_expr{ _8523_bits };
		if (!(_match_expr == (8LL))) { goto _case_end_4683952400; }
		_case_begin_4683952400:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_4683949728;
		_case_end_4683952400:;
		if (!(_match_expr == (16LL))) { goto _case_end_4683952496; }
		_case_begin_4683952496:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_4683949728;
		_case_end_4683952496:;
		if (!(_match_expr == (32LL))) { goto _case_end_4683952592; }
		_case_begin_4683952592:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4683949728;
		_case_end_4683952592:;
		if (!(_match_expr == (64LL))) { goto _case_end_4683951776; }
		_case_begin_4683951776:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4683949728;
		_case_end_4683951776:;
		_case_begin_4683950688:;
		{
			return jule::Str();
		}
		goto _match_end_4683949728;
		_case_end_4683950688:;
		_match_end_4683949728:;
	}
}



inline jule::Str _206e24cd9_float_from_bits(jule::U64 _9924_bits) {
	{
		auto &_match_expr{ _9924_bits };
		if (!(_match_expr == (32LL))) { goto _case_end_4683956976; }
		_case_begin_4683956976:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_4683954512;
		_case_end_4683956976:;
		if (!(_match_expr == (64LL))) { goto _case_end_4683957184; }
		_case_begin_4683957184:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_4683954512;
		_case_end_4683957184:;
		_case_begin_4683955504:;
		{
			return jule::Str();
		}
		goto _match_end_4683954512;
		_case_end_4683955504:;
		_match_end_4683954512:;
	}
}



inline jule::Bool _206e24cd9_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _2398a6c55_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



inline jule::U64 _206e24cd9_bitsize_of_float(jule::F64 _13425_x) {
	{
		if (!(((-340282346638528860000000000000000000000.0 <= _13425_x) && (_13425_x <= 340282346638528860000000000000000000000.0)))) { goto _case_end_4683978352; }
		_case_begin_4683978352:;
		{
			return 32LL;
		}
		goto _match_end_4683975872;
		_case_end_4683978352:;
		_case_begin_4683976048:;
		{
			return 64LL;
		}
		goto _match_end_4683975872;
		_case_end_4683976048:;
		_match_end_4683975872:;
	}
}



inline jule::U64 _206e24cd9_bitsize_of_int(jule::I64 _14823_x) {
	{
		if (!(((-128LL <= _14823_x) && (_14823_x <= 127LL)))) { goto _case_end_4683981072; }
		_case_begin_4683981072:;
		{
			return 8LL;
		}
		goto _match_end_4683979312;
		_case_end_4683981072:;
		if (!(((-32768LL <= _14823_x) && (_14823_x <= 32767LL)))) { goto _case_end_4683981408; }
		_case_begin_4683981408:;
		{
			return 16LL;
		}
		goto _match_end_4683979312;
		_case_end_4683981408:;
		if (!(((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)))) { goto _case_end_4683981504; }
		_case_begin_4683981504:;
		{
			return 32LL;
		}
		goto _match_end_4683979312;
		_case_end_4683981504:;
		_case_begin_4683979456:;
		{
			return 64LL;
		}
		goto _match_end_4683979312;
		_case_end_4683979456:;
		_match_end_4683979312:;
	}
}



inline jule::U64 _206e24cd9_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (!((_16424_x <= 255LL))) { goto _case_end_4683986704; }
		_case_begin_4683986704:;
		{
			return 8LL;
		}
		goto _match_end_4683985520;
		_case_end_4683986704:;
		if (!((_16424_x <= 65535LL))) { goto _case_end_4683987040; }
		_case_begin_4683987040:;
		{
			return 16LL;
		}
		goto _match_end_4683985520;
		_case_end_4683987040:;
		if (!((_16424_x <= 4294967295LL))) { goto _case_end_4683987136; }
		_case_begin_4683987136:;
		{
			return 32LL;
		}
		goto _match_end_4683985520;
		_case_end_4683987136:;
		_case_begin_4683984992:;
		{
			return 64LL;
		}
		goto _match_end_4683985520;
		_case_end_4683984992:;
		_match_end_4683985520:;
	}
}



inline jule::F64 _206e286b1_min(jule::Str _4316_k) {
	_4316_k=_206e24cd9_real_kind_of(_4316_k);
	{
		auto &_match_expr{ _4316_k };
		if (!(_match_expr == (jule::Str("i8", 2)))) { goto _case_end_4686105344; }
		_case_begin_4686105344:;
		{
			return -128LL;
		}
		goto _match_end_4683988736;
		_case_end_4686105344:;
		if (!(_match_expr == (jule::Str("i16", 3)))) { goto _case_end_4686105680; }
		_case_begin_4686105680:;
		{
			return -32768LL;
		}
		goto _match_end_4683988736;
		_case_end_4686105680:;
		if (!(_match_expr == (jule::Str("i32", 3)))) { goto _case_end_4686105776; }
		_case_begin_4686105776:;
		{
			return -2147483648LL;
		}
		goto _match_end_4683988736;
		_case_end_4686105776:;
		if (!(_match_expr == (jule::Str("i64", 3)))) { goto _case_end_4686104976; }
		_case_begin_4686104976:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_4683988736;
		_case_end_4686104976:;
		if (!(_match_expr == (jule::Str("f32", 3)))) { goto _case_end_4686105072; }
		_case_begin_4686105072:;
		{
			return -340282346638528860000000000000000000000.0;
		}
		goto _match_end_4683988736;
		_case_end_4686105072:;
		if (!(_match_expr == (jule::Str("f64", 3)))) { goto _case_end_4686105168; }
		_case_begin_4686105168:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_4683988736;
		_case_end_4686105168:;
		_case_begin_4686103872:;
		{
			return 0LL;
		}
		goto _match_end_4683988736;
		_case_end_4686103872:;
		_match_end_4683988736:;
	}
}



inline jule::F64 _206e286b1_max(jule::Str _5816_k) {
	_5816_k=_206e24cd9_real_kind_of(_5816_k);
	{
		auto &_match_expr{ _5816_k };
		if (!(_match_expr == (jule::Str("i8", 2)))) { goto _case_end_4686112608; }
		_case_begin_4686112608:;
		{
			return 127LL;
		}
		goto _match_end_4686111344;
		_case_end_4686112608:;
		if (!(_match_expr == (jule::Str("i16", 3)))) { goto _case_end_4686112752; }
		_case_begin_4686112752:;
		{
			return 32767LL;
		}
		goto _match_end_4686111344;
		_case_end_4686112752:;
		if (!(_match_expr == (jule::Str("i32", 3)))) { goto _case_end_4686112848; }
		_case_begin_4686112848:;
		{
			return 2147483647LL;
		}
		goto _match_end_4686111344;
		_case_end_4686112848:;
		if (!(_match_expr == (jule::Str("i64", 3)))) { goto _case_end_4686112048; }
		_case_begin_4686112048:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_4686111344;
		_case_end_4686112048:;
		if (!(_match_expr == (jule::Str("u8", 2)))) { goto _case_end_4686112144; }
		_case_begin_4686112144:;
		{
			return 255LL;
		}
		goto _match_end_4686111344;
		_case_end_4686112144:;
		if (!(_match_expr == (jule::Str("u16", 3)))) { goto _case_end_4686112240; }
		_case_begin_4686112240:;
		{
			return 65535LL;
		}
		goto _match_end_4686111344;
		_case_end_4686112240:;
		if (!(_match_expr == (jule::Str("u32", 3)))) { goto _case_end_4686111536; }
		_case_begin_4686111536:;
		{
			return 4294967295LL;
		}
		goto _match_end_4686111344;
		_case_end_4686111536:;
		if (!(_match_expr == (jule::Str("u64", 3)))) { goto _case_end_4686111632; }
		_case_begin_4686111632:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_4686111344;
		_case_end_4686111632:;
		if (!(_match_expr == (jule::Str("f32", 3)))) { goto _case_end_4686111728; }
		_case_begin_4686111728:;
		{
			return 340282346638528860000000000000000000000.0;
		}
		goto _match_end_4686111344;
		_case_end_4686111728:;
		if (!(_match_expr == (jule::Str("f64", 3)))) { goto _case_end_4686111824; }
		_case_begin_4686111824:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_4686111344;
		_case_end_4686111824:;
		_case_begin_4686109712:;
		{
			return 0LL;
		}
		goto _match_end_4686111344;
		_case_end_4686109712:;
		_match_end_4686111344:;
	}
}



inline jule::Bool _206e22a2e_is_i8_compatible(jule::Str _629_k) {
	_629_k=_206e24cd9_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _206e22a2e_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_206e24cd9_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



inline jule::Bool _206e22a2e_is_i32_compatible(jule::Str _2030_k) {
	_2030_k=_206e24cd9_real_kind_of(_2030_k);
	return ((((_2030_k == jule::Str("i8", 2)) || (_2030_k == jule::Str("i16", 3))) || (_2030_k == jule::Str("i32", 3))) || (_2030_k == jule::Str("u8", 2))) || (_2030_k == jule::Str("u16", 3));
}



inline jule::Bool _206e22a2e_is_i64_compatible(jule::Str _3030_k) {
	_3030_k=_206e24cd9_real_kind_of(_3030_k);
	return ((((((_3030_k == jule::Str("i8", 2)) || (_3030_k == jule::Str("i16", 3))) || (_3030_k == jule::Str("i32", 3))) || (_3030_k == jule::Str("i64", 3))) || (_3030_k == jule::Str("u8", 2))) || (_3030_k == jule::Str("u16", 3))) || (_3030_k == jule::Str("u32", 3));
}



inline jule::Bool _206e22a2e_is_u8_compatible(jule::Str _4229_k) {
	_4229_k=_206e24cd9_real_kind_of(_4229_k);
	return _4229_k == jule::Str("u8", 2);
}



inline jule::Bool _206e22a2e_is_u16_compatible(jule::Str _4830_k) {
	_4830_k=_206e24cd9_real_kind_of(_4830_k);
	return (_4830_k == jule::Str("u8", 2)) || (_4830_k == jule::Str("u16", 3));
}



inline jule::Bool _206e22a2e_is_u32_compatible(jule::Str _5430_k) {
	_5430_k=_206e24cd9_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3))) || (_5430_k == jule::Str("u32", 3));
}



inline jule::Bool _206e22a2e_is_u64_compatible(jule::Str _6230_k) {
	_6230_k=_206e24cd9_real_kind_of(_6230_k);
	return (((_6230_k == jule::Str("u8", 2)) || (_6230_k == jule::Str("u16", 3))) || (_6230_k == jule::Str("u32", 3))) || (_6230_k == jule::Str("u64", 3));
}



inline jule::Bool _206e22a2e_is_f32_compatible(jule::Str _7130_k) {
	_7130_k=_206e24cd9_real_kind_of(_7130_k);
	return _7130_k == jule::Str("f32", 3);
}



inline jule::Bool _206e22a2e_is_f64_compatible(jule::Str _7730_k) {
	_7730_k=_206e24cd9_real_kind_of(_7730_k);
	return (_7730_k == jule::Str("f64", 3)) || (_7730_k == jule::Str("f32", 3));
}



inline jule::Bool _206e22a2e_types_are_compatible(jule::Str _8633_k1,jule::Str _8642_k2) {
	_8633_k1=_206e24cd9_real_kind_of(_8633_k1);
	{
		auto &_match_expr{ _8633_k1 };
		if (!(_match_expr == (jule::Str("any", 3)))) { goto _case_end_4686142032; }
		_case_begin_4686142032:;
		{
			return true;
		}
		goto _match_end_4686141392;
		_case_end_4686142032:;
		if (!(_match_expr == (jule::Str("i8", 2)))) { goto _case_end_4686142128; }
		_case_begin_4686142128:;
		{
			return _206e22a2e_is_i8_compatible(_8642_k2);
		}
		goto _match_end_4686141392;
		_case_end_4686142128:;
		if (!(_match_expr == (jule::Str("i16", 3)))) { goto _case_end_4686142224; }
		_case_begin_4686142224:;
		{
			return _206e22a2e_is_i16_compatible(_8642_k2);
		}
		goto _match_end_4686141392;
		_case_end_4686142224:;
		if (!(_match_expr == (jule::Str("i32", 3)))) { goto _case_end_4686142320; }
		_case_begin_4686142320:;
		{
			return _206e22a2e_is_i32_compatible(_8642_k2);
		}
		goto _match_end_4686141392;
		_case_end_4686142320:;
		if (!(_match_expr == (jule::Str("i64", 3)))) { goto _case_end_4686142624; }
		_case_begin_4686142624:;
		{
			return _206e22a2e_is_i64_compatible(_8642_k2);
		}
		goto _match_end_4686141392;
		_case_end_4686142624:;
		if (!(_match_expr == (jule::Str("u8", 2)))) { goto _case_end_4686142720; }
		_case_begin_4686142720:;
		{
			return _206e22a2e_is_u8_compatible(_8642_k2);
		}
		goto _match_end_4686141392;
		_case_end_4686142720:;
		if (!(_match_expr == (jule::Str("u16", 3)))) { goto _case_end_4686142816; }
		_case_begin_4686142816:;
		{
			return _206e22a2e_is_u16_compatible(_8642_k2);
		}
		goto _match_end_4686141392;
		_case_end_4686142816:;
		if (!(_match_expr == (jule::Str("u32", 3)))) { goto _case_end_4686142928; }
		_case_begin_4686142928:;
		{
			return _206e22a2e_is_u32_compatible(_8642_k2);
		}
		goto _match_end_4686141392;
		_case_end_4686142928:;
		if (!(_match_expr == (jule::Str("u64", 3)))) { goto _case_end_4686143040; }
		_case_begin_4686143040:;
		{
			return _206e22a2e_is_u64_compatible(_8642_k2);
		}
		goto _match_end_4686141392;
		_case_end_4686143040:;
		if (!(_match_expr == (jule::Str("f32", 3)))) { goto _case_end_4686143488; }
		_case_begin_4686143488:;
		{
			return _206e22a2e_is_f32_compatible(_8642_k2);
		}
		goto _match_end_4686141392;
		_case_end_4686143488:;
		if (!(_match_expr == (jule::Str("f64", 3)))) { goto _case_end_4686143600; }
		_case_begin_4686143600:;
		{
			return _206e22a2e_is_f64_compatible(_8642_k2);
		}
		goto _match_end_4686141392;
		_case_end_4686143600:;
		if (!(_match_expr == (jule::Str("bool", 4)))) { goto _case_end_4686143712; }
		_case_begin_4686143712:;
		{
			return _8642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_4686141392;
		_case_end_4686143712:;
		if (!(_match_expr == (jule::Str("str", 3)))) { goto _case_end_4686143824; }
		_case_begin_4686143824:;
		{
			return _8642_k2 == jule::Str("str", 3);
		}
		goto _match_end_4686141392;
		_case_end_4686143824:;
		_case_begin_4686140400:;
		{
			return false;
		}
		goto _match_end_4686141392;
		_case_end_4686140400:;
		_match_end_4686141392:;
	}
}



inline jule::Bool _206e22a2e_is_i16_greater(jule::Str _10727_k) {
	_10727_k=_206e24cd9_real_kind_of(_10727_k);
	return _10727_k == jule::Str("u8", 2);
}



inline jule::Bool _206e22a2e_is_i32_greater(jule::Str _11327_k) {
	_11327_k=_206e24cd9_real_kind_of(_11327_k);
	return (_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3));
}



inline jule::Bool _206e22a2e_is_i64_greater(jule::Str _11927_k) {
	_11927_k=_206e24cd9_real_kind_of(_11927_k);
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _206e22a2e_is_u8_greater(jule::Str _12726_k) {
	_12726_k=_206e24cd9_real_kind_of(_12726_k);
	return _12726_k == jule::Str("i8", 2);
}



inline jule::Bool _206e22a2e_is_u16_greater(jule::Str _13327_k) {
	_13327_k=_206e24cd9_real_kind_of(_13327_k);
	return ((_13327_k == jule::Str("u8", 2)) || (_13327_k == jule::Str("i8", 2))) || (_13327_k == jule::Str("i16", 3));
}



inline jule::Bool _206e22a2e_is_u32_greater(jule::Str _14127_k) {
	_14127_k=_206e24cd9_real_kind_of(_14127_k);
	return ((((_14127_k == jule::Str("u8", 2)) || (_14127_k == jule::Str("u16", 3))) || (_14127_k == jule::Str("i8", 2))) || (_14127_k == jule::Str("i16", 3))) || (_14127_k == jule::Str("i32", 3));
}



inline jule::Bool _206e22a2e_is_u64_greater(jule::Str _15127_k) {
	_15127_k=_206e24cd9_real_kind_of(_15127_k);
	return ((((((_15127_k == jule::Str("u8", 2)) || (_15127_k == jule::Str("u16", 3))) || (_15127_k == jule::Str("u32", 3))) || (_15127_k == jule::Str("i8", 2))) || (_15127_k == jule::Str("i16", 3))) || (_15127_k == jule::Str("i32", 3))) || (_15127_k == jule::Str("i64", 3));
}



inline jule::Bool _206e22a2e_is_f32_greater(jule::Str _16323_k) {
	return _16323_k != jule::Str("f64", 3);
}



inline jule::Bool _206e22a2e_is_f64_greater(jule::Str _16523_k) {
	return true;
}



inline jule::Bool _206e22a2e_is_greater(jule::Str _16823_k1,jule::Str _16832_k2) {
	_16823_k1=_206e24cd9_real_kind_of(_16823_k1);
	{
		auto &_match_expr{ _16823_k1 };
		if (!(_match_expr == (jule::Str("i16", 3)))) { goto _case_end_4686175680; }
		_case_begin_4686175680:;
		{
			return _206e22a2e_is_i16_greater(_16832_k2);
		}
		goto _match_end_4686174048;
		_case_end_4686175680:;
		if (!(_match_expr == (jule::Str("i32", 3)))) { goto _case_end_4686174336; }
		_case_begin_4686174336:;
		{
			return _206e22a2e_is_i32_greater(_16832_k2);
		}
		goto _match_end_4686174048;
		_case_end_4686174336:;
		if (!(_match_expr == (jule::Str("i64", 3)))) { goto _case_end_4686174432; }
		_case_begin_4686174432:;
		{
			return _206e22a2e_is_i64_greater(_16832_k2);
		}
		goto _match_end_4686174048;
		_case_end_4686174432:;
		if (!(_match_expr == (jule::Str("u16", 3)))) { goto _case_end_4686174528; }
		_case_begin_4686174528:;
		{
			return _206e22a2e_is_u16_greater(_16832_k2);
		}
		goto _match_end_4686174048;
		_case_end_4686174528:;
		if (!(_match_expr == (jule::Str("u8", 2)))) { goto _case_end_4686174912; }
		_case_begin_4686174912:;
		{
			return _206e22a2e_is_u8_greater(_16832_k2);
		}
		goto _match_end_4686174048;
		_case_end_4686174912:;
		if (!(_match_expr == (jule::Str("u32", 3)))) { goto _case_end_4686175008; }
		_case_begin_4686175008:;
		{
			return _206e22a2e_is_u32_greater(_16832_k2);
		}
		goto _match_end_4686174048;
		_case_end_4686175008:;
		if (!(_match_expr == (jule::Str("u64", 3)))) { goto _case_end_4686175104; }
		_case_begin_4686175104:;
		{
			return _206e22a2e_is_u64_greater(_16832_k2);
		}
		goto _match_end_4686174048;
		_case_end_4686175104:;
		if (!(_match_expr == (jule::Str("f32", 3)))) { goto _case_end_4686175200; }
		_case_begin_4686175200:;
		{
			return _206e22a2e_is_f32_greater(_16832_k2);
		}
		goto _match_end_4686174048;
		_case_end_4686175200:;
		if (!(_match_expr == (jule::Str("f64", 3)))) { goto _case_end_4686175296; }
		_case_begin_4686175296:;
		{
			return _206e22a2e_is_f64_greater(_16832_k2);
		}
		goto _match_end_4686174048;
		_case_end_4686175296:;
		if (!(_match_expr == (jule::Str("any", 3)))) { goto _case_end_4686175776; }
		_case_begin_4686175776:;
		{
			return true;
		}
		goto _match_end_4686174048;
		_case_end_4686175776:;
		_case_begin_4686169488:;
		{
			return false;
		}
		goto _match_end_4686174048;
		_case_end_4686169488:;
		_match_end_4686174048:;
	}
}



inline jule::Bool _206ec1e1e_is_sig_int(jule::Str _2723_k) {
	_2723_k=_206e24cd9_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _206ec1e1e_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_206e24cd9_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



inline jule::Bool _206ec1e1e_is_int(jule::Str _4915_k) {
	return _206ec1e1e_is_sig_int(_4915_k) || _206ec1e1e_is_unsig_int(_4915_k);
}



inline jule::Bool _206ec1e1e_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



inline jule::Bool _206ec1e1e_is_num(jule::Str _5915_k) {
	return _206ec1e1e_is_int(_5915_k) || _206ec1e1e_is_float(_5915_k);
}



inline jule::Bool _20707b281_is_ascii(jule::I32 _1017_r) {
	
	return _1017_r <= 127LLU;
}



inline jule::I32 _20707b281_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if (_1816_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::Int _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_20707b281_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _2221ee98e_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



inline jule::Str _20707b281_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _20707b281_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if (_4215_bytes.len() == 0LL) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_4215_bytes.len()));
	jule::Int _4813_i = 0LL;
	while (_4813_i < _4215_bytes.len()) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_20707b281_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::Int _5421_size;
				std::tie(_5418_r,_5421_size) = _2221ee98e_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_2221ee98e_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_4686216752:;
	}
	_iter_end_4686216752:;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _20707b281_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		if (!(_match_expr == ('\\'))) { goto _case_end_4686229232; }
		_case_begin_4686229232:;
		{
			_6241_seq='\\';
		}
		goto _match_end_4686230368;
		_case_end_4686229232:;
		if (!(_match_expr == ('\''))) { goto _case_end_4686231152; }
		_case_begin_4686231152:;
		{
			_6241_seq='\'';
		}
		goto _match_end_4686230368;
		_case_end_4686231152:;
		if (!(_match_expr == ('\"'))) { goto _case_end_4686231248; }
		_case_begin_4686231248:;
		{
			_6241_seq='\"';
		}
		goto _match_end_4686230368;
		_case_end_4686231248:;
		if (!(_match_expr == ('a'))) { goto _case_end_4686231344; }
		_case_begin_4686231344:;
		{
			_6241_seq='\a';
		}
		goto _match_end_4686230368;
		_case_end_4686231344:;
		if (!(_match_expr == ('b'))) { goto _case_end_4686231440; }
		_case_begin_4686231440:;
		{
			_6241_seq='\b';
		}
		goto _match_end_4686230368;
		_case_end_4686231440:;
		if (!(_match_expr == ('f'))) { goto _case_end_4686231536; }
		_case_begin_4686231536:;
		{
			_6241_seq='\f';
		}
		goto _match_end_4686230368;
		_case_end_4686231536:;
		if (!(_match_expr == ('n'))) { goto _case_end_4686231648; }
		_case_begin_4686231648:;
		{
			_6241_seq='\n';
		}
		goto _match_end_4686230368;
		_case_end_4686231648:;
		if (!(_match_expr == ('r'))) { goto _case_end_4686231760; }
		_case_begin_4686231760:;
		{
			_6241_seq='\r';
		}
		goto _match_end_4686230368;
		_case_end_4686231760:;
		if (!(_match_expr == ('t'))) { goto _case_end_4686231872; }
		_case_begin_4686231872:;
		{
			_6241_seq='\t';
		}
		goto _match_end_4686230368;
		_case_end_4686231872:;
		if (!(_match_expr == ('v'))) { goto _case_end_4686231984; }
		_case_begin_4686231984:;
		{
			_6241_seq='\v';
		}
		goto _match_end_4686230368;
		_case_end_4686231984:;
		_match_end_4686230368:;
	}
	_6252_ok=_6241_seq != 0LL;
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _20707b281_rune_from_esq_seq(jule::Slice<jule::U8> _8422_bytes,jule::Int& _8442_i) {
	jule::U8 _8510_b;
	jule::Bool _8513_ok;
	std::tie(_8510_b,_8513_ok) = _20707b281_try_btoa_common_esq(_8422_bytes.slice(_8442_i));
	(_8442_i)++;
	if (_8513_ok) {
		(_8442_i)++;
		return static_cast<jule::I32>(_8510_b);
	}
	{
		auto &_match_expr{ _8422_bytes[_8442_i] };
		if (!(_match_expr == ('u'))) { goto _case_end_4686248576; }
		_case_begin_4686248576:;
		{
			
			jule::U64 _9514_rc;
			std::tie(_9514_rc,std::ignore) = _2388cbb6b_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 5LL)),16LL,64LL);
			_8442_i+=5LL;
			jule::I32 _9713_r = static_cast<jule::I32>(_9514_rc);
			return _9713_r;
		}
		goto _match_end_4686244864;
		_case_end_4686248576:;
		if (!(_match_expr == ('U'))) { goto _case_end_4686243984; }
		_case_begin_4686243984:;
		{
			
			jule::U64 _10214_rc;
			std::tie(_10214_rc,std::ignore) = _2388cbb6b_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 9LL)),16LL,64LL);
			_8442_i+=9LL;
			jule::I32 _10413_r = static_cast<jule::I32>(_10214_rc);
			return _10413_r;
		}
		goto _match_end_4686244864;
		_case_end_4686243984:;
		if (!(_match_expr == ('x'))) { goto _case_end_4686244080; }
		_case_begin_4686244080:;
		{
			
			jule::Slice<jule::U8> _10913_seq = _8422_bytes.slice(_8442_i + 1LL,_8442_i + 3LL);
			_8442_i+=3LL;
			jule::U64 _11114_b;
			std::tie(_11114_b,std::ignore) = _2388cbb6b_parse_uint(static_cast<jule::Str>(_10913_seq),16LL,64LL);
			return static_cast<jule::I32>(_11114_b);
		}
		goto _match_end_4686244864;
		_case_end_4686244080:;
		_case_begin_4686242976:;
		{
			
			jule::Slice<jule::U8> _11613_seq = _8422_bytes.slice(_8442_i,_8442_i + 3LL);
			_8442_i+=3LL;
			jule::U64 _11814_b;
			std::tie(_11814_b,std::ignore) = _2388cbb6b_parse_uint(static_cast<jule::Str>(_11613_seq.slice(1LL)),8LL,64LL);
			return static_cast<jule::I32>(_11814_b);
		}
		goto _match_end_4686244864;
		_case_end_4686242976:;
		_match_end_4686244864:;
	}
}



inline jule::Slice<jule::U8> _20707b281_str_esq_seq(jule::Slice<jule::U8> _12316_bytes,jule::Int& _12336_i) {
	jule::I32 _1249_r = _20707b281_rune_from_esq_seq(_12316_bytes,_12336_i);
	if (_1249_r <= 255LL) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(_1249_r)});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1249_r));
}



inline jule::Bool _222edb48e_kind_uses_generics(jule::Ptr<_2300b54e5_TypeKind> _39623_k,jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>& _39638_generics) {
	jule::Str _3979_pk = _39623_k->_method_to_str();
	{
		auto &expr = _39638_generics;
		auto it = expr.begin();
		_iter_begin_4686912224:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_GenericDecl> &_222edb48e_g = *it;
			{
				if (_3979_pk.find(_222edb48e_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_4686912224:;
			++it;
			goto _iter_begin_4686912224;
		}
		_iter_end_4686912224:;
	}
	return false;
}



inline jule::Bool _222edb48e_parameter_uses_generics(jule::Ptr<_222edb48e_Param>& _40629_p,jule::Slice<jule::Ptr<_221d8b043_GenericDecl>>& _40641_generics) {
	if (_40629_p->_method_is_self()) {
		return false;
	}
	return _222edb48e_kind_uses_generics(_40629_p->_field_kind->_field_kind,_40641_generics);
}



inline jule::Str _221db702a_str_repeat(jule::Str _8415_sub,jule::Int _8429_n) {
	if (_8429_n == 0LL) {
		return jule::Str();
	}
	jule::Str _8913_s = jule::Str();
	for (; _8429_n > 0LL; (_8429_n)--) {
		{
			_8913_s+=_8415_sub;
		}
	_iter_next_4686921888:;
	}
	_iter_end_4686921888:;
	return _8913_s;
}



inline jule::Str _221db702a_build_doc(jule::Ptr<_221d8b043_CommentGroup> _9618_cg) {
	if (_9618_cg == nullptr) {
		return jule::Str();
	}
	jule::Str _10113_doc = jule::Str();
	{
		auto &expr = _9618_cg->_field_comments;
		auto it = expr.begin();
		_iter_begin_4686925552:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_Comment> &_221db702a_c = *it;
			{
				_10113_doc+=_221db702a_c->_field_text;
				_10113_doc+=jule::Str(" ", 1);
			}
			_iter_next_4686925552:;
			++it;
			goto _iter_begin_4686925552;
		}
		_iter_end_4686925552:;
	}
	return _10113_doc;
}



inline jule::Ptr<_2300b54e5_TypeSymbol> _221db702a_build_type(jule::Ptr<_221d8b043_TypeDecl> _10919_t) {
	if (_10919_t == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(_10919_t,jule::Ptr<_2300b54e5_TypeKind>()));
}



inline jule::Ptr<_20683ebaa_Value> _221db702a_build_expr(jule::Ptr<_221d8b043_Expr> _11819_expr) {
	if (_11819_expr == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_20683ebaa_Value>(new( std::nothrow ) _20683ebaa_Value(_11819_expr,jule::Ptr<_20683ebaa_Data>()));
}



inline jule::Ptr<_2300b54e5_TypeAlias> _221db702a_build_type_alias(jule::Ptr<_221d8b043_TypeAliasDecl> _12825_decl) {
	return jule::new_struct<_2300b54e5_TypeAlias>(new( std::nothrow ) _2300b54e5_TypeAlias(_12825_decl->_field_scope,_12825_decl->_field_public,_12825_decl->_field_cpp_linked,jule::Bool(),jule::Bool(),_12825_decl->_field_token,_12825_decl->_field_ident,_221db702a_build_type(_12825_decl->_field_kind),_221db702a_build_doc(_12825_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ptr<_2398d04dc_Field> _221db702a_build_field(jule::Ptr<_221d8b043_FieldDecl> _14020_decl) {
	return jule::new_struct_ptr<_2398d04dc_Field>(new( std::nothrow ) _2398d04dc_Field(jule::Ptr<_2398d04dc_Struct>(),_14020_decl->_field_token,_14020_decl->_field_public,_14020_decl->_field_mutable,_14020_decl->_field_ident,_221db702a_build_type(_14020_decl->_field_kind)));
}



inline jule::Slice<jule::Ptr<_2398d04dc_Field>> _221db702a_build_fields(jule::Slice<jule::Ptr<_221d8b043_FieldDecl>>& _15022_decls) {
	jule::Slice<jule::Ptr<_2398d04dc_Field>> _15113_fields = jule::Slice<jule::Ptr<_2398d04dc_Field>>::alloc(0LL,static_cast<jule::I64>(_15022_decls.len()));
	{
		auto &expr = _15022_decls;
		auto it = expr.begin();
		_iter_begin_4686939280:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_FieldDecl> _221db702a_decl = *it;
			{
				_15113_fields.push(_221db702a_build_field(_221db702a_decl));
			}
			_iter_next_4686939280:;
			++it;
			goto _iter_begin_4686939280;
		}
		_iter_end_4686939280:;
	}
	return _15113_fields;
}



inline jule::Ptr<_2398d04dc_Struct> _221db702a_build_struct(jule::Ptr<_221d8b043_StructDecl> _15821_decl) {
	return jule::new_struct_ptr<_2398d04dc_Struct>(new( std::nothrow ) _2398d04dc_Struct(jule::Ptr<_21eee051d_Sema>(),jule::Slice<jule::Ptr<_2398d04dc_Struct>>(),jule::Slice<jule::Ptr<_2398d04dc_Struct>>(),_15821_decl->_field_token,_15821_decl->_field_ident,_221db702a_build_fields(_15821_decl->_field_fields),jule::Slice<jule::Ptr<_222edb48e_Fn>>(),jule::Slice<jule::Ptr<_2200a2657_Var>>(),_15821_decl->_field_public,_15821_decl->_field_cpp_linked,_15821_decl->_field_directives,_221db702a_build_doc(_15821_decl->_field_doc_comments),_15821_decl->_field_generics,jule::Slice<jule::Ptr<_2300167cb_Trait>>(),jule::Slice<jule::Ptr<_2398d04dc_StructIns>>()));
}



inline jule::Ptr<_222edb48e_Param> _221db702a_build_param(jule::Ptr<_221d8b043_ParamDecl> _17120_decl) {
	return jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_17120_decl->_field_token,_17120_decl->_field_mutable,_17120_decl->_field_variadic,_17120_decl->_field_reference,_221db702a_build_type(_17120_decl->_field_kind),_17120_decl->_field_ident));
}



inline jule::Slice<jule::Ptr<_222edb48e_Param>> _221db702a_build_params(jule::Slice<jule::Ptr<_221d8b043_ParamDecl>>& _18222_decls) {
	jule::Slice<jule::Ptr<_222edb48e_Param>> _18313_params = jule::Slice<jule::Ptr<_222edb48e_Param>>::alloc(0LL,static_cast<jule::I64>(_18222_decls.len()));
	{
		auto &expr = _18222_decls;
		auto it = expr.begin();
		_iter_begin_4686950528:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_ParamDecl> _221db702a_decl = *it;
			{
				_18313_params.push(_221db702a_build_param(_221db702a_decl));
			}
			_iter_next_4686950528:;
			++it;
			goto _iter_begin_4686950528;
		}
		_iter_end_4686950528:;
	}
	return _18313_params;
}



inline jule::Ptr<_222edb48e_RetType> _221db702a_build_ret_type(jule::Ptr<_221d8b043_RetTypeDecl> _19023_decl) {
	if ((_19023_decl->_field_idents == nullptr) && (_19023_decl->_field_kind == nullptr)) {
		return nullptr;
	}
	return jule::new_struct<_222edb48e_RetType>(new( std::nothrow ) _222edb48e_RetType(_221db702a_build_type(_19023_decl->_field_kind),_19023_decl->_field_idents));
}



inline jule::Ptr<_222edb48e_Fn> _221db702a_build_fn(jule::Ptr<_221d8b043_FnDecl> _20017_decl) {
	return jule::new_struct_ptr<_222edb48e_Fn>(new( std::nothrow ) _222edb48e_Fn(jule::Ptr<_21eee051d_Sema>(),_20017_decl->_field_token,_20017_decl->_field_global,_20017_decl->_field_unsafety,_20017_decl->_field_public,_20017_decl->_field_cpp_linked,_20017_decl->_field_statically,_20017_decl->_field_exceptional,_20017_decl->_field_ident,_20017_decl->_field_directives,_221db702a_build_doc(_20017_decl->_field_doc_comments),_20017_decl->_field_scope,_20017_decl->_field_generics,_221db702a_build_ret_type(_20017_decl->_field_result),_221db702a_build_params(_20017_decl->_field_params),jule::Ptr<_2398d04dc_Struct>(),jule::Slice<jule::Ptr<_222edb48e_FnIns>>()));
}



inline jule::Slice<jule::Ptr<_222edb48e_Fn>> _221db702a_build_methods(jule::Slice<jule::Ptr<_221d8b043_FnDecl>>& _21923_decls) {
	jule::Slice<jule::Ptr<_222edb48e_Fn>> _22013_methods = jule::Slice<jule::Ptr<_222edb48e_Fn>>::alloc(0LL,static_cast<jule::I64>(_21923_decls.len()));
	{
		auto &expr = _21923_decls;
		auto it = expr.begin();
		_iter_begin_4686963904:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_FnDecl> _221db702a_decl = *it;
			{
				_22013_methods.push(_221db702a_build_fn(_221db702a_decl));
			}
			_iter_next_4686963904:;
			++it;
			goto _iter_begin_4686963904;
		}
		_iter_end_4686963904:;
	}
	return _22013_methods;
}



inline jule::Ptr<_2300167cb_Trait> _221db702a_build_trait(jule::Ptr<_221d8b043_TraitDecl> _22720_decl) {
	return jule::new_struct_ptr<_2300167cb_Trait>(new( std::nothrow ) _2300167cb_Trait(_22720_decl->_field_token,_22720_decl->_field_ident,_22720_decl->_field_public,jule::Bool(),_221db702a_build_doc(_22720_decl->_field_doc_comments),_221db702a_build_methods(_22720_decl->_field_methods),jule::Slice<jule::Ptr<_2398d04dc_Struct>>()));
}



inline jule::Ptr<_23001604a_EnumItem> _221db702a_build_enum_item(jule::Ptr<_221d8b043_EnumItemDecl> _23724_decl) {
	return jule::new_struct<_23001604a_EnumItem>(new( std::nothrow ) _23001604a_EnumItem(_23724_decl->_field_token,_23724_decl->_field_ident,_221db702a_build_expr(_23724_decl->_field_expr)));
}



inline jule::Slice<jule::Ptr<_23001604a_EnumItem>> _221db702a_build_enum_items(jule::Slice<jule::Ptr<_221d8b043_EnumItemDecl>>& _24526_decls) {
	jule::Slice<jule::Ptr<_23001604a_EnumItem>> _24613_items = jule::Slice<jule::Ptr<_23001604a_EnumItem>>::alloc(0LL,static_cast<jule::I64>(_24526_decls.len()));
	{
		auto &expr = _24526_decls;
		auto it = expr.begin();
		_iter_begin_4686973488:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_EnumItemDecl> _221db702a_decl = *it;
			{
				_24613_items.push(_221db702a_build_enum_item(_221db702a_decl));
			}
			_iter_next_4686973488:;
			++it;
			goto _iter_begin_4686973488;
		}
		_iter_end_4686973488:;
	}
	return _24613_items;
}



inline jule::Ptr<_23001604a_Enum> _221db702a_build_enum(jule::Ptr<_221d8b043_EnumDecl> _25319_decl) {
	return jule::new_struct_ptr<_23001604a_Enum>(new( std::nothrow ) _23001604a_Enum(_25319_decl->_field_token,_25319_decl->_field_public,_25319_decl->_field_ident,_221db702a_build_type(_25319_decl->_field_kind),_221db702a_build_enum_items(_25319_decl->_field_items),_221db702a_build_doc(_25319_decl->_field_doc_comments)));
}



inline jule::Ptr<_2200a2657_Var> _221db702a_build_var(jule::Ptr<_221d8b043_VarDecl> _26418_decl) {
	return jule::new_struct<_2200a2657_Var>(new( std::nothrow ) _2200a2657_Var(jule::Ptr<_2300254bb_Scope>(),_26418_decl->_field_token,_26418_decl->_field_ident,_26418_decl->_field_cpp_linked,_26418_decl->_field_constant,_26418_decl->_field_mutable,_26418_decl->_field_public,jule::Bool(),_26418_decl->_field_statically,_26418_decl->_field_reference,_221db702a_build_doc(_26418_decl->_field_doc_comments),_221db702a_build_type(_26418_decl->_field_kind),_221db702a_build_expr(_26418_decl->_field_expr),_221db702a_ReferenceStack::_static_method_new(),_26418_decl->_field_directives,jule::Ptr<_2200a2657_IterRelation>(),jule::Slice<jule::Ptr<_2200a2657_Var>>()));
}



inline jule::Slice<jule::Ptr<_2200a2657_Var>> _221db702a_build_vars(jule::Slice<jule::Ptr<_221d8b043_VarDecl>> _28219_decls) {
	jule::Slice<jule::Ptr<_2200a2657_Var>> _28313_vars = jule::Slice<jule::Ptr<_2200a2657_Var>>::alloc(0LL,static_cast<jule::I64>(_28219_decls.len()));
	{
		auto &expr = _28219_decls;
		auto it = expr.begin();
		_iter_begin_4686987824:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_VarDecl> _221db702a_decl = *it;
			{
				_28313_vars.push(_221db702a_build_var(_221db702a_decl));
			}
			_iter_next_4686987824:;
			++it;
			goto _iter_begin_4686987824;
		}
		_iter_end_4686987824:;
	}
	return _28313_vars;
}



inline jule::Ptr<_230019081_Impl> _221db702a_build_impl(jule::Ptr<_221d8b043_Impl> _29019_decl) {
	return jule::new_struct<_230019081_Impl>(new( std::nothrow ) _230019081_Impl(_29019_decl->_field_base,_29019_decl->_field_dest,_221db702a_build_methods(_29019_decl->_field_methods),_221db702a_build_vars(_29019_decl->_field_statics)));
}



inline jule::Ptr<_2300254bb_ScopeChecker> _2300254bb_new_scope_checker_base(jule::Ptr<_21eee051d_Sema>& _4132_s,jule::Ptr<_222edb48e_FnIns> _4146_owner) {
	return jule::new_struct_ptr<_2300254bb_ScopeChecker>(new( std::nothrow ) _2300254bb_ScopeChecker(_4132_s,_4146_owner,jule::Ptr<_2300254bb_ScopeChecker>(),jule::Int(),jule::new_struct<_2067a6b66_SymbolTable>(new( std::nothrow ) _2067a6b66_SymbolTable()),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221d8b043_ScopeTree>(),jule::Ptr<_2300b54e5_TypeKind>(),jule::Uintptr(),jule::Uintptr(),jule::Ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ptr<_2300254bb_ScopeChecker> _2300254bb_new_scope_checker(jule::Ptr<_21eee051d_Sema>& _4927_s,jule::Ptr<_222edb48e_FnIns> _4941_owner) {
	jule::Ptr<_2300254bb_ScopeChecker> _5013_base = _2300254bb_new_scope_checker_base(_4927_s,_4941_owner);
	_5013_base->_field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeLabel>>>(nullptr);
	_5013_base->_field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2300254bb_ScopeGoto>>>(nullptr);
	return _5013_base;
}



inline jule::Ptr<_2300254bb_ScopeLabel> _2300254bb_find_label_parent(jule::Str _5922_ident,jule::Ptr<_2300254bb_ScopeChecker> _5938_scope) {
	jule::Ptr<_2300254bb_ScopeLabel> _6013_label = _5938_scope->_method_find_label_scope(_5922_ident);
	while (_6013_label == nullptr) {
		{
			if ((_5938_scope->_field_parent == nullptr) || (_5938_scope->_field_owner != nullptr)) {
				return nullptr;
			}
			_5938_scope=_5938_scope->_field_parent;
			_6013_label=_5938_scope->_method_find_label_scope(_5922_ident);
		}
	_iter_next_4687000832:;
	}
	_iter_end_4687000832:;
	return _6013_label;
}



inline jule::Bool _2300254bb_stmt_is_goto_scope(jule::Any& _7324_stmt,jule::Ptr<_2300254bb_Scope>& _7336_sc) {
	{
		auto &_match_expr{ _7324_stmt };
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Scope>>())) { goto _case_end_4687008848; }
		_case_begin_4687008848:;
		{
			return _7324_stmt.operator jule::Ptr<_2300254bb_Scope>() == _7336_sc;
		}
		goto _match_end_4687007312;
		_case_end_4687008848:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_InfIter>>())) { goto _case_end_4687007744; }
		_case_begin_4687007744:;
		{
			return _7324_stmt.operator jule::Ptr<_2300254bb_InfIter>()->_field_scope == _7336_sc;
		}
		goto _match_end_4687007312;
		_case_end_4687007744:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_RangeIter>>())) { goto _case_end_4687007840; }
		_case_begin_4687007840:;
		{
			return _7324_stmt.operator jule::Ptr<_2300254bb_RangeIter>()->_field_scope == _7336_sc;
		}
		goto _match_end_4687007312;
		_case_end_4687007840:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_WhileIter>>())) { goto _case_end_4687007936; }
		_case_begin_4687007936:;
		{
			return _7324_stmt.operator jule::Ptr<_2300254bb_WhileIter>()->_field_scope == _7336_sc;
		}
		goto _match_end_4687007312;
		_case_end_4687007936:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Match>>())) { goto _case_end_4687008032; }
		_case_begin_4687008032:;
		{
			jule::Ptr<_2300254bb_Match> _8813_m = _7324_stmt.operator jule::Ptr<_2300254bb_Match>();
			{
				auto &expr = _8813_m->_field_cases;
				auto it = expr.begin();
				_iter_begin_4687018768:;
				if (it != expr.end()) {
					jule::Ptr<_2300254bb_Case> &_2300254bb_c = *it;
					{
						if (_2300254bb_c->_field_scope == _7336_sc) {
							return true;
						}
					}
					_iter_next_4687018768:;
					++it;
					goto _iter_begin_4687018768;
				}
				_iter_end_4687018768:;
			}
			return (_8813_m->_field_default != nullptr) && (_8813_m->_field_default->_field_scope == _7336_sc);
		}
		goto _match_end_4687007312;
		_case_end_4687008032:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Conditional>>())) { goto _case_end_4687008144; }
		_case_begin_4687008144:;
		{
			jule::Ptr<_2300254bb_Conditional> _9713_c = _7324_stmt.operator jule::Ptr<_2300254bb_Conditional>();
			{
				auto &expr = _9713_c->_field_elifs;
				auto it = expr.begin();
				_iter_begin_4687023568:;
				if (it != expr.end()) {
					jule::Ptr<_2300254bb_If> &_2300254bb_elif = *it;
					{
						if (_2300254bb_elif->_field_scope == _7336_sc) {
							return true;
						}
					}
					_iter_next_4687023568:;
					++it;
					goto _iter_begin_4687023568;
				}
				_iter_end_4687023568:;
			}
			return (_9713_c->_field_default != nullptr) && (_9713_c->_field_default->_field_scope == _7336_sc);
		}
		goto _match_end_4687007312;
		_case_end_4687008144:;
		_case_begin_4687006608:;
		{
			return false;
		}
		goto _match_end_4687007312;
		_case_end_4687006608:;
		_match_end_4687007312:;
	}
}



inline jule::Int _2300254bb_count_match_type(jule::Ptr<_2300254bb_Match>& _11022_m,jule::Ptr<_2300b54e5_TypeKind>& _11034_t) {
	jule::Int _11113_n = 0LL;
	jule::Str _1129_kind = _11034_t->_method_to_str();
	_julec_label_loop:;
	{
		auto &expr = _11022_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4687029408:;
		if (it != expr.end()) {
			jule::Ptr<_2300254bb_Case> &_2300254bb_c = *it;
			{
				if (_2300254bb_c == nullptr) {
					goto _iter_next_4687029408;
				}
				{
					auto &expr = _2300254bb_c->_field_exprs;
					auto it = expr.begin();
					_iter_begin_4687030848:;
					if (it != expr.end()) {
						jule::Ptr<_20683ebaa_Data> &_2300254bb_expr = *it;
						{
							if (_2300254bb_expr == nullptr) {
								goto _iter_end_4687029408;
							}
							if (_1129_kind == _2300254bb_expr->_field_model.operator jule::Ptr<_2300b54e5_TypeKind>()->_method_to_str()) {
								(_11113_n)++;
							}
						}
						_iter_next_4687030848:;
						++it;
						goto _iter_begin_4687030848;
					}
					_iter_end_4687030848:;
				}
			}
			_iter_next_4687029408:;
			++it;
			goto _iter_begin_4687029408;
		}
		_iter_end_4687029408:;
	}
	return _11113_n;
}



inline jule::Slice<jule::Ptr<_20683ebaa_Data>> _2300254bb_get_datas_from_tuple_data(jule::Ptr<_20683ebaa_Data>& _13435_d) {
	if (_13435_d->_field_kind->_method_tup() != nullptr) {
		{
			auto &_match_expr{ _13435_d->_field_model };
			if (!(_match_expr.type_is<jule::Ptr<_21eedb492_TupleExprModel>>())) { goto _case_end_4687046528; }
			_case_begin_4687046528:;
			{
				return _13435_d->_field_model.operator jule::Ptr<_21eedb492_TupleExprModel>()->_field_datas;
			}
			goto _match_end_4687036896;
			_case_end_4687046528:;
			_case_begin_4687036384:;
			{
				jule::Ptr<_2300b54e5_Tuple> _14121_t = _13435_d->_field_kind->_method_tup();
				jule::Slice<jule::Ptr<_20683ebaa_Data>> _14221_r = jule::Slice<jule::Ptr<_20683ebaa_Data>>::alloc(0LL,static_cast<jule::I64>(_14121_t->_field_types.len()));
				{
					auto &expr = _14121_t->_field_types;
					auto it = expr.begin();
					_iter_begin_4687041184:;
					if (it != expr.end()) {
						jule::Ptr<_2300b54e5_TypeKind> _2300254bb_kind = *it;
						{
							_14221_r.push(jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(_2300254bb_kind,jule::Ptr<_2300b54e5_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>())));
						}
						_iter_next_4687041184:;
						++it;
						goto _iter_begin_4687041184;
					}
					_iter_end_4687041184:;
				}
				return _14221_r;
			}
			goto _match_end_4687036896;
			_case_end_4687036384:;
			_match_end_4687036896:;
		}
	} else {
		return jule::Slice<jule::Ptr<_20683ebaa_Data>>({_13435_d});
	}
}



inline jule::Slice<jule::Any> _2300254bb_get_expr_models(jule::Any& _15625_m) {
	{
		auto &_match_expr{ _15625_m };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_TupleExpr>>())) { goto _case_end_4687048848; }
		_case_begin_4687048848:;
		{
			jule::Ptr<_221d8b043_TupleExpr> _15917_tup = _15625_m.operator jule::Ptr<_221d8b043_TupleExpr>();
			jule::Slice<jule::Any> _16017_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_15917_tup->_field_expr.len()));
			{
				auto &expr = _15917_tup->_field_expr;
				auto it = expr.begin();
				_iter_begin_4687051824:;
				if (it != expr.end()) {
					jule::Ptr<_221d8b043_Expr> _2300254bb_expr = *it;
					{
						_16017_models.push(_2300254bb_expr->_field_kind);
					}
					_iter_next_4687051824:;
					++it;
					goto _iter_begin_4687051824;
				}
				_iter_end_4687051824:;
			}
			return _16017_models;
		}
		goto _match_end_4687047872;
		_case_end_4687048848:;
		_case_begin_4687044544:;
		{
			return jule::Slice<jule::Any>({_15625_m});
		}
		goto _match_end_4687047872;
		_case_end_4687044544:;
		_match_end_4687047872:;
	}
}



inline jule::Bool _2300254bb_check_mut(jule::Ptr<_21eee051d_Sema>& _17119_s,jule::Ptr<_20683ebaa_Data>& _17130_left,jule::Ptr<_20683ebaa_Data> _17147_right,_2220dce43_Token _17161_error_token) {
	jule::Bool _17183_ok = jule::Bool();
	{
		if (!(((!(_17130_left->_field_mutable))))) { goto _case_end_4687058624; }
		_case_begin_4687058624:;
		{
			_17119_s->_method_push_err(_17161_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>());
			_17183_ok = false;
			return _17183_ok;
		}
		goto _match_end_4687056992;
		_case_end_4687058624:;
		if (!((((_17147_right != nullptr) && (!(_17147_right->_field_mutable))) && _17147_right->_field_kind->_method_mutable()))) { goto _case_end_4687058816; }
		_case_begin_4687058816:;
		{
			_17119_s->_method_push_err(_17161_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>());
			_17183_ok = false;
			return _17183_ok;
		}
		goto _match_end_4687056992;
		_case_end_4687058816:;
		_case_begin_4687057168:;
		{
			_17183_ok = true;
			return _17183_ok;
		}
		goto _match_end_4687056992;
		_case_end_4687057168:;
		_match_end_4687056992:;
	}
}



inline jule::Bool _2300254bb_check_assign(jule::Ptr<_21eee051d_Sema>& _18622_s,jule::Ptr<_20683ebaa_Data>& _18637_left,jule::Ptr<_20683ebaa_Data> _18654_right,_2220dce43_Token _18668_error_token) {
	jule::Bool _18690_ok = jule::Bool();
	jule::Ptr<_222edb48e_FnIns> _1879_f = _18637_left->_field_kind->_method_fnc();
	if (((_1879_f != nullptr) && (_1879_f->_field_decl != nullptr)) && _1879_f->_field_decl->_field_global) {
		_18622_s->_method_push_err(_18668_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_18690_ok = false;
		return _18690_ok;
	}
	{
		if (!((_18637_left->_method_is_const()))) { goto _case_end_4687074784; }
		_case_begin_4687074784:;
		{
			_18622_s->_method_push_err(_18668_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
			_18622_s->_method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
			_18690_ok = false;
			return _18690_ok;
		}
		goto _match_end_4687070288;
		_case_end_4687074784:;
		if (!(((!(_18637_left->_field_lvalue))))) { goto _case_end_4687074960; }
		_case_begin_4687074960:;
		{
			_18622_s->_method_push_err(_18668_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>());
			_18690_ok = false;
			return _18690_ok;
		}
		goto _match_end_4687070288;
		_case_end_4687074960:;
		if (!(((!(_2300254bb_check_mut(_18622_s,_18637_left,_18654_right,_18668_error_token)))))) { goto _case_end_4687075056; }
		_case_begin_4687075056:;
		{
			_18690_ok = false;
			return _18690_ok;
		}
		goto _match_end_4687070288;
		_case_end_4687075056:;
		_case_begin_4687073392:;
		{
			_18690_ok = true;
			return _18690_ok;
		}
		goto _match_end_4687070288;
		_case_end_4687073392:;
		_match_end_4687070288:;
	}
}



inline jule::Bool _2300254bb_is_valid_ast_st_for_next_st(jule::Any& _21137_n) {
	{
		auto &_match_expr{ _21137_n };
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_AssignSt>>())) { goto _case_end_4687084432; }
		_case_begin_4687084432:;
		{
			return (!(_21137_n.operator jule::Ptr<_221d8b043_AssignSt>()->_field_declarative));
		}
		goto _match_end_4687083456;
		_case_end_4687084432:;
		if (!(_match_expr.type_is<jule::Ptr<_221d8b043_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_221d8b043_Expr>>())) { goto _case_end_4687084528; }
		_case_begin_4687084528:;
		{
			return true;
		}
		goto _match_end_4687083456;
		_case_end_4687084528:;
		_case_begin_4687076192:;
		{
			return false;
		}
		goto _match_end_4687083456;
		_case_end_4687076192:;
		_match_end_4687083456:;
	}
}



inline jule::Bool _2300254bb_is_valid_st_for_next_st(jule::Any& _22529_st) {
	{
		auto &_match_expr{ _22529_st };
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_2300254bb_Postfix>>() || _match_expr.type_is<jule::Ptr<_2300254bb_Assign>>() || _match_expr.type_is<jule::Ptr<_2300254bb_MultiAssign>>())) { goto _case_end_4687088624; }
		_case_begin_4687088624:;
		{
			return true;
		}
		goto _match_end_4687086800;
		_case_end_4687088624:;
		if (!(_match_expr.type_is<jule::Ptr<_20683ebaa_Data>>())) { goto _case_end_4687088720; }
		_case_begin_4687088720:;
		{
			{
				auto &_match_expr{ _22529_st.operator jule::Ptr<_20683ebaa_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ptr<_21eedb492_FnCallExprModel>>())) { goto _case_end_4687096912; }
				_case_begin_4687096912:;
				{
					return true;
				}
				goto _match_end_4687095360;
				_case_end_4687096912:;
				_case_begin_4687094480:;
				{
					return false;
				}
				goto _match_end_4687095360;
				_case_end_4687094480:;
				_match_end_4687095360:;
			}
		}
		goto _match_end_4687086800;
		_case_end_4687088720:;
		_case_begin_4687087216:;
		{
			return false;
		}
		goto _match_end_4687086800;
		_case_end_4687087216:;
		_match_end_4687086800:;
	}
}



inline jule::Bool _2300254bb_st_is_def(jule::Any& _24415_st) {
	{
		auto &_match_expr{ _24415_st };
		if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4687098624; }
		_case_begin_4687098624:;
		{
			return true;
		}
		goto _match_end_4687096640;
		_case_end_4687098624:;
		_case_begin_4687094208:;
		{
			return false;
		}
		goto _match_end_4687096640;
		_case_end_4687094208:;
		_match_end_4687096640:;
	}
}



inline jule::Ptr<_2200a2657_Var> _2200229c3_find_var_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>& _2729_files,jule::Str _2752_ident,jule::Bool _2764_cpp_linked) {
	{
		auto &expr = _2729_files;
		auto it = expr.begin();
		_iter_begin_4687100464:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _2200229c3_f = *it;
			{
				jule::Ptr<_2200a2657_Var> _2917_v = _2200229c3_f->_method_find_var(_2752_ident,_2764_cpp_linked);
				if (_2917_v != nullptr) {
					return _2917_v;
				}
			}
			_iter_next_4687100464:;
			++it;
			goto _iter_begin_4687100464;
		}
		_iter_end_4687100464:;
	}
	return nullptr;
}



inline jule::Ptr<_2300b54e5_TypeAlias> _2200229c3_find_type_alias_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>& _3936_files,jule::Str _3959_ident,jule::Bool _3971_cpp_linked) {
	{
		auto &expr = _3936_files;
		auto it = expr.begin();
		_iter_begin_4687106560:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _2200229c3_f = *it;
			{
				jule::Ptr<_2300b54e5_TypeAlias> _4117_ta = _2200229c3_f->_method_find_type_alias(_3959_ident,_3971_cpp_linked);
				if (_4117_ta != nullptr) {
					return _4117_ta;
				}
			}
			_iter_next_4687106560:;
			++it;
			goto _iter_begin_4687106560;
		}
		_iter_end_4687106560:;
	}
	return nullptr;
}



inline jule::Ptr<_2398d04dc_Struct> _2200229c3_find_struct_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>& _5132_files,jule::Str _5155_ident,jule::Bool _5167_cpp_linked) {
	{
		auto &expr = _5132_files;
		auto it = expr.begin();
		_iter_begin_4687112672:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _2200229c3_f = *it;
			{
				jule::Ptr<_2398d04dc_Struct> _5317_s = _2200229c3_f->_method_find_struct(_5155_ident,_5167_cpp_linked);
				if (_5317_s != nullptr) {
					return _5317_s;
				}
			}
			_iter_next_4687112672:;
			++it;
			goto _iter_begin_4687112672;
		}
		_iter_end_4687112672:;
	}
	return nullptr;
}



inline jule::Ptr<_222edb48e_Fn> _2200229c3_find_fn_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>& _6328_files,jule::Str _6351_ident,jule::Bool _6363_cpp_linked) {
	{
		auto &expr = _6328_files;
		auto it = expr.begin();
		_iter_begin_4687118784:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _2200229c3_file = *it;
			{
				jule::Ptr<_222edb48e_Fn> _6517_f = _2200229c3_file->_method_find_fn(_6351_ident,_6363_cpp_linked);
				if (_6517_f != nullptr) {
					return _6517_f;
				}
			}
			_iter_next_4687118784:;
			++it;
			goto _iter_begin_4687118784;
		}
		_iter_end_4687118784:;
	}
	return nullptr;
}



inline jule::Ptr<_2300167cb_Trait> _2200229c3_find_trait_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>& _7531_files,jule::Str _7554_ident) {
	{
		auto &expr = _7531_files;
		auto it = expr.begin();
		_iter_begin_4687124816:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _2200229c3_f = *it;
			{
				jule::Ptr<_2300167cb_Trait> _7717_t = _2200229c3_f->_method_find_trait(_7554_ident);
				if (_7717_t != nullptr) {
					return _7717_t;
				}
			}
			_iter_next_4687124816:;
			++it;
			goto _iter_begin_4687124816;
		}
		_iter_end_4687124816:;
	}
	return nullptr;
}



inline jule::Ptr<_23001604a_Enum> _2200229c3_find_enum_in_package(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>& _8730_files,jule::Str _8753_ident) {
	{
		auto &expr = _8730_files;
		auto it = expr.begin();
		_iter_begin_4687128384:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _2200229c3_f = *it;
			{
				jule::Ptr<_23001604a_Enum> _8917_e = _2200229c3_f->_method_find_enum(_8753_ident);
				if (_8917_e != nullptr) {
					return _8917_e;
				}
			}
			_iter_next_4687128384:;
			++it;
			goto _iter_begin_4687128384;
		}
		_iter_end_4687128384:;
	}
	return nullptr;
}



inline jule::Bool _21eee051d_is_valid_model_for_ref(jule::Any _1627_m) {
	{
		auto &_match_expr{ _1627_m };
		if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4687152448; }
		_case_begin_4687152448:;
		{
			return true;
		}
		goto _match_end_4687130288;
		_case_end_4687152448:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_StructSubIdentExprModel>>())) { goto _case_end_4687152544; }
		_case_begin_4687152544:;
		{
			jule::Ptr<_21eedb492_StructSubIdentExprModel> _2213_model = _1627_m.operator jule::Ptr<_21eedb492_StructSubIdentExprModel>();
			return _21eee051d_is_valid_model_for_ref(_2213_model->_field_expr);
		}
		goto _match_end_4687130288;
		_case_end_4687152544:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_TraitSubIdentExprModel>>())) { goto _case_end_4687133632; }
		_case_begin_4687133632:;
		{
			jule::Ptr<_21eedb492_TraitSubIdentExprModel> _2613_model = _1627_m.operator jule::Ptr<_21eedb492_TraitSubIdentExprModel>();
			return _21eee051d_is_valid_model_for_ref(_2613_model->_field_expr);
		}
		goto _match_end_4687130288;
		_case_end_4687133632:;
		_case_begin_4687151312:;
		{
			return false;
		}
		goto _match_end_4687130288;
		_case_end_4687151312:;
		_match_end_4687130288:;
	}
}



inline _23886c227_Log _21eee051d_compiler_err(_2220dce43_Token& _3418_token,jule::Bool _3432_line,jule::Str _3444_fmt,jule::Slice<jule::Any> _3457_args) {
	_23886c227_Log _3513_log = _23886c227_Log(1LLU,_3418_token._field_row,_3418_token._field_column,_3418_token._field_file->_method_path(),_23886c227_logf(_3444_fmt,_3457_args),jule::Str(),jule::Str());
	if (_3432_line) {
		_3513_log._field_line=_3418_token._field_file->_method_get_row(_3418_token._field_row);
	}
	return _3513_log;
}



inline jule::Bool _21eee051d_imp_is_lookupable(jule::Ptr<_2200229c3_ImportInfo>& _4823_i,jule::Str _4839_ident) {
	if (_4823_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_4823_i->_field_import_all))) {
		if (_4823_i->_field_selected.len() > 0LL) {
			return _4823_i->_method_exist_ident(_4839_ident);
		}
	}
	return _4823_i->_field_import_all;
}



inline jule::Slice<jule::Ptr<_2200a2657_Var>> _21eee051d_build_ret_vars(jule::Ptr<_222edb48e_FnIns>& _6124_f) {
	if (_6124_f->_field_decl->_method_is_void() || (_6124_f->_field_result == nullptr)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_2200a2657_Var>> _6613_vars = nullptr;
	jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> _6713_types = _2200223c9_get_result_types(_6124_f->_field_result);
	{
		auto &expr = _6124_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4687178384:;
		if (it != expr.end()) {
			jule::Int _21eee051d_i = it - expr.begin();
			_2220dce43_Token _21eee051d_ident = *it;
			{
				if (_2220dce43_is_ignore_ident(_21eee051d_ident._field_kind)) {
					goto _iter_next_4687178384;
				}
				jule::Ptr<_2200a2657_Var> _7317_v = jule::new_struct<_2200a2657_Var>(new( std::nothrow ) _2200a2657_Var(_6124_f->_field_scope,_21eee051d_ident,_21eee051d_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),_6713_types[_21eee051d_i])),jule::new_struct<_20683ebaa_Value>(new( std::nothrow ) _20683ebaa_Value(jule::Ptr<_221d8b043_Expr>(),jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data()))),jule::Ptr<_221db702a_ReferenceStack>(),jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Ptr<_2200a2657_IterRelation>(),jule::Slice<jule::Ptr<_2200a2657_Var>>()));
				_6613_vars.push(_7317_v);
			}
			_iter_next_4687178384:;
			++it;
			_21eee051d_i++;
			goto _iter_begin_4687178384;
		}
		_iter_end_4687178384:;
	}
	return _6613_vars;
}



inline jule::Slice<jule::Ptr<_2200a2657_Var>> _21eee051d_build_param_vars(jule::Ptr<_222edb48e_FnIns>& _9026_f) {
	if (_9026_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_2200a2657_Var>> _9513_vars = jule::Slice<jule::Ptr<_2200a2657_Var>>::alloc(0LL,static_cast<jule::I64>(_9026_f->_field_params.len()));
	{
		auto &expr = _9026_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4687187584:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_ParamIns> _21eee051d_p = *it;
			{
				jule::Ptr<_2200a2657_Var> _9717_v = jule::new_struct<_2200a2657_Var>(new( std::nothrow ) _2200a2657_Var(_9026_f->_field_scope,_21eee051d_p->_field_decl->_field_token,_21eee051d_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_21eee051d_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),_21eee051d_p->_field_decl->_field_reference,jule::Str(),jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol()),jule::new_struct<_20683ebaa_Value>(new( std::nothrow ) _20683ebaa_Value(jule::Ptr<_221d8b043_Expr>(),jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data()))),jule::Ptr<_221db702a_ReferenceStack>(),jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Ptr<_2200a2657_IterRelation>(),jule::Slice<jule::Ptr<_2200a2657_Var>>()));
				{
					if (!((_21eee051d_p->_field_decl->_method_is_self()))) { goto _case_end_4687195504; }
					_case_begin_4687195504:;
					{
						_9717_v->_field_kind->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_9026_f->_field_owner));
						_9717_v->_field_reference=true;
						if (_21eee051d_p->_field_decl->_method_is_ref()) {
							_9717_v->_field_ident=_9717_v->_field_ident.slice(1LL);
							_9717_v->_field_kind->_field_kind->_field_kind=jule::new_struct_ptr<_2300b54e5_Sptr>(new( std::nothrow ) _2300b54e5_Sptr(_9717_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_4687194592;
					_case_end_4687195504:;
					if (!((_21eee051d_p->_field_decl->_field_variadic))) { goto _case_end_4687195008; }
					_case_begin_4687195008:;
					{
						_9717_v->_field_kind->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2300b54e5_Slc>(new( std::nothrow ) _2300b54e5_Slc(_21eee051d_p->_field_kind->_method_clone()))));
					}
					goto _match_end_4687194592;
					_case_end_4687195008:;
					_case_begin_4687194704:;
					{
						_9717_v->_field_kind->_field_kind=_21eee051d_p->_field_kind->_method_clone();
					}
					goto _match_end_4687194592;
					_case_end_4687194704:;
					_match_end_4687194592:;
				}
				_9513_vars.push(_9717_v);
			}
			_iter_next_4687187584:;
			++it;
			goto _iter_begin_4687187584;
		}
		_iter_end_4687187584:;
	}
	return _9513_vars;
}



inline jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>> _21eee051d_build_generic_type_aliases(jule::Ptr<_222edb48e_FnIns>& _13936_f) {
	jule::I64 _14013_size = _13936_f->_field_generics.len();
	if (_13936_f->_field_decl->_field_owner != nullptr) {
		_14013_size+=static_cast<jule::I64>(_13936_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_14013_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>> _14913_aliases = jule::Slice<jule::Ptr<_2300b54e5_TypeAlias>>::alloc(0LL,_14013_size);
	{
		auto &expr = _13936_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4687212400:;
		if (it != expr.end()) {
			jule::Int _21eee051d_i = it - expr.begin();
			jule::Ptr<_2300b54e5_TypeKind> _21eee051d_g = *it;
			{
				jule::Ptr<_221d8b043_GenericDecl> _15217_decl = _13936_f->_field_decl->_field_generics[_21eee051d_i];
				_14913_aliases.push(jule::new_struct<_2300b54e5_TypeAlias>(new( std::nothrow ) _2300b54e5_TypeAlias(_13936_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_15217_decl->_field_token,_15217_decl->_field_ident,jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),_21eee051d_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_4687212400:;
			++it;
			_21eee051d_i++;
			goto _iter_begin_4687212400;
		}
		_iter_end_4687212400:;
	}
	if (_13936_f->_field_decl->_field_owner != nullptr) {
		jule::Ptr<_2398d04dc_StructIns> _16417_owner = _13936_f->_field_owner;
		{
			auto &expr = _16417_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_4687217200:;
			if (it != expr.end()) {
				jule::Int _21eee051d_i = it - expr.begin();
				jule::Ptr<_2300b54e5_TypeKind> _21eee051d_g = *it;
				{
					jule::Ptr<_221d8b043_GenericDecl> _16621_decl = _16417_owner->_field_decl->_field_generics[_21eee051d_i];
					_14913_aliases.push(jule::new_struct<_2300b54e5_TypeAlias>(new( std::nothrow ) _2300b54e5_TypeAlias(_13936_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_16621_decl->_field_token,_16621_decl->_field_ident,jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),_21eee051d_g)),jule::Str(),jule::Slice<jule::Any>())));
				}
				_iter_next_4687217200:;
				++it;
				_21eee051d_i++;
				goto _iter_begin_4687217200;
			}
			_iter_end_4687217200:;
		}
	}
	return _14913_aliases;
}



inline jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_find_file(jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>& _18119_files,jule::Ptr<_22212e407_File>& _18143_handler) {
	{
		auto &expr = _18119_files;
		auto it = expr.begin();
		_iter_begin_4687225552:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _21eee051d_fl = *it;
			{
				if (_21eee051d_fl->_field_file == _18143_handler) {
					return _21eee051d_fl;
				}
			}
			_iter_next_4687225552:;
			++it;
			goto _iter_begin_4687225552;
		}
		_iter_end_4687225552:;
	}
	return nullptr;
}



inline std::tuple<jule::Bool,jule::Bool> _21eee051d_conditional_has_ret(jule::Ptr<_2300254bb_Conditional> _19028_c) {
	jule::Bool _19047_ok = jule::Bool();
	jule::Bool _19057_breaking = jule::Bool();
	jule::Bool _19113_breaked = false;
	{
		auto &expr = _19028_c->_field_elifs;
		auto it = expr.begin();
		_iter_begin_4687231792:;
		if (it != expr.end()) {
			jule::Ptr<_2300254bb_If> _21eee051d_elif = *it;
			{
				if (_21eee051d_elif == nullptr) {
					_19047_ok = false;
					_19057_breaking = false;
					return std::make_tuple(_19047_ok,_19057_breaking);
				}
				std::tie(_19047_ok,std::ignore,_19057_breaking) = _21eee051d___has_ret(_21eee051d_elif->_field_scope);
				_19113_breaked=_19113_breaked || _19057_breaking;
				if ((!(_19047_ok))) {
					_19047_ok = false;
					_19057_breaking = _19113_breaked;
					return std::make_tuple(_19047_ok,_19057_breaking);
				}
			}
			_iter_next_4687231792:;
			++it;
			goto _iter_begin_4687231792;
		}
		_iter_end_4687231792:;
	}
	if (_19028_c->_field_default == nullptr) {
		_19047_ok = false;
		_19057_breaking = _19113_breaked;
		return std::make_tuple(_19047_ok,_19057_breaking);
	}
	std::tie(_19047_ok,std::ignore,_19057_breaking) = _21eee051d___has_ret(_19028_c->_field_default->_field_scope);
	_19113_breaked=_19113_breaked || _19057_breaking;
	_19057_breaking = _19113_breaked;
	return std::make_tuple(_19047_ok,_19057_breaking);
}



inline jule::Bool _21eee051d_match_has_ret(jule::Ptr<_2300254bb_Match> _21222_m) {
	if (_21222_m->_field_default == nullptr) {
		return false;
	}
	jule::Bool _21713_ok = true;
	jule::Bool _21813_falled = false;
	jule::Bool _21913_breaked = false;
	{
		auto &expr = _21222_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4687244416:;
		if (it != expr.end()) {
			jule::Ptr<_2300254bb_Case> _21eee051d_c = *it;
			{
				if (_21eee051d_c == nullptr) {
					return false;
				}
				std::tie(_21713_ok,_21813_falled,_21913_breaked) = _21eee051d___has_ret(_21eee051d_c->_field_scope);
				if (((!(_21713_ok)) && (!(_21813_falled))) || _21913_breaked) {
					return false;
				}
				{
					if (!(((!(_21713_ok))))) { goto _case_end_4687248880; }
					_case_begin_4687248880:;
					{
						if ((!(_21813_falled))) {
							return false;
						}
						goto _case_begin_4687248976;
					}
					goto _match_end_4687248576;
					_case_end_4687248880:;
					if (!((_21813_falled))) { goto _case_end_4687248976; }
					_case_begin_4687248976:;
					{
						if (_21eee051d_c->_field_next == nullptr) {
							return false;
						}
						goto _iter_next_4687244416;
					}
					goto _match_end_4687248576;
					_case_end_4687248976:;
					_match_end_4687248576:;
				}
				_21813_falled=false;
			}
			_iter_next_4687244416:;
			++it;
			goto _iter_begin_4687244416;
		}
		_iter_end_4687244416:;
	}
	return _21eee051d_has_ret(_21222_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _21eee051d___has_ret(jule::Ptr<_2300254bb_Scope> _24818_s) {
	jule::Bool _24831_ok = jule::Bool();
	jule::Bool _24841_falled = jule::Bool();
	jule::Bool _24855_breaked = jule::Bool();
	if (_24818_s == nullptr) {
		_24831_ok = false;
		_24841_falled = false;
		_24855_breaked = false;
		return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
	}
	{
		auto &expr = _24818_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4687254512:;
		if (it != expr.end()) {
			jule::Any _21eee051d_st = *it;
			{
				{
					auto &_match_expr{ _21eee051d_st };
					if (!(_match_expr.type_is<jule::Ptr<_2300254bb_FallSt>>())) { goto _case_end_4687257088; }
					_case_begin_4687257088:;
					{
						_24841_falled=true;
					}
					goto _match_end_4687258160;
					_case_end_4687257088:;
					if (!(_match_expr.type_is<jule::Ptr<_2300254bb_BreakSt>>())) { goto _case_end_4687258240; }
					_case_begin_4687258240:;
					{
						_24831_ok = false;
						_24841_falled = false;
						_24855_breaked = true;
						return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
					}
					goto _match_end_4687258160;
					_case_end_4687258240:;
					if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ContSt>>())) { goto _case_end_4687258512; }
					_case_begin_4687258512:;
					{
						_24831_ok = false;
						_24841_falled = false;
						_24855_breaked = true;
						return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
					}
					goto _match_end_4687258160;
					_case_end_4687258512:;
					if (!(_match_expr.type_is<jule::Ptr<_2300254bb_InfIter>>())) { goto _case_end_4687258608; }
					_case_begin_4687258608:;
					{
						_24831_ok=_21eee051d_has_ret(_21eee051d_st.operator jule::Ptr<_2300254bb_InfIter>()->_field_scope);
						if (_24831_ok) {
							_24831_ok = true;
							_24841_falled = false;
							_24855_breaked = false;
							return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
						}
					}
					goto _match_end_4687258160;
					_case_end_4687258608:;
					if (!(_match_expr.type_is<jule::Ptr<_2300254bb_RetSt>>())) { goto _case_end_4687258704; }
					_case_begin_4687258704:;
					{
						_24831_ok = true;
						return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
					}
					goto _match_end_4687258160;
					_case_end_4687258704:;
					if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Scope>>())) { goto _case_end_4687258800; }
					_case_begin_4687258800:;
					{
						_24831_ok=_21eee051d_has_ret(_21eee051d_st.operator jule::Ptr<_2300254bb_Scope>());
						if (_24831_ok) {
							_24831_ok = true;
							_24841_falled = false;
							_24855_breaked = false;
							return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
						}
					}
					goto _match_end_4687258160;
					_case_end_4687258800:;
					if (!(_match_expr.type_is<jule::Ptr<_20683ebaa_Data>>())) { goto _case_end_4687258912; }
					_case_begin_4687258912:;
					{
						{
							auto &_match_expr{ _21eee051d_st.operator jule::Ptr<_20683ebaa_Data>()->_field_model };
							if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>>())) { goto _case_end_4687274096; }
							_case_begin_4687274096:;
							{
								_24831_ok = true;
								return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
							}
							goto _match_end_4687275712;
							_case_end_4687274096:;
							_match_end_4687275712:;
						}
					}
					goto _match_end_4687258160;
					_case_end_4687258912:;
					if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Conditional>>())) { goto _case_end_4687259024; }
					_case_begin_4687259024:;
					{
						std::tie(_24831_ok,_24855_breaked) = _21eee051d_conditional_has_ret(_21eee051d_st.operator jule::Ptr<_2300254bb_Conditional>());
						if (_24831_ok) {
							_24831_ok = true;
							_24841_falled = false;
							_24855_breaked = false;
							return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
						}
						if (_24855_breaked) {
							_24831_ok = false;
							_24841_falled = false;
							return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
						}
					}
					goto _match_end_4687258160;
					_case_end_4687259024:;
					if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Match>>())) { goto _case_end_4687259136; }
					_case_begin_4687259136:;
					{
						_24831_ok=_21eee051d_match_has_ret(_21eee051d_st.operator jule::Ptr<_2300254bb_Match>());
						if (_24831_ok) {
							_24831_ok = true;
							_24841_falled = false;
							_24855_breaked = false;
							return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
						}
					}
					goto _match_end_4687258160;
					_case_end_4687259136:;
					_match_end_4687258160:;
				}
			}
			_iter_next_4687254512:;
			++it;
			goto _iter_begin_4687254512;
		}
		_iter_end_4687254512:;
	}
	_24831_ok = false;
	return std::make_tuple(_24831_ok,_24841_falled,_24855_breaked);
}



inline jule::Bool _21eee051d_has_ret(jule::Ptr<_2300254bb_Scope> _30716_s) {
	jule::Bool _30810_ok;
	std::tie(_30810_ok,std::ignore,std::ignore) = _21eee051d___has_ret(_30716_s);
	return _30810_ok;
}



inline void _21eee051d_push_suggestion(_23886c227_Log* _31231_log,jule::Str _31242_fmt,jule::Slice<jule::Any> _31255_args) {
	_31231_log->_field_suggestion=_23886c227_logf(_31242_fmt,_31255_args);
}



inline jule::Slice<jule::Ptr<_2300b54e5_TypeKind>> _2200223c9_get_result_types(jule::Ptr<_2300b54e5_TypeKind>& _2626_result) {
	{
		if (!((_2626_result == nullptr))) { goto _case_end_4687293968; }
		_case_begin_4687293968:;
		{
			return nullptr;
		}
		goto _match_end_4687290288;
		_case_end_4687293968:;
		if (!((_2626_result->_method_tup() == nullptr))) { goto _case_end_4687293328; }
		_case_begin_4687293328:;
		{
			return jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>({_2626_result});
		}
		goto _match_end_4687290288;
		_case_end_4687293328:;
		_case_begin_4687291952:;
		{
			return _2626_result->_method_tup()->_field_types;
		}
		goto _match_end_4687290288;
		_case_end_4687291952:;
		_match_end_4687290288:;
	}
}



inline jule::Bool _2200223c9_trait_has_reference_receiver(jule::Ptr<_2300167cb_Trait>& _3934_t) {
	{
		auto &expr = _3934_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4687295632:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> &_2200223c9_f = *it;
			{
				if (_2200223c9_f->_field_statically) {
					goto _iter_next_4687295632;
				}
				jule::Ptr<_222edb48e_Param> _4613_p = _2200223c9_f->_field_params[0LL];
				if (_4613_p->_method_is_ref() && _4613_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_4687295632:;
			++it;
			goto _iter_begin_4687295632;
		}
		_iter_end_4687295632:;
	}
	return false;
}



inline jule::Bool _2200223c9_float_assignable(jule::Str _5421_kind,jule::Ptr<_20683ebaa_Data>& _5433_d) {
	jule::Str _559_value = _2389d34d1_fmt_float(static_cast<jule::F64>(_5433_d->_field_constant->_method_as_f64()),'g',-1LL,64LL);
	return _206e24cd9_check_bit_float(_559_value,static_cast<jule::Int>(_206e24cd9_bitsize_of(_5421_kind)));
}



inline jule::Bool _2200223c9_sig_assignable(jule::Str _5919_kind,jule::Ptr<_20683ebaa_Data>& _5931_d) {
	jule::F64 _609_min = _206e286b1_min(_5919_kind);
	jule::F64 _619_max = _206e286b1_max(_5919_kind);
	{
		if (!((_5931_d->_field_constant->_method_is_f64()))) { goto _case_end_4687308880; }
		_case_begin_4687308880:;
		{
			jule::F64 _6513_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_f64());
			jule::F64 _6614_i;
			jule::F64 _6617_frac;
			std::tie(_6614_i,_6617_frac) = _221b4456b_modf(_6513_x);
			if (_6617_frac != 0LL) {
				return false;
			}
			return (_6614_i >= _609_min) && (_6614_i <= _619_max);
		}
		goto _match_end_4687308576;
		_case_end_4687308880:;
		if (!((_5931_d->_field_constant->_method_is_u64()))) { goto _case_end_4687308976; }
		_case_begin_4687308976:;
		{
			jule::F64 _7313_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_u64());
			if (_7313_x <= _619_max) {
				return true;
			}
		}
		goto _match_end_4687308576;
		_case_end_4687308976:;
		if (!((_5931_d->_field_constant->_method_is_i64()))) { goto _case_end_4687309072; }
		_case_begin_4687309072:;
		{
			jule::F64 _7913_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_i64());
			return (_609_min <= _7913_x) && (_7913_x <= _619_max);
		}
		goto _match_end_4687308576;
		_case_end_4687309072:;
		_match_end_4687308576:;
	}
	return false;
}



inline jule::Bool _2200223c9_unsig_assignable(jule::Str _8621_kind,jule::Ptr<_20683ebaa_Data>& _8633_d) {
	jule::F64 _879_max = _206e286b1_max(_8621_kind);
	if (_8633_d->_field_is_rune && (_8621_kind == jule::Str("u8", 2))) {
		return _20707b281_is_ascii(static_cast<jule::I32>(_8633_d->_field_constant->_method_read_i64()));
	}
	{
		if (!((_8633_d->_field_constant->_method_is_f64()))) { goto _case_end_4687323344; }
		_case_begin_4687323344:;
		{
			jule::F64 _9413_x = _8633_d->_field_constant->_method_read_f64();
			if (_9413_x < 0LL) {
				return false;
			}
			jule::F64 _9914_i;
			jule::F64 _9917_frac;
			std::tie(_9914_i,_9917_frac) = _221b4456b_modf(_9413_x);
			if (_9917_frac != 0LL) {
				return false;
			}
			return _9914_i <= _879_max;
		}
		goto _match_end_4687325664;
		_case_end_4687323344:;
		if (!((_8633_d->_field_constant->_method_is_u64()))) { goto _case_end_4687324480; }
		_case_begin_4687324480:;
		{
			jule::F64 _10613_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_u64());
			if (_10613_x <= _879_max) {
				return true;
			}
		}
		goto _match_end_4687325664;
		_case_end_4687324480:;
		if (!((_8633_d->_field_constant->_method_is_i64()))) { goto _case_end_4687324576; }
		_case_begin_4687324576:;
		{
			jule::F64 _11213_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_i64());
			return (0LL <= _11213_x) && (_11213_x <= _879_max);
		}
		goto _match_end_4687325664;
		_case_end_4687324576:;
		_match_end_4687325664:;
	}
	return false;
}



inline jule::Bool _2200223c9_int_assignable(jule::Str _11919_kind,jule::Ptr<_20683ebaa_Data>& _11931_d) {
	{
		if (!((_206ec1e1e_is_sig_int(_11919_kind)))) { goto _case_end_4687341072; }
		_case_begin_4687341072:;
		{
			return _2200223c9_sig_assignable(_11919_kind,_11931_d);
		}
		goto _match_end_4687338816;
		_case_end_4687341072:;
		if (!((_206ec1e1e_is_unsig_int(_11919_kind)))) { goto _case_end_4687341168; }
		_case_begin_4687341168:;
		{
			return _2200223c9_unsig_assignable(_11919_kind,_11931_d);
		}
		goto _match_end_4687338816;
		_case_end_4687341168:;
		_case_begin_4687338960:;
		{
			return false;
		}
		goto _match_end_4687338816;
		_case_end_4687338960:;
		_match_end_4687338816:;
	}
}



inline jule::Any _20683ebaa_find_builtins_import(jule::Str _4625_ident,jule::Ptr<_2200229c3_ImportInfo> _4637_imp) {
	return _206d53311_find_package_builtin_def(_4637_imp->_field_link_path,_4625_ident);
}



inline void _20683ebaa_make_struct_lit_alloc(jule::Ptr<_20683ebaa_Data>& _5031_d,jule::Ptr<_21eedb492_StructLitExprModel>& _5046_lit) {
	_5031_d->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2300b54e5_Sptr>(new( std::nothrow ) _2300b54e5_Sptr(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_5046_lit->_field_strct))))));
	_5031_d->_field_model=jule::Any(jule::new_struct<_21eedb492_AllocStructLitExprModel>(new( std::nothrow ) _21eedb492_AllocStructLitExprModel(_5046_lit)));
}



inline jule::Ptr<_2200a2657_Var> _20683ebaa_build_error_var(jule::Ptr<_2300254bb_Scope>& _6225_s,jule::Ptr<_221d8b043_FnCallExpr>& _6241_fc) {
	return jule::new_struct<_2200a2657_Var>(new( std::nothrow ) _2200a2657_Var(_6225_s,_6241_fc->_field_token,jule::Str("error", 5),jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),false,jule::Str(),jule::new_struct<_2300b54e5_TypeSymbol>(new( std::nothrow ) _2300b54e5_TypeSymbol(jule::Ptr<_221d8b043_TypeDecl>(),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("any", 3)))))),jule::new_struct<_20683ebaa_Value>(new( std::nothrow ) _20683ebaa_Value(jule::Ptr<_221d8b043_Expr>(),jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data()))),jule::Ptr<_221db702a_ReferenceStack>(),jule::Slice<jule::Ptr<_221d8b043_Directive>>(),jule::Ptr<_2200a2657_IterRelation>(),jule::Slice<jule::Ptr<_2200a2657_Var>>()));
}



inline jule::Any _20683ebaa_find_builtins_sema(jule::Str _8123_ident,jule::Ptr<_21eee051d_Sema> _8139_s) {
	{
		auto &expr = _8139_s->_field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4687354800:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _20683ebaa_imp = *it;
			{
				if (_20683ebaa_imp->_field_import_all || _20683ebaa_imp->_method_exist_ident(_8123_ident)) {
					jule::Any _8421_def = _20683ebaa_find_builtins_import(_8123_ident,_20683ebaa_imp);
					if (_8421_def != nullptr) {
						return _8421_def;
					}
				}
			}
			_iter_next_4687354800:;
			++it;
			goto _iter_begin_4687354800;
		}
		_iter_end_4687354800:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _20683ebaa_is_ok_for_shifting(jule::Ptr<_20683ebaa_Data>& _9328_d) {
	jule::Ptr<_2300b54e5_Prim> _949_prim = _9328_d->_field_kind->_method_prim();
	if ((_949_prim == nullptr) || (!(_206ec1e1e_is_int(_949_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_9328_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_9328_d->_field_constant->_method_is_i64()))) { goto _case_end_4687367024; }
		_case_begin_4687367024:;
		{
			return _9328_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_4687364976;
		_case_end_4687367024:;
		if (!((_9328_d->_field_constant->_method_is_u64()))) { goto _case_end_4687367120; }
		_case_begin_4687367120:;
		{
			return true;
		}
		goto _match_end_4687364976;
		_case_end_4687367120:;
		_case_begin_4687365056:;
		{
			return false;
		}
		goto _match_end_4687364976;
		_case_end_4687365056:;
		_match_end_4687364976:;
	}
}



inline jule::Bool _20683ebaa_is_instanced_struct(jule::Ptr<_2398d04dc_StructIns> _11024_s) {
	return _11024_s->_field_decl->_field_generics.len() == _11024_s->_field_generics.len();
}



inline jule::Bool _20683ebaa_is_ptr_arithmetic_compatible_int(jule::Ptr<_20683ebaa_Data>& _11442_d) {
	if (_11442_d->_method_is_const()) {
		return _2200223c9_int_assignable(jule::Str("int", 3),_11442_d);
	}
	_2200223c9_TypeCompatibilityChecker _11813_tcc = _2200223c9_TypeCompatibilityChecker(jule::Ptr<_21eee051d_Sema>(),jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("int", 3)))),_11442_d->_field_kind,_2220dce43_Token());
	return _11813_tcc._method_check();
}



inline void _20683ebaa_normalize_bitsize(jule::Ptr<_20683ebaa_Data>& _12527_d) {
	if ((!(_12527_d->_method_is_const()))) {
		return;
	}
	jule::Str _13013_kind = jule::Str();
	{
		if (!((_12527_d->_field_constant->_method_is_i64()))) { goto _case_end_4687384064; }
		_case_begin_4687384064:;
		{
			jule::I64 _13313_x = _12527_d->_field_constant->_method_read_i64();
			_13013_kind=_206e24cd9_int_from_bits(static_cast<jule::U64>(_206e24cd9_bitsize_of_int(_13313_x)));
		}
		goto _match_end_4687382832;
		_case_end_4687384064:;
		if (!((_12527_d->_field_constant->_method_is_u64()))) { goto _case_end_4687384160; }
		_case_begin_4687384160:;
		{
			jule::U64 _13713_x = _12527_d->_field_constant->_method_read_u64();
			_13013_kind=_206e24cd9_uint_from_bits(static_cast<jule::U64>(_206e24cd9_bitsize_of_uint(_13713_x)));
		}
		goto _match_end_4687382832;
		_case_end_4687384160:;
		_case_begin_4687383072:;
		{
			return;
		}
		goto _match_end_4687382832;
		_case_end_4687383072:;
		_match_end_4687382832:;
	}
	if (_12527_d->_field_kind->_method_enm() != nullptr) {
		return;
	}
	_12527_d->_field_kind->_field_kind=_2300b54e5_build_prim_type(_13013_kind);
}



inline void _20683ebaa_normalize_type(jule::Ptr<_20683ebaa_Data>& _15224_d) {
	{
		if (!((_2200223c9_int_assignable(jule::Str("int", 3),_15224_d)))) { goto _case_end_4687394080; }
		_case_begin_4687394080:;
		{
			_15224_d->_field_kind->_field_kind=_2300b54e5_build_prim_type(jule::Str("int", 3));
			_15224_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_15224_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4687393568;
		_case_end_4687394080:;
		if (!((_2200223c9_int_assignable(jule::Str("uint", 4),_15224_d)))) { goto _case_end_4687394192; }
		_case_begin_4687394192:;
		{
			_15224_d->_field_kind->_field_kind=_2300b54e5_build_prim_type(jule::Str("uint", 4));
			_15224_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_15224_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4687393568;
		_case_end_4687394192:;
		_match_end_4687393568:;
	}
}



inline void _20683ebaa_apply_cast_kind_model(jule::Ptr<_20683ebaa_Data>& _16431_d) {
	_16431_d->_field_model=jule::Any(jule::new_struct<_21eedb492_CastingExprModel>(new( std::nothrow ) _21eedb492_CastingExprModel(_16431_d->_field_model,_16431_d->_field_cast_kind,_16431_d->_field_kind)));
}



inline void _20683ebaa_apply_cast_kind(jule::Ptr<_20683ebaa_Data>& _17225_d) {
	if (_17225_d->_field_cast_kind == nullptr) {
		return;
	}
	_20683ebaa_apply_cast_kind_model(_17225_d);
	_17225_d->_field_kind=_17225_d->_field_cast_kind;
	_17225_d->_field_cast_kind=nullptr;
}



inline jule::Ptr<_20683ebaa_Data> _20683ebaa_build_void_data(void) {
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("void", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_206e210e3_Const>()));
}



inline jule::Str _20683ebaa_kind_by_bitsize(jule::Any _19320_expr) {
	{
		auto &_match_expr{ _19320_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4687411808; }
		_case_begin_4687411808:;
		{
			jule::F64 _19613_x = _19320_expr.operator jule::F64();
			return _206e24cd9_float_from_bits(static_cast<jule::U64>(_206e24cd9_bitsize_of_float(_19613_x)));
		}
		goto _match_end_4687410496;
		_case_end_4687411808:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4687412000; }
		_case_begin_4687412000:;
		{
			jule::I64 _20013_x = _19320_expr.operator jule::I64();
			return _206e24cd9_int_from_bits(static_cast<jule::U64>(_206e24cd9_bitsize_of_int(_20013_x)));
		}
		goto _match_end_4687410496;
		_case_end_4687412000:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4687412096; }
		_case_begin_4687412096:;
		{
			jule::U64 _20413_x = _19320_expr.operator jule::U64();
			return _206e24cd9_uint_from_bits(static_cast<jule::U64>(_206e24cd9_bitsize_of_uint(_20413_x)));
		}
		goto _match_end_4687410496;
		_case_end_4687412096:;
		_case_begin_4687408272:;
		{
			return jule::Str();
		}
		goto _match_end_4687410496;
		_case_end_4687408272:;
		_match_end_4687410496:;
	}
}



inline jule::Str _20683ebaa_check_data_for_integer_indexing(jule::Ptr<_20683ebaa_Data>& _21241_d) {
	jule::Str _21253_err_fmt = jule::Str();
	if (_21241_d == nullptr) {
		_21253_err_fmt = jule::Str();
		return _21253_err_fmt;
	}
	{
		if (!((_21241_d->_field_kind->_method_prim() == nullptr))) { goto _case_end_4687420640; }
		_case_begin_4687420640:;
		{
			_21253_err_fmt = jule::Str("type \"@\" is invalid for indexing", 32);
			return _21253_err_fmt;
		}
		goto _match_end_4687421232;
		_case_end_4687420640:;
		if (!(((!(_206ec1e1e_is_int(_21241_d->_field_kind->_method_prim()->_method_to_str())))))) { goto _case_end_4687420736; }
		_case_begin_4687420736:;
		{
			_21253_err_fmt = jule::Str("type \"@\" is invalid for indexing", 32);
			return _21253_err_fmt;
		}
		goto _match_end_4687421232;
		_case_end_4687420736:;
		if (!((_21241_d->_method_is_const()))) { goto _case_end_4687419744; }
		_case_begin_4687419744:;
		{
			if (_21241_d->_field_constant->_method_as_f64() < 0LL) {
				_21253_err_fmt = jule::Str("overflow the limit of data-type", 31);
				return _21253_err_fmt;
			}
		}
		goto _match_end_4687421232;
		_case_end_4687419744:;
		if (!((_21241_d->_field_kind->_method_prim() == nullptr) || (_21241_d->_method_is_const()) || (_206e24cd9_real_kind_of(_21241_d->_field_kind->_method_prim()->_method_to_str()) != _206e24cd9_real_kind_of(jule::Str("int", 3))))) { goto _case_end_4687419840; }
		_case_begin_4687419840:;
		{
			_21241_d->_field_cast_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("int", 3))));
			_20683ebaa_apply_cast_kind(_21241_d);
		}
		goto _match_end_4687421232;
		_case_end_4687419840:;
		_match_end_4687421232:;
	}
	_21253_err_fmt = jule::Str();
	return _21253_err_fmt;
}



inline jule::Bool _2300b54e5_can_get_ptr(jule::Ptr<_20683ebaa_Data>& _55121_d) {
	if ((!(_55121_d->_field_lvalue)) || _55121_d->_method_is_const()) {
		return false;
	}
	{
		if (!(((_55121_d->_field_kind->_method_fnc() != nullptr) || (_55121_d->_field_kind->_method_enm() != nullptr)))) { goto _case_end_4687436096; }
		_case_begin_4687436096:;
		{
			return false;
		}
		goto _match_end_4687434416;
		_case_end_4687436096:;
		_case_begin_4687433536:;
		{
			return true;
		}
		goto _match_end_4687434416;
		_case_end_4687433536:;
		_match_end_4687434416:;
	}
}



inline jule::Bool _2300b54e5_is_valid_for_sptr_type(jule::Ptr<_2300b54e5_TypeKind>& _56632_t) {
	jule::Ptr<_2398d04dc_StructIns> _56713_s = _56632_t->_method_strct();
	if (((_56713_s != nullptr) && (_56713_s->_field_decl != nullptr)) && _56713_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return true;
}



inline jule::Bool _2300b54e5_is_valid_for_ref(jule::Ptr<_2300b54e5_TypeKind>& _57526_t) {
	return _57526_t->_method_fnc() == nullptr;
}



inline jule::Bool _2300b54e5_is_builtin_str_convertable(jule::Ptr<_2300b54e5_TypeKind>& _57836_t) {
	return ((!(_57836_t->_method_void())) && (_57836_t->_method_fnc() == nullptr)) && (_57836_t->_method_tup() == nullptr);
}



inline jule::Str _2300b54e5_build_link_path_by_tokens(jule::Slice<_2220dce43_Token>& _58231_tokens) {
	jule::Str _58313_s = _58231_tokens[0LL]._field_kind;
	{
		auto expr = _58231_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4687449280:;
		if (it != expr.end()) {
			_2220dce43_Token &_2300b54e5_token = *it;
			{
				_58313_s+=jule::Str("::", 2);
				_58313_s+=_2300b54e5_token._field_kind;
			}
			_iter_next_4687449280:;
			++it;
			goto _iter_begin_4687449280;
		}
		_iter_end_4687449280:;
	}
	return _58313_s;
}



inline jule::Ptr<_2300b54e5_Prim> _2300b54e5_build_prim_type(jule::Str _59120_kind) {
	return jule::new_struct_ptr<_2300b54e5_Prim>(new( std::nothrow ) _2300b54e5_Prim(_59120_kind));
}



inline jule::Ptr<_2398d04dc_Struct> _2300b54e5_get_struct_from_kind(jule::Ptr<_2300b54e5_TypeKind> _59729_k) {
	{
		if (!((_59729_k == nullptr))) { goto _case_end_4687454464; }
		_case_begin_4687454464:;
		{
			return nullptr;
		}
		goto _match_end_4687452496;
		_case_end_4687454464:;
		if (!((_59729_k->_method_strct() != nullptr))) { goto _case_end_4687454560; }
		_case_begin_4687454560:;
		{
			return _59729_k->_method_strct()->_field_decl;
		}
		goto _match_end_4687452496;
		_case_end_4687454560:;
		if (!((_59729_k->_method_sptr() != nullptr))) { goto _case_end_4687453904; }
		_case_begin_4687453904:;
		{
			return _2300b54e5_get_struct_from_kind(_59729_k->_method_sptr()->_field_elem);
		}
		goto _match_end_4687452496;
		_case_end_4687453904:;
		if (!((_59729_k->_method_slc() != nullptr))) { goto _case_end_4687454000; }
		_case_begin_4687454000:;
		{
			return _2300b54e5_get_struct_from_kind(_59729_k->_method_slc()->_field_elem);
		}
		goto _match_end_4687452496;
		_case_end_4687454000:;
		if (!((_59729_k->_method_arr() != nullptr))) { goto _case_end_4687454096; }
		_case_begin_4687454096:;
		{
			return _2300b54e5_get_struct_from_kind(_59729_k->_method_arr()->_field_elem);
		}
		goto _match_end_4687452496;
		_case_end_4687454096:;
		if (!((_59729_k->_method_ptr() != nullptr))) { goto _case_end_4687453200; }
		_case_begin_4687453200:;
		{
			return nullptr;
		}
		goto _match_end_4687452496;
		_case_end_4687453200:;
		_case_begin_4687452896:;
		{
			return nullptr;
		}
		goto _match_end_4687452496;
		_case_end_4687452896:;
		_match_end_4687452496:;
	}
}



inline jule::Bool _2300b54e5_is_prim(jule::Str _62612_kind) {
	return (((((((((((((((_62612_kind == jule::Str("i8", 2)) || (_62612_kind == jule::Str("i16", 3))) || (_62612_kind == jule::Str("i32", 3))) || (_62612_kind == jule::Str("i64", 3))) || (_62612_kind == jule::Str("u8", 2))) || (_62612_kind == jule::Str("u16", 3))) || (_62612_kind == jule::Str("u32", 3))) || (_62612_kind == jule::Str("u64", 3))) || (_62612_kind == jule::Str("f32", 3))) || (_62612_kind == jule::Str("f64", 3))) || (_62612_kind == jule::Str("int", 3))) || (_62612_kind == jule::Str("uint", 4))) || (_62612_kind == jule::Str("uintptr", 7))) || (_62612_kind == jule::Str("bool", 4))) || (_62612_kind == jule::Str("str", 3))) || (_62612_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ptr<_2067a6b66_SymbolTable>,jule::Slice<_23886c227_Log>> _206d3c383_build_symbols(jule::Ptr<_221d8c242_Ast>& _1523_ast,jule::Trait<_2200229c3_Importer>& _1539_importer,jule::Ptr<_221db702a_SymbolBuilder> _1563_owner) {
	jule::Ptr<_221db702a_SymbolBuilder> _1613_sb = jule::new_struct_ptr<_221db702a_SymbolBuilder>(new( std::nothrow ) _221db702a_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_23886c227_Log>(),_1523_ast,jule::Ptr<_2067a6b66_SymbolTable>()));
	_1613_sb->_method_build();
	if (_1613_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1613_sb->_field_table,nullptr);
	}
	return std::make_tuple(nullptr,_1613_sb->_field_errors);
}



inline std::tuple<jule::Ptr<_2200229c3_Package>,jule::Slice<_23886c227_Log>> _206d3c383___analyze_package(jule::Slice<jule::Ptr<_221d8c242_Ast>>& _2927_files,jule::Trait<_2200229c3_Importer>& _2947_importer,jule::Int& _2968_flags) {
	jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>::alloc(0LL,static_cast<jule::I64>(_2927_files.len()));
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_4687483200:;
		if (it != expr.end()) {
			jule::Ptr<_221d8c242_Ast> _206d3c383_f = *it;
			{
				jule::Ptr<_2067a6b66_SymbolTable> _3318_table;
				jule::Slice<_23886c227_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _206d3c383_build_symbols(_206d3c383_f,_2947_importer,nullptr);
				if (_3329_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_3329_errors);
				}
				_3113_tables.push(_3318_table);
			}
			_iter_next_4687483200:;
			++it;
			goto _iter_begin_4687483200;
		}
		_iter_end_4687483200:;
	}
	jule::Ptr<_21eee051d_Sema> _4013_sema = jule::new_struct_ptr<_21eee051d_Sema>(new( std::nothrow ) _21eee051d_Sema(jule::Slice<_23886c227_Log>(),jule::Slice<jule::Ptr<_2067a6b66_SymbolTable>>(),jule::Ptr<_2067a6b66_SymbolTable>(),_2968_flags));
	_4013_sema->_method_check(_3113_tables);
	if (_4013_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(nullptr,_4013_sema->_field_errors);
	}
	jule::Ptr<_2200229c3_Package> _4813_pkg = jule::new_struct<_2200229c3_Package>(new( std::nothrow ) _2200229c3_Package(_4013_sema->_field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_2200229c3_Package>,jule::Slice<_23886c227_Log>> _206d3c383_analyze_package(jule::Slice<jule::Ptr<_221d8c242_Ast>> _7228_files,jule::Trait<_2200229c3_Importer> _7247_importer,jule::Int _7267_flags) {
	if (_7228_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_2200229c3_Package> _7714_package;
	jule::Slice<_23886c227_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _206d3c383___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline void _206d53311_init(void) {
	_206d53311_BUILTIN_FN_OUT->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_out);
	_206d53311_BUILTIN_FN_OUTLN->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_outln);
	_206d53311_BUILTIN_FN_NEW->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_new);
	_206d53311_BUILTIN_FN_PANIC->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_panic);
	_206d53311_BUILTIN_FN_MAKE->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_make);
	_206d53311_BUILTIN_FN_APPEND->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_append);
	_206d53311_BUILTIN_FN_COPY->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_copy);
	_206d53311_BUILTIN_FN_CLONE->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_clone);
	_206d53311_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_std_mem_size_of);
	_206d53311_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_std_mem_align_of);
	_206d53311_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_std_jule_integrated_to_str);
	jule::Ptr<_222edb48e_Fn> _8213_dispose_method = _206d53311_BUILTIN_TRAIT_DISPOSE->_method_find_method(jule::Str("dispose", 7));
	jule::Ptr<_222edb48e_FnIns> _8313_dispose_method_ins = _8213_dispose_method->_method_instance();
	_8313_dispose_method_ins->_field_caller=jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common);
	_8213_dispose_method->_method_append_instance(_8313_dispose_method_ins);
}



inline jule::Ptr<_222edb48e_FnIns> _206d53311_find_builtin_fn(jule::Str _8820_ident) {
	{
		auto &_match_expr{ _8820_ident };
		if (!(_match_expr == (jule::Str("out", 3)))) { goto _case_end_4687526688; }
		_case_begin_4687526688:;
		{
			return _206d53311_BUILTIN_FN_OUT;
		}
		goto _match_end_4687514544;
		_case_end_4687526688:;
		if (!(_match_expr == (jule::Str("outln", 5)))) { goto _case_end_4687526784; }
		_case_begin_4687526784:;
		{
			return _206d53311_BUILTIN_FN_OUTLN;
		}
		goto _match_end_4687514544;
		_case_end_4687526784:;
		if (!(_match_expr == (jule::Str("new", 3)))) { goto _case_end_4687526128; }
		_case_begin_4687526128:;
		{
			return _206d53311_BUILTIN_FN_NEW;
		}
		goto _match_end_4687514544;
		_case_end_4687526128:;
		if (!(_match_expr == (jule::Str("panic", 5)))) { goto _case_end_4687526224; }
		_case_begin_4687526224:;
		{
			return _206d53311_BUILTIN_FN_PANIC;
		}
		goto _match_end_4687514544;
		_case_end_4687526224:;
		if (!(_match_expr == (jule::Str("make", 4)))) { goto _case_end_4687526320; }
		_case_begin_4687526320:;
		{
			return _206d53311_BUILTIN_FN_MAKE;
		}
		goto _match_end_4687514544;
		_case_end_4687526320:;
		if (!(_match_expr == (jule::Str("append", 6)))) { goto _case_end_4687525600; }
		_case_begin_4687525600:;
		{
			return _206d53311_BUILTIN_FN_APPEND;
		}
		goto _match_end_4687514544;
		_case_end_4687525600:;
		if (!(_match_expr == (jule::Str("copy", 4)))) { goto _case_end_4687525696; }
		_case_begin_4687525696:;
		{
			return _206d53311_BUILTIN_FN_COPY;
		}
		goto _match_end_4687514544;
		_case_end_4687525696:;
		if (!(_match_expr == (jule::Str("clone", 5)))) { goto _case_end_4687525792; }
		_case_begin_4687525792:;
		{
			return _206d53311_BUILTIN_FN_CLONE;
		}
		goto _match_end_4687514544;
		_case_end_4687525792:;
		_case_begin_4687510688:;
		{
			return nullptr;
		}
		goto _match_end_4687514544;
		_case_end_4687510688:;
		_match_end_4687514544:;
	}
}



inline jule::Ptr<_2300b54e5_TypeAlias> _206d53311_find_builtin_type_alias(jule::Str _10228_ident) {
	{
		auto &_match_expr{ _10228_ident };
		if (!(_match_expr == (jule::Str("byte", 4)))) { goto _case_end_4687534512; }
		_case_begin_4687534512:;
		{
			return _206d53311_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_4687533344;
		_case_end_4687534512:;
		if (!(_match_expr == (jule::Str("rune", 4)))) { goto _case_end_4687534608; }
		_case_begin_4687534608:;
		{
			return _206d53311_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_4687533344;
		_case_end_4687534608:;
		_case_begin_4687533248:;
		{
			return nullptr;
		}
		goto _match_end_4687533344;
		_case_end_4687533248:;
		_match_end_4687533344:;
	}
}



inline jule::Ptr<_2300167cb_Trait> _206d53311_find_builtin_trait(jule::Str _11023_ident) {
	{
		auto &_match_expr{ _11023_ident };
		if (!(_match_expr == (jule::Str("Dispose", 7)))) { goto _case_end_4687536720; }
		_case_begin_4687536720:;
		{
			return _206d53311_BUILTIN_TRAIT_DISPOSE;
		}
		goto _match_end_4687536256;
		_case_end_4687536720:;
		_case_begin_4687536160:;
		{
			return nullptr;
		}
		goto _match_end_4687536256;
		_case_end_4687536160:;
		_match_end_4687536256:;
	}
}



inline jule::Any _206d53311_find_builtin_def(jule::Str _11721_ident) {
	jule::Ptr<_222edb48e_FnIns> _11813_f = _206d53311_find_builtin_fn(_11721_ident);
	if (_11813_f != nullptr) {
		return jule::Any(_11813_f);
	}
	jule::Ptr<_2300b54e5_TypeAlias> _12313_ta = _206d53311_find_builtin_type_alias(_11721_ident);
	if (_12313_ta != nullptr) {
		return jule::Any(_12313_ta);
	}
	jule::Ptr<_2300167cb_Trait> _12813_t = _206d53311_find_builtin_trait(_11721_ident);
	if (_12813_t != nullptr) {
		return jule::Any(_12813_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _206d53311_find_builtin_def_std_mem(jule::Str _13629_ident) {
	{
		auto &_match_expr{ _13629_ident };
		if (!(_match_expr == (jule::Str("size_of", 7)))) { goto _case_end_4687546480; }
		_case_begin_4687546480:;
		{
			return jule::Any(_206d53311_BUILTIN_FN_STD_MEM_SIZE_OF);
		}
		goto _match_end_4687543440;
		_case_end_4687546480:;
		if (!(_match_expr == (jule::Str("align_of", 8)))) { goto _case_end_4687546112; }
		_case_begin_4687546112:;
		{
			return jule::Any(_206d53311_BUILTIN_FN_STD_MEM_ALIGN_OF);
		}
		goto _match_end_4687543440;
		_case_end_4687546112:;
		_case_begin_4687541088:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4687543440;
		_case_end_4687541088:;
		_match_end_4687543440:;
	}
}



inline jule::Any _206d53311_find_builtin_def_std_jule_integrated(jule::Str _14441_ident) {
	{
		auto &_match_expr{ _14441_ident };
		if (!(_match_expr == (jule::Str("to_str", 6)))) { goto _case_end_4687550032; }
		_case_begin_4687550032:;
		{
			return jule::Any(_206d53311_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR);
		}
		goto _match_end_4687548112;
		_case_end_4687550032:;
		_case_begin_4687548496:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4687548112;
		_case_end_4687548496:;
		_match_end_4687548112:;
	}
}



inline jule::Any _206d53311_find_package_builtin_def(jule::Str _15129_link_path,jule::Str _15145_ident) {
	{
		auto &_match_expr{ _15129_link_path };
		if (!(_match_expr == (jule::Str("std::mem", 8)))) { goto _case_end_4687553232; }
		_case_begin_4687553232:;
		{
			return _206d53311_find_builtin_def_std_mem(_15145_ident);
		}
		goto _match_end_4687550992;
		_case_end_4687553232:;
		if (!(_match_expr == (jule::Str("std::jule::integrated", 21)))) { goto _case_end_4687552864; }
		_case_begin_4687552864:;
		{
			return _206d53311_find_builtin_def_std_jule_integrated(_15145_ident);
		}
		goto _match_end_4687550992;
		_case_end_4687552864:;
		_case_begin_4687550816:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4687550992;
		_case_end_4687550816:;
		_match_end_4687550992:;
	}
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_common_plain(jule::Ptr<_20683ebaa_Eval>& _15937_e,jule::Ptr<_221d8b043_FnCallExpr>& _15952_fc,jule::Ptr<_20683ebaa_Data>& _15974_d) {
	jule::Ptr<_222edb48e_FnIns> _16013_f = _15974_d->_field_kind->_method_fnc();
	_2200223c9_FnCallArgChecker _16213_fcac = _2200223c9_FnCallArgChecker(_15937_e,_15952_fc->_field_args,_15952_fc->_field_token,_16013_f,false,jule::Slice<jule::Any>());
	_16213_fcac._method_check();
	jule::Ptr<_21eedb492_FnCallExprModel> _17113_model = jule::new_struct<_21eedb492_FnCallExprModel>(new( std::nothrow ) _21eedb492_FnCallExprModel(_2220dce43_Token(),_16013_f,jule::Bool(),_15974_d->_field_model,_16213_fcac._field_arg_models,jule::Ptr<_2300254bb_Scope>()));
	if (_16013_f->_field_result == nullptr) {
		_15974_d=_20683ebaa_build_void_data();
	} else {
		_15974_d=jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(_16013_f->_field_result,jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
	}
	_15974_d->_field_model=jule::Any(_17113_model);
	return _15974_d;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_common(jule::Ptr<_20683ebaa_Eval>& _18931_e,jule::Ptr<_221d8b043_FnCallExpr>& _18946_fc,jule::Ptr<_20683ebaa_Data>& _18968_d) {
	if (_18946_fc->_field_generics.len() > 0LL) {
		_18931_e->_method_push_err(_18946_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	return _206d53311_builtin_caller_common_plain(_18931_e,_18946_fc,_18968_d);
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_common_mut(jule::Ptr<_20683ebaa_Eval>& _19735_e,jule::Ptr<_221d8b043_FnCallExpr>& _19750_fc,jule::Ptr<_20683ebaa_Data>& _19772_d) {
	if ((!(_19772_d->_field_mutable))) {
		_19735_e->_method_push_err(_19750_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	}
	return _206d53311_builtin_caller_common(_19735_e,_19750_fc,_19772_d);
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_error(jule::Ptr<_20683ebaa_Eval>& _20430_e,jule::Ptr<_221d8b043_FnCallExpr>& _20445_fc) {
	if (_20445_fc->_field_generics.len() > 0LL) {
		_20430_e->_method_push_err(_20445_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_20445_fc->_field_args.len() < 1LL) {
		_20430_e->_method_push_err(_20445_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	}
	if (_20445_fc->_field_args.len() > 1LL) {
		_20430_e->_method_push_err(_20445_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _21513_expr = _20430_e->_method_eval_expr(_20445_fc->_field_args[0LL]);
	if (_21513_expr == nullptr) {
		return nullptr;
	}
	if (_21513_expr->_method_is_nil()) {
		_20430_e->_method_push_err(_20445_fc->_field_args[0LL]->_field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _22413_d = _20683ebaa_build_void_data();
	_22413_d->_field_model=jule::Any(jule::new_struct<_21eedb492_BuiltinErrorCallExprModel>(new( std::nothrow ) _21eedb492_BuiltinErrorCallExprModel(jule::Ptr<_222edb48e_FnIns>(),_21513_expr->_field_model)));
	return _22413_d;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_out(jule::Ptr<_20683ebaa_Eval>& _23228_e,jule::Ptr<_221d8b043_FnCallExpr>& _23243_fc,jule::Ptr<_20683ebaa_Data>& ) {
	if (_23243_fc->_field_generics.len() > 0LL) {
		_23228_e->_method_push_err(_23243_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_23243_fc->_field_args.len() < 1LL) {
		_23228_e->_method_push_err(_23243_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	}
	if (_23243_fc->_field_args.len() > 1LL) {
		_23228_e->_method_push_err(_23243_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _24413_expr = _23228_e->_method_eval_expr(_23243_fc->_field_args[0LL]);
	if (_24413_expr == nullptr) {
		return nullptr;
	}
	if ((!(_2300b54e5_is_builtin_str_convertable(_24413_expr->_field_kind)))) {
		_23228_e->_method_push_err(_23243_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_20683ebaa_Data> _25413_d = _20683ebaa_build_void_data();
	_25413_d->_field_model=jule::Any(jule::new_struct<_21eedb492_BuiltinOutCallExprModel>(new( std::nothrow ) _21eedb492_BuiltinOutCallExprModel(_24413_expr->_field_model)));
	return _25413_d;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_outln(jule::Ptr<_20683ebaa_Eval>& _25930_e,jule::Ptr<_221d8b043_FnCallExpr>& _25945_fc,jule::Ptr<_20683ebaa_Data>& _25967_d) {
	_25967_d=_206d53311_builtin_caller_out(_25930_e,_25945_fc,_25967_d);
	if (_25967_d == nullptr) {
		return nullptr;
	}
	_25967_d->_field_model=jule::Any(jule::new_struct<_21eedb492_BuiltinOutlnCallExprModel>(new( std::nothrow ) _21eedb492_BuiltinOutlnCallExprModel(_25967_d->_field_model.operator jule::Ptr<_21eedb492_BuiltinOutCallExprModel>()->_field_expr)));
	return _25967_d;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_new(jule::Ptr<_20683ebaa_Eval>& _27128_e,jule::Ptr<_221d8b043_FnCallExpr>& _27143_fc,jule::Ptr<_20683ebaa_Data>& _27165_d) {
	if (_27143_fc->_field_generics.len() > 0LL) {
		_27128_e->_method_push_err(_27143_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_27143_fc->_field_args.len() < 1LL) {
		_27128_e->_method_push_err(_27143_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	}
	if (_27143_fc->_field_args.len() > 2LL) {
		_27128_e->_method_push_err(_27143_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _28313_t = _27128_e->_method_eval_expr_kind(_27143_fc->_field_args[0LL]->_field_kind);
	if (_28313_t == nullptr) {
		return nullptr;
	}
	if ((!(_28313_t->_field_decl))) {
		_27128_e->_method_push_err(_27143_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_2300b54e5_is_valid_for_sptr_type(_28313_t->_field_kind)))) {
		jule::Ptr<_2398d04dc_StructIns> _29417_s = _28313_t->_field_kind->_method_strct();
		if (((_29417_s != nullptr) && (_29417_s->_field_decl != nullptr)) && _29417_s->_field_decl->_field_cpp_linked) {
			_27128_e->_method_push_err(_27143_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	_27165_d->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2300b54e5_Sptr>(new( std::nothrow ) _2300b54e5_Sptr(_28313_t->_field_kind->_method_clone()))));
	if (_27143_fc->_field_args.len() == 2LL) {
		jule::Ptr<_2300b54e5_TypeKind> _30417_old = _27128_e->_field_prefix;
		_27128_e->_field_prefix=_28313_t->_field_kind;
		jule::Ptr<_20683ebaa_Data> _30717_init = _27128_e->_method_eval_expr(_27143_fc->_field_args[1LL]);
		_27128_e->_field_prefix=_30417_old;
		if (_30717_init != nullptr) {
			_2220dce43_Token _31221_token = _27143_fc->_field_args[1LL]->_field_token;
			
			_27128_e->_field_s->_method_check_validity_for_init_expr((!(_27128_e->_field_immutable)),false,_28313_t->_field_kind,_30717_init,_31221_token);
			_27128_e->_field_s->_method_check_assign_type(false,_28313_t->_field_kind,_30717_init,_31221_token);
			_27165_d->_field_model=jule::Any(jule::new_struct<_21eedb492_BuiltinNewCallExprModel>(new( std::nothrow ) _21eedb492_BuiltinNewCallExprModel(_28313_t->_field_kind,_30717_init->_field_model)));
		}
	} else {
		_27165_d->_field_model=jule::Any(jule::new_struct<_21eedb492_BuiltinNewCallExprModel>(new( std::nothrow ) _21eedb492_BuiltinNewCallExprModel(_28313_t->_field_kind,jule::Any())));
	}
	return _27165_d;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_panic(jule::Ptr<_20683ebaa_Eval>& _33030_e,jule::Ptr<_221d8b043_FnCallExpr>& _33045_fc,jule::Ptr<_20683ebaa_Data>& ) {
	if (_33045_fc->_field_generics.len() > 0LL) {
		_33030_e->_method_push_err(_33045_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_33045_fc->_field_args.len() < 1LL) {
		_33030_e->_method_push_err(_33045_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	}
	if (_33045_fc->_field_args.len() > 1LL) {
		_33030_e->_method_push_err(_33045_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _34213_expr = _33030_e->_method_eval_expr(_33045_fc->_field_args[0LL]);
	if (_34213_expr == nullptr) {
		return nullptr;
	}
	if ((_34213_expr->_field_kind->_method_prim() == nullptr) || (!(_34213_expr->_field_kind->_method_prim()->_method_is_str()))) {
		_33030_e->_method_push_err(_33045_fc->_field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _35113_d = _20683ebaa_build_void_data();
	_35113_d->_field_model=jule::Any(jule::new_struct<_21eedb492_BuiltinPanicCallExprModel>(new( std::nothrow ) _21eedb492_BuiltinPanicCallExprModel(_34213_expr->_field_model)));
	return _35113_d;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_make(jule::Ptr<_20683ebaa_Eval>& _35629_e,jule::Ptr<_221d8b043_FnCallExpr>& _35644_fc,jule::Ptr<_20683ebaa_Data>& _35666_d) {
	if (_35644_fc->_field_generics.len() > 0LL) {
		_35629_e->_method_push_err(_35644_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_35644_fc->_field_args.len() < 2LL) {
		if (_35644_fc->_field_args.len() == 1LL) {
			_35629_e->_method_push_err(_35644_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		}
		_35629_e->_method_push_err(_35644_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	}
	if (_35644_fc->_field_args.len() > 3LL) {
		_35629_e->_method_push_err(_35644_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _37213_t = _35629_e->_method_eval_expr_kind(_35644_fc->_field_args[0LL]->_field_kind);
	if (_37213_t == nullptr) {
		return nullptr;
	}
	if ((!(_37213_t->_field_decl)) || (_37213_t->_field_kind->_method_slc() == nullptr)) {
		_35629_e->_method_push_err(_35644_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	_35666_d->_field_kind=_37213_t->_field_kind;
	jule::Ptr<_20683ebaa_Data> _38413_len = _35629_e->_field_s->_method_evalp(_35629_e->_field_lookup,_37213_t->_field_kind)->_method_eval_expr(_35644_fc->_field_args[1LL]);
	if (_38413_len == nullptr) {
		return _35666_d;
	}
	_35629_e->_method_check_integer_indexing_by_data(_38413_len,_35644_fc->_field_args[1LL]->_field_token);
	if (_35644_fc->_field_args.len() == 3LL) {
		jule::Ptr<_20683ebaa_Data> _39217_cap = _35629_e->_field_s->_method_evalp(_35629_e->_field_lookup,_37213_t->_field_kind)->_method_eval_expr(_35644_fc->_field_args[2LL]);
		if (_39217_cap == nullptr) {
			return _35666_d;
		}
		_35629_e->_method_check_integer_indexing_by_data(_39217_cap,_35644_fc->_field_args[2LL]->_field_token);
		_35666_d->_field_model=jule::Any(jule::new_struct<_21eedb492_BuiltinMakeCallExprModel>(new( std::nothrow ) _21eedb492_BuiltinMakeCallExprModel(_37213_t->_field_kind,_38413_len->_field_model,_39217_cap->_field_model)));
	} else {
		_35666_d->_field_model=jule::Any(jule::new_struct<_21eedb492_BuiltinMakeCallExprModel>(new( std::nothrow ) _21eedb492_BuiltinMakeCallExprModel(_37213_t->_field_kind,_38413_len->_field_model,jule::Any())));
	}
	return _35666_d;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_append(jule::Ptr<_20683ebaa_Eval>& _41331_e,jule::Ptr<_221d8b043_FnCallExpr>& _41346_fc,jule::Ptr<_20683ebaa_Data>& _41368_d) {
	if (_41346_fc->_field_generics.len() > 0LL) {
		_41331_e->_method_push_err(_41346_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_41346_fc->_field_args.len() < 2LL) {
		if (_41346_fc->_field_args.len() == 1LL) {
			_41331_e->_method_push_err(_41346_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_41331_e->_method_push_err(_41346_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	jule::Ptr<_20683ebaa_Data> _42613_t = _41331_e->_method_eval_expr(_41346_fc->_field_args[0LL]);
	if (_42613_t == nullptr) {
		return nullptr;
	}
	if (_42613_t->_field_kind->_method_slc() == nullptr) {
		_41331_e->_method_push_err(_41346_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_222edb48e_FnIns> _43613_f = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str())),_42613_t->_field_kind->_method_clone())),jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),true,true,jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str())),_42613_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_42613_t->_field_kind->_method_clone(),jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_41368_d->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_43613_f));
	_41368_d->_field_model=jule::Any(jule::new_struct<_21eedb492_CommonIdentExprModel>(new( std::nothrow ) _21eedb492_CommonIdentExprModel(jule::Str("append", 6))));
	_41368_d=_206d53311_builtin_caller_common_plain(_41331_e,_41346_fc,_41368_d);
	if (_41368_d != nullptr) {
		jule::Ptr<_21eedb492_FnCallExprModel> _46017_model = _41368_d->_field_model.operator jule::Ptr<_21eedb492_FnCallExprModel>();
		_41368_d->_field_model=jule::Any(jule::new_struct<_21eedb492_BuiltinAppendCallExprModel>(new( std::nothrow ) _21eedb492_BuiltinAppendCallExprModel(_46017_model->_field_args[0LL],_46017_model->_field_args[1LL])));
	}
	return _41368_d;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_copy(jule::Ptr<_20683ebaa_Eval>& _46929_e,jule::Ptr<_221d8b043_FnCallExpr>& _46944_fc,jule::Ptr<_20683ebaa_Data>& _46966_d) {
	if (_46944_fc->_field_generics.len() > 0LL) {
		_46929_e->_method_push_err(_46944_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_46944_fc->_field_args.len() < 2LL) {
		if (_46944_fc->_field_args.len() == 1LL) {
			_46929_e->_method_push_err(_46944_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_46929_e->_method_push_err(_46944_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	if (_46944_fc->_field_args.len() > 2LL) {
		_46929_e->_method_push_err(_46944_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _48513_t = _46929_e->_method_eval_expr(_46944_fc->_field_args[0LL]);
	if (_48513_t == nullptr) {
		return nullptr;
	}
	if (_48513_t->_field_kind->_method_slc() == nullptr) {
		_46929_e->_method_push_err(_46944_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_48513_t->_field_mutable))) {
		_46929_e->_method_push_err(_46944_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	}
	jule::Ptr<_222edb48e_FnIns> _49913_f = jule::new_struct_ptr<_222edb48e_FnIns>(new( std::nothrow ) _222edb48e_FnIns(jule::Ptr<_2398d04dc_StructIns>(),jule::Ptr<_222edb48e_Fn>(),jule::Slice<jule::Ptr<_2300b54e5_TypeKind>>(),jule::Slice<jule::Ptr<_222edb48e_ParamIns>>({jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param()),_48513_t->_field_kind->_method_clone())),jule::new_struct<_222edb48e_ParamIns>(new( std::nothrow ) _222edb48e_ParamIns(jule::new_struct_ptr<_222edb48e_Param>(new( std::nothrow ) _222edb48e_Param(_2220dce43_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_2300b54e5_TypeSymbol>(),jule::Str())),_48513_t->_field_kind->_method_clone()))}),_206d53311_BUILTIN_FN_COPY->_field_result,jule::Ptr<_2300254bb_Scope>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Ptr<_221db702a_ReferenceStack>(),jule::Fn<jule::Ptr<_20683ebaa_Data>(jule::Ptr<_20683ebaa_Eval>&,jule::Ptr<_221d8b043_FnCallExpr>&,jule::Ptr<_20683ebaa_Data>&)>(_206d53311_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_46966_d->_field_kind=jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_49913_f));
	_46966_d->_field_model=jule::Any(jule::new_struct<_21eedb492_CommonIdentExprModel>(new( std::nothrow ) _21eedb492_CommonIdentExprModel(jule::Str("copy", 4))));
	_46966_d=_206d53311_builtin_caller_common_plain(_46929_e,_46944_fc,_46966_d);
	return _46966_d;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_clone(jule::Ptr<_20683ebaa_Eval>& _52330_e,jule::Ptr<_221d8b043_FnCallExpr>& _52345_fc,jule::Ptr<_20683ebaa_Data>& ) {
	if (_52345_fc->_field_generics.len() > 0LL) {
		_52330_e->_method_push_err(_52345_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_52345_fc->_field_args.len() < 1LL) {
		_52330_e->_method_push_err(_52345_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if (_52345_fc->_field_args.len() > 1LL) {
		_52330_e->_method_push_err(_52345_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _53613_d = _52330_e->_method_eval_expr_kind(_52345_fc->_field_args[0LL]->_field_kind);
	if (_53613_d == nullptr) {
		return nullptr;
	}
	jule::Fn<void(jule::Ptr<_2300b54e5_TypeKind>)> _5419_check_kind = jule::Fn<void(jule::Ptr<_2300b54e5_TypeKind>)>([=](jule::Ptr<_2300b54e5_TypeKind> _54129_k) mutable -> void {
		{
			if (!((_54129_k->_method_slc() != nullptr))) { goto _case_end_4687797120; }
			_case_begin_4687797120:;
			{
				if ((!(_54129_k->_method_slc()->_field_elem->_method_supports_cloning()))) {
					{
						_52330_e->_method_push_err(_52345_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_54129_k->_method_to_str())}));
					}
				}
			}
			goto _match_end_4687795424;
			_case_end_4687797120:;
			if (!((_54129_k->_method_map() != nullptr))) { goto _case_end_4687795904; }
			_case_begin_4687795904:;
			{
				jule::Ptr<_2300b54e5_Map> _55217_m = _54129_k->_method_map();
				if ((!(_55217_m->_field_key->_method_supports_cloning())) || (!(_55217_m->_field_val->_method_supports_cloning()))) {
					{
						_52330_e->_method_push_err(_52345_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_54129_k->_method_to_str())}));
					}
				}
			}
			goto _match_end_4687795424;
			_case_end_4687795904:;
			if (!((_54129_k->_method_arr() != nullptr))) { goto _case_end_4687796000; }
			_case_begin_4687796000:;
			{
				if ((!(_54129_k->_method_arr()->_field_elem->_method_supports_cloning()))) {
					{
						_52330_e->_method_push_err(_52345_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_54129_k->_method_to_str())}));
					}
				}
			}
			goto _match_end_4687795424;
			_case_end_4687796000:;
			if (!((_54129_k->_method_sptr() != nullptr))) { goto _case_end_4687796096; }
			_case_begin_4687796096:;
			{
				if ((!(_54129_k->_method_sptr()->_field_elem->_method_supports_cloning()))) {
					{
						_52330_e->_method_push_err(_52345_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_54129_k->_method_to_str())}));
					}
				}
			}
			goto _match_end_4687795424;
			_case_end_4687796096:;
			if (!((_54129_k->_method_strct() != nullptr))) { goto _case_end_4687796192; }
			_case_begin_4687796192:;
			{
				jule::Ptr<_2398d04dc_StructIns> _57717_s = _53613_d->_field_kind->_method_strct();
				if ((!(_57717_s->_field_mutable))) {
					{
						_52330_e->_method_push_err(_52345_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_53613_d->_field_kind->_method_to_str())}));
					}
				}
				if (((_57717_s->_field_decl == nullptr) || _57717_s->_field_decl->_field_cpp_linked) || (!(_57717_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					{
						_52330_e->_method_push_err(_52345_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_53613_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			goto _match_end_4687795424;
			_case_end_4687796192:;
			_case_begin_4687795600:;
			{
				{
					_52330_e->_method_push_err(_52345_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_53613_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_4687795424;
			_case_end_4687795600:;
			_match_end_4687795424:;
		}
	});
	{
		if (!(((!(_53613_d->_field_lvalue))))) { goto _case_end_4687830784; }
		_case_begin_4687830784:;
		{
			_52330_e->_method_push_err(_52345_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>());
		}
		goto _match_end_4687836640;
		_case_end_4687830784:;
		if (!(((!(_53613_d->_field_kind->_method_supports_cloning()))))) { goto _case_end_4687830880; }
		_case_begin_4687830880:;
		{
			_5419_check_kind(_53613_d->_field_kind);
		}
		goto _match_end_4687836640;
		_case_end_4687830880:;
		_match_end_4687836640:;
	}
	_53613_d->_field_mutable=true;
	_53613_d->_field_model=jule::Any(jule::new_struct<_21eedb492_BuiltinCloneCallExprModel>(new( std::nothrow ) _21eedb492_BuiltinCloneCallExprModel(_53613_d->_field_model)));
	return _53613_d;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_std_mem_size_of(jule::Ptr<_20683ebaa_Eval>& _61440_e,jule::Ptr<_221d8b043_FnCallExpr>& _61455_fc,jule::Ptr<_20683ebaa_Data>& ) {
	if (_61455_fc->_field_generics.len() > 0LL) {
		_61440_e->_method_push_err(_61455_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _61813_result = jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
	if (_61455_fc->_field_args.len() < 1LL) {
		_61440_e->_method_push_err(_61455_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _61813_result;
	}
	if (_61455_fc->_field_args.len() > 1LL) {
		_61440_e->_method_push_err(_61455_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _63013_d = _61440_e->_method_eval_expr_kind(_61455_fc->_field_args[0LL]->_field_kind);
	if (_63013_d == nullptr) {
		return _61813_result;
	}
	_61813_result->_field_model=jule::Any(jule::new_struct<_21eedb492_SizeofExprModel>(new( std::nothrow ) _21eedb492_SizeofExprModel(_63013_d->_field_model)));
	return _61813_result;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_std_mem_align_of(jule::Ptr<_20683ebaa_Eval>& _63941_e,jule::Ptr<_221d8b043_FnCallExpr>& _63956_fc,jule::Ptr<_20683ebaa_Data>& ) {
	if (_63956_fc->_field_generics.len() > 0LL) {
		_63941_e->_method_push_err(_63956_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _64313_result = jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
	if (_63956_fc->_field_args.len() < 1LL) {
		_63941_e->_method_push_err(_63956_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _64313_result;
	}
	if (_63956_fc->_field_args.len() > 1LL) {
		_63941_e->_method_push_err(_63956_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _65513_d = _63941_e->_method_eval_expr_kind(_63956_fc->_field_args[0LL]->_field_kind);
	if (_65513_d == nullptr) {
		return _64313_result;
	}
	_64313_result->_field_model=jule::Any(jule::new_struct<_21eedb492_AlignofExprModel>(new( std::nothrow ) _21eedb492_AlignofExprModel(_65513_d->_field_model)));
	return _64313_result;
}



inline jule::Ptr<_20683ebaa_Data> _206d53311_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_20683ebaa_Eval>& _66451_e,jule::Ptr<_221d8b043_FnCallExpr>& _66466_fc,jule::Ptr<_20683ebaa_Data>& ) {
	if (_66466_fc->_field_generics.len() > 0LL) {
		_66451_e->_method_push_err(_66466_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_66466_fc->_field_args.len() < 1LL) {
		_66451_e->_method_push_err(_66466_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if (_66466_fc->_field_args.len() > 1LL) {
		_66451_e->_method_push_err(_66466_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_20683ebaa_Data> _67713_d = _66451_e->_method_eval_expr_kind(_66466_fc->_field_args[0LL]->_field_kind);
	if (_67713_d == nullptr) {
		return nullptr;
	}
	if ((!(_2300b54e5_is_builtin_str_convertable(_67713_d->_field_kind)))) {
		_66451_e->_method_push_err(_66466_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_20683ebaa_Data>(new( std::nothrow ) _20683ebaa_Data(jule::new_struct_ptr<_2300b54e5_TypeKind>(new( std::nothrow ) _2300b54e5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_2300b54e5_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_2300b54e5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_21eedb492_IntegratedToStrExprModel>(new( std::nothrow ) _21eedb492_IntegratedToStrExprModel(_67713_d->_field_model))),jule::Bool(),jule::Ptr<_206e210e3_Const>()));
}



inline std::tuple<jule::Bool,jule::Bool> _221a6dac2_check_os(jule::Str _1013_arg) {
	jule::Bool _1025_ok = jule::Bool();
	jule::Bool _1035_exist = jule::Bool();
	_1025_ok=false;
	_1035_exist=true;
	{
		auto &_match_expr{ _1013_arg };
		if (!(_match_expr == (jule::Str("windows", 7)))) { goto _case_end_4693167440; }
		_case_begin_4693167440:;
		{
			_1025_ok=_2389027b8_is_windows(_2388bea1b_OS);
		}
		goto _match_end_4693166272;
		_case_end_4693167440:;
		if (!(_match_expr == (jule::Str("darwin", 6)))) { goto _case_end_4693167760; }
		_case_begin_4693167760:;
		{
			_1025_ok=_2389027b8_is_darwin(_2388bea1b_OS);
		}
		goto _match_end_4693166272;
		_case_end_4693167760:;
		if (!(_match_expr == (jule::Str("linux", 5)))) { goto _case_end_4693167120; }
		_case_begin_4693167120:;
		{
			_1025_ok=_2389027b8_is_linux(_2388bea1b_OS);
		}
		goto _match_end_4693166272;
		_case_end_4693167120:;
		if (!(_match_expr == (jule::Str("unix", 4)))) { goto _case_end_4693166608; }
		_case_begin_4693166608:;
		{
			_1025_ok=_2389027b8_is_unix(_2388bea1b_OS);
		}
		goto _match_end_4693166272;
		_case_end_4693166608:;
		_case_begin_4693165248:;
		{
			_1025_ok=true;
			_1035_exist=false;
		}
		goto _match_end_4693166272;
		_case_end_4693165248:;
		_match_end_4693166272:;
	}
	return std::make_tuple(_1025_ok,_1035_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _221a6dac2_check_arch(jule::Str _2715_arg) {
	jule::Bool _2727_ok = jule::Bool();
	jule::Bool _2737_exist = jule::Bool();
	_2727_ok=false;
	_2737_exist=true;
	{
		auto &_match_expr{ _2715_arg };
		if (!(_match_expr == (jule::Str("i386", 4)))) { goto _case_end_4693175616; }
		_case_begin_4693175616:;
		{
			_2727_ok=_2389027b8_is_i386(_2388bea1b_ARCH);
		}
		goto _match_end_4693174128;
		_case_end_4693175616:;
		if (!(_match_expr == (jule::Str("amd64", 5)))) { goto _case_end_4693174976; }
		_case_begin_4693174976:;
		{
			_2727_ok=_2389027b8_is_amd64(_2388bea1b_ARCH);
		}
		goto _match_end_4693174128;
		_case_end_4693174976:;
		if (!(_match_expr == (jule::Str("arm64", 5)))) { goto _case_end_4693174464; }
		_case_begin_4693174464:;
		{
			_2727_ok=_2389027b8_is_arm64(_2388bea1b_ARCH);
		}
		goto _match_end_4693174128;
		_case_end_4693174464:;
		if (!(_match_expr == (jule::Str("64bit", 5)))) { goto _case_end_4693174560; }
		_case_begin_4693174560:;
		{
			_2727_ok=_2389027b8_is_64bit(_2388bea1b_ARCH);
		}
		goto _match_end_4693174128;
		_case_end_4693174560:;
		if (!(_match_expr == (jule::Str("32bit", 5)))) { goto _case_end_4693174656; }
		_case_begin_4693174656:;
		{
			_2727_ok=_2389027b8_is_32bit(_2388bea1b_ARCH);
		}
		goto _match_end_4693174128;
		_case_end_4693174656:;
		_case_begin_4693173104:;
		{
			_2727_ok=true;
			_2737_exist=false;
		}
		goto _match_end_4693174128;
		_case_end_4693173104:;
		_match_end_4693174128:;
	}
	return std::make_tuple(_2727_ok,_2737_exist);
}



inline jule::Bool _221a6dac2_is_pass_file_annotation(jule::Str _4632_p) {
	_4632_p=_23894b9cc_base(_4632_p);
	jule::I64 _489_n = _4632_p.len();
	_4632_p=_4632_p.slice(0LL,_489_n - _23894b9cc_ext(_4632_p).len());
	jule::Str _5413_a1 = jule::Str();
	jule::Str _5713_a2 = jule::Str();
	jule::Int _6013_i = _4632_p.rfind(jule::Str("_", 1));
	if (_6013_i == -1LL) {
		jule::Bool _6318_ok;
		jule::Bool _6326_exist;
		std::tie(_6318_ok,_6326_exist) = _221a6dac2_check_os(_4632_p);
		if (_6326_exist) {
			return _6318_ok;
		}
		std::tie(_6318_ok,_6326_exist) = _221a6dac2_check_arch(_4632_p);
		return (!(_6326_exist)) || _6318_ok;
	}
	if ((_6013_i + 1LL) >= _489_n) {
		return true;
	}
	_5413_a1=_4632_p.slice(_6013_i + 1LL);
	_4632_p=_4632_p.slice(0LL,_6013_i);
	_6013_i=static_cast<jule::Int>(_4632_p.rfind(jule::Str("_", 1)));
	if (_6013_i != -1LL) {
		_5713_a2=_4632_p.slice(_6013_i + 1LL);
	}
	if (_5713_a2 == jule::Str()) {
		jule::Bool _8418_ok;
		jule::Bool _8426_exist;
		std::tie(_8418_ok,_8426_exist) = _221a6dac2_check_os(_5413_a1);
		if (_8426_exist) {
			return _8418_ok;
		}
		std::tie(_8418_ok,_8426_exist) = _221a6dac2_check_arch(_5413_a1);
		return (!(_8426_exist)) || _8418_ok;
	}
	jule::Bool _9214_ok;
	jule::Bool _9222_exist;
	std::tie(_9214_ok,_9222_exist) = _221a6dac2_check_arch(_5413_a1);
	if (_9222_exist) {
		if ((!(_9214_ok))) {
			return false;
		}
		jule::Bool _9714_ok;
		jule::Bool _9718_exist;
		std::tie(_9714_ok,_9718_exist) = _221a6dac2_check_os(_5713_a2);
		return (!(_9718_exist)) || _9714_ok;
	}
	std::tie(_9214_ok,_9222_exist) = _221a6dac2_check_os(_5413_a1);
	return (!(_9222_exist)) || _9214_ok;
}



inline void _221c201c4_set_os_flags(void) {
	{
		auto &_match_expr{ _2388bea1b_OS };
		if (!(_match_expr == (jule::Str("windows", 7)))) { goto _case_end_4693187600; }
		_case_begin_4693187600:;
		{
			_221c201c4_FLAGS.push(jule::Str("windows", 7));
		}
		goto _match_end_4693203872;
		_case_end_4693187600:;
		if (!(_match_expr == (jule::Str("linux", 5)))) { goto _case_end_4693200208; }
		_case_begin_4693200208:;
		{
			_221c201c4_FLAGS.push(jule::Str("linux", 5));
		}
		goto _match_end_4693203872;
		_case_end_4693200208:;
		if (!(_match_expr == (jule::Str("darwin", 6)))) { goto _case_end_4693200304; }
		_case_begin_4693200304:;
		{
			_221c201c4_FLAGS.push(jule::Str("darwin", 6));
		}
		goto _match_end_4693203872;
		_case_end_4693200304:;
		_match_end_4693203872:;
	}
	if (_2389027b8_is_unix(_2388bea1b_OS)) {
		_221c201c4_FLAGS.push(jule::Str("unix", 4));
	}
}



inline void _221c201c4_set_arch_flags(void) {
	{
		auto &_match_expr{ _2388bea1b_ARCH };
		if (!(_match_expr == (jule::Str("i386", 4)))) { goto _case_end_4693210144; }
		_case_begin_4693210144:;
		{
			_221c201c4_FLAGS.push(jule::Str("i386", 4));
		}
		goto _match_end_4693207360;
		_case_end_4693210144:;
		if (!(_match_expr == (jule::Str("amd64", 5)))) { goto _case_end_4693207440; }
		_case_begin_4693207440:;
		{
			_221c201c4_FLAGS.push(jule::Str("amd64", 5));
		}
		goto _match_end_4693207360;
		_case_end_4693207440:;
		if (!(_match_expr == (jule::Str("arm64", 5)))) { goto _case_end_4693209232; }
		_case_begin_4693209232:;
		{
			_221c201c4_FLAGS.push(jule::Str("arm64", 5));
		}
		goto _match_end_4693207360;
		_case_end_4693209232:;
		_match_end_4693207360:;
	}
	if (_2389027b8_is_64bit(_2388bea1b_ARCH)) {
		_221c201c4_FLAGS.push(jule::Str("64bit", 5));
	}
	if (_2389027b8_is_32bit(_2388bea1b_ARCH)) {
		_221c201c4_FLAGS.push(jule::Str("32bit", 5));
	}
}



inline void _221c201c4_init_flags(void) {
	_221c201c4_set_os_flags();
	_221c201c4_set_arch_flags();
}



inline void _221c9ee02_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_23893acc9_exit(1LL);
}



inline jule::Slice<jule::U8> _221c9ee02_read_buff(jule::Str _3014_path) {
	jule::Slice<jule::U8> _3114_buffer;
	jule::Int _3122_err;
	std::tie(_3114_buffer,_3122_err) = _222bcb8bb_File::_static_method_read(_3014_path);
	if (_3122_err != 0LLU) {
		_221c9ee02_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3114_buffer;
}



inline _23886c227_Log _221c9ee02_flat_compiler_err(jule::Str _4022_text) {
	return _23886c227_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_4022_text,jule::Str(),jule::Str());
}



inline std::tuple<jule::Slice<jule::Ptr<_222bb918e_DirEntry>>,jule::Str> _221c9ee02_read_package_dirents(jule::Str _4825_path) {
	jule::Str _4851_err_msg = jule::Str();
	jule::Slice<jule::Ptr<_222bb918e_DirEntry>> _4914_dirents;
	jule::Int _4923_err;
	std::tie(_4914_dirents,_4923_err) = _222bb918e_Directory::_static_method_read(_4825_path);
	if (_4923_err != 0LLU) {
		_4851_err_msg = jule::Str("connot read package directory: ", 31) + _4825_path;
		return std::make_tuple(nullptr,_4851_err_msg);
	}
	jule::Slice<jule::Ptr<_222bb918e_DirEntry>> _5413_passed_dirents = nullptr;
	{
		auto &expr = _4914_dirents;
		auto it = expr.begin();
		_iter_begin_4693230528:;
		if (it != expr.end()) {
			jule::Ptr<_222bb918e_DirEntry> _221c9ee02_dirent = *it;
			{
				jule::Str _5613_name = _221c9ee02_dirent->_field_name;
				if (_221c9ee02_dirent->_field_stat->_method_is_dir() || (!(_5613_name.has_suffix(jule::Str(".jule", 5))))) {
					goto _iter_next_4693230528;
				}
				_5413_passed_dirents.push(_221c9ee02_dirent);
			}
			_iter_next_4693230528:;
			++it;
			goto _iter_begin_4693230528;
		}
		_iter_end_4693230528:;
	}
	_4851_err_msg = jule::Str();
	return std::make_tuple(_5413_passed_dirents,_4851_err_msg);
}



inline std::tuple<jule::Bool,jule::Slice<_23886c227_Log>> _221c9ee02_is_pass_build_directives(jule::Ptr<_221d8c242_Ast>& _7034_file) {
	{
		auto &expr = _7034_file->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_4693236224:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_Directive> _221c9ee02_td = *it;
			{
				if (_221c9ee02_td->_field_tag._field_kind != jule::Str("build", 5)) {
					goto _iter_next_4693236224;
				}
				_221a72a71_DirectiveEval _7617_de = _221a72a71_DirectiveEval(jule::Slice<_23886c227_Log>(),_221c9ee02_td);
				jule::Bool _7913_result = _7617_de._method_eval();
				if (_7617_de._field_logs.len() > 0LL) {
					return std::make_tuple(false,_7617_de._field_logs);
				}
				if ((!(_7913_result))) {
					return std::make_tuple(false,nullptr);
				}
			}
			_iter_next_4693236224:;
			++it;
			goto _iter_begin_4693236224;
		}
		_iter_end_4693236224:;
	}
	return std::make_tuple(true,nullptr);
}



inline void _239823e36_push_passes(jule::Ptr<_2200229c3_Package>& _11321_p,jule::Slice<jule::Str>& _11345_passes) {
	{
		auto &expr = _11321_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4693354544:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _239823e36_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _239823e36_f->_field_passes;
					auto it = expr.begin();
					_iter_begin_4693356720:;
					if (it != expr.end()) {
						_221db702a_Pass &_239823e36_pass = *it;
						{
							if (_239823e36_pass._field_text == jule::Str()) {
								goto _iter_next_4693356720;
							}
							{
								auto &expr = _11345_passes;
								auto it = expr.begin();
								_iter_begin_4693359232:;
								if (it != expr.end()) {
									jule::Str &_239823e36_cpass = *it;
									{
										if (_239823e36_cpass == _239823e36_pass._field_text) {
											goto _iter_next_4693356720;
										}
									}
									_iter_next_4693359232:;
									++it;
									goto _iter_begin_4693359232;
								}
								_iter_end_4693359232:;
							}
							_11345_passes.push(_239823e36_pass._field_text);
						}
						_iter_next_4693356720:;
						++it;
						goto _iter_begin_4693356720;
					}
					_iter_end_4693356720:;
				}
			}
			_iter_next_4693354544:;
			++it;
			goto _iter_begin_4693354544;
		}
		_iter_end_4693354544:;
	}
}



inline jule::Slice<jule::Str> _239823e36_get_all_unique_passes(jule::Ptr<_2200229c3_Package>& _13031_pkg,jule::Slice<jule::Ptr<_2200229c3_ImportInfo>> _13056_uses) {
	jule::Slice<jule::Str> _13113_passes = nullptr;
	_239823e36_push_passes(_13031_pkg,_13113_passes);
	{
		auto &expr = _13056_uses;
		auto it = expr.begin();
		_iter_begin_4693364560:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _239823e36_u = *it;
			{
				if ((!(_239823e36_u->_field_cpp_linked))) {
					_239823e36_push_passes(_239823e36_u->_field_package,_13113_passes);
				}
			}
			_iter_next_4693364560:;
			++it;
			goto _iter_begin_4693364560;
		}
		_iter_end_4693364560:;
	}
	return _13113_passes;
}



inline jule::Bool _2388c0005_is_exist(jule::Slice<jule::Any> _3013_arr,jule::Any _3025_t) {
	{
		auto &expr = _3013_arr;
		auto it = expr.begin();
		_iter_begin_4693559488:;
		if (it != expr.end()) {
			jule::Any &_2388c0005_ref = *it;
			{
				if (_3025_t == _2388c0005_ref) {
					return true;
				}
			}
			_iter_next_4693559488:;
			++it;
			goto _iter_begin_4693559488;
		}
		_iter_end_4693559488:;
	}
	return false;
}



inline jule::Bool _2388c0005_is_dead(jule::Any _4016_ref) {
	jule::Bool _4028_dead = jule::Bool();
	if (_2388c0005_is_exist(_2388c0005_deads,_4016_ref)) {
		_4028_dead = true;
		return _4028_dead;
	}
	{
		auto &_match_expr{ _4016_ref };
		if (!(_match_expr.type_is<jule::Ptr<_222edb48e_FnIns>>())) { goto _case_end_4693567376; }
		_case_begin_4693567376:;
		{
			if (_4016_ref.operator jule::Ptr<_222edb48e_FnIns>()->_field_decl->_method_is_init()) {
				goto _match_end_4693564048;
			}
			goto _case_begin_4693563808;
		}
		goto _match_end_4693564048;
		_case_end_4693567376:;
		_case_begin_4693563808:;
		{
			if ((_2388c0005_current == _4016_ref) || (_2388c0005_main_current == _4016_ref)) {
				_4028_dead = true;
				return _4028_dead;
			}
			if (_2388c0005_is_exist(_2388c0005_checking,_4016_ref)) {
				_4028_dead = true;
				return _4028_dead;
			}
		}
		goto _match_end_4693564048;
		_case_end_4693563808:;
		_match_end_4693564048:;
	}
	jule::Any _6113_old = _2388c0005_current;
	_2388c0005_current=_4016_ref;
	jule::I64 _639_len = _2388c0005_checking.len();
	_2388c0005_checking.push(_4016_ref);
	__JULE_DEFER({
		_2388c0005_current=_6113_old;
		_2388c0005_drop_ref(_2388c0005_checking,_639_len);
	});
	{
		auto &_match_expr{ _4016_ref };
		if (!(_match_expr.type_is<jule::Ptr<_222edb48e_FnIns>>())) { goto _case_end_4693573552; }
		_case_begin_4693573552:;
		{
			_4028_dead = _2388c0005_is_fn_dead(_4016_ref.operator jule::Ptr<_222edb48e_FnIns>());
			return _4028_dead;
		}
		goto _match_end_4693564592;
		_case_end_4693573552:;
		if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4693573712; }
		_case_begin_4693573712:;
		{
			_4028_dead = _2388c0005_is_var_dead(_4016_ref.operator jule::Ptr<_2200a2657_Var>());
			return _4028_dead;
		}
		goto _match_end_4693564592;
		_case_end_4693573712:;
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_StructIns>>())) { goto _case_end_4693573808; }
		_case_begin_4693573808:;
		{
			_4028_dead = _2388c0005_is_struct_dead(_4016_ref.operator jule::Ptr<_2398d04dc_StructIns>());
			return _4028_dead;
		}
		goto _match_end_4693564592;
		_case_end_4693573808:;
		if (!(_match_expr.type_is<jule::Ptr<_2300167cb_Trait>>())) { goto _case_end_4693573072; }
		_case_begin_4693573072:;
		{
			_4028_dead = _2388c0005_is_trait_dead(_4016_ref.operator jule::Ptr<_2300167cb_Trait>());
			return _4028_dead;
		}
		goto _match_end_4693564592;
		_case_end_4693573072:;
		_case_begin_4693567728:;
		{
			_4028_dead = false;
			return _4028_dead;
		}
		goto _match_end_4693564592;
		_case_end_4693567728:;
		_match_end_4693564592:;
	}
}



inline void _2388c0005_drop_ref(jule::Slice<jule::Any>& _9218_refs,jule::Int _9231_pos) {
	_9218_refs=_9218_refs.slice(0LL,_9231_pos);
}



inline jule::Bool _2388c0005_is_all_references_are_dead(jule::Ptr<_221db702a_ReferenceStack> _10035_references) {
	jule::Int _10113_i = 0LL;
	for (; _10113_i < _10035_references->_method_len(); (_10113_i)++) {
		{
			jule::Any _10317_ref = _10035_references->_method_at(_10113_i);
			if (_10317_ref == _2388c0005_current) {
				goto _iter_next_4693582224;
			}
			if (_10317_ref == _2388c0005_main_current) {
				goto _iter_next_4693582224;
			}
			if ((!(_2388c0005_is_dead(_10317_ref)))) {
				return false;
			}
		}
	_iter_next_4693582224:;
	}
	_iter_end_4693582224:;
	return true;
}



inline jule::Bool _2388c0005_is_fn_dead(jule::Ptr<_222edb48e_FnIns> _11719_f) {
	if (_11719_f->_field_decl->_field_cpp_linked) {
		return false;
	}
	if (_11719_f->_field_decl->_method_is_entry_point() || _11719_f->_field_decl->_method_is_init()) {
		return (!(_11719_f->_field_decl->_field_statically));
	}
	if (_11719_f->_field_owner != nullptr) {
		if (_2388c0005_is_exist(_2388c0005_checking,jule::Any(_11719_f->_field_owner))) {
			return true;
		}
		return _2388c0005_is_dead(jule::Any(_11719_f->_field_owner));
	}
	return _2388c0005_is_all_references_are_dead(_11719_f->_field_references);
}



inline jule::Bool _2388c0005_is_var_dead(jule::Ptr<_2200a2657_Var> _14320_v) {
	if (_14320_v->_field_constant) {
		return true;
	}
	if (_14320_v->_field_cpp_linked) {
		return false;
	}
	return _2388c0005_is_all_references_are_dead(_14320_v->_field_references);
}



inline jule::Bool _2388c0005_is_struct_dead(jule::Ptr<_2398d04dc_StructIns> _19323_s) {
	return false;
}



inline jule::Bool _2388c0005_is_trait_dead(jule::Ptr<_2300167cb_Trait> _21022_t) {
	return false;
}



inline void _2388c0005_eliminate_dead_functions(jule::Slice<jule::Ptr<_222edb48e_Fn>>& _22834_funcs) {
	jule::Int _22913_i = 0LL;
	while (_22913_i < _22834_funcs.len()) {
		{
			jule::Ptr<_222edb48e_Fn> _23117_f = _22834_funcs[_22913_i];
			jule::Int _23217_j = 0LL;
			while (_23217_j < _23117_f->_field_instances.len()) {
				{
					jule::Ptr<_222edb48e_FnIns> _23421_ins = _23117_f->_field_instances[_23217_j];
					_2388c0005_main_current=jule::Any(_23421_ins);
					if (_2388c0005_is_fn_dead(_23421_ins)) {
						_2388c0005_deads.push(jule::Any(_23421_ins));
						_23117_f->_field_instances=jule::append(_23117_f->_field_instances.slice(0LL,_23217_j),_23117_f->_field_instances.slice(_23217_j + 1LL));
						goto _iter_next_4693628448;
					}
					_221eb825d_eliminate_dead_code_of_scope(_23421_ins->_field_scope);
					(_23217_j)++;
				}
			_iter_next_4693628448:;
			}
			_iter_end_4693628448:;
			if (_23117_f->_field_instances.len() == 0LL) {
				_22834_funcs=jule::append(_22834_funcs.slice(0LL,_22913_i),_22834_funcs.slice(_22913_i + 1LL));
				goto _iter_next_4693626000;
			}
			(_22913_i)++;
		}
	_iter_next_4693626000:;
	}
	_iter_end_4693626000:;
}



inline void _2388c0005_eliminate_dead_globals(jule::Ptr<_2200229c3_Package>& _25432_pkg) {
	{
		auto &expr = _25432_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4693632576:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _2388c0005_f = *it;
			{
				jule::Int _25617_i = 0LL;
				while (_25617_i < _2388c0005_f->_field_vars.len()) {
					{
						jule::Ptr<_2200a2657_Var> _25821_v = _2388c0005_f->_field_vars[_25617_i];
						_2388c0005_main_current=jule::Any(_25821_v);
						if (_2388c0005_is_var_dead(_25821_v)) {
							_2388c0005_deads.push(jule::Any(_25821_v));
							_2388c0005_f->_field_vars=jule::append(_2388c0005_f->_field_vars.slice(0LL,_25617_i),_2388c0005_f->_field_vars.slice(_25617_i + 1LL));
						} else {
							(_25617_i)++;
						}
					}
				_iter_next_4693639984:;
				}
				_iter_end_4693639984:;
			}
			_iter_next_4693632576:;
			++it;
			goto _iter_begin_4693632576;
		}
		_iter_end_4693632576:;
	}
}



inline void _2388c0005_eliminate_dead_functions_package(jule::Ptr<_2200229c3_Package>& _27042_pkg) {
	{
		auto &expr = _27042_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4693637632:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _2388c0005_f = *it;
			{
				_2388c0005_eliminate_dead_functions(_2388c0005_f->_field_funcs);
			}
			_iter_next_4693637632:;
			++it;
			goto _iter_begin_4693637632;
		}
		_iter_end_4693637632:;
	}
}



inline void _2388c0005_catch_alive_init(jule::Ptr<_2200229c3_Package>& _31826_pkg) {
	
	
	jule::Ptr<_222edb48e_Fn> _32113_f = _31826_pkg->_method_find_fn(jule::Str("init", 4),false);
	if (_32113_f == nullptr) {
		return;
	}
	jule::I64 _3269_n = _2388c0005_deads.len();
	__JULE_DEFER({
		_2388c0005_deads=_2388c0005_deads.slice(0LL,_3269_n);
		_2388c0005_checking=nullptr;
		_2388c0005_current=jule::Any(nullptr);
	});
	jule::Ptr<_222edb48e_FnIns> _33413_ins = _32113_f->_field_instances[0LL];
	jule::Int _33513_i = 0LL;
	for (; _33513_i < _33413_ins->_field_refers->_method_len(); (_33513_i)++) {
		{
			if ((!(_2388c0005_is_dead(_33413_ins->_field_refers->_method_at(_33513_i))))) {
				_32113_f->_field_statically=true;
				return;
			}
		}
	_iter_next_4693672960:;
	}
	_iter_end_4693672960:;
}



inline void _2388c0005_eliminate_package(jule::Ptr<_2200229c3_Package>& _34427_pkg) {
	_2388c0005_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_2388c0005_catch_alive_init(_34427_pkg);
	_2388c0005_eliminate_dead_globals(_34427_pkg);
	_2388c0005_eliminate_dead_functions_package(_34427_pkg);
}



inline void _2388c0005_eliminate(jule::Ptr<_239823e36_IR>& _35523_ir) {
	jule::I64 _35613_i = _35523_ir->_field_used.len() - 1LL;
	for (; _35613_i >= 0LL; (_35613_i)--) {
		{
			jule::Ptr<_2200229c3_ImportInfo> _35817_u = _35523_ir->_field_used[_35613_i];
			if ((!(_35817_u->_field_cpp_linked))) {
				_2388c0005_eliminate_package(_35817_u->_field_package);
			}
		}
	_iter_next_4693685824:;
	}
	_iter_end_4693685824:;
	_2388c0005_eliminate_package(_35523_ir->_field_main);
	_2388c0005_deads=nullptr;
	_2388c0005_checking=nullptr;
	_2388c0005_current=jule::Any(nullptr);
}



inline void _221eb825d_eliminate_dead_code_of_scope(jule::Ptr<_2300254bb_Scope> _7537_s) {
	jule::Ptr<_221eb825d_ScopeDeadCode> _7613_sdc = jule::new_struct_ptr<_221eb825d_ScopeDeadCode>(new( std::nothrow ) _221eb825d_ScopeDeadCode(jule::Ptr<_221eb825d_ScopeDeadCode>(),_7537_s,(&(_7537_s->_field_stmts)),jule::Int()));
	{
		_7613_sdc->_method_optimize_stmts();
	}
}



inline jule::Int _1dcda108c_find_format_prefix(jule::Slice<jule::U8>& _924_bytes,jule::Int& _940_start) {
	jule::Int _1013_i = _940_start;
	while (_1013_i < _924_bytes.len()) {
		{
			jule::I32 _1214_r;
			jule::Int _1217_size;
			std::tie(_1214_r,_1217_size) = _2221ee98e_decode_rune(_924_bytes.slice(_1013_i));
			if (_1214_r == '{') {
				return _1013_i;
			}
			_1013_i+=_1217_size;
		}
	_iter_next_4693831328:;
	}
	_iter_end_4693831328:;
	return -1LL;
}



inline jule::Slice<jule::U8> _1dcda108c_get_format_range(jule::Int& _2630_i,jule::Slice<jule::U8>& _2643_bytes) {
	jule::Int _279_start = _2630_i;
	jule::Int _2813_braces = 0LL;
	while (_2630_i < _2643_bytes.len()) {
		{
			jule::I32 _3014_r;
			jule::Int _3017_size;
			std::tie(_3014_r,_3017_size) = _2221ee98e_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				if (!(_match_expr == ('{'))) { goto _case_end_4693842448; }
				_case_begin_4693842448:;
				{
					(_2813_braces)++;
				}
				goto _match_end_4693842128;
				_case_end_4693842448:;
				if (!(_match_expr == ('}'))) { goto _case_end_4693842208; }
				_case_begin_4693842208:;
				{
					(_2813_braces)--;
					if (_2813_braces == 0LL) {
						return _2643_bytes.slice(_279_start,_2630_i);
					}
				}
				goto _match_end_4693842128;
				_case_end_4693842208:;
				_match_end_4693842128:;
			}
		}
	_iter_next_4693838448:;
	}
	_iter_end_4693838448:;
	return nullptr;
}



inline jule::Slice<jule::U8> _1dcda108c_fmt_by_default(jule::Any& _4620_arg) {
	if (_4620_arg == nullptr) {
		return jule::Slice<jule::U8>({'n','i','l'});
	}
	{
		auto &_match_expr{ _4620_arg };
		if (!(_match_expr.type_is<jule::F32>())) { goto _case_end_4693848256; }
		_case_begin_4693848256:;
		{
			return static_cast<jule::Slice<jule::U8>>(_2389d34d1_fmt_float(_4620_arg.operator jule::F32(),'g',-1LL,32LL));
		}
		goto _match_end_4693846416;
		_case_end_4693848256:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4693848752; }
		_case_begin_4693848752:;
		{
			return static_cast<jule::Slice<jule::U8>>(_2389d34d1_fmt_float(_4620_arg.operator jule::F64(),'g',-1LL,64LL));
		}
		goto _match_end_4693846416;
		_case_end_4693848752:;
		if (!(_match_expr.type_is<jule::I8>())) { goto _case_end_4693844720; }
		_case_begin_4693844720:;
		{
			return static_cast<jule::Slice<jule::U8>>(_2397e4467_fmt_int(_4620_arg.operator jule::I8(),10LL));
		}
		goto _match_end_4693846416;
		_case_end_4693844720:;
		if (!(_match_expr.type_is<jule::I16>())) { goto _case_end_4693848368; }
		_case_begin_4693848368:;
		{
			return static_cast<jule::Slice<jule::U8>>(_2397e4467_fmt_int(_4620_arg.operator jule::I16(),10LL));
		}
		goto _match_end_4693846416;
		_case_end_4693848368:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4693848464; }
		_case_begin_4693848464:;
		{
			return static_cast<jule::Slice<jule::U8>>(_2397e4467_fmt_int(_4620_arg.operator jule::I32(),10LL));
		}
		goto _match_end_4693846416;
		_case_end_4693848464:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4693844176; }
		_case_begin_4693844176:;
		{
			return static_cast<jule::Slice<jule::U8>>(_2397e4467_fmt_int(_4620_arg.operator jule::I64(),10LL));
		}
		goto _match_end_4693846416;
		_case_end_4693844176:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4693844272; }
		_case_begin_4693844272:;
		{
			return static_cast<jule::Slice<jule::U8>>(_2397e4467_fmt_uint(_4620_arg.operator jule::U8(),10LL));
		}
		goto _match_end_4693846416;
		_case_end_4693844272:;
		if (!(_match_expr.type_is<jule::U16>())) { goto _case_end_4693844368; }
		_case_begin_4693844368:;
		{
			return static_cast<jule::Slice<jule::U8>>(_2397e4467_fmt_uint(_4620_arg.operator jule::U16(),10LL));
		}
		goto _match_end_4693846416;
		_case_end_4693844368:;
		if (!(_match_expr.type_is<jule::U32>())) { goto _case_end_4693844464; }
		_case_begin_4693844464:;
		{
			return static_cast<jule::Slice<jule::U8>>(_2397e4467_fmt_uint(_4620_arg.operator jule::U32(),10LL));
		}
		goto _match_end_4693846416;
		_case_end_4693844464:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4693847488; }
		_case_begin_4693847488:;
		{
			return static_cast<jule::Slice<jule::U8>>(_2397e4467_fmt_uint(_4620_arg.operator jule::U64(),10LL));
		}
		goto _match_end_4693846416;
		_case_end_4693847488:;
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4693847584; }
		_case_begin_4693847584:;
		{
			return static_cast<jule::Slice<jule::U8>>(_4620_arg.operator jule::Str());
		}
		goto _match_end_4693846416;
		_case_end_4693847584:;
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4693847680; }
		_case_begin_4693847680:;
		{
			if (_4620_arg.operator jule::Bool()) {
				return jule::Slice<jule::U8>({'t','r','u','e'});
			}
			return jule::Slice<jule::U8>({'f','a','l','s','e'});
		}
		goto _match_end_4693846416;
		_case_end_4693847680:;
		_case_begin_4693847104:;
		{
			return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4620_arg));
		}
		goto _match_end_4693846416;
		_case_end_4693847104:;
		_match_end_4693846416:;
	}
}



inline jule::Slice<jule::U8> _1dcda108c_apply_fmt_by_default(jule::Int& _7530_j,jule::Slice<jule::Any>& _7539_args) {
	jule::Any _769_arg = _7539_args[_7530_j];
	(_7530_j)++;
	return _1dcda108c_fmt_by_default(_769_arg);
}



inline jule::Slice<jule::U8> _1dcda108c_apply_fmt(jule::Slice<jule::U8>& _8319_fmt,jule::Int& _8337_j,jule::Slice<jule::Any>& _8346_args) {
	if (_8319_fmt.len() == 2LL) {
		return _1dcda108c_apply_fmt_by_default(_8337_j,_8346_args);
	}
	if ((_8319_fmt.len() == 4LL) && (_8319_fmt == jule::Slice<jule::U8>({'{','{','}','}'}))) {
		return jule::Slice<jule::U8>({'{','}'});
	}
	return _8319_fmt;
}



inline jule::Slice<jule::U8> _1dcda108c_format_bytes(jule::Str _9717_fmt,jule::Slice<jule::Any> _9727_args) {
	jule::Slice<jule::U8> _9813_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_9717_fmt);
	if (_9727_args.len() == 0LL) {
		return _9813_fmt_bytes;
	}
	jule::Slice<jule::U8> _10413_bytes = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_9717_fmt.len()));
	jule::Int _10613_j = 0LL;
	jule::Int _10713_last = 0LL;
	jule::Int _10813_i = _1dcda108c_find_format_prefix(_9813_fmt_bytes,_10713_last);
	for (; _10813_i != -1LL; _10813_i=static_cast<jule::Int>(_1dcda108c_find_format_prefix(_9813_fmt_bytes,_10813_i))) {
		{
			_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last,_10813_i));
			jule::Slice<jule::U8> _11117_format = _1dcda108c_get_format_range(_10813_i,_9813_fmt_bytes);
			if (_11117_format == nullptr) {
				goto _iter_next_4693884624;
			}
			_10413_bytes=jule::append(_10413_bytes,_1dcda108c_apply_fmt(_11117_format,_10613_j,_9727_args));
			if (_10613_j >= _9727_args.len()) {
				_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10813_i));
				_10713_last=static_cast<jule::I64>(_9813_fmt_bytes.len());
				goto _iter_end_4693884624;
			}
			_10713_last=_10813_i;
		}
	_iter_next_4693884624:;
	}
	_iter_end_4693884624:;
	if (_10713_last < _9813_fmt_bytes.len()) {
		_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last));
	}
	return _10413_bytes;
}



inline jule::Str _1dcda108c_format(jule::Str _15715_fmt,jule::Slice<jule::Any> _15725_args) {
	return static_cast<jule::Str>(_1dcda108c_format_bytes(_15715_fmt,_15725_args));
}



inline jule::U64 _1dce1143d_unix(void) {
	return static_cast<jule::U64>(time(nullptr));
}



inline jule::U64 _1dce1143d_unix_year_to_seconds(jule::Uint _25725_y,jule::Bool& _25743_leap) {
	if ((_25725_y - 2LL) <= 136LL) {
		jule::Uint _25917_leaps = (_25725_y - 68LL) >> 2LL;
		_25743_leap=((_25725_y - 68LL) & 3LL) == 0LL;
		if (_25743_leap) {
			(_25917_leaps)--;
		}
		return static_cast<jule::Uint>((31536000LL * (_25725_y - 70LL)) + (86400LL * _25917_leaps));
	}
	jule::Uint _26713_leaps = 0LLU;
	jule::Uint _26813_centuries = 0LLU;
	jule::Uint _26913_cycles = jule::unsafe_div(_25725_y - 100LL,400LL);
	jule::Uint _27013_rem = jule::unsafe_mod(_25725_y - 100LL,400LL);
	if (_27013_rem < 0LL) {
		(_26913_cycles)--;
		_27013_rem+=400LL;
	}
	if (_27013_rem == 0LL) {
		_25743_leap=true;
		_26813_centuries=0LL;
		_26713_leaps=0LL;
	} else {
		if (_27013_rem >= 200LL) {
			if (_27013_rem >= 300LL) {
				_26813_centuries=3LL;
				_27013_rem-=300LL;
			} else {
				_26813_centuries=2LL;
				_27013_rem-=200LL;
			}
		} else {
			if (_27013_rem >= 100LL) {
				_26813_centuries=1LL;
				_27013_rem-=100LL;
			} else {
				_26813_centuries=0LL;
			}
		}
		if (_27013_rem == 0LL) {
			_25743_leap=false;
			_26713_leaps=0LL;
		} else {
			_26713_leaps=static_cast<jule::Uint>(jule::unsafe_div(_27013_rem,4LL));
			_27013_rem = jule::unsafe_mod(_27013_rem,4LL);
			_25743_leap=_27013_rem == 0LL;
		}
	}
	_26713_leaps+=static_cast<jule::Uint>((97LL * _26913_cycles) + (24LL * _26813_centuries));
	if (_25743_leap) {
		(_26713_leaps)++;
	}
	return static_cast<jule::Uint>(((((_25725_y - 100LL) * 31536000LL) + (_26713_leaps * 86400LL)) + 946684800LL) + 86400LL);
}



inline jule::U64 _1dce1143d_unix_month_to_seconds(jule::Uint _31426_m,jule::Bool _31439_leap) {
	jule::U64 _31613_t = 0LLU;
	{
		auto &_match_expr{ _31426_m };
		if (!(_match_expr == (1LL))) { goto _case_end_4693938592; }
		_case_begin_4693938592:;
		{
			_31613_t=2678400LL;
		}
		goto _match_end_4693942704;
		_case_end_4693938592:;
		if (!(_match_expr == (2LL))) { goto _case_end_4693942784; }
		_case_begin_4693942784:;
		{
			_31613_t=5097600LL;
		}
		goto _match_end_4693942704;
		_case_end_4693942784:;
		if (!(_match_expr == (3LL))) { goto _case_end_4693943216; }
		_case_begin_4693943216:;
		{
			_31613_t=7776000LL;
		}
		goto _match_end_4693942704;
		_case_end_4693943216:;
		if (!(_match_expr == (4LL))) { goto _case_end_4693943312; }
		_case_begin_4693943312:;
		{
			_31613_t=10368000LL;
		}
		goto _match_end_4693942704;
		_case_end_4693943312:;
		if (!(_match_expr == (5LL))) { goto _case_end_4693943408; }
		_case_begin_4693943408:;
		{
			_31613_t=13046400LL;
		}
		goto _match_end_4693942704;
		_case_end_4693943408:;
		if (!(_match_expr == (6LL))) { goto _case_end_4693943504; }
		_case_begin_4693943504:;
		{
			_31613_t=15638400LL;
		}
		goto _match_end_4693942704;
		_case_end_4693943504:;
		if (!(_match_expr == (7LL))) { goto _case_end_4693943616; }
		_case_begin_4693943616:;
		{
			_31613_t=18316800LL;
		}
		goto _match_end_4693942704;
		_case_end_4693943616:;
		if (!(_match_expr == (8LL))) { goto _case_end_4693943728; }
		_case_begin_4693943728:;
		{
			_31613_t=20995200LL;
		}
		goto _match_end_4693942704;
		_case_end_4693943728:;
		if (!(_match_expr == (9LL))) { goto _case_end_4693943840; }
		_case_begin_4693943840:;
		{
			_31613_t=23587200LL;
		}
		goto _match_end_4693942704;
		_case_end_4693943840:;
		if (!(_match_expr == (10LL))) { goto _case_end_4693943952; }
		_case_begin_4693943952:;
		{
			_31613_t=26265600LL;
		}
		goto _match_end_4693942704;
		_case_end_4693943952:;
		if (!(_match_expr == (11LL))) { goto _case_end_4693944064; }
		_case_begin_4693944064:;
		{
			_31613_t=28857600LL;
		}
		goto _match_end_4693942704;
		_case_end_4693944064:;
		_match_end_4693942704:;
	}
	if (_31439_leap && (_31426_m >= 2LL)) {
		_31613_t+=86400LL;
	}
	return _31613_t;
}



inline jule::Bool _238ade994_iter_expr_is_copy_optimizable(jule::Ptr<_20683ebaa_Data>& _3835_expr,jule::Ptr<_2200a2657_Var>& _3849_v) {
	return ((!(_3835_expr->_field_lvalue)) && (!(_3835_expr->_field_kind->_method_mutable()))) || (!(_3849_v->_field_mutable));
}



inline jule::Str _238ade994_gen_range_index_iter(jule::Ptr<_2300254bb_RangeIter>& _4230_it) {
	jule::Str _439_begin = _22011eedd_iter_begin_label_ident(static_cast<jule::Uintptr>(_4230_it));
	jule::Str _449_next = _22011eedd_iter_next_label_ident(static_cast<jule::Uintptr>(_4230_it));
	jule::Str _4613_obj = jule::Str("{\n", 2);
	_207182002_add_indent();
	_4613_obj+=_207182002_indent();
	_4613_obj+=jule::Str("auto ", 5);
	if (_2388c6e74_OPT_COPY && _4230_it->_field_expr->_field_lvalue) {
		_4613_obj+=jule::Str("&", 1);
	}
	_4613_obj+=jule::Str("expr = ", 7);
	_4613_obj+=_221dad153_gen_expr_model(_4230_it->_field_expr->_field_model);
	_4613_obj+=jule::Str(";\n", 2);
	_4613_obj+=_207182002_indent();
	_4613_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_4613_obj+=_207182002_indent();
	_4613_obj+=_439_begin;
	_4613_obj+=jule::Str(":;\n", 3);
	_4613_obj+=_207182002_indent();
	_4613_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_207182002_add_indent();
	_4613_obj+=_207182002_indent();
	if (_4230_it->_field_key_a != nullptr) {
		_4613_obj+=_207182002_gen_var_init_expr(_4230_it->_field_key_a,jule::Str("it - expr.begin()", 17));
		_4613_obj+=jule::Str("\n", 1);
		_4613_obj+=_207182002_indent();
	}
	if (_4230_it->_field_key_b != nullptr) {
		if (_2388c6e74_OPT_COPY) {
			_4230_it->_field_key_b->_field_reference=_238ade994_iter_expr_is_copy_optimizable(_4230_it->_field_expr,_4230_it->_field_key_b);
		}
		_4613_obj+=_207182002_gen_var_init_expr(_4230_it->_field_key_b,jule::Str("*it", 3));
		_4613_obj+=jule::Str("\n", 1);
		_4613_obj+=_207182002_indent();
	}
	_4613_obj+=_238ade994_gen_scope(_4230_it->_field_scope);
	_4613_obj+=jule::Str("\n", 1);
	_4613_obj+=_207182002_indent();
	_4613_obj+=_449_next;
	_4613_obj+=jule::Str(":;\n", 3);
	_4613_obj+=_207182002_indent();
	_4613_obj+=jule::Str("++it;\n", 6);
	_4613_obj+=_207182002_indent();
	if (_4230_it->_field_key_a != nullptr) {
		_4613_obj+=_22011eedd_var_out_ident(_4230_it->_field_key_a);
		_4613_obj+=jule::Str("++;\n", 4);
		_4613_obj+=_207182002_indent();
	}
	_4613_obj+=jule::Str("goto ", 5);
	_4613_obj+=_439_begin;
	_4613_obj+=jule::Str(";\n", 2);
	_207182002_done_indent();
	_4613_obj+=_207182002_indent();
	_4613_obj+=jule::Str("}\n", 2);
	_4613_obj+=_207182002_indent();
	_4613_obj+=_22011eedd_iter_end_label_ident(static_cast<jule::Uintptr>(_4230_it));
	_4613_obj+=jule::Str(":;\n", 3);
	_207182002_done_indent();
	_4613_obj+=_207182002_indent();
	_4613_obj+=jule::Str("}", 1);
	return _4613_obj;
}



inline jule::Str _238ade994_gen_range_hashmap_iter(jule::Ptr<_2300254bb_RangeIter>& _11232_it) {
	jule::Str _1139_begin = _22011eedd_iter_begin_label_ident(static_cast<jule::Uintptr>(_11232_it));
	jule::Str _1149_next = _22011eedd_iter_next_label_ident(static_cast<jule::Uintptr>(_11232_it));
	jule::Str _11613_obj = jule::Str("{\n", 2);
	_207182002_add_indent();
	_11613_obj+=_207182002_indent();
	_11613_obj+=jule::Str("auto ", 5);
	if (_2388c6e74_OPT_COPY && _11232_it->_field_expr->_field_lvalue) {
		_11613_obj+=jule::Str("&", 1);
	}
	_11613_obj+=jule::Str("expr = ", 7);
	_11613_obj+=_221dad153_gen_expr_model(_11232_it->_field_expr->_field_model);
	_11613_obj+=jule::Str(";\n", 2);
	_11613_obj+=_207182002_indent();
	_11613_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_11613_obj+=_207182002_indent();
	_11613_obj+=_1139_begin;
	_11613_obj+=jule::Str(":;\n", 3);
	_11613_obj+=_207182002_indent();
	_11613_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_207182002_add_indent();
	_11613_obj+=_207182002_indent();
	if (_11232_it->_field_key_a != nullptr) {
		if (_2388c6e74_OPT_COPY) {
			_11232_it->_field_key_a->_field_reference=_238ade994_iter_expr_is_copy_optimizable(_11232_it->_field_expr,_11232_it->_field_key_a);
		}
		_11613_obj+=_207182002_gen_var_init_expr(_11232_it->_field_key_a,jule::Str("it->first", 9));
		_11613_obj+=jule::Str("\n", 1);
		_11613_obj+=_207182002_indent();
	}
	if (_11232_it->_field_key_b != nullptr) {
		if (_2388c6e74_OPT_COPY) {
			_11232_it->_field_key_b->_field_reference=_238ade994_iter_expr_is_copy_optimizable(_11232_it->_field_expr,_11232_it->_field_key_b);
		}
		_11613_obj+=_207182002_gen_var_init_expr(_11232_it->_field_key_b,jule::Str("it->second", 10));
		_11613_obj+=jule::Str("\n", 1);
		_11613_obj+=_207182002_indent();
	}
	_11613_obj+=_238ade994_gen_scope(_11232_it->_field_scope);
	_11613_obj+=jule::Str("\n", 1);
	_11613_obj+=_207182002_indent();
	_11613_obj+=_1149_next;
	_11613_obj+=jule::Str(":;\n", 3);
	_11613_obj+=_207182002_indent();
	_11613_obj+=jule::Str("++it;\n", 6);
	_11613_obj+=_207182002_indent();
	_11613_obj+=jule::Str("goto ", 5);
	_11613_obj+=_1139_begin;
	_11613_obj+=jule::Str(";\n", 2);
	_207182002_done_indent();
	_11613_obj+=_207182002_indent();
	_11613_obj+=jule::Str("}\n", 2);
	_11613_obj+=_207182002_indent();
	_11613_obj+=_22011eedd_iter_end_label_ident(static_cast<jule::Uintptr>(_11232_it));
	_11613_obj+=jule::Str(":;\n", 3);
	_207182002_done_indent();
	_11613_obj+=_207182002_indent();
	_11613_obj+=jule::Str("}", 1);
	return _11613_obj;
}



inline jule::Str _238ade994_gen_if(jule::Ptr<_2300254bb_If> _18015_i) {
	jule::Str _18113_obj = jule::Str("if (", 4);
	_18113_obj+=_221dad153_gen_expr(_18015_i->_field_expr);
	_18113_obj+=jule::Str(") ", 2);
	_18113_obj+=_238ade994_gen_scope(_18015_i->_field_scope);
	return _18113_obj;
}



inline jule::Str _238ade994_gen_conditional(jule::Ptr<_2300254bb_Conditional> _18824_c) {
	jule::Str _18913_obj = _238ade994_gen_if(_18824_c->_field_elifs[0LL]);
	{
		auto expr = _18824_c->_field_elifs.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4694366048:;
		if (it != expr.end()) {
			jule::Ptr<_2300254bb_If> _238ade994_elif = *it;
			{
				_18913_obj+=jule::Str(" else ", 6);
				_18913_obj+=_238ade994_gen_if(_238ade994_elif);
			}
			_iter_next_4694366048:;
			++it;
			goto _iter_begin_4694366048;
		}
		_iter_end_4694366048:;
	}
	if (_18824_c->_field_default != nullptr) {
		_18913_obj+=jule::Str(" else ", 6);
		_18913_obj+=_238ade994_gen_scope(_18824_c->_field_default->_field_scope);
	}
	return _18913_obj;
}



inline jule::Str _238ade994_gen_inf_iter(jule::Ptr<_2300254bb_InfIter> _20421_it) {
	jule::Str _20513_obj = jule::Str("for (;;) {\n", 11);
	_207182002_add_indent();
	_20513_obj+=_207182002_indent();
	_20513_obj+=_238ade994_gen_scope(_20421_it->_field_scope);
	_207182002_done_indent();
	jule::Str _2129_indent = _207182002_indent();
	_20513_obj+=jule::Str("\n", 1);
	_20513_obj+=_2129_indent;
	_20513_obj+=_22011eedd_iter_next_label_ident(static_cast<jule::Uintptr>(_20421_it));
	_20513_obj+=jule::Str(":;\n", 3);
	_20513_obj+=_2129_indent;
	_20513_obj+=jule::Str("}\n", 2);
	_20513_obj+=_2129_indent;
	_20513_obj+=_22011eedd_iter_end_label_ident(static_cast<jule::Uintptr>(_20421_it));
	_20513_obj+=jule::Str(":;", 2);
	return _20513_obj;
}



inline jule::Str _238ade994_gen_while_iter(jule::Ptr<_2300254bb_WhileIter> _22723_it) {
	jule::Str _22813_obj = jule::Str();
	if ((_22723_it->_field_expr != nullptr) && (_22723_it->_field_next == nullptr)) {
		_22813_obj+=jule::Str("while (", 7);
		_22813_obj+=_221dad153_gen_expr(_22723_it->_field_expr);
		_22813_obj+=jule::Str(") {\n", 4);
	} else {
		_22813_obj+=jule::Str("for (; ", 7);
		if (_22723_it->_field_expr != nullptr) {
			_22813_obj+=_221dad153_gen_expr(_22723_it->_field_expr);
		}
		_22813_obj+=jule::Str("; ", 2);
		if (_22723_it->_field_next != nullptr) {
			jule::Str _24017_st = _238ade994_gen_st(_22723_it->_field_next);
			_22813_obj+=_24017_st.slice(0LL,_24017_st.len() - 1LL);
		}
		_22813_obj+=jule::Str(") {\n", 4);
	}
	_207182002_add_indent();
	_22813_obj+=_207182002_indent();
	_22813_obj+=_238ade994_gen_scope(_22723_it->_field_scope);
	_22813_obj+=jule::Str("\n", 1);
	_207182002_done_indent();
	_22813_obj+=_207182002_indent();
	_22813_obj+=_22011eedd_iter_next_label_ident(static_cast<jule::Uintptr>(_22723_it));
	_22813_obj+=jule::Str(":;\n", 3);
	_22813_obj+=_207182002_indent();
	_22813_obj+=jule::Str("}\n", 2);
	_22813_obj+=_207182002_indent();
	_22813_obj+=_22011eedd_iter_end_label_ident(static_cast<jule::Uintptr>(_22723_it));
	_22813_obj+=jule::Str(":;", 2);
	return _22813_obj;
}



inline jule::Str _238ade994_gen_range_iter(jule::Ptr<_2300254bb_RangeIter> _26323_it) {
	{
		if (!((_26323_it->_field_expr->_field_kind->_method_slc() != nullptr))) { goto _case_end_4694393920; }
		_case_begin_4694393920:;
		{
			return _238ade994_gen_range_index_iter(_26323_it);
		}
		goto _match_end_4694388192;
		_case_end_4694393920:;
		if (!((_26323_it->_field_expr->_field_kind->_method_arr() != nullptr))) { goto _case_end_4694394224; }
		_case_begin_4694394224:;
		{
			return _238ade994_gen_range_index_iter(_26323_it);
		}
		goto _match_end_4694388192;
		_case_end_4694394224:;
		if (!((_26323_it->_field_expr->_field_kind->_method_map() != nullptr))) { goto _case_end_4694394672; }
		_case_begin_4694394672:;
		{
			return _238ade994_gen_range_hashmap_iter(_26323_it);
		}
		goto _match_end_4694388192;
		_case_end_4694394672:;
		_case_begin_4694388336:;
		{
			return _238ade994_gen_range_index_iter(_26323_it);
		}
		goto _match_end_4694388192;
		_case_end_4694388336:;
		_match_end_4694388192:;
	}
}



inline jule::Str _238ade994_gen_cont(jule::Ptr<_2300254bb_ContSt> _27213_c) {
	jule::Str _27313_obj = jule::Str("goto ", 5);
	_27313_obj+=_22011eedd_iter_next_label_ident(_27213_c->_field_it);
	_27313_obj+=jule::Str(";", 1);
	return _27313_obj;
}



inline jule::Str _238ade994_gen_label(jule::Ptr<_2300254bb_Label> _27914_l) {
	return _22011eedd_label_ident(_27914_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _238ade994_gen_goto(jule::Ptr<_2300254bb_GotoSt> _28313_gt) {
	jule::Str _28413_obj = jule::Str("goto ", 5);
	_28413_obj+=_22011eedd_label_ident(_28313_gt->_field_ident);
	_28413_obj+=jule::Str(";", 1);
	return _28413_obj;
}



inline jule::Str _238ade994_gen_postfix(jule::Ptr<_2300254bb_Postfix> _29020_p) {
	jule::Str _29113_obj = jule::Str("(", 1);
	_29113_obj+=_221dad153_gen_expr(_29020_p->_field_expr);
	_29113_obj+=jule::Str(")", 1);
	_29113_obj+=_29020_p->_field_op;
	_29113_obj+=jule::Str(";", 1);
	return _29113_obj;
}



inline jule::Str _238ade994_gen_div_by_zero_assign(jule::Ptr<_2300254bb_Assign> _29931_a) {
	jule::Str _30013_obj = _221dad153_gen_expr(_29931_a->_field_l);
	_30013_obj+=jule::Str(" = ", 3);
	_30013_obj+=_221dad153_gen_div_by_zero_binop_expr_model(_29931_a->_field_op.slice(0LL,1LL),_29931_a->_field_l,_29931_a->_field_r);
	_30013_obj+=jule::Str(";", 1);
	return _30013_obj;
}



inline jule::Str _238ade994_gen_assign(jule::Ptr<_2300254bb_Assign> _30719_a) {
	{
		auto &_match_expr{ _30719_a->_field_op };
		if (!(_match_expr == (jule::Str("/=", 2)) || _match_expr == (jule::Str("%=", 2)))) { goto _case_end_4694410800; }
		_case_begin_4694410800:;
		{
			return _238ade994_gen_div_by_zero_assign(_30719_a);
		}
		goto _match_end_4694414784;
		_case_end_4694410800:;
		_match_end_4694414784:;
	}
	jule::Str _31413_obj = _221dad153_gen_expr(_30719_a->_field_l);
	_31413_obj+=_30719_a->_field_op;
	if (_2388c6e74_OPT_APPEND) {
		{
			auto &_match_expr{ _30719_a->_field_r };
			if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinAppendCallExprModel>>())) { goto _case_end_4694421296; }
			_case_begin_4694421296:;
			{
				jule::Ptr<_21eedb492_BuiltinAppendCallExprModel> _31921_model = _30719_a->_field_r.operator jule::Ptr<_21eedb492_BuiltinAppendCallExprModel>();
				jule::Str _32018_expr;
				jule::Bool _32024_optimized;
				std::tie(_32018_expr,_32024_optimized) = _221dad153_gen_builtin_append_call_expr_model_assign(_30719_a->_field_l,_31921_model);
				if (_32024_optimized) {
					return _32018_expr;
				}
				_31413_obj+=_32018_expr;
			}
			goto _match_end_4694419344;
			_case_end_4694421296:;
			_case_begin_4694417328:;
			{
				_31413_obj+=_221dad153_gen_expr(_30719_a->_field_r);
			}
			goto _match_end_4694419344;
			_case_end_4694417328:;
			_match_end_4694419344:;
		}
	} else {
		_31413_obj+=_221dad153_gen_expr(_30719_a->_field_r);
	}
	_31413_obj+=jule::Str(";", 1);
	return _31413_obj;
}



inline jule::Str _238ade994_gen_multi_assign(jule::Ptr<_2300254bb_MultiAssign> _33625_a) {
	jule::Str _33713_obj = jule::Str("std::tie(", 9);
	{
		auto &expr = _33625_a->_field_l;
		auto it = expr.begin();
		_iter_begin_4694427280:;
		if (it != expr.end()) {
			jule::Any _238ade994_l = *it;
			{
				if (_238ade994_l == nullptr) {
					_33713_obj+=jule::Str("std::ignore", 11);
					_33713_obj+=jule::Str(",", 1);
				} else {
					_33713_obj+=_221dad153_gen_expr(_238ade994_l);
					_33713_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_4694427280:;
			++it;
			goto _iter_begin_4694427280;
		}
		_iter_end_4694427280:;
	}
	_33713_obj=_33713_obj.slice(0LL,_33713_obj.len() - 1LL);
	_33713_obj+=jule::Str(") = ", 4);
	_33713_obj+=_221dad153_gen_expr(_33625_a->_field_r);
	_33713_obj+=jule::Str(";", 1);
	return _33713_obj;
}



inline jule::Str _238ade994_get_case_match_expr(jule::Ptr<_2300254bb_Match>& _35829_m) {
	if ((!(_35829_m->_field_expr->_method_is_const()))) {
		return jule::Str("_match_expr", 11);
	}
	if ((!(_35829_m->_field_expr->_field_constant->_method_is_bool())) || (!(_35829_m->_field_expr->_field_constant->_method_read_bool()))) {
		return _221dad153_gen_expr_model(_35829_m->_field_expr->_field_model);
	}
	return jule::Str();
}



inline jule::Str _238ade994_gen_case(jule::Ptr<_2300254bb_Match> _36817_m,jule::Ptr<_2300254bb_Case> _36832_c) {
	jule::Str _3699_end = _22011eedd_case_end_label_ident(static_cast<jule::Uintptr>(_36832_c));
	jule::Str _37013_obj = jule::Str();
	if ((_36832_c->_field_exprs.len() > 0LL) && (!(_36817_m->_method_is_generic_type_match()))) {
		_37013_obj+=jule::Str("if (!(", 6);
		{
			auto &expr = _36832_c->_field_exprs;
			auto it = expr.begin();
			_iter_begin_4694442176:;
			if (it != expr.end()) {
				jule::Int _238ade994_i = it - expr.begin();
				jule::Ptr<_20683ebaa_Data> _238ade994_expr = *it;
				{
					{
						if (!(((!(_36817_m->_field_type_match))))) { goto _case_end_4694446560; }
						_case_begin_4694446560:;
						{
							jule::Str _37721_case_expr = _238ade994_get_case_match_expr(_36817_m);
							if (_36817_m->_field_expr->_method_good_operand(_238ade994_expr)) {
								if (_37721_case_expr.len() != 0LL) {
									_37013_obj+=_37721_case_expr;
									_37013_obj+=jule::Str(" == ", 4);
								}
								_37013_obj+=jule::Str("(", 1);
								_37013_obj+=_221dad153_gen_expr(_238ade994_expr->_field_model);
								_37013_obj+=jule::Str(")", 1);
							} else {
								_37013_obj+=jule::Str("(", 1);
								_37013_obj+=_221dad153_gen_expr(_238ade994_expr->_field_model);
								_37013_obj+=jule::Str(")", 1);
								if (_37721_case_expr.len() != 0LL) {
									_37013_obj+=jule::Str(" == ", 4);
									_37013_obj+=_37721_case_expr;
								}
							}
						}
						goto _match_end_4694444608;
						_case_end_4694446560:;
						_case_begin_4694444784:;
						{
							_37013_obj+=jule::Str("_match_expr", 11);
							_37013_obj+=jule::Str(".type_is<", 9);
							_37013_obj+=_221dad153_gen_expr(_238ade994_expr->_field_model);
							_37013_obj+=jule::Str(">()", 3);
						}
						goto _match_end_4694444608;
						_case_end_4694444784:;
						_match_end_4694444608:;
					}
					if ((_238ade994_i + 1LL) < _36832_c->_field_exprs.len()) {
						_37013_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_4694442176:;
				++it;
				_238ade994_i++;
				goto _iter_begin_4694442176;
			}
			_iter_end_4694442176:;
		}
		_37013_obj+=jule::Str(")) { goto ", 10);
		_37013_obj+=_3699_end;
		_37013_obj+=jule::Str("; }\n", 4);
	}
	if (_36832_c->_field_scope->_field_stmts.len() > 0LL) {
		_37013_obj+=_207182002_indent();
		_37013_obj+=_22011eedd_case_begin_label_ident(static_cast<jule::Uintptr>(_36832_c));
		_37013_obj+=jule::Str(":;\n", 3);
		_37013_obj+=_207182002_indent();
		_37013_obj+=_238ade994_gen_scope(_36832_c->_field_scope);
		_37013_obj+=jule::Str("\n", 1);
	}
	_37013_obj+=_207182002_indent();
	_37013_obj+=jule::Str("goto ", 5);
	_37013_obj+=_22011eedd_match_end_label_ident(static_cast<jule::Uintptr>(_36817_m)) + jule::Str(";", 1);
	_37013_obj+=jule::Str("\n", 1);
	_37013_obj+=_207182002_indent();
	_37013_obj+=_3699_end;
	_37013_obj+=jule::Str(":;", 2);
	return _37013_obj;
}



inline jule::Str _238ade994_gen_match(jule::Ptr<_2300254bb_Match> _43118_m) {
	if ((_43118_m->_field_cases.len() == 0LL) && (_43118_m->_field_default == nullptr)) {
		return jule::Str();
	}
	jule::Bool _4369_generic_type_match = _43118_m->_method_is_generic_type_match();
	if (_4369_generic_type_match && ((_43118_m->_field_default == nullptr) || (_43118_m->_field_default->_field_scope->_field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _44113_obj = jule::Str("{\n", 2);
	_207182002_add_indent();
	_44113_obj+=_207182002_indent();
	if ((!(_4369_generic_type_match)) && (!(_43118_m->_field_expr->_method_is_const()))) {
		if (_43118_m->_field_expr->_field_lvalue && _2388c6e74_OPT_COPY) {
			_44113_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_44113_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_44113_obj+=_221dad153_gen_expr(_43118_m->_field_expr->_field_model);
		_44113_obj+=jule::Str(" };\n", 4);
		_44113_obj+=_207182002_indent();
	}
	if (_43118_m->_field_cases.len() > 0LL) {
		_44113_obj+=_238ade994_gen_case(_43118_m,_43118_m->_field_cases[0LL]);
		{
			auto expr = _43118_m->_field_cases.slice(1LL);
			auto it = expr.begin();
			_iter_begin_4687432672:;
			if (it != expr.end()) {
				jule::Ptr<_2300254bb_Case> _238ade994_c = *it;
				{
					_44113_obj+=jule::Str("\n", 1);
					_44113_obj+=_207182002_indent();
					_44113_obj+=_238ade994_gen_case(_43118_m,_238ade994_c);
				}
				_iter_next_4687432672:;
				++it;
				goto _iter_begin_4687432672;
			}
			_iter_end_4687432672:;
		}
	}
	if (_43118_m->_field_default != nullptr) {
		_44113_obj+=jule::Str("\n", 1);
		_44113_obj+=_238ade994_gen_case(_43118_m,_43118_m->_field_default);
	}
	_44113_obj+=jule::Str("\n", 1);
	_44113_obj+=_207182002_indent();
	_44113_obj+=_22011eedd_match_end_label_ident(static_cast<jule::Uintptr>(_43118_m));
	_44113_obj+=jule::Str(":;", 2);
	_44113_obj+=jule::Str("\n", 1);
	_207182002_done_indent();
	_44113_obj+=_207182002_indent();
	_44113_obj+=jule::Str("}", 1);
	return _44113_obj;
}



inline jule::Str _238ade994_gen_fall_st(jule::Ptr<_2300254bb_FallSt> _48716_f) {
	jule::Str _48813_obj = jule::Str("goto ", 5);
	_48813_obj+=_22011eedd_case_begin_label_ident(_48716_f->_field_dest_case);
	_48813_obj+=jule::Str(";", 1);
	return _48813_obj;
}



inline jule::Str _238ade994_gen_break_st(jule::Ptr<_2300254bb_BreakSt> _49417_b) {
	jule::Str _49513_obj = jule::Str("goto ", 5);
	if (_49417_b->_field_it != 0LL) {
		_49513_obj+=_22011eedd_iter_end_label_ident(_49417_b->_field_it);
	} else {
		_49513_obj+=_22011eedd_match_end_label_ident(_49417_b->_field_mtch);
	}
	_49513_obj+=jule::Str(";", 1);
	return _49513_obj;
}



inline jule::Str _238ade994_gen_ret_vars(jule::Ptr<_2300254bb_RetSt> _50621_r) {
	jule::Str _50713_obj = jule::Str();
	{
		auto &expr = _50621_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_4690352736:;
		if (it != expr.end()) {
			jule::Ptr<_2200a2657_Var> _238ade994_v = *it;
			{
				if (_2220dce43_is_ignore_ident(_238ade994_v->_field_ident)) {
					_50713_obj+=_221dad153_get_init_expr(_238ade994_v->_field_kind->_field_kind);
				} else {
					_50713_obj+=_22011eedd_var_out_ident(_238ade994_v);
				}
				_50713_obj+=jule::Str(",", 1);
			}
			_iter_next_4690352736:;
			++it;
			goto _iter_begin_4690352736;
		}
		_iter_end_4690352736:;
	}
	_50713_obj=_50713_obj.slice(0LL,_50713_obj.len() - 1LL);
	if (_50621_r->_field_vars.len() > 1LL) {
		_50713_obj=jule::Str("return std::make_tuple(", 23) + _50713_obj;
		_50713_obj+=jule::Str(")", 1);
	} else {
		_50713_obj=jule::Str("return ", 7) + _50713_obj;
	}
	_50713_obj+=jule::Str(";", 1);
	return _50713_obj;
}



inline jule::Str _238ade994_gen_ret_expr_tuple(jule::Ptr<_2300254bb_RetSt> _53127_r) {
	jule::Slice<jule::Ptr<_20683ebaa_Data>> _53213_datas = _53127_r->_field_expr.operator jule::Ptr<_21eedb492_TupleExprModel>()->_field_datas;
	jule::Str _53313_obj = jule::Str();
	{
		auto &expr = _53127_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_4690362432:;
		if (it != expr.end()) {
			jule::Int _238ade994_i = it - expr.begin();
			jule::Ptr<_2200a2657_Var> _238ade994_v = *it;
			{
				if (_2220dce43_is_ignore_ident(_238ade994_v->_field_ident)) {
					goto _iter_next_4690362432;
				}
				jule::Any _53917_model = _53213_datas[_238ade994_i]->_field_model;
				if (_53917_model == _238ade994_v) {
					goto _iter_next_4690362432;
				}
				jule::Str _54413_ident = _22011eedd_var_out_ident(_238ade994_v);
				_53313_obj+=_54413_ident;
				_53313_obj+=jule::Str(" = ", 3);
				_53313_obj+=_221dad153_gen_expr(_53917_model);
				_53313_obj+=jule::Str(";\n", 2);
				_53313_obj+=_207182002_indent();
			}
			_iter_next_4690362432:;
			++it;
			_238ade994_i++;
			goto _iter_begin_4690362432;
		}
		_iter_end_4690362432:;
	}
	jule::Str _55213_oobj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _53213_datas;
		auto it = expr.begin();
		_iter_begin_4690371136:;
		if (it != expr.end()) {
			jule::Int _238ade994_i = it - expr.begin();
			jule::Ptr<_20683ebaa_Data> _238ade994_d = *it;
			{
				jule::Ptr<_2200a2657_Var> _55417_v = _53127_r->_field_vars[_238ade994_i];
				if (_2220dce43_is_ignore_ident(_55417_v->_field_ident)) {
					_55213_oobj+=_221dad153_gen_expr(_238ade994_d->_field_model);
				} else {
					_55213_oobj+=_22011eedd_var_out_ident(_55417_v);
				}
				_55213_oobj+=jule::Str(",", 1);
			}
			_iter_next_4690371136:;
			++it;
			_238ade994_i++;
			goto _iter_begin_4690371136;
		}
		_iter_end_4690371136:;
	}
	_55213_oobj=_55213_oobj.slice(0LL,_55213_oobj.len() - 1LL);
	_55213_oobj+=jule::Str(")", 1);
	if (_53127_r->_field_func->_field_decl->_field_exceptional) {
		_53313_obj+=jule::Str("return jule::Exceptional(jule::Any(),", 37);
		_53313_obj+=_55213_oobj;
		_53313_obj+=jule::Str(")", 1);
	} else {
		_53313_obj+=jule::Str("return ", 7);
		_53313_obj+=_55213_oobj;
	}
	_53313_obj+=jule::Str(";", 1);
	return _53313_obj;
}



inline jule::Str _238ade994_gen_ret_expr(jule::Ptr<_2300254bb_RetSt> _57921_r) {
	if (_57921_r->_field_vars.len() > 1LL) {
		return _238ade994_gen_ret_expr_tuple(_57921_r);
	}
	if (_57921_r->_field_vars.len() > 0LL) {
		jule::Ptr<_2200a2657_Var> _58617_v = _57921_r->_field_vars[0LL];
		if ((!(_2220dce43_is_ignore_ident(_58617_v->_field_ident))) && (_57921_r->_field_expr != _58617_v)) {
			jule::Str _58817_ident = _22011eedd_var_out_ident(_58617_v);
			jule::Str _58921_obj = _58817_ident;
			_58921_obj+=jule::Str(" = ", 3);
			_58921_obj+=_221dad153_gen_expr(_57921_r->_field_expr);
			_58921_obj+=jule::Str(";\n", 2);
			_58921_obj+=_207182002_indent();
			if (_57921_r->_field_func->_field_decl->_field_exceptional) {
				_58921_obj+=jule::Str("return jule::Exceptional(jule::Any(),", 37);
				_58921_obj+=_58817_ident;
				_58921_obj+=jule::Str(")", 1);
			} else {
				_58921_obj+=jule::Str("return ", 7);
				_58921_obj+=_58817_ident;
			}
			_58921_obj+=jule::Str(";", 1);
			return _58921_obj;
		}
	}
	if (_57921_r->_field_func->_field_decl->_field_exceptional) {
		jule::Str _60817_obj = jule::Str("return jule::Exceptional(jule::Any(),", 37);
		_60817_obj+=_221dad153_gen_expr(_57921_r->_field_expr);
		_60817_obj+=jule::Str(")", 1);
		_60817_obj+=jule::Str(";", 1);
		return _60817_obj;
	}
	jule::Str _61513_obj = jule::Str("return ", 7);
	_61513_obj+=_221dad153_gen_expr(_57921_r->_field_expr);
	_61513_obj+=jule::Str(";", 1);
	return _61513_obj;
}



inline jule::Str _238ade994_gen_ret_st(jule::Ptr<_2300254bb_RetSt> _62119_r) {
	if ((_62119_r->_field_expr == nullptr) && (_62119_r->_field_vars.len() == 0LL)) {
		if (_62119_r->_field_func->_field_decl->_field_exceptional) {
			return jule::Str("return jule::VoidExceptional();", 31);
		}
		return jule::Str("return;", 7);
	}
	if (_62119_r->_field_expr == nullptr) {
		return _238ade994_gen_ret_vars(_62119_r);
	}
	return _238ade994_gen_ret_expr(_62119_r);
}



inline jule::Str _238ade994_gen_data_expr(jule::Ptr<_20683ebaa_Data> _65422_d) {
	return _221dad153_gen_expr(_65422_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _238ade994_gen_scope_var(jule::Ptr<_2200a2657_Var> _65822_v) {
	if (_65822_v->_field_constant) {
		return jule::Str();
	}
	return _207182002_gen_var(_65822_v);
}



inline jule::Str _238ade994_gen_st(jule::Any _66615_st) {
	{
		auto &_match_expr{ _66615_st };
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Scope>>())) { goto _case_end_4690412992; }
		_case_begin_4690412992:;
		{
			return _238ade994_gen_scope(_66615_st.operator jule::Ptr<_2300254bb_Scope>());
		}
		goto _match_end_4690410144;
		_case_end_4690412992:;
		if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4690413088; }
		_case_begin_4690413088:;
		{
			return _238ade994_gen_scope_var(_66615_st.operator jule::Ptr<_2200a2657_Var>());
		}
		goto _match_end_4690410144;
		_case_end_4690413088:;
		if (!(_match_expr.type_is<jule::Ptr<_20683ebaa_Data>>())) { goto _case_end_4690412624; }
		_case_begin_4690412624:;
		{
			return _238ade994_gen_data_expr(_66615_st.operator jule::Ptr<_20683ebaa_Data>());
		}
		goto _match_end_4690410144;
		_case_end_4690412624:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Conditional>>())) { goto _case_end_4690412720; }
		_case_begin_4690412720:;
		{
			return _238ade994_gen_conditional(_66615_st.operator jule::Ptr<_2300254bb_Conditional>());
		}
		goto _match_end_4690410144;
		_case_end_4690412720:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_InfIter>>())) { goto _case_end_4690412832; }
		_case_begin_4690412832:;
		{
			return _238ade994_gen_inf_iter(_66615_st.operator jule::Ptr<_2300254bb_InfIter>());
		}
		goto _match_end_4690410144;
		_case_end_4690412832:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_WhileIter>>())) { goto _case_end_4690412064; }
		_case_begin_4690412064:;
		{
			return _238ade994_gen_while_iter(_66615_st.operator jule::Ptr<_2300254bb_WhileIter>());
		}
		goto _match_end_4690410144;
		_case_end_4690412064:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_RangeIter>>())) { goto _case_end_4690412160; }
		_case_begin_4690412160:;
		{
			return _238ade994_gen_range_iter(_66615_st.operator jule::Ptr<_2300254bb_RangeIter>());
		}
		goto _match_end_4690410144;
		_case_end_4690412160:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_ContSt>>())) { goto _case_end_4690412256; }
		_case_begin_4690412256:;
		{
			return _238ade994_gen_cont(_66615_st.operator jule::Ptr<_2300254bb_ContSt>());
		}
		goto _match_end_4690410144;
		_case_end_4690412256:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Label>>())) { goto _case_end_4690413536; }
		_case_begin_4690413536:;
		{
			return _238ade994_gen_label(_66615_st.operator jule::Ptr<_2300254bb_Label>());
		}
		goto _match_end_4690410144;
		_case_end_4690413536:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_GotoSt>>())) { goto _case_end_4690413632; }
		_case_begin_4690413632:;
		{
			return _238ade994_gen_goto(_66615_st.operator jule::Ptr<_2300254bb_GotoSt>());
		}
		goto _match_end_4690410144;
		_case_end_4690413632:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Postfix>>())) { goto _case_end_4690413728; }
		_case_begin_4690413728:;
		{
			return _238ade994_gen_postfix(_66615_st.operator jule::Ptr<_2300254bb_Postfix>());
		}
		goto _match_end_4690410144;
		_case_end_4690413728:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Assign>>())) { goto _case_end_4690413824; }
		_case_begin_4690413824:;
		{
			return _238ade994_gen_assign(_66615_st.operator jule::Ptr<_2300254bb_Assign>());
		}
		goto _match_end_4690410144;
		_case_end_4690413824:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_MultiAssign>>())) { goto _case_end_4690413920; }
		_case_begin_4690413920:;
		{
			return _238ade994_gen_multi_assign(_66615_st.operator jule::Ptr<_2300254bb_MultiAssign>());
		}
		goto _match_end_4690410144;
		_case_end_4690413920:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_Match>>())) { goto _case_end_4690414016; }
		_case_begin_4690414016:;
		{
			return _238ade994_gen_match(_66615_st.operator jule::Ptr<_2300254bb_Match>());
		}
		goto _match_end_4690410144;
		_case_end_4690414016:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_FallSt>>())) { goto _case_end_4690414128; }
		_case_begin_4690414128:;
		{
			return _238ade994_gen_fall_st(_66615_st.operator jule::Ptr<_2300254bb_FallSt>());
		}
		goto _match_end_4690410144;
		_case_end_4690414128:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_BreakSt>>())) { goto _case_end_4690414240; }
		_case_begin_4690414240:;
		{
			return _238ade994_gen_break_st(_66615_st.operator jule::Ptr<_2300254bb_BreakSt>());
		}
		goto _match_end_4690410144;
		_case_end_4690414240:;
		if (!(_match_expr.type_is<jule::Ptr<_2300254bb_RetSt>>())) { goto _case_end_4690414352; }
		_case_begin_4690414352:;
		{
			return _238ade994_gen_ret_st(_66615_st.operator jule::Ptr<_2300254bb_RetSt>());
		}
		goto _match_end_4690410144;
		_case_end_4690414352:;
		_case_begin_4690411248:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_4690410144;
		_case_end_4690411248:;
		_match_end_4690410144:;
	}
}



inline jule::Str _238ade994_gen_scope(jule::Ptr<_2300254bb_Scope> _69018_s) {
	jule::Str _69113_obj = jule::Str("{\n", 2);
	_207182002_add_indent();
	{
		auto &expr = _69018_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4690442768:;
		if (it != expr.end()) {
			jule::Any _238ade994_st = *it;
			{
				_69113_obj+=_207182002_indent();
				_69113_obj+=_238ade994_gen_st(_238ade994_st);
				_69113_obj+=jule::Str("\n", 1);
			}
			_iter_next_4690442768:;
			++it;
			goto _iter_begin_4690442768;
		}
		_iter_end_4690442768:;
	}
	_207182002_done_indent();
	_69113_obj+=_207182002_indent();
	_69113_obj+=jule::Str("}", 1);
	if (_69018_s->_field_deferred) {
		_69113_obj=(jule::Str("__JULE_DEFER(", 13) + _69113_obj) + jule::Str(");", 2);
	}
	return _69113_obj;
}



inline jule::Str _238ade994_gen_fn_scope(jule::Ptr<_222edb48e_FnIns> _71221_f) {
	jule::Str _71313_obj = (((_71221_f->_field_owner != nullptr)) ? (_238ade994_gen_method_scope(_71221_f)) : (_238ade994_gen_scope(_71221_f->_field_scope)));
	if (_71221_f->_field_decl->_field_exceptional && _71221_f->_field_decl->_method_is_void()) {
		_71313_obj=_71313_obj.slice(0LL,_71313_obj.len() - 2LL) + jule::Str(" return jule::VoidExceptional(); }", 34);
	}
	return _71313_obj;
}



inline jule::Str _238ade994_gen_method_scope(jule::Ptr<_222edb48e_FnIns> _72525_f) {
	return _238ade994_gen_scope(_72525_f->_field_scope);
}



inline jule::Str _221dad153_concat_all_parts(jule::Slice<_2220dce43_Token> _7821_parts) {
	jule::Str _7913_s = jule::Str();
	{
		auto &expr = _7821_parts;
		auto it = expr.begin();
		_iter_begin_4690455280:;
		if (it != expr.end()) {
			_2220dce43_Token &_221dad153_part = *it;
			{
				_7913_s+=_221dad153_part._field_kind;
			}
			_iter_next_4690455280:;
			++it;
			goto _iter_begin_4690455280;
		}
		_iter_end_4690455280:;
	}
	return _7913_s;
}



inline jule::Str _221dad153_get_accessor(jule::Ptr<_2300b54e5_TypeKind>& _8622_t) {
	if ((_8622_t->_method_sptr() != nullptr) || (_8622_t->_method_ptr() != nullptr)) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _221dad153_decompose_common_esq(jule::U8 _9325_b) {
	{
		auto &_match_expr{ _9325_b };
		if (!(_match_expr == ('\\'))) { goto _case_end_4690462048; }
		_case_begin_4690462048:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_4690459984;
		_case_end_4690462048:;
		if (!(_match_expr == ('\''))) { goto _case_end_4690461616; }
		_case_begin_4690461616:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_4690459984;
		_case_end_4690461616:;
		if (!(_match_expr == ('\"'))) { goto _case_end_4690461248; }
		_case_begin_4690461248:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_4690459984;
		_case_end_4690461248:;
		if (!(_match_expr == ('\a'))) { goto _case_end_4690461344; }
		_case_begin_4690461344:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_4690459984;
		_case_end_4690461344:;
		if (!(_match_expr == ('\b'))) { goto _case_end_4690461440; }
		_case_begin_4690461440:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_4690459984;
		_case_end_4690461440:;
		if (!(_match_expr == ('\f'))) { goto _case_end_4690460752; }
		_case_begin_4690460752:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_4690459984;
		_case_end_4690460752:;
		if (!(_match_expr == ('\n'))) { goto _case_end_4690460848; }
		_case_begin_4690460848:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_4690459984;
		_case_end_4690460848:;
		if (!(_match_expr == ('\r'))) { goto _case_end_4690460944; }
		_case_begin_4690460944:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_4690459984;
		_case_end_4690460944:;
		if (!(_match_expr == ('\t'))) { goto _case_end_4690461040; }
		_case_begin_4690461040:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_4690459984;
		_case_end_4690461040:;
		if (!(_match_expr == ('\v'))) { goto _case_end_4690462160; }
		_case_begin_4690462160:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_4690459984;
		_case_end_4690462160:;
		_case_begin_4690458528:;
		{
			return jule::Str();
		}
		goto _match_end_4690459984;
		_case_end_4690458528:;
		_match_end_4690459984:;
	}
}



inline jule::Str _221dad153_sbtoa(jule::U8 _10910_b) {
	if (_10910_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_10910_b <= 127LL) {
		jule::Str _11513_seq = _221dad153_decompose_common_esq(_10910_b);
		if (_11513_seq != jule::Str()) {
			return _11513_seq;
		}
		if ((32LL <= _10910_b) && (_10910_b <= 126LL)) {
			return static_cast<jule::Str>(_10910_b);
		}
	}
	jule::Str _1259_seq = _2397e4467_fmt_uint(static_cast<jule::U64>(_10910_b),8LL);
	if (_1259_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1259_seq;
	}
	return jule::Str("\\", 1) + _1259_seq;
}



inline jule::Str _221dad153_get_cstr_model(jule::Slice<jule::U8> _13219_bytes) {
	jule::Str _13313_lit = jule::Str();
	{
		auto &expr = _13219_bytes;
		auto it = expr.begin();
		_iter_begin_4690478704:;
		if (it != expr.end()) {
			jule::U8 &_221dad153_b = *it;
			{
				_13313_lit+=_221dad153_sbtoa(_221dad153_b);
			}
			_iter_next_4690478704:;
			++it;
			goto _iter_begin_4690478704;
		}
		_iter_end_4690478704:;
	}
	return (jule::Str("\"", 1) + _13313_lit) + jule::Str("\"", 1);
}



inline jule::Str _221dad153_get_str_model(jule::Ptr<_206e210e3_Const>& _14119_c) {
	jule::Str _1429_content = _14119_c->_method_read_str();
	if (_1429_content.len() == 0LL) {
		return _22011eedd_as_jt(jule::Str("str", 3)) + jule::Str("()", 2);
	}
	jule::Slice<jule::U8> _1479_bytes = static_cast<jule::Slice<jule::U8>>(_1429_content);
	jule::Str _1489_len = _2397e4467_fmt_int(static_cast<jule::I64>(_1479_bytes.len()),10LL);
	jule::Str _1499_lit = _221dad153_get_cstr_model(_1479_bytes);
	return ((((_22011eedd_as_jt(jule::Str("str", 3)) + jule::Str("(", 1)) + _1499_lit) + jule::Str(", ", 2)) + _1489_len) + jule::Str(")", 1);
}



inline jule::Str _221dad153_get_bool_model(jule::Ptr<_206e210e3_Const>& _15320_c) {
	if (_15320_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _221dad153_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _221dad153_gen_float_special_cases(jule::F64& _16229_x) {
	{
		if (!((_221a1d7b9_is_nan(_16229_x)))) { goto _case_end_4690493664; }
		_case_begin_4690493664:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_4690492048;
		_case_end_4690493664:;
		if (!((_221a1d7b9_is_inf(_16229_x,1LL)))) { goto _case_end_4690493856; }
		_case_begin_4690493856:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_4690492048;
		_case_end_4690493856:;
		if (!((_221a1d7b9_is_inf(_16229_x,-1LL)))) { goto _case_end_4690493952; }
		_case_begin_4690493952:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_4690492048;
		_case_end_4690493952:;
		_case_begin_4690492224:;
		{
			return jule::Str();
		}
		goto _match_end_4690492048;
		_case_end_4690492224:;
		_match_end_4690492048:;
	}
}



inline jule::Str _221dad153_ftoa(jule::F64 _1719_f,jule::Int _17117_bitsize) {
	if (_17117_bitsize != 32LL) {
		if (_1719_f == static_cast<jule::F64>(static_cast<jule::I64>(_1719_f))) {
			return _221dad153_i64toa(static_cast<jule::I64>(_1719_f));
		}
		if (_1719_f == static_cast<jule::F64>(static_cast<jule::U64>(_1719_f))) {
			return _221dad153_u64toa(static_cast<jule::U64>(_1719_f));
		}
	}
	jule::Str _18113_m = _2389d34d1_fmt_float(_1719_f,'f',-1LL,_17117_bitsize);
	if (_18113_m.find(jule::Str(".", 1)) == -1LL) {
		_18113_m+=jule::Str(".0", 2);
	}
	return _18113_m;
}



inline jule::Str _221dad153_get_f32_model(jule::Ptr<_206e210e3_Const>& _18819_c) {
	jule::F64 _1899_x = _18819_c->_method_as_f64();
	jule::Str _1929_f = _221dad153_gen_float_special_cases(_1899_x);
	if (_1929_f != jule::Str()) {
		return _1929_f;
	}
	{
		if (!((_1899_x == 340282346638528860000000000000000000000.0))) { goto _case_end_4690508672; }
		_case_begin_4690508672:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_4690508976;
		_case_end_4690508672:;
		if (!((_1899_x == -340282346638528860000000000000000000000.0))) { goto _case_end_4690508768; }
		_case_begin_4690508768:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_4690508976;
		_case_end_4690508768:;
		_match_end_4690508976:;
	}
	return _221dad153_ftoa(_1899_x,32LL) + jule::Str("f", 1);
}



inline jule::Str _221dad153_get_f64_model(jule::Ptr<_206e210e3_Const>& _20519_c) {
	jule::F64 _2069_x = _20519_c->_method_as_f64();
	jule::Str _2099_f = _221dad153_gen_float_special_cases(_2069_x);
	if (_2099_f != jule::Str()) {
		return _2099_f;
	}
	{
		if (!((_2069_x == jule::MAX_F64))) { goto _case_end_4690515248; }
		_case_begin_4690515248:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_4690515552;
		_case_end_4690515248:;
		if (!((_2069_x == jule::MIN_F64))) { goto _case_end_4690515344; }
		_case_begin_4690515344:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_4690515552;
		_case_end_4690515344:;
		_match_end_4690515552:;
	}
	return _221dad153_ftoa(_2069_x,64LL);
}



inline jule::Str _221dad153_get_float_model(jule::Ptr<_20683ebaa_Data>& _22225_d) {
	{
		if (!((_22225_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_4690521264; }
		_case_begin_4690521264:;
		{
			return _221dad153_get_f32_model(_22225_d->_field_constant);
		}
		goto _match_end_4690518768;
		_case_end_4690521264:;
		_case_begin_4690518928:;
		{
			return _221dad153_get_f64_model(_22225_d->_field_constant);
		}
		goto _match_end_4690518768;
		_case_end_4690518928:;
		_match_end_4690518768:;
	}
}



inline jule::Str _221dad153_i64toa(jule::I64 _22911_x) {
	{
		if (!((_22911_x == jule::MAX_I64))) { goto _case_end_4690522272; }
		_case_begin_4690522272:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_4690522864;
		_case_end_4690522272:;
		if (!((_22911_x == jule::MIN_I64))) { goto _case_end_4690522368; }
		_case_begin_4690522368:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_4690522864;
		_case_end_4690522368:;
		_match_end_4690522864:;
	}
	jule::Str _2359_fmt = _2397e4467_fmt_int(_22911_x,10LL);
	if (_2389027b8_is_64bit(jule::Str("arm64", 5))) {
		return _2359_fmt + jule::Str("LL", 2);
	}
	return _2359_fmt + jule::Str("L", 1);
}



inline jule::Str _221dad153_get_i64_model(jule::Ptr<_206e210e3_Const>& _24219_c) {
	return _221dad153_i64toa(static_cast<jule::I64>(_24219_c->_method_read_i64()));
}



inline jule::Str _221dad153_u64toa(jule::U64 _24611_x) {
	{
		if (!((_24611_x == jule::MAX_U64))) { goto _case_end_4690527440; }
		_case_begin_4690527440:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_4690529328;
		_case_end_4690527440:;
		_match_end_4690529328:;
	}
	jule::Str _2529_fmt = _2397e4467_fmt_uint(_24611_x,10LL);
	if (_2389027b8_is_64bit(jule::Str("arm64", 5))) {
		return _2529_fmt + jule::Str("LLU", 3);
	}
	return _2529_fmt + jule::Str("LU", 2);
}



inline jule::Str _221dad153_get_u64_model(jule::Ptr<_206e210e3_Const> _25918_c) {
	return _221dad153_u64toa(static_cast<jule::U64>(_25918_c->_method_read_u64()));
}



inline jule::Str _221dad153_gen_const_expr(jule::Ptr<_20683ebaa_Data> _26323_d) {
	{
		if (!((_26323_d->_field_constant->_method_is_str()))) { goto _case_end_4690538912; }
		_case_begin_4690538912:;
		{
			return _221dad153_get_str_model(_26323_d->_field_constant);
		}
		goto _match_end_4690533680;
		_case_end_4690538912:;
		if (!((_26323_d->_field_constant->_method_is_bool()))) { goto _case_end_4690539008; }
		_case_begin_4690539008:;
		{
			return _221dad153_get_bool_model(_26323_d->_field_constant);
		}
		goto _match_end_4690533680;
		_case_end_4690539008:;
		if (!((_26323_d->_field_constant->_method_is_f64()))) { goto _case_end_4690539104; }
		_case_begin_4690539104:;
		{
			return _221dad153_get_float_model(_26323_d);
		}
		goto _match_end_4690533680;
		_case_end_4690539104:;
		if (!((_26323_d->_field_constant->_method_is_i64()))) { goto _case_end_4690538288; }
		_case_begin_4690538288:;
		{
			return _221dad153_get_i64_model(_26323_d->_field_constant);
		}
		goto _match_end_4690533680;
		_case_end_4690538288:;
		if (!((_26323_d->_field_constant->_method_is_u64()))) { goto _case_end_4690538384; }
		_case_begin_4690538384:;
		{
			return _221dad153_get_u64_model(_26323_d->_field_constant);
		}
		goto _match_end_4690533680;
		_case_end_4690538384:;
		if (!((_26323_d->_field_constant->_method_is_nil()))) { goto _case_end_4690538480; }
		_case_begin_4690538480:;
		{
			return _221dad153_get_nil_model();
		}
		goto _match_end_4690533680;
		_case_end_4690538480:;
		_case_begin_4690535408:;
		{
			return jule::Str();
		}
		goto _match_end_4690533680;
		_case_end_4690535408:;
		_match_end_4690533680:;
	}
}



inline jule::Str _221dad153_gen_const_expr_model(jule::Ptr<_206e210e3_Const> _27525_m) {
	{
		if (!((_27525_m->_method_is_str()))) { goto _case_end_4690550880; }
		_case_begin_4690550880:;
		{
			return _221dad153_get_str_model(_27525_m);
		}
		goto _match_end_4690545280;
		_case_end_4690550880:;
		if (!((_27525_m->_method_is_bool()))) { goto _case_end_4690550976; }
		_case_begin_4690550976:;
		{
			return _221dad153_get_bool_model(_27525_m);
		}
		goto _match_end_4690545280;
		_case_end_4690550976:;
		if (!((_27525_m->_method_is_f64()))) { goto _case_end_4690551072; }
		_case_begin_4690551072:;
		{
			return _221dad153_get_f64_model(_27525_m);
		}
		goto _match_end_4690545280;
		_case_end_4690551072:;
		if (!((_27525_m->_method_is_i64()))) { goto _case_end_4690550256; }
		_case_begin_4690550256:;
		{
			return _221dad153_get_i64_model(_27525_m);
		}
		goto _match_end_4690545280;
		_case_end_4690550256:;
		if (!((_27525_m->_method_is_u64()))) { goto _case_end_4690550352; }
		_case_begin_4690550352:;
		{
			return _221dad153_get_u64_model(_27525_m);
		}
		goto _match_end_4690545280;
		_case_end_4690550352:;
		if (!((_27525_m->_method_is_nil()))) { goto _case_end_4690550448; }
		_case_begin_4690550448:;
		{
			return _221dad153_get_nil_model();
		}
		goto _match_end_4690545280;
		_case_end_4690550448:;
		_case_begin_4690548576:;
		{
			return jule::Str();
		}
		goto _match_end_4690545280;
		_case_end_4690548576:;
		_match_end_4690545280:;
	}
}



inline jule::Str _221dad153_gen_div_by_zero_binop_expr_model(jule::Str _28737_op,jule::Any _28750_l,jule::Any _28768_r) {
	jule::Str _28813_op_func = jule::Str();
	{
		auto &_match_expr{ _28737_op };
		if (!(_match_expr == (jule::Str("/", 1)))) { goto _case_end_4690559568; }
		_case_begin_4690559568:;
		{
			_28813_op_func=jule::Str("div", 3);
		}
		goto _match_end_4690560416;
		_case_end_4690559568:;
		if (!(_match_expr == (jule::Str("%", 1)))) { goto _case_end_4690560496; }
		_case_begin_4690560496:;
		{
			_28813_op_func=jule::Str("mod", 3);
		}
		goto _match_end_4690560416;
		_case_end_4690560496:;
		_match_end_4690560416:;
	}
	if (_2388c6e74_OPT_MATH) {
		{
			auto &_match_expr{ _28768_r };
			if (!(_match_expr.type_is<jule::Ptr<_206e210e3_Const>>())) { goto _case_end_4690562384; }
			_case_begin_4690562384:;
			{
				_28813_op_func=jule::Str("unsafe_", 7) + _28813_op_func;
			}
			goto _match_end_4690563408;
			_case_end_4690562384:;
			_match_end_4690563408:;
		}
	}
	jule::Str _30113_obj = jule::Str("jule::", 6);
	_30113_obj+=_28813_op_func;
	_30113_obj+=jule::Str("(", 1);
	_30113_obj+=_221dad153_gen_expr(_28750_l);
	_30113_obj+=jule::Str(",", 1);
	_30113_obj+=_221dad153_gen_expr(_28768_r);
	_30113_obj+=jule::Str(")", 1);
	return _30113_obj;
}



inline jule::Str _221dad153_gen_binop_expr_model(jule::Ptr<_21eedb492_BinopExprModel> _31129_m) {
	{
		auto &_match_expr{ _31129_m->_field_op };
		if (!(_match_expr == (jule::Str("/", 1)) || _match_expr == (jule::Str("%", 1)))) { goto _case_end_4690566784; }
		_case_begin_4690566784:;
		{
			return _221dad153_gen_div_by_zero_binop_expr_model(_31129_m->_field_op,_31129_m->_field_left,_31129_m->_field_right);
		}
		goto _match_end_4690567680;
		_case_end_4690566784:;
		_match_end_4690567680:;
	}
	jule::Str _31813_obj = jule::Str("(", 1);
	_31813_obj+=_221dad153_gen_expr_model(_31129_m->_field_left);
	_31813_obj+=jule::Str(" ", 1);
	_31813_obj+=_31129_m->_field_op;
	_31813_obj+=jule::Str(" ", 1);
	_31813_obj+=_221dad153_gen_expr_model(_31129_m->_field_right);
	_31813_obj+=jule::Str(")", 1);
	return _31813_obj;
}



inline jule::Str _221dad153_gen_var_expr_model(jule::Ptr<_2200a2657_Var> _32827_m) {
	if (_32827_m->_field_cpp_linked) {
		jule::Ptr<_221d8b043_Directive> _33013_d = _2071abd62_find_directive(_32827_m->_field_directives,jule::Str("namespace", 9));
		if (_33013_d != nullptr) {
			jule::Str _33221_obj = _221dad153_concat_all_parts(_33013_d->_field_args);
			_33221_obj+=jule::Str("::", 2);
			_33221_obj+=_22011eedd_var_out_ident(_32827_m);
			return _33221_obj;
		}
	}
	return _22011eedd_var_out_ident(_32827_m);
}



inline jule::Str _221dad153_gen_struct_expr_model(jule::Ptr<_2398d04dc_Struct> _34126_m) {
	return _2071abd62_gen_struct_kind(_34126_m);
}



inline jule::Str _221dad153_gen_struct_ins_expr_model(jule::Ptr<_2398d04dc_StructIns> _34534_m) {
	return _2071abd62_gen_struct_kind_ins(_34534_m);
}



inline jule::Str _221dad153_gen_unary_expr_model(jule::Ptr<_21eedb492_UnaryExprModel> _34929_m) {
	if (_2388c6e74_OPT_PTR && (_34929_m->_field_op == jule::Str("*", 1))) {
		{
			auto &_match_expr{ _34929_m->_field_expr };
			if (!(_match_expr.type_is<jule::Ptr<_21eedb492_UnaryExprModel>>())) { goto _case_end_4690579904; }
			_case_begin_4690579904:;
			{
				jule::Ptr<_21eedb492_UnaryExprModel> _35321_um = _34929_m->_field_expr.operator jule::Ptr<_21eedb492_UnaryExprModel>();
				if (_35321_um->_field_op == jule::Str("&", 1)) {
					return _221dad153_gen_expr_model(_35321_um->_field_expr);
				}
			}
			goto _match_end_4690583104;
			_case_end_4690579904:;
			_match_end_4690583104:;
		}
	}
	{
		auto &_match_expr{ _34929_m->_field_op };
		if (!(_match_expr == (jule::Str("^", 1)))) { goto _case_end_4679047888; }
		_case_begin_4679047888:;
		{
			jule::Str _36217_obj = jule::Str("(~(", 3);
			_36217_obj+=_221dad153_gen_expr(_34929_m->_field_expr);
			_36217_obj+=jule::Str("))", 2);
			return _36217_obj;
		}
		goto _match_end_4679047216;
		_case_end_4679047888:;
		_case_begin_4679046768:;
		{
			jule::Str _36817_obj = jule::Str("(", 1);
			_36817_obj+=_34929_m->_field_op;
			_36817_obj+=jule::Str("(", 1);
			_36817_obj+=_221dad153_gen_expr(_34929_m->_field_expr);
			_36817_obj+=jule::Str("))", 2);
			return _36817_obj;
		}
		goto _match_end_4679047216;
		_case_end_4679046768:;
		_match_end_4679047216:;
	}
}



inline jule::Str _221dad153_gen_cpp_struct_lit_expr_model(jule::Ptr<_21eedb492_StructLitExprModel> _37738_m) {
	jule::Str _37813_obj = jule::Str("(", 1) + _2071abd62_gen_struct_kind_ins(_37738_m->_field_strct);
	_37813_obj+=jule::Str("){", 2);
	if (_37738_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &expr = _37738_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_4679057952:;
			if (it != expr.end()) {
				jule::Ptr<_2398d04dc_FieldIns> _221dad153_f = *it;
				{
					if (_37738_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto &expr = _37738_m->_field_args;
							auto it = expr.begin();
							_iter_begin_4679060672:;
							if (it != expr.end()) {
								jule::Ptr<_21eedb492_StructArgExprModel> _221dad153_arg = *it;
								{
									if (_221dad153_arg->_field_field == _221dad153_f) {
										_37813_obj+=jule::Str(".", 1);
										_37813_obj+=_22011eedd_field_out_ident(_221dad153_f->_field_decl);
										_37813_obj+=jule::Str("=", 1);
										_37813_obj+=_221dad153_gen_expr(_221dad153_arg->_field_expr);
										_37813_obj+=jule::Str(",", 1);
										goto _iter_next_4679057952;
									}
								}
								_iter_next_4679060672:;
								++it;
								goto _iter_begin_4679060672;
							}
							_iter_end_4679060672:;
						}
						goto _iter_next_4679057952;
					}
					_37813_obj+=_22011eedd_field_out_ident(_221dad153_f->_field_decl);
					_37813_obj+=jule::Str(": ", 2);
					{
						auto &expr = _37738_m->_field_args;
						auto it = expr.begin();
						_iter_begin_4679065856:;
						if (it != expr.end()) {
							jule::Ptr<_21eedb492_StructArgExprModel> _221dad153_arg = *it;
							{
								if (_221dad153_arg->_field_field == _221dad153_f) {
									_37813_obj+=_221dad153_gen_expr(_221dad153_arg->_field_expr);
									_37813_obj+=jule::Str(",", 1);
									goto _iter_next_4679057952;
								}
							}
							_iter_next_4679065856:;
							++it;
							goto _iter_begin_4679065856;
						}
						_iter_end_4679065856:;
					}
					_37813_obj+=_221dad153_get_init_expr(_221dad153_f->_field_kind);
					_37813_obj+=jule::Str(",", 1);
				}
				_iter_next_4679057952:;
				++it;
				goto _iter_begin_4679057952;
			}
			_iter_end_4679057952:;
		}
		_37813_obj=_37813_obj.slice(0LL,_37813_obj.len() - 1LL);
	}
	_37813_obj+=jule::Str("}", 1);
	return _37813_obj;
}



inline jule::Str _221dad153_gen_struct_lit_expr_model(jule::Ptr<_21eedb492_StructLitExprModel> _41534_m) {
	if (_41534_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _221dad153_gen_cpp_struct_lit_expr_model(_41534_m);
	}
	jule::Str _42013_obj = _22011eedd_struct_ins_out_ident(_41534_m->_field_strct);
	_42013_obj+=jule::Str("(", 1);
	if (_41534_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &expr = _41534_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_4679075824:;
			if (it != expr.end()) {
				jule::Ptr<_2398d04dc_FieldIns> _221dad153_f = *it;
				{
					{
						auto &expr = _41534_m->_field_args;
						auto it = expr.begin();
						_iter_begin_4679077616:;
						if (it != expr.end()) {
							jule::Ptr<_21eedb492_StructArgExprModel> _221dad153_arg = *it;
							{
								if (_221dad153_arg->_field_field == _221dad153_f) {
									_42013_obj+=_221dad153_gen_expr(_221dad153_arg->_field_expr);
									_42013_obj+=jule::Str(",", 1);
									goto _iter_next_4679075824;
								}
							}
							_iter_next_4679077616:;
							++it;
							goto _iter_begin_4679077616;
						}
						_iter_end_4679077616:;
					}
					_42013_obj+=_221dad153_get_init_expr(_221dad153_f->_field_kind);
					_42013_obj+=jule::Str(",", 1);
				}
				_iter_next_4679075824:;
				++it;
				goto _iter_begin_4679075824;
			}
			_iter_end_4679075824:;
		}
		_42013_obj=_42013_obj.slice(0LL,_42013_obj.len() - 1LL);
	}
	_42013_obj+=jule::Str(")", 1);
	return _42013_obj;
}



inline jule::Str _221dad153_gen_alloc_struct_lit_expr_model(jule::Ptr<_21eedb492_AllocStructLitExprModel> _44140_m) {
	jule::Str _44213_obj = jule::Str("jule::new_struct", 16);
	if (_44140_m->_field_lit->_field_strct->_field_decl->_method_has_ref_accessible()) {
		_44213_obj+=jule::Str("_ptr", 4);
	}
	_44213_obj+=jule::Str("<", 1);
	_44213_obj+=_22011eedd_struct_ins_out_ident(_44140_m->_field_lit->_field_strct);
	_44213_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_44213_obj+=_221dad153_gen_struct_lit_expr_model(_44140_m->_field_lit);
	_44213_obj+=jule::Str(")", 1);
	return _44213_obj;
}



inline jule::Str _221dad153_gen_casting_expr_model(jule::Ptr<_21eedb492_CastingExprModel> _45431_m) {
	jule::Str _45513_obj = jule::Str();
	{
		if (!(((_45431_m->_field_kind->_method_prim() != nullptr) && _45431_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4679091536; }
		_case_begin_4679091536:;
		{
			_45513_obj+=_2071abd62_gen_type_kind(_45431_m->_field_kind);
			_45513_obj+=jule::Str("(", 1);
			_45513_obj+=_221dad153_gen_expr_model(_45431_m->_field_expr);
			_45513_obj+=jule::Str(")", 1);
		}
		goto _match_end_4679090624;
		_case_end_4679091536:;
		if (!((_45431_m->_field_expr_kind->_method_ptr() != nullptr) || (_45431_m->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4679093888; }
		_case_begin_4679093888:;
		{
			_45513_obj+=jule::Str("((", 2);
			_45513_obj+=_2071abd62_gen_type_kind(_45431_m->_field_kind);
			_45513_obj+=jule::Str(")(", 2);
			_45513_obj+=_221dad153_gen_expr(_45431_m->_field_expr);
			_45513_obj+=jule::Str("))", 2);
		}
		goto _match_end_4679090624;
		_case_end_4679093888:;
		if (!((_45431_m->_field_expr_kind->_method_trt() != nullptr) || ((_45431_m->_field_expr_kind->_method_prim() != nullptr) && _45431_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_4679094288; }
		_case_begin_4679094288:;
		{
			_45513_obj+=_221dad153_gen_expr_model(_45431_m->_field_expr);
			_45513_obj+=_221dad153_get_accessor(_45431_m->_field_expr_kind);
			_45513_obj+=jule::Str("operator ", 9);
			_45513_obj+=_2071abd62_gen_type_kind(_45431_m->_field_kind);
			_45513_obj+=jule::Str("()", 2);
		}
		goto _match_end_4679090624;
		_case_end_4679094288:;
		_case_begin_4679090736:;
		{
			_45513_obj+=jule::Str("static_cast<", 12);
			_45513_obj+=_2071abd62_gen_type_kind(_45431_m->_field_kind);
			_45513_obj+=jule::Str(">(", 2);
			_45513_obj+=_221dad153_gen_expr(_45431_m->_field_expr);
			_45513_obj+=jule::Str(")", 1);
		}
		goto _match_end_4679090624;
		_case_end_4679090736:;
		_match_end_4679090624:;
	}
	return _45513_obj;
}



inline jule::Str _221dad153_gen_arg_expr_models(jule::Slice<jule::Any> _48928_models) {
	if (_48928_models.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _49413_obj = jule::Str();
	{
		auto &expr = _48928_models;
		auto it = expr.begin();
		_iter_begin_4679109888:;
		if (it != expr.end()) {
			jule::Any _221dad153_m = *it;
			{
				_49413_obj+=_221dad153_gen_expr(_221dad153_m);
				_49413_obj+=jule::Str(",", 1);
			}
			_iter_next_4679109888:;
			++it;
			goto _iter_begin_4679109888;
		}
		_iter_end_4679109888:;
	}
	_49413_obj=_49413_obj.slice(0LL,_49413_obj.len() - 1LL);
	return _49413_obj;
}



inline jule::Str _221dad153_gen_expr_model_for_call(jule::Any _50332_expr) {
	{
		auto &_match_expr{ _50332_expr };
		if (!(_match_expr.type_is<jule::Ptr<_222edb48e_FnIns>>())) { goto _case_end_4679114256; }
		_case_begin_4679114256:;
		{
			return _221dad153_gen_fn_ins_expr_model(_50332_expr.operator jule::Ptr<_222edb48e_FnIns>());
		}
		goto _match_end_4679112336;
		_case_end_4679114256:;
		_case_begin_4679112880:;
		{
			return _221dad153_gen_expr_model(_50332_expr);
		}
		goto _match_end_4679112336;
		_case_end_4679112880:;
		_match_end_4679112336:;
	}
}



inline jule::Str _221dad153_gen_pure_fn_call_expr_model(jule::Ptr<_21eedb492_FnCallExprModel>& _51037_m) {
	jule::Str _51113_obj = _221dad153_gen_expr_model_for_call(_51037_m->_field_expr);
	if ((!(_51037_m->_field_func->_method_is_builtin()))) {
		if (_51037_m->_field_func->_field_decl->_field_cpp_linked && (_51037_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_2071abd62_has_directive(_51037_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_51113_obj+=jule::Str("<", 1);
				{
					auto &expr = _51037_m->_field_func->_field_generics;
					auto it = expr.begin();
					_iter_begin_4679120864:;
					if (it != expr.end()) {
						jule::Ptr<_2300b54e5_TypeKind> _221dad153_g = *it;
						{
							_51113_obj+=_2071abd62_gen_type_kind(_221dad153_g);
							_51113_obj+=jule::Str(",", 1);
						}
						_iter_next_4679120864:;
						++it;
						goto _iter_begin_4679120864;
					}
					_iter_end_4679120864:;
				}
				_51113_obj=_51113_obj.slice(0LL,_51113_obj.len() - 1LL);
				_51113_obj+=jule::Str(">", 1);
			}
		}
	}
	_51113_obj+=jule::Str("(", 1);
	_51113_obj+=_221dad153_gen_arg_expr_models(_51037_m->_field_args);
	_51113_obj+=jule::Str(")", 1);
	if (_51037_m->_field_is_co) {
		_51113_obj=jule::Str("__JULE_CO(", 10) + _51113_obj;
		_51113_obj+=jule::Str(")", 1);
	}
	return _51113_obj;
}



inline jule::Bool _221dad153_is_forwarded(jule::Ptr<_2300254bb_Scope>& _53718_s) {
	jule::Any _5389_last = _53718_s->_field_stmts[_53718_s->_field_stmts.len() - 1LL];
	{
		auto &_match_expr{ _5389_last };
		if (!(_match_expr.type_is<jule::Ptr<_20683ebaa_Data>>())) { goto _case_end_4679131984; }
		_case_begin_4679131984:;
		{
			{
				auto &_match_expr{ _5389_last.operator jule::Ptr<_20683ebaa_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>>())) { goto _case_end_4679134576; }
				_case_begin_4679134576:;
				{
					return true;
				}
				goto _match_end_4679133024;
				_case_end_4679134576:;
				_case_begin_4679132112:;
				{
					return false;
				}
				goto _match_end_4679133024;
				_case_end_4679132112:;
				_match_end_4679133024:;
			}
		}
		goto _match_end_4679130432;
		_case_end_4679131984:;
		_case_begin_4679127328:;
		{
			return true;
		}
		goto _match_end_4679130432;
		_case_end_4679127328:;
		_match_end_4679130432:;
	}
}



inline jule::Str _221dad153_gen_fn_call_expr_model(jule::Ptr<_21eedb492_FnCallExprModel> _55431_m) {
	if (_55431_m->_field_func->_method_is_builtin() || (!(_55431_m->_field_func->_field_decl->_field_exceptional))) {
		return _221dad153_gen_pure_fn_call_expr_model(_55431_m);
	}
	jule::Str _55913_obj = jule::Str("({\n", 3);
	_207182002_add_indent();
	_55913_obj+=_207182002_indent();
	_55913_obj+=jule::Str("auto except = ", 14);
	_55913_obj+=_221dad153_gen_pure_fn_call_expr_model(_55431_m);
	_55913_obj+=jule::Str(";\n", 2);
	_55913_obj+=_207182002_indent();
	if (_55431_m->_field_except != nullptr) {
		if (_55431_m->_field_func->_field_result == nullptr) {
			_55913_obj+=jule::Str("if (!except.ok()) ", 18);
			_55913_obj+=_238ade994_gen_scope(_55431_m->_field_except);
			_55913_obj+=jule::Str("\n", 1);
		} else {
			jule::Bool _57217_forwarded = _221dad153_is_forwarded(_55431_m->_field_except);
			_55913_obj+=jule::Str("(except.ok()) ? (except.result) : (", 35);
			if (_57217_forwarded) {
				_55913_obj+=jule::Str("{", 1);
			}
			_55913_obj+=_238ade994_gen_scope(_55431_m->_field_except);
			if (_57217_forwarded) {
				_55913_obj+=jule::Str(" ", 1);
				_55913_obj+=_221dad153_get_init_expr(_55431_m->_field_func->_field_result);
				_55913_obj+=jule::Str(";}", 2);
			}
			_55913_obj+=jule::Str(");\n", 3);
		}
		_207182002_done_indent();
	} else {
		_55913_obj+=jule::Str("if (!except.ok()) jule::panic(jule::Str(\"", 41);
		_55913_obj+=_1dcda108c_format(jule::Str("unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: {}:{}:{}\"));", 110),jule::Slice<jule::Any>({jule::Any(_55431_m->_field_token._field_file->_method_path()),jule::Any(_2397e4467_itoa(_55431_m->_field_token._field_row)),jule::Any(_2397e4467_itoa(_55431_m->_field_token._field_column))}));
		_55913_obj+=jule::Str("\n", 1);
		if ((!(_55431_m->_field_func->_field_decl->_method_is_void()))) {
			_55913_obj+=_207182002_indent();
			_55913_obj+=jule::Str("(except.result);\n", 17);
			_207182002_done_indent();
		}
	}
	_55913_obj+=_207182002_indent();
	_55913_obj+=jule::Str("})", 2);
	return _55913_obj;
}



inline jule::Str _221dad153_gen_slice_expr_model(jule::Ptr<_21eedb492_SliceExprModel> _60429_m) {
	if (_60429_m->_field_elems.len() == 0LL) {
		return _2071abd62_as_slice_kind(_60429_m->_field_elem_kind) + jule::Str("()", 2);
	}
	jule::Str _60913_obj = _2071abd62_as_slice_kind(_60429_m->_field_elem_kind);
	_60913_obj+=jule::Str("({", 2);
	_60913_obj+=_221dad153_gen_arg_expr_models(_60429_m->_field_elems);
	_60913_obj+=jule::Str("})", 2);
	return _60913_obj;
}



inline jule::Str _221dad153_gen_indexing_expr_model(jule::Ptr<_21eedb492_IndexigExprModel> _61632_m) {
	jule::Str _61713_obj = _221dad153_gen_expr_model(_61632_m->_field_expr->_field_model);
	if (_2388c6e74_OPT_ACCESS) {
		jule::Bool _62113_array = _61632_m->_field_expr->_field_kind->_method_arr() != nullptr;
		if (_62113_array && _61632_m->_field_index->_method_is_const()) {
			_61713_obj+=jule::Str(".__at(", 6);
			_61713_obj+=_221dad153_gen_expr(_61632_m->_field_index->_field_model);
			_61713_obj+=jule::Str(")", 1);
			return _61713_obj;
		}
		{
			auto &_match_expr{ _61632_m->_field_index->_field_model };
			if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4679168224; }
			_case_begin_4679168224:;
			{
				jule::Ptr<_2200a2657_Var> _63317_i = _61632_m->_field_index->_field_model.operator jule::Ptr<_2200a2657_Var>();
				if (_63317_i->_field_mutable || (_63317_i->_field_iter_relation == nullptr)) {
					goto _match_end_4679166656;
				}
				{
					auto &_match_expr{ _61632_m->_field_expr->_field_model };
					if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4679172320; }
					_case_begin_4679172320:;
					{
						jule::Ptr<_2200a2657_Var> _63921_r = _61632_m->_field_expr->_field_model.operator jule::Ptr<_2200a2657_Var>();
						if (_63317_i->_field_iter_relation->_field_range == _63921_r) {
							_61713_obj+=jule::Str(".__at(", 6);
							_61713_obj+=_221dad153_gen_expr(_61632_m->_field_index->_field_model);
							_61713_obj+=jule::Str(")", 1);
							return _61713_obj;
						}
					}
					goto _match_end_4679173632;
					_case_end_4679172320:;
					_match_end_4679173632:;
				}
			}
			goto _match_end_4679166656;
			_case_end_4679168224:;
			_match_end_4679166656:;
		}
	}
	_61713_obj+=jule::Str("[", 1);
	_61713_obj+=_221dad153_gen_expr(_61632_m->_field_index->_field_model);
	_61713_obj+=jule::Str("]", 1);
	return _61713_obj;
}



inline jule::Str _221dad153_gen_anon_fn_expr_model(jule::Ptr<_21eedb492_AnonFnExprModel> _65931_m) {
	jule::Str _66013_obj = _2071abd62_gen_fn_kind(_65931_m->_field_func);
	_66013_obj+=jule::Str("([=]", 4);
	_66013_obj+=_207182002_gen_params_ins(_65931_m->_field_func->_field_params);
	_66013_obj+=jule::Str(" mutable -> ", 12);
	_66013_obj+=_207182002_gen_fn_ins_result(_65931_m->_field_func);
	_66013_obj+=jule::Str(" ", 1);
	_66013_obj+=_238ade994_gen_fn_scope(_65931_m->_field_func);
	_66013_obj+=jule::Str(")", 1);
	return _66013_obj;
}



inline jule::Str _221dad153_gen_map_expr_model(jule::Ptr<_21eedb492_MapExprModel> _67127_m) {
	jule::Str _67213_obj = _22011eedd_as_jt(jule::Str("map", 3));
	_67213_obj+=jule::Str("<", 1);
	_67213_obj+=_2071abd62_gen_type_kind(_67127_m->_field_key_kind);
	_67213_obj+=jule::Str(",", 1);
	_67213_obj+=_2071abd62_gen_type_kind(_67127_m->_field_val_kind);
	_67213_obj+=jule::Str(">({", 3);
	if (_67127_m->_field_entries.len() > 0LL) {
		{
			auto &expr = _67127_m->_field_entries;
			auto it = expr.begin();
			_iter_begin_4679188864:;
			if (it != expr.end()) {
				jule::Ptr<_21eedb492_KeyValPairExprModel> _221dad153_pair = *it;
				{
					jule::Str _68021_pair_obj = jule::Str("{", 1);
					_68021_pair_obj+=_221dad153_gen_expr(_221dad153_pair->_field_key);
					_68021_pair_obj+=jule::Str(",", 1);
					_68021_pair_obj+=_221dad153_gen_expr(_221dad153_pair->_field_val);
					_68021_pair_obj+=jule::Str("}", 1);
					_67213_obj+=_68021_pair_obj;
					_67213_obj+=jule::Str(",", 1);
				}
				_iter_next_4679188864:;
				++it;
				goto _iter_begin_4679188864;
			}
			_iter_end_4679188864:;
		}
		_67213_obj=_67213_obj.slice(0LL,_67213_obj.len() - 1LL);
	}
	_67213_obj+=jule::Str("})", 2);
	return _67213_obj;
}



inline jule::Str _221dad153_gen_slicing_expr_model(jule::Ptr<_21eedb492_SlicingExprModel> _69431_m) {
	jule::Str _69513_obj = _221dad153_gen_expr_model(_69431_m->_field_expr);
	_69513_obj+=jule::Str(".slice(", 7);
	_69513_obj+=_221dad153_gen_expr(_69431_m->_field_left);
	if (_69431_m->_field_right != nullptr) {
		_69513_obj+=jule::Str(",", 1);
		_69513_obj+=_221dad153_gen_expr(_69431_m->_field_right);
	}
	_69513_obj+=jule::Str(")", 1);
	return _69513_obj;
}



inline jule::Str _221dad153_gen_trait_sub_ident_expr_model(jule::Ptr<_21eedb492_TraitSubIdentExprModel> _70639_m) {
	jule::Str _70713_obj = _221dad153_gen_expr_model(_70639_m->_field_expr);
	_70713_obj+=jule::Str(".get()._method_", 15);
	_70713_obj+=_70639_m->_field_ident;
	return _70713_obj;
}



inline jule::Str _221dad153_gen_struct_sub_ident_expr_model(jule::Ptr<_21eedb492_StructSubIdentExprModel> _71340_m) {
	jule::Str _71413_obj = _221dad153_gen_expr_model(_71340_m->_field_expr);
	_71413_obj+=_221dad153_get_accessor(_71340_m->_field_expr_kind);
	if (_71340_m->_field_field != nullptr) {
		_71413_obj+=_22011eedd_field_out_ident(_71340_m->_field_field->_field_decl);
	} else {
		_71413_obj+=_22011eedd_fn_ins_out_ident(_71340_m->_field_method);
	}
	return _71413_obj;
}



inline jule::Str _221dad153_gen_common_ident_expr_model(jule::Ptr<_21eedb492_CommonIdentExprModel> _72432_m) {
	return _72432_m->_field_ident;
}



inline jule::Str _221dad153_gen_common_sub_ident_expr_model(jule::Ptr<_21eedb492_CommonSubIdentExprModel> _72840_m) {
	jule::Str _72913_obj = _221dad153_gen_expr_model(_72840_m->_field_expr);
	_72913_obj+=_221dad153_get_accessor(_72840_m->_field_expr_kind);
	_72913_obj+=_72840_m->_field_ident;
	return _72913_obj;
}



inline jule::Str _221dad153_gen_array_expr_model(jule::Ptr<_21eedb492_ArrayExprModel> _73529_m) {
	if (_73529_m->_field_elems.len() == 0LL) {
		return _2071abd62_gen_array_kind(_73529_m->_field_kind) + jule::Str("()", 2);
	}
	jule::Str _74013_obj = _2071abd62_gen_array_kind(_73529_m->_field_kind);
	_74013_obj+=jule::Str("({", 2);
	_74013_obj+=_221dad153_gen_arg_expr_models(_73529_m->_field_elems);
	_74013_obj+=jule::Str("})", 2);
	return _74013_obj;
}



inline jule::Str _221dad153_gen_fn_ins_expr_model_common(jule::Ptr<_222edb48e_FnIns> _74937_m) {
	jule::Str _75013_obj = _2071abd62_gen_fn_kind(_74937_m);
	_75013_obj+=jule::Str("(", 1);
	_75013_obj+=_221dad153_gen_fn_ins_expr_model(_74937_m);
	_75013_obj+=jule::Str(")", 1);
	return _75013_obj;
}



inline jule::Str _221dad153_gen_fn_ins_expr_model(jule::Ptr<_222edb48e_FnIns> _75830_m) {
	if ((_75830_m->_field_decl != nullptr) && _75830_m->_field_decl->_field_cpp_linked) {
		jule::Ptr<_221d8b043_Directive> _76013_d = _2071abd62_find_directive(_75830_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (_76013_d != nullptr) {
			jule::Str _76221_obj = _221dad153_concat_all_parts(_76013_d->_field_args);
			_76221_obj+=jule::Str("::", 2);
			_76221_obj+=_22011eedd_fn_ins_out_ident(_75830_m);
			return _76221_obj;
		}
	}
	return _22011eedd_fn_ins_out_ident(_75830_m);
}



inline jule::Str _221dad153_gen_tuple_expr_model(jule::Ptr<_21eedb492_TupleExprModel> _77129_m) {
	jule::Str _77213_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _77129_m->_field_datas;
		auto it = expr.begin();
		_iter_begin_4679224944:;
		if (it != expr.end()) {
			jule::Ptr<_20683ebaa_Data> _221dad153_d = *it;
			{
				_77213_obj+=_221dad153_gen_expr(_221dad153_d->_field_model);
				_77213_obj+=jule::Str(",", 1);
			}
			_iter_next_4679224944:;
			++it;
			goto _iter_begin_4679224944;
		}
		_iter_end_4679224944:;
	}
	_77213_obj=_77213_obj.slice(0LL,_77213_obj.len() - 1LL);
	_77213_obj+=jule::Str(")", 1);
	return _77213_obj;
}



inline jule::Str _221dad153_gen_builtin_new_call_expr_model(jule::Ptr<_21eedb492_BuiltinNewCallExprModel> _78240_m) {
	jule::Str _78313_obj = jule::Str("jule::new_ptr<", 14);
	_78313_obj+=_2071abd62_gen_type_kind(_78240_m->_field_kind);
	_78313_obj+=jule::Str(">(", 2);
	if (_78240_m->_field_init != nullptr) {
		_78313_obj+=_221dad153_gen_expr(_78240_m->_field_init);
	}
	_78313_obj+=jule::Str(")", 1);
	return _78313_obj;
}



inline jule::Str _221dad153_gen_builtin_out_call_expr_model(jule::Ptr<_21eedb492_BuiltinOutCallExprModel> _79340_m) {
	jule::Str _79413_obj = jule::Str("jule::out(", 10);
	_79413_obj+=_221dad153_gen_expr(_79340_m->_field_expr);
	_79413_obj+=jule::Str(")", 1);
	return _79413_obj;
}



inline jule::Str _221dad153_gen_builtin_outln_call_expr_model(jule::Ptr<_21eedb492_BuiltinOutlnCallExprModel> _80042_m) {
	jule::Str _80113_obj = jule::Str("jule::outln(", 12);
	_80113_obj+=_221dad153_gen_expr(_80042_m->_field_expr);
	_80113_obj+=jule::Str(")", 1);
	return _80113_obj;
}



inline jule::Str _221dad153_gen_builtin_panic_call_expr_model(jule::Ptr<_21eedb492_BuiltinPanicCallExprModel> _80742_m) {
	jule::Str _80813_obj = jule::Str("jule::panic(", 12);
	_80813_obj+=_221dad153_gen_expr(_80742_m->_field_expr);
	_80813_obj+=jule::Str(")", 1);
	return _80813_obj;
}



inline jule::Str _221dad153_gen_builtin_error_call_expr_model(jule::Ptr<_21eedb492_BuiltinErrorCallExprModel> _81442_m) {
	jule::Str _81513_obj = jule::Str("return ", 7);
	if (_81442_m->_field_func->_field_decl->_method_is_void()) {
		_81513_obj+=jule::Str("jule::VoidExceptional(", 22);
	} else {
		_81513_obj+=jule::Str("jule::Exceptional<", 18);
		_81513_obj+=_2071abd62_gen_type_kind(_81442_m->_field_func->_field_result);
		_81513_obj+=jule::Str(">(", 2);
	}
	_81513_obj+=_221dad153_gen_expr(_81442_m->_field_err);
	_81513_obj+=jule::Str(")", 1);
	return _81513_obj;
}



inline jule::Str _221dad153_gen_builtin_make_call_expr_model(jule::Ptr<_21eedb492_BuiltinMakeCallExprModel> _82841_m) {
	jule::Str _82913_obj = jule::Str();
	if (_82841_m->_field_len != nullptr) {
		_82913_obj+=_221dad153_gen_expr(_82841_m->_field_len);
	} else {
		_82913_obj+=jule::Str("0", 1);
	}
	if (_82841_m->_field_cap != nullptr) {
		_82913_obj+=jule::Str(",", 1) + _221dad153_gen_expr(_82841_m->_field_cap);
	}
	if (_82841_m->_field_kind->_method_slc()->_field_elem->_method_enm() != nullptr) {
		_82913_obj+=jule::Str(",", 1);
		_82913_obj+=_221dad153_get_init_expr(_82841_m->_field_kind->_method_slc()->_field_elem);
		if (_82841_m->_field_cap != nullptr) {
			_82913_obj=(_2071abd62_gen_type_kind(_82841_m->_field_kind) + jule::Str("::alloc(", 8)) + _82913_obj;
		} else {
			_82913_obj=(_2071abd62_gen_type_kind(_82841_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _82913_obj;
		}
	} else {
		_82913_obj=(_2071abd62_gen_type_kind(_82841_m->_field_kind) + jule::Str("::alloc(", 8)) + _82913_obj;
	}
	_82913_obj+=jule::Str(")", 1);
	return _82913_obj;
}



inline jule::Str _221dad153_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _8565_same_dest,jule::Str& _8576_dest_expr,jule::Ptr<_2300b54e5_TypeKind>& _85810_dest_kind,jule::Ptr<_21eedb492_SliceExprModel>& _85910_s,jule::Ptr<_21eedb492_BuiltinAppendCallExprModel>& _86010_m) {
	jule::Str _86113_obj = jule::Str();
	if ((!(_8565_same_dest))) {
		_86113_obj+=_8576_dest_expr;
		_86113_obj+=jule::Str(" = jule::alloc_for_append(", 26);
		_86113_obj+=_221dad153_gen_expr_model(_86010_m->_field_dest);
		_86113_obj+=jule::Str(",", 1);
		_86113_obj+=_2397e4467_itoa(static_cast<jule::I64>(_85910_s->_field_elems.len()));
		_86113_obj+=jule::Str(");", 2);
	}
	{
		auto &expr = _85910_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4679264464:;
		if (it != expr.end()) {
			jule::Any _221dad153_e = *it;
			{
				_86113_obj+=_8576_dest_expr;
				_86113_obj+=_221dad153_get_accessor(_85810_dest_kind);
				_86113_obj+=jule::Str("push(", 5);
				_86113_obj+=_221dad153_gen_expr_model(_221dad153_e);
				_86113_obj+=jule::Str(");", 2);
			}
			_iter_next_4679264464:;
			++it;
			goto _iter_begin_4679264464;
		}
		_iter_end_4679264464:;
	}
	return _86113_obj;
}



inline std::tuple<jule::Str,jule::Bool> _221dad153_gen_builtin_append_call_expr_model_assign(jule::Any _88050_dest,jule::Ptr<_21eedb492_BuiltinAppendCallExprModel> _88071_m) {
	jule::Bool _880110_optimized = jule::Bool();
	{
		auto &_match_expr{ _88071_m->_field_elements };
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_SliceExprModel>>())) { goto _case_end_4679267760; }
		_case_begin_4679267760:;
		{
			{
				auto &_match_expr{ _88050_dest };
				if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4679268384; }
				_case_begin_4679268384:;
				{
					jule::Ptr<_21eedb492_SliceExprModel> _88521_s = _88071_m->_field_elements.operator jule::Ptr<_21eedb492_SliceExprModel>();
					jule::Str _88617_dest_expr = _221dad153_gen_expr_model(_88050_dest);
					jule::Ptr<_2200a2657_Var> _88721_dest_var = _88050_dest.operator jule::Ptr<_2200a2657_Var>();
					jule::Bool _88817_same_dest = _88071_m->_field_dest == _88721_dest_var;
					_880110_optimized = true;
					return std::make_tuple(_221dad153_gen_builtin_append_call_expr_model_assign_opt(_88817_same_dest,_88617_dest_expr,_88721_dest_var->_field_kind->_field_kind,_88521_s,_88071_m),_880110_optimized);
				}
				goto _match_end_4679269920;
				_case_end_4679268384:;
				if (!(_match_expr.type_is<jule::Ptr<_21eedb492_StructSubIdentExprModel>>())) { goto _case_end_4679270000; }
				_case_begin_4679270000:;
				{
					jule::Ptr<_21eedb492_SliceExprModel> _89321_s = _88071_m->_field_elements.operator jule::Ptr<_21eedb492_SliceExprModel>();
					jule::Str _89417_dest_expr = _221dad153_gen_expr_model(_88050_dest);
					jule::Ptr<_2398d04dc_FieldIns> _89521_dest_field = _88050_dest.operator jule::Ptr<_21eedb492_StructSubIdentExprModel>()->_field_field;
					jule::Bool _89617_same_dest = _88071_m->_field_dest == _89521_dest_field;
					_880110_optimized = true;
					return std::make_tuple(_221dad153_gen_builtin_append_call_expr_model_assign_opt(_89617_same_dest,_89417_dest_expr,_89521_dest_field->_field_kind,_89321_s,_88071_m),_880110_optimized);
				}
				goto _match_end_4679269920;
				_case_end_4679270000:;
				_match_end_4679269920:;
			}
		}
		goto _match_end_4679268240;
		_case_end_4679267760:;
		_match_end_4679268240:;
	}
	_880110_optimized = false;
	return std::make_tuple(_221dad153_gen_builtin_append_call_expr_model(_88071_m),_880110_optimized);
}



inline jule::Str _221dad153_gen_builtin_append_call_expr_model(jule::Ptr<_21eedb492_BuiltinAppendCallExprModel> _90543_m) {
	jule::Str _90613_obj = jule::Str("jule::append(", 13);
	_90613_obj+=_221dad153_gen_expr_model(_90543_m->_field_dest);
	_90613_obj+=jule::Str(",", 1);
	_90613_obj+=_221dad153_gen_expr_model(_90543_m->_field_elements);
	_90613_obj+=jule::Str(")", 1);
	return _90613_obj;
}



inline jule::Str _221dad153_gen_builtin_clone_call_expr_model(jule::Ptr<_21eedb492_BuiltinCloneCallExprModel> _91442_m) {
	jule::Str _91513_obj = jule::Str("jule::clone(", 12);
	_91513_obj+=_221dad153_gen_expr_model(_91442_m->_field_expr);
	_91513_obj+=jule::Str(")", 1);
	return _91513_obj;
}



inline jule::Str _221dad153_gen_sizeof_expr_model(jule::Ptr<_21eedb492_SizeofExprModel> _92130_m) {
	jule::Str _92213_obj = jule::Str("sizeof(", 7);
	_92213_obj+=_221dad153_gen_expr(_92130_m->_field_expr);
	_92213_obj+=jule::Str(")", 1);
	return _92213_obj;
}



inline jule::Str _221dad153_gen_alignof_expr_model(jule::Ptr<_21eedb492_AlignofExprModel> _92831_m) {
	jule::Str _92913_obj = jule::Str("alignof(", 8);
	_92913_obj+=_221dad153_gen_expr(_92831_m->_field_expr);
	_92913_obj+=jule::Str(")", 1);
	return _92913_obj;
}



inline jule::Str _221dad153_gen_rune_expr_model(jule::Ptr<_21eedb492_RuneExprModel> _93524_m) {
	if (_93524_m->_field_code <= 127LL) {
		jule::Str _93717_b = _221dad153_sbtoa(static_cast<jule::U8>(_93524_m->_field_code));
		if (_93717_b == jule::Str("'", 1)) {
			_93717_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _93717_b) + jule::Str("'", 1);
	}
	return _221dad153_i64toa(static_cast<jule::I64>(_93524_m->_field_code));
}



inline jule::Str _221dad153_gen_struct_static_ident_expr_model(jule::Ptr<_21eedb492_StructStaticIdentExprModel> _94643_m) {
	jule::Str _94713_obj = _22011eedd_struct_ins_out_ident(_94643_m->_field_structure);
	_94713_obj+=jule::Str("::", 2);
	_94713_obj+=_22011eedd_fn_ins_out_ident(_94643_m->_field_method);
	return _94713_obj;
}



inline jule::Str _221dad153_gen_integrated_to_str_expr_model(jule::Ptr<_21eedb492_IntegratedToStrExprModel> _95341_m) {
	jule::Str _95413_obj = jule::Str("jule::to_str(", 13);
	_95413_obj+=_221dad153_gen_expr_model(_95341_m->_field_expr);
	_95413_obj+=jule::Str(")", 1);
	return _95413_obj;
}



inline jule::Str _221dad153_gen_ternary_expr_model(jule::Ptr<_21eedb492_TernaryExprModel> _96031_m) {
	jule::Str _96113_obj = jule::Str("((", 2);
	_96113_obj+=_221dad153_gen_expr_model(_96031_m->_field_condition);
	_96113_obj+=jule::Str(") ? (", 5);
	_96113_obj+=_221dad153_gen_expr_model(_96031_m->_field_true_expr);
	_96113_obj+=jule::Str(") : (", 5);
	_96113_obj+=_221dad153_gen_expr_model(_96031_m->_field_false_expr);
	_96113_obj+=jule::Str("))", 2);
	return _96113_obj;
}



inline jule::Str _221dad153_gen_expr_model(jule::Any _97123_m) {
	{
		auto &_match_expr{ _97123_m };
		if (!(_match_expr.type_is<jule::Ptr<_2300b54e5_TypeKind>>())) { goto _case_end_4679314144; }
		_case_begin_4679314144:;
		{
			return _2071abd62_gen_type_kind(_97123_m.operator jule::Ptr<_2300b54e5_TypeKind>());
		}
		goto _match_end_4679311584;
		_case_end_4679314144:;
		if (!(_match_expr.type_is<jule::Ptr<_206e210e3_Const>>())) { goto _case_end_4679313696; }
		_case_begin_4679313696:;
		{
			return _221dad153_gen_const_expr_model(_97123_m.operator jule::Ptr<_206e210e3_Const>());
		}
		goto _match_end_4679311584;
		_case_end_4679313696:;
		if (!(_match_expr.type_is<jule::Ptr<_2200a2657_Var>>())) { goto _case_end_4679313792; }
		_case_begin_4679313792:;
		{
			return _221dad153_gen_var_expr_model(_97123_m.operator jule::Ptr<_2200a2657_Var>());
		}
		goto _match_end_4679311584;
		_case_end_4679313792:;
		if (!(_match_expr.type_is<jule::Ptr<_2300167cb_Trait>>())) { goto _case_end_4679313888; }
		_case_begin_4679313888:;
		{
			return _22011eedd_trait_out_ident(_97123_m.operator jule::Ptr<_2300167cb_Trait>());
		}
		goto _match_end_4679311584;
		_case_end_4679313888:;
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_Struct>>())) { goto _case_end_4679313328; }
		_case_begin_4679313328:;
		{
			return _221dad153_gen_struct_expr_model(_97123_m.operator jule::Ptr<_2398d04dc_Struct>());
		}
		goto _match_end_4679311584;
		_case_end_4679313328:;
		if (!(_match_expr.type_is<jule::Ptr<_2398d04dc_StructIns>>())) { goto _case_end_4679313424; }
		_case_begin_4679313424:;
		{
			return _221dad153_gen_struct_ins_expr_model(_97123_m.operator jule::Ptr<_2398d04dc_StructIns>());
		}
		goto _match_end_4679311584;
		_case_end_4679313424:;
		if (!(_match_expr.type_is<jule::Ptr<_222edb48e_FnIns>>())) { goto _case_end_4679313520; }
		_case_begin_4679313520:;
		{
			return _221dad153_gen_fn_ins_expr_model_common(_97123_m.operator jule::Ptr<_222edb48e_FnIns>());
		}
		goto _match_end_4679311584;
		_case_end_4679313520:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BinopExprModel>>())) { goto _case_end_4679312688; }
		_case_begin_4679312688:;
		{
			return _221dad153_gen_binop_expr_model(_97123_m.operator jule::Ptr<_21eedb492_BinopExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679312688:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_UnaryExprModel>>())) { goto _case_end_4679312784; }
		_case_begin_4679312784:;
		{
			return _221dad153_gen_unary_expr_model(_97123_m.operator jule::Ptr<_21eedb492_UnaryExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679312784:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_StructLitExprModel>>())) { goto _case_end_4679312880; }
		_case_begin_4679312880:;
		{
			return _221dad153_gen_struct_lit_expr_model(_97123_m.operator jule::Ptr<_21eedb492_StructLitExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679312880:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_AllocStructLitExprModel>>())) { goto _case_end_4679312976; }
		_case_begin_4679312976:;
		{
			return _221dad153_gen_alloc_struct_lit_expr_model(_97123_m.operator jule::Ptr<_21eedb492_AllocStructLitExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679312976:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_CastingExprModel>>())) { goto _case_end_4679314928; }
		_case_begin_4679314928:;
		{
			return _221dad153_gen_casting_expr_model(_97123_m.operator jule::Ptr<_21eedb492_CastingExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679314928:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_FnCallExprModel>>())) { goto _case_end_4679315024; }
		_case_begin_4679315024:;
		{
			return _221dad153_gen_fn_call_expr_model(_97123_m.operator jule::Ptr<_21eedb492_FnCallExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679315024:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_SliceExprModel>>())) { goto _case_end_4679315120; }
		_case_begin_4679315120:;
		{
			return _221dad153_gen_slice_expr_model(_97123_m.operator jule::Ptr<_21eedb492_SliceExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679315120:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_ArrayExprModel>>())) { goto _case_end_4679315216; }
		_case_begin_4679315216:;
		{
			return _221dad153_gen_array_expr_model(_97123_m.operator jule::Ptr<_21eedb492_ArrayExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679315216:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_IndexigExprModel>>())) { goto _case_end_4679315328; }
		_case_begin_4679315328:;
		{
			return _221dad153_gen_indexing_expr_model(_97123_m.operator jule::Ptr<_21eedb492_IndexigExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679315328:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_AnonFnExprModel>>())) { goto _case_end_4679315440; }
		_case_begin_4679315440:;
		{
			return _221dad153_gen_anon_fn_expr_model(_97123_m.operator jule::Ptr<_21eedb492_AnonFnExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679315440:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_MapExprModel>>())) { goto _case_end_4679315552; }
		_case_begin_4679315552:;
		{
			return _221dad153_gen_map_expr_model(_97123_m.operator jule::Ptr<_21eedb492_MapExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679315552:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_SlicingExprModel>>())) { goto _case_end_4679315664; }
		_case_begin_4679315664:;
		{
			return _221dad153_gen_slicing_expr_model(_97123_m.operator jule::Ptr<_21eedb492_SlicingExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679315664:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_TraitSubIdentExprModel>>())) { goto _case_end_4679315776; }
		_case_begin_4679315776:;
		{
			return _221dad153_gen_trait_sub_ident_expr_model(_97123_m.operator jule::Ptr<_21eedb492_TraitSubIdentExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679315776:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_StructSubIdentExprModel>>())) { goto _case_end_4679315888; }
		_case_begin_4679315888:;
		{
			return _221dad153_gen_struct_sub_ident_expr_model(_97123_m.operator jule::Ptr<_21eedb492_StructSubIdentExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679315888:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_CommonIdentExprModel>>())) { goto _case_end_4679316000; }
		_case_begin_4679316000:;
		{
			return _221dad153_gen_common_ident_expr_model(_97123_m.operator jule::Ptr<_21eedb492_CommonIdentExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679316000:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_CommonSubIdentExprModel>>())) { goto _case_end_4679316112; }
		_case_begin_4679316112:;
		{
			return _221dad153_gen_common_sub_ident_expr_model(_97123_m.operator jule::Ptr<_21eedb492_CommonSubIdentExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679316112:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_TupleExprModel>>())) { goto _case_end_4679316224; }
		_case_begin_4679316224:;
		{
			return _221dad153_gen_tuple_expr_model(_97123_m.operator jule::Ptr<_21eedb492_TupleExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679316224:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinOutCallExprModel>>())) { goto _case_end_4679316336; }
		_case_begin_4679316336:;
		{
			return _221dad153_gen_builtin_out_call_expr_model(_97123_m.operator jule::Ptr<_21eedb492_BuiltinOutCallExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679316336:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinOutlnCallExprModel>>())) { goto _case_end_4679316448; }
		_case_begin_4679316448:;
		{
			return _221dad153_gen_builtin_outln_call_expr_model(_97123_m.operator jule::Ptr<_21eedb492_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679316448:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinNewCallExprModel>>())) { goto _case_end_4679316560; }
		_case_begin_4679316560:;
		{
			return _221dad153_gen_builtin_new_call_expr_model(_97123_m.operator jule::Ptr<_21eedb492_BuiltinNewCallExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679316560:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinPanicCallExprModel>>())) { goto _case_end_4679316672; }
		_case_begin_4679316672:;
		{
			return _221dad153_gen_builtin_panic_call_expr_model(_97123_m.operator jule::Ptr<_21eedb492_BuiltinPanicCallExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679316672:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>>())) { goto _case_end_4679316784; }
		_case_begin_4679316784:;
		{
			return _221dad153_gen_builtin_error_call_expr_model(_97123_m.operator jule::Ptr<_21eedb492_BuiltinErrorCallExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679316784:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinMakeCallExprModel>>())) { goto _case_end_4679316896; }
		_case_begin_4679316896:;
		{
			return _221dad153_gen_builtin_make_call_expr_model(_97123_m.operator jule::Ptr<_21eedb492_BuiltinMakeCallExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679316896:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinAppendCallExprModel>>())) { goto _case_end_4679317008; }
		_case_begin_4679317008:;
		{
			return _221dad153_gen_builtin_append_call_expr_model(_97123_m.operator jule::Ptr<_21eedb492_BuiltinAppendCallExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679317008:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BuiltinCloneCallExprModel>>())) { goto _case_end_4679317120; }
		_case_begin_4679317120:;
		{
			return _221dad153_gen_builtin_clone_call_expr_model(_97123_m.operator jule::Ptr<_21eedb492_BuiltinCloneCallExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679317120:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_SizeofExprModel>>())) { goto _case_end_4679317232; }
		_case_begin_4679317232:;
		{
			return _221dad153_gen_sizeof_expr_model(_97123_m.operator jule::Ptr<_21eedb492_SizeofExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679317232:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_AlignofExprModel>>())) { goto _case_end_4679317344; }
		_case_begin_4679317344:;
		{
			return _221dad153_gen_alignof_expr_model(_97123_m.operator jule::Ptr<_21eedb492_AlignofExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679317344:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_RuneExprModel>>())) { goto _case_end_4679317456; }
		_case_begin_4679317456:;
		{
			return _221dad153_gen_rune_expr_model(_97123_m.operator jule::Ptr<_21eedb492_RuneExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679317456:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_StructStaticIdentExprModel>>())) { goto _case_end_4679317568; }
		_case_begin_4679317568:;
		{
			return _221dad153_gen_struct_static_ident_expr_model(_97123_m.operator jule::Ptr<_21eedb492_StructStaticIdentExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679317568:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_IntegratedToStrExprModel>>())) { goto _case_end_4679317680; }
		_case_begin_4679317680:;
		{
			return _221dad153_gen_integrated_to_str_expr_model(_97123_m.operator jule::Ptr<_21eedb492_IntegratedToStrExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679317680:;
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_TernaryExprModel>>())) { goto _case_end_4679317792; }
		_case_begin_4679317792:;
		{
			return _221dad153_gen_ternary_expr_model(_97123_m.operator jule::Ptr<_21eedb492_TernaryExprModel>());
		}
		goto _match_end_4679311584;
		_case_end_4679317792:;
		_case_begin_4679308992:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_4679311584;
		_case_end_4679308992:;
		_match_end_4679311584:;
	}
}



inline jule::Str _221dad153_gen_expr(jule::Any _109217_e) {
	jule::Str _109313_obj = _221dad153_gen_expr_model(_109217_e);
	if (_109313_obj[0LL] != '(') {
		return _109313_obj;
	}
	{
		auto &_match_expr{ _109217_e };
		if (!(_match_expr.type_is<jule::Ptr<_21eedb492_BinopExprModel>>())) { goto _case_end_4679379488; }
		_case_begin_4679379488:;
		{
			_109313_obj=_109313_obj.slice(1LL,_109313_obj.len() - 1LL);
		}
		goto _match_end_4679378672;
		_case_end_4679379488:;
		_match_end_4679378672:;
	}
	return _109313_obj;
}



inline jule::Str _221dad153_gen_val(jule::Ptr<_20683ebaa_Value> _110516_v) {
	if (_110516_v->_field_data->_method_is_const()) {
		return _221dad153_gen_const_expr(_110516_v->_field_data);
	}
	return _221dad153_gen_expr(_110516_v->_field_data->_field_model);
}



inline jule::Str _221dad153_get_init_expr(jule::Ptr<_2300b54e5_TypeKind> _111222_t) {
	if (_111222_t->_method_ptr() != nullptr) {
		return jule::Str("nullptr", 7);
	}
	jule::Ptr<_23001604a_Enum> _111713_enm = _111222_t->_method_enm();
	if (_111713_enm != nullptr) {
		return _221dad153_gen_val(_111713_enm->_field_items[0LL]->_field_value);
	}
	return _2071abd62_gen_type_kind(_111222_t) + jule::Str("()", 2);
}



inline jule::Str _220228ba7_get_derive_fn_decl_clone(jule::Ptr<_2398d04dc_Struct>& _730_s) {
	jule::Str _813_obj = _2071abd62_gen_struct_kind(_730_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _220228ba7_get_derive_fn_def_clone(jule::Ptr<_2398d04dc_Struct>& _1329_s) {
	jule::Str _1413_obj = _2071abd62_gen_struct_kind(_1329_s);
	_1413_obj+=jule::Str(" ", 1) + _1413_obj;
	_1413_obj+=jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _22011eedd_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _22011eedd_as_jt(jule::Str _2814_id) {
	if ((97LL <= _2814_id[0LL]) && (_2814_id[0LL] <= 122LL)) {
		_2814_id[0LL]-=32LL;
	}
	return jule::Str("jule::", 6) + _2814_id;
}



inline jule::Str _22011eedd_get_addr_as_ident(jule::Uintptr _3622_addr) {
	return jule::Str("_", 1) + _2397e4467_fmt_uint(static_cast<jule::U64>(_3622_addr),15LL);
}



inline jule::Str _22011eedd_as_out_ident(jule::Str _4517_ident,jule::Uintptr _4529_addr) {
	if (_4529_addr != 0LL) {
		jule::Str _4717_obj = _22011eedd_get_addr_as_ident(_4529_addr);
		_4717_obj+=jule::Str("_", 1);
		_4717_obj+=_4517_ident;
		return _4717_obj;
	}
	return _22011eedd_as_ident(_4517_ident);
}



inline jule::Str _22011eedd_as_local_ident(jule::Int _6119_row,jule::Int _6129_col,jule::Str _6139_ident) {
	jule::Str _6213_obj = _2397e4467_itoa(_6119_row);
	_6213_obj+=_2397e4467_itoa(_6129_col);
	_6213_obj+=jule::Str("_", 1);
	_6213_obj+=_6139_ident;
	return _22011eedd_as_ident(_6213_obj);
}



inline jule::Str _22011eedd_fn_out_ident(jule::Ptr<_222edb48e_Fn>& _7018_f) {
	{
		if (!((_7018_f->_field_cpp_linked))) { goto _case_end_4679413712; }
		_case_begin_4679413712:;
		{
			return _7018_f->_field_ident;
		}
		goto _match_end_4679410272;
		_case_end_4679413712:;
		if (!((_7018_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_4679411824; }
		_case_begin_4679411824:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_4679410272;
		_case_end_4679411824:;
		if (!((_7018_f->_method_is_method()))) { goto _case_end_4679412192; }
		_case_begin_4679412192:;
		{
			if (_7018_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _7018_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _7018_f->_field_ident;
		}
		goto _match_end_4679410272;
		_case_end_4679412192:;
		_case_begin_4679410496:;
		{
			return _22011eedd_as_out_ident(_7018_f->_field_ident,static_cast<jule::Uintptr>(_7018_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4679410272;
		_case_end_4679410496:;
		_match_end_4679410272:;
	}
}



inline jule::Str _22011eedd_fn_ins_out_ident(jule::Ptr<_222edb48e_FnIns>& _9026_f) {
	if (_9026_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _9026_f->_field_decl->_field_ident;
	}
	if (_9026_f->_field_decl->_field_cpp_linked || (_9026_f->_field_generics.len() == 0LL)) {
		return _22011eedd_fn_out_ident(_9026_f->_field_decl);
	}
	{
		auto &expr = _9026_f->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_4679422304:;
		if (it != expr.end()) {
			jule::Int _22011eedd_i = it - expr.begin();
			jule::Ptr<_222edb48e_FnIns> _22011eedd_ins = *it;
			{
				if (_22011eedd_ins->_method_same(_9026_f)) {
					jule::Str _10121_obj = _22011eedd_fn_out_ident(_9026_f->_field_decl);
					_10121_obj+=jule::Str("_", 1);
					_10121_obj+=_2397e4467_itoa(_22011eedd_i);
					return _10121_obj;
				}
			}
			_iter_next_4679422304:;
			++it;
			_22011eedd_i++;
			goto _iter_begin_4679422304;
		}
		_iter_end_4679422304:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _22011eedd_trait_out_ident(jule::Ptr<_2300167cb_Trait> _11220_t) {
	if (_11220_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _11220_t->_field_ident;
	}
	return _22011eedd_as_out_ident(_11220_t->_field_ident,static_cast<jule::Uintptr>(_11220_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _22011eedd_param_out_ident(jule::Ptr<_222edb48e_Param>& _12021_p) {
	if (_2220dce43_is_anon_ident(_12021_p->_field_ident) || _2220dce43_is_ignore_ident(_12021_p->_field_ident)) {
		return jule::Str();
	}
	return _22011eedd_as_local_ident(_12021_p->_field_token._field_row,_12021_p->_field_token._field_column,_12021_p->_field_ident);
}



inline jule::Str _22011eedd_struct_out_ident(jule::Ptr<_2398d04dc_Struct>& _12822_s) {
	if (_12822_s->_field_cpp_linked) {
		if (_2071abd62_has_directive(_12822_s->_field_directives,jule::Str("typedef", 7))) {
			return _12822_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12822_s->_field_ident;
	}
	return _22011eedd_as_out_ident(_12822_s->_field_ident,static_cast<jule::Uintptr>(_12822_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _22011eedd_struct_ins_out_ident(jule::Ptr<_2398d04dc_StructIns>& _13930_s) {
	if (_13930_s->_field_decl->_field_cpp_linked || (_13930_s->_field_generics.len() == 0LL)) {
		return _22011eedd_struct_out_ident(_13930_s->_field_decl);
	}
	{
		auto &expr = _13930_s->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_4679441840:;
		if (it != expr.end()) {
			jule::Int _22011eedd_i = it - expr.begin();
			jule::Ptr<_2398d04dc_StructIns> _22011eedd_ins = *it;
			{
				if (_22011eedd_ins->_method_same(_13930_s)) {
					jule::Str _14621_obj = _22011eedd_struct_out_ident(_13930_s->_field_decl);
					_14621_obj+=jule::Str("_", 1);
					_14621_obj+=_2397e4467_itoa(_22011eedd_i);
					return _14621_obj;
				}
			}
			_iter_next_4679441840:;
			++it;
			_22011eedd_i++;
			goto _iter_begin_4679441840;
		}
		_iter_end_4679441840:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _22011eedd_field_out_ident(jule::Ptr<_2398d04dc_Field>& _15721_f) {
	if (_15721_f->_field_owner->_field_cpp_linked) {
		return _15721_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _15721_f->_field_ident;
}



inline jule::Str _22011eedd_var_out_ident(jule::Ptr<_2200a2657_Var> _16522_v) {
	{
		if (!((_16522_v->_field_cpp_linked))) { goto _case_end_4679452672; }
		_case_begin_4679452672:;
		{
			return _16522_v->_field_ident;
		}
		goto _match_end_4679443984;
		_case_end_4679452672:;
		if (!((_16522_v->_field_ident == jule::Str("error", 5)))) { goto _case_end_4679450976; }
		_case_begin_4679450976:;
		{
			return jule::Str("except.error", 12);
		}
		goto _match_end_4679443984;
		_case_end_4679450976:;
		if (!((_16522_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_4679451216; }
		_case_begin_4679451216:;
		{
			if (_16522_v->_field_kind->_field_kind->_method_sptr() != nullptr) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_4679443984;
		_case_end_4679451216:;
		if (!((_16522_v->_field_scope != nullptr))) { goto _case_end_4679450608; }
		_case_begin_4679450608:;
		{
			return _22011eedd_as_local_ident(_16522_v->_field_token._field_row,_16522_v->_field_token._field_column,_16522_v->_field_ident);
		}
		goto _match_end_4679443984;
		_case_end_4679450608:;
		_case_begin_4679449600:;
		{
			return _22011eedd_as_out_ident(_16522_v->_field_ident,static_cast<jule::Uintptr>(_16522_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4679443984;
		_case_end_4679449600:;
		_match_end_4679443984:;
	}
}



inline jule::Str _22011eedd_iter_begin_label_ident(jule::Uintptr _18827_it) {
	return jule::Str("_iter_begin_", 12) + _2397e4467_itoa(static_cast<jule::Int>(_18827_it));
}



inline jule::Str _22011eedd_iter_end_label_ident(jule::Uintptr _19325_it) {
	return jule::Str("_iter_end_", 10) + _2397e4467_itoa(static_cast<jule::Int>(_19325_it));
}



inline jule::Str _22011eedd_iter_next_label_ident(jule::Uintptr _19826_it) {
	return jule::Str("_iter_next_", 11) + _2397e4467_itoa(static_cast<jule::Int>(_19826_it));
}



inline jule::Str _22011eedd_label_ident(jule::Str _20316_ident) {
	return jule::Str("_julec_label_", 13) + _20316_ident;
}



inline jule::Str _22011eedd_match_end_label_ident(jule::Uintptr _20826_m) {
	return jule::Str("_match_end_", 11) + _2397e4467_itoa(static_cast<jule::Int>(_20826_m));
}



inline jule::Str _22011eedd_case_begin_label_ident(jule::Uintptr _21327_c) {
	return jule::Str("_case_begin_", 12) + _2397e4467_itoa(static_cast<jule::Int>(_21327_c));
}



inline jule::Str _22011eedd_case_end_label_ident(jule::Uintptr _21825_c) {
	return jule::Str("_case_end_", 10) + _2397e4467_itoa(static_cast<jule::Int>(_21825_c));
}



inline jule::Ptr<_221d8b043_Directive> _2071abd62_find_directive(jule::Slice<jule::Ptr<_221d8b043_Directive>>& _2524_directives,jule::Str _2555_tag) {
	{
		auto &expr = _2524_directives;
		auto it = expr.begin();
		_iter_begin_4679465872:;
		if (it != expr.end()) {
			jule::Ptr<_221d8b043_Directive> _2071abd62_dr = *it;
			{
				if (_2071abd62_dr->_field_tag._field_kind == _2555_tag) {
					return _2071abd62_dr;
				}
			}
			_iter_next_4679465872:;
			++it;
			goto _iter_begin_4679465872;
		}
		_iter_end_4679465872:;
	}
	return nullptr;
}



inline jule::Bool _2071abd62_has_directive(jule::Slice<jule::Ptr<_221d8b043_Directive>>& _3519_directives,jule::Str _3550_tag) {
	return _2071abd62_find_directive(_3519_directives,_3550_tag) != nullptr;
}



inline jule::Str _2071abd62_gen_prim_kind(jule::Ptr<_2300b54e5_Prim> _4018_p) {
	return _22011eedd_as_jt(_4018_p->_method_to_str());
}



inline jule::Str _2071abd62_gen_tuple_kind(jule::Ptr<_2300b54e5_Tuple> _4523_t) {
	jule::Str _4613_obj = jule::Str("std::tuple<", 11);
	{
		auto &expr = _4523_t->_field_types;
		auto it = expr.begin();
		_iter_begin_4679478320:;
		if (it != expr.end()) {
			jule::Ptr<_2300b54e5_TypeKind> _2071abd62_tk = *it;
			{
				_4613_obj+=_2071abd62_gen_type_kind(_2071abd62_tk);
				_4613_obj+=jule::Str(",", 1);
			}
			_iter_next_4679478320:;
			++it;
			goto _iter_begin_4679478320;
		}
		_iter_end_4679478320:;
	}
	_4613_obj=_4613_obj.slice(0LL,_4613_obj.len() - 1LL);
	_4613_obj+=jule::Str(">", 1);
	return _4613_obj;
}



inline jule::Str _2071abd62_as_sptr_kind(jule::Str _5717_elem) {
	jule::Str _5813_obj = _22011eedd_as_jt(jule::Str("ptr", 3));
	_5813_obj+=jule::Str("<", 1);
	_5813_obj+=_5717_elem;
	_5813_obj+=jule::Str(">", 1);
	return _5813_obj;
}



inline jule::Str _2071abd62_gen_sptr_kind(jule::Ptr<_2300b54e5_Sptr> _6622_sptr) {
	return _2071abd62_as_sptr_kind(_2071abd62_gen_type_kind(_6622_sptr->_field_elem));
}



inline jule::Str _2071abd62_gen_ptr_kind(jule::Ptr<_2300b54e5_Ptr> _7121_p) {
	
	if (_7121_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _7713_elem = _2071abd62_gen_type_kind(_7121_p->_field_elem);
	_7713_elem+=jule::Str("*", 1);
	return _7713_elem;
}



inline jule::Str _2071abd62_gen_enum_kind(jule::Ptr<_23001604a_Enum> _8322_e) {
	return _2071abd62_gen_type_kind(_8322_e->_field_kind->_field_kind);
}



inline jule::Str _2071abd62_as_slice_kind(jule::Ptr<_2300b54e5_TypeKind> _8722_elem) {
	jule::Str _8813_obj = _22011eedd_as_jt(jule::Str("slice", 5));
	_8813_obj+=jule::Str("<", 1);
	_8813_obj+=_2071abd62_gen_type_kind(_8722_elem);
	_8813_obj+=jule::Str(">", 1);
	return _8813_obj;
}



inline jule::Str _2071abd62_gen_slice_kind(jule::Ptr<_2300b54e5_Slc> _9623_s) {
	return _2071abd62_as_slice_kind(_9623_s->_field_elem);
}



inline jule::Str _2071abd62_gen_map_kind(jule::Ptr<_2300b54e5_Map> _10121_m) {
	jule::Str _10213_obj = _22011eedd_as_jt(jule::Str("map", 3));
	_10213_obj+=jule::Str("<", 1);
	_10213_obj+=_2071abd62_gen_type_kind(_10121_m->_field_key);
	_10213_obj+=jule::Str(",", 1);
	_10213_obj+=_2071abd62_gen_type_kind(_10121_m->_field_val);
	_10213_obj+=jule::Str(">", 1);
	return _10213_obj;
}



inline jule::Str _2071abd62_gen_trait_kind_from_ident(jule::Str _11130_ident) {
	jule::Str _11213_obj = _22011eedd_as_jt(jule::Str("trait", 5));
	_11213_obj+=jule::Str("<", 1);
	_11213_obj+=_11130_ident;
	_11213_obj+=jule::Str(">", 1);
	return _11213_obj;
}



inline jule::Str _2071abd62_gen_trait_kind(jule::Ptr<_2300167cb_Trait> _12019_t) {
	jule::Str _1219_ident = _22011eedd_trait_out_ident(_12019_t);
	return _2071abd62_gen_trait_kind_from_ident(_1219_ident);
}



inline jule::Str _2071abd62_gen_struct_kind(jule::Ptr<_2398d04dc_Struct> _12620_s) {
	jule::Str _12713_rep = jule::Str();
	if (_12620_s->_field_cpp_linked && (!(_2071abd62_has_directive(_12620_s->_field_directives,jule::Str("typedef", 7))))) {
		_12713_rep+=jule::Str("struct ", 7);
	}
	_12713_rep+=_22011eedd_struct_out_ident(_12620_s);
	return _12713_rep;
}



inline jule::Str _2071abd62_gen_struct_kind_ins(jule::Ptr<_2398d04dc_StructIns> _13728_s) {
	if (_13728_s->_field_decl->_field_cpp_linked) {
		jule::Str _13917_ident = _22011eedd_struct_ins_out_ident(_13728_s);
		if (_13728_s->_field_generics.len() > 0LL) {
			_13917_ident+=jule::Str("<", 1);
			{
				auto &expr = _13728_s->_field_generics;
				auto it = expr.begin();
				_iter_begin_4679510176:;
				if (it != expr.end()) {
					jule::Ptr<_2300b54e5_TypeKind> _2071abd62_g = *it;
					{
						_13917_ident+=_2071abd62_gen_type_kind(_2071abd62_g);
						_13917_ident+=jule::Str(",", 1);
					}
					_iter_next_4679510176:;
					++it;
					goto _iter_begin_4679510176;
				}
				_iter_end_4679510176:;
			}
			_13917_ident=_13917_ident.slice(0LL,_13917_ident.len() - 1LL);
			_13917_ident+=jule::Str(">", 1);
		}
		jule::Ptr<_221d8b043_Directive> _14913_d = _2071abd62_find_directive(_13728_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (_14913_d != nullptr) {
			_13917_ident=(_221dad153_concat_all_parts(_14913_d->_field_args) + jule::Str("::", 2)) + _13917_ident;
		}
		return _13917_ident;
	}
	return _22011eedd_struct_ins_out_ident(_13728_s);
}



inline jule::Str _2071abd62_gen_array_kind(jule::Ptr<_2300b54e5_Arr> _15923_a) {
	jule::Str _16013_obj = _22011eedd_as_jt(jule::Str("array", 5));
	_16013_obj+=jule::Str("<", 1);
	_16013_obj+=_2071abd62_gen_type_kind(_15923_a->_field_elem);
	_16013_obj+=jule::Str(",", 1);
	_16013_obj+=_2397e4467_itoa(_15923_a->_field_n);
	_16013_obj+=jule::Str(">", 1);
	return _16013_obj;
}



inline jule::Str _2071abd62_gen_fn_anon_decl(jule::Ptr<_222edb48e_FnIns> _16925_f) {
	jule::Str _17013_decl = _207182002_gen_fn_ins_result(_16925_f);
	_17013_decl+=jule::Str("(", 1);
	if (_16925_f->_field_params.len() > 0LL) {
		{
			auto &expr = _16925_f->_field_params;
			auto it = expr.begin();
			_iter_begin_4684746048:;
			if (it != expr.end()) {
				jule::Ptr<_222edb48e_ParamIns> _2071abd62_param = *it;
				{
					if (_2071abd62_param->_field_decl->_method_is_self()) {
						goto _iter_next_4684746048;
					}
					_17013_decl+=_207182002_gen_param_ins_prototype(_2071abd62_param);
					_17013_decl+=jule::Str(",", 1);
				}
				_iter_next_4684746048:;
				++it;
				goto _iter_begin_4684746048;
			}
			_iter_end_4684746048:;
		}
		_17013_decl=_17013_decl.slice(0LL,_17013_decl.len() - 1LL);
	} else {
		_17013_decl+=jule::Str("void", 4);
	}
	_17013_decl+=jule::Str(")", 1);
	return _17013_decl;
}



inline jule::Str _2071abd62_gen_fn_kind(jule::Ptr<_222edb48e_FnIns> _19220_f) {
	jule::Str _19313_obj = _22011eedd_as_jt(jule::Str("fn", 2));
	_19313_obj+=jule::Str("<", 1);
	_19313_obj+=_2071abd62_gen_fn_anon_decl(_19220_f);
	_19313_obj+=jule::Str(">", 1);
	return _19313_obj;
}



inline jule::Str _2071abd62_gen_type_kind(jule::Ptr<_2300b54e5_TypeKind> _20122_k) {
	{
		if (!((_20122_k->_method_cpp_linked()))) { goto _case_end_4684753552; }
		_case_begin_4684753552:;
		{
			return _20122_k->_field_cpp_ident;
		}
		goto _match_end_4684751584;
		_case_end_4684753552:;
		if (!((_20122_k->_method_prim() != nullptr))) { goto _case_end_4684753648; }
		_case_begin_4684753648:;
		{
			return _2071abd62_gen_prim_kind(_20122_k->_method_prim());
		}
		goto _match_end_4684751584;
		_case_end_4684753648:;
		if (!((_20122_k->_method_tup() != nullptr))) { goto _case_end_4684753136; }
		_case_begin_4684753136:;
		{
			return _2071abd62_gen_tuple_kind(_20122_k->_method_tup());
		}
		goto _match_end_4684751584;
		_case_end_4684753136:;
		if (!((_20122_k->_method_sptr() != nullptr))) { goto _case_end_4684753232; }
		_case_begin_4684753232:;
		{
			return _2071abd62_gen_sptr_kind(_20122_k->_method_sptr());
		}
		goto _match_end_4684751584;
		_case_end_4684753232:;
		if (!((_20122_k->_method_ptr() != nullptr))) { goto _case_end_4684752768; }
		_case_begin_4684752768:;
		{
			return _2071abd62_gen_ptr_kind(_20122_k->_method_ptr());
		}
		goto _match_end_4684751584;
		_case_end_4684752768:;
		if (!((_20122_k->_method_enm() != nullptr))) { goto _case_end_4684752864; }
		_case_begin_4684752864:;
		{
			return _2071abd62_gen_enum_kind(_20122_k->_method_enm());
		}
		goto _match_end_4684751584;
		_case_end_4684752864:;
		if (!((_20122_k->_method_slc() != nullptr))) { goto _case_end_4684752960; }
		_case_begin_4684752960:;
		{
			return _2071abd62_gen_slice_kind(_20122_k->_method_slc());
		}
		goto _match_end_4684751584;
		_case_end_4684752960:;
		if (!((_20122_k->_method_map() != nullptr))) { goto _case_end_4684752128; }
		_case_begin_4684752128:;
		{
			return _2071abd62_gen_map_kind(_20122_k->_method_map());
		}
		goto _match_end_4684751584;
		_case_end_4684752128:;
		if (!((_20122_k->_method_trt() != nullptr))) { goto _case_end_4684752224; }
		_case_begin_4684752224:;
		{
			return _2071abd62_gen_trait_kind(_20122_k->_method_trt());
		}
		goto _match_end_4684751584;
		_case_end_4684752224:;
		if (!((_20122_k->_method_strct() != nullptr))) { goto _case_end_4684752320; }
		_case_begin_4684752320:;
		{
			return _2071abd62_gen_struct_kind_ins(_20122_k->_method_strct());
		}
		goto _match_end_4684751584;
		_case_end_4684752320:;
		if (!((_20122_k->_method_arr() != nullptr))) { goto _case_end_4684752416; }
		_case_begin_4684752416:;
		{
			return _2071abd62_gen_array_kind(_20122_k->_method_arr());
		}
		goto _match_end_4684751584;
		_case_end_4684752416:;
		if (!((_20122_k->_method_fnc() != nullptr))) { goto _case_end_4684753760; }
		_case_begin_4684753760:;
		{
			return _2071abd62_gen_fn_kind(_20122_k->_method_fnc());
		}
		goto _match_end_4684751584;
		_case_end_4684753760:;
		_case_begin_4684751824:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_4684751584;
		_case_end_4684751824:;
		_match_end_4684751584:;
	}
}



inline void _207182002_add_indent(void) {
	_207182002_INDENT.push(9LLU);
}



inline void _207182002_done_indent(void) {
	_207182002_INDENT=_207182002_INDENT.slice(0LL,_207182002_INDENT.len() - 1LL);
}



inline jule::Str _207182002_indent(void) {
	return static_cast<jule::Str>(_207182002_INDENT);
}



inline jule::Bool _207182002_is_cpp_header_file(jule::Str _6723_path) {
	jule::Int _689_offset = _6723_path.rfind(jule::Str(".", 1));
	if (_689_offset == -1LL) {
		return false;
	}
	return _23886cd0a_is_valid_header_ext(_6723_path.slice(_689_offset));
}



inline jule::Str _207182002_gen_links(jule::Ptr<_239823e36_IR>& _7619_ir) {
	jule::Str _7713_obj = jule::Str();
	{
		auto &expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4684784352:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _207182002_pkg = *it;
			{
				{
					if (!(((!(_207182002_pkg->_field_cpp_linked))))) { goto _case_end_4684786064; }
					_case_begin_4684786064:;
					{
						goto _iter_next_4684784352;
					}
					goto _match_end_4684785840;
					_case_end_4684786064:;
					if (!((_23886cd0a_is_std_header_path(_207182002_pkg->_field_path)))) { goto _case_end_4684786176; }
					_case_begin_4684786176:;
					{
						_7713_obj+=jule::Str("#include ", 9);
						_7713_obj+=_207182002_pkg->_field_path;
						_7713_obj+=jule::Str("\n", 1);
					}
					goto _match_end_4684785840;
					_case_end_4684786176:;
					_match_end_4684785840:;
				}
			}
			_iter_next_4684784352:;
			++it;
			goto _iter_begin_4684784352;
		}
		_iter_end_4684784352:;
	}
	{
		auto &expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4684789152:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _207182002_pkg = *it;
			{
				{
					if (!(((!(_207182002_pkg->_field_cpp_linked))))) { goto _case_end_4684790368; }
					_case_begin_4684790368:;
					{
						goto _iter_next_4684789152;
					}
					goto _match_end_4684788848;
					_case_end_4684790368:;
					if (!((_207182002_is_cpp_header_file(_207182002_pkg->_field_path)))) { goto _case_end_4684790480; }
					_case_begin_4684790480:;
					{
						_7713_obj+=jule::Str("#include \"", 10);
						_7713_obj+=_207182002_pkg->_field_path;
						_7713_obj+=jule::Str("\"\n", 2);
					}
					goto _match_end_4684788848;
					_case_end_4684790480:;
					_match_end_4684788848:;
				}
			}
			_iter_next_4684789152:;
			++it;
			goto _iter_begin_4684789152;
		}
		_iter_end_4684789152:;
	}
	return _7713_obj;
}



inline jule::Str _207182002_gen_fn_result(jule::Ptr<_222edb48e_Fn>& _10523_f) {
	if (_10523_f->_method_is_void()) {
		if (_10523_f->_field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_10523_f->_field_exceptional) {
		return (jule::Str("jule::Exceptional<", 18) + _2071abd62_gen_type_kind(_10523_f->_field_result->_field_kind->_field_kind)) + jule::Str(">", 1);
	}
	return _2071abd62_gen_type_kind(_10523_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _207182002_gen_fn_ins_result(jule::Ptr<_222edb48e_FnIns>& _11927_f) {
	if (_11927_f->_field_decl->_method_is_void()) {
		if (_11927_f->_field_decl->_field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_11927_f->_field_decl->_field_exceptional) {
		return (jule::Str("jule::Exceptional<", 18) + _2071abd62_gen_type_kind(_11927_f->_field_result)) + jule::Str(">", 1);
	}
	return _2071abd62_gen_type_kind(_11927_f->_field_result);
}



inline jule::Str _207182002_gen_param_prototype(jule::Ptr<_222edb48e_Param>& _13329_p) {
	jule::Str _13413_obj = jule::Str();
	if (_13329_p->_field_variadic) {
		_13413_obj+=_22011eedd_as_jt(jule::Str("slice", 5));
		_13413_obj+=jule::Str("<", 1);
		_13413_obj+=_2071abd62_gen_type_kind(_13329_p->_field_kind->_field_kind);
		_13413_obj+=jule::Str(">", 1);
	} else {
		_13413_obj+=_2071abd62_gen_type_kind(_13329_p->_field_kind->_field_kind);
	}
	return _13413_obj;
}



inline jule::Str _207182002_gen_param_ins(jule::Ptr<_222edb48e_ParamIns>& _14723_p) {
	jule::Str _14813_obj = _207182002_gen_param_ins_prototype(_14723_p);
	_14813_obj+=jule::Str(" ", 1);
	_14813_obj+=_22011eedd_param_out_ident(_14723_p->_field_decl);
	return _14813_obj;
}



inline jule::Str _207182002_gen_param_ins_prototype(jule::Ptr<_222edb48e_ParamIns>& _15533_p) {
	jule::Str _15613_obj = jule::Str();
	if (_15533_p->_field_decl->_field_variadic) {
		_15613_obj+=_22011eedd_as_jt(jule::Str("slice", 5));
		_15613_obj+=jule::Str("<", 1);
		_15613_obj+=_2071abd62_gen_type_kind(_15533_p->_field_kind);
		_15613_obj+=jule::Str(">", 1);
	} else {
		_15613_obj+=_2071abd62_gen_type_kind(_15533_p->_field_kind);
	}
	if (_15533_p->_field_decl->_field_reference) {
		_15613_obj+=jule::Str("&", 1);
	}
	return _15613_obj;
}



inline jule::Str _207182002_gen_param(jule::Ptr<_222edb48e_Param>& _17419_p) {
	jule::Str _17513_obj = _207182002_gen_param_prototype(_17419_p);
	if (((_17419_p->_field_ident != jule::Str()) && (!(_2220dce43_is_ignore_ident(_17419_p->_field_ident)))) && (!(_2220dce43_is_anon_ident(_17419_p->_field_ident)))) {
		_17513_obj+=jule::Str(" ", 1);
		_17513_obj+=_22011eedd_param_out_ident(_17419_p);
	}
	return _17513_obj;
}



inline jule::Str _207182002_gen_params(jule::Slice<jule::Ptr<_222edb48e_Param>>& _18420_params) {
	{
		if (!((_18420_params.len() == 0LL))) { goto _case_end_4684823584; }
		_case_begin_4684823584:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4684823360;
		_case_end_4684823584:;
		if (!(((_18420_params.len() == 1LL) && _18420_params[0LL]->_method_is_self()))) { goto _case_end_4684823696; }
		_case_begin_4684823696:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4684823360;
		_case_end_4684823696:;
		_match_end_4684823360:;
	}
	jule::Str _19313_obj = jule::Str("(", 1);
	{
		auto &expr = _18420_params;
		auto it = expr.begin();
		_iter_begin_4684827008:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Param> _207182002_p = *it;
			{
				if ((!(_207182002_p->_method_is_self()))) {
					_19313_obj+=_207182002_gen_param(_207182002_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4684827008:;
			++it;
			goto _iter_begin_4684827008;
		}
		_iter_end_4684827008:;
	}
	_19313_obj=_19313_obj.slice(0LL,_19313_obj.len() - 1LL);
	return _19313_obj + jule::Str(")", 1);
}



inline jule::Str _207182002_gen_params_ins(jule::Slice<jule::Ptr<_222edb48e_ParamIns>>& _20524_params) {
	{
		if (!((_20524_params.len() == 0LL))) { goto _case_end_4684829920; }
		_case_begin_4684829920:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4684829104;
		_case_end_4684829920:;
		if (!(((_20524_params.len() == 1LL) && _20524_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4684830016; }
		_case_begin_4684830016:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4684829104;
		_case_end_4684830016:;
		_match_end_4684829104:;
	}
	jule::Str _21413_obj = jule::Str("(", 1);
	{
		auto &expr = _20524_params;
		auto it = expr.begin();
		_iter_begin_4684836032:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_ParamIns> _207182002_p = *it;
			{
				if ((!(_207182002_p->_field_decl->_method_is_self()))) {
					_21413_obj+=_207182002_gen_param_ins(_207182002_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4684836032:;
			++it;
			goto _iter_begin_4684836032;
		}
		_iter_end_4684836032:;
	}
	_21413_obj=_21413_obj.slice(0LL,_21413_obj.len() - 1LL);
	return _21413_obj + jule::Str(")", 1);
}



inline jule::Str _207182002_gen_params_prototypes(jule::Slice<jule::Ptr<_222edb48e_ParamIns>>& _22731_params) {
	{
		if (!((_22731_params.len() == 0LL))) { goto _case_end_4684841632; }
		_case_begin_4684841632:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4684837744;
		_case_end_4684841632:;
		if (!(((_22731_params.len() == 1LL) && _22731_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4684841744; }
		_case_begin_4684841744:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4684837744;
		_case_end_4684841744:;
		_match_end_4684837744:;
	}
	jule::Str _23613_obj = jule::Str("(", 1);
	{
		auto &expr = _22731_params;
		auto it = expr.begin();
		_iter_begin_4684845936:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_ParamIns> _207182002_p = *it;
			{
				if ((!(_207182002_p->_field_decl->_method_is_self()))) {
					_23613_obj+=_207182002_gen_param_ins_prototype(_207182002_p);
					_23613_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_4684845936:;
			++it;
			goto _iter_begin_4684845936;
		}
		_iter_end_4684845936:;
	}
	_23613_obj=_23613_obj.slice(0LL,_23613_obj.len() - 1LL);
	return _23613_obj + jule::Str(")", 1);
}



inline jule::Str _207182002_gen_trait(jule::Ptr<_2300167cb_Trait>& _25019_t) {
	
	jule::Str _2529_outid = _22011eedd_trait_out_ident(_25019_t);
	jule::Str _25413_obj = jule::Str("struct ", 7);
	_25413_obj+=_2529_outid;
	_25413_obj+=jule::Str(" {\n", 3);
	_25413_obj+=jule::Str("\t", 1);
	_25413_obj+=jule::Str("virtual ~", 9);
	_25413_obj+=_2529_outid;
	_25413_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto &expr = _25019_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4684853968:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _207182002_f = *it;
			{
				_25413_obj+=jule::Str("\t", 1);
				_25413_obj+=jule::Str("virtual ", 8);
				_25413_obj+=_207182002_gen_fn_result(_207182002_f);
				_25413_obj+=jule::Str(" _method_", 9);
				_25413_obj+=_207182002_f->_field_ident;
				_25413_obj+=_207182002_gen_params(_207182002_f->_field_params);
				_25413_obj+=jule::Str(" {", 2);
				if ((!(_207182002_f->_method_is_void()))) {
					_25413_obj+=jule::Str(" return {}; ", 12);
				}
				_25413_obj+=jule::Str("}\n", 2);
			}
			_iter_next_4684853968:;
			++it;
			goto _iter_begin_4684853968;
		}
		_iter_end_4684853968:;
	}
	_25413_obj+=jule::Str("};", 2);
	return _25413_obj;
}



inline jule::Str _207182002_gen_traits_tbl(jule::Ptr<_2067a6b66_SymbolTable>& _27924_tbl) {
	jule::Str _28013_obj = jule::Str();
	{
		auto &expr = _27924_tbl->_field_traits;
		auto it = expr.begin();
		_iter_begin_4684862400:;
		if (it != expr.end()) {
			jule::Ptr<_2300167cb_Trait> _207182002_t = *it;
			{
				_28013_obj+=_207182002_gen_trait(_207182002_t);
				_28013_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4684862400:;
			++it;
			goto _iter_begin_4684862400;
		}
		_iter_end_4684862400:;
	}
	return _28013_obj;
}



inline jule::Str _207182002_gen_traits_pkg(jule::Ptr<_2200229c3_Package>& _28924_pkg) {
	jule::Str _29013_obj = jule::Str();
	{
		auto &expr = _28924_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4684865984:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _207182002_tbl = *it;
			{
				_29013_obj+=_207182002_gen_traits_tbl(_207182002_tbl);
			}
			_iter_next_4684865984:;
			++it;
			goto _iter_begin_4684865984;
		}
		_iter_end_4684865984:;
	}
	return _29013_obj;
}



inline jule::Str _207182002_gen_traits(jule::Ptr<_239823e36_IR>& _29820_ir) {
	jule::Str _29913_obj = jule::Str();
	{
		auto &expr = _29820_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4684869376:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _207182002_u = *it;
			{
				if ((!(_207182002_u->_field_cpp_linked))) {
					_29913_obj+=_207182002_gen_traits_pkg(_207182002_u->_field_package);
				}
			}
			_iter_next_4684869376:;
			++it;
			goto _iter_begin_4684869376;
		}
		_iter_end_4684869376:;
	}
	_29913_obj+=_207182002_gen_traits_pkg(_29820_ir->_field_main);
	return _29913_obj;
}



inline jule::Str _207182002_gen_trait_prototype(jule::Ptr<_2300167cb_Trait>& _31025_t) {
	jule::Str _31113_obj = jule::Str("struct ", 7);
	_31113_obj+=_22011eedd_trait_out_ident(_31025_t);
	_31113_obj+=jule::Str(";", 1);
	return _31113_obj;
}



inline jule::Str _207182002_gen_trait_prototypes(jule::Ptr<_2200229c3_Package>& _31830_p) {
	jule::Str _31913_obj = jule::Str();
	{
		auto &expr = _31830_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4684876544:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _207182002_f = *it;
			{
				{
					auto &expr = _207182002_f->_field_traits;
					auto it = expr.begin();
					_iter_begin_4684878384:;
					if (it != expr.end()) {
						jule::Ptr<_2300167cb_Trait> &_207182002_t = *it;
						{
							if (_207182002_t->_field_token._field_id != 0LLU) {
								_31913_obj+=_207182002_gen_trait_prototype(_207182002_t);
								_31913_obj+=jule::Str("\n", 1);
							}
						}
						_iter_next_4684878384:;
						++it;
						goto _iter_begin_4684878384;
					}
					_iter_end_4684878384:;
				}
			}
			_iter_next_4684876544:;
			++it;
			goto _iter_begin_4684876544;
		}
		_iter_end_4684876544:;
	}
	return _31913_obj;
}



inline jule::Str _207182002_gen_struct_plain_prototype(jule::Ptr<_2398d04dc_Struct>& _33236_s) {
	jule::Str _33313_obj = jule::Str();
	{
		auto &expr = _33236_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4684882256:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_StructIns> _207182002_ins = *it;
			{
				_33313_obj+=jule::Str("\nstruct ", 8);
				_33313_obj+=_22011eedd_struct_ins_out_ident(_207182002_ins);
				_33313_obj+=jule::Str(";", 1);
				_33313_obj+=jule::Str("\n", 1);
			}
			_iter_next_4684882256:;
			++it;
			goto _iter_begin_4684882256;
		}
		_iter_end_4684882256:;
	}
	return _33313_obj;
}



inline jule::Str _207182002_gen_struct_plain_prototypes(jule::Slice<jule::Ptr<_2398d04dc_Struct>>& _34437_structs) {
	jule::Str _34513_obj = jule::Str();
	{
		auto &expr = _34437_structs;
		auto it = expr.begin();
		_iter_begin_4684885824:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> _207182002_s = *it;
			{
				if ((!(_207182002_s->_field_cpp_linked)) && (_207182002_s->_field_token._field_id != 0LLU)) {
					_34513_obj+=_207182002_gen_struct_plain_prototype(_207182002_s);
					_34513_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4684885824:;
			++it;
			goto _iter_begin_4684885824;
		}
		_iter_end_4684885824:;
	}
	return _34513_obj;
}



inline jule::Str _207182002_gen_struct_traits(jule::Ptr<_2398d04dc_Struct>& _35623_s) {
	if (_35623_s->_field_implements.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _36113_obj = jule::Str(": ", 2);
	{
		auto &expr = _35623_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_4684891936:;
		if (it != expr.end()) {
			jule::Ptr<_2300167cb_Trait> &_207182002_i = *it;
			{
				_36113_obj+=jule::Str("public ", 7);
				_36113_obj+=_22011eedd_trait_out_ident(_207182002_i);
				_36113_obj+=jule::Str(",", 1);
			}
			_iter_next_4684891936:;
			++it;
			goto _iter_begin_4684891936;
		}
		_iter_end_4684891936:;
	}
	_36113_obj=_36113_obj.slice(0LL,_36113_obj.len() - 1LL);
	return _36113_obj;
}



inline jule::Str _207182002_gen_field_decl(jule::Ptr<_2398d04dc_FieldIns>& _37224_f) {
	jule::Str _37313_obj = _2071abd62_gen_type_kind(_37224_f->_field_kind);
	_37313_obj+=jule::Str(" ", 1);
	_37313_obj+=_22011eedd_field_out_ident(_37224_f->_field_decl);
	_37313_obj+=jule::Str(" = ", 3);
	_37313_obj+=_221dad153_get_init_expr(_37224_f->_field_kind);
	_37313_obj+=jule::Str(";", 1);
	return _37313_obj;
}



inline jule::Str _207182002_gen_struct_self_field_type_kind(jule::Ptr<_2398d04dc_StructIns>& _38241_s) {
	return _2071abd62_as_sptr_kind(_2071abd62_gen_struct_kind_ins(_38241_s));
}



inline jule::Str _207182002_gen_struct_self_field(jule::Ptr<_2398d04dc_StructIns>& _38731_s) {
	jule::Str _38813_obj = _207182002_gen_struct_self_field_type_kind(_38731_s);
	_38813_obj+=jule::Str(" self;", 6);
	return _38813_obj;
}



inline jule::Str _207182002_gen_struct_self_field_init_st(jule::Ptr<_2398d04dc_StructIns>& _39339_s) {
	jule::Str _39413_obj = jule::Str("this->self = ", 13);
	_39413_obj+=_207182002_gen_struct_self_field_type_kind(_39339_s);
	_39413_obj+=jule::Str("::make(this, nullptr);", 22);
	return _39413_obj;
}



inline jule::Str _207182002_gen_struct_constructor(jule::Ptr<_2398d04dc_StructIns>& _40032_s) {
	jule::Str _40113_obj = _22011eedd_struct_ins_out_ident(_40032_s);
	_40113_obj+=jule::Str("(", 1);
	if (_40032_s->_field_fields.len() > 0LL) {
		{
			auto &expr = _40032_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4684908016:;
			if (it != expr.end()) {
				jule::Ptr<_2398d04dc_FieldIns> _207182002_f = *it;
				{
					_40113_obj+=_2071abd62_gen_type_kind(_207182002_f->_field_kind);
					_40113_obj+=jule::Str(" __param_", 9);
					_40113_obj+=_207182002_f->_field_decl->_field_ident;
					_40113_obj+=jule::Str(", ", 2);
				}
				_iter_next_4684908016:;
				++it;
				goto _iter_begin_4684908016;
			}
			_iter_end_4684908016:;
		}
		_40113_obj=_40113_obj.slice(0LL,_40113_obj.len() - 2LL);
	} else {
		_40113_obj+=jule::Str("void", 4);
	}
	_40113_obj+=jule::Str(")", 1);
	if (_40032_s->_field_fields.len() > 0LL) {
		_40113_obj+=jule::Str(": ", 2);
		{
			auto &expr = _40032_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4684912688:;
			if (it != expr.end()) {
				jule::Ptr<_2398d04dc_FieldIns> &_207182002_f = *it;
				{
					_40113_obj+=_22011eedd_field_out_ident(_207182002_f->_field_decl);
					_40113_obj+=jule::Str("(", 1);
					_40113_obj+=jule::Str("__param_", 8);
					_40113_obj+=_207182002_f->_field_decl->_field_ident;
					_40113_obj+=jule::Str("), ", 3);
				}
				_iter_next_4684912688:;
				++it;
				goto _iter_begin_4684912688;
			}
			_iter_end_4684912688:;
		}
		_40113_obj=_40113_obj.slice(0LL,_40113_obj.len() - 2LL);
	}
	_40113_obj+=jule::Str(" {", 2);
	if (_40032_s->_field_decl->_method_has_ref_accessible()) {
		_40113_obj+=jule::Str("\n", 1);
		_207182002_add_indent();
		_40113_obj+=_207182002_indent();
		_40113_obj+=_207182002_gen_struct_self_field_init_st(_40032_s);
		_40113_obj+=jule::Str("\n", 1);
		_207182002_done_indent();
		_40113_obj+=jule::Str("\n", 1);
		_40113_obj+=_207182002_indent();
	}
	_40113_obj+=jule::Str("}", 1);
	return _40113_obj;
}



inline jule::Str _207182002_gen_struct_destructor(jule::Ptr<_2398d04dc_StructIns>& _44431_s) {
	jule::Bool _4459_disposed = _44431_s->_field_decl->_method_is_implements(_206d53311_BUILTIN_TRAIT_DISPOSE);
	jule::Bool _4469_ref_access = _44431_s->_field_decl->_method_has_ref_accessible();
	if ((!(_4469_ref_access)) && (!(_4459_disposed))) {
		return jule::Str();
	}
	jule::Str _45213_obj = jule::Str("~", 1);
	_45213_obj+=_22011eedd_struct_ins_out_ident(_44431_s);
	_45213_obj+=jule::Str("(void) { ", 9);
	if (_4459_disposed) {
		jule::Ptr<_222edb48e_Fn> _45713_dispose_method = _44431_s->_method_find_method(jule::Str("dispose", 7),false);
		_45213_obj+=jule::Str("this->", 6);
		_45213_obj+=_22011eedd_fn_out_ident(_45713_dispose_method);
		_45213_obj+=jule::Str("(); ", 4);
	}
	if (_4469_ref_access) {
		_45213_obj+=jule::Str("this->self.ref = nullptr; ", 26);
	}
	_45213_obj+=jule::Str("}", 1);
	return _45213_obj;
}



inline jule::Str _207182002_gen_struct_operators(jule::Ptr<_2398d04dc_StructIns>& _47130_s) {
	jule::Str _4729_out_ident = _22011eedd_struct_ins_out_ident(_47130_s);
	jule::Str _47313_obj = jule::Str();
	_47313_obj+=_207182002_indent();
	if (_2388c6e74_OPT_INLINE) {
		_47313_obj+=jule::Str("inline ", 7);
	}
	_47313_obj+=jule::Str("bool operator==(const ", 22);
	_47313_obj+=_4729_out_ident;
	_47313_obj+=jule::Str(" &_Src) const {", 15);
	if (_47130_s->_field_fields.len() > 0LL) {
		_207182002_add_indent();
		_47313_obj+=jule::Str("\n", 1);
		_47313_obj+=_207182002_indent();
		_47313_obj+=jule::Str("return ", 7);
		_207182002_add_indent();
		jule::Int _48817_n = 0LL;
		{
			auto &expr = _47130_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4684939248:;
			if (it != expr.end()) {
				jule::Ptr<_2398d04dc_FieldIns> _207182002_f = *it;
				{
					jule::Ptr<_2398d04dc_StructIns> _49117_strct = _207182002_f->_field_kind->_method_strct();
					if (((_49117_strct != nullptr) && (_49117_strct->_field_decl != nullptr)) && _49117_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_4684939248;
					}
					(_48817_n)++;
					_47313_obj+=jule::Str("\n", 1);
					_47313_obj+=_207182002_indent();
					_47313_obj+=jule::Str("this->", 6);
					jule::Str _50017_f_ident = _22011eedd_field_out_ident(_207182002_f->_field_decl);
					_47313_obj+=_50017_f_ident;
					_47313_obj+=jule::Str(" == _Src.", 9);
					_47313_obj+=_50017_f_ident;
					_47313_obj+=jule::Str(" &&", 3);
				}
				_iter_next_4684939248:;
				++it;
				goto _iter_begin_4684939248;
			}
			_iter_end_4684939248:;
		}
		_207182002_done_indent();
		if (_48817_n > 0LL) {
			_47313_obj=_47313_obj.slice(0LL,_47313_obj.len() - 3LL);
		} else {
			_47313_obj+=jule::Str("true", 4);
		}
		_47313_obj+=jule::Str(";\n", 2);
		_207182002_done_indent();
		_47313_obj+=_207182002_indent();
		_47313_obj+=jule::Str("}", 1);
	} else {
		_47313_obj+=jule::Str(" return true; }", 15);
	}
	_47313_obj+=jule::Str("\n\n", 2);
	_47313_obj+=_207182002_indent();
	if (_2388c6e74_OPT_INLINE) {
		_47313_obj+=jule::Str("inline ", 7);
	}
	_47313_obj+=jule::Str("bool operator!=(const ", 22);
	_47313_obj+=_4729_out_ident;
	_47313_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _47313_obj;
}



inline jule::Str _207182002_gen_struct_derive_defs_prototypes(jule::Ptr<_2398d04dc_StructIns>& _53039_s) {
	jule::Str _53113_obj = jule::Str();
	if (_53039_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_53113_obj+=_207182002_indent();
		_53113_obj+=_220228ba7_get_derive_fn_decl_clone(_53039_s->_field_decl);
		_53113_obj+=jule::Str(";\n\n", 3);
	}
	return _53113_obj;
}



inline jule::Str _207182002_gen_struct_ins_prototype(jule::Ptr<_2398d04dc_StructIns>& _54234_s) {
	jule::Str _54313_obj = jule::Str("struct ", 7);
	jule::Str _5449_out_ident = _22011eedd_struct_ins_out_ident(_54234_s);
	_54313_obj+=_5449_out_ident;
	_54313_obj+=_207182002_gen_struct_traits(_54234_s->_field_decl);
	_54313_obj+=jule::Str(" {\n", 3);
	jule::Bool _5509_ref_access = _54234_s->_field_decl->_method_has_ref_accessible();
	_207182002_add_indent();
	if (_5509_ref_access) {
		_54313_obj+=_207182002_indent();
		_54313_obj+=_207182002_gen_struct_self_field(_54234_s);
		_54313_obj+=jule::Str("\n\n", 2);
	}
	if (_54234_s->_field_fields.len() > 0LL) {
		{
			auto &expr = _54234_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4684963616:;
			if (it != expr.end()) {
				jule::Ptr<_2398d04dc_FieldIns> _207182002_f = *it;
				{
					_54313_obj+=_207182002_indent();
					_54313_obj+=_207182002_gen_field_decl(_207182002_f);
					_54313_obj+=jule::Str("\n", 1);
				}
				_iter_next_4684963616:;
				++it;
				goto _iter_begin_4684963616;
			}
			_iter_end_4684963616:;
		}
		_54313_obj+=jule::Str("\n\n", 2);
		_54313_obj+=_207182002_indent();
		_54313_obj+=_207182002_gen_struct_constructor(_54234_s);
		_54313_obj+=jule::Str("\n\n", 2);
	}
	_54313_obj+=_207182002_indent();
	_54313_obj+=_207182002_gen_struct_destructor(_54234_s);
	_54313_obj+=jule::Str("\n\n", 2);
	_54313_obj+=_207182002_indent();
	_54313_obj+=_5449_out_ident;
	if (_5509_ref_access) {
		_54313_obj+=jule::Str("(void) { ", 9);
		_54313_obj+=_207182002_gen_struct_self_field_init_st(_54234_s);
		_54313_obj+=jule::Str(" }\n\n", 4);
	} else {
		_54313_obj+=jule::Str("(void) = default;\n\n", 19);
	}
	{
		auto &expr = _54234_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4684970928:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _207182002_f = *it;
			{
				_54313_obj+=_207182002_gen_fn_prototype(_207182002_f,true);
				_54313_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4684970928:;
			++it;
			goto _iter_begin_4684970928;
		}
		_iter_end_4684970928:;
	}
	_54313_obj+=_207182002_gen_struct_derive_defs_prototypes(_54234_s);
	_54313_obj+=_207182002_gen_struct_operators(_54234_s);
	_54313_obj+=jule::Str("\n", 1);
	_207182002_done_indent();
	_54313_obj+=_207182002_indent() + jule::Str("};", 2);
	return _54313_obj;
}



inline jule::Str _207182002_gen_struct_prototype(jule::Ptr<_2398d04dc_Struct>& _60130_s) {
	jule::Str _60213_obj = jule::Str();
	{
		auto &expr = _60130_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4684976192:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_StructIns> _207182002_ins = *it;
			{
				_60213_obj+=_207182002_gen_struct_ins_prototype(_207182002_ins);
				_60213_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4684976192:;
			++it;
			goto _iter_begin_4684976192;
		}
		_iter_end_4684976192:;
	}
	return _60213_obj;
}



inline jule::Str _207182002_gen_struct_prototypes(jule::Slice<jule::Ptr<_2398d04dc_Struct>>& _61131_structs) {
	jule::Str _61213_obj = jule::Str();
	{
		auto &expr = _61131_structs;
		auto it = expr.begin();
		_iter_begin_4684979488:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> _207182002_s = *it;
			{
				if ((!(_207182002_s->_field_cpp_linked)) && (_207182002_s->_field_token._field_id != 0LLU)) {
					_61213_obj+=_207182002_gen_struct_prototype(_207182002_s);
					_61213_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4684979488:;
			++it;
			goto _iter_begin_4684979488;
		}
		_iter_end_4684979488:;
	}
	return _61213_obj;
}



inline jule::Str _207182002_gen_fn_decl_head(jule::Ptr<_222edb48e_FnIns>& _62226_f,jule::Bool _62237_method) {
	jule::Str _62313_obj = jule::Str();
	if (_62237_method && _62226_f->_field_decl->_field_statically) {
		_62313_obj+=jule::Str("static ", 7);
	}
	if (_2388c6e74_OPT_INLINE && (!(_62226_f->_field_decl->_method_is_entry_point()))) {
		_62313_obj+=jule::Str("inline ", 7);
	}
	_62313_obj+=_207182002_gen_fn_ins_result(_62226_f) + jule::Str(" ", 1);
	if ((!(_62237_method)) && (_62226_f->_field_decl->_field_owner != nullptr)) {
		_62313_obj+=_22011eedd_struct_ins_out_ident(_62226_f->_field_owner);
		_62313_obj+=jule::Str("::", 2);
	}
	_62313_obj+=_22011eedd_fn_ins_out_ident(_62226_f);
	return _62313_obj;
}



inline jule::Str _207182002_gen_fn_prototype(jule::Ptr<_222edb48e_Fn>& _64426_f,jule::Bool _64434_method) {
	jule::Str _64513_obj = jule::Str();
	{
		auto &expr = _64426_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4684993184:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_FnIns> _207182002_c = *it;
			{
				_64513_obj+=_207182002_indent();
				_64513_obj+=_207182002_gen_fn_decl_head(_207182002_c,_64434_method);
				_64513_obj+=_207182002_gen_params_prototypes(_207182002_c->_field_params);
				_64513_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4684993184:;
			++it;
			goto _iter_begin_4684993184;
		}
		_iter_end_4684993184:;
	}
	return _64513_obj;
}



inline jule::Str _207182002_gen_fn_prototypes(jule::Ptr<_2200229c3_Package>& _65627_pkg) {
	jule::Str _65713_obj = jule::Str();
	{
		auto &expr = _65627_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4684998544:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _207182002_file = *it;
			{
				{
					auto &expr = _207182002_file->_field_funcs;
					auto it = expr.begin();
					_iter_begin_4685000384:;
					if (it != expr.end()) {
						jule::Ptr<_222edb48e_Fn> _207182002_f = *it;
						{
							if ((!(_207182002_f->_field_cpp_linked)) && (_207182002_f->_field_token._field_id != 0LLU)) {
								_65713_obj+=_207182002_gen_fn_prototype(_207182002_f,false);
							}
						}
						_iter_next_4685000384:;
						++it;
						goto _iter_begin_4685000384;
					}
					_iter_end_4685000384:;
				}
			}
			_iter_next_4684998544:;
			++it;
			goto _iter_begin_4684998544;
		}
		_iter_end_4684998544:;
	}
	return _65713_obj;
}



inline jule::Str _207182002_gen_prototypes(jule::Ptr<_239823e36_IR>& _66924_ir) {
	jule::Str _67013_obj = jule::Str();
	{
		auto &expr = _66924_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4685004432:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _207182002_u = *it;
			{
				if ((!(_207182002_u->_field_cpp_linked))) {
					_67013_obj+=_207182002_gen_trait_prototypes(_207182002_u->_field_package);
				}
			}
			_iter_next_4685004432:;
			++it;
			goto _iter_begin_4685004432;
		}
		_iter_end_4685004432:;
	}
	_67013_obj+=_207182002_gen_trait_prototypes(_66924_ir->_field_main);
	_67013_obj+=_207182002_gen_struct_plain_prototypes(_66924_ir->_field_ordered._field_structs);
	_67013_obj+=_207182002_gen_traits(_66924_ir);
	_67013_obj+=jule::Str("\n", 1);
	_67013_obj+=_207182002_gen_struct_prototypes(_66924_ir->_field_ordered._field_structs);
	{
		auto &expr = _66924_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4685009536:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _207182002_u = *it;
			{
				if ((!(_207182002_u->_field_cpp_linked))) {
					_67013_obj+=_207182002_gen_fn_prototypes(_207182002_u->_field_package);
				}
			}
			_iter_next_4685009536:;
			++it;
			goto _iter_begin_4685009536;
		}
		_iter_end_4685009536:;
	}
	_67013_obj+=_207182002_gen_fn_prototypes(_66924_ir->_field_main);
	return _67013_obj;
}



inline jule::Str _207182002_gen_var_init_expr(jule::Ptr<_2200a2657_Var>& _69827_v,jule::Str _69836_init) {
	jule::Str _69913_obj = jule::Str();
	if (_69827_v->_field_statically) {
		_69913_obj+=jule::Str("static ", 7);
	}
	_69913_obj+=_2071abd62_gen_type_kind(_69827_v->_field_kind->_field_kind);
	_69913_obj+=jule::Str(" ", 1);
	if (_69827_v->_field_reference) {
		_69913_obj+=jule::Str("&", 1);
	}
	_69913_obj+=_22011eedd_var_out_ident(_69827_v);
	if (_69836_init != jule::Str()) {
		_69913_obj+=jule::Str(" = ", 3);
		_69913_obj+=_69836_init;
	}
	_69913_obj+=jule::Str(";", 1);
	return _69913_obj;
}



inline jule::Str _207182002_gen_var(jule::Ptr<_2200a2657_Var> _71916_v) {
	if (_2220dce43_is_ignore_ident(_71916_v->_field_ident)) {
		return jule::Str();
	}
	if ((_71916_v->_field_value != nullptr) && (_71916_v->_field_value->_field_expr != nullptr)) {
		if (_71916_v->_field_value->_field_data->_field_model != nullptr) {
			return _207182002_gen_var_init_expr(_71916_v,_221dad153_gen_val(_71916_v->_field_value));
		}
		return _207182002_gen_var_init_expr(_71916_v,jule::Str());
	}
	return _207182002_gen_var_init_expr(_71916_v,_221dad153_get_init_expr(_71916_v->_field_kind->_field_kind));
}



inline jule::Str _207182002_gen_globals(jule::Slice<jule::Ptr<_2200a2657_Var>>& _73421_globals) {
	jule::Str _73513_obj = jule::Str();
	{
		auto &expr = _73421_globals;
		auto it = expr.begin();
		_iter_begin_4685027792:;
		if (it != expr.end()) {
			jule::Ptr<_2200a2657_Var> _207182002_v = *it;
			{
				if (_207182002_v->_field_token._field_id != 0LLU) {
					_73513_obj+=_207182002_gen_var(_207182002_v);
					_73513_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4685027792:;
			++it;
			goto _iter_begin_4685027792;
		}
		_iter_end_4685027792:;
	}
	return _73513_obj;
}



inline jule::Str _207182002_gen_fn(jule::Ptr<_222edb48e_Fn>& _74816_f) {
	jule::Str _74913_obj = jule::Str();
	{
		auto &expr = _74816_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4685032336:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_FnIns> _207182002_ins = *it;
			{
				_74913_obj+=_207182002_gen_fn_decl_head(_207182002_ins,false);
				_74913_obj+=_207182002_gen_params_ins(_207182002_ins->_field_params);
				_74913_obj+=jule::Str(" ", 1);
				_74913_obj+=_238ade994_gen_fn_scope(_207182002_ins);
				_74913_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4685032336:;
			++it;
			goto _iter_begin_4685032336;
		}
		_iter_end_4685032336:;
	}
	return _74913_obj;
}



inline jule::Str _207182002_gen_pkg_fns(jule::Ptr<_2200229c3_Package>& _76121_p) {
	jule::Str _76213_obj = jule::Str();
	{
		auto &expr = _76121_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4685037232:;
		if (it != expr.end()) {
			jule::Ptr<_2067a6b66_SymbolTable> _207182002_f = *it;
			{
				{
					auto &expr = _207182002_f->_field_funcs;
					auto it = expr.begin();
					_iter_begin_4695541344:;
					if (it != expr.end()) {
						jule::Ptr<_222edb48e_Fn> _207182002_f = *it;
						{
							if ((!(_207182002_f->_field_cpp_linked)) && (_207182002_f->_field_token._field_id != 0LLU)) {
								_76213_obj+=_207182002_gen_fn(_207182002_f);
								_76213_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_4695541344:;
						++it;
						goto _iter_begin_4695541344;
					}
					_iter_end_4695541344:;
				}
			}
			_iter_next_4685037232:;
			++it;
			goto _iter_begin_4685037232;
		}
		_iter_end_4685037232:;
	}
	return _76213_obj;
}



inline jule::Str _207182002_gen_struct_method_defs(jule::Ptr<_2398d04dc_StructIns>& _77532_s) {
	jule::Str _77613_obj = jule::Str();
	{
		auto &expr = _77532_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4695545616:;
		if (it != expr.end()) {
			jule::Ptr<_222edb48e_Fn> _207182002_f = *it;
			{
				_77613_obj+=_207182002_indent();
				_77613_obj+=_207182002_gen_fn(_207182002_f);
				_77613_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4695545616:;
			++it;
			goto _iter_begin_4695545616;
		}
		_iter_end_4695545616:;
	}
	return _77613_obj;
}



inline jule::Str _207182002_gen_struct_ostream(jule::Ptr<_2398d04dc_StructIns>& _78628_s) {
	jule::Str _78713_obj = jule::Str();
	_78713_obj+=_207182002_indent();
	_78713_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_78713_obj+=_22011eedd_struct_ins_out_ident(_78628_s);
	_78713_obj+=jule::Str(" &_Src) {\n", 10);
	_207182002_add_indent();
	_78713_obj+=_207182002_indent();
	_78713_obj+=jule::Str("_Stream << \"", 12);
	_78713_obj+=_78628_s->_field_decl->_field_ident;
	_78713_obj+=jule::Str("{\";\n", 4);
	{
		auto &expr = _78628_s->_field_fields;
		auto it = expr.begin();
		_iter_begin_4695549232:;
		if (it != expr.end()) {
			jule::Int _207182002_i = it - expr.begin();
			jule::Ptr<_2398d04dc_FieldIns> _207182002_f = *it;
			{
				_78713_obj+=_207182002_indent();
				_78713_obj+=jule::Str("_Stream << \"", 12);
				_78713_obj+=_207182002_f->_field_decl->_field_ident;
				_78713_obj+=jule::Str(":", 1);
				jule::Ptr<_2398d04dc_StructIns> _80513_strct = _207182002_f->_field_kind->_method_strct();
				if (((_80513_strct != nullptr) && (_80513_strct->_field_decl != nullptr)) && _80513_strct->_field_decl->_field_cpp_linked) {
					_78713_obj+=jule::Str(" cpp.", 5);
					_78713_obj+=_22011eedd_field_out_ident(_207182002_f->_field_decl);
					_78713_obj+=jule::Str("\"", 1);
				} else {
					_78713_obj+=jule::Str("\" << _Src.", 10);
					_78713_obj+=_22011eedd_field_out_ident(_207182002_f->_field_decl);
				}
				if ((_207182002_i + 1LL) < _78628_s->_field_fields.len()) {
					_78713_obj+=jule::Str(" << \", \"", 8);
				}
				_78713_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4695549232:;
			++it;
			_207182002_i++;
			goto _iter_begin_4695549232;
		}
		_iter_end_4695549232:;
	}
	_78713_obj+=_207182002_indent();
	_78713_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_78713_obj+=_207182002_indent();
	_78713_obj+=jule::Str("return _Stream;\n", 16);
	_207182002_done_indent();
	_78713_obj+=_207182002_indent();
	_78713_obj+=jule::Str("}", 1);
	return _78713_obj;
}



inline jule::Str _207182002_gen_struct_derive_defs(jule::Ptr<_2398d04dc_StructIns>& _83032_s) {
	jule::Str _83113_obj = jule::Str();
	if (_83032_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_83113_obj+=_207182002_indent();
		_83113_obj+=_220228ba7_get_derive_fn_def_clone(_83032_s->_field_decl);
		_83113_obj+=jule::Str("{\n", 2);
		_207182002_add_indent();
		_83113_obj+=_207182002_indent();
		_83113_obj+=_2071abd62_gen_struct_kind_ins(_83032_s);
		_83113_obj+=jule::Str(" clone;\n", 8);
		{
			auto &expr = _83032_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4695569264:;
			if (it != expr.end()) {
				jule::Ptr<_2398d04dc_FieldIns> &_207182002_f = *it;
				{
					jule::Str _84217_ident = _22011eedd_field_out_ident(_207182002_f->_field_decl);
					_83113_obj+=_207182002_indent();
					_83113_obj+=jule::Str("clone.", 6);
					_83113_obj+=_84217_ident;
					_83113_obj+=jule::Str(" = jule::clone(this->", 21);
					_83113_obj+=_84217_ident;
					_83113_obj+=jule::Str(");\n", 3);
				}
				_iter_next_4695569264:;
				++it;
				goto _iter_begin_4695569264;
			}
			_iter_end_4695569264:;
		}
		_83113_obj+=_207182002_indent();
		_83113_obj+=jule::Str("return clone;\n", 14);
		_207182002_done_indent();
		_83113_obj+=_207182002_indent();
		_83113_obj+=jule::Str("}", 1);
	}
	return _83113_obj;
}



inline jule::Str _207182002_gen_struct_ins(jule::Ptr<_2398d04dc_StructIns>& _86224_s) {
	jule::Str _86313_obj = _207182002_gen_struct_method_defs(_86224_s);
	_86313_obj+=jule::Str("\n\n", 2);
	_86313_obj+=_207182002_gen_struct_derive_defs(_86224_s);
	_86313_obj+=jule::Str("\n\n", 2);
	_86313_obj+=_207182002_gen_struct_ostream(_86224_s);
	return _86313_obj;
}



inline jule::Str _207182002_gen_struct(jule::Ptr<_2398d04dc_Struct>& _87220_s) {
	jule::Str _87313_obj = jule::Str();
	{
		auto &expr = _87220_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4695580080:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_StructIns> _207182002_ins = *it;
			{
				_87313_obj+=_207182002_gen_struct_ins(_207182002_ins);
				_87313_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4695580080:;
			++it;
			goto _iter_begin_4695580080;
		}
		_iter_end_4695580080:;
	}
	return _87313_obj;
}



inline jule::Str _207182002_gen_structs(jule::Slice<jule::Ptr<_2398d04dc_Struct>>& _88221_structs) {
	jule::Str _88313_obj = jule::Str();
	{
		auto &expr = _88221_structs;
		auto it = expr.begin();
		_iter_begin_4695583344:;
		if (it != expr.end()) {
			jule::Ptr<_2398d04dc_Struct> _207182002_s = *it;
			{
				if ((!(_207182002_s->_field_cpp_linked)) && (_207182002_s->_field_token._field_id != 0LLU)) {
					_88313_obj+=_207182002_gen_struct(_207182002_s);
					_88313_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_4695583344:;
			++it;
			goto _iter_begin_4695583344;
		}
		_iter_end_4695583344:;
	}
	return _88313_obj;
}



inline jule::Str _207182002_gen_fns(jule::Ptr<_239823e36_IR>& _89417_ir) {
	jule::Str _89513_obj = jule::Str();
	{
		auto &expr = _89417_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4695588336:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _207182002_u = *it;
			{
				if ((!(_207182002_u->_field_cpp_linked))) {
					_89513_obj+=_207182002_gen_pkg_fns(_207182002_u->_field_package);
				}
			}
			_iter_next_4695588336:;
			++it;
			goto _iter_begin_4695588336;
		}
		_iter_end_4695588336:;
	}
	_89513_obj+=_207182002_gen_pkg_fns(_89417_ir->_field_main);
	return _89513_obj;
}



inline void _207182002_push_init(jule::Ptr<_2200229c3_Package>& _90719_pkg,jule::Str& _90739_obj) {
	
	
	jule::Ptr<_222edb48e_Fn> _9119_f = _90719_pkg->_method_find_fn(jule::Str("init", 4),false);
	if (_9119_f == nullptr) {
		return;
	}
	_90739_obj+=jule::Str("\n\t", 2);
	_90739_obj+=_22011eedd_fn_out_ident(_9119_f);
	_90739_obj+=jule::Str("();", 3);
}



inline jule::Str _207182002_gen_init_caller(jule::Ptr<_239823e36_IR>& _92225_ir) {
	jule::Str _92313_obj = jule::Str("void ", 5);
	_92313_obj+=jule::Str("__jule_call_initializers", 24);
	_92313_obj+=jule::Str("(void) {", 8);
	{
		auto &expr = _92225_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4695599664:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> _207182002_u = *it;
			{
				if ((!(_207182002_u->_field_cpp_linked))) {
					_207182002_push_init(_207182002_u->_field_package,_92313_obj);
				}
			}
			_iter_next_4695599664:;
			++it;
			goto _iter_begin_4695599664;
		}
		_iter_end_4695599664:;
	}
	_207182002_push_init(_92225_ir->_field_main,_92313_obj);
	_92313_obj+=jule::Str("\n}", 2);
	return _92313_obj;
}



inline void _207182002_append_standard(jule::Str& _93829_obj_code,jule::Str _93844_compiler,jule::Str _93859_compiler_cmd) {
	_1dce1143d_AbsTime _9399_time = _1dce1143d_Time::_static_method_now()._method_abs();
	jule::Str _94113_time_str = jule::Str();
	_94113_time_str+=_2397e4467_fmt_uint(_9399_time._field_day,10LL);
	_94113_time_str+=jule::Str("/", 1);
	_94113_time_str+=_2397e4467_fmt_uint(_9399_time._field_month,10LL);
	_94113_time_str+=jule::Str("/", 1);
	_94113_time_str+=_2397e4467_fmt_uint(_9399_time._field_year,10LL);
	_94113_time_str+=jule::Str(" ", 1);
	_94113_time_str+=_2397e4467_fmt_uint(_9399_time._field_hour,10LL);
	_94113_time_str+=jule::Str(".", 1);
	_94113_time_str+=_2397e4467_fmt_uint(_9399_time._field_minute,10LL);
	_94113_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _95313_s = jule::Str();
	_95313_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_95313_s+=jule::Str("// JuleC version: ", 18);
	_95313_s+=jule::Str("beta 0.0.6 @master", 18);
	_95313_s+=jule::Str("\n", 1);
	_95313_s+=jule::Str("// Date: ", 9);
	_95313_s+=_94113_time_str;
	_95313_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_95313_s+=_93844_compiler;
	_95313_s+=jule::Str(" ", 1);
	_95313_s+=_93859_compiler_cmd;
	_95313_s+=jule::Str("\n\n#include \"", 12);
	_95313_s+=_23890715d_PATH_API;
	_95313_s+=jule::Str("\"\n\n", 3);
	_95313_s+=_93829_obj_code;
	_95313_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    std::set_terminate(&jule::terminate_handler);\n    jule::set_sig_handler(jule::signal_handler);\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 290);
	_93829_obj_code=_95313_s;
}



inline jule::Str _207182002_gen(jule::Ptr<_239823e36_IR>& _98717_ir) {
	jule::Str _98813_obj = jule::Str();
	_98813_obj+=_207182002_gen_links(_98717_ir);
	_98813_obj+=jule::Str("\n", 1);
	_98813_obj+=_207182002_gen_prototypes(_98717_ir);
	_98813_obj+=jule::Str("\n\n", 2);
	_98813_obj+=_207182002_gen_globals(_98717_ir->_field_ordered._field_globals);
	_98813_obj+=jule::Str("\n", 1);
	_98813_obj+=_207182002_gen_structs(_98717_ir->_field_ordered._field_structs);
	_98813_obj+=_207182002_gen_fns(_98717_ir);
	_98813_obj+=jule::Str("\n", 1);
	_98813_obj+=_207182002_gen_init_caller(_98717_ir);
	_98813_obj+=jule::Str("\n", 1);
	return _98813_obj;
}



inline jule::Str _238839623_str_repeat(jule::Str _3015_sub,jule::Int _3029_n) {
	if (_3029_n == 0LL) {
		return jule::Str();
	}
	jule::Str _3513_s = jule::Str();
	for (; _3029_n > 0LL; (_3029_n)--) {
		{
			_3513_s+=_3015_sub;
		}
	_iter_next_4695871856:;
	}
	_iter_end_4695871856:;
	return _3513_s;
}



inline void _238839623_print_error_message(jule::Str _4224_msg) {
	jule::outln(_4224_msg);
}



inline void _238839623_help(jule::Slice<jule::Str>& _4510_args) {
	if (_4510_args.len() > 2LL) {
		_238839623_print_error_message(jule::Str("invalid command: ", 17) + _4510_args[2LL]);
		return;
	}
	jule::I64 _5113_max = _238839623_HELP_MAP.__at(0LL).__at(0LL).len();
	{
		auto &expr = _238839623_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_4695879984:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_238839623_k = *it;
			{
				jule::I64 _5313_n = _238839623_k.__at(0LL).len();
				if (_5313_n > _5113_max) {
					_5113_max=_5313_n;
				}
			}
			_iter_next_4695879984:;
			++it;
			goto _iter_begin_4695879984;
		}
		_iter_end_4695879984:;
	}
	jule::Str _5913_s = jule::Str();
	
	{
		auto &expr = _238839623_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_4695884944:;
		if (it != expr.end()) {
			jule::Int _238839623_i = it - expr.begin();
			jule::Array<jule::Str,2> &_238839623_part = *it;
			{
				_5913_s+=_238839623_part.__at(0LL);
				_5913_s+=_238839623_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5113_max - _238839623_part.__at(0LL).len()) + 5LL));
				_5913_s+=_238839623_part.__at(1LL);
				if ((_238839623_i + 1LL) < 4LL) {
					_5913_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_4695884944:;
			++it;
			_238839623_i++;
			goto _iter_begin_4695884944;
		}
		_iter_end_4695884944:;
	}
	jule::outln(_5913_s);
}



inline void _238839623_version(jule::Slice<jule::Str>& _7313_args) {
	if (_7313_args.len() > 2LL) {
		_238839623_print_error_message(jule::Str("invalid command: ", 17) + _7313_args[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.6 @master", 18));
}



inline void _238839623_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _2389027b8_DISTOS;
		auto it = expr.begin();
		_iter_begin_4695895232:;
		if (it != expr.end()) {
			jule::Str &_238839623_os = *it;
			{
				jule::out(_238839623_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4695895232:;
			++it;
			goto _iter_begin_4695895232;
		}
		_iter_end_4695895232:;
	}
	jule::outln(jule::Str());
}



inline void _238839623_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _2389027b8_DISTARCH;
		auto it = expr.begin();
		_iter_begin_4695896528:;
		if (it != expr.end()) {
			jule::Str &_238839623_arch = *it;
			{
				jule::out(_238839623_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4695896528:;
			++it;
			goto _iter_begin_4695896528;
		}
		_iter_end_4695896528:;
	}
	jule::outln(jule::Str());
}



inline void _238839623_tool(jule::Slice<jule::Str>& _10310_args) {
	if (_10310_args.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_10310_args.len() > 3LL) {
		_238839623_print_error_message(jule::Str("invalid command: ", 17) + _10310_args[3LL]);
		return;
	}
	jule::Str _1149_cmd = _10310_args[2LL];
	{
		auto &_match_expr{ _1149_cmd };
		if (!(_match_expr == (jule::Str("distos", 6)))) { goto _case_end_4695906688; }
		_case_begin_4695906688:;
		{
			_238839623_tool_distos();
		}
		goto _match_end_4695905840;
		_case_end_4695906688:;
		if (!(_match_expr == (jule::Str("distarch", 8)))) { goto _case_end_4695906848; }
		_case_begin_4695906848:;
		{
			_238839623_tool_distarch();
		}
		goto _match_end_4695905840;
		_case_end_4695906848:;
		_case_begin_4695901136:;
		{
			_238839623_print_error_message(jule::Str("Undefined command: ", 19) + _1149_cmd);
		}
		goto _match_end_4695905840;
		_case_end_4695901136:;
		_match_end_4695905840:;
	}
}



inline void _238839623_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.6 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln(jule::Str("default compiler: ", 18) + _23887166b_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _23887166b_CPP_STD);
}



inline jule::Bool _238839623_process_command(jule::Slice<jule::Str>& _13321_args) {
	{
		auto &_match_expr{ _13321_args[1LL] };
		if (!(_match_expr == (jule::Str("help", 4)))) { goto _case_end_4695915488; }
		_case_begin_4695915488:;
		{
			_238839623_help(_13321_args);
		}
		goto _match_end_4695913776;
		_case_end_4695915488:;
		if (!(_match_expr == (jule::Str("version", 7)))) { goto _case_end_4695915584; }
		_case_begin_4695915584:;
		{
			_238839623_version(_13321_args);
		}
		goto _match_end_4695913776;
		_case_end_4695915584:;
		if (!(_match_expr == (jule::Str("tool", 4)))) { goto _case_end_4695914128; }
		_case_begin_4695914128:;
		{
			_238839623_tool(_13321_args);
		}
		goto _match_end_4695913776;
		_case_end_4695914128:;
		if (!(_match_expr == (jule::Str("julenv", 6)))) { goto _case_end_4695914240; }
		_case_begin_4695914240:;
		{
			_238839623_julenv();
		}
		goto _match_end_4695913776;
		_case_end_4695914240:;
		_case_begin_4695909168:;
		{
			return false;
		}
		goto _match_end_4695913776;
		_case_end_4695909168:;
		_match_end_4695913776:;
	}
	return true;
}



inline void _238839623_exit_err(jule::Str _14513_msg) {
	jule::outln(_14513_msg);
	_23893acc9_exit(1LL);
}



void entry_point(void) {
	jule::Slice<jule::Str> _1519_args = _2389a04e2_args();
	if (_1519_args.len() < 2LL) {
		return;
	}
	if (_238839623_process_command(_1519_args)) {
		return;
	}
	_23887166b_compile_command(_1519_args);
}



inline void _238857e38___init_common(void) {
	_23887166b_COMPILER=jule::Str("clang", 5);
	_23887166b_COMPILER_PATH=jule::Str("clang++", 7);
}



inline void _2388706e2_init(void) {
	_238857e38___init_common();
}



inline jule::Int _23887166b_system(jule::Str _5011_cmd) {
	return static_cast<jule::Int>(static_cast<jule::Int>(system(((char*)((&(_5011_cmd[0LL])))))));
}



inline void _23887166b_write_output(jule::Str _5417_path,jule::Str _5428_content) {
	jule::Str _559_dir = _23894b9cc_dir(_5417_path);
	jule::Int _5717_err;
	std::tie(std::ignore,_5717_err) = _222bc7e6c_Status::_static_method_of(_559_dir);
	if (_5717_err != 0LLU) {
		_5717_err=_222bb918e_Directory::_static_method_create(_559_dir);
		if (_5717_err != 0LLU) {
			_238839623_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	_5717_err=_222bcb8bb_File::_static_method_write(_5417_path,static_cast<jule::Slice<jule::U8>>(_5428_content),432LL);
	if (_5717_err != 0LLU) {
		_238839623_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
}



inline void _23887166b_clear_objects(void) {
	if (_222bcb8bb_File::_static_method_remove(_23887166b_get_compile_path()) != 0LLU) {
		jule::outln(jule::Str("a problem occurs when object cleaning", 37));
		return;
	}
	_222bb918e_Directory::_static_method_remove(_23887166b_OUT_DIR);
}



inline void _23887166b_compile_ir(jule::Str _8515_compiler,jule::Str _8530_compiler_cmd) {
	jule::Int _869_status = _23887166b_system((_8515_compiler + jule::Str(" ", 1)) + _8530_compiler_cmd);
	if (_869_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_869_status);
		_238839623_exit_err(jule::Str());
	}
	_23887166b_clear_objects();
}



inline void _23887166b_do_spell(jule::Str _9713_obj,jule::Str _9723_compiler,jule::Str _9738_compiler_cmd) {
	jule::Str _989_path = _23887166b_get_compile_path();
	_23887166b_write_output(_989_path,_9713_obj);
	if ((!(_23887166b_TRANSPILATION))) {
		_23887166b_compile_ir(_9723_compiler,_9738_compiler_cmd);
	}
}



inline jule::Bool _23887166b_is_cpp_source_file(jule::Str _10523_path) {
	jule::Int _1069_offset = _10523_path.rfind(jule::Str(".", 1));
	if (_1069_offset == -1LL) {
		return false;
	}
	return _23886cd0a_is_valid_cpp_ext(_10523_path.slice(_1069_offset));
}



inline std::tuple<jule::Str,jule::Str> _23887166b_gen_compile_cmd(jule::Str _11420_source_path,jule::Ptr<_239823e36_IR>& _11439_ir) {
	jule::Str &_11510_compiler = _23887166b_COMPILER_PATH;
	
	
	
	jule::Str _1209_SET_STD = jule::Str("--std=", 6) + _23887166b_CPP_STD;
	jule::Str _12213_cmd = jule::Str("-O0", 3);
	_12213_cmd+=jule::Str(" ", 1);
	{
		auto &_match_expr{ _23887166b_COMPILER };
		if (!(_match_expr == (jule::Str("gcc", 3)))) { goto _case_end_4695960528; }
		_case_begin_4695960528:;
		{
			_12213_cmd+=jule::Str("-w", 2);
			_12213_cmd+=jule::Str(" ", 1);
		}
		goto _match_end_4695961664;
		_case_end_4695960528:;
		if (!(_match_expr == (jule::Str("clang", 5)))) { goto _case_end_4695961856; }
		_case_begin_4695961856:;
		{
			_12213_cmd+=jule::Str("-Wno-everything", 15);
			_12213_cmd+=jule::Str(" ", 1);
		}
		goto _match_end_4695961664;
		_case_end_4695961856:;
		_match_end_4695961664:;
	}
	_12213_cmd+=_1209_SET_STD;
	_12213_cmd+=jule::Str(" ", 1);
	{
		auto &expr = _11439_ir->_field_passes;
		auto it = expr.begin();
		_iter_begin_4695965088:;
		if (it != expr.end()) {
			jule::Str &_23887166b_pass = *it;
			{
				_12213_cmd+=_23887166b_pass;
				_12213_cmd+=jule::Str(" ", 1);
			}
			_iter_next_4695965088:;
			++it;
			goto _iter_begin_4695965088;
		}
		_iter_end_4695965088:;
	}
	{
		auto &expr = _11439_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4695967616:;
		if (it != expr.end()) {
			jule::Ptr<_2200229c3_ImportInfo> &_23887166b_u = *it;
			{
				if (_23887166b_u->_field_cpp_linked && _23887166b_is_cpp_source_file(_23887166b_u->_field_path)) {
					_12213_cmd+=_23887166b_u->_field_path;
					_12213_cmd+=jule::Str(" ", 1);
				}
			}
			_iter_next_4695967616:;
			++it;
			goto _iter_begin_4695967616;
		}
		_iter_end_4695967616:;
	}
	if (_23887166b_OUT != jule::Str()) {
		_12213_cmd+=jule::Str("-o ", 3);
		_12213_cmd+=_23887166b_OUT;
		_12213_cmd+=jule::Str(" ", 1);
	}
	_12213_cmd+=_11420_source_path;
	return std::make_tuple(_11510_compiler,_12213_cmd);
}



inline jule::Str _23887166b_get_compile_path(void) {
	return _23894b9cc_join(jule::Slice<jule::Str>({_23887166b_OUT_DIR,_23887166b_OUT_NAME}));
}



inline void _23887166b_apply_target_independent_optimizations(jule::Ptr<_239823e36_IR>& _17148_ir) {
	if (_2388c6e74_OPT_DEADCODE) {
		_2388c0005_eliminate(_17148_ir);
	}
}



inline void _23887166b_check_compiler_flag(void) {
	{
		auto &_match_expr{ _23887166b_COMPILER };
		if (!(_match_expr == (jule::Str()))) { goto _case_end_4695976288; }
		_case_begin_4695976288:;
		{
			_238839623_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_4695974416;
		_case_end_4695976288:;
		if (!(_match_expr == (jule::Str("clang", 5)))) { goto _case_end_4695975040; }
		_case_begin_4695975040:;
		{
			_23887166b_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_4695974416;
		_case_end_4695975040:;
		if (!(_match_expr == (jule::Str("gcc", 3)))) { goto _case_end_4695975136; }
		_case_begin_4695975136:;
		{
			_23887166b_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_4695974416;
		_case_end_4695975136:;
		_case_begin_4695973984:;
		{
			_238839623_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _23887166b_COMPILER);
		}
		goto _match_end_4695974416;
		_case_end_4695973984:;
		_match_end_4695974416:;
	}
}



inline void _23887166b_check_target_arch(jule::Str _19322_arch) {
	{
		auto &expr = _2389027b8_DISTARCH;
		auto it = expr.begin();
		_iter_begin_4695979440:;
		if (it != expr.end()) {
			jule::Str &_23887166b_distarch = *it;
			{
				if (_19322_arch == _23887166b_distarch) {
					return;
				}
			}
			_iter_next_4695979440:;
			++it;
			goto _iter_begin_4695979440;
		}
		_iter_end_4695979440:;
	}
	_238839623_exit_err(jule::Str("--target: unsupported/undefined architecture: ", 46) + _19322_arch);
}



inline void _23887166b_check_target_os(jule::Str _20320_os) {
	{
		auto &expr = _2389027b8_DISTOS;
		auto it = expr.begin();
		_iter_begin_4695982816:;
		if (it != expr.end()) {
			jule::Str &_23887166b_distos = *it;
			{
				if (_20320_os == _23887166b_distos) {
					return;
				}
			}
			_iter_next_4695982816:;
			++it;
			goto _iter_begin_4695982816;
		}
		_iter_end_4695982816:;
	}
	_238839623_exit_err(jule::Str("--target: unsupported/undefined operating system: ", 50) + _20320_os);
}



inline void _23887166b_check_target_flag(jule::Str& _21323_target) {
	if (_21323_target == jule::Str()) {
		_238839623_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2189_parts = _21323_target.split(jule::Str("-", 1),-1LL);
	if (_2189_parts.len() != 2LL) {
		_238839623_exit_err(jule::Str("--target: undefined platform target format: ", 44) + _21323_target);
	}
	jule::Str _22310_os = _2189_parts[0LL];
	jule::Str _22314_arch = _2189_parts[1LL];
	std::tie(_22310_os,_22314_arch) = std::make_tuple(_2189_parts[0LL],_2189_parts[1LL]);
	if (_22310_os != jule::Str("native", 6)) {
		_23887166b_check_target_os(_22310_os);
		_2388bea1b_OS=_22310_os;
	}
	if (_22314_arch != jule::Str("native", 6)) {
		_23887166b_check_target_arch(_22314_arch);
		_2388bea1b_ARCH=_22314_arch;
	}
}



inline void _23887166b_check_opt_flag(jule::Str& _23620_opt) {
	if (_23620_opt == jule::Str()) {
		_238839623_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _23620_opt };
		if (!(_match_expr == (jule::Str("L0", 2)))) { goto _case_end_4695999904; }
		goto _match_end_4695997920;
		_case_end_4695999904:;
		if (!(_match_expr == (jule::Str("L1", 2)))) { goto _case_end_4696000608; }
		_case_begin_4696000608:;
		{
			_2388c6e74_push_opt_level(1LLU);
		}
		goto _match_end_4695997920;
		_case_end_4696000608:;
		_case_begin_4695997152:;
		{
			_238839623_exit_err(jule::Str("--opt: invalid optimization level: ", 35) + _23620_opt);
		}
		goto _match_end_4695997920;
		_case_end_4695997152:;
		_match_end_4695997920:;
	}
}



inline jule::Slice<jule::Str> _23887166b_check_flags(jule::Slice<jule::Str>& _24817_args) {
	jule::Str _24913_opt = jule::Str("L0", 2);
	jule::Str _25013_target = jule::Str("native-native", 13);
	jule::Ptr<_1dccb6843_FlagSet> _25213_fs = _1dccb6843_FlagSet::_static_method_new();
	_25213_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_23887166b_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Let shadowing", 13));
	_25213_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_23887166b_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_25213_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_23887166b_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_25213_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_24913_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_25213_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_25013_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_25213_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_23887166b_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_25213_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_2388c6e74_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_25213_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_2388c6e74_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_25213_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_2388c6e74_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_25213_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_2388c6e74_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_25213_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_2388c6e74_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_25213_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_2388c6e74_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_25213_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_2388c6e74_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	jule::Slice<jule::Str> _26814_content;
	jule::Str _26823_err;
	std::tie(_26814_content,_26823_err) = _25213_fs->_method_parse(_24817_args.slice(1LL));
	if (_26823_err != jule::Str()) {
		_238839623_exit_err(_26823_err);
	}
	_23887166b_check_compiler_flag();
	_23887166b_check_target_flag(_25013_target);
	_23887166b_check_opt_flag(_24913_opt);
	return _26814_content;
}



inline void _23887166b_setup_sema_flags(jule::Int& _28026_flags) {
	if (_23887166b_SHADOWING) {
		_28026_flags|=1LL;
	}
}



inline jule::Ptr<_239823e36_IR> _23887166b_build_ir(jule::Slice<jule::Str>& _28614_args) {
	jule::Slice<jule::Str> _2879_content = _23887166b_check_flags(_28614_args);
	jule::Int _28913_sema_flags = 0LL;
	_23887166b_setup_sema_flags(_28913_sema_flags);
	if (_2879_content.len() == 0LL) {
		_238839623_exit_err(_23886c227_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if (_2879_content.len() > 1LL) {
		_238839623_exit_err(jule::Str("undefined content: ", 19) + _2879_content[1LL]);
	}
	jule::Str _2979_path = _2879_content[0LL];
	jule::Ptr<_222bc7e6c_Status> _30010_inf;
	jule::Int _30015_err;
	std::tie(_30010_inf,_30015_err) = _222bc7e6c_Status::_static_method_of(_23890715d_PATH_STDLIB);
	if ((_30015_err != 0LLU) || (!(_30010_inf->_method_is_dir()))) {
		_238839623_exit_err(_23886c227_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	}
	_221c201c4_init_flags();
	jule::Ptr<_239823e36_IR> _30814_ir;
	jule::Slice<_23886c227_Log> _30818_logs;
	std::tie(_30814_ir,_30818_logs) = _239823e36_IR::_static_method_build(_2979_path,_28913_sema_flags);
	if ((_30814_ir == nullptr) && (_30818_logs == nullptr)) {
		_238839623_exit_err(_23886c227_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_2979_path)})));
	}
	if (_30818_logs != nullptr) {
		_238839ed6_Logger::_static_method_print_logs(_30818_logs);
		_238839623_exit_err(jule::Str());
	}
	return _30814_ir;
}



inline void _23887166b_compile_command(jule::Slice<jule::Str>& _32321_args) {
	jule::Ptr<_239823e36_IR> _32413_ir = _23887166b_build_ir(_32321_args);
	
	jule::Ptr<_222edb48e_Fn> _32713_f = _32413_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if (_32713_f == nullptr) {
		_238839623_exit_err(_23886c227_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>()));
	}
	_32713_f->_field_statically=true;
	_32713_f=_32413_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (_32713_f != nullptr) {
		_32713_f->_field_statically=true;
	}
	_23887166b_apply_target_independent_optimizations(_32413_ir);
	_32413_ir->_method_order();
	jule::Str _34310_compiler;
	jule::Str _34320_compiler_cmd;
	std::tie(_34310_compiler,_34320_compiler_cmd) = _23887166b_gen_compile_cmd(_23887166b_get_compile_path(),_32413_ir);
	jule::Str _34513_obj = _207182002_gen(_32413_ir);
	_207182002_append_standard(_34513_obj,_34310_compiler,_34320_compiler_cmd);
	_23887166b_do_spell(_34513_obj,_34310_compiler,_34320_compiler_cmd);
}




void __jule_call_initializers(void) {
	_23890715d_init();
	_206d53311_init();
	_2388706e2_init();
}

int main(int argc, char *argv[], char *envp[]) {
    std::set_terminate(&jule::terminate_handler);
    jule::set_sig_handler(jule::signal_handler);
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}