// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 27/4/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <time.h>

struct _2299d2d4c_Importer{};
struct _229a7ce2a_Kind{};
struct _229a98e02_Lookup{};
struct _22a7c4874_CommonFlag{};
struct _2272bb1c6_Range16;
struct _2272bb649_Range32;
struct _2272bbabc_RangeTable;
struct _22737d761_accept_range;
struct _2273872d6_LazyBuff;
struct _23e89737d_DirEntry;
struct _23e7e275c_Directory;
struct _2405a4441_File;
struct _2405a4809_Status;
struct _2273d9833_Cmd;
struct _2409487a2_Log;
struct _2276b1a1c_Token;
struct _2276b6da7_File;
struct _2276b8e0e_KindPair;
struct _2276bea3b_Lex;
struct _228ce3900_Ast;
struct _228ce459e_Node;
struct _228ce499a_Directive;
struct _228d28193_TypeDecl;
struct _228d28759_IdentTypeDecl;
struct _228d28da8_SubIdentTypeDecl;
struct _228d29260_NamespaceTypeDecl;
struct _228d2954b_SptrTypeDecl;
struct _228d29947_SlcTypeDecl;
struct _228d29c33_TupleTypeDecl;
struct _228d2a01e_PtrTypeDecl;
struct _228d2a6a1_ArrTypeDecl;
struct _228d2adee_MapTypeDecl;
struct _228d2b2a6_RetTypeDecl;
struct _228d2c6b4_Expr;
struct _228d2c9a0_RangeExpr;
struct _228d2d055_UseExpr;
struct _228d2d341_TupleExpr;
struct _228d2d6e8_LitExpr;
struct _228d2de02_UnsafeExpr;
struct _228d2e2a9_CoExpr;
struct _228d2e72c_IdentExpr;
struct _228d2ee36_UnaryExpr;
struct _228d302dd_VariadicExpr;
struct _228d30695_CastExpr;
struct _228d30a4c_NsSelectionExpr;
struct _228d30ec0_SubIdentExpr;
struct _228d31443_BinopExpr;
struct _228d31982_FnCallExpr;
struct _228d32411_FieldExprPair;
struct _228d32b5e_StructLit;
struct _228d330d2_BraceLit;
struct _228d33ae9_KeyValPair;
struct _228d3406c_SliceExpr;
struct _228d3490d_IndexingExpr;
struct _228d35018_SlicingExpr;
struct _228d35304_Constraint;
struct _228d35777_GenericDecl;
struct _228d35b2e_LabelSt;
struct _228d35ed6_GotoSt;
struct _228d362c2_FallSt;
struct _228d368cc_AssignLeft;
struct _228d36e1b_AssignSt;
struct _228d37da6_Stmt;
struct _228d384b1_ScopeTree;
struct _228d38b87_ParamDecl;
struct _228d39ea7_FnDecl;
struct _228d3ae86_VarDecl;
struct _228d3b33d_RetSt;
struct _228d3b99d_Iter;
struct _228d3c273_WhileKind;
struct _228d3cb14_RangeKind;
struct _228d3cebb_BreakSt;
struct _228d3d373_ContSt;
struct _228d3d7e6_If;
struct _228d3db9d_Else;
struct _228d3e121_Conditional;
struct _228d3e7e7_TypeAliasDecl;
struct _228d3ec6a_Case;
struct _228d40441_MatchCase;
struct _228d40bd3_UseDecl;
struct _228d41156_EnumItemDecl;
struct _228d41b7e_EnumDecl;
struct _228d42685_TypeEnumItemDecl;
struct _228d42883_TypeEnumDecl;
struct _228d42dd3_FieldDecl;
struct _228d43741_StructDecl;
struct _228d43d4b_TraitDecl;
struct _228d44456_Impl;
struct _228d7b4d2_Const;
struct _22950581a_FloatInfo;
struct _229407123_DecimalSlice;
struct _22993274c_LeftCheat;
struct _229932ab0_Decimal;
struct _228d0ad8a_Field;
struct _228d1a2ea_Operators;
struct _228d188c0_Struct;
struct _228d21037_FieldIns;
struct _228dde853_OperandExprModel;
struct _228ddea40_BinopExprModel;
struct _228ddec2c_UnaryExprModel;
struct _228ddee19_StructArgExprModel;
struct _228de0106_StructLitExprModel;
struct _228de02e3_AllocStructLitExprModel;
struct _228de04d0_CastingExprModel;
struct _228de06bc_FnCallExprModel;
struct _228de08a9_SliceExprModel;
struct _228de0a96_IndexingExprModel;
struct _228de0c83_AnonFnExprModel;
struct _228de0e70_KeyValPairExprModel;
struct _228de115c_MapExprModel;
struct _228de1349_SlicingExprModel;
struct _228de1536_TraitSubIdentExprModel;
struct _228de1954_StructSubIdentExprModel;
struct _228de1b41_StructStaticIdentExprModel;
struct _228de1d2d_ArrayExprModel;
struct _228de201a_CommonIdentExprModel;
struct _228de2207_CommonSubIdentExprModel;
struct _228de23e4_TupleExprModel;
struct _228de25d1_BuiltinOutCallExprModel;
struct _228de27bd_BuiltinOutlnCallExprModel;
struct _228de29aa_BuiltinCloneCallExprModel;
struct _228de2b97_BuiltinNewCallExprModel;
struct _228de2d84_BuiltinPanicCallExprModel;
struct _228de3071_BuiltinAssertCallExprModel;
struct _228de325d_BuiltinMakeCallExprModel;
struct _228de344a_BuiltinAppendCallExprModel;
struct _228de3637_BuiltinCopyCallExprModel;
struct _228de3824_BuiltinErrorCallExprModel;
struct _228de1723_SizeofExprModel;
struct _228de3e84_AlignofExprModel;
struct _228de4171_RuneExprModel;
struct _228de435d_IntegratedToStrExprModel;
struct _228de454a_BackendEmitExprModel;
struct _228de4737_FreeExprModel;
struct _228de4cba_RetType;
struct _228de5480_Param;
struct _228de6cbc_Fn;
struct _228de8a9e_ParamIns;
struct _228de996d_FnIns;
struct _228dec234_ReferenceStack;
struct _228ded5ed_Pass;
struct _228e02a97_SymbolBuilder;
struct _22923d1bd_Trait;
struct _22908619d_EnumItem;
struct _228e0dcc3_Enum;
struct _2290786bd_TypeEnumItem;
struct _2292e1e75_TypeEnum;
struct _229938e6d_ConstraintChecker;
struct _2299a3504_Impl;
struct _2299b6c10_Scope;
struct _2299b700c_If;
struct _2299b72e8_Else;
struct _2299b76e4_Conditional;
struct _2299b79d0_InfIter;
struct _2299b7e53_WhileIter;
struct _2299b8838_RangeIter;
struct _2299b8c34_ContSt;
struct _2299b90db_BreakSt;
struct _2299b93c7_Label;
struct _2299b96b3_GotoSt;
struct _2299b9a6a_Postfix;
struct _2299b9edd_Assign;
struct _2299ba395_MultiAssign;
struct _2299ba8d4_Match;
struct _2299bb42e_Case;
struct _2299bb9d4_FallSt;
struct _2299bbe57_RetSt;
struct _2299bc562_ScopeLabel;
struct _2299bc9d5_ScopeGoto;
struct _2299bd7e9_ScopeChecker;
struct _2299ce93c_DirectiveChecker;
struct _2299d5646_ImportInfo;
struct _2299d85a0_Package;
struct _2299dd792_Sema;
struct _229a07877_MissingRetChecker;
struct _229a09538_IterRelation;
struct _229a0a4a1_Var;
struct _229a0aec9_FuncPattern;
struct _229a3b669_TypeCompatibilityChecker;
struct _229a3d292_AssignTypeChecker;
struct _229a3ebab_DynamicTypeAnnotation;
struct _229a44551_FnCallArgChecker;
struct _229a46e5a_StructLitChecker;
struct _229a48a3e_RangeChecker;
struct _229a4abc8_RetTypeChecker;
struct _229a4ca76_SymbolTable;
struct _229a527d4_Data;
struct _229a5385c_Value;
struct _229a54352_Eval;
struct _229a6ee94_UnaryEval;
struct _229a71c32_BinaryEval;
struct _229a7bb2c_InsGeneric;
struct _229a7c666_TypeAlias;
struct _229a7d359_TypeKind;
struct _229a824b2_TypeSymbol;
struct _229a82d31_Prim;
struct _229a865b5_Sptr;
struct _229a87022_Slc;
struct _229a87aa0_Tuple;
struct _229a885c8_Map;
struct _229a891bc_Arr;
struct _229a89b29_Ptr;
struct _229a8aa70_Referencer;
struct _229a8b7b8_TypeChecker;
struct _229a93ec9_IdentTypeLookup;
struct _22a422945_FileInfo;
struct _22a4774d3_stmt;
struct _22a477d0d_ScopeParser;
struct _22a4851a0_ExprBuilder;
struct _22a49051d_AssignInfo;
struct _22a493a93_Parser;
struct _22a4a4e6c_TypeBuilder;
struct _229cdd256_CompileInfo;
struct _229cde5a9_DirectiveEval;
struct _229dd6cbc_JuleImporter;
struct _229c7d8bc_OrderedDefines;
struct _22a424eec_DefineOrderer;
struct _22a56c4a7_LiveTable;
struct _22a59e077_ScopeDeadCode;
struct _22a5a3015_ExprDeadCode;
struct _2276dd395_UnsafeBinopExprModel;
struct _228203294_UnsafeIndexingExprModel;
struct _2285ee7d3_PushToSliceExprModel;
struct _228aa0a20_MutSlicingExprModel;
struct _22772aa42_StrInsertBeginExprModel;
struct _22772b9bb_ScopeOptimizer;
struct _2278cc8e7_ExprOptimizer;
struct _22a577836_Optimizer;
struct _22a5c2694_AnsiEscape;
struct _22a5c3c7d_Logger;
struct _22ab96aae_AbsTime;
struct _22ab97252_Time;
struct _22ab1ae84_ScopeCoder;
struct _22ab23a08_ExprCoder;
struct _22ab31906_DeriveCoder;
struct _22ab32d36_TestCoder;
struct _22ab35487_IdentCoder;
struct _22ab9c576_SerializationInfo;
struct _22ab9c763_TraitHash;
struct _22aba34c2_CustomType;
struct _22aba3cb9_TypeCoder;
struct _22d49a13a_Flag;
struct _22d49dced_Flag;
struct _22d4a27d5_Flag;
struct _22d4a6311_Flag;
struct _22d4a9ce8_Flag;
struct _22abd95b3_FlagSet;
struct _22a0e7571_IR;
struct _228d44c1a_StructIns;
struct _22a56c771_ObjectDeadCode;
struct _22ab9c950_ObjectCoder;
struct _22abdbc8b_ArgParser;
struct _2272bb1c6_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();
	

	_2272bb1c6_Range16(void) = default;

	inline bool operator==(_2272bb1c6_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_2272bb1c6_Range16 _other) { return !this->operator==(_other); }


};
struct _2272bb649_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();
	

	_2272bb649_Range32(void) = default;

	inline bool operator==(_2272bb649_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_2272bb649_Range32 _other) { return !this->operator==(_other); }


};
struct _2272bbabc_RangeTable {
	jule::Slice<_2272bb1c6_Range16> _field_r16 = jule::Slice<_2272bb1c6_Range16>();
	jule::Slice<_2272bb649_Range32> _field_r32 = jule::Slice<_2272bb649_Range32>();
	jule::I64 _field_latin_offset = jule::I64();
	

	_2272bbabc_RangeTable(void) = default;

	inline bool operator==(_2272bbabc_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_2272bbabc_RangeTable _other) { return !this->operator==(_other); }


};
struct _22737d761_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_22737d761_accept_range(void) = default;

	inline bool operator==(_22737d761_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_22737d761_accept_range _other) { return !this->operator==(_other); }


};
inline jule::U8 _227387759_index(_2273872d6_LazyBuff*, jule::I64);
inline void _2273879ce_append(_2273872d6_LazyBuff*, jule::U8);
inline jule::Str _227387c43_string(_2273872d6_LazyBuff*);
struct _2273872d6_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();
	

	_2273872d6_LazyBuff(void) = default;

	inline bool operator==(_2273872d6_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_2273872d6_LazyBuff _other) { return !this->operator==(_other); }


};
struct _23e89737d_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_2405a4809_Status> _field_stat = jule::Ptr<_2405a4809_Status>();
	

	_23e89737d_DirEntry(void) = default;

	inline bool operator==(_23e89737d_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_23e89737d_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_23e89737d_DirEntry>>> static__22738b8d4_read(jule::Str);
inline jule::VoidExceptional static__22738bae3_create(jule::Str);
inline jule::VoidExceptional static__22738bd02_remove(jule::Str);
struct _23e7e275c_Directory {
	

	_23e7e275c_Directory(void) = default;

	inline bool operator==(_23e7e275c_Directory _other) { return true; }

	inline bool operator!=(_23e7e275c_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_2405a4441_File>> static__23e7edbec_open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__23e7eea33_remove(jule::Str);
inline jule::Exceptional<jule::I64> _23e8015b2_write(_2405a4441_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _23e802096_read(_2405a4441_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_2405a4441_File> static__23e896190_new(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_2405a4441_File>> static__23e89636b_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__23e898406_read(jule::Str);
inline jule::VoidExceptional static__23e898eea_write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _23e89a31a_seek(_2405a4441_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _23e89756a_close(_2405a4441_File*);
struct _2405a4441_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_2405a4441_File(void) = default;

	inline bool operator==(_2405a4441_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_2405a4441_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_2405a4809_Status>> static__23e803729_of(jule::Str);
inline jule::Bool _23e7eb755_is_dir(_2405a4809_Status*);
inline jule::Bool _23e7ebcb6_is_reg(_2405a4809_Status*);
struct _2405a4809_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();
	

	_2405a4809_Status(void) = default;

	inline bool operator==(_2405a4809_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_2405a4809_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2273d9833_Cmd> static__2273d9c62_new(jule::Str);
inline jule::Exceptional<jule::I64> _2273d9ec6_spawn(_2273d9833_Cmd*);
inline jule::Exceptional<jule::I64> _2273dce63___spawn(_2273d9833_Cmd*);
struct _2273d9833_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();
	

	_2273d9833_Cmd(void) = default;

	inline bool operator==(_2273d9833_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_2273d9833_Cmd _other) { return !this->operator==(_other); }


};
struct _2409487a2_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();
	

	_2409487a2_Log(void) = default;

	inline bool operator==(_2409487a2_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_2409487a2_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _2276b1dc4_prec(_2276b1a1c_Token*);
struct _2276b1a1c_Token {
	jule::Ptr<_2276b6da7_File> _field_file = jule::Ptr<_2276b6da7_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;
	

	_2276b1a1c_Token(void) = default;

	inline bool operator==(_2276b1a1c_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_2276b1a1c_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _2276b72b4_is_ok(_2276b6da7_File*);
inline void _2276b7539_fill(_2276b6da7_File*, jule::Slice<jule::U8>);
inline jule::Str _2276b779d_dir(_2276b6da7_File*);
inline jule::Str _2276b7a12_name(_2276b6da7_File*);
inline jule::Uintptr _2276b7c76_addr(_2276b6da7_File*);
inline jule::Str _2276b8084_get_row(_2276b6da7_File*, jule::I64);
struct _2276b6da7_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_tokens = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	

	_2276b6da7_File(void) = default;

	inline bool operator==(_2276b6da7_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_2276b6da7_File _other) { return !this->operator==(_other); }


};
struct _2276b8e0e_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_2276b8e0e_KindPair(void) = default;

	inline bool operator==(_2276b8e0e_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_2276b8e0e_KindPair _other) { return !this->operator==(_other); }


};
inline void _2276c00d0_push_err(_2276bea3b_Lex*, jule::Str, jule::Slice<jule::Any>);
inline void _2276c03ee_push_err_tok(_2276bea3b_Lex*, jule::Ptr<_2276b1a1c_Token>&, jule::Str);
inline void _2276c05ca_lex(_2276bea3b_Lex*);
inline jule::Str _2276c08d8_id(_2276bea3b_Lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _2276c0b4c_resume(_2276bea3b_Lex*);
inline void _2276c0dc2_lex_line_comment(_2276bea3b_Lex*, jule::Ptr<_2276b1a1c_Token>&);
inline void _2276c1147_lex_range_comment(_2276bea3b_Lex*, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Str _2276c1455_num(_2276bea3b_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _2276c1763_escape_seq(_2276bea3b_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _2276c1b1a_get_rune(_2276bea3b_Lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _2276c1e28_lex_rune(_2276bea3b_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _2276c218c_lex_str(_2276bea3b_Lex*);
inline jule::Bool _2276c2401_is_first_token_of_line(_2276bea3b_Lex*);
inline void _2276c25cc_new_line(_2276bea3b_Lex*);
inline jule::Bool _2276c2ac7_is_op(_2276bea3b_Lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Bool _2276c2e7e_lex_basic_ops(_2276bea3b_Lex*, jule::Slice<jule::U8>, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Bool _2276c3336_lex_id(_2276bea3b_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Bool _2276c36dd_lex_num(_2276bea3b_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Ptr<_2276b1a1c_Token> _2276c3952_token(_2276bea3b_Lex*);
struct _2276bea3b_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_tokens = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	jule::Ptr<_2276b6da7_File> _field_file = jule::Ptr<_2276b6da7_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_2409487a2_Log> _field_errors = jule::Slice<_2409487a2_Log>();
	

	_2276bea3b_Lex(void) = default;

	inline bool operator==(_2276bea3b_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_2276bea3b_Lex _other) { return !this->operator==(_other); }


};
struct _228ce3900_Ast {
	jule::Ptr<_2276b6da7_File> _field_file = jule::Ptr<_2276b6da7_File>();
	jule::Slice<jule::Ptr<_228ce499a_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_228ce499a_Directive>>();
	jule::Slice<jule::Ptr<_228d40bd3_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_228d40bd3_UseDecl>>();
	jule::Slice<_228ce459e_Node> _field_nodes = jule::Slice<_228ce459e_Node>();
	

	_228ce3900_Ast(void) = default;

	inline bool operator==(_228ce3900_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_228ce3900_Ast _other) { return !this->operator==(_other); }


};
struct _228ce459e_Node {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_data = jule::Any();
	

	_228ce459e_Node(void) = default;

	inline bool operator==(_228ce459e_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_228ce459e_Node _other) { return !this->operator==(_other); }


};
struct _228ce499a_Directive {
	jule::Ptr<_2276b1a1c_Token> _field_tag = jule::Ptr<_2276b1a1c_Token>();
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_args = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	

	_228ce499a_Directive(void) = default;

	inline bool operator==(_228ce499a_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_228ce499a_Directive _other) { return !this->operator==(_other); }


};
struct _228d28193_TypeDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_kind = jule::Any();
	

	_228d28193_TypeDecl(void) = default;

	inline bool operator==(_228d28193_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_228d28193_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d28abc_is_prim(_228d28759_IdentTypeDecl*);
struct _228d28759_IdentTypeDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_228d28193_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_228d28193_TypeDecl>>();
	

	_228d28759_IdentTypeDecl(void) = default;

	inline bool operator==(_228d28759_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_228d28759_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _228d28da8_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_228d28759_IdentTypeDecl>> _field_idents = jule::Slice<jule::Ptr<_228d28759_IdentTypeDecl>>();
	

	_228d28da8_SubIdentTypeDecl(void) = default;

	inline bool operator==(_228d28da8_SubIdentTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_228d28da8_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _228d29260_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_idents = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	jule::Ptr<_228d28193_TypeDecl> _field_kind = jule::Ptr<_228d28193_TypeDecl>();
	

	_228d29260_NamespaceTypeDecl(void) = default;

	inline bool operator==(_228d29260_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_228d29260_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _228d2954b_SptrTypeDecl {
	jule::Ptr<_228d28193_TypeDecl> _field_elem = jule::Ptr<_228d28193_TypeDecl>();
	

	_228d2954b_SptrTypeDecl(void) = default;

	inline bool operator==(_228d2954b_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_228d2954b_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _228d29947_SlcTypeDecl {
	jule::Ptr<_228d28193_TypeDecl> _field_elem = jule::Ptr<_228d28193_TypeDecl>();
	

	_228d29947_SlcTypeDecl(void) = default;

	inline bool operator==(_228d29947_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_228d29947_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _228d29c33_TupleTypeDecl {
	jule::Slice<jule::Ptr<_228d28193_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_228d28193_TypeDecl>>();
	

	_228d29c33_TupleTypeDecl(void) = default;

	inline bool operator==(_228d29c33_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_228d29c33_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d2a371_is_unsafe(_228d2a01e_PtrTypeDecl*);
struct _228d2a01e_PtrTypeDecl {
	jule::Ptr<_228d28193_TypeDecl> _field_elem = jule::Ptr<_228d28193_TypeDecl>();
	

	_228d2a01e_PtrTypeDecl(void) = default;

	inline bool operator==(_228d2a01e_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_228d2a01e_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d2aa7a_auto_sized(_228d2a6a1_ArrTypeDecl*);
struct _228d2a6a1_ArrTypeDecl {
	jule::Ptr<_228d28193_TypeDecl> _field_elem = jule::Ptr<_228d28193_TypeDecl>();
	jule::Ptr<_228d2c6b4_Expr> _field_size = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d2a6a1_ArrTypeDecl(void) = default;

	inline bool operator==(_228d2a6a1_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_228d2a6a1_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _228d2adee_MapTypeDecl {
	jule::Ptr<_228d28193_TypeDecl> _field_key = jule::Ptr<_228d28193_TypeDecl>();
	jule::Ptr<_228d28193_TypeDecl> _field_val = jule::Ptr<_228d28193_TypeDecl>();
	

	_228d2adee_MapTypeDecl(void) = default;

	inline bool operator==(_228d2adee_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_228d2adee_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _228d2b2a6_RetTypeDecl {
	jule::Ptr<_228d28193_TypeDecl> _field_kind = jule::Ptr<_228d28193_TypeDecl>();
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_idents = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	

	_228d2b2a6_RetTypeDecl(void) = default;

	inline bool operator==(_228d2b2a6_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_228d2b2a6_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _228d2c6b4_Expr {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_kind = jule::Any();
	

	_228d2c6b4_Expr(void) = default;

	inline bool operator==(_228d2c6b4_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_228d2c6b4_Expr _other) { return !this->operator==(_other); }


};
struct _228d2c9a0_RangeExpr {
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d2c9a0_RangeExpr(void) = default;

	inline bool operator==(_228d2c9a0_RangeExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d2c9a0_RangeExpr _other) { return !this->operator==(_other); }


};
struct _228d2d055_UseExpr {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d2d055_UseExpr(void) = default;

	inline bool operator==(_228d2d055_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d2d055_UseExpr _other) { return !this->operator==(_other); }


};
struct _228d2d341_TupleExpr {
	jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _field_expr = jule::Slice<jule::Ptr<_228d2c6b4_Expr>>();
	

	_228d2d341_TupleExpr(void) = default;

	inline bool operator==(_228d2d341_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d2d341_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d2da4a_is_nil(_228d2d6e8_LitExpr*);
struct _228d2d6e8_LitExpr {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_value = jule::Str();
	

	_228d2d6e8_LitExpr(void) = default;

	inline bool operator==(_228d2d6e8_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_228d2d6e8_LitExpr _other) { return !this->operator==(_other); }


};
struct _228d2de02_UnsafeExpr {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d2de02_UnsafeExpr(void) = default;

	inline bool operator==(_228d2de02_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d2de02_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _228d2e2a9_CoExpr {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d2e2a9_CoExpr(void) = default;

	inline bool operator==(_228d2e2a9_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d2e2a9_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d2ea7e_is_self(_228d2e72c_IdentExpr*);
struct _228d2e72c_IdentExpr {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	

	_228d2e72c_IdentExpr(void) = default;

	inline bool operator==(_228d2e72c_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_228d2e72c_IdentExpr _other) { return !this->operator==(_other); }


};
struct _228d2ee36_UnaryExpr {
	jule::Ptr<_2276b1a1c_Token> _field_op = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d2ee36_UnaryExpr(void) = default;

	inline bool operator==(_228d2ee36_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d2ee36_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _228d302dd_VariadicExpr {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d302dd_VariadicExpr(void) = default;

	inline bool operator==(_228d302dd_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d302dd_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _228d30695_CastExpr {
	jule::Ptr<_228d28193_TypeDecl> _field_kind = jule::Ptr<_228d28193_TypeDecl>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d30695_CastExpr(void) = default;

	inline bool operator==(_228d30695_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d30695_CastExpr _other) { return !this->operator==(_other); }


};
struct _228d30a4c_NsSelectionExpr {
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_ns = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	jule::Ptr<_2276b1a1c_Token> _field_ident = jule::Ptr<_2276b1a1c_Token>();
	

	_228d30a4c_NsSelectionExpr(void) = default;

	inline bool operator==(_228d30a4c_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_228d30a4c_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _228d30ec0_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	jule::Ptr<_2276b1a1c_Token> _field_ident = jule::Ptr<_2276b1a1c_Token>();
	

	_228d30ec0_SubIdentExpr(void) = default;

	inline bool operator==(_228d30ec0_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_228d30ec0_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _228d31443_BinopExpr {
	jule::Ptr<_228d2c6b4_Expr> _field_left = jule::Ptr<_228d2c6b4_Expr>();
	jule::Ptr<_228d2c6b4_Expr> _field_right = jule::Ptr<_228d2c6b4_Expr>();
	jule::Ptr<_2276b1a1c_Token> _field_op = jule::Ptr<_2276b1a1c_Token>();
	

	_228d31443_BinopExpr(void) = default;

	inline bool operator==(_228d31443_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_228d31443_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d31ce5_unhandled(_228d31982_FnCallExpr*);
inline jule::Bool _228d32059_ignored(_228d31982_FnCallExpr*);
struct _228d31982_FnCallExpr {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _field_args = jule::Slice<jule::Ptr<_228d2c6b4_Expr>>();
	jule::Ptr<_228d384b1_ScopeTree> _field_exception = jule::Ptr<_228d384b1_ScopeTree>();
	

	_228d31982_FnCallExpr(void) = default;

	inline bool operator==(_228d31982_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_228d31982_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d32763_is_targeted(_228d32411_FieldExprPair*);
struct _228d32411_FieldExprPair {
	jule::Ptr<_2276b1a1c_Token> _field_field = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d32411_FieldExprPair(void) = default;

	inline bool operator==(_228d32411_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d32411_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _228d32b5e_StructLit {
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d28193_TypeDecl> _field_kind = jule::Ptr<_228d28193_TypeDecl>();
	jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _field_exprs = jule::Slice<jule::Ptr<_228d2c6b4_Expr>>();
	

	_228d32b5e_StructLit(void) = default;

	inline bool operator==(_228d32b5e_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_228d32b5e_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d33753_is_empty(_228d330d2_BraceLit*);
struct _228d330d2_BraceLit {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _field_exprs = jule::Slice<jule::Ptr<_228d2c6b4_Expr>>();
	

	_228d330d2_BraceLit(void) = default;

	inline bool operator==(_228d330d2_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_228d330d2_BraceLit _other) { return !this->operator==(_other); }


};
struct _228d33ae9_KeyValPair {
	jule::Ptr<_228d2c6b4_Expr> _field_key = jule::Ptr<_228d2c6b4_Expr>();
	jule::Ptr<_228d2c6b4_Expr> _field_val = jule::Ptr<_228d2c6b4_Expr>();
	jule::Ptr<_2276b1a1c_Token> _field_colon = jule::Ptr<_2276b1a1c_Token>();
	

	_228d33ae9_KeyValPair(void) = default;

	inline bool operator==(_228d33ae9_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_228d33ae9_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d343be_is_empty(_228d3406c_SliceExpr*);
struct _228d3406c_SliceExpr {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _field_exprs = jule::Slice<jule::Ptr<_228d2c6b4_Expr>>();
	

	_228d3406c_SliceExpr(void) = default;

	inline bool operator==(_228d3406c_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_228d3406c_SliceExpr _other) { return !this->operator==(_other); }


};
struct _228d3490d_IndexingExpr {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	jule::Ptr<_228d2c6b4_Expr> _field_index = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d3490d_IndexingExpr(void) = default;

	inline bool operator==(_228d3490d_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_228d3490d_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _228d35018_SlicingExpr {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	jule::Ptr<_228d2c6b4_Expr> _field_start = jule::Ptr<_228d2c6b4_Expr>();
	jule::Ptr<_228d2c6b4_Expr> _field_to = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d35018_SlicingExpr(void) = default;

	inline bool operator==(_228d35018_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_228d35018_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _228d35304_Constraint {
	jule::Slice<jule::Ptr<_228d28193_TypeDecl>> _field_mask = jule::Slice<jule::Ptr<_228d28193_TypeDecl>>();
	

	_228d35304_Constraint(void) = default;

	inline bool operator==(_228d35304_Constraint _other) {
		return 
			this->_field_mask == _other._field_mask;
	}

	inline bool operator!=(_228d35304_Constraint _other) { return !this->operator==(_other); }


};
struct _228d35777_GenericDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_228d35304_Constraint> _field_constraint = jule::Ptr<_228d35304_Constraint>();
	

	_228d35777_GenericDecl(void) = default;

	inline bool operator==(_228d35777_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_constraint == _other._field_constraint;
	}

	inline bool operator!=(_228d35777_GenericDecl _other) { return !this->operator==(_other); }


};
struct _228d35b2e_LabelSt {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	

	_228d35b2e_LabelSt(void) = default;

	inline bool operator==(_228d35b2e_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_228d35b2e_LabelSt _other) { return !this->operator==(_other); }


};
struct _228d35ed6_GotoSt {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2276b1a1c_Token> _field_label = jule::Ptr<_2276b1a1c_Token>();
	

	_228d35ed6_GotoSt(void) = default;

	inline bool operator==(_228d35ed6_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_228d35ed6_GotoSt _other) { return !this->operator==(_other); }


};
struct _228d362c2_FallSt {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	

	_228d362c2_FallSt(void) = default;

	inline bool operator==(_228d362c2_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_228d362c2_FallSt _other) { return !this->operator==(_other); }


};
struct _228d368cc_AssignLeft {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d368cc_AssignLeft(void) = default;

	inline bool operator==(_228d368cc_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d368cc_AssignLeft _other) { return !this->operator==(_other); }


};
struct _228d36e1b_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_2276b1a1c_Token> _field_setter = jule::Ptr<_2276b1a1c_Token>();
	jule::Slice<jule::Ptr<_228d368cc_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_228d368cc_AssignLeft>>();
	jule::Ptr<_228d2c6b4_Expr> _field_right = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d36e1b_AssignSt(void) = default;

	inline bool operator==(_228d36e1b_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_228d36e1b_AssignSt _other) { return !this->operator==(_other); }


};
struct _228d37da6_Stmt {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_data = jule::Any();
	

	_228d37da6_Stmt(void) = default;

	inline bool operator==(_228d37da6_Stmt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_228d37da6_Stmt _other) { return !this->operator==(_other); }


};
struct _228d384b1_ScopeTree {
	jule::Ptr<_228d384b1_ScopeTree> _field_parent = jule::Ptr<_228d384b1_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_228d37da6_Stmt> _field_stmts = jule::Slice<_228d37da6_Stmt>();
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	

	_228d384b1_ScopeTree(void) = default;

	inline bool operator==(_228d384b1_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_228d384b1_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d38eea_is_self(_228d38b87_ParamDecl*);
inline jule::Bool _228d3925e_is_ref(_228d38b87_ParamDecl*);
struct _228d38b87_ParamDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_228d28193_TypeDecl> _field_kind = jule::Ptr<_228d28193_TypeDecl>();
	jule::Str _field_ident = jule::Str();
	

	_228d38b87_ParamDecl(void) = default;

	inline bool operator==(_228d38b87_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_228d38b87_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d3a309_is_anon(_228d39ea7_FnDecl*);
struct _228d39ea7_FnDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_228ce499a_Directive>> _field_directives = jule::Slice<jule::Ptr<_228ce499a_Directive>>();
	jule::Ptr<_228d384b1_ScopeTree> _field_scope = jule::Ptr<_228d384b1_ScopeTree>();
	jule::Slice<jule::Ptr<_228d35777_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_228d35777_GenericDecl>>();
	jule::Ptr<_228d2b2a6_RetTypeDecl> _field_result = jule::Ptr<_228d2b2a6_RetTypeDecl>();
	jule::Slice<jule::Ptr<_228d38b87_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_228d38b87_ParamDecl>>();
	

	_228d39ea7_FnDecl(void) = default;

	inline bool operator==(_228d39ea7_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_228d39ea7_FnDecl _other) { return !this->operator==(_other); }


};
struct _228d3ae86_VarDecl {
	jule::Ptr<_228d384b1_ScopeTree> _field_scope = jule::Ptr<_228d384b1_ScopeTree>();
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_228ce499a_Directive>> _field_directives = jule::Slice<jule::Ptr<_228ce499a_Directive>>();
	jule::Ptr<_228d28193_TypeDecl> _field_kind = jule::Ptr<_228d28193_TypeDecl>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d3ae86_VarDecl(void) = default;

	inline bool operator==(_228d3ae86_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d3ae86_VarDecl _other) { return !this->operator==(_other); }


};
struct _228d3b33d_RetSt {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d3b33d_RetSt(void) = default;

	inline bool operator==(_228d3b33d_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d3b33d_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d3bd00_is_inf(_228d3b99d_Iter*);
struct _228d3b99d_Iter {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_228d384b1_ScopeTree> _field_scope = jule::Ptr<_228d384b1_ScopeTree>();
	

	_228d3b99d_Iter(void) = default;

	inline bool operator==(_228d3b99d_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_228d3b99d_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d3c5c5_is_while_next(_228d3c273_WhileKind*);
struct _228d3c273_WhileKind {
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_2276b1a1c_Token> _field_next_token = jule::Ptr<_2276b1a1c_Token>();
	

	_228d3c273_WhileKind(void) = default;

	inline bool operator==(_228d3c273_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_228d3c273_WhileKind _other) { return !this->operator==(_other); }


};
struct _228d3cb14_RangeKind {
	jule::Ptr<_2276b1a1c_Token> _field_in_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	jule::Ptr<_228d3ae86_VarDecl> _field_key_a = jule::Ptr<_228d3ae86_VarDecl>();
	jule::Ptr<_228d3ae86_VarDecl> _field_key_b = jule::Ptr<_228d3ae86_VarDecl>();
	

	_228d3cb14_RangeKind(void) = default;

	inline bool operator==(_228d3cb14_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_228d3cb14_RangeKind _other) { return !this->operator==(_other); }


};
struct _228d3cebb_BreakSt {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2276b1a1c_Token> _field_label = jule::Ptr<_2276b1a1c_Token>();
	

	_228d3cebb_BreakSt(void) = default;

	inline bool operator==(_228d3cebb_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_228d3cebb_BreakSt _other) { return !this->operator==(_other); }


};
struct _228d3d373_ContSt {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2276b1a1c_Token> _field_label = jule::Ptr<_2276b1a1c_Token>();
	

	_228d3d373_ContSt(void) = default;

	inline bool operator==(_228d3d373_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_228d3d373_ContSt _other) { return !this->operator==(_other); }


};
struct _228d3d7e6_If {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	jule::Ptr<_228d384b1_ScopeTree> _field_scope = jule::Ptr<_228d384b1_ScopeTree>();
	

	_228d3d7e6_If(void) = default;

	inline bool operator==(_228d3d7e6_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_228d3d7e6_If _other) { return !this->operator==(_other); }


};
struct _228d3db9d_Else {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d384b1_ScopeTree> _field_scope = jule::Ptr<_228d384b1_ScopeTree>();
	

	_228d3db9d_Else(void) = default;

	inline bool operator==(_228d3db9d_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_228d3db9d_Else _other) { return !this->operator==(_other); }


};
struct _228d3e121_Conditional {
	jule::Ptr<_228d3d7e6_If> _field_head = jule::Ptr<_228d3d7e6_If>();
	jule::Slice<jule::Ptr<_228d3d7e6_If>> _field_tail = jule::Slice<jule::Ptr<_228d3d7e6_If>>();
	jule::Ptr<_228d3db9d_Else> _field_default = jule::Ptr<_228d3db9d_Else>();
	

	_228d3e121_Conditional(void) = default;

	inline bool operator==(_228d3e121_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_228d3e121_Conditional _other) { return !this->operator==(_other); }


};
struct _228d3e7e7_TypeAliasDecl {
	jule::Ptr<_228d384b1_ScopeTree> _field_scope = jule::Ptr<_228d384b1_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_228d28193_TypeDecl> _field_kind = jule::Ptr<_228d28193_TypeDecl>();
	

	_228d3e7e7_TypeAliasDecl(void) = default;

	inline bool operator==(_228d3e7e7_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_228d3e7e7_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _228d3ec6a_Case {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d384b1_ScopeTree> _field_scope = jule::Ptr<_228d384b1_ScopeTree>();
	jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _field_exprs = jule::Slice<jule::Ptr<_228d2c6b4_Expr>>();
	

	_228d3ec6a_Case(void) = default;

	inline bool operator==(_228d3ec6a_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_228d3ec6a_Case _other) { return !this->operator==(_other); }


};
struct _228d40441_MatchCase {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	jule::Slice<jule::Ptr<_228d3ec6a_Case>> _field_cases = jule::Slice<jule::Ptr<_228d3ec6a_Case>>();
	jule::Ptr<_228d3db9d_Else> _field_default = jule::Ptr<_228d3db9d_Else>();
	

	_228d40441_MatchCase(void) = default;

	inline bool operator==(_228d40441_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_228d40441_MatchCase _other) { return !this->operator==(_other); }


};
struct _228d40bd3_UseDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_selected = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	

	_228d40bd3_UseDecl(void) = default;

	inline bool operator==(_228d40bd3_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_228d40bd3_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d414a8_auto_expr(_228d41156_EnumItemDecl*);
struct _228d41156_EnumItemDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d41156_EnumItemDecl(void) = default;

	inline bool operator==(_228d41156_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228d41156_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d42212_default_typed(_228d41b7e_EnumDecl*);
struct _228d41b7e_EnumDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_228d28193_TypeDecl> _field_kind = jule::Ptr<_228d28193_TypeDecl>();
	jule::Slice<jule::Ptr<_228d41156_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_228d41156_EnumItemDecl>>();
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	

	_228d41b7e_EnumDecl(void) = default;

	inline bool operator==(_228d41b7e_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_228d41b7e_EnumDecl _other) { return !this->operator==(_other); }


};
struct _228d42685_TypeEnumItemDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_228d28193_TypeDecl> _field_kind = jule::Ptr<_228d28193_TypeDecl>();
	

	_228d42685_TypeEnumItemDecl(void) = default;

	inline bool operator==(_228d42685_TypeEnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_228d42685_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _228d42883_TypeEnumDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_228d42685_TypeEnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_228d42685_TypeEnumItemDecl>>();
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	

	_228d42883_TypeEnumDecl(void) = default;

	inline bool operator==(_228d42883_TypeEnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_228d42883_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _228d42dd3_FieldDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_228d28193_TypeDecl> _field_kind = jule::Ptr<_228d28193_TypeDecl>();
	jule::Ptr<_228d2c6b4_Expr> _field_default = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d42dd3_FieldDecl(void) = default;

	inline bool operator==(_228d42dd3_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_228d42dd3_FieldDecl _other) { return !this->operator==(_other); }


};
struct _228d43741_StructDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_228d42dd3_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_228d42dd3_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_228ce499a_Directive>> _field_directives = jule::Slice<jule::Ptr<_228ce499a_Directive>>();
	jule::Slice<jule::Ptr<_228d35777_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_228d35777_GenericDecl>>();
	

	_228d43741_StructDecl(void) = default;

	inline bool operator==(_228d43741_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_228d43741_StructDecl _other) { return !this->operator==(_other); }


};
struct _228d43d4b_TraitDecl {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_228d39ea7_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_228d39ea7_FnDecl>>();
	

	_228d43d4b_TraitDecl(void) = default;

	inline bool operator==(_228d43d4b_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_228d43d4b_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _228d447b9_is_trait_impl(_228d44456_Impl*);
inline jule::Bool _228d44a2d_is_struct_impl(_228d44456_Impl*);
struct _228d44456_Impl {
	jule::Ptr<_2276b1a1c_Token> _field_end = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d28193_TypeDecl> _field_base = jule::Ptr<_228d28193_TypeDecl>();
	jule::Ptr<_228d28193_TypeDecl> _field_dest = jule::Ptr<_228d28193_TypeDecl>();
	jule::Slice<jule::Ptr<_228d39ea7_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_228d39ea7_FnDecl>>();
	jule::Slice<jule::Ptr<_228d3ae86_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_228d3ae86_VarDecl>>();
	

	_228d44456_Impl(void) = default;

	inline bool operator==(_228d44456_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_228d44456_Impl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_228d7b4d2_Const> static__228dd63b6_new_i64(jule::I64);
inline jule::Ptr<_228d7b4d2_Const> static__228dd64e8_new_u64(jule::U64);
inline jule::Ptr<_228d7b4d2_Const> static__228dd6680_new_bool(jule::Bool);
inline jule::Ptr<_228d7b4d2_Const> static__228dd6927_new_str(jule::Str);
inline jule::Ptr<_228d7b4d2_Const> static__228dd6bbe_new_f64(jule::F64);
inline jule::Ptr<_228d7b4d2_Const> static__228dd6dbc_new_nil(void);
inline jule::I64 _228dd74b6_read_i64(_228d7b4d2_Const*);
inline jule::U64 _228dd772a_read_u64(_228d7b4d2_Const*);
inline jule::Bool _228dd798e_read_bool(_228d7b4d2_Const*);
inline jule::Str _228dd7c03_read_str(_228d7b4d2_Const*);
inline jule::F64 _228dd7e67_read_f64(_228d7b4d2_Const*);
inline jule::I64 _228dd81cb_as_i64(_228d7b4d2_Const*);
inline jule::U64 _228dd8440_as_u64(_228d7b4d2_Const*);
inline jule::F64 _228dd86a4_as_f64(_228d7b4d2_Const*);
inline void _228dd8929_set_i64(_228d7b4d2_Const*, jule::I64);
inline void _228dd8b9e_set_u64(_228d7b4d2_Const*, jule::U64);
inline void _228dd8e24_set_bool(_228d7b4d2_Const*, jule::Bool);
inline void _228dd9199_set_str(_228d7b4d2_Const*, jule::Str);
inline void _228dd941e_set_f64(_228d7b4d2_Const*, jule::F64);
inline void _228dd95ea_set_nil(_228d7b4d2_Const*);
inline jule::Bool _228dd985e_is_i64(_228d7b4d2_Const*);
inline jule::Bool _228dd9ac3_is_u64(_228d7b4d2_Const*);
inline jule::Bool _228dd9d37_is_bool(_228d7b4d2_Const*);
inline jule::Bool _228dda09b_is_str(_228d7b4d2_Const*);
inline jule::Bool _228dda310_is_f64(_228d7b4d2_Const*);
inline jule::Bool _228dda574_is_nil(_228d7b4d2_Const*);
inline jule::Bool _228dda882_are_same_types(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddab90_and(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddae9d_or(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddb2ab_eq(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddb5b9_lt(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddb8c7_lt_eq(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddbbd5_gt(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddbee3_gt_eq(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddc301_add(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddc60e_sub(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddc91c_mul(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddcc2a_div(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddd038_mod(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddd346_bitwise_and(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddd654_bitwise_or(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228ddd962_xor(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228dddc70_lshift(_228d7b4d2_Const*, _228d7b4d2_Const);
inline jule::Bool _228dde07d_rshift(_228d7b4d2_Const*, _228d7b4d2_Const);
struct _228d7b4d2_Const {
	jule::Any _field_data = jule::Any();
	

	_228d7b4d2_Const(void) = default;

	inline jule::Bool operator==(_228d7b4d2_Const _other) { return _228ddb2ab_eq(this, _other); }

	inline bool operator!=(_228d7b4d2_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_228d7b4d2_Const _other) { return _228ddbbd5_gt(this, _other); }

	inline jule::Bool operator>=(_228d7b4d2_Const _other) { return _228ddbee3_gt_eq(this, _other); }

	inline jule::Bool operator<(_228d7b4d2_Const _other) { return _228ddb5b9_lt(this, _other); }

	inline jule::Bool operator<=(_228d7b4d2_Const _other) { return _228ddb8c7_lt_eq(this, _other); }


};
struct _22950581a_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_22950581a_FloatInfo(void) = default;

	inline bool operator==(_22950581a_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_22950581a_FloatInfo _other) { return !this->operator==(_other); }


};
struct _229407123_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_229407123_DecimalSlice(void) = default;

	inline bool operator==(_229407123_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_229407123_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _22993274c_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_22993274c_LeftCheat(void) = default;

	inline bool operator==(_22993274c_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_22993274c_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _229799251_set(_229932ab0_Decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _2294174da_float_bits(_229932ab0_Decimal*, _22950581a_FloatInfo&);
inline void _229932c9c_assign(_229932ab0_Decimal*, jule::U64);
inline void _229932dce_shift(_229932ab0_Decimal*, jule::I64);
inline void _229933011_round_down(_229932ab0_Decimal*, jule::I64);
inline void _229933143_round_up(_229932ab0_Decimal*, jule::I64);
inline void _229933275_round(_229932ab0_Decimal*, jule::I64);
inline jule::U64 _2299333a7_rounded_integer(_229932ab0_Decimal*);
struct _229932ab0_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_229932ab0_Decimal(void) = default;

	inline bool operator==(_229932ab0_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_229932ab0_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_228d21037_FieldIns> _228ce9bd1_instance(jule::Ptr<_228d0ad8a_Field>);
struct _228d0ad8a_Field {
	jule::Ptr<_228d188c0_Struct> _field_owner = jule::Ptr<_228d188c0_Struct>();
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_229a824b2_TypeSymbol> _field_kind = jule::Ptr<_229a824b2_TypeSymbol>();
	jule::Ptr<_228d2c6b4_Expr> _field_default = jule::Ptr<_228d2c6b4_Expr>();
	

	_228d0ad8a_Field(void) = default;

	inline bool operator==(_228d0ad8a_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_228d0ad8a_Field _other) { return !this->operator==(_other); }


};
struct _228d1a2ea_Operators {
	jule::Ptr<_228de996d_FnIns> _field_eq = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_gt = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_gt_eq = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_lt = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_lt_eq = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_shl = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_shr = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_add = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_sub = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_div = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_mul = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_mod = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_bit_and = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_bit_or = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_bit_xor = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_neg = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_pos = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_bit_not = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_add_assign = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_sub_assign = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_div_assign = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_mul_assign = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_mod_assign = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_shl_assign = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_shr_assign = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_bit_or_assign = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_bit_and_assign = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de996d_FnIns> _field_bit_xor_assign = jule::Ptr<_228de996d_FnIns>();
	

	_228d1a2ea_Operators(void) = default;

	inline bool operator==(_228d1a2ea_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_228d1a2ea_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_228d44c1a_StructIns> _228d00cc5_instance(jule::Ptr<_228d188c0_Struct>);
inline jule::Ptr<_228d44c1a_StructIns> _228d0503d_append_instance(_228d188c0_Struct*, jule::Ptr<_228d44c1a_StructIns>&);
inline jule::Ptr<_228de6cbc_Fn> _228d07cdd_find_method(_228d188c0_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_229a0a4a1_Var> _228d08d00_find_static(_228d188c0_Struct*, jule::Str);
inline jule::Ptr<_228d0ad8a_Field> _228d0823e_find_field(_228d188c0_Struct*, jule::Str);
inline jule::Bool _228d0a51b_is_implements(_228d188c0_Struct*, jule::Ptr<_22923d1bd_Trait>);
inline jule::Bool _228d09927_is_derives(_228d188c0_Struct*, jule::Str);
inline jule::Bool _228d0d6c8_is_uses(_228d188c0_Struct*, jule::Ptr<_228d188c0_Struct>);
inline jule::Bool _228d0dd8d_has_ref_accessible(_228d188c0_Struct*);
struct _228d188c0_Struct {
	jule::Ptr<_2299dd792_Sema> _field_sema = jule::Ptr<_2299dd792_Sema>();
	jule::Slice<jule::Ptr<_228d188c0_Struct>> _field_depends = jule::Slice<jule::Ptr<_228d188c0_Struct>>();
	jule::Slice<jule::Ptr<_228d188c0_Struct>> _field_uses = jule::Slice<jule::Ptr<_228d188c0_Struct>>();
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_228d0ad8a_Field>> _field_fields = jule::Slice<jule::Ptr<_228d0ad8a_Field>>();
	jule::Slice<jule::Ptr<_228de6cbc_Fn>> _field_methods = jule::Slice<jule::Ptr<_228de6cbc_Fn>>();
	jule::Slice<jule::Ptr<_229a0a4a1_Var>> _field_statics = jule::Slice<jule::Ptr<_229a0a4a1_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_228ce499a_Directive>> _field_directives = jule::Slice<jule::Ptr<_228ce499a_Directive>>();
	jule::Slice<jule::Ptr<_228d35777_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_228d35777_GenericDecl>>();
	jule::Slice<jule::Ptr<_22923d1bd_Trait>> _field_implements = jule::Slice<jule::Ptr<_22923d1bd_Trait>>();
	jule::Slice<jule::Ptr<_228d44c1a_StructIns>> _field_instances = jule::Slice<jule::Ptr<_228d44c1a_StructIns>>();
	

	_228d188c0_Struct(void) = default;

	inline bool operator==(_228d188c0_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_228d188c0_Struct _other) { return !this->operator==(_other); }


};
struct _228d21037_FieldIns {
	jule::Ptr<_228d0ad8a_Field> _field_decl = jule::Ptr<_228d0ad8a_Field>();
	jule::Ptr<_229a7d359_TypeKind> _field_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Ptr<_229a527d4_Data> _field_default = jule::Ptr<_229a527d4_Data>();
	

	_228d21037_FieldIns(void) = default;

	inline bool operator==(_228d21037_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_228d21037_FieldIns _other) { return !this->operator==(_other); }


};
struct _228dde853_OperandExprModel {
	jule::Ptr<_229a7d359_TypeKind> _field_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Any _field_model = jule::Any();
	

	_228dde853_OperandExprModel(void) = default;

	inline bool operator==(_228dde853_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_228dde853_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _228ddea40_BinopExprModel {
	jule::Ptr<_228dde853_OperandExprModel> _field_left = jule::Ptr<_228dde853_OperandExprModel>();
	jule::Ptr<_228dde853_OperandExprModel> _field_right = jule::Ptr<_228dde853_OperandExprModel>();
	jule::Ptr<_2276b1a1c_Token> _field_op = jule::Ptr<_2276b1a1c_Token>();
	

	_228ddea40_BinopExprModel(void) = default;

	inline bool operator==(_228ddea40_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_228ddea40_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _228ddec2c_UnaryExprModel {
	jule::Ptr<_229a527d4_Data> _field_expr = jule::Ptr<_229a527d4_Data>();
	jule::Ptr<_2276b1a1c_Token> _field_op = jule::Ptr<_2276b1a1c_Token>();
	

	_228ddec2c_UnaryExprModel(void) = default;

	inline bool operator==(_228ddec2c_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_228ddec2c_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _228ddee19_StructArgExprModel {
	jule::Ptr<_228d21037_FieldIns> _field_field = jule::Ptr<_228d21037_FieldIns>();
	jule::Any _field_expr = jule::Any();
	

	_228ddee19_StructArgExprModel(void) = default;

	inline bool operator==(_228ddee19_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228ddee19_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _228de0106_StructLitExprModel {
	jule::Ptr<_228d44c1a_StructIns> _field_strct = jule::Ptr<_228d44c1a_StructIns>();
	jule::Slice<jule::Ptr<_228ddee19_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_228ddee19_StructArgExprModel>>();
	

	_228de0106_StructLitExprModel(void) = default;

	inline bool operator==(_228de0106_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_228de0106_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _228de02e3_AllocStructLitExprModel {
	jule::Ptr<_228de0106_StructLitExprModel> _field_lit = jule::Ptr<_228de0106_StructLitExprModel>();
	

	_228de02e3_AllocStructLitExprModel(void) = default;

	inline bool operator==(_228de02e3_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_228de02e3_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _228de04d0_CastingExprModel {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_229a7d359_TypeKind> _field_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Ptr<_229a7d359_TypeKind> _field_expr_kind = jule::Ptr<_229a7d359_TypeKind>();
	

	_228de04d0_CastingExprModel(void) = default;

	inline bool operator==(_228de04d0_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_228de04d0_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _228de06bc_FnCallExprModel {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228de996d_FnIns> _field_func = jule::Ptr<_228de996d_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_2299b6c10_Scope> _field_except = jule::Ptr<_2299b6c10_Scope>();
	jule::Bool _field_assigned = jule::Bool();
	

	_228de06bc_FnCallExprModel(void) = default;

	inline bool operator==(_228de06bc_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_228de06bc_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _228de08a9_SliceExprModel {
	jule::Ptr<_229a7d359_TypeKind> _field_elem_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_228de08a9_SliceExprModel(void) = default;

	inline bool operator==(_228de08a9_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_228de08a9_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _228de0a96_IndexingExprModel {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_229a527d4_Data> _field_expr = jule::Ptr<_229a527d4_Data>();
	jule::Ptr<_229a527d4_Data> _field_index = jule::Ptr<_229a527d4_Data>();
	

	_228de0a96_IndexingExprModel(void) = default;

	inline bool operator==(_228de0a96_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_228de0a96_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _228de0c83_AnonFnExprModel {
	jule::Ptr<_228de996d_FnIns> _field_func = jule::Ptr<_228de996d_FnIns>();
	jule::Bool _field_global = jule::Bool();
	

	_228de0c83_AnonFnExprModel(void) = default;

	inline bool operator==(_228de0c83_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_228de0c83_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _228de0e70_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	

	_228de0e70_KeyValPairExprModel(void) = default;

	inline bool operator==(_228de0e70_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_228de0e70_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _228de115c_MapExprModel {
	jule::Ptr<_229a7d359_TypeKind> _field_key_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Ptr<_229a7d359_TypeKind> _field_val_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Slice<jule::Ptr<_228de0e70_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_228de0e70_KeyValPairExprModel>>();
	

	_228de115c_MapExprModel(void) = default;

	inline bool operator==(_228de115c_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_228de115c_MapExprModel _other) { return !this->operator==(_other); }


};
struct _228de1349_SlicingExprModel {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_228de1349_SlicingExprModel(void) = default;

	inline bool operator==(_228de1349_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_228de1349_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _228de1536_TraitSubIdentExprModel {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_228de6cbc_Fn> _field_method = jule::Ptr<_228de6cbc_Fn>();
	jule::Ptr<_22923d1bd_Trait> _field_trt = jule::Ptr<_22923d1bd_Trait>();
	

	_228de1536_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_228de1536_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_228de1536_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _228de1954_StructSubIdentExprModel {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_229a527d4_Data> _field_expr = jule::Ptr<_229a527d4_Data>();
	jule::Ptr<_229a7d359_TypeKind> _field_expr_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Ptr<_228de996d_FnIns> _field_method = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228d21037_FieldIns> _field_field = jule::Ptr<_228d21037_FieldIns>();
	

	_228de1954_StructSubIdentExprModel(void) = default;

	inline bool operator==(_228de1954_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_228de1954_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _228de1b41_StructStaticIdentExprModel {
	jule::Ptr<_228d44c1a_StructIns> _field_structure = jule::Ptr<_228d44c1a_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_228de996d_FnIns> _field_method = jule::Ptr<_228de996d_FnIns>();
	

	_228de1b41_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_228de1b41_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_228de1b41_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _228de1d2d_ArrayExprModel {
	jule::Ptr<_229a891bc_Arr> _field_kind = jule::Ptr<_229a891bc_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_228de1d2d_ArrayExprModel(void) = default;

	inline bool operator==(_228de1d2d_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_228de1d2d_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _228de201a_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();
	

	_228de201a_CommonIdentExprModel(void) = default;

	inline bool operator==(_228de201a_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_228de201a_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _228de2207_CommonSubIdentExprModel {
	jule::Ptr<_229a7d359_TypeKind> _field_expr_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	

	_228de2207_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_228de2207_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_228de2207_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _228de23e4_TupleExprModel {
	jule::Slice<jule::Ptr<_229a527d4_Data>> _field_datas = jule::Slice<jule::Ptr<_229a527d4_Data>>();
	

	_228de23e4_TupleExprModel(void) = default;

	inline bool operator==(_228de23e4_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_228de23e4_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _228de25d1_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_228de25d1_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_228de25d1_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_228de25d1_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _228de27bd_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_228de27bd_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_228de27bd_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_228de27bd_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _228de29aa_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();
	

	_228de29aa_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_228de29aa_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228de29aa_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _228de2b97_BuiltinNewCallExprModel {
	jule::Ptr<_229a7d359_TypeKind> _field_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Any _field_init = jule::Any();
	

	_228de2b97_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_228de2b97_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_228de2b97_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _228de2d84_BuiltinPanicCallExprModel {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_expr = jule::Any();
	

	_228de2d84_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_228de2d84_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228de2d84_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _228de3071_BuiltinAssertCallExprModel {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();
	

	_228de3071_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_228de3071_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_228de3071_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _228de325d_BuiltinMakeCallExprModel {
	jule::Ptr<_229a7d359_TypeKind> _field_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();
	

	_228de325d_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_228de325d_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_228de325d_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _228de344a_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();
	

	_228de344a_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_228de344a_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_228de344a_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _228de3637_BuiltinCopyCallExprModel {
	jule::Ptr<_229a527d4_Data> _field_dest = jule::Ptr<_229a527d4_Data>();
	jule::Ptr<_229a527d4_Data> _field_src = jule::Ptr<_229a527d4_Data>();
	

	_228de3637_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_228de3637_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src;
	}

	inline bool operator!=(_228de3637_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _228de3824_BuiltinErrorCallExprModel {
	jule::Ptr<_228de996d_FnIns> _field_func = jule::Ptr<_228de996d_FnIns>();
	jule::Any _field_err = jule::Any();
	

	_228de3824_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_228de3824_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_228de3824_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _228de1723_SizeofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_228de1723_SizeofExprModel(void) = default;

	inline bool operator==(_228de1723_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228de1723_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _228de3e84_AlignofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_228de3e84_AlignofExprModel(void) = default;

	inline bool operator==(_228de3e84_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228de3e84_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _228de4171_RuneExprModel {
	jule::I32 _field_code = jule::I32();
	

	_228de4171_RuneExprModel(void) = default;

	inline bool operator==(_228de4171_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_228de4171_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _228de435d_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();
	

	_228de435d_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_228de435d_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228de435d_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _228de454a_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();
	

	_228de454a_BackendEmitExprModel(void) = default;

	inline bool operator==(_228de454a_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_228de454a_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _228de4737_FreeExprModel {
	jule::Any _field_expr = jule::Any();
	

	_228de4737_FreeExprModel(void) = default;

	inline bool operator==(_228de4737_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_228de4737_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _228de4cba_RetType {
	jule::Ptr<_229a824b2_TypeSymbol> _field_kind = jule::Ptr<_229a824b2_TypeSymbol>();
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_idents = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	

	_228de4cba_RetType(void) = default;

	inline bool operator==(_228de4cba_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_228de4cba_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_228de8a9e_ParamIns> _228de5848_instance(jule::Ptr<_228de5480_Param>);
inline jule::Bool _228de5aac_is_self(_228de5480_Param*);
inline jule::Bool _228de5d21_is_ref(_228de5480_Param*);
struct _228de5480_Param {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_229a824b2_TypeSymbol> _field_kind = jule::Ptr<_229a824b2_TypeSymbol>();
	jule::Str _field_ident = jule::Str();
	

	_228de5480_Param(void) = default;

	inline bool operator==(_228de5480_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_228de5480_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _228de722e_is_void(_228de6cbc_Fn*);
inline jule::Bool _228de7493_is_method(_228de6cbc_Fn*);
inline jule::Bool _228de7707_is_entry_point(_228de6cbc_Fn*);
inline jule::Bool _228de796b_is_init(_228de6cbc_Fn*);
inline jule::Bool _228de7bd0_is_anon(_228de6cbc_Fn*);
inline jule::Bool _228de7e44_any_var(_228de6cbc_Fn*);
inline jule::Ptr<_228de996d_FnIns> _228de81a8_instance_force(jule::Ptr<_228de6cbc_Fn>);
inline jule::Ptr<_228de996d_FnIns> _228de841c_instance(jule::Ptr<_228de6cbc_Fn>);
inline jule::Ptr<_228de996d_FnIns> _228de86e7_append_instance(_228de6cbc_Fn*, jule::Ptr<_228de996d_FnIns>&);
struct _228de6cbc_Fn {
	jule::Ptr<_2299dd792_Sema> _field_sema = jule::Ptr<_2299dd792_Sema>();
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_228ce499a_Directive>> _field_directives = jule::Slice<jule::Ptr<_228ce499a_Directive>>();
	jule::Ptr<_228d384b1_ScopeTree> _field_scope = jule::Ptr<_228d384b1_ScopeTree>();
	jule::Slice<jule::Ptr<_228d35777_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_228d35777_GenericDecl>>();
	jule::Ptr<_228de4cba_RetType> _field_result = jule::Ptr<_228de4cba_RetType>();
	jule::Slice<jule::Ptr<_228de5480_Param>> _field_params = jule::Slice<jule::Ptr<_228de5480_Param>>();
	jule::Ptr<_228d188c0_Struct> _field_owner = jule::Ptr<_228d188c0_Struct>();
	jule::Slice<jule::Ptr<_228de996d_FnIns>> _field_instances = jule::Slice<jule::Ptr<_228de996d_FnIns>>();
	

	_228de6cbc_Fn(void) = default;

	inline bool operator==(_228de6cbc_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_228de6cbc_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _228de8e78_to_str(_228de8a9e_ParamIns*);
struct _228de8a9e_ParamIns {
	jule::Ptr<_228de5480_Param> _field_decl = jule::Ptr<_228de5480_Param>();
	jule::Ptr<_229a7d359_TypeKind> _field_kind = jule::Ptr<_229a7d359_TypeKind>();
	

	_228de8a9e_ParamIns(void) = default;

	inline bool operator==(_228de8a9e_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_228de8a9e_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _228de9c9d_to_str(_228de996d_FnIns*);
inline jule::Bool _228dea0ab_equals(jule::Ptr<_228de996d_FnIns>, jule::Ptr<_229a7d359_TypeKind>);
inline jule::Slice<jule::Ptr<_229a7d359_TypeKind>> _228dea452_types(_228de996d_FnIns*);
inline jule::Bool _228dea6b6_is_builtin(_228de996d_FnIns*);
inline jule::Bool _228dea92a_is_anon(_228de996d_FnIns*);
inline jule::Bool _228deac38_same(_228de996d_FnIns*, jule::Ptr<_228de996d_FnIns>);
inline jule::Str _228deb046_get_kind_str(_228de996d_FnIns*, jule::Bool);
struct _228de996d_FnIns {
	jule::Ptr<_228d44c1a_StructIns> _field_owner = jule::Ptr<_228d44c1a_StructIns>();
	jule::Ptr<_228de6cbc_Fn> _field_decl = jule::Ptr<_228de6cbc_Fn>();
	jule::Slice<jule::Ptr<_229a7bb2c_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_229a7bb2c_InsGeneric>>();
	jule::Slice<jule::Ptr<_228de8a9e_ParamIns>> _field_params = jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>();
	jule::Ptr<_229a7d359_TypeKind> _field_result = jule::Ptr<_229a7d359_TypeKind>();
	jule::Ptr<_2299b6c10_Scope> _field_scope = jule::Ptr<_2299b6c10_Scope>();
	jule::Ptr<_228dec234_ReferenceStack> _field_refers = jule::Ptr<_228dec234_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)> _field_caller = jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_228de996d_FnIns(void) = default;

	inline bool operator==(_228de996d_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_refers == _other._field_refers &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_228de996d_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_228dec234_ReferenceStack> static__228dec520_new(void);
inline jule::I64 _228dec8a5_len(_228dec234_ReferenceStack*);
inline jule::Any _228decbb3_at(_228dec234_ReferenceStack*, jule::I64);
inline void _228dece38_push(_228dec234_ReferenceStack*, jule::Any);
inline jule::Bool _22d2c5d56_exist(_228dec234_ReferenceStack*, jule::Ptr<_228de996d_FnIns>);
inline jule::Bool _22d2da651_exist(_228dec234_ReferenceStack*, jule::Ptr<_229a0a4a1_Var>);
inline jule::Bool _22d375de5_exist(_228dec234_ReferenceStack*, jule::Ptr<_228d44c1a_StructIns>);
inline jule::Bool _22b7ce509_exist(_228dec234_ReferenceStack*, jule::Ptr<_22923d1bd_Trait>);
struct _228dec234_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_228dec234_ReferenceStack(void) = default;

	inline bool operator==(_228dec234_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_228dec234_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _228ded5ed_Pass {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_text = jule::Str();
	

	_228ded5ed_Pass(void) = default;

	inline bool operator==(_228ded5ed_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_228ded5ed_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_228e02a97_SymbolBuilder> _228e0304d_get_root(jule::Ptr<_228e02a97_SymbolBuilder>);
inline void _228e03416_push_err(_228e02a97_SymbolBuilder*, jule::Ptr<_2276b1a1c_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _228e037ce_push_err_text(_228e02a97_SymbolBuilder*, jule::Ptr<_2276b1a1c_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _228e03aed_push_suggestion(_228e02a97_SymbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _228e03ec7_check_cpp_use_decl_path(_228e02a97_SymbolBuilder*, jule::Ptr<_228d40bd3_UseDecl>&, jule::Str);
inline jule::Ptr<_2299d5646_ImportInfo> _228e042d5_build_cpp_header_import(_228e02a97_SymbolBuilder*, jule::Ptr<_228d40bd3_UseDecl>&);
inline jule::Ptr<_2299d5646_ImportInfo> _228e04604_build_std_import(_228e02a97_SymbolBuilder*, jule::Ptr<_228d40bd3_UseDecl>&);
inline jule::Ptr<_2299d5646_ImportInfo> _228e04912_build_ident_import(jule::Ptr<_228e02a97_SymbolBuilder>, jule::Ptr<_228d40bd3_UseDecl>&);
inline jule::Ptr<_2299d5646_ImportInfo> _228e04c20_build_import(jule::Ptr<_228e02a97_SymbolBuilder>, jule::Ptr<_228d40bd3_UseDecl>&);
inline jule::Bool _228e05050_check_duplicate_use_decl(_228e02a97_SymbolBuilder*, jule::Ptr<_2299d5646_ImportInfo>&);
inline void _228e05380_impl_import_selections(_228e02a97_SymbolBuilder*, jule::Ptr<_2299d5646_ImportInfo>&, jule::Ptr<_228d40bd3_UseDecl>&);
inline jule::Str _228e0568d_get_as_link_path(jule::Ptr<_228e02a97_SymbolBuilder>, jule::Str);
inline void _228e05a56_push_cycle_error(jule::Ptr<_228e02a97_SymbolBuilder>, jule::Ptr<_228e02a97_SymbolBuilder>&, jule::Str, jule::Str&);
inline void _228e05e1e_push_cross_cycle_error(jule::Ptr<_228e02a97_SymbolBuilder>, jule::Ptr<_228e02a97_SymbolBuilder>&, jule::Ptr<_2299d5646_ImportInfo>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Bool _228e062c6_check_import_cycles(jule::Ptr<_228e02a97_SymbolBuilder>, jule::Ptr<_2299d5646_ImportInfo>, jule::Ptr<_228d40bd3_UseDecl>&);
inline void _228e066b1_check_package_accessibility(_228e02a97_SymbolBuilder*, jule::Ptr<_228d40bd3_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _228e06a79_import_package(jule::Ptr<_228e02a97_SymbolBuilder>, jule::Ptr<_2299d5646_ImportInfo>&, jule::Ptr<_228d40bd3_UseDecl>&);
inline jule::Ptr<_2299d5646_ImportInfo> _228e06d87_import_use_decl(jule::Ptr<_228e02a97_SymbolBuilder>, jule::Ptr<_228d40bd3_UseDecl>&);
inline void _228e07063_import_use_decls(jule::Ptr<_228e02a97_SymbolBuilder>);
inline void _228e072d8_append_node(_228e02a97_SymbolBuilder*, _228ce459e_Node&);
inline void _228e074b4_append_nodes(_228e02a97_SymbolBuilder*);
inline void _228e07739_push_directive_pass(_228e02a97_SymbolBuilder*, jule::Ptr<_228ce499a_Directive>&);
inline void _228e07915_append_top_directives(_228e02a97_SymbolBuilder*);
inline void _228e07ae1_build(jule::Ptr<_228e02a97_SymbolBuilder>);
struct _228e02a97_SymbolBuilder {
	jule::Ptr<_228e02a97_SymbolBuilder> _field_owner = jule::Ptr<_228e02a97_SymbolBuilder>();
	jule::Trait<_2299d2d4c_Importer> _field_importer = jule::Trait<_2299d2d4c_Importer>();
	jule::Slice<_2409487a2_Log> _field_errors = jule::Slice<_2409487a2_Log>();
	jule::Ptr<_228ce3900_Ast> _field_ast = jule::Ptr<_228ce3900_Ast>();
	jule::Ptr<_229a4ca76_SymbolTable> _field_table = jule::Ptr<_229a4ca76_SymbolTable>();
	

	_228e02a97_SymbolBuilder(void) = default;

	inline bool operator==(_228e02a97_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_228e02a97_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _228e59170_to_str(_22923d1bd_Trait*);
inline jule::Bool _228e77ce8_equals(jule::Ptr<_22923d1bd_Trait>, jule::Ptr<_229a7d359_TypeKind>);
inline jule::Bool _228e7e52a_is_builtin(_22923d1bd_Trait*);
inline jule::Ptr<_228de6cbc_Fn> _228ea37b3_find_method(_22923d1bd_Trait*, jule::Str);
struct _22923d1bd_Trait {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_228de6cbc_Fn>> _field_methods = jule::Slice<jule::Ptr<_228de6cbc_Fn>>();
	jule::Slice<jule::Ptr<_228d188c0_Struct>> _field_implemented = jule::Slice<jule::Ptr<_228d188c0_Struct>>();
	

	_22923d1bd_Trait(void) = default;

	inline bool operator==(_22923d1bd_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_22923d1bd_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _228eb56c6_auto_expr(_22908619d_EnumItem*);
struct _22908619d_EnumItem {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_229a5385c_Value> _field_value = jule::Ptr<_229a5385c_Value>();
	

	_22908619d_EnumItem(void) = default;

	inline bool operator==(_22908619d_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_22908619d_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _228ede854_to_str(_228e0dcc3_Enum*);
inline jule::Bool _228ee6dde_equals(jule::Ptr<_228e0dcc3_Enum>, jule::Ptr<_229a7d359_TypeKind>);
inline jule::Ptr<_22908619d_EnumItem> _2290792b2_find_item(_228e0dcc3_Enum*, jule::Str);
struct _228e0dcc3_Enum {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_229a824b2_TypeSymbol> _field_kind = jule::Ptr<_229a824b2_TypeSymbol>();
	jule::Slice<jule::Ptr<_22908619d_EnumItem>> _field_items = jule::Slice<jule::Ptr<_22908619d_EnumItem>>();
	

	_228e0dcc3_Enum(void) = default;

	inline bool operator==(_228e0dcc3_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_228e0dcc3_Enum _other) { return !this->operator==(_other); }


};
struct _2290786bd_TypeEnumItem {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_229a824b2_TypeSymbol> _field_kind = jule::Ptr<_229a824b2_TypeSymbol>();
	

	_2290786bd_TypeEnumItem(void) = default;

	inline bool operator==(_2290786bd_TypeEnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_2290786bd_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _22916e011_to_str(_2292e1e75_TypeEnum*);
inline jule::Bool _22918d0b8_equals(jule::Ptr<_2292e1e75_TypeEnum>, jule::Ptr<_229a7d359_TypeKind>);
inline jule::Ptr<_2290786bd_TypeEnumItem> _22923da09_find_item(_2292e1e75_TypeEnum*, jule::Str);
struct _2292e1e75_TypeEnum {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_2290786bd_TypeEnumItem>> _field_items = jule::Slice<jule::Ptr<_2290786bd_TypeEnumItem>>();
	

	_2292e1e75_TypeEnum(void) = default;

	inline bool operator==(_2292e1e75_TypeEnum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_2292e1e75_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_2299dd792_Sema>&,jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>&)> _22994938a_ready_fn(jule::Ptr<_229938e6d_ConstraintChecker>);
inline jule::Bool _229961ade_ready_fi(jule::Ptr<_229938e6d_ConstraintChecker>);
inline jule::Bool _22997bba3_ready_si(jule::Ptr<_229938e6d_ConstraintChecker>);
inline jule::Bool _22997d9eb_ready(jule::Ptr<_229938e6d_ConstraintChecker>);
inline jule::Bool _22997ebd9_check(jule::Ptr<_229938e6d_ConstraintChecker>);
struct _229938e6d_ConstraintChecker {
	jule::Ptr<_2299dd792_Sema> _field_s = jule::Ptr<_2299dd792_Sema>();
	jule::Slice<jule::Ptr<_228d35777_GenericDecl>> _field_generics_d = jule::Slice<jule::Ptr<_228d35777_GenericDecl>>();
	jule::Slice<jule::Ptr<_229a7bb2c_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_229a7bb2c_InsGeneric>>();
	jule::Slice<jule::Ptr<_229a7c666_TypeAlias>> _field_generics_a = jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>();
	jule::Ptr<_228de996d_FnIns> _field_fi = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228d44c1a_StructIns> _field_si = jule::Ptr<_228d44c1a_StructIns>();
	jule::Ptr<_2276b1a1c_Token> _field_et = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_229938e6d_ConstraintChecker(void) = default;

	inline bool operator==(_229938e6d_ConstraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_generics_d == _other._field_generics_d &&
			this->_field_generics == _other._field_generics &&
			this->_field_generics_a == _other._field_generics_a &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_229938e6d_ConstraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _229983968_is_trait_impl(_2299a3504_Impl*);
inline jule::Bool _22998b300_is_struct_impl(_2299a3504_Impl*);
struct _2299a3504_Impl {
	jule::Ptr<_228d28193_TypeDecl> _field_base = jule::Ptr<_228d28193_TypeDecl>();
	jule::Ptr<_228d28193_TypeDecl> _field_dest = jule::Ptr<_228d28193_TypeDecl>();
	jule::Slice<jule::Ptr<_228de6cbc_Fn>> _field_methods = jule::Slice<jule::Ptr<_228de6cbc_Fn>>();
	jule::Slice<jule::Ptr<_229a0a4a1_Var>> _field_statics = jule::Slice<jule::Ptr<_229a0a4a1_Var>>();
	

	_2299a3504_Impl(void) = default;

	inline bool operator==(_2299a3504_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_2299a3504_Impl _other) { return !this->operator==(_other); }


};
struct _2299b6c10_Scope {
	jule::Ptr<_2299b6c10_Scope> _field_parent = jule::Ptr<_2299b6c10_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();
	

	_2299b6c10_Scope(void) = default;

	inline bool operator==(_2299b6c10_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_2299b6c10_Scope _other) { return !this->operator==(_other); }


};
struct _2299b700c_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_2299b6c10_Scope> _field_scope = jule::Ptr<_2299b6c10_Scope>();
	

	_2299b700c_If(void) = default;

	inline bool operator==(_2299b700c_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_2299b700c_If _other) { return !this->operator==(_other); }


};
struct _2299b72e8_Else {
	jule::Ptr<_2299b6c10_Scope> _field_scope = jule::Ptr<_2299b6c10_Scope>();
	

	_2299b72e8_Else(void) = default;

	inline bool operator==(_2299b72e8_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_2299b72e8_Else _other) { return !this->operator==(_other); }


};
struct _2299b76e4_Conditional {
	jule::Slice<jule::Ptr<_2299b700c_If>> _field_elifs = jule::Slice<jule::Ptr<_2299b700c_If>>();
	jule::Ptr<_2299b72e8_Else> _field_default = jule::Ptr<_2299b72e8_Else>();
	

	_2299b76e4_Conditional(void) = default;

	inline bool operator==(_2299b76e4_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_2299b76e4_Conditional _other) { return !this->operator==(_other); }


};
struct _2299b79d0_InfIter {
	jule::Ptr<_2299b6c10_Scope> _field_scope = jule::Ptr<_2299b6c10_Scope>();
	

	_2299b79d0_InfIter(void) = default;

	inline bool operator==(_2299b79d0_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_2299b79d0_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _2299b82e9_is_while_next(_2299b7e53_WhileIter*);
struct _2299b7e53_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_2299b6c10_Scope> _field_scope = jule::Ptr<_2299b6c10_Scope>();
	

	_2299b7e53_WhileIter(void) = default;

	inline bool operator==(_2299b7e53_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_2299b7e53_WhileIter _other) { return !this->operator==(_other); }


};
struct _2299b8838_RangeIter {
	jule::Ptr<_229a527d4_Data> _field_expr = jule::Ptr<_229a527d4_Data>();
	jule::Ptr<_2299b6c10_Scope> _field_scope = jule::Ptr<_2299b6c10_Scope>();
	jule::Ptr<_229a0a4a1_Var> _field_key_a = jule::Ptr<_229a0a4a1_Var>();
	jule::Ptr<_229a0a4a1_Var> _field_key_b = jule::Ptr<_229a0a4a1_Var>();
	

	_2299b8838_RangeIter(void) = default;

	inline bool operator==(_2299b8838_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_2299b8838_RangeIter _other) { return !this->operator==(_other); }


};
struct _2299b8c34_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();
	

	_2299b8c34_ContSt(void) = default;

	inline bool operator==(_2299b8c34_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_2299b8c34_ContSt _other) { return !this->operator==(_other); }


};
struct _2299b90db_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();
	

	_2299b90db_BreakSt(void) = default;

	inline bool operator==(_2299b90db_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_2299b90db_BreakSt _other) { return !this->operator==(_other); }


};
struct _2299b93c7_Label {
	jule::Str _field_ident = jule::Str();
	

	_2299b93c7_Label(void) = default;

	inline bool operator==(_2299b93c7_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_2299b93c7_Label _other) { return !this->operator==(_other); }


};
struct _2299b96b3_GotoSt {
	jule::Str _field_ident = jule::Str();
	

	_2299b96b3_GotoSt(void) = default;

	inline bool operator==(_2299b96b3_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_2299b96b3_GotoSt _other) { return !this->operator==(_other); }


};
struct _2299b9a6a_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();
	

	_2299b9a6a_Postfix(void) = default;

	inline bool operator==(_2299b9a6a_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_2299b9a6a_Postfix _other) { return !this->operator==(_other); }


};
struct _2299b9edd_Assign {
	jule::Ptr<_228dde853_OperandExprModel> _field_l = jule::Ptr<_228dde853_OperandExprModel>();
	jule::Ptr<_228dde853_OperandExprModel> _field_r = jule::Ptr<_228dde853_OperandExprModel>();
	jule::Ptr<_2276b1a1c_Token> _field_op = jule::Ptr<_2276b1a1c_Token>();
	

	_2299b9edd_Assign(void) = default;

	inline bool operator==(_2299b9edd_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_2299b9edd_Assign _other) { return !this->operator==(_other); }


};
struct _2299ba395_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();
	

	_2299ba395_MultiAssign(void) = default;

	inline bool operator==(_2299ba395_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_2299ba395_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _2299bade0_is_generic_type_match(_2299ba8d4_Match*);
struct _2299ba8d4_Match {
	jule::Ptr<_229a527d4_Data> _field_expr = jule::Ptr<_229a527d4_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_2299bb42e_Case>> _field_cases = jule::Slice<jule::Ptr<_2299bb42e_Case>>();
	jule::Ptr<_2299bb42e_Case> _field_default = jule::Ptr<_2299bb42e_Case>();
	

	_2299ba8d4_Match(void) = default;

	inline bool operator==(_2299ba8d4_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_2299ba8d4_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _2299bb6e8_is_default(_2299bb42e_Case*);
struct _2299bb42e_Case {
	jule::Ptr<_2299ba8d4_Match> _field_owner = jule::Ptr<_2299ba8d4_Match>();
	jule::Ptr<_2299b6c10_Scope> _field_scope = jule::Ptr<_2299b6c10_Scope>();
	jule::Slice<jule::Ptr<_229a527d4_Data>> _field_exprs = jule::Slice<jule::Ptr<_229a527d4_Data>>();
	jule::Ptr<_2299bb42e_Case> _field_next = jule::Ptr<_2299bb42e_Case>();
	

	_2299bb42e_Case(void) = default;

	inline bool operator==(_2299bb42e_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_2299bb42e_Case _other) { return !this->operator==(_other); }


};
struct _2299bb9d4_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();
	

	_2299bb9d4_FallSt(void) = default;

	inline bool operator==(_2299bb9d4_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_2299bb9d4_FallSt _other) { return !this->operator==(_other); }


};
struct _2299bbe57_RetSt {
	jule::Ptr<_228de996d_FnIns> _field_func = jule::Ptr<_228de996d_FnIns>();
	jule::Slice<jule::Ptr<_229a0a4a1_Var>> _field_vars = jule::Slice<jule::Ptr<_229a0a4a1_Var>>();
	jule::Any _field_expr = jule::Any();
	

	_2299bbe57_RetSt(void) = default;

	inline bool operator==(_2299bbe57_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_2299bbe57_RetSt _other) { return !this->operator==(_other); }


};
struct _2299bc562_ScopeLabel {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2299b93c7_Label> _field_label = jule::Ptr<_2299b93c7_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_2299bd7e9_ScopeChecker> _field_scope = jule::Ptr<_2299bd7e9_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_2299bc562_ScopeLabel(void) = default;

	inline bool operator==(_2299bc562_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_2299bc562_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _2299bc9d5_ScopeGoto {
	jule::Ptr<_228d35ed6_GotoSt> _field_gt = jule::Ptr<_228d35ed6_GotoSt>();
	jule::Ptr<_2299bd7e9_ScopeChecker> _field_scope = jule::Ptr<_2299bd7e9_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_2299bc9d5_ScopeGoto(void) = default;

	inline bool operator==(_2299bc9d5_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_2299bc9d5_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2299d5646_ImportInfo> _2299bdc4a_find_package(_2299bd7e9_ScopeChecker*, jule::Str);
inline jule::Ptr<_2299d5646_ImportInfo> _2299be058_select_package(_2299bd7e9_ScopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)>);
inline jule::Ptr<_229a0a4a1_Var> _2299be410_find_var(_2299bd7e9_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_229a7c666_TypeAlias> _2299be7b7_find_type_alias(_2299bd7e9_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_228d188c0_Struct> _2299beb6e_find_struct(_2299bd7e9_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_228de6cbc_Fn> _2299c0026_find_fn(_2299bd7e9_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_22923d1bd_Trait> _2299c0334_find_trait(_2299bd7e9_ScopeChecker*, jule::Str);
inline jule::Ptr<_228e0dcc3_Enum> _2299c0642_find_enum(_2299bd7e9_ScopeChecker*, jule::Str);
inline jule::Ptr<_2292e1e75_TypeEnum> _2299c0950_find_type_enum(_2299bd7e9_ScopeChecker*, jule::Str);
inline jule::Bool _2299c0c80_is_unsafe(jule::Ptr<_2299bd7e9_ScopeChecker>);
inline jule::Bool _2299c0ee4_is_root(_2299bd7e9_ScopeChecker*);
inline void _2299c11c0_stop(_2299bd7e9_ScopeChecker*);
inline jule::Bool _2299c1434_stopped(_2299bd7e9_ScopeChecker*);
inline jule::Bool _2299c1698_is_deferred(jule::Ptr<_2299bd7e9_ScopeChecker>);
inline jule::Ptr<_2299bd7e9_ScopeChecker> _2299c190c_get_root(jule::Ptr<_2299bd7e9_ScopeChecker>);
inline jule::Ptr<_2299bd7e9_ScopeChecker> _2299c1b71_get_hard_root(jule::Ptr<_2299bd7e9_ScopeChecker>);
inline jule::Ptr<_2299b93c7_Label> _2299c1e7e_find_label(_2299bd7e9_ScopeChecker*, jule::Str);
inline jule::Ptr<_2299bc562_ScopeLabel> _2299c228c_find_label_scope(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Str);
inline jule::Ptr<_2299bc562_ScopeLabel> _2299c259a_find_label_all(_2299bd7e9_ScopeChecker*, jule::Str);
inline jule::Bool _2299c2952_is_duplicated_ident(_2299bd7e9_ScopeChecker*, jule::Uintptr, jule::Str);
inline void _2299c2bc7_check_var_decl(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3ae86_VarDecl>);
inline void _2299c2e4c_check_type_alias_decl(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3e7e7_TypeAliasDecl>);
inline jule::Ptr<_2299b6c10_Scope> _2299c31b1_get_child(_2299bd7e9_ScopeChecker*);
inline void _2299c3579_check_child_ssc(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d384b1_ScopeTree>&, jule::Ptr<_2299b6c10_Scope>&, jule::Ptr<_2299bd7e9_ScopeChecker>&);
inline jule::Ptr<_2299b6c10_Scope> _2299c3931_check_child_sc(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d384b1_ScopeTree>&, jule::Ptr<_2299bd7e9_ScopeChecker>&);
inline jule::Ptr<_2299b6c10_Scope> _2299c3c3e_check_child(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d384b1_ScopeTree>&);
inline void _2299c3eb4_check_anon_scope(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d384b1_ScopeTree>);
inline void _2299c42d3_process_error_call(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228de3824_BuiltinErrorCallExprModel>&, jule::Ptr<_2276b1a1c_Token>);
inline void _2299c4558_check_expr(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d2c6b4_Expr>);
inline void _2299c47cd_check_co_expr(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d2e2a9_CoExpr>);
inline jule::Ptr<_2299b700c_If> _2299c4adb_check_if(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3d7e6_If>);
inline jule::Ptr<_2299b72e8_Else> _2299c4de9_check_else(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3db9d_Else>);
inline void _2299c516e_check_conditional(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3e121_Conditional>);
inline void _2299c55d1_check_iter_scope_ssc(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Uintptr, jule::Ptr<_228d384b1_ScopeTree>, jule::Ptr<_2299b6c10_Scope>&, jule::Ptr<_2299bd7e9_ScopeChecker>);
inline jule::Ptr<_2299b6c10_Scope> _2299c5a32_check_iter_scope_sc(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Uintptr, jule::Ptr<_228d384b1_ScopeTree>, jule::Ptr<_2299bd7e9_ScopeChecker>);
inline jule::Ptr<_2299b6c10_Scope> _2299c5dd9_check_iter_scope(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Uintptr, jule::Ptr<_228d384b1_ScopeTree>&);
inline void _2299c615e_check_inf_iter(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3b99d_Iter>&);
inline void _2299c63d4_check_while_iter(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3b99d_Iter>&);
inline void _2299c6659_check_range_iter(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3b99d_Iter>&);
inline void _2299c68ce_check_iter(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3b99d_Iter>);
inline jule::Bool _2299c6bdc_check_valid_cont_label(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Uintptr);
inline jule::Bool _2299c701c_check_valid_break_label(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Uintptr);
inline jule::Ptr<_2299b8c34_ContSt> _2299c733b_check_cont_valid_scope(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3d373_ContSt>);
inline void _2299c75b1_check_cont(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3d373_ContSt>);
inline void _2299c7836_check_label(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d35b2e_LabelSt>);
inline void _2299c7aab_push_goto(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d35ed6_GotoSt>);
inline void _2299c7d31_check_postfix(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d36e1b_AssignSt>);
inline jule::Bool _2299c813e_is_new_assign_ident(_2299bd7e9_ScopeChecker*, jule::Str);
inline jule::Bool _2299c85b2_check_structure_assign_op(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d44c1a_StructIns>&, jule::Ptr<_228d36e1b_AssignSt>&, jule::Ptr<_229a527d4_Data>&);
inline void _2299c8848_check_single_assign(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d36e1b_AssignSt>&);
inline void _2299c8d87___process_end_part_of_multi_assign(_2299bd7e9_ScopeChecker*, jule::Ptr<_2299ba395_MultiAssign>, jule::Ptr<_228d36e1b_AssignSt>, jule::Ptr<_228d368cc_AssignLeft>, jule::Ptr<_229a527d4_Data>, jule::Ptr<_229a527d4_Data>);
inline void _2299c910c_check_ret_multi_assign(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d36e1b_AssignSt>&);
inline void _2299c9382_check_multi_assign(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d36e1b_AssignSt>&);
inline void _2299c9607_check_assign_st(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d36e1b_AssignSt>);
inline jule::Ptr<_2299b6c10_Scope> _2299c99ae_check_case_scope(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_2299bb42e_Case>&, jule::Ptr<_228d384b1_ScopeTree>&);
inline jule::Ptr<_2299bb42e_Case> _2299c9ea9_check_case(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_2299ba8d4_Match>, jule::I64, jule::Ptr<_228d3ec6a_Case>, jule::Ptr<_229a527d4_Data>);
inline void _2299ca372_check_cases(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d40441_MatchCase>&, jule::Ptr<_2299ba8d4_Match>, jule::Ptr<_229a527d4_Data>);
inline jule::Ptr<_2299bb42e_Case> _2299ca729_check_default(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_2299ba8d4_Match>, jule::Ptr<_228d3db9d_Else>);
inline void _2299ca99e_check_comptime_panic(_2299bd7e9_ScopeChecker*, jule::Ptr<_2299b6c10_Scope>&);
inline void _2299cacbd_push_type_match(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_2299ba8d4_Match>, jule::Ptr<_228d40441_MatchCase>&);
inline void _2299cb043_check_type_match(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d40441_MatchCase>&);
inline void _2299cb2b8_check_common_match(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d40441_MatchCase>&);
inline void _2299cb53d_check_match(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d40441_MatchCase>);
inline void _2299cb7b3_check_fall(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d362c2_FallSt>);
inline jule::Ptr<_2299b90db_BreakSt> _2299cbac1_check_break_with_label(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3cebb_BreakSt>);
inline jule::Ptr<_2299b90db_BreakSt> _2299cbdce_check_plain_break(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3cebb_BreakSt>);
inline void _2299cc154_check_break(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3cebb_BreakSt>);
inline void _2299cc3c9_check_ret(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d3b33d_RetSt>);
inline void _2299cc64e_check_use_expr(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d2d055_UseExpr>);
inline void _2299cc8c4_check_node(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Any&);
inline void _2299ccaa0_check_result(jule::Ptr<_2299bd7e9_ScopeChecker>);
inline void _2299ccc7b_check_tree(jule::Ptr<_2299bd7e9_ScopeChecker>);
inline void _2299cd09a_check_goto(_2299bd7e9_ScopeChecker*, jule::Ptr<_2299bc9d5_ScopeGoto>&, jule::Ptr<_2299bc562_ScopeLabel>&);
inline void _2299cd276_check_gotos(_2299bd7e9_ScopeChecker*);
inline void _2299cd452_check_labels(_2299bd7e9_ScopeChecker*);
inline void _2299cd62d_check_vars(_2299bd7e9_ScopeChecker*);
inline void _2299cd809_check_aliases(_2299bd7e9_ScopeChecker*);
inline void _2299cdb28_check(jule::Ptr<_2299bd7e9_ScopeChecker>, jule::Ptr<_228d384b1_ScopeTree>&, jule::Ptr<_2299b6c10_Scope>&);
inline jule::Ptr<_2299bd7e9_ScopeChecker> _2299cdd8c_new_child_checker(jule::Ptr<_2299bd7e9_ScopeChecker>);
struct _2299bd7e9_ScopeChecker {
	jule::Ptr<_2276b1a1c_Token> _field_called_from = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_2299dd792_Sema> _field_s = jule::Ptr<_2299dd792_Sema>();
	jule::Ptr<_228de996d_FnIns> _field_owner = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_2299bd7e9_ScopeChecker> _field_parent = jule::Ptr<_2299bd7e9_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_229a4ca76_SymbolTable> _field_table = jule::Ptr<_229a4ca76_SymbolTable>();
	jule::Ptr<_2299b6c10_Scope> _field_scope = jule::Ptr<_2299b6c10_Scope>();
	jule::Ptr<_228d384b1_ScopeTree> _field_tree = jule::Ptr<_228d384b1_ScopeTree>();
	jule::Ptr<_228de996d_FnIns> _field_result = jule::Ptr<_228de996d_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_2299bc562_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_2299bc562_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_2299bc9d5_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_2299bc9d5_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_2299bd7e9_ScopeChecker(void) = default;

	inline bool operator==(_2299bd7e9_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_2299bd7e9_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _2299ced7c_check_cdef(_2299ce93c_DirectiveChecker*, jule::Ptr<_228ce499a_Directive>&);
inline void _2299d0102_check_typedef(_2299ce93c_DirectiveChecker*, jule::Ptr<_228ce499a_Directive>&);
inline void _2299d0377_check_derive(_2299ce93c_DirectiveChecker*, jule::Ptr<_228ce499a_Directive>&);
inline void _2299d05ec_check_namespace(_2299ce93c_DirectiveChecker*, jule::Ptr<_228ce499a_Directive>&);
inline void _2299d0872_check_deprecated(_2299ce93c_DirectiveChecker*, jule::Ptr<_228ce499a_Directive>&);
inline void _2299d0ae7_check_test(_2299ce93c_DirectiveChecker*, jule::Ptr<_228ce499a_Directive>&);
inline void _2299d0d6c_check_directive(_2299ce93c_DirectiveChecker*, jule::Ptr<_228ce499a_Directive>&);
inline void _2299d1048_check(_2299ce93c_DirectiveChecker*);
struct _2299ce93c_DirectiveChecker {
	jule::Ptr<_2299dd792_Sema> _field_s = jule::Ptr<_2299dd792_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_228ce499a_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_228ce499a_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_2299ce93c_DirectiveChecker(void) = default;

	inline bool operator==(_2299ce93c_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_2299ce93c_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2299d5646_ImportInfo> _2299d5b63_find_package(_2299d5646_ImportInfo*, jule::Str);
inline jule::Ptr<_2299d5646_ImportInfo> _2299d5e71_select_package(_2299d5646_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)>);
inline jule::Ptr<_229a0a4a1_Var> _2299d6328_find_var(_2299d5646_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_229a7c666_TypeAlias> _2299d66d0_find_type_alias(_2299d5646_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_228d188c0_Struct> _2299d6a87_find_struct(_2299d5646_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_228de6cbc_Fn> _2299d6e3e_find_fn(_2299d5646_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_22923d1bd_Trait> _2299d724c_find_trait(_2299d5646_ImportInfo*, jule::Str);
inline jule::Ptr<_228e0dcc3_Enum> _2299d755a_find_enum(_2299d5646_ImportInfo*, jule::Str);
inline jule::Ptr<_2292e1e75_TypeEnum> _2299d7868_find_type_enum(_2299d5646_ImportInfo*, jule::Str);
inline jule::Bool _2299d7c0e_is_lookupable(_2299d5646_ImportInfo*, jule::Str);
inline jule::Bool _2299d801c_exist_ident(_2299d5646_ImportInfo*, jule::Str);
inline jule::Bool _2299d82a3_is_accessible_via_selection(_2299d5646_ImportInfo*);
struct _2299d5646_ImportInfo {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_selected = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	jule::Ptr<_2299d85a0_Package> _field_package = jule::Ptr<_2299d85a0_Package>();
	jule::I64 _field_mod_id = jule::I64();
	

	_2299d5646_ImportInfo(void) = default;

	inline bool operator==(_2299d5646_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_2299d5646_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2299d5646_ImportInfo> _2299d8a78_find_package(_2299d85a0_Package*, jule::Str);
inline jule::Ptr<_2299d5646_ImportInfo> _2299d8d86_select_package(_2299d85a0_Package*, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)>);
inline jule::Ptr<_229a0a4a1_Var> _2299d923d_find_var(_2299d85a0_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_229a7c666_TypeAlias> _2299d95e5_find_type_alias(_2299d85a0_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_228d188c0_Struct> _2299d999c_find_struct(_2299d85a0_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_228de6cbc_Fn> _2299d9d54_find_fn(_2299d85a0_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_22923d1bd_Trait> _2299da162_find_trait(_2299d85a0_Package*, jule::Str);
inline jule::Ptr<_228e0dcc3_Enum> _2299da470_find_enum(_2299d85a0_Package*, jule::Str);
inline jule::Ptr<_2292e1e75_TypeEnum> _2299da77d_find_type_enum(_2299d85a0_Package*, jule::Str);
struct _2299d85a0_Package {
	jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>();
	

	_2299d85a0_Package(void) = default;

	inline bool operator==(_2299d85a0_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_2299d85a0_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2299d5646_ImportInfo> _2299ddcae_find_package(_2299dd792_Sema*, jule::Str);
inline jule::Ptr<_2299d5646_ImportInfo> _2299de0bc_select_package(_2299dd792_Sema*, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)>);
inline jule::Ptr<_229a0a4a1_Var> _2299de474_find_var(_2299dd792_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_229a7c666_TypeAlias> _2299de82b_find_type_alias(_2299dd792_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_228d188c0_Struct> _2299debd3_find_struct(_2299dd792_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_228de6cbc_Fn> _2299e008a_find_fn(_2299dd792_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_22923d1bd_Trait> _2299e0398_find_trait(_2299dd792_Sema*, jule::Str);
inline jule::Ptr<_228e0dcc3_Enum> _2299e06a6_find_enum(_2299dd792_Sema*, jule::Str);
inline jule::Ptr<_2292e1e75_TypeEnum> _2299e09b4_find_type_enum(_2299dd792_Sema*, jule::Str);
inline jule::Bool _2299e0d16_is_flag(_2299dd792_Sema*, jule::I64);
inline void _2299e108b_set_current_file(_2299dd792_Sema*, jule::Ptr<_229a4ca76_SymbolTable>);
inline void _2299e1454_push_err(_2299dd792_Sema*, jule::Ptr<_2276b1a1c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2299e1773_push_suggestion(_2299dd792_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2299e1b2a_is_accessible_define(_2299dd792_Sema*, jule::Bool, jule::Ptr<_2276b1a1c_Token>);
inline jule::Bool _2299e207b_is_duplicated_ident(_2299dd792_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _2299e239a_check_directives(jule::Ptr<_2299dd792_Sema>, jule::Slice<jule::Ptr<_228ce499a_Directive>>&, jule::Any);
inline jule::Bool _2299e27eb_check_generic_quantity(_2299dd792_Sema*, jule::I64, jule::I64, jule::Ptr<_2276b1a1c_Token>);
inline jule::Bool _2299e2bc5_is_duplicated_import_selection(_2299dd792_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _2299e308d_get_import_def(_2299dd792_Sema*, jule::Str, jule::Ptr<_2299d5646_ImportInfo>&);
inline jule::Bool _2299e33bd_check_import_selections(_2299dd792_Sema*, jule::Ptr<_2299d5646_ImportInfo>&);
inline jule::Bool _2299e370e_is_use_alias_duplication(_2299dd792_Sema*, jule::Ptr<_2299d5646_ImportInfo>&);
inline jule::Bool _2299e3a2d_check_import(_2299dd792_Sema*, jule::Ptr<_2299d5646_ImportInfo>&);
inline void _2299e3c09_check_imports(_2299dd792_Sema*);
inline void _2299e3dd5_impl_file_impls(jule::Ptr<_2299dd792_Sema>);
inline void _2299e40b1_impl_impls(jule::Ptr<_2299dd792_Sema>);
inline void _2299e428c_check_enums(jule::Ptr<_2299dd792_Sema>);
inline jule::Ptr<_229a7d359_TypeKind> _2299e4787_build_type_with_refers(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d28193_TypeDecl>&, jule::Trait<_229a98e02_Lookup>, jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>, jule::Ptr<_229a8aa70_Referencer>);
inline jule::Bool _2299e4c82_check_type_with_refers(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_229a824b2_TypeSymbol>&, jule::Trait<_229a98e02_Lookup>, jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>, jule::Ptr<_229a8aa70_Referencer>);
inline jule::Ptr<_229938e6d_ConstraintChecker> _2299e4ee6_constraint_checker(jule::Ptr<_2299dd792_Sema>);
inline jule::Bool _2299e539d_check_type(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_229a824b2_TypeSymbol>&, jule::Trait<_229a98e02_Lookup>);
inline jule::Ptr<_229a7d359_TypeKind> _2299e5821_build_type_with_generics(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d28193_TypeDecl>&, jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>, jule::Ptr<_228dec234_ReferenceStack>);
inline jule::Ptr<_229a7d359_TypeKind> _2299e5b40_build_type(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d28193_TypeDecl>&);
inline jule::Ptr<_229a7d359_TypeKind> _2299e5e4d_select_type(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d28193_TypeDecl>&);
inline jule::Ptr<_229a54352_Eval> _2299e639e_evalpd(jule::Ptr<_2299dd792_Sema>, jule::Trait<_229a98e02_Lookup>, jule::Ptr<_229a7d359_TypeKind>, jule::Ptr<_229a0a4a1_Var>);
inline jule::Ptr<_229a54352_Eval> _2299e6756_evalp(jule::Ptr<_2299dd792_Sema>, jule::Trait<_229a98e02_Lookup>, jule::Ptr<_229a7d359_TypeKind>);
inline jule::Ptr<_229a54352_Eval> _2299e6a64_eval(jule::Ptr<_2299dd792_Sema>, jule::Trait<_229a98e02_Lookup>);
inline jule::Bool _2299e705e_check_assign_type(jule::Ptr<_2299dd792_Sema>, jule::Bool, jule::Ptr<_229a7d359_TypeKind>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_2276b1a1c_Token>);
inline jule::Bool _2299e74d2_check_type_compatibility(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_229a7d359_TypeKind>&, jule::Ptr<_229a7d359_TypeKind>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Ptr<_229a7d359_TypeKind> _2299e78bc_build_non_generic_type_kind(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d28193_TypeDecl>&, jule::Slice<jule::Ptr<_228d35777_GenericDecl>>&);
inline void _2299e7b75_build_fn_non_generic_type_kinds(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de996d_FnIns>&);
inline jule::Ptr<_228de996d_FnIns> _2299e7eb6_get_trait_check_fn_kind(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de6cbc_Fn>&);
inline jule::Bool _2299e8428_check_constraints_fn(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de996d_FnIns>&, jule::Ptr<_2276b1a1c_Token>&, jule::Ptr<_228de996d_FnIns>);
inline jule::Bool _2299e889b_check_constraints_struct(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d44c1a_StructIns>&, jule::Ptr<_2276b1a1c_Token>&, jule::Ptr<_228d44c1a_StructIns>);
inline jule::Bool _2299e8c64_fn_environment(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de996d_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_2299dd792_Sema>&,jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>&)>);
inline void _2299e8ed9_check_fn_param_kind(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de8a9e_ParamIns>&);
inline jule::Bool _2299e92e7_reload_fn_ins_types(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de996d_FnIns>);
inline jule::Bool _2299e977b_check_ref_validity_for_init_expr(jule::Ptr<_2299dd792_Sema>, jule::Bool, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Bool _2299e9d75_check_validity_for_init_expr(jule::Ptr<_2299dd792_Sema>, jule::Bool, jule::Bool, jule::Ptr<_229a7d359_TypeKind>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Bool _2299ea22c_check_type_alias_decl_kind(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_229a7c666_TypeAlias>&, jule::Trait<_229a98e02_Lookup>);
inline void _2299ea55c_check_type_alias_decl(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_229a7c666_TypeAlias>&, jule::Trait<_229a98e02_Lookup>);
inline void _2299ea804_check_type_alias_decl_dup(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_229a7c666_TypeAlias>&);
inline jule::Bool _2299eaa79_check_type_alias_decls(jule::Ptr<_2299dd792_Sema>);
inline void _22ceda197_check_enum_items_dup(_2299dd792_Sema*, jule::Slice<jule::Ptr<_22908619d_EnumItem>>);
inline void _22cee59bb_check_enum_items_dup(_2299dd792_Sema*, jule::Slice<jule::Ptr<_2290786bd_TypeEnumItem>>);
inline void _2299eb074_check_enum_items_str(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228e0dcc3_Enum>&);
inline void _2299eb2e9_check_enum_items_int(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228e0dcc3_Enum>&);
inline void _2299eb56e_check_enum_decl(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228e0dcc3_Enum>&);
inline void _2299eb7e4_check_type_enum_decl(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_2292e1e75_TypeEnum>&);
inline jule::Bool _2299eba58_check_enum_decls(jule::Ptr<_2299dd792_Sema>);
inline jule::Bool _2299ebcbc_check_type_enum_decls(jule::Ptr<_2299dd792_Sema>);
inline jule::Bool _2299ec0ca_check_decl_generics(_2299dd792_Sema*, jule::Slice<jule::Ptr<_228d35777_GenericDecl>>&);
inline jule::Bool _2299ec40a_check_fn_decl_params_dup(_2299dd792_Sema*, jule::Ptr<_228de6cbc_Fn>&);
inline jule::Bool _2299ec74b_check_fn_decl_result_dup(_2299dd792_Sema*, jule::Ptr<_228de6cbc_Fn>&);
inline void _2299eca04_check_fn_decl_prototype(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de6cbc_Fn>&);
inline void _2299eccac_check_trait_decl_method(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de6cbc_Fn>&);
inline void _2299ed065_check_trait_decl_methods(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_22923d1bd_Trait>&);
inline void _2299ed2eb_check_trait_decl(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_22923d1bd_Trait>&);
inline jule::Bool _2299ed560_check_trait_decls(jule::Ptr<_2299dd792_Sema>);
inline jule::Bool _2299ed939_check_trait_impl_methods(_2299dd792_Sema*, jule::Ptr<_22923d1bd_Trait>&, jule::Ptr<_2299a3504_Impl>&);
inline jule::Bool _2299edd02_impl_to_struct(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d188c0_Struct>&, jule::Ptr<_2299a3504_Impl>&);
inline void _2299ee077_impl_trait(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_2299a3504_Impl>&);
inline void _2299ee2ec_impl_struct(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_2299a3504_Impl>&);
inline void _2299ee572_impl_impl(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_2299a3504_Impl>&);
inline void _2299ee891_check_var_decl(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_229a0a4a1_Var>&, jule::Trait<_229a98e02_Lookup>);
inline void _2299eeb16_check_global_var_decl(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_229a0a4a1_Var>&);
inline jule::Bool _2299eed7a_check_global_decls(jule::Ptr<_2299dd792_Sema>);
inline jule::Bool _229a00254_check_struct_trait_impl(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d188c0_Struct>&, jule::Ptr<_22923d1bd_Trait>&);
inline jule::Bool _229a00573_check_struct_impls(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d188c0_Struct>&);
inline jule::Bool _229a00881_check_struct_fields(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d188c0_Struct>&);
inline void _229a00b06_check_struct_decl(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d188c0_Struct>&);
inline jule::Bool _229a00d6a_check_struct_decls(jule::Ptr<_2299dd792_Sema>);
inline void _229a010e0_check_fn_decl(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de6cbc_Fn>&);
inline jule::Bool _229a01354_check_fn_decls(jule::Ptr<_2299dd792_Sema>);
inline void _229a0171c_push_cycle_error(_2299dd792_Sema*, jule::Ptr<_228d188c0_Struct>&, jule::Ptr<_228d188c0_Struct>&, jule::Str&);
inline jule::Bool _229a01b6d_check_cross_cycle(_2299dd792_Sema*, jule::Ptr<_228d188c0_Struct>&, jule::Ptr<_228d188c0_Struct>&, jule::Str&);
inline jule::Bool _229a02102_check_struct_derive_illegal_cycles(_2299dd792_Sema*, jule::Str, jule::Ptr<_228d188c0_Struct>&, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a02432_check_struct_ins_derive_clone(_2299dd792_Sema*, jule::Ptr<_228d44c1a_StructIns>);
inline void _229a0261e_check_package_decls(jule::Ptr<_2299dd792_Sema>);
inline void _229a02960_check_data_for_type_inference(_2299dd792_Sema*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_2276b1a1c_Token>&);
inline void _229a02be6_check_var(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_229a0a4a1_Var>&);
inline void _229a03015_check_type_var(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_229a0a4a1_Var>&, jule::Trait<_229a98e02_Lookup>);
inline void _229a031e1_check_global_types(jule::Ptr<_2299dd792_Sema>);
inline jule::Ptr<_228de996d_FnIns> _229a03598_ready_to_check_fn(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d44c1a_StructIns>&, jule::Ptr<_228de6cbc_Fn>&);
inline void _229a038b7_check_type_method(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d44c1a_StructIns>&, jule::Ptr<_228de6cbc_Fn>&);
inline jule::Ptr<_228de996d_FnIns> _229a03d18_check_struct_ins_op(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d44c1a_StructIns>&, jule::Ptr<_228de6cbc_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>);
inline jule::Bool _229a041c0_check_struct_env(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d44c1a_StructIns>&, jule::Ptr<_2276b1a1c_Token>);
inline jule::Bool _229a04577_precheck_struct_ins(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d44c1a_StructIns>&, jule::Ptr<_2276b1a1c_Token>);
inline void _229a047ec_check_struct_ins(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d44c1a_StructIns>&);
inline void _229a04a72_check_type_struct(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d188c0_Struct>&);
inline void _229a04c4d_check_struct_types(jule::Ptr<_2299dd792_Sema>);
inline void _229a04ee5_check_struct_ins_operators(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d44c1a_StructIns>);
inline void _229a0527b_precheck_struct_type(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228d188c0_Struct>&);
inline void _229a05457_precheck_struct_types(jule::Ptr<_2299dd792_Sema>);
inline void _229a056cc_check_rets(_2299dd792_Sema*, jule::Ptr<_228de996d_FnIns>&);
inline void _229a059eb_check_fn_ins_sc(_2299dd792_Sema*, jule::Ptr<_228de996d_FnIns>&, jule::Ptr<_2299bd7e9_ScopeChecker>&);
inline void _229a05d1a_check_fn_ins_caller(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de996d_FnIns>&, jule::Ptr<_2276b1a1c_Token>);
inline void _229a06090_check_fn_ins(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de996d_FnIns>&);
inline void _229a06315_check_type_fn(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de6cbc_Fn>&);
inline void _229a0658a_check_test_fn(_2299dd792_Sema*, jule::Ptr<_228de996d_FnIns>&);
inline void _229a06810_precheck_type_fn(jule::Ptr<_2299dd792_Sema>, jule::Ptr<_228de6cbc_Fn>&);
inline void _229a069db_precheck_fn_types(jule::Ptr<_2299dd792_Sema>);
inline void _229a06bb7_check_fn_types(jule::Ptr<_2299dd792_Sema>);
inline void _229a06d93_check_package_types(jule::Ptr<_2299dd792_Sema>);
inline void _229a0706e_set_file_sema_fields(jule::Ptr<_2299dd792_Sema>);
inline void _229a0724a_set_sema_fields(jule::Ptr<_2299dd792_Sema>);
inline void _229a074c0_check(jule::Ptr<_2299dd792_Sema>, jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>&);
struct _2299dd792_Sema {
	jule::Slice<_2409487a2_Log> _field_errors = jule::Slice<_2409487a2_Log>();
	jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>();
	jule::Ptr<_229a4ca76_SymbolTable> _field_file = jule::Ptr<_229a4ca76_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_2299dd792_Sema(void) = default;

	inline bool operator==(_2299dd792_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_2299dd792_Sema _other) { return !this->operator==(_other); }


};
inline _229a07877_MissingRetChecker static__229a07c40_new(void);
inline jule::Bool _229a0801a_check_conditional(_229a07877_MissingRetChecker*, jule::Ptr<_2299b76e4_Conditional>);
inline jule::Bool _229a08328_check_match(_229a07877_MissingRetChecker*, jule::Ptr<_2299ba8d4_Match>);
inline jule::Bool _229a08636_check_inf_iter(_229a07877_MissingRetChecker*, jule::Ptr<_2299b79d0_InfIter>);
inline jule::Bool _229a08944_check_scope(_229a07877_MissingRetChecker*, jule::Ptr<_2299b6c10_Scope>);
inline jule::Bool _229a08c52_check(_229a07877_MissingRetChecker*, jule::Ptr<_2299b6c10_Scope>);
struct _229a07877_MissingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_229a07877_MissingRetChecker(void) = default;

	inline bool operator==(_229a07877_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_229a07877_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _229a09538_IterRelation {
	jule::Ptr<_229a0a4a1_Var> _field_range = jule::Ptr<_229a0a4a1_Var>();
	

	_229a09538_IterRelation(void) = default;

	inline bool operator==(_229a09538_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_229a09538_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _229a0a858_is_initialized(_229a0a4a1_Var*);
inline jule::Bool _229a0aabc_is_type_inferred(_229a0a4a1_Var*);
struct _229a0a4a1_Var {
	jule::Ptr<_2299b6c10_Scope> _field_scope = jule::Ptr<_2299b6c10_Scope>();
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_229a824b2_TypeSymbol> _field_kind = jule::Ptr<_229a824b2_TypeSymbol>();
	jule::Ptr<_229a5385c_Value> _field_value = jule::Ptr<_229a5385c_Value>();
	jule::Ptr<_228dec234_ReferenceStack> _field_refers = jule::Ptr<_228dec234_ReferenceStack>();
	jule::Slice<jule::Ptr<_228ce499a_Directive>> _field_directives = jule::Slice<jule::Ptr<_228ce499a_Directive>>();
	jule::Ptr<_229a09538_IterRelation> _field_iter_relation = jule::Ptr<_229a09538_IterRelation>();
	jule::Slice<jule::Ptr<_229a0a4a1_Var>> _field_depends = jule::Slice<jule::Ptr<_229a0a4a1_Var>>();
	

	_229a0a4a1_Var(void) = default;

	inline bool operator==(_229a0a4a1_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_refers == _other._field_refers &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_229a0a4a1_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__229a0b64a_dispose(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0b8e2_to_str(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0bc33_logical(jule::Ptr<_228de6cbc_Fn>&, jule::Str);
inline jule::Bool static__229a0beca_eq(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0c272_gt(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0c519_gt_eq(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0c7b1_lt(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0ca58_lt_eq(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0cd99_result(jule::Ptr<_228de6cbc_Fn>&, jule::Str);
inline jule::Bool static__229a0d141_shl(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0d3d8_shr(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0d680_add(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0d927_sub(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0dbbe_div(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0de66_mul(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0e20d_mod(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0e4a5_bit_and(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0e74c_bit_or(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0e9e4_bit_xor(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a0ed35_unary(jule::Ptr<_228de6cbc_Fn>&, jule::Str);
inline jule::Bool static__229a100cc_neg(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a10374_pos(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a1061b_bit_not(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a1095c_assign(jule::Ptr<_228de6cbc_Fn>&, jule::Str);
inline jule::Bool static__229a10c04_add_assign(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a10e9b_sub_assign(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a11243_div_assign(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a114da_mul_assign(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a11782_mod_assign(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a11a29_shl_assign(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a11cc1_shr_assign(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a12068_bit_or_assign(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a12310_bit_and_assign(jule::Ptr<_228de6cbc_Fn>);
inline jule::Bool static__229a125a7_bit_xor_assign(jule::Ptr<_228de6cbc_Fn>);
struct _229a0aec9_FuncPattern {
	

	_229a0aec9_FuncPattern(void) = default;

	inline bool operator==(_229a0aec9_FuncPattern _other) { return true; }

	inline bool operator!=(_229a0aec9_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _229a3bb86_push_err(_229a3b669_TypeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _229a3bdea_check_trait(_229a3b669_TypeCompatibilityChecker*);
inline jule::Bool _229a3c15e_check_ptr(_229a3b669_TypeCompatibilityChecker*);
inline jule::Bool _229a3c3c3_check_prim(_229a3b669_TypeCompatibilityChecker*);
inline jule::Bool _229a3c77a___type_enum(_229a3b669_TypeCompatibilityChecker*, jule::Ptr<_2292e1e75_TypeEnum>&, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a3c9de_check_type_enum(_229a3b669_TypeCompatibilityChecker*);
inline jule::Bool _229a3cc53_check(_229a3b669_TypeCompatibilityChecker*);
struct _229a3b669_TypeCompatibilityChecker {
	jule::Ptr<_2299dd792_Sema> _field_s = jule::Ptr<_2299dd792_Sema>();
	jule::Ptr<_229a7d359_TypeKind> _field_dest = jule::Ptr<_229a7d359_TypeKind>();
	jule::Ptr<_229a7d359_TypeKind> _field_src = jule::Ptr<_229a7d359_TypeKind>();
	jule::Ptr<_2276b1a1c_Token> _field_error_token = jule::Ptr<_2276b1a1c_Token>();
	

	_229a3b669_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_229a3b669_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_229a3b669_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _229a3d704_push_err(_229a3d292_AssignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _229a3d968_check_validity(_229a3d292_AssignTypeChecker*);
inline jule::Bool _229a3dbcc_check_const(_229a3d292_AssignTypeChecker*);
inline jule::Bool _229a3de41_is_prim(_229a3d292_AssignTypeChecker*);
inline jule::Bool _229a3e1a5_check_compatibility(_229a3d292_AssignTypeChecker*);
inline jule::Bool _229a3e419_check(_229a3d292_AssignTypeChecker*);
struct _229a3d292_AssignTypeChecker {
	jule::Ptr<_2299dd792_Sema> _field_s = jule::Ptr<_2299dd792_Sema>();
	jule::Ptr<_229a7d359_TypeKind> _field_dest = jule::Ptr<_229a7d359_TypeKind>();
	jule::Ptr<_229a527d4_Data> _field_d = jule::Ptr<_229a527d4_Data>();
	jule::Ptr<_2276b1a1c_Token> _field_error_token = jule::Ptr<_2276b1a1c_Token>();
	

	_229a3d292_AssignTypeChecker(void) = default;

	inline bool operator==(_229a3d292_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_229a3d292_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _22d180051_annotate_constraint_elem(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _22d180abd_annotate_constraint_elem(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _22d184e13_annotate_constraint_elem(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _22d1885dc_annotate_constraint_elem(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a405e6_annotate_constraint_map(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a40937_annotate_constraint_tup(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a40c56_annotate_constraint_fn(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a41086_annotate_constraint_ident(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a413a5_annotate_constraint(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline void _229a416c4_push_generic(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&, jule::I64);
inline jule::Bool _229a419d2_annotate_prim(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a41ce0_annotate_arr(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a420ed_annotate_slc(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a424a5_check_map_key(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a427b3_annotate_map(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a42ac1_annotate_fn(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a42dce_annotate_ptr(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a431dc_annotate_sptr(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a434ea_annotate_struct(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a43808_annotate_any(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a43b16_annotate_kind(_229a3ebab_DynamicTypeAnnotation*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a43d7a_annotate(_229a3ebab_DynamicTypeAnnotation*);
struct _229a3ebab_DynamicTypeAnnotation {
	jule::Ptr<_229a54352_Eval> _field_e = jule::Ptr<_229a54352_Eval>();
	jule::Ptr<_228de996d_FnIns> _field_f = jule::Ptr<_228de996d_FnIns>();
	jule::Ptr<_228de8a9e_ParamIns> _field_p = jule::Ptr<_228de8a9e_ParamIns>();
	jule::Ptr<_229a527d4_Data> _field_a = jule::Ptr<_229a527d4_Data>();
	jule::Ptr<_2276b1a1c_Token> _field_error_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_229a7d359_TypeKind>* _field_k = nullptr;
	jule::Ptr<_228d28193_TypeDecl> _field_c = jule::Ptr<_228d28193_TypeDecl>();
	

	_229a3ebab_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_229a3ebab_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_229a3ebab_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _229a44aa1_push_err_token(_229a44551_FnCallArgChecker*, jule::Ptr<_2276b1a1c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _229a44dc0_push_err(_229a44551_FnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_228de8a9e_ParamIns>> _229a45134_get_params(_229a44551_FnCallArgChecker*);
inline jule::Bool _229a45442_check_counts(_229a44551_FnCallArgChecker*, jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>&);
inline jule::Bool _229a45893_check_arg(_229a44551_FnCallArgChecker*, jule::Ptr<_228de8a9e_ParamIns>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Bool _229a45c4a_push(_229a44551_FnCallArgChecker*, jule::Ptr<_228de8a9e_ParamIns>&, jule::Ptr<_228d2c6b4_Expr>);
inline jule::Bool _229a46102_push_variadic(_229a44551_FnCallArgChecker*, jule::Ptr<_228de8a9e_ParamIns>&, jule::I64);
inline jule::Bool _229a46410_check_args(_229a44551_FnCallArgChecker*, jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>&);
inline jule::Bool _229a46696_check_dynamic_type_annotation(_229a44551_FnCallArgChecker*);
inline jule::Bool _229a4691b_check(_229a44551_FnCallArgChecker*);
struct _229a44551_FnCallArgChecker {
	jule::Ptr<_229a54352_Eval> _field_e = jule::Ptr<_229a54352_Eval>();
	jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _field_args = jule::Slice<jule::Ptr<_228d2c6b4_Expr>>();
	jule::Ptr<_2276b1a1c_Token> _field_error_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228de996d_FnIns> _field_f = jule::Ptr<_228de996d_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();
	

	_229a44551_FnCallArgChecker(void) = default;

	inline bool operator==(_229a44551_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_229a44551_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _229a47466_push_err(_229a46e5a_StructLitChecker*, jule::Ptr<_2276b1a1c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _229a47785_push_suggestion(_229a46e5a_StructLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _229a47b4d_push_match(_229a46e5a_StructLitChecker*, jule::Ptr<_228d21037_FieldIns>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_2276b1a1c_Token>&);
inline void _229a47e6c_check_pair(_229a46e5a_StructLitChecker*, jule::Ptr<_228d32411_FieldExprPair>&, jule::Slice<jule::Ptr<_228d2c6b4_Expr>>&);
inline jule::Bool _229a4827a_ready_exprs(_229a46e5a_StructLitChecker*, jule::Slice<jule::Ptr<_228d2c6b4_Expr>>&);
inline void _229a48500_check(_229a46e5a_StructLitChecker*, jule::Slice<jule::Ptr<_228d2c6b4_Expr>>&);
struct _229a46e5a_StructLitChecker {
	jule::Ptr<_229a54352_Eval> _field_e = jule::Ptr<_229a54352_Eval>();
	jule::Ptr<_2276b1a1c_Token> _field_error_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Ptr<_228d44c1a_StructIns> _field_s = jule::Ptr<_228d44c1a_StructIns>();
	jule::Slice<jule::Ptr<_228ddee19_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_228ddee19_StructArgExprModel>>();
	

	_229a46e5a_StructLitChecker(void) = default;

	inline bool operator==(_229a46e5a_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_229a46e5a_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_229a0a4a1_Var> _229a48ed4_build_var(_229a48a3e_RangeChecker*, jule::Ptr<_228d3ae86_VarDecl>&);
inline void _229a491b0_set_size_key(_229a48a3e_RangeChecker*);
inline void _229a4959a_check_range_expr_validity(_229a48a3e_RangeChecker*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a0a4a1_Var>&, jule::Ptr<_229a7d359_TypeKind>&);
inline void _229a49787_check_slice(_229a48a3e_RangeChecker*);
inline void _229a49963_check_array(_229a48a3e_RangeChecker*);
inline void _229a49b3e_check_map_key_a(_229a48a3e_RangeChecker*);
inline void _229a49d1a_check_map_key_b(_229a48a3e_RangeChecker*);
inline void _229a49ee6_check_map(_229a48a3e_RangeChecker*);
inline void _229a4a1c2_check_str(_229a48a3e_RangeChecker*);
inline jule::Bool _229a4a436_check(_229a48a3e_RangeChecker*);
struct _229a48a3e_RangeChecker {
	jule::Ptr<_2299bd7e9_ScopeChecker> _field_sc = jule::Ptr<_2299bd7e9_ScopeChecker>();
	jule::Ptr<_228d3cb14_RangeKind> _field_rang = jule::Ptr<_228d3cb14_RangeKind>();
	jule::Ptr<_2299b8838_RangeIter> _field_kind = jule::Ptr<_2299b8838_RangeIter>();
	jule::Ptr<_229a527d4_Data> _field_d = jule::Ptr<_229a527d4_Data>();
	

	_229a48a3e_RangeChecker(void) = default;

	inline bool operator==(_229a48a3e_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_229a48a3e_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _229a4b17e_prepare_types(_229a4abc8_RetTypeChecker*);
inline void _229a4b404_prepare_exprs(_229a4abc8_RetTypeChecker*, jule::Ptr<_228d2c6b4_Expr>&);
inline void _229a4b5d0_ret_vars(_229a4abc8_RetTypeChecker*);
inline void _229a4b7ab_check_exprs(_229a4abc8_RetTypeChecker*);
inline jule::Bool _229a4bab9_check(_229a4abc8_RetTypeChecker*, jule::Ptr<_228d2c6b4_Expr>&);
struct _229a4abc8_RetTypeChecker {
	jule::Ptr<_2299bd7e9_ScopeChecker> _field_sc = jule::Ptr<_2299bd7e9_ScopeChecker>();
	jule::Ptr<_228de996d_FnIns> _field_f = jule::Ptr<_228de996d_FnIns>();
	jule::Slice<jule::Ptr<_229a7d359_TypeKind>> _field_types = jule::Slice<jule::Ptr<_229a7d359_TypeKind>>();
	jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _field_exprs = jule::Slice<jule::Ptr<_228d2c6b4_Expr>>();
	jule::Slice<jule::Ptr<_229a0a4a1_Var>> _field_vars = jule::Slice<jule::Ptr<_229a0a4a1_Var>>();
	jule::Ptr<_2276b1a1c_Token> _field_error_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_model = jule::Any();
	

	_229a4abc8_RetTypeChecker(void) = default;

	inline bool operator==(_229a4abc8_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_229a4abc8_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2299d5646_ImportInfo> _229a4d093_find_package(_229a4ca76_SymbolTable*, jule::Str);
inline jule::Ptr<_2299d5646_ImportInfo> _229a4d3a1_select_package(_229a4ca76_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)>);
inline jule::Ptr<_229a0a4a1_Var> _229a4d758_find_var(_229a4ca76_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_229a7c666_TypeAlias> _229a4db10_find_type_alias(_229a4ca76_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_228d188c0_Struct> _229a4deb7_find_struct(_229a4ca76_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_228de6cbc_Fn> _229a4e36e_find_fn(_229a4ca76_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_22923d1bd_Trait> _229a4e67c_find_trait(_229a4ca76_SymbolTable*, jule::Str);
inline jule::Ptr<_228e0dcc3_Enum> _229a4e98a_find_enum(_229a4ca76_SymbolTable*, jule::Str);
inline jule::Ptr<_2292e1e75_TypeEnum> _229a4ec98_find_type_enum(_229a4ca76_SymbolTable*, jule::Str);
inline jule::Ptr<_229a0a4a1_Var> _229a5031a___find_var(_229a4ca76_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_229a7c666_TypeAlias> _229a5076b___find_type_alias(_229a4ca76_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _229a50b23_def_by_ident(_229a4ca76_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _229a51074_is_duplicated_ident(_229a4ca76_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _229a4ca76_SymbolTable {
	jule::Ptr<_2276b6da7_File> _field_file = jule::Ptr<_2276b6da7_File>();
	jule::Slice<_228ded5ed_Pass> _field_passes = jule::Slice<_228ded5ed_Pass>();
	jule::Slice<jule::Ptr<_2299d5646_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_2299d5646_ImportInfo>>();
	jule::Slice<jule::Ptr<_229a0a4a1_Var>> _field_vars = jule::Slice<jule::Ptr<_229a0a4a1_Var>>();
	jule::Slice<jule::Ptr<_229a7c666_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>();
	jule::Slice<jule::Ptr<_228d188c0_Struct>> _field_structs = jule::Slice<jule::Ptr<_228d188c0_Struct>>();
	jule::Slice<jule::Ptr<_228de6cbc_Fn>> _field_funcs = jule::Slice<jule::Ptr<_228de6cbc_Fn>>();
	jule::Slice<jule::Ptr<_22923d1bd_Trait>> _field_traits = jule::Slice<jule::Ptr<_22923d1bd_Trait>>();
	jule::Slice<jule::Ptr<_228e0dcc3_Enum>> _field_enums = jule::Slice<jule::Ptr<_228e0dcc3_Enum>>();
	jule::Slice<jule::Ptr<_2292e1e75_TypeEnum>> _field_type_enums = jule::Slice<jule::Ptr<_2292e1e75_TypeEnum>>();
	jule::Slice<jule::Ptr<_2299a3504_Impl>> _field_impls = jule::Slice<jule::Ptr<_2299a3504_Impl>>();
	

	_229a4ca76_SymbolTable(void) = default;

	inline bool operator==(_229a4ca76_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_type_enums == _other._field_type_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_229a4ca76_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _229a52bbe_is_nil(_229a527d4_Data*);
inline jule::Bool _229a52e33_is_void(_229a527d4_Data*);
inline jule::Bool _229a53197_is_const(_229a527d4_Data*);
inline jule::Bool _229a534a5_good_operand(_229a527d4_Data*, jule::Ptr<_229a527d4_Data>&);
struct _229a527d4_Data {
	jule::Ptr<_229a7d359_TypeKind> _field_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_228d7b4d2_Const> _field_constant = jule::Ptr<_228d7b4d2_Const>();
	

	_229a527d4_Data(void) = default;

	inline bool operator==(_229a527d4_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_229a527d4_Data _other) { return !this->operator==(_other); }


};
struct _229a5385c_Value {
	jule::Ptr<_228d2c6b4_Expr> _field_expr = jule::Ptr<_228d2c6b4_Expr>();
	jule::Ptr<_229a527d4_Data> _field_data = jule::Ptr<_229a527d4_Data>();
	

	_229a5385c_Value(void) = default;

	inline bool operator==(_229a5385c_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_229a5385c_Value _other) { return !this->operator==(_other); }


};
inline void _229a5485d_push_err(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _229a54b7c_push_suggestion(_229a54352_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _229a54d58_allow_builtin(_229a54352_Eval*);
inline void _229a55034_disallow_builtin(_229a54352_Eval*);
inline jule::Bool _229a55298_is_unsafe(_229a54352_Eval*);
inline jule::Bool _229a5550c_is_global(_229a54352_Eval*);
inline jule::Bool _229a557d7_apply_numeric_prefix(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229a55a4b_lit_nil(_229a54352_Eval*);
inline jule::Ptr<_229a527d4_Data> _229a55d59_lit_str(_229a54352_Eval*, jule::Ptr<_228d2d6e8_LitExpr>&);
inline jule::Ptr<_229a527d4_Data> _229a56167_lit_bool(_229a54352_Eval*, jule::Ptr<_228d2d6e8_LitExpr>&);
inline jule::Ptr<_229a527d4_Data> _229a56475_lit_rune(_229a54352_Eval*, jule::Ptr<_228d2d6e8_LitExpr>&);
inline jule::Ptr<_229a527d4_Data> _229a56783_lit_float(_229a54352_Eval*, jule::Ptr<_228d2d6e8_LitExpr>&);
inline jule::Ptr<_229a527d4_Data> _229a56a91_lit_int(_229a54352_Eval*, jule::Ptr<_228d2d6e8_LitExpr>&);
inline jule::Ptr<_229a527d4_Data> _229a56d9e_lit_num(_229a54352_Eval*, jule::Ptr<_228d2d6e8_LitExpr>&);
inline jule::Ptr<_229a527d4_Data> _229a571ac_eval_lit(_229a54352_Eval*, jule::Ptr<_228d2d6e8_LitExpr>);
inline jule::Any _229a574ba_find_builtins(_229a54352_Eval*, jule::Str);
inline jule::Any _229a57872_get_def(_229a54352_Eval*, jule::Str, jule::Bool);
inline void _22d2c34c4_push_reference(_229a54352_Eval*, jule::Ptr<_228de996d_FnIns>&);
inline void _22d2d8044_push_reference(_229a54352_Eval*, jule::Ptr<_229a0a4a1_Var>&);
inline void _22d373596_push_reference(_229a54352_Eval*, jule::Ptr<_228d44c1a_StructIns>&);
inline jule::Ptr<_229a527d4_Data> _229a57e05___eval_enum(_229a54352_Eval*, jule::Ptr<_228e0dcc3_Enum>);
inline jule::Ptr<_229a527d4_Data> _229a582ac_eval_enum(_229a54352_Eval*, jule::Ptr<_228e0dcc3_Enum>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a585ba___eval_type_enum(_229a54352_Eval*, jule::Ptr<_2292e1e75_TypeEnum>);
inline jule::Ptr<_229a527d4_Data> _229a58972_eval_type_enum(_229a54352_Eval*, jule::Ptr<_2292e1e75_TypeEnum>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a58c80___eval_struct(_229a54352_Eval*, jule::Ptr<_228d44c1a_StructIns>);
inline jule::Ptr<_229a527d4_Data> _229a59137_eval_struct(_229a54352_Eval*, jule::Ptr<_228d44c1a_StructIns>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a59445_eval_fn_ins(_229a54352_Eval*, jule::Ptr<_228de996d_FnIns>);
inline void _229a59764_check_deprecated(_229a54352_Eval*, jule::Slice<jule::Ptr<_228ce499a_Directive>>&, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a59b1b_eval_fn(_229a54352_Eval*, jule::Ptr<_228de6cbc_Fn>, jule::Ptr<_2276b1a1c_Token>);
inline void _229a5a006_push_illegal_cycle_error(_229a54352_Eval*, jule::Ptr<_229a0a4a1_Var>&, jule::Ptr<_229a0a4a1_Var>&, jule::Str&);
inline jule::Bool _229a5a3be_check_cross_cycle(_229a54352_Eval*, jule::Ptr<_229a0a4a1_Var>&, jule::Str&);
inline jule::Bool _229a5a776_check_illegal_cycles(_229a54352_Eval*, jule::Ptr<_229a0a4a1_Var>&, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a5ab2d_eval_var(_229a54352_Eval*, jule::Ptr<_229a0a4a1_Var>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a5aed5_eval_type_alias(_229a54352_Eval*, jule::Ptr<_229a7c666_TypeAlias>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a5b38c_eval_def(_229a54352_Eval*, jule::Any, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a5b69a_eval_ident(_229a54352_Eval*, jule::Ptr<_228d2e72c_IdentExpr>);
inline jule::Ptr<_229a527d4_Data> _229a5b9a8_eval_unary(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d2ee36_UnaryExpr>);
inline jule::Ptr<_229a527d4_Data> _229a5bcb6_eval_variadic(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d302dd_VariadicExpr>);
inline jule::Ptr<_229a527d4_Data> _229a5c0c4_eval_unsafe(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d2de02_UnsafeExpr>);
inline jule::Ptr<_229a527d4_Data> _229a5c3d2_eval_arr(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d3406c_SliceExpr>);
inline jule::Ptr<_229a527d4_Data> _229a5c833_eval_exp_slc(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d3406c_SliceExpr>, jule::Ptr<_229a7d359_TypeKind>, jule::Any);
inline jule::Ptr<_229a527d4_Data> _229a5cb41_eval_slice_expr(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d3406c_SliceExpr>);
inline void _229a5ce82_check_integer_indexing_by_data(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_2276b1a1c_Token>);
inline void _229a5d35b_indexing_ptr(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_228d3490d_IndexingExpr>&);
inline void _229a5d724_indexing_arr(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_228d3490d_IndexingExpr>&);
inline void _229a5dadc_indexing_slc(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_228d3490d_IndexingExpr>&);
inline void _229a5dea5_indexing_map(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_228d3490d_IndexingExpr>&);
inline void _229a5e36d_indexing_str(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_228d3490d_IndexingExpr>&);
inline void _229a5e736_to_indexing(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_228d3490d_IndexingExpr>&);
inline jule::Bool _229a5ebba_push_generics_from_expr_sub_ident(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d30ec0_SubIdentExpr>&, jule::Slice<jule::Ptr<_228d28193_TypeDecl>>&, jule::Ptr<_228d2c6b4_Expr>&);
inline jule::Bool _229a600c7_push_generics_from_data(jule::Ptr<_229a54352_Eval>, jule::Slice<jule::Ptr<_228d28193_TypeDecl>>&, jule::Ptr<_228d2c6b4_Expr>&);
inline jule::Ptr<_229a527d4_Data> _229a603d5_eval_ident_decl_from_indexing(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d3490d_IndexingExpr>&);
inline void _229a60737_eval_fn_generic_from_indexing(jule::Ptr<_229a54352_Eval>, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_228d3490d_IndexingExpr>&);
inline jule::Ptr<_229a527d4_Data> _229a60a56_eval_indexing(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d3490d_IndexingExpr>);
inline std::tuple<jule::Ptr<_229a527d4_Data>,jule::Ptr<_229a527d4_Data>> _229a60d64_eval_slicing_exprs(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d35018_SlicingExpr>&);
inline void _229a610d9_slicing_arr(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>&);
inline void _229a614a2_slicing_str(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>&);
inline void _229a61914_check_slicing(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_228d35018_SlicingExpr>&);
inline jule::Ptr<_229a527d4_Data> _229a61c22_eval_slicing(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d35018_SlicingExpr>);
inline void _229a620da_cast_ptr(_229a54352_Eval*, jule::Ptr<_229a7d359_TypeKind>, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline void _229a624a3_cast_struct(_229a54352_Eval*, jule::Ptr<_229a7d359_TypeKind>, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline void _229a6286b_cast_ref(_229a54352_Eval*, jule::Ptr<_229a7d359_TypeKind>, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline void _229a62c34_cast_slc(_229a54352_Eval*, jule::Ptr<_229a7d359_TypeKind>, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline void _229a63053_cast_str(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline void _229a6341b_cast_int(_229a54352_Eval*, jule::Ptr<_229a7d359_TypeKind>, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline void _229a637d4_cast_num(_229a54352_Eval*, jule::Ptr<_229a7d359_TypeKind>, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline void _229a63b9c_cast_prim(_229a54352_Eval*, jule::Ptr<_229a7d359_TypeKind>, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline void _229a63ebb_cast_constant(_229a54352_Eval*, jule::Ptr<_229a7d359_TypeKind>&, jule::Ptr<_229a527d4_Data>&);
inline void _229a64384_cast_type_enum(_229a54352_Eval*, jule::Ptr<_229a7d359_TypeKind>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Ptr<_229a527d4_Data> _229a64807_eval_cast_by_type_n_data(_229a54352_Eval*, jule::Ptr<_229a7d359_TypeKind>, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a64c69_eval_cast_t(jule::Ptr<_229a54352_Eval>, jule::Ptr<_229a7d359_TypeKind>&, jule::Ptr<_228d2c6b4_Expr>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Ptr<_229a527d4_Data> _229a65077_eval_cast(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d30695_CastExpr>);
inline jule::Ptr<_229a527d4_Data> _229a65385_eval_ns_selection(_229a54352_Eval*, jule::Ptr<_228d30a4c_NsSelectionExpr>);
inline jule::Ptr<_229a527d4_Data> _229a65808_eval_struct_lit_explicit(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d44c1a_StructIns>, jule::Slice<jule::Ptr<_228d2c6b4_Expr>>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a65b27_eval_struct_lit(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d32b5e_StructLit>);
inline jule::Ptr<_229a527d4_Data> _229a65e35_eval_type(_229a54352_Eval*, jule::Ptr<_228d28193_TypeDecl>);
inline void _229a66254_call_type_fn(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline void _229a66573_call_builtin_fn(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline void _229a668b4_check_fn_of_concurrent_call(_229a54352_Eval*, jule::Ptr<_228de996d_FnIns>&, jule::Ptr<_2276b1a1c_Token>);
inline void _229a66cb0_process_exceptional_handler(_229a54352_Eval*, jule::Ptr<_228de996d_FnIns>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline void _229a670e0_call_fn(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229a673ed_eval_fn_call(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d31982_FnCallExpr>);
inline jule::Ptr<_229a527d4_Data> _229a677a5_eval_enum_static(_229a54352_Eval*, jule::Ptr<_228e0dcc3_Enum>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a67b5c_eval_type_enum_static(_229a54352_Eval*, jule::Ptr<_2292e1e75_TypeEnum>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a68014_eval_struct_static(_229a54352_Eval*, jule::Ptr<_228d44c1a_StructIns>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a68465_eval_trait_sub_ident(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>, jule::Ptr<_22923d1bd_Trait>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a68960_eval_struct_sub_ident(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>, jule::Ptr<_228d44c1a_StructIns>, jule::Ptr<_228d30ec0_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_229a527d4_Data> _229a68d17_eval_slice_sub_ident(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a691be_eval_array_sub_ident(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a69576_eval_map_sub_ident(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6992d_eval_str_sub_ident(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a69c3b_eval_int_type_static(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6a049_eval_uint_type_static(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6a357_eval_i8_type_static(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6a665_eval_i16_type_static(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6a973_eval_i32_type_static(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6ac81_eval_i64_type_static(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6b08e_eval_u8_type_static(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6b39c_eval_u16_type_static(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6b6aa_eval_u32_type_static(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6b9b8_eval_u64_type_static(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6bcc6_eval_f32_type_tatic(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6c0d4_eval_f64_type_static(_229a54352_Eval*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6c48b_eval_prim_static(_229a54352_Eval*, jule::Str, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_229a527d4_Data> _229a6c843_eval_type_static(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>, jule::Ptr<_228d30ec0_SubIdentExpr>);
inline jule::Ptr<_229a527d4_Data> _229a6cbea_eval_obj_sub_ident(_229a54352_Eval*, jule::Ptr<_229a527d4_Data>, jule::Ptr<_228d30ec0_SubIdentExpr>);
inline jule::Ptr<_229a527d4_Data> _229a6d008_eval_sub_ident(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d30ec0_SubIdentExpr>);
inline jule::Ptr<_229a527d4_Data> _229a6d316_eval_tuple(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d2d341_TupleExpr>);
inline jule::Ptr<_229a527d4_Data> _229a6d6bd_eval_map(jule::Ptr<_229a54352_Eval>, jule::Ptr<_229a885c8_Map>, jule::Ptr<_228d330d2_BraceLit>);
inline jule::Ptr<_229a527d4_Data> _229a6d9cb_eval_brace_lit(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d330d2_BraceLit>);
inline jule::Ptr<_229a527d4_Data> _229a6dcd9_eval_anon_fn(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d39ea7_FnDecl>);
inline jule::Ptr<_229a527d4_Data> _229a6e0e7_eval_binop(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d31443_BinopExpr>);
inline jule::Ptr<_229a527d4_Data> _229a6e405_eval_expr_kind(jule::Ptr<_229a54352_Eval>, jule::Any);
inline jule::Ptr<_229a527d4_Data> _229a6e713_eval(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d2c6b4_Expr>);
inline jule::Ptr<_229a527d4_Data> _229a6ea21_eval_expr(jule::Ptr<_229a54352_Eval>, jule::Ptr<_228d2c6b4_Expr>);
struct _229a54352_Eval {
	jule::Ptr<_2299dd792_Sema> _field_s = jule::Ptr<_2299dd792_Sema>();
	jule::Trait<_229a98e02_Lookup> _field_lookup = jule::Trait<_229a98e02_Lookup>();
	jule::Ptr<_229a7d359_TypeKind> _field_prefix = jule::Ptr<_229a7d359_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_229a0a4a1_Var> _field_owner = jule::Ptr<_229a0a4a1_Var>();
	jule::Ptr<_228d21037_FieldIns> _field_field = jule::Ptr<_228d21037_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_229a54352_Eval(void) = default;

	inline bool operator==(_229a54352_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_229a54352_Eval _other) { return !this->operator==(_other); }


};
inline _229a6ee94_UnaryEval static__229a7044a_new(jule::Ptr<_229a54352_Eval>);
inline void _229a70626_minus(_229a6ee94_UnaryEval*);
inline void _229a70802_plus(_229a6ee94_UnaryEval*);
inline void _229a709cd_caret(_229a6ee94_UnaryEval*);
inline void _229a70ba9_excl(_229a6ee94_UnaryEval*);
inline void _229a70d85_star(_229a6ee94_UnaryEval*);
inline void _229a71061_amper(_229a6ee94_UnaryEval*);
inline void _229a7123c_type_decl(_229a6ee94_UnaryEval*);
inline void _229a71418_eval_data(_229a6ee94_UnaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a716e3_eval(_229a6ee94_UnaryEval*, jule::Ptr<_228d2ee36_UnaryExpr>);
struct _229a6ee94_UnaryEval {
	jule::Ptr<_229a54352_Eval> _field_e = jule::Ptr<_229a54352_Eval>();
	jule::Ptr<_229a527d4_Data> _field_d = jule::Ptr<_229a527d4_Data>();
	jule::Ptr<_228d2ee36_UnaryExpr> _field_u = jule::Ptr<_228d2ee36_UnaryExpr>();
	

	_229a6ee94_UnaryEval(void) = default;

	inline bool operator==(_229a6ee94_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_229a6ee94_UnaryEval _other) { return !this->operator==(_other); }


};
inline _229a71c32_BinaryEval static__229a722e8_new_plain(jule::Ptr<_229a54352_Eval>);
inline _229a71c32_BinaryEval static__229a72639_new(jule::Ptr<_229a54352_Eval>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Bool _229a728c0_check_type_compatibility(_229a71c32_BinaryEval*);
inline jule::Bool _229a72b78_check_struct_common_operator_compatibility(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a72e20_eval_nil(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a73184_eval_enum(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a733e8_eval_type_enum(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a7365c_eval_sptr(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a738c1_eval_ptr(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a73b35_eval_arr(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a73d99_eval_slc(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a7410d_eval_fn(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a74372_eval_struct(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a745d6_eval_trait(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a7484a_eval_any(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a74aae_eval_bool(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a74d23_eval_str(_229a71c32_BinaryEval*);
inline void _229a74eee_set_type_to_greater(_229a71c32_BinaryEval*);
inline void _229a75241_check_mod_data(_229a71c32_BinaryEval*, jule::Ptr<_229a527d4_Data>&);
inline void _229a7541c_mod(_229a71c32_BinaryEval*);
inline jule::Bool _229a757e6_numbers_are_compatibile(_229a71c32_BinaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_229a527d4_Data> _229a75a6b_eval_float(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a75cd0_eval_int(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a76044_eval_prim(_229a71c32_BinaryEval*);
inline jule::Ptr<_229a527d4_Data> _229a762a8_eval_op(_229a71c32_BinaryEval*);
inline void _229a7652d_eval_const(_229a71c32_BinaryEval*, jule::Ptr<_229a527d4_Data>&);
inline void _229a767a3_check_data(_229a71c32_BinaryEval*, jule::Ptr<_229a527d4_Data>&);
inline void _229a7697e_check_datas(_229a71c32_BinaryEval*);
inline void _229a76c04_set_model(_229a71c32_BinaryEval*, jule::Ptr<_229a527d4_Data>&);
inline void _229a76e79_post_eval(_229a71c32_BinaryEval*, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229a77331_solve_explicit(_229a71c32_BinaryEval*, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229a7763e_eval(_229a71c32_BinaryEval*, jule::Ptr<_228d31443_BinopExpr>&);
struct _229a71c32_BinaryEval {
	jule::Ptr<_229a54352_Eval> _field_e = jule::Ptr<_229a54352_Eval>();
	jule::Ptr<_229a527d4_Data> _field_l = jule::Ptr<_229a527d4_Data>();
	jule::Ptr<_229a527d4_Data> _field_r = jule::Ptr<_229a527d4_Data>();
	jule::Ptr<_2276b1a1c_Token> _field_op = jule::Ptr<_2276b1a1c_Token>();
	

	_229a71c32_BinaryEval(void) = default;

	inline bool operator==(_229a71c32_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_229a71c32_BinaryEval _other) { return !this->operator==(_other); }


};
struct _229a7bb2c_InsGeneric {
	jule::Ptr<_229a7d359_TypeKind> _field_kind = jule::Ptr<_229a7d359_TypeKind>();
	jule::Slice<jule::Ptr<_229a7d359_TypeKind>> _field_constraint = jule::Slice<jule::Ptr<_229a7d359_TypeKind>>();
	

	_229a7bb2c_InsGeneric(void) = default;

	inline bool operator==(_229a7bb2c_InsGeneric _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_constraint == _other._field_constraint;
	}

	inline bool operator!=(_229a7bb2c_InsGeneric _other) { return !this->operator==(_other); }


};
struct _229a7c666_TypeAlias {
	jule::Ptr<_228d384b1_ScopeTree> _field_scope = jule::Ptr<_228d384b1_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_229a824b2_TypeSymbol> _field_kind = jule::Ptr<_229a824b2_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_229a7c666_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>();
	

	_229a7c666_TypeAlias(void) = default;

	inline bool operator==(_229a7c666_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_229a7c666_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _229a7d755_to_str(_229a7d359_TypeKind*);
inline jule::Bool _229a7da63_equals(jule::Ptr<_229a7d359_TypeKind>, jule::Ptr<_229a7d359_TypeKind>);
inline jule::Bool _229a7e019_cpp_linked(_229a7d359_TypeKind*);
inline jule::Bool _229a7e27d_is_nil(_229a7d359_TypeKind*);
inline jule::Bool _229a7e4e2_void(_229a7d359_TypeKind*);
inline jule::Bool _229a7e756_mutable(_229a7d359_TypeKind*);
inline jule::Bool _229a7e9ba_nil_compatible(_229a7d359_TypeKind*);
inline jule::Bool _229a7ec2e_performs_rc(_229a7d359_TypeKind*);
inline jule::Bool _229a7ee93_supports_cloning(_229a7d359_TypeKind*);
inline jule::Bool _229a80207_variadicable(_229a7d359_TypeKind*);
inline jule::Ptr<_229a82d31_Prim> _229a8046b_prim(_229a7d359_TypeKind*);
inline jule::Ptr<_229a865b5_Sptr> _229a806d0_sptr(_229a7d359_TypeKind*);
inline jule::Ptr<_229a89b29_Ptr> _229a80944_ptr(_229a7d359_TypeKind*);
inline jule::Ptr<_228e0dcc3_Enum> _229a80ba8_enm(_229a7d359_TypeKind*);
inline jule::Ptr<_2292e1e75_TypeEnum> _229a80e1c_tenm(_229a7d359_TypeKind*);
inline jule::Ptr<_229a891bc_Arr> _229a81181_arr(_229a7d359_TypeKind*);
inline jule::Ptr<_229a87022_Slc> _229a813e5_slc(_229a7d359_TypeKind*);
inline jule::Ptr<_228de996d_FnIns> _229a81659_fnc(_229a7d359_TypeKind*);
inline jule::Ptr<_228d44c1a_StructIns> _229a818bd_strct(_229a7d359_TypeKind*);
inline jule::Ptr<_22923d1bd_Trait> _229a81b32_trt(_229a7d359_TypeKind*);
inline jule::Ptr<_229a885c8_Map> _229a81d96_map(_229a7d359_TypeKind*);
inline jule::Ptr<_229a87aa0_Tuple> _229a8210a_tup(_229a7d359_TypeKind*);
struct _229a7d359_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_229a7ce2a_Kind> _field_kind = jule::Trait<_229a7ce2a_Kind>();
	

	_229a7d359_TypeKind(void) = default;

	inline bool operator==(_229a7d359_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_229a7d359_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _229a82869_checked(_229a824b2_TypeSymbol*);
inline void _229a82a45_remove_kind(_229a824b2_TypeSymbol*);
struct _229a824b2_TypeSymbol {
	jule::Ptr<_228d28193_TypeDecl> _field_decl = jule::Ptr<_228d28193_TypeDecl>();
	jule::Ptr<_229a7d359_TypeKind> _field_kind = jule::Ptr<_229a7d359_TypeKind>();
	

	_229a824b2_TypeSymbol(void) = default;

	inline bool operator==(_229a824b2_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_229a824b2_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _229a83194_to_str(_229a82d31_Prim*);
inline jule::Bool _229a834a2_equals(jule::Ptr<_229a82d31_Prim>, jule::Ptr<_229a7d359_TypeKind>);
inline jule::Bool _229a83925_is_constraint(_229a82d31_Prim*);
inline jule::Bool _229a83b89_is_i8(_229a82d31_Prim*);
inline jule::Bool _229a83ded_is_i16(_229a82d31_Prim*);
inline jule::Bool _229a84162_is_i32(_229a82d31_Prim*);
inline jule::Bool _229a843c6_is_i64(_229a82d31_Prim*);
inline jule::Bool _229a8463a_is_u8(_229a82d31_Prim*);
inline jule::Bool _229a8489e_is_u16(_229a82d31_Prim*);
inline jule::Bool _229a84b13_is_u32(_229a82d31_Prim*);
inline jule::Bool _229a84d77_is_u64(_229a82d31_Prim*);
inline jule::Bool _229a850db_is_f32(_229a82d31_Prim*);
inline jule::Bool _229a85350_is_f64(_229a82d31_Prim*);
inline jule::Bool _229a855b4_is_int(_229a82d31_Prim*);
inline jule::Bool _229a85828_is_uint(_229a82d31_Prim*);
inline jule::Bool _229a85a8c_is_uintptr(_229a82d31_Prim*);
inline jule::Bool _229a85d01_is_bool(_229a82d31_Prim*);
inline jule::Bool _229a86065_is_str(_229a82d31_Prim*);
inline jule::Bool _229a862c9_is_any(_229a82d31_Prim*);
struct _229a82d31_Prim {
	jule::Str _field_kind = jule::Str();
	

	_229a82d31_Prim(void) = default;

	inline bool operator==(_229a82d31_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_229a82d31_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _229a86928_to_str(_229a865b5_Sptr*);
inline jule::Bool _229a86c36_equals(jule::Ptr<_229a865b5_Sptr>, jule::Ptr<_229a7d359_TypeKind>);
struct _229a865b5_Sptr {
	jule::Ptr<_229a7d359_TypeKind> _field_elem = jule::Ptr<_229a7d359_TypeKind>();
	

	_229a865b5_Sptr(void) = default;

	inline bool operator==(_229a865b5_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_229a865b5_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _229a8752d_to_str(_229a87022_Slc*);
inline jule::Bool _229a8783b_equals(jule::Ptr<_229a87022_Slc>, jule::Ptr<_229a7d359_TypeKind>);
struct _229a87022_Slc {
	jule::Ptr<_229a7d359_TypeKind> _field_elem = jule::Ptr<_229a7d359_TypeKind>();
	

	_229a87022_Slc(void) = default;

	inline bool operator==(_229a87022_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_229a87022_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _229a87e13_to_str(_229a87aa0_Tuple*);
inline jule::Bool _229a88221_equals(jule::Ptr<_229a87aa0_Tuple>, jule::Ptr<_229a7d359_TypeKind>);
struct _229a87aa0_Tuple {
	jule::Slice<jule::Ptr<_229a7d359_TypeKind>> _field_types = jule::Slice<jule::Ptr<_229a7d359_TypeKind>>();
	

	_229a87aa0_Tuple(void) = default;

	inline bool operator==(_229a87aa0_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_229a87aa0_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _229a8893b_to_str(_229a885c8_Map*);
inline jule::Bool _229a88c49_equals(jule::Ptr<_229a885c8_Map>, jule::Ptr<_229a7d359_TypeKind>);
struct _229a885c8_Map {
	jule::Ptr<_229a7d359_TypeKind> _field_key = jule::Ptr<_229a7d359_TypeKind>();
	jule::Ptr<_229a7d359_TypeKind> _field_val = jule::Ptr<_229a7d359_TypeKind>();
	

	_229a885c8_Map(void) = default;

	inline bool operator==(_229a885c8_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_229a885c8_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _229a89530_to_str(_229a891bc_Arr*);
inline jule::Bool _229a8983d_equals(jule::Ptr<_229a891bc_Arr>, jule::Ptr<_229a7d359_TypeKind>);
struct _229a891bc_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_229a7d359_TypeKind> _field_elem = jule::Ptr<_229a7d359_TypeKind>();
	

	_229a891bc_Arr(void) = default;

	inline bool operator==(_229a891bc_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_229a891bc_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _229a89e8c_to_str(_229a89b29_Ptr*);
inline jule::Bool _229a8a29a_equals(jule::Ptr<_229a89b29_Ptr>, jule::Ptr<_229a7d359_TypeKind>);
inline jule::Bool _229a8a5ec_is_unsafe(_229a89b29_Ptr*);
struct _229a89b29_Ptr {
	jule::Ptr<_229a7d359_TypeKind> _field_elem = jule::Ptr<_229a7d359_TypeKind>();
	

	_229a89b29_Ptr(void) = default;

	inline bool operator==(_229a89b29_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_229a89b29_Ptr _other) { return !this->operator==(_other); }


};
struct _229a8aa70_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_229a8aa70_Referencer(void) = default;

	inline bool operator==(_229a8aa70_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_229a8aa70_Referencer _other) { return !this->operator==(_other); }


};
inline void _229a8bec2_push_err(_229a8b7b8_TypeChecker*, jule::Ptr<_2276b1a1c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _229a8c19d_allow_builtin(_229a8b7b8_TypeChecker*);
inline void _229a8c379_disallow_builtin(_229a8b7b8_TypeChecker*);
inline jule::Ptr<_229a82d31_Prim> _229a8c687_build_prim(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28759_IdentTypeDecl>&);
inline void _22b7c97e0_push_reference(_229a8b7b8_TypeChecker*, jule::Ptr<_228d44c1a_StructIns>&);
inline void _22b7cc89d_push_reference(_229a8b7b8_TypeChecker*, jule::Ptr<_22923d1bd_Trait>&);
inline void _229a8cb82_push_reference_by_kind(_229a8b7b8_TypeChecker*, jule::Ptr<_229a7d359_TypeKind>&);
inline void _229a8d04a_push_cycle_error(_229a8b7b8_TypeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _229a8d402_check_cross_cycle(_229a8b7b8_TypeChecker*, jule::Any, jule::Str&);
inline jule::Bool _229a8d7a9_check_illegal_cycles(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28759_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_229a7ce2a_Kind> _229a8db61_from_type_alias(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28759_IdentTypeDecl>&, jule::Ptr<_229a7c666_TypeAlias>&);
inline jule::Ptr<_228e0dcc3_Enum> _229a8e018_from_enum(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28759_IdentTypeDecl>&, jule::Ptr<_228e0dcc3_Enum>&);
inline jule::Ptr<_2292e1e75_TypeEnum> _229a8e3c0_from_type_enum(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28759_IdentTypeDecl>&, jule::Ptr<_2292e1e75_TypeEnum>&);
inline jule::Ptr<_22923d1bd_Trait> _229a8e777_from_trait(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28759_IdentTypeDecl>&, jule::Ptr<_22923d1bd_Trait>&);
inline jule::Bool _229a8eb2e_check_struct_ins(_229a8b7b8_TypeChecker*, jule::Ptr<_228d44c1a_StructIns>&, jule::Ptr<_2276b1a1c_Token>&);
inline void _229a8edc6_append_used_struct_reference(_229a8b7b8_TypeChecker*, jule::Ptr<_228d188c0_Struct>&);
inline jule::Ptr<_228d44c1a_StructIns> _229a9028e_build_struct_instance(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28759_IdentTypeDecl>&, jule::Ptr<_228d188c0_Struct>&);
inline jule::Ptr<_228d44c1a_StructIns> _229a90646_from_struct(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28759_IdentTypeDecl>&, jule::Ptr<_228d188c0_Struct>&);
inline jule::Trait<_229a7ce2a_Kind> _229a90954_get_def(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28759_IdentTypeDecl>&);
inline jule::Trait<_229a7ce2a_Kind> _229a90c62_build_ident(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28759_IdentTypeDecl>);
inline jule::Trait<_229a7ce2a_Kind> _229a91070_build_sub_ident(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28da8_SubIdentTypeDecl>);
inline jule::Ptr<_229a865b5_Sptr> _229a9137d_build_sptr_from_type(_229a8b7b8_TypeChecker*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Ptr<_229a865b5_Sptr> _229a9168b_build_sptr(_229a8b7b8_TypeChecker*, jule::Ptr<_228d2954b_SptrTypeDecl>);
inline jule::Ptr<_229a89b29_Ptr> _229a91999_build_ptr_from_type(_229a8b7b8_TypeChecker*, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Ptr<_229a89b29_Ptr> _229a91ca7_build_ptr(_229a8b7b8_TypeChecker*, jule::Ptr<_228d2a01e_PtrTypeDecl>);
inline jule::Ptr<_229a87022_Slc> _229a920b5_build_slc(_229a8b7b8_TypeChecker*, jule::Ptr<_228d29947_SlcTypeDecl>);
inline jule::Ptr<_229a891bc_Arr> _229a923c3_build_arr(_229a8b7b8_TypeChecker*, jule::Ptr<_228d2a6a1_ArrTypeDecl>);
inline jule::Ptr<_229a885c8_Map> _229a926d1_build_map(_229a8b7b8_TypeChecker*, jule::Ptr<_228d2adee_MapTypeDecl>);
inline jule::Ptr<_229a87aa0_Tuple> _229a929de_build_tuple(_229a8b7b8_TypeChecker*, jule::Ptr<_228d29c33_TupleTypeDecl>);
inline jule::Bool _229a92cec_check_fn_types(_229a8b7b8_TypeChecker*, jule::Ptr<_228de996d_FnIns>&);
inline jule::Ptr<_228de996d_FnIns> _229a9310a_build_fn(_229a8b7b8_TypeChecker*, jule::Ptr<_228d39ea7_FnDecl>);
inline jule::Trait<_229a7ce2a_Kind> _229a93418_build_by_namespace(_229a8b7b8_TypeChecker*, jule::Ptr<_228d29260_NamespaceTypeDecl>);
inline jule::Ptr<_229a7d359_TypeKind> _229a93726_build(_229a8b7b8_TypeChecker*, jule::Any&);
inline jule::Ptr<_229a7d359_TypeKind> _229a93a34_check_decl(_229a8b7b8_TypeChecker*, jule::Ptr<_228d28193_TypeDecl>&);
inline void _229a93ca9_check(_229a8b7b8_TypeChecker*, jule::Ptr<_229a824b2_TypeSymbol>&);
struct _229a8b7b8_TypeChecker {
	jule::Ptr<_2299dd792_Sema> _field_s = jule::Ptr<_2299dd792_Sema>();
	jule::Trait<_229a98e02_Lookup> _field_lookup = jule::Trait<_229a98e02_Lookup>();
	jule::Ptr<_229a8aa70_Referencer> _field_referencer = jule::Ptr<_229a8aa70_Referencer>();
	jule::Ptr<_228dec234_ReferenceStack> _field_refers = jule::Ptr<_228dec234_ReferenceStack>();
	jule::Ptr<_2276b1a1c_Token> _field_error_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Slice<jule::Ptr<_228d35777_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_228d35777_GenericDecl>>();
	jule::Slice<jule::Ptr<_229a7c666_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_229a7c666_TypeAlias> _field_owner_alias = jule::Ptr<_229a7c666_TypeAlias>();
	jule::Slice<jule::Ptr<_229a7c666_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_229a8b7b8_TypeChecker(void) = default;

	inline bool operator==(_229a8b7b8_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_229a8b7b8_TypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__229a94419___ident_type_decl(jule::Str&, jule::Ptr<_228d28759_IdentTypeDecl>);
inline jule::Bool static__229a9475a_exist(jule::Str&, jule::Any&);
struct _229a93ec9_IdentTypeLookup {
	

	_229a93ec9_IdentTypeLookup(void) = default;

	inline bool operator==(_229a93ec9_IdentTypeLookup _other) { return true; }

	inline bool operator!=(_229a93ec9_IdentTypeLookup _other) { return !this->operator==(_other); }


};
struct _22a422945_FileInfo {
	jule::Ptr<_228ce3900_Ast> _field_ast = jule::Ptr<_228ce3900_Ast>();
	jule::Slice<_2409487a2_Log> _field_errors = jule::Slice<_2409487a2_Log>();
	

	_22a422945_FileInfo(void) = default;

	inline bool operator==(_22a422945_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_22a422945_FileInfo _other) { return !this->operator==(_other); }


};
struct _22a4774d3_stmt {
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_tokens = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_22a4774d3_stmt(void) = default;

	inline bool operator==(_22a4774d3_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_22a4774d3_stmt _other) { return !this->operator==(_other); }


};
inline void _22a478490_stop(_22a477d0d_ScopeParser*);
inline jule::Bool _22a478704_stopped(_22a477d0d_ScopeParser*);
inline jule::Bool _22a478968_finished(_22a477d0d_ScopeParser*);
inline jule::Bool _22a478bcc_is_last_st(_22a477d0d_ScopeParser*);
inline void _22a478eeb_push_err(_22a477d0d_ScopeParser*, jule::Ptr<_2276b1a1c_Token>, jule::Str);
inline void _22a47931a_push_suggestion(_22a477d0d_ScopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _22a479590_insert_as_next(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_22a4774d3_stmt> _22a479804_next(_22a477d0d_ScopeParser*);
inline jule::Ptr<_228d384b1_ScopeTree> _22a479bab_build_scope(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_228d3ae86_VarDecl> _22a479eb9_build_var_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d3b33d_RetSt> _22a47a2c7_build_ret_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d3b99d_Iter> _22a47a5d5_build_while_next_iter(_22a477d0d_ScopeParser*, jule::Ptr<_22a4774d3_stmt>&);
inline jule::Ptr<_228d3c273_WhileKind> _22a47a8e3_build_while_iter_kind(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a47ac23_get_range_kind_keys_tokens(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d3ae86_VarDecl> _22a47b042_build_range_kind_key(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Slice<jule::Ptr<_228d3ae86_VarDecl>> _22a47b350_build_range_kind_keys(_22a477d0d_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>&);
inline void _22a47b691_setup_range_kind_keys_plain(_22a477d0d_ScopeParser*, jule::Ptr<_228d3cb14_RangeKind>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a47b9e3_setup_range_kind_keys_explicit(_22a477d0d_ScopeParser*, jule::Ptr<_228d3cb14_RangeKind>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a47bd23_setup_range_kind_keys(_22a477d0d_ScopeParser*, jule::Ptr<_228d3cb14_RangeKind>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d3cb14_RangeKind> _22a47c274_build_range_iter_kind(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Any _22a47c62b_build_common_iter_kind(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Ptr<_228d3b99d_Iter> _22a47c939_build_common_iter(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d3b99d_Iter> _22a47cc47_build_iter_st(_22a477d0d_ScopeParser*, jule::Ptr<_22a4774d3_stmt>&);
inline jule::Ptr<_228d3cebb_BreakSt> _22a47d055_build_break_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d3d373_ContSt> _22a47d363_build_cont_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d3d7e6_If> _22a47d671_build_if(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d3db9d_Else> _22a47d97e_build_else(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d3e121_Conditional> _22a47dc8c_build_if_else_chain(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d2e2a9_CoExpr> _22a47e09a_build_co_call_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d35ed6_GotoSt> _22a47e3a8_build_goto_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d362c2_FallSt> _22a47e6b6_build_fall_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d3e7e7_TypeAliasDecl> _22a47e9c4_build_type_alias_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a47ee36_push_case_expr(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>, jule::Ptr<_2276b1a1c_Token>, jule::Bool, jule::Slice<jule::Ptr<_228d2c6b4_Expr>>&);
inline jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _22a4802dd_build_case_exprs(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Bool);
inline jule::Ptr<_228d384b1_ScopeTree> _22a4805eb_build_case_scope(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline std::tuple<jule::Ptr<_228d3ec6a_Case>,jule::Bool> _22a4809a3_build_case(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_228d3ec6a_Case>>,jule::Ptr<_228d3db9d_Else>> _22a480d5a_build_cases(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>, jule::Bool);
inline jule::Ptr<_228d40441_MatchCase> _22a481168_build_match_case(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d384b1_ScopeTree> _22a481476_build_scope_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d35b2e_LabelSt> _22a481784_build_label_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _22a481a92_build_id_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_22a49051d_AssignInfo> _22a481da0_build_assign_info(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d368cc_AssignLeft> _22a4821ad_build_assign_l(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Slice<jule::Ptr<_228d368cc_AssignLeft>> _22a4824bb_build_assign_ls(_22a477d0d_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>&);
inline std::tuple<jule::Ptr<_228d36e1b_AssignSt>,jule::Bool> _22a4827c9_build_plain_assign(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline std::tuple<jule::Ptr<_228d36e1b_AssignSt>,jule::Bool> _22a482ad7_build_decl_assign(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline std::tuple<jule::Ptr<_228d36e1b_AssignSt>,jule::Bool> _22a482de5_build_assign_st(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d2d055_UseExpr> _22a483203_build_use_expr(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Any _22a483511_build_st(_22a477d0d_ScopeParser*, jule::Ptr<_22a4774d3_stmt>&);
inline void _22a483830_build(_22a477d0d_ScopeParser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Ptr<_228d384b1_ScopeTree>&);
struct _22a477d0d_ScopeParser {
	jule::Ptr<_22a493a93_Parser> _field_p = jule::Ptr<_22a493a93_Parser>();
	jule::Ptr<_228d384b1_ScopeTree> _field_s = jule::Ptr<_228d384b1_ScopeTree>();
	jule::Slice<jule::Ptr<_22a4774d3_stmt>> _field_stmts = jule::Slice<jule::Ptr<_22a4774d3_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_22a477d0d_ScopeParser(void) = default;

	inline bool operator==(_22a477d0d_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_22a477d0d_ScopeParser _other) { return !this->operator==(_other); }


};
inline void _22a4859a8_push_err(_22a4851a0_ExprBuilder*, jule::Ptr<_2276b1a1c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _22a485cc7_push_suggestion(_22a4851a0_ExprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_228d2d341_TupleExpr> _22a4860d5_build_tuple(_22a4851a0_ExprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>&);
inline jule::Ptr<_228d2d6e8_LitExpr> _22a4863e3_build_lit(_22a4851a0_ExprBuilder*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_228d28193_TypeDecl> _22a486701_build_primitive_type(_22a4851a0_ExprBuilder*, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Any _22a486a0e_build_single(_22a4851a0_ExprBuilder*, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_228d2e72c_IdentExpr> _22a486d1c_build_cpp_linked_ident(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d2ee36_UnaryExpr> _22a48712a_build_unary(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d30ec0_SubIdentExpr> _22a487438_build_obj_sub_ident(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d30a4c_NsSelectionExpr> _22a487746_build_ns_sub_ident(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d28193_TypeDecl> _22a487a54_build_type(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Any _22a487d62_build_sub_ident(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d302dd_VariadicExpr> _22a488170_build_variadic(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Any _22a48847d_build_op_right(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d2c9a0_RangeExpr> _22a4887ad_build_between_parentheses(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d30695_CastExpr> _22a488acc_try_build_cast(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a488e95_push_arg(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_228d2c6b4_Expr>>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _22a4892a3_build_args(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Slice<jule::Ptr<_228d28193_TypeDecl>> _22a4895b1_build_call_generics(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d31982_FnCallExpr> _22a489a12_build_fn_call(_22a4851a0_ExprBuilder*, jule::Ptr<_2276b1a1c_Token>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Any _22a489d42_build_parentheses_range(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d2de02_UnsafeExpr> _22a48a161_build_unsafe_expr(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d39ea7_FnDecl> _22a48a46e_build_anon_fn(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Any _22a48a77c_build_unsafe(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a48ab45_push_range_lit_part(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>, jule::Ptr<_2276b1a1c_Token>, jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a48ae75_get_brace_range_lit_expr_parts(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d32411_FieldExprPair> _22a48b294_build_field_expr_pair(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d2c6b4_Expr> _22a48b5a2_build_struct_lit_expr(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _22a48b8b0_build_struct_lit_exprs(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d32b5e_StructLit> _22a48bbe0_build_typed_struct_literal(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d2c6b4_Expr> _22a48c00e_build_brace_lit_part(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d330d2_BraceLit> _22a48c31c_build_brace_lit(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Any _22a48c62a_build_brace_range(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a48c938_get_enumerable_parts(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d3406c_SliceExpr> _22a48cc46_build_slice(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d3490d_IndexingExpr> _22a48d197_build_indexing(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Ptr<_228d35018_SlicingExpr> _22a48d73b_build_slicing(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Ptr<_2276b1a1c_Token>&, jule::Ptr<_2276b1a1c_Token>);
inline jule::Any _22a48da49_build_bracket_range(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Any _22a48dd57_build_data(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d31443_BinopExpr> _22a48e20e_build_binop(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::I64);
inline jule::Any _22a48e51c_build(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Any _22a48e82a_build_kind(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d2c6b4_Expr> _22a48eb38_build_from_tokens(_22a4851a0_ExprBuilder*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
struct _22a4851a0_ExprBuilder {
	jule::Ptr<_22a493a93_Parser> _field_p = jule::Ptr<_22a493a93_Parser>();
	

	_22a4851a0_ExprBuilder(void) = default;

	inline bool operator==(_22a4851a0_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_22a4851a0_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _22a49051d_AssignInfo {
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_l = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_r = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	jule::Ptr<_2276b1a1c_Token> _field_setter = jule::Ptr<_2276b1a1c_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_22a49051d_AssignInfo(void) = default;

	inline bool operator==(_22a49051d_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_22a49051d_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _22a493dc3_stop(_22a493a93_Parser*);
inline jule::Bool _22a494137_stopped(_22a493a93_Parser*);
inline void _22a494500_push_err(_22a493a93_Parser*, jule::Ptr<_2276b1a1c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _22a49481e_push_suggestion(_22a493a93_Parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_228d2c6b4_Expr> _22a494b2c_build_expr(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228ce499a_Directive> _22a494e3a_build_directive(_22a493a93_Parser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline void _22a4951b0_push_directive(_22a493a93_Parser*, jule::Ptr<_228ce499a_Directive>);
inline jule::Ptr<_228d384b1_ScopeTree> _22a495567_build_scope(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Ptr<_2276b1a1c_Token>);
inline std::tuple<jule::Ptr<_228d28193_TypeDecl>,jule::Bool> _22a4959b8___build_type(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_228d28193_TypeDecl>,jule::Bool> _22a495e19_build_type(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_228d3e7e7_TypeAliasDecl> _22a496227_build_type_alias_decl(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a496568_build_var_type_and_expr(jule::Ptr<_22a493a93_Parser>, jule::Ptr<_228d3ae86_VarDecl>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a496821_build_var_common(jule::Ptr<_22a493a93_Parser>, jule::Ptr<_228d3ae86_VarDecl>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline void _22a496bd9_build_var_begin(_22a493a93_Parser*, jule::Ptr<_228d3ae86_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d3ae86_VarDecl> _22a496ee7_build_var(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d35777_GenericDecl> _22a497305_build_generic(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Slice<jule::Ptr<_228d35777_GenericDecl>> _22a4976ac_build_generics(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Ptr<_2276b1a1c_Token>&);
inline jule::Ptr<_228d38b87_ParamDecl> _22a4979ba_build_self_param(_22a493a93_Parser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline void _22a497d83_param_type_begin(_22a493a93_Parser*, jule::Ptr<_228d38b87_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a4981a2_build_param_type(jule::Ptr<_22a493a93_Parser>, jule::Ptr<_228d38b87_ParamDecl>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a4984c1_build_param_body(jule::Ptr<_22a493a93_Parser>, jule::Ptr<_228d38b87_ParamDecl>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d38b87_ParamDecl> _22a4987ce_build_param(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline void _22a498a54_check_params(_22a493a93_Parser*, jule::Slice<jule::Ptr<_228d38b87_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_228d38b87_ParamDecl>> _22a498e0b_build_params(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_228d2b2a6_RetTypeDecl>,jule::Bool> _22a4992b3_build_multi_ret_type(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_228d2b2a6_RetTypeDecl>,jule::Bool> _22a49966a_build_ret_type(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::I64&);
inline jule::Ptr<_228d39ea7_FnDecl> _22a499abb_build_fn_prototype(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_228d39ea7_FnDecl> _22a49a01c_build_fn(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_2276b1a1c_Token>> _22a49a32a_get_use_decl_selectors(_22a493a93_Parser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline void _22a49a649_build_cpp_use_decl(_22a493a93_Parser*, jule::Ptr<_228d40bd3_UseDecl>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a49a968_build_std_use_decl(_22a493a93_Parser*, jule::Ptr<_228d40bd3_UseDecl>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline void _22a49ac87_build_ident_use_decl(_22a493a93_Parser*, jule::Ptr<_228d40bd3_UseDecl>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline void _22a49b0a6_parse_use_decl(_22a493a93_Parser*, jule::Ptr<_228d40bd3_UseDecl>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d40bd3_UseDecl> _22a49b45d_build_use_decl(_22a493a93_Parser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>, jule::Bool);
inline jule::Ptr<_228d28193_TypeDecl> _22a49b837_build_type_enum_item_kind(jule::Ptr<_22a493a93_Parser>, jule::I64&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Slice<jule::Ptr<_228d42685_TypeEnumItemDecl>> _22a49bb56_build_type_enum_items(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d42883_TypeEnumDecl> _22a49be64_build_type_enum_decl(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d2c6b4_Expr> _22a49c31b_build_enum_item_expr(jule::Ptr<_22a493a93_Parser>, jule::I64&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Slice<jule::Ptr<_228d41156_EnumItemDecl>> _22a49c629_build_enum_items(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d41b7e_EnumDecl> _22a49c937_build_enum_decl(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Any _22a49cc45_build_node_enum_decl(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d42dd3_FieldDecl> _22a49d053_build_field(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Slice<jule::Ptr<_228d42dd3_FieldDecl>> _22a49d383_build_struct_decl_fields(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d43741_StructDecl> _22a49d6a2_build_struct_decl(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a49d927_check_method_receiver(_22a493a93_Parser*, jule::Ptr<_228d39ea7_FnDecl>&);
inline jule::Slice<jule::Ptr<_228d39ea7_FnDecl>> _22a49dc35_build_trait_methods(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d43d4b_TraitDecl> _22a49e043_build_trait_decl(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d39ea7_FnDecl> _22a49e351_build_cpp_link_fn(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d3ae86_VarDecl> _22a49e65e_build_cpp_link_var(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d43741_StructDecl> _22a49e96c_build_cpp_link_struct(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d3e7e7_TypeAliasDecl> _22a49ec9c_build_cpp_link_type_alias(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228d40bd3_UseDecl> _22a4a00bb_build_cpp_link_use(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Any _22a4a03c9_build_cpp_link(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d39ea7_FnDecl> _22a4a06d7_get_method(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a4a0a06_parse_impl_body(jule::Ptr<_22a493a93_Parser>, jule::Ptr<_228d44456_Impl>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d44456_Impl> _22a4a0d14_build_impl(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Any _22a4a1122_build_node_data(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a4a1441_apply_fn_meta(_22a493a93_Parser*, jule::Ptr<_228d39ea7_FnDecl>&, jule::Bool);
inline void _22a4a1760_apply_meta(_22a493a93_Parser*, _228ce459e_Node&, jule::Bool);
inline std::tuple<jule::Bool,jule::Any> _22a4a1a90_build_general_scope_node_data(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline void _22a4a1d26_push_use_decl(jule::Ptr<_22a493a93_Parser>, jule::Ptr<_228d40bd3_UseDecl>&);
inline jule::Bool _22a4a2134_push_meta_nodes(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline _228ce459e_Node _22a4a2442_parse_node(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a4a26b7_append_node(jule::Ptr<_22a493a93_Parser>, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a4a2b29_remove_range(_22a493a93_Parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Slice<jule::I64>&);
inline void _22a4a3014_push_wrong_order_close_err(_22a493a93_Parser*, jule::Ptr<_2276b1a1c_Token>&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Slice<jule::I64>&);
inline void _22a4a3487_push_range_close(_22a493a93_Parser*, jule::Ptr<_2276b1a1c_Token>, jule::Str, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Slice<jule::I64>&);
inline void _22a4a370c_check_ranges(_22a493a93_Parser*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline void _22a4a3982_parse(jule::Ptr<_22a493a93_Parser>, jule::Ptr<_2276b6da7_File>&);
struct _22a493a93_Parser {
	jule::Ptr<_228ce3900_Ast> _field_ast = jule::Ptr<_228ce3900_Ast>();
	jule::Slice<jule::Ptr<_228ce499a_Directive>> _field_directives = jule::Slice<jule::Ptr<_228ce499a_Directive>>();
	jule::Slice<_2409487a2_Log> _field_errors = jule::Slice<_2409487a2_Log>();
	

	_22a493a93_Parser(void) = default;

	inline bool operator==(_22a493a93_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_22a493a93_Parser _other) { return !this->operator==(_other); }


};
inline void _22a4a5511_push_err(_22a4a4e6c_TypeBuilder*, jule::Ptr<_2276b1a1c_Token>, jule::Str);
inline void _22a4a5830_push_suggestion(_22a4a4e6c_TypeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a5a94_build_prim(_22a4a4e6c_TypeBuilder*);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a5d08_build_namespace(_22a4a4e6c_TypeBuilder*);
inline jule::Slice<jule::Ptr<_228d28193_TypeDecl>> _22a4a606c_build_generics(_22a4a4e6c_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a4a62d1_ident_generics(_22a4a4e6c_TypeBuilder*);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a6545_build_ident(_22a4a4e6c_TypeBuilder*);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a67a9_build_cpp_link(_22a4a4e6c_TypeBuilder*);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a6a1d_build_fn(_22a4a4e6c_TypeBuilder*);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a6c82_build_ptr(_22a4a4e6c_TypeBuilder*);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a6ee6_build_sptr(_22a4a4e6c_TypeBuilder*);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a725a_build_op(_22a4a4e6c_TypeBuilder*);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a74be_build_slc(_22a4a4e6c_TypeBuilder*);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a7733_build_arr(_22a4a4e6c_TypeBuilder*);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a7ada_build_map(_22a4a4e6c_TypeBuilder*, jule::I64, jule::I64);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a7d4e_build_enumerable(_22a4a4e6c_TypeBuilder*);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a80b3_step(_22a4a4e6c_TypeBuilder*);
inline std::tuple<jule::Ptr<_228d28193_TypeDecl>,jule::Bool> _22a4a8327_build(_22a4a4e6c_TypeBuilder*);
struct _22a4a4e6c_TypeBuilder {
	jule::Ptr<_22a493a93_Parser> _field_p = jule::Ptr<_22a493a93_Parser>();
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _field_tokens = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_22a4a4e6c_TypeBuilder(void) = default;

	inline bool operator==(_22a4a4e6c_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_22a4a4e6c_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _229cdd256_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);
	

	_229cdd256_CompileInfo(void) = default;

	inline bool operator==(_229cdd256_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_229cdd256_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _229cdeb09_push_err(_229cde5a9_DirectiveEval*, jule::Ptr<_2276b1a1c_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _229cdeeb1_split_operans(_229cde5a9_DirectiveEval*, jule::Str, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Bool _229ce02be_eval_directive_ident(_229cde5a9_DirectiveEval*, jule::Str);
inline jule::Bool _229ce05cc_eval_directive_part(_229cde5a9_DirectiveEval*, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Bool _229ce0841_eval(_229cde5a9_DirectiveEval*);
struct _229cde5a9_DirectiveEval {
	jule::Slice<_2409487a2_Log> _field_logs = jule::Slice<_2409487a2_Log>();
	jule::Ptr<_228ce499a_Directive> _field_d = jule::Ptr<_228ce499a_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_229cde5a9_DirectiveEval(void) = default;

	inline bool operator==(_229cde5a9_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_229cde5a9_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_229dd6cbc_JuleImporter> static__229dea781_new(_229cdd256_CompileInfo);
inline jule::Slice<jule::Ptr<_2299d5646_ImportInfo>> _229e4081a_all_packages(_229dd6cbc_JuleImporter*);
inline void _229e509b2_set_mod_path(_229dd6cbc_JuleImporter*, jule::Str);
inline jule::Str _229e5abba_get_mod_path(_229dd6cbc_JuleImporter*);
inline jule::Str _229e80bbd_mod_by_id(_229dd6cbc_JuleImporter*, jule::I64);
inline jule::Ptr<_2299d5646_ImportInfo> _22a03c4e9_get_import(_229dd6cbc_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_228ce3900_Ast>>,jule::Slice<_2409487a2_Log>> _22a0442d1_import_package(_229dd6cbc_JuleImporter*, jule::Str, jule::Bool);
inline void _22a052d6c_imported(_229dd6cbc_JuleImporter*, jule::Ptr<_2299d5646_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_2409487a2_Log>> _22a063e27_is_pass_build_directives(_229dd6cbc_JuleImporter*, jule::Ptr<_228ce3900_Ast>&);
struct _229dd6cbc_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_2299d5646_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_2299d5646_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_229dd6cbc_JuleImporter(void) = default;

	inline bool operator==(_229dd6cbc_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_229dd6cbc_JuleImporter _other) { return !this->operator==(_other); }


};
struct _229c7d8bc_OrderedDefines {
	jule::Slice<jule::Ptr<_228d188c0_Struct>> _field_structs = jule::Slice<jule::Ptr<_228d188c0_Struct>>();
	jule::Slice<jule::Ptr<_229a0a4a1_Var>> _field_globals = jule::Slice<jule::Ptr<_229a0a4a1_Var>>();
	

	_229c7d8bc_OrderedDefines(void) = default;

	inline bool operator==(_229c7d8bc_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs &&
			this->_field_globals == _other._field_globals;
	}

	inline bool operator!=(_229c7d8bc_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _22db22592_is_common_ordered(jule::Slice<jule::Ptr<_228d188c0_Struct>>&, jule::Ptr<_228d188c0_Struct>);
inline jule::Bool _22db2a952_is_common_ordered(jule::Slice<jule::Ptr<_229a0a4a1_Var>>&, jule::Ptr<_229a0a4a1_Var>);
inline void _22db1d604_order_common(jule::Slice<jule::Ptr<_228d188c0_Struct>>&);
inline void _22db1de95_order_common(jule::Slice<jule::Ptr<_229a0a4a1_Var>>&);
inline void static__22a26e880_order_structures(jule::Slice<jule::Ptr<_228d188c0_Struct>>&);
inline void static__22a28051c_order_vars(jule::Slice<jule::Ptr<_229a0a4a1_Var>>&);
struct _22a424eec_DefineOrderer {
	

	_22a424eec_DefineOrderer(void) = default;

	inline bool operator==(_22a424eec_DefineOrderer _other) { return true; }

	inline bool operator!=(_22a424eec_DefineOrderer _other) { return !this->operator==(_other); }


};
struct _22a56c4a7_LiveTable {
	jule::Slice<jule::Ptr<_229a0a4a1_Var>> _field_vars = jule::Slice<jule::Ptr<_229a0a4a1_Var>>();
	jule::Slice<jule::Ptr<_228de996d_FnIns>> _field_fns = jule::Slice<jule::Ptr<_228de996d_FnIns>>();
	jule::Slice<jule::Ptr<_228d44c1a_StructIns>> _field_structs = jule::Slice<jule::Ptr<_228d44c1a_StructIns>>();
	jule::Slice<jule::Ptr<_22923d1bd_Trait>> _field_traits = jule::Slice<jule::Ptr<_22923d1bd_Trait>>();
	

	_22a56c4a7_LiveTable(void) = default;

	inline bool operator==(_22a56c4a7_LiveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_22a56c4a7_LiveTable _other) { return !this->operator==(_other); }


};
inline void _22a59e550_optimize_child(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299b6c10_Scope>&);
inline void _22a59e7e7_optimize_body_child_exceptional(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299b6c10_Scope>&);
inline void _22a59ea7d_optimize_body_child(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299b6c10_Scope>&);
inline void _22a59ed03_optimize_expr_model(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Any&);
inline void _22a59eece_eliminate_followed(_22a59e077_ScopeDeadCode*);
inline void _22a5a0254_push_goto(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299b96b3_GotoSt>);
inline void _22a5a04c9_push_label(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299b93c7_Label>);
inline void _22a5a074e_optimize_range_iter(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299b8838_RangeIter>);
inline void _22a5a09c4_optimize_while_iter(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299b7e53_WhileIter>);
inline void _22a5a0c49_optimize_inf_iter(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299b79d0_InfIter>);
inline void _22a5a0ebe_optimize_conditional(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299b76e4_Conditional>);
inline void _22a5a1244_optimize_match(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299ba8d4_Match>);
inline void _22a5a14b9_optimize_assign(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299b9edd_Assign>);
inline void _22a5a173e_optimize_multi_assign(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Ptr<_2299ba395_MultiAssign>);
inline void _22a5a19b4_optimize_stmt(jule::Ptr<_22a59e077_ScopeDeadCode>, jule::Any);
inline void _22a5a1b90_optimize_stmts(jule::Ptr<_22a59e077_ScopeDeadCode>);
struct _22a59e077_ScopeDeadCode {
	jule::Ptr<_22a59e077_ScopeDeadCode> _field_parent = jule::Ptr<_22a59e077_ScopeDeadCode>();
	jule::Ptr<_2299b6c10_Scope> _field_s = jule::Ptr<_2299b6c10_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_2299b93c7_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_2299b93c7_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_2299b96b3_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_2299b96b3_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_22a59e077_ScopeDeadCode(void) = default;

	inline bool operator==(_22a59e077_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_22a59e077_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline _22a5a3015_ExprDeadCode static__22a5a360e_new(jule::Ptr<_22a59e077_ScopeDeadCode>&);
inline void _22a5a3884_binary(_22a5a3015_ExprDeadCode*, jule::Ptr<_228ddea40_BinopExprModel>);
inline void _22a5a3b09_unary(_22a5a3015_ExprDeadCode*, jule::Ptr<_228ddec2c_UnaryExprModel>);
inline void _22a5a3d7e_structure_lit(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de0106_StructLitExprModel>);
inline void _22a5a4104_alloc_structure(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de02e3_AllocStructLitExprModel>);
inline void _22a5a4379_casting(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de04d0_CastingExprModel>);
inline void _22a5a45ee_args(_22a5a3015_ExprDeadCode*, jule::Slice<jule::Any>&);
inline void _22a5a4874_func_call(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de06bc_FnCallExprModel>);
inline void _22a5a4ae9_slice(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de08a9_SliceExprModel>);
inline void _22a5a4d6e_array(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de1d2d_ArrayExprModel>);
inline void _22a5a50e4_indexing(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de0a96_IndexingExprModel>);
inline void _22a5a5369_anon_func(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de0c83_AnonFnExprModel>);
inline void _22a5a55de_map(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de115c_MapExprModel>);
inline void _22a5a5864_slicing(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de1349_SlicingExprModel>);
inline void _22a5a5ad9_trait_sub(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de1536_TraitSubIdentExprModel>);
inline void _22a5a5d5e_structure_sub(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de1954_StructSubIdentExprModel>);
inline void _22a5a60d4_common_sub(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de2207_CommonSubIdentExprModel>);
inline void _22a5a6359_tuple(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de23e4_TupleExprModel>);
inline void _22a5a65ce_new_call(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de2b97_BuiltinNewCallExprModel>);
inline void _22a5a6854_out_call(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de25d1_BuiltinOutCallExprModel>);
inline void _22a5a6ac9_outln_call(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel>);
inline void _22a5a6d4e_panic_call(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>);
inline void _22a5a70c4_assert_call(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de3071_BuiltinAssertCallExprModel>);
inline void _22a5a7349_error_call(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de3824_BuiltinErrorCallExprModel>);
inline void _22a5a75be_make_call(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de325d_BuiltinMakeCallExprModel>);
inline void _22a5a7844_append_call(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de344a_BuiltinAppendCallExprModel>);
inline void _22a5a7ab9_clone_call(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de29aa_BuiltinCloneCallExprModel>);
inline void _22a5a7d3e_sizeof(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de1723_SizeofExprModel>);
inline void _22a5a80b4_alignof(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de3e84_AlignofExprModel>);
inline void _22a5a8339_integrated_to_str(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de435d_IntegratedToStrExprModel>);
inline void _22a5a85ae_free(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de4737_FreeExprModel>);
inline void _22a5a8834_backend_emit(_22a5a3015_ExprDeadCode*, jule::Ptr<_228de454a_BackendEmitExprModel>);
inline void _22a5a8aa9_optimize(_22a5a3015_ExprDeadCode*, jule::Any&);
struct _22a5a3015_ExprDeadCode {
	jule::Ptr<_22a59e077_ScopeDeadCode> _field_s = jule::Ptr<_22a59e077_ScopeDeadCode>();
	

	_22a5a3015_ExprDeadCode(void) = default;

	inline bool operator==(_22a5a3015_ExprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_22a5a3015_ExprDeadCode _other) { return !this->operator==(_other); }


};
struct _2276dd395_UnsafeBinopExprModel {
	jule::Ptr<_228ddea40_BinopExprModel> _field_node = jule::Ptr<_228ddea40_BinopExprModel>();
	

	_2276dd395_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_2276dd395_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_2276dd395_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _228203294_UnsafeIndexingExprModel {
	jule::Ptr<_228de0a96_IndexingExprModel> _field_node = jule::Ptr<_228de0a96_IndexingExprModel>();
	

	_228203294_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_228203294_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_228203294_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _2285ee7d3_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_228de08a9_SliceExprModel> _field_elems = jule::Ptr<_228de08a9_SliceExprModel>();
	

	_2285ee7d3_PushToSliceExprModel(void) = default;

	inline bool operator==(_2285ee7d3_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_2285ee7d3_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _228aa0a20_MutSlicingExprModel {
	jule::Ptr<_2276b1a1c_Token> _field_token = jule::Ptr<_2276b1a1c_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_228aa0a20_MutSlicingExprModel(void) = default;

	inline bool operator==(_228aa0a20_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_228aa0a20_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _22772aa42_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();
	

	_22772aa42_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_22772aa42_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_22772aa42_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_22772b9bb_ScopeOptimizer> static__2276d60c4_new(jule::Ptr<_2299b6c10_Scope>);
inline void _2276e3dd4_set_current_stmt(_22772b9bb_ScopeOptimizer*, jule::Any);
inline void _2276ee076_optimize_data(_22772b9bb_ScopeOptimizer*, jule::Ptr<_229a527d4_Data>);
inline void _22770b32a_optimize_var(_22772b9bb_ScopeOptimizer*, jule::Ptr<_229a0a4a1_Var>);
inline void _227728743_optimize_conditional(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299b76e4_Conditional>);
inline void _22772c69d_build_default_constat_true_case(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299bb42e_Case>, jule::I64&, jule::Ptr<_2299ba8d4_Match>&);
inline void _22772d1c6_optimize_match(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299ba8d4_Match>);
inline void _227730948_optimize_range_iter(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299b8838_RangeIter>);
inline void _227732395_optimize_while_iter(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299b7e53_WhileIter>);
inline jule::Bool _227732c25_substr(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299b9edd_Assign>);
inline jule::Bool _2277686c8_str_insert(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299b9edd_Assign>);
inline jule::Bool _22776907a_str_assign(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299b9edd_Assign>);
inline void _227812475_optimize_assign(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299b9edd_Assign>);
inline void _22781a659_optimize_multi_assign(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299ba395_MultiAssign>);
inline void _22781d77d_optimize_ret(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299bbe57_RetSt>);
inline void _227820098_optimize_stmt(_22772b9bb_ScopeOptimizer*, jule::Any);
inline void _227824894_optimize_child(_22772b9bb_ScopeOptimizer*, jule::Ptr<_2299b6c10_Scope>);
inline void _22781a3b2_optimize(_22772b9bb_ScopeOptimizer*);
struct _22772b9bb_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_2299b6c10_Scope> _field_scope = jule::Ptr<_2299b6c10_Scope>();
	

	_22772b9bb_ScopeOptimizer(void) = default;

	inline bool operator==(_22772b9bb_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_22772b9bb_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__227856c28_optimize(jule::Any&);
inline jule::Bool _22785a479_str_cond(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228ddea40_BinopExprModel>);
inline void _22785ad3c_binary(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228ddea40_BinopExprModel>);
inline void _22786297b_unary(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228ddec2c_UnaryExprModel>);
inline void _22786a357_structure_lit(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de0106_StructLitExprModel>);
inline void _22786ba51_alloc_structure(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de02e3_AllocStructLitExprModel>);
inline void _2278794ed_casting(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de04d0_CastingExprModel>);
inline void _22788b114_args(_2278cc8e7_ExprOptimizer*, jule::Slice<jule::Any>&);
inline void _2278c17cb_scope(_2278cc8e7_ExprOptimizer*, jule::Ptr<_2299b6c10_Scope>&);
inline void _2278c52b3_func_call(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de06bc_FnCallExprModel>);
inline void _2278ce146_slice(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de08a9_SliceExprModel>);
inline void _227a26942_array(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de1d2d_ArrayExprModel>);
inline void _227a3a99a_indexing(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de0a96_IndexingExprModel>);
inline void _227a4a933_anon_func(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de0c83_AnonFnExprModel>);
inline void _227a4b9ab_map(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de115c_MapExprModel>);
inline void _227a3a3a1_slicing(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de1349_SlicingExprModel>);
inline void _227a5085b_trait_sub(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de1536_TraitSubIdentExprModel>);
inline void _227a5cc97_structure_sub(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de1954_StructSubIdentExprModel>);
inline void _227a628a1_common_sub(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de2207_CommonSubIdentExprModel>);
inline void _227a6807c_tuple(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de23e4_TupleExprModel>);
inline void _227a6948a_new_call(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de2b97_BuiltinNewCallExprModel>);
inline void _227a6a744_out_call(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de25d1_BuiltinOutCallExprModel>);
inline void _227a6bed7_outln_call(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel>);
inline void _227a70a24_panic_call(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>);
inline void _227a7c877_assert_call(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de3071_BuiltinAssertCallExprModel>);
inline void _227a88e5a_error_call(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de3824_BuiltinErrorCallExprModel>);
inline void _227a93c78_make_call(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de325d_BuiltinMakeCallExprModel>);
inline void _227ab9aa1_append_call(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de344a_BuiltinAppendCallExprModel>);
inline void _227abc378_clone_call(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de29aa_BuiltinCloneCallExprModel>);
inline void _227ac1987_sizeof(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de1723_SizeofExprModel>);
inline void _227ace742_alignof(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de3e84_AlignofExprModel>);
inline void _227ae2942_integrated_to_str(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de435d_IntegratedToStrExprModel>);
inline void _227b337c9_free(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de4737_FreeExprModel>);
inline void _227b7c339_backend_emit(_2278cc8e7_ExprOptimizer*, jule::Ptr<_228de454a_BackendEmitExprModel>);
inline void _227c2ba15_do(_2278cc8e7_ExprOptimizer*);
struct _2278cc8e7_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_2278cc8e7_ExprOptimizer(void) = default;

	inline bool operator==(_2278cc8e7_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_2278cc8e7_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_22a577836_Optimizer> static__22a4dae81_new(jule::Ptr<_22a0e7571_IR>&);
inline void _22a4aebbe_optimize_global(_22a577836_Optimizer*, jule::Ptr<_229a0a4a1_Var>&);
inline void _22a519b19_optimize_function(_22a577836_Optimizer*, jule::Ptr<_228de6cbc_Fn>&);
inline void _22a51de5e_optimize_struct(_22a577836_Optimizer*, jule::Ptr<_228d188c0_Struct>&);
inline void _22a522aab_optimize_globals(_22a577836_Optimizer*, jule::Ptr<_2299d85a0_Package>&);
inline void _22a528e14_optimize_functions(_22a577836_Optimizer*, jule::Ptr<_2299d85a0_Package>&);
inline void _22a532071_optimize_structs(_22a577836_Optimizer*, jule::Ptr<_2299d85a0_Package>&);
inline void _22a53c675_optimize_package(_22a577836_Optimizer*, jule::Ptr<_2299d85a0_Package>&);
inline void _22a541ca6_optimize(_22a577836_Optimizer*);
struct _22a577836_Optimizer {
	jule::Ptr<_22a0e7571_IR> _field_ir = jule::Ptr<_22a0e7571_IR>();
	

	_22a577836_Optimizer(void) = default;

	inline bool operator==(_22a577836_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_22a577836_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__22a5c15b6_reset(void);
inline void static__22a5c2881_print(jule::Str, jule::Str);
struct _22a5c2694_AnsiEscape {
	

	_22a5c2694_AnsiEscape(void) = default;

	inline bool operator==(_22a5c2694_AnsiEscape _other) { return true; }

	inline bool operator!=(_22a5c2694_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__22a5c4036_log_flat(_2409487a2_Log&);
inline void static__22a5c4245_log_error(_2409487a2_Log&);
inline void static__22a5c4454_log(_2409487a2_Log&);
inline void static__22a5c4663_print_logs(jule::Slice<_2409487a2_Log>&);
struct _22a5c3c7d_Logger {
	

	_22a5c3c7d_Logger(void) = default;

	inline bool operator==(_22a5c3c7d_Logger _other) { return true; }

	inline bool operator!=(_22a5c3c7d_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _22ab96e66_unix(_22ab96aae_AbsTime*);
struct _22ab96aae_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();
	

	_22ab96aae_AbsTime(void) = default;

	inline bool operator==(_22ab96aae_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_22ab96aae_AbsTime _other) { return !this->operator==(_other); }


};
inline _22ab97252_Time static__22ab975e8_unix(jule::U64);
inline _22ab97252_Time static__22ab977e6_now(void);
inline jule::U64 _22ab97c47_unix(_22ab97252_Time*);
inline jule::U64 _22ab97eab_day(_22ab97252_Time*);
inline jule::U64 _22ab98220_month(_22ab97252_Time*);
inline jule::U64 _22ab98484_year(_22ab97252_Time*);
inline jule::U64 _22ab986e8_second(_22ab97252_Time*);
inline jule::U64 _22ab9895c_minute(_22ab97252_Time*);
inline jule::U64 _22ab98bc1_hour(_22ab97252_Time*);
inline _22ab96aae_AbsTime _22ab98e35_abs(_22ab97252_Time*);
struct _22ab97252_Time {
	jule::U64 _field_sec = jule::U64();
	

	_22ab97252_Time(void) = default;

	inline bool operator==(_22ab97252_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_22ab97252_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_22ab1ae84_ScopeCoder> static__22ab1b5a0_new(jule::Ptr<_22ab9c950_ObjectCoder>&);
inline void _22ab1b825_range_index_iter(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b8838_RangeIter>&);
inline void _22ab1ba9a_range_hashmap_iter(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b8838_RangeIter>&);
inline void _22ab1bd20_if_case(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b700c_If>);
inline void _22ab1c095_conditional(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b76e4_Conditional>);
inline void _22ab1c31a_inf_iter(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b79d0_InfIter>);
inline void _22ab1c590_while_iter(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b7e53_WhileIter>);
inline void _22ab1c815_range_iter(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b8838_RangeIter>);
inline void _22ab1ca8a_cont(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b8c34_ContSt>);
inline void _22ab1cd10_label(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b93c7_Label>);
inline void _22ab1d085_goto_st(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b96b3_GotoSt>);
inline void _22ab1d30a_postfix(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b9a6a_Postfix>);
inline void _22ab1d580_assign(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b9edd_Assign>);
inline void _22ab1d805_multi_assign(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299ba395_MultiAssign>);
inline jule::Fn<void(void)> _22ab1db13_match_expr(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299ba8d4_Match>);
inline void _22ab1de32_case(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299ba8d4_Match>, jule::Ptr<_2299bb42e_Case>);
inline void _22ab1e1a7_match_st(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299ba8d4_Match>);
inline void _22ab1e42c_fall_st(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299bb9d4_FallSt>);
inline void _22ab1e6a2_break_st(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b90db_BreakSt>);
inline void _22ab1e927_ret_with_vars(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299bbe57_RetSt>);
inline void _22ab1eb9c_ret_tuple(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299bbe57_RetSt>);
inline void _22ab1ee22_ret_with_exprs(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299bbe57_RetSt>);
inline void _22ab20197_ret_st(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299bbe57_RetSt>);
inline void _22ab20692_var(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_229a0a4a1_Var>);
inline void _22ab20917_st(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Any);
inline void _22ab20b8c_scope_stmts(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b6c10_Scope>&);
inline void _22ab20e12_scope(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_2299b6c10_Scope>);
inline void _22ab21187_func_scope(jule::Ptr<_22ab1ae84_ScopeCoder>, jule::Ptr<_228de996d_FnIns>);
struct _22ab1ae84_ScopeCoder {
	jule::Ptr<_22ab9c950_ObjectCoder> _field_oc = jule::Ptr<_22ab9c950_ObjectCoder>();
	

	_22ab1ae84_ScopeCoder(void) = default;

	inline bool operator==(_22ab1ae84_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_22ab1ae84_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_22ab23a08_ExprCoder> static__22ab23e04_new(jule::Ptr<_22ab9c950_ObjectCoder>&);
inline void _22ab24179_string(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228d7b4d2_Const>&);
inline void _22ab243ee_boolean(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228d7b4d2_Const>&);
inline void _22ab245ca_nil_lit(jule::Ptr<_22ab23a08_ExprCoder>);
inline jule::Bool _22ab248d8_ftoa_special_cases(jule::Ptr<_22ab23a08_ExprCoder>, jule::F64&);
inline void _22ab24b5d_float32(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228d7b4d2_Const>&);
inline void _22ab24dd3_float64(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228d7b4d2_Const>&);
inline void _22ab25202_constant(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228d7b4d2_Const>, jule::Bool);
inline void _22ab255ba_div_by_zero_binary(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_2276b1a1c_Token>&, jule::Ptr<_228dde853_OperandExprModel>&, jule::Ptr<_228dde853_OperandExprModel>&);
inline void _22ab25840_unsafe_binary(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228ddea40_BinopExprModel>);
inline void _22ab25ab5_binary(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228ddea40_BinopExprModel>);
inline void _22ab25d3a_var(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_229a0a4a1_Var>);
inline void _22ab260b0_structure_ins(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228d44c1a_StructIns>);
inline void _22ab26335_unary(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228ddec2c_UnaryExprModel>);
inline void _22ab265aa_structure_lit(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de0106_StructLitExprModel>);
inline void _22ab26830_alloc_structure(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de02e3_AllocStructLitExprModel>);
inline void _22ab26aa5_casting(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de04d0_CastingExprModel>);
inline void _22ab26d2a_args(jule::Ptr<_22ab23a08_ExprCoder>, jule::Slice<jule::Any>);
inline void _22ab270a0_model_for_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Any);
inline void _22ab27325_push_call_inf(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de06bc_FnCallExprModel>&);
inline jule::Bool _22ab27633_is_wrapped(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de06bc_FnCallExprModel>&);
inline void _22ab278a8_pure_func_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de06bc_FnCallExprModel>&);
inline void _22ab27b2d_func_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de06bc_FnCallExprModel>);
inline void _22ab27da3_slice(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de08a9_SliceExprModel>);
inline void _22ab28128_indexing(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de0a96_IndexingExprModel>);
inline void _22ab2839d_unsafe_indexing(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228203294_UnsafeIndexingExprModel>);
inline void _22ab28623_anon_func(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de0c83_AnonFnExprModel>);
inline void _22ab28898_map(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de115c_MapExprModel>);
inline void _22ab28b1d_slicing(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de1349_SlicingExprModel>);
inline void _22ab28d93_trait_sub(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de1536_TraitSubIdentExprModel>);
inline void _22ab29118_structure_sub(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de1954_StructSubIdentExprModel>);
inline void _22ab2938d_common_ident(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de201a_CommonIdentExprModel>);
inline void _22ab29613_common_sub(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de2207_CommonSubIdentExprModel>);
inline void _22ab29888_array(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de1d2d_ArrayExprModel>);
inline void _22ab29b0d_func_ins_common(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de996d_FnIns>);
inline void _22ab29d83_func_ins(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de996d_FnIns>);
inline void _22ab2a108_tuple(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de23e4_TupleExprModel>);
inline void _22ab2a37d_new_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de2b97_BuiltinNewCallExprModel>);
inline void _22ab2a603_out_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de25d1_BuiltinOutCallExprModel>);
inline void _22ab2a878_outln_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel>);
inline void _22ab2aaed_panic_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>);
inline void _22ab2ad73_assert_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de3071_BuiltinAssertCallExprModel>);
inline void _22ab2b0e8_error_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de3824_BuiltinErrorCallExprModel>);
inline void _22ab2b36d_copy_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de3637_BuiltinCopyCallExprModel>);
inline void _22ab2b5e3_make_call_slice(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de325d_BuiltinMakeCallExprModel>&);
inline void _22ab2b868_make_call_str(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de325d_BuiltinMakeCallExprModel>&);
inline void _22ab2badd_make_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de325d_BuiltinMakeCallExprModel>);
inline void _22ab2bd63_push_to_slice(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_2285ee7d3_PushToSliceExprModel>);
inline void _22ab2c0d8_append_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de344a_BuiltinAppendCallExprModel>);
inline void _22ab2c35d_clone_call(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de29aa_BuiltinCloneCallExprModel>);
inline void _22ab2c5d3_sizeof(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de1723_SizeofExprModel>);
inline void _22ab2c858_alignof(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de3e84_AlignofExprModel>);
inline jule::Str _22ab2cb66_rune_lit(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de4171_RuneExprModel>);
inline void _22ab2cddb_structure_static(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de1b41_StructStaticIdentExprModel>);
inline void _22ab2d161_integrated_to_str(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de435d_IntegratedToStrExprModel>);
inline void _22ab2d3d6_backend_emit(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de454a_BackendEmitExprModel>);
inline void _22ab2d65b_free(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228de4737_FreeExprModel>);
inline void _22ab2d8d1_mut_slicing(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_228aa0a20_MutSlicingExprModel>);
inline void _22ab2db56_str_insert_begin(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_22772aa42_StrInsertBeginExprModel>);
inline void _22ab2ddcb_model(jule::Ptr<_22ab23a08_ExprCoder>, jule::Any);
inline void _22ab2e151_expr(jule::Ptr<_22ab23a08_ExprCoder>, jule::Any);
inline void _22ab2e3c6_val(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_229a5385c_Value>);
inline void _22ab2e64b_init_expr(jule::Ptr<_22ab23a08_ExprCoder>, jule::Ptr<_229a7d359_TypeKind>);
struct _22ab23a08_ExprCoder {
	jule::Ptr<_22ab9c950_ObjectCoder> _field_oc = jule::Ptr<_22ab9c950_ObjectCoder>();
	

	_22ab23a08_ExprCoder(void) = default;

	inline bool operator==(_22ab23a08_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_22ab23a08_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__22ab31bae_clone_func_decl(jule::Ptr<_228d188c0_Struct>&);
inline jule::Str static__22ab31e56_clone_func_def(jule::Ptr<_228d188c0_Struct>&);
struct _22ab31906_DeriveCoder {
	

	_22ab31906_DeriveCoder(void) = default;

	inline bool operator==(_22ab31906_DeriveCoder _other) { return true; }

	inline bool operator!=(_22ab31906_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_22ab32d36_TestCoder> static__22ab332a9_new(jule::Ptr<_22ab9c950_ObjectCoder>&);
inline jule::Ptr<_2299d5646_ImportInfo> _22ab3351d_find_testing_package(jule::Ptr<_22ab32d36_TestCoder>);
inline void _22ab33793_append_test(jule::Ptr<_22ab32d36_TestCoder>, jule::Ptr<_228de996d_FnIns>);
inline void _22ab33a18_append_package_tests(jule::Ptr<_22ab32d36_TestCoder>, jule::Ptr<_2299d85a0_Package>&);
inline jule::Bool _22ab33c7c_ready_testing_package(jule::Ptr<_22ab32d36_TestCoder>);
inline void _22ab33e58_call_tm_reset(jule::Ptr<_22ab32d36_TestCoder>);
inline void _22ab34134_call_tm_failed(jule::Ptr<_22ab32d36_TestCoder>);
inline void _22ab34310_call_tm_skipped(jule::Ptr<_22ab32d36_TestCoder>);
inline void _22ab344db_serialize(jule::Ptr<_22ab32d36_TestCoder>);
struct _22ab32d36_TestCoder {
	jule::Ptr<_228d44c1a_StructIns> _field_t = jule::Ptr<_228d44c1a_StructIns>();
	jule::Ptr<_228de6cbc_Fn> _field_tm_reset = jule::Ptr<_228de6cbc_Fn>();
	jule::Ptr<_228de6cbc_Fn> _field_tm_failed = jule::Ptr<_228de6cbc_Fn>();
	jule::Ptr<_228de6cbc_Fn> _field_tm_skipped = jule::Ptr<_228de6cbc_Fn>();
	jule::Ptr<_22ab9c950_ObjectCoder> _field_oc = jule::Ptr<_22ab9c950_ObjectCoder>();
	

	_22ab32d36_TestCoder(void) = default;

	inline bool operator==(_22ab32d36_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_22ab32d36_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__22ab35993_to_out(jule::Str&, jule::Uintptr);
inline jule::Str static__22ab35d7d_to_local(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__22ab36125_func(jule::Ptr<_228de6cbc_Fn>&);
inline jule::Str static__22ab363bc_func_ins(jule::Ptr<_228de996d_FnIns>&);
inline jule::Str static__22ab36664_trait_decl(jule::Ptr<_22923d1bd_Trait>);
inline jule::Str static__22ab3690b_param(jule::Ptr<_228de5480_Param>&);
inline jule::Str static__22ab36ba3_structure(jule::Ptr<_228d188c0_Struct>&);
inline jule::Str static__22ab36e4a_structure_ins(jule::Ptr<_228d44c1a_StructIns>&);
inline jule::Str static__22ab371e2_field(jule::Ptr<_228d0ad8a_Field>&);
inline jule::Str static__22ab37489_var(jule::Ptr<_229a0a4a1_Var>);
inline jule::Str static__22ab37731_iter_begin(jule::Uintptr);
inline jule::Str static__22ab379c8_iter_end(jule::Uintptr);
inline jule::Str static__22ab37c70_iter_next(jule::Uintptr);
inline jule::Str static__22ab38017_label(jule::Str&);
inline jule::Str static__22ab382ae_match_end(jule::Uintptr);
inline jule::Str static__22ab38556_case_begin(jule::Uintptr);
struct _22ab35487_IdentCoder {
	

	_22ab35487_IdentCoder(void) = default;

	inline bool operator==(_22ab35487_IdentCoder _other) { return true; }

	inline bool operator!=(_22ab35487_IdentCoder _other) { return !this->operator==(_other); }


};
struct _22ab9c576_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();
	

	_22ab9c576_SerializationInfo(void) = default;

	inline bool operator==(_22ab9c576_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_22ab9c576_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _22ab9c763_TraitHash {
	jule::Ptr<_22923d1bd_Trait> _field_t = jule::Ptr<_22923d1bd_Trait>();
	jule::Ptr<_228d44c1a_StructIns> _field_s = jule::Ptr<_228d44c1a_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_22ab9c763_TraitHash(void) = default;

	inline bool operator==(_22ab9c763_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_22ab9c763_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _22aba378b_to_str(_22aba34c2_CustomType*);
inline jule::Bool _22aba3a99_equals(jule::Ptr<_22aba34c2_CustomType>, jule::Ptr<_229a7d359_TypeKind>);
struct _22aba34c2_CustomType {
	jule::Str _field_kind = jule::Str();
	

	_22aba34c2_CustomType(void) = default;

	inline bool operator==(_22aba34c2_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_22aba34c2_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__22aba42e7_to_type(jule::Str);
inline jule::Str static__22aba458e_prim(jule::Ptr<_229a82d31_Prim>);
inline jule::Str static__22aba4836_tuple(jule::Ptr<_229a87aa0_Tuple>);
inline jule::Str static__22aba4acd_as_sptr(jule::Str);
inline jule::Str static__22aba4d75_as_ptr(jule::Str);
inline jule::Str static__22aba511c_sptr(jule::Ptr<_229a865b5_Sptr>);
inline jule::Str static__22aba53b4_ptr(jule::Ptr<_229a89b29_Ptr>);
inline jule::Str static__22aba565b_enum_decl(jule::Ptr<_228e0dcc3_Enum>);
inline jule::Str static__22aba5903_type_enum_decl(jule::Ptr<_2292e1e75_TypeEnum>);
inline jule::Str static__22aba5b9a_as_slice(jule::Ptr<_229a7d359_TypeKind>);
inline jule::Str static__22aba5e42_slice(jule::Ptr<_229a87022_Slc>);
inline jule::Str static__22aba61d9_map(jule::Ptr<_229a885c8_Map>);
inline jule::Str static__22aba6481_trait_ident(jule::Str);
inline jule::Str static__22aba6728_trait_decl(jule::Ptr<_22923d1bd_Trait>);
inline jule::Str static__22aba69c0_structure(jule::Ptr<_228d188c0_Struct>);
inline jule::Str static__22aba6c67_structure_ins(jule::Ptr<_228d44c1a_StructIns>);
inline jule::Str static__22aba700e_array(jule::Ptr<_229a891bc_Arr>);
inline jule::Str static__22aba754d_param_ins(jule::Ptr<_228de8a9e_ParamIns>&);
inline jule::Str static__22aba7a8c_func_ins_result(jule::Ptr<_228de996d_FnIns>&);
inline jule::Str static__22aba7d34_anon_func(jule::Ptr<_228de996d_FnIns>);
inline jule::Str static__22aba80cb_func(jule::Ptr<_228de996d_FnIns>);
inline jule::Str static__22aba8373_kind(jule::Ptr<_229a7d359_TypeKind>);
struct _22aba3cb9_TypeCoder {
	

	_22aba3cb9_TypeCoder(void) = default;

	inline bool operator==(_22aba3cb9_TypeCoder _other) { return true; }

	inline bool operator!=(_22aba3cb9_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _22d4999db_name(_22d49a13a_Flag*);
inline jule::Str _22d49a525_what(_22d49a13a_Flag*);
inline void _22d49a657_reset(_22d49a13a_Flag*);
inline jule::I32 _22d49a789_short(_22d49a13a_Flag*);
struct _22d49a13a_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();
	

	_22d49a13a_Flag(void) = default;

	inline bool operator==(_22d49a13a_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_22d49a13a_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _22d49d847_name(_22d49dced_Flag*);
inline jule::Str _22d49e0b7_what(_22d49dced_Flag*);
inline void _22d49e1e9_reset(_22d49dced_Flag*);
inline jule::I32 _22d49e32b_short(_22d49dced_Flag*);
struct _22d49dced_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();
	

	_22d49dced_Flag(void) = default;

	inline bool operator==(_22d49dced_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_22d49dced_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _22d4a232e_name(_22d4a27d5_Flag*);
inline jule::Str _22d4a2a9e_what(_22d4a27d5_Flag*);
inline void _22d4a2bd1_reset(_22d4a27d5_Flag*);
inline jule::I32 _22d4a2d13_short(_22d4a27d5_Flag*);
struct _22d4a27d5_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();
	

	_22d4a27d5_Flag(void) = default;

	inline bool operator==(_22d4a27d5_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_22d4a27d5_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _22d4a5d5a_name(_22d4a6311_Flag*);
inline jule::Str _22d4a65ca_what(_22d4a6311_Flag*);
inline void _22d4a670c_reset(_22d4a6311_Flag*);
inline jule::I32 _22d4a683e_short(_22d4a6311_Flag*);
struct _22d4a6311_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();
	

	_22d4a6311_Flag(void) = default;

	inline bool operator==(_22d4a6311_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_22d4a6311_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _22d4a9842_name(_22d4a9ce8_Flag*);
inline jule::Str _22d4aa0b2_what(_22d4a9ce8_Flag*);
inline void _22d4aa1e4_reset(_22d4a9ce8_Flag*);
inline jule::I32 _22d4aa326_short(_22d4a9ce8_Flag*);
struct _22d4a9ce8_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();
	

	_22d4a9ce8_Flag(void) = default;

	inline bool operator==(_22d4a9ce8_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_22d4a9ce8_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_22abd95b3_FlagSet> static__22abd989e_new(void);
inline jule::Trait<_22a7c4874_CommonFlag> _22abd9d33_find_flag(_22abd95b3_FlagSet*, jule::Str);
inline jule::Trait<_22a7c4874_CommonFlag> _22abda141_find_flag_short(_22abd95b3_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_22a7c4874_CommonFlag>> _22abda3a5_flags(_22abd95b3_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _22abda6b3_parse(_22abd95b3_FlagSet*, jule::Slice<jule::Str>);
inline void _22abda88e_reset(_22abd95b3_FlagSet*);
inline jule::Ptr<_22d4a9ce8_Flag> _22e13e6c4_add_flag_common(_22abd95b3_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_22d4a6311_Flag> _22e1482e3_add_flag_common(_22abd95b3_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _22e13c150_add_var(_22abd95b3_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _22e145c80_add_var(_22abd95b3_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _22abd95b3_FlagSet {
	jule::Slice<jule::Trait<_22a7c4874_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_22a7c4874_CommonFlag>>();
	

	_22abd95b3_FlagSet(void) = default;

	inline bool operator==(_22abd95b3_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_22abd95b3_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_22a0e7571_IR>,jule::Slice<_2409487a2_Log>> static__229c983ed_build(jule::Str, jule::I64);
inline void _229ca1abb_append_structs(_22a0e7571_IR*, jule::Ptr<_2299d85a0_Package>&, jule::Slice<jule::Ptr<_228d188c0_Struct>>&);
inline jule::Slice<jule::Ptr<_228d188c0_Struct>> _229cc4308_get_all_structures(_22a0e7571_IR*);
inline void _22a06e2a6_append_globals(_22a0e7571_IR*, jule::Ptr<_2299d85a0_Package>&, jule::Slice<jule::Ptr<_229a0a4a1_Var>>&);
inline jule::Slice<jule::Ptr<_229a0a4a1_Var>> _22a0b9e39_get_all_globals(_22a0e7571_IR*);
inline void _22a0bc06d_order(_22a0e7571_IR*);
struct _22a0e7571_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_2299d85a0_Package> _field_main = jule::Ptr<_2299d85a0_Package>();
	jule::Slice<jule::Ptr<_2299d5646_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_2299d5646_ImportInfo>>();
	_229c7d8bc_OrderedDefines _field_ordered = _229c7d8bc_OrderedDefines();
	

	_22a0e7571_IR(void) = default;

	inline bool operator==(_22a0e7571_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_22a0e7571_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _228d1a5a3_to_str(_228d44c1a_StructIns*);
inline jule::Bool _228d1b719_equals(jule::Ptr<_228d44c1a_StructIns>, jule::Ptr<_229a7d359_TypeKind>);
inline jule::Bool _228d1da6d_same(_228d44c1a_StructIns*, jule::Ptr<_228d44c1a_StructIns>);
inline jule::Ptr<_228de6cbc_Fn> _228d1ed8d_find_method(_228d44c1a_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_228d21037_FieldIns> _228d228a7_find_field(_228d44c1a_StructIns*, jule::Str);
struct _228d44c1a_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_228d188c0_Struct> _field_decl = jule::Ptr<_228d188c0_Struct>();
	jule::Slice<jule::Ptr<_229a7bb2c_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_229a7bb2c_InsGeneric>>();
	jule::Slice<jule::Ptr<_228d21037_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_228d21037_FieldIns>>();
	jule::Slice<jule::Ptr<_228de6cbc_Fn>> _field_methods = jule::Slice<jule::Ptr<_228de6cbc_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_228dec234_ReferenceStack> _field_refers = jule::Ptr<_228dec234_ReferenceStack>();
	_228d1a2ea_Operators _field_operators = _228d1a2ea_Operators();
	

	_228d44c1a_StructIns(void) = default;

	inline bool operator==(_228d44c1a_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_refers == _other._field_refers &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_228d44c1a_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_22a56c771_ObjectDeadCode> static__22a56cbc2_new(jule::Ptr<_22a0e7571_IR>&);
inline jule::Bool _22db55be1_is_live(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_22923d1bd_Trait>&);
inline jule::Bool _22db5b840_is_live(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_228de996d_FnIns>&);
inline jule::Bool _22db64d21_is_live(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_228d44c1a_StructIns>&);
inline jule::Bool _22db69a5c_is_live(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_229a0a4a1_Var>&);
inline void _22db56719_push_live(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_22923d1bd_Trait>);
inline void _22db600a2_push_live(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_228de996d_FnIns>);
inline void _22db631b5_push_live(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_228d44c1a_StructIns>);
inline void _22db6d401_push_live(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_229a0a4a1_Var>);
inline void _22a59ad21_set_references_as_live(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_228dec234_ReferenceStack>&);
inline void _22a59b096_inits(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_2299d85a0_Package>&);
inline void _22a59b31b_collect_live_package(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_2299d85a0_Package>&);
inline void _22a59b4e7_collect_live(jule::Ptr<_22a56c771_ObjectDeadCode>);
inline void _22a59b76c_remove_dead_globals(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Slice<jule::Ptr<_229a0a4a1_Var>>&);
inline void _22a59b9e2_remove_dead_fns(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Slice<jule::Ptr<_228de6cbc_Fn>>&);
inline void _22a59bc67_remove_dead_structs(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Slice<jule::Ptr<_228d188c0_Struct>>&);
inline void _22a59bedc_remove_dead_traits(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Slice<jule::Ptr<_22923d1bd_Trait>>&);
inline void _22a59c262_remove_deads_file(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_229a4ca76_SymbolTable>&);
inline void _22a59c4d7_remove_deads_package(jule::Ptr<_22a56c771_ObjectDeadCode>, jule::Ptr<_2299d85a0_Package>&);
inline void _22a59c6b3_remove_deads(jule::Ptr<_22a56c771_ObjectDeadCode>);
inline void _22a59c88e_elimanate(jule::Ptr<_22a56c771_ObjectDeadCode>);
struct _22a56c771_ObjectDeadCode {
	_22a56c4a7_LiveTable _field_live = _22a56c4a7_LiveTable();
	jule::Ptr<_22a0e7571_IR> _field_ir = jule::Ptr<_22a0e7571_IR>();
	

	_22a56c771_ObjectDeadCode(void) = default;

	inline bool operator==(_22a56c771_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_22a56c771_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_22ab9c950_ObjectCoder> static__22ab80977_new(jule::Ptr<_22a0e7571_IR>&, _22ab9c576_SerializationInfo);
inline void _22ab80ca7_write(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Str);
inline void _22ab81549_add_indent(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab82539_done_indent(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab82c87_indent(jule::Ptr<_22ab9c950_ObjectCoder>);
inline jule::I64 _22ab7210b_find_type_offset(_22ab9c950_ObjectCoder*, jule::Ptr<_22923d1bd_Trait>, jule::Ptr<_229a7d359_TypeKind>);
inline void _22ab84173_loc_info(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_2276b1a1c_Token>&);
inline void _22ab637a1_head(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab81c97_links(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab670ce_prepare_structures(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab6de1b_iter_packages(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Fn<void(jule::Ptr<_2299d85a0_Package>&)>);
inline void _22ab6e49e_build_trait_map(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab7036d_trait_decls(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab70a33_structure_plain_decl(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d188c0_Struct>&);
inline void _22ab711e8_structure_plain_decls(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab718ad_field_decl(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d21037_FieldIns>&);
inline void _22ab68498_structure_destructor(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d44c1a_StructIns>&);
inline void _22ab9cee4_structure_derive_defs_decls(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d44c1a_StructIns>&);
inline void _22ab9d126_structure_operator_eq(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Str&, jule::Ptr<_228d44c1a_StructIns>&);
inline void _22ab9d258_structure_operator_not_eq(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Str&, jule::Ptr<_228d44c1a_StructIns>&);
inline void _22ab9d38a_structure_operator(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Str&, jule::Ptr<_228de996d_FnIns>&, jule::Str);
inline void _22ab9d4bc_structure_operators(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d44c1a_StructIns>&);
inline void _22ab9d5ee_structure_ins_decl(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d44c1a_StructIns>&);
inline void _22ab9d731_structure_decl(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d188c0_Struct>&);
inline void _22ab9d863_structure_decls(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab9d995_params_decls(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>&);
inline void _22ab9dac7_func_head(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228de996d_FnIns>&, jule::Bool);
inline void _22ab9dc09_func_decl(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228de6cbc_Fn>&, jule::Bool);
inline void _22ab9dd3b_func_decls(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab9de6d_trait_data_types(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab9e0a0_param_ins(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228de8a9e_ParamIns>&);
inline void _22ab9e2c0_params_ins(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>&);
inline void _22ab9e5de_var_init_expr(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_229a0a4a1_Var>&, jule::Fn<void(void)>);
inline void _22ab9e864_var(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_229a0a4a1_Var>);
inline void _22ab9ead9_func(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228de6cbc_Fn>&);
inline void _22ab9ecb5_trait_wrappers(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22ab9ee91_trait_datas(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22aba016c_globals(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22aba0348_decls(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22aba05bd_structure_methods(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d44c1a_StructIns>&);
inline void _22aba0843_structure_derive_defs(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d44c1a_StructIns>&);
inline void _22aba0ab8_structure_ostream(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d44c1a_StructIns>&);
inline void _22aba0d3d_structure_ins(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d44c1a_StructIns>&);
inline void _22aba10b3_structure(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_228d188c0_Struct>&);
inline void _22aba128e_structures(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22aba146a_funcs(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22aba16e0_push_init(jule::Ptr<_22ab9c950_ObjectCoder>, jule::Ptr<_2299d85a0_Package>&);
inline void _22aba18bb_init_caller(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22aba1a97_end(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22aba1c73_serialize_head(jule::Ptr<_22ab9c950_ObjectCoder>);
inline void _22aba1e4e_serialize(jule::Ptr<_22ab9c950_ObjectCoder>);
struct _22ab9c950_ObjectCoder {
	jule::Str _field_obj = jule::Str();
	jule::Ptr<_22a0e7571_IR> _field_ir = jule::Ptr<_22a0e7571_IR>();
	_22ab9c576_SerializationInfo _field_info = _22ab9c576_SerializationInfo();
	jule::Slice<jule::Ptr<_22ab9c763_TraitHash>> _field_tmap = jule::Slice<jule::Ptr<_22ab9c763_TraitHash>>();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Ptr<_22ab23a08_ExprCoder> _field_ec = jule::Ptr<_22ab23a08_ExprCoder>();
	jule::Ptr<_22ab1ae84_ScopeCoder> _field_sc = jule::Ptr<_22ab1ae84_ScopeCoder>();
	

	_22ab9c950_ObjectCoder(void) = default;

	inline bool operator==(_22ab9c950_ObjectCoder _other) {
		return 
			this->_field_obj == _other._field_obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_22ab9c950_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _22d4bde61_parse_integer(_22abdbc8b_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _22d4c6d04_parse_integer(_22abdbc8b_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _22abdc583_get_data(_22abdbc8b_ArgParser*);
inline jule::VoidExceptional _22abdc7c5_process_flag(_22abdbc8b_ArgParser*, jule::Trait<_22a7c4874_CommonFlag>&);
inline jule::VoidExceptional _22abdca4a_single_dash(_22abdbc8b_ArgParser*, jule::Str&);
inline jule::VoidExceptional _22abdccc0_double_dash(_22abdbc8b_ArgParser*, jule::Str&);
inline jule::VoidExceptional _22abdce9b_try_arg(_22abdbc8b_ArgParser*);
inline jule::VoidExceptional _22abdd177_parse(_22abdbc8b_ArgParser*);
struct _22abdbc8b_ArgParser {
	_22abd95b3_FlagSet _field_set = _22abd95b3_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_22abdbc8b_ArgParser(void) = default;

	inline bool operator==(_22abdbc8b_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_22abdbc8b_ArgParser _other) { return !this->operator==(_other); }


};
inline void _23e93bda1_free(void*);
inline jule::Str _240576776_byte_ptr_to_str(jule::U8*);
inline jule::I64 _23e7d0a36_get_last_errno(void);
inline jule::I64 _240577007_stat(jule::U8*, struct stat*);
inline jule::I64 _240577139_open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _24057726b_getcwd(jule::U8*, jule::U64);
inline DIR* _24057739d_opendir(jule::U8*);
inline struct dirent* _2405774d0_readdir(DIR*);
inline jule::I64 _240577843_closedir(DIR*);
inline jule::I64 _240577bd9_mkdir(jule::U8*, jule::I64);
inline jule::I64 _240577d1b_rmdir(jule::U8*);
inline jule::I64 _240577e4d_unlink(jule::U8*);
inline jule::I64 _240579900_seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _240579cda_read(jule::I64, void*, jule::U64);
inline jule::I64 _24057a15e_close(jule::I64);
inline jule::I64 _24057a549_write(jule::I64, void*, jule::U64);
inline void _24057a758_exit(jule::I64);
inline jule::I64 _240619a4a_get_last_os_error(void);
inline jule::Slice<jule::Str> _240641335_args(void);
inline jule::Exceptional<jule::Str> _2406417a8_working_dir(void);
inline jule::Exceptional<jule::Str> _24064216b___getwd(void);
inline jule::Slice<jule::U8> _2406ce813_stobs(jule::Str&);
inline jule::Bool _227245a02_is_letter(jule::I32);
inline jule::Bool _2272bcc88_is16(jule::Slice<_2272bb1c6_Range16>, jule::U16);
inline jule::Bool _2272bd0c9_is32(jule::Slice<_2272bb649_Range32>, jule::U32);
inline jule::Bool _2272bd86b_is_excluding_latin(jule::Ptr<_2272bbabc_RangeTable>, jule::I32);
inline std::tuple<jule::I32,jule::I64> _22737e344_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _22737e90a_decode_last_rune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _2273806a8_append_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _2273809e9_append_rune_non_ascii(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _227381038_rune_count_str(jule::Str);
inline jule::Bool _2273812d0_rune_start(jule::U8);
inline jule::Str _227315ab1_repeat(jule::Str, jule::I64);
inline jule::Bool _227316d59__has_prefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _2273415c0_has_prefix(jule::Str, jule::Str);
inline jule::Bool _2273497d7__has_suffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _227352092_has_suffix(jule::Str, jule::Str);
inline jule::I64 _22731e67a_find_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _227338c27_find_last_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _227381da2_find_last(jule::Str, jule::Str);
inline jule::I64 _2273824ac__find_rune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _227382952_find_last_byte(jule::Str, jule::U8);
inline jule::I64 _227382e2a_find_any(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _22738359b_split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _2273838dc_contains(jule::Str, jule::Str);
inline jule::Bool _2273843b0_contains_any(jule::Str, jule::Str);
inline jule::I64 _227384701_count(jule::Str, jule::Str);
inline jule::Str _227384b85_replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _227382776__trim_left(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _227385c41_trim_left(jule::Str, jule::Str);
inline void _227385ee9__trim_right(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _22738667b_trim(jule::Str, jule::Str);
inline jule::Str _2273869bc_join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _227388095_clean(jule::Str);
inline jule::Str _227388628_from_slash(jule::Str);
inline jule::Str _227388947_join(jule::Slice<jule::Str>);
inline jule::Str _227388bde_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _227388e86_abs(jule::Str);
inline jule::Str _22738922d_base(jule::Str);
inline jule::Str _2273895a2_dir(jule::Str);
inline jule::Str _227389849_volume_name(jule::Str);
inline jule::Bool _22738a73a_is_path_sep(jule::U8);
inline jule::Bool _22738aa26_is_abs(jule::Str);
inline jule::I64 _22738acbd_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _22738b0dc___abs(jule::Str);
inline jule::Str _22738b384___join(jule::Slice<jule::Str>);
inline jule::I64 _23e7ece3d_get_last_fs_error(void);
inline jule::I64 _2273d90a2_get_last_process_error(void);
inline jule::Slice<char*> _2273dc32a_str_slice_to_cstr_slice(jule::Slice<jule::Str>);
inline jule::I64 _2273dc78c_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _2273dcb77_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _2273dd78d_exit(jule::I64);
inline jule::Str _2273dd98b_executable(void);
inline jule::Bool _24093bb4c_is_std_header_path(jule::Str);
inline jule::Bool _24093be05_is_valid_header_ext(jule::Str);
inline jule::Bool _24093c19c_is_valid_cpp_ext(jule::Str);
inline jule::Str _240948be2_logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _240948ecd_arg_to_str(jule::Any);
inline jule::I64 _240949275_find_next_fmt(jule::Str);
inline jule::Str _24094960a_apply_fmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _24094a6c7_is_top_directive(jule::Str);
inline jule::Bool _24094c29a_is_windows(jule::Str);
inline jule::Bool _24094c586_is_darwin(jule::Str);
inline jule::Bool _24094c82d_is_linux(jule::Str);
inline jule::Bool _24094cb4c_is_i386(jule::Str);
inline jule::Bool _24094cde4_is_amd64(jule::Str);
inline jule::Bool _24094d18b_is_arm64(jule::Str);
inline jule::Bool _24094d433_is_unix(jule::Str);
inline jule::Bool _24094d7a7_is_32bit(jule::Str);
inline jule::Bool _24094da4e_is_64bit(jule::Str);
inline void _24095ae13_init(void);
inline jule::Bool _2276b2226_is_unary_op(jule::Str);
inline jule::Bool _2276b2512_is_bin_op(jule::Str);
inline jule::Bool _2276b2ac8_is_str(jule::Str);
inline jule::Bool _2276b2d70_is_raw_str(jule::Str);
inline jule::Bool _2276b3117_is_rune(jule::Str);
inline jule::Bool _2276b3733_is_bool(jule::Str);
inline jule::Bool _2276b39ca_is_float(jule::Str);
inline jule::Bool _2276b3c72_is_num(jule::Str);
inline jule::Bool _2276b42b1_is_ignore_ident(jule::Str);
inline jule::Bool _2276b4558_is_anon_ident(jule::Str);
inline jule::Bool _2276b4a97_is_space(jule::I32);
inline jule::Bool _2276b4ee8_is_letter(jule::I32);
inline jule::Bool _2276b5537_is_decimal(jule::U8);
inline jule::Bool _2276b57ce_is_binary(jule::U8);
inline jule::Bool _2276b5a76_is_octal(jule::U8);
inline jule::Bool _2276b5d1d_is_hex(jule::U8);
inline jule::Bool _2276b60b5_is_assign(jule::U64);
inline jule::Bool _2276b635c_is_postfix_op(jule::Str);
inline jule::Bool _2276b6604_is_assign_op(jule::Str);
inline jule::Ptr<_2276b6da7_File> _2276b83d6_new_file_set(jule::Str);
inline _2409487a2_Log _2276b9c12_make_err(jule::I64, jule::I64, jule::Ptr<_2276b6da7_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2276ba097_bytes_has_prefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _2276ba3d8_float_fmt_e(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2276ba76d_float_fmt_p(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2276baaae_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2276bae00_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2276bb241_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2276bb692_float_num(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2276bb939_common_num(jule::Slice<jule::U8>&);
inline jule::Str _2276bbbd1_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _2276bc022_is_float_fmt_e(jule::U8, jule::I64);
inline jule::Bool _2276bc363_is_float_fmt_p(jule::U8, jule::I64);
inline jule::Bool _2276bc6a4_is_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _2276bc9e5_is_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _2276bcd36_is_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2276bd287_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _2276bd52e_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _2276bd870_hex_escape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2276bdb39_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _2276bdd04_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _2276be0ac_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _2276be354_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_2409487a2_Log> _2276c3d4d_lex(jule::Ptr<_2276b6da7_File>, jule::I64);
inline void _228dde3e1_lshift_unsig(_228d7b4d2_Const&, _228d7b4d2_Const&);
inline void _228dde6dd_rshift_unsig(_228d7b4d2_Const&, _228d7b4d2_Const&);
inline jule::I64 _2298e22de_leading_zeros64(jule::U64);
inline jule::I64 _2298e3345_trailing_zeros(jule::U64);
inline jule::I64 _2298e3c3b_trailing_zeros32(jule::U32);
inline jule::I64 _2298e3ed3_trailing_zeros64(jule::U64);
inline jule::I64 _2298e9758_len32(jule::U32);
inline jule::I64 _2298e9a00_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _2298ea6b0_add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _2298ebd43_mul64(jule::U64, jule::U64);
inline jule::U32 _229817401_f32_bits(jule::F32);
inline jule::F32 _2298176dc_f32_from_bits(jule::U32);
inline jule::U64 _229817984_f64_bits(jule::F64);
inline jule::F64 _229817ca3_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _22981a3b0_frexp(jule::F64);
inline jule::F64 _22987dd19_nan(void);
inline jule::Bool _22987ec4e_is_nan(jule::F64);
inline jule::F64 _2298816e0_inf(jule::I64);
inline jule::Bool _229887053_is_inf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _22988865e_normalize(jule::F64);
inline jule::F64 _229898828_log(jule::F64);
inline jule::F64 _2298a029c_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _2299056dc_modf(jule::F64);
inline jule::F64 _229905ea1_log2(jule::F64);
inline jule::Str _22936259a_fmt_float(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _229376d0c_generic_ftoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _2293cebab_big_ftoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _22950581a_FloatInfo&);
inline jule::Slice<jule::U8> _2294067c6_fmt_digits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _229407123_DecimalSlice, jule::I64, jule::U8);
inline void _229408993_round_shortest(_229932ab0_Decimal&, jule::U64, jule::I64, _22950581a_FloatInfo&);
inline jule::Slice<jule::U8> _229417c05_fmt_e(jule::Slice<jule::U8>, jule::Bool, _229407123_DecimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _2294183a9_fmt_f(jule::Slice<jule::U8>, jule::Bool, _229407123_DecimalSlice, jule::I64);
inline jule::Slice<jule::U8> _229419344_fmt_b(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _22950581a_FloatInfo&);
inline jule::Slice<jule::U8> _2294d3089_fmt_x(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _22950581a_FloatInfo&);
inline jule::I64 _229506871_min(jule::I64, jule::I64);
inline jule::I64 _22950bc50_max(jule::I64, jule::I64);
inline jule::U8 _229567be0_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _22958c990___parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _2295b00de_parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _22963be3a_parse_int(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _229353437_eisel_lemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _22970c22a_eisel_lemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _2295ec4a0_common_prefix_len_ignore_case(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _229416b6b_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _22974a774_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _2293990a4_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _2293dcd62_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _229442c0d_atof_hex(jule::Str, _22950581a_FloatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _2295b6887_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _22963c556_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _2296880da_parse_float_prefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _2296c5e19_parse_float(jule::Str, jule::I64);
inline void _22979ade0_ryu_ftoa_fixed32(_229407123_DecimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _22980281a_ryu_ftoa_fixed64(_229407123_DecimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _229809217_format_decimal(_229407123_DecimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _2293bcbdd_ryu_ftoa_shortest(_229407123_DecimalSlice&, jule::U64, jule::I64, _22950581a_FloatInfo&);
inline jule::I64 _2294a6535_mul_by_log2_log10(jule::I64);
inline jule::I64 _229533848_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _2299317e5_compute_bounds(jule::U64, jule::I64, _22950581a_FloatInfo&);
inline void _229931a37_ryu_digits(_229407123_DecimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _229931b69_ryu_digits32(_229407123_DecimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _229931c9b_mult64bit_pow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _229931dcd_mult128bit_pow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _229932010_divisible_by_pow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _229932142_divmod1e9(jule::U64);
inline void _22993361b_trim(_229932ab0_Decimal&);
inline void _22993374d_right_shift(_229932ab0_Decimal&, jule::U64);
inline jule::Bool _229933880_prefix_is_less_than(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _2299339b2_left_shift(_229932ab0_Decimal&, jule::U64);
inline jule::Bool _229933ae4_should_round_up(_229932ab0_Decimal&, jule::I64);
inline jule::Str _229934672_fmt_uint(jule::U64, jule::I64);
inline jule::Str _2299347a4_fmt_int(jule::I64, jule::I64);
inline jule::Str _2299348d6_itoa(jule::I64);
inline jule::Str _229934a18_small(jule::I64);
inline jule::Bool _229934b4a_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _229934c7c_fmt_bits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _2299a4417_real_kind_of(jule::Str);
inline jule::I64 _2299a46ae_bitsize_of(jule::Str);
inline jule::Str _2299a49cd_int_from_bits(jule::I64);
inline jule::Str _2299a4c75_uint_from_bits(jule::I64);
inline jule::Str _2299a501c_float_from_bits(jule::I64);
inline jule::Bool _2299aaa06_check_bit_float(jule::Str, jule::I64);
inline jule::I64 _2299aabc1_bitsize_of_float(jule::F64);
inline jule::I64 _2299aae68_bitsize_of_int(jule::I64);
inline jule::I64 _2299ab210_bitsize_of_uint(jule::U64);
inline void _2299ab375_update_target(void);
inline void _2299ab4da_init(void);
inline jule::F64 _2299b0797_min(jule::Str);
inline jule::F64 _2299b0a83_max(jule::Str);
inline jule::Bool _2299b0e07_is_i8_compatible(jule::Str);
inline jule::Bool _2299b11e3_is_i16_compatible(jule::Str);
inline jule::Bool _2299b148a_is_i32_compatible(jule::Str);
inline jule::Bool _2299b17a9_is_i64_compatible(jule::Str);
inline jule::Bool _2299b1a51_is_u8_compatible(jule::Str);
inline jule::Bool _2299b1ce8_is_u16_compatible(jule::Str);
inline jule::Bool _2299b2090_is_u32_compatible(jule::Str);
inline jule::Bool _2299b2414_is_u64_compatible(jule::Str);
inline jule::Bool _2299b26ab_is_f32_compatible(jule::Str);
inline jule::Bool _2299b2953_is_f64_compatible(jule::Str);
inline jule::Bool _2299b2c94_types_are_compatible(jule::Str, jule::Str);
inline jule::Bool _2299b303b_is_i16_greater(jule::Str);
inline jule::Bool _2299b32d3_is_i32_greater(jule::Str);
inline jule::Bool _2299b357a_is_i64_greater(jule::Str);
inline jule::Bool _2299b3822_is_u16_greater(jule::Str);
inline jule::Bool _2299b3c73_is_u32_greater(jule::Str);
inline jule::Bool _2299b401a_is_u64_greater(jule::Str);
inline jule::Bool _2299b42b2_is_f32_greater(jule::Str);
inline jule::Bool _2299b4559_is_f64_greater(jule::Str);
inline jule::Bool _2299b489a_is_greater(jule::Str, jule::Str);
inline jule::Bool _2299b58ce_is_sig_int(jule::Str);
inline jule::Bool _2299b5bba_is_unsig_int(jule::Str);
inline jule::Bool _2299b5e62_is_int(jule::Str);
inline jule::Bool _2299b6281_is_float(jule::Str);
inline jule::Bool _2299b6528_is_num(jule::Str);
inline jule::Bool _2299b67c0_is_sig_num(jule::Str);
inline jule::Bool _229a236b7_is_ascii(jule::I32);
inline jule::I32 _229a237e9_to_rune(jule::Slice<jule::U8>);
inline jule::Str _229a3a613_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _229a3a8bb_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _229a3ab63_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _229a3ae71_rune_from_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _229a3b2b2_str_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _229b11244_find_format_prefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _229b16865_get_format_range(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _229ae755a_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _229ae6d40_apply_fmt_by_default(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _229aea618_apply_fmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _229b08170_format_bytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _229b35026_format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _228deb464_parameter_uses_generics(jule::Ptr<_228de5480_Param>&, jule::Slice<jule::Ptr<_228d35777_GenericDecl>>&);
inline jule::Ptr<_229a824b2_TypeSymbol> _228ded950_build_type(jule::Ptr<_228d28193_TypeDecl>);
inline jule::Ptr<_229a5385c_Value> _228dedc3b_build_expr(jule::Ptr<_228d2c6b4_Expr>);
inline jule::Ptr<_229a7c666_TypeAlias> _228deded3_build_type_alias(jule::Ptr<_228d3e7e7_TypeAliasDecl>);
inline jule::Ptr<_228d0ad8a_Field> _228dee302_build_field(jule::Ptr<_228d42dd3_FieldDecl>);
inline jule::Slice<jule::Ptr<_228d0ad8a_Field>> _228dee599_build_fields(jule::Slice<jule::Ptr<_228d42dd3_FieldDecl>>&);
inline jule::Ptr<_228d188c0_Struct> _228dee841_build_struct(jule::Ptr<_228d43741_StructDecl>);
inline jule::Ptr<_228de5480_Param> _228deead8_build_param(jule::Ptr<_228d38b87_ParamDecl>);
inline jule::Slice<jule::Ptr<_228de5480_Param>> _228deee5c_build_params(jule::Slice<jule::Ptr<_228d38b87_ParamDecl>>&);
inline jule::Ptr<_228de4cba_RetType> _228e00204_build_ret_type(jule::Ptr<_228d2b2a6_RetTypeDecl>);
inline jule::Ptr<_228de6cbc_Fn> _228e0049b_build_fn(jule::Ptr<_228d39ea7_FnDecl>);
inline jule::Slice<jule::Ptr<_228de6cbc_Fn>> _228e00743_build_methods(jule::Slice<jule::Ptr<_228d39ea7_FnDecl>>&);
inline jule::Ptr<_22923d1bd_Trait> _228e009da_build_trait(jule::Ptr<_228d43d4b_TraitDecl>);
inline jule::Ptr<_22908619d_EnumItem> _228e00c82_build_enum_item(jule::Ptr<_228d41156_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_22908619d_EnumItem>> _228e01029_build_enum_items(jule::Slice<jule::Ptr<_228d41156_EnumItemDecl>>&);
inline jule::Ptr<_228e0dcc3_Enum> _228e012c1_build_enum(jule::Ptr<_228d41b7e_EnumDecl>);
inline jule::Ptr<_2290786bd_TypeEnumItem> _228e01722_build_type_enum_item(jule::Ptr<_228d42685_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_2290786bd_TypeEnumItem>> _228e019b9_build_type_enum_items(jule::Slice<jule::Ptr<_228d42685_TypeEnumItemDecl>>&);
inline jule::Ptr<_2292e1e75_TypeEnum> _228e01c61_build_type_enum(jule::Ptr<_228d42883_TypeEnumDecl>);
inline jule::Ptr<_229a0a4a1_Var> _228e02008_build_var(jule::Ptr<_228d3ae86_VarDecl>);
inline jule::Slice<jule::Ptr<_229a0a4a1_Var>> _228e022a0_build_vars(jule::Slice<jule::Ptr<_228d3ae86_VarDecl>>);
inline jule::Ptr<_2299a3504_Impl> _228e02547_build_impl(jule::Ptr<_228d44456_Impl>);
inline jule::Bool _229980437_match_constraint(jule::Str&, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _22998202c_is_builtin_constraint(jule::Str&);
inline jule::Ptr<_2299bd7e9_ScopeChecker> _22998bd7d_new_scope_checker_base(jule::Ptr<_2299dd792_Sema>&, jule::Ptr<_228de996d_FnIns>);
inline jule::Ptr<_2299bd7e9_ScopeChecker> _22998cc3b_new_scope_checker(jule::Ptr<_2299dd792_Sema>&, jule::Ptr<_228de996d_FnIns>);
inline jule::Ptr<_2299bc562_ScopeLabel> _229981d84_find_label_parent(jule::Str, jule::Ptr<_2299bd7e9_ScopeChecker>);
inline jule::Bool _22998dc09_model_is_goto_scope(jule::Any, jule::Ptr<_2299b6c10_Scope>&);
inline jule::Bool _22998eab7_stmt_is_goto_scope(jule::Any&, jule::Ptr<_2299b6c10_Scope>&);
inline jule::I64 _22999cae7_count_match_type(jule::Ptr<_2299ba8d4_Match>&, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Slice<jule::Ptr<_229a527d4_Data>> _2299a0a40_get_datas_from_tuple_data(jule::Ptr<_229a527d4_Data>&);
inline jule::Slice<jule::Any> _2299a1579_get_expr_models(jule::Any&);
inline jule::Bool _2299a2107_check_mut(jule::Ptr<_2299dd792_Sema>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Bool _22999c773_check_assign(jule::Ptr<_2299dd792_Sema>&, jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a527d4_Data>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Bool _22994d3c2_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _22998aab3_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _2299b6acd_stmt_is_def(jule::Any&);
inline jule::Ptr<_229a0a4a1_Var> _2299d31d2_find_var_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_229a7c666_TypeAlias> _2299d3633_find_type_alias_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_228d188c0_Struct> _2299d3a2e_find_struct_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_228de6cbc_Fn> _2299d3e91_find_fn_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_22923d1bd_Trait> _2299d429e_find_trait_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>&, jule::Str);
inline jule::Ptr<_228e0dcc3_Enum> _2299d45e0_find_enum_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>&, jule::Str);
inline jule::Ptr<_2292e1e75_TypeEnum> _2299d4953_find_type_enum_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>&, jule::Str);
inline jule::Bool _2299dab79_is_std_package(jule::Str, jule::Str);
inline jule::Bool _2299db8d3_is_valid_model_for_ref(jule::Any&);
inline _2409487a2_Log _2299dbd78_compiler_err(jule::Ptr<_2276b1a1c_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2299dc1b9_imp_is_lookupable(jule::Ptr<_2299d5646_ImportInfo>&, jule::Str);
inline void _2299dc4b6_append_ret_vars(jule::Slice<jule::Ptr<_229a0a4a1_Var>>&, jule::Ptr<_228de996d_FnIns>&);
inline void _2299dc76e_append_param_vars(jule::Slice<jule::Ptr<_229a0a4a1_Var>>&, jule::Ptr<_228de996d_FnIns>&);
inline void _2299dca49_append_generic_type_aliases(jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>&, jule::Ptr<_228de996d_FnIns>&);
inline jule::Ptr<_229a4ca76_SymbolTable> _2299dcd9b_find_file(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>&, jule::Ptr<_2276b6da7_File>&);
inline void _2299dd30d_push_suggestion(_2409487a2_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _229a2baaa_trait_has_reference_receiver(jule::Ptr<_22923d1bd_Trait>&);
inline jule::Bool _229a23ad5_float_assignable(jule::Str, jule::Ptr<_229a527d4_Data>&);
inline jule::Bool _229a23c17_sig_assignable(jule::Str, jule::Ptr<_229a527d4_Data>&);
inline jule::Bool _229a3a305_unsig_assignable(jule::Str, jule::Ptr<_229a527d4_Data>&);
inline jule::Bool _229a3a437_int_assignable(jule::Str, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_228ce499a_Directive> _229a77a3a_find_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>&, jule::Str);
inline jule::Any _229a77dc0_find_builtins_import(jule::Str, jule::Ptr<_2299d5646_ImportInfo>);
inline void _229a780ce_fit_bitsize(jule::Ptr<_229a527d4_Data>&);
inline void _229a783cb_make_struct_lit_alloc(jule::Ptr<_229a527d4_Data>&, jule::Ptr<_228de0106_StructLitExprModel>&);
inline jule::Ptr<_229a0a4a1_Var> _229a7871c_build_error_var(jule::Ptr<_2299b6c10_Scope>&, jule::Ptr<_228d31982_FnCallExpr>&);
inline jule::Any _229a78a5d_find_builtins_sema(jule::Str, jule::Ptr<_2299dd792_Sema>);
inline jule::Bool _229a78d05_is_ok_for_shifting(jule::Ptr<_229a527d4_Data>&);
inline jule::Bool _229a791ac_is_instanced_struct(jule::Ptr<_228d44c1a_StructIns>);
inline jule::Bool _229a79487_is_ptr_arithmetic_compatible_int(jule::Ptr<_229a527d4_Data>&);
inline void _229a796b8_apply_cast_kind_model(jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a7d359_TypeKind>&);
inline void _229a79971_apply_cast_kind(jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Ptr<_229a527d4_Data> _229a79b6e_build_void_data(void);
inline jule::Str _229a79e38_check_data_for_integer_indexing(jule::Ptr<_229a527d4_Data>&);
inline void _229a7a224_apply_cast_model_by_enum(jule::Ptr<_229a527d4_Data>&, jule::Ptr<_228e0dcc3_Enum>);
inline void _229a7a4dd_cast_const_by_type(jule::Str&, jule::Ptr<_229a527d4_Data>&);
inline void _229a7a9e9_update_model_to_generic_ins(jule::Ptr<_228de06bc_FnCallExprModel>&, jule::Ptr<_228de996d_FnIns>&);
inline jule::Bool _229a7ac5d_push_sub_ident_from_expr(jule::Any, jule::Ptr<_228d28da8_SubIdentTypeDecl>&);
inline jule::Bool _229a94b56_kind_uses_generics(jule::Any&, jule::Slice<jule::Ptr<_228d35777_GenericDecl>>&);
inline jule::Bool _229a94edb_has_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>&, jule::Str);
inline jule::Bool _229a95283_can_get_ptr(jule::Ptr<_229a527d4_Data>&);
inline jule::Bool _229a955a2_is_valid_for_sptr_type(jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a95849_is_valid_for_ref(jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Bool _229a95b13_is_builtin_str_convertable(jule::Ptr<_229a7d359_TypeKind>&);
inline jule::Str _229a95daa_build_link_path_by_tokens(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_229a82d31_Prim> _229a96273_build_prim_type(jule::Str);
inline jule::Ptr<_228d188c0_Struct> _229a9651a_get_struct_from_kind(jule::Ptr<_229a7d359_TypeKind>);
inline jule::Bool _229a967b2_is_prim(jule::Str);
inline void _229a96a6a_apply_implicit_cast(jule::Ptr<_229a7d359_TypeKind>&, jule::Ptr<_229a527d4_Data>&);
inline std::tuple<jule::Ptr<_229a4ca76_SymbolTable>,jule::Slice<_2409487a2_Log>> _229a9995d_build_symbols(jule::Ptr<_228ce3900_Ast>&, jule::Trait<_2299d2d4c_Importer>&, jule::Ptr<_228e02a97_SymbolBuilder>);
inline std::tuple<jule::Ptr<_2299d85a0_Package>,jule::Slice<_2409487a2_Log>> _229a99d8c___analyze_package(jule::Slice<jule::Ptr<_228ce3900_Ast>>&, jule::Trait<_2299d2d4c_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_2299d85a0_Package>,jule::Slice<_2409487a2_Log>> _229a9a277_analyze_package(jule::Slice<jule::Ptr<_228ce3900_Ast>>, jule::Trait<_2299d2d4c_Importer>, jule::I64);
inline jule::Ptr<_228de996d_FnIns> _229aa4319_find_builtin_fn(jule::Str);
inline jule::Ptr<_229a7c666_TypeAlias> _229aa621c_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_22923d1bd_Trait> _229aa6d00_find_builtin_trait(jule::Str);
inline jule::Any _229aa7817_find_builtin_def(jule::Str);
inline jule::Any _229ad1665_find_builtin_def_std_debug(jule::Str);
inline jule::Any _229b33d38_find_builtin_def_std_mem(jule::Str);
inline jule::Any _229b32dd1_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _229b07a76_find_package_builtin_def(jule::Str, jule::Str);
inline jule::Ptr<_229a527d4_Data> _229b17316_builtin_caller_common_plain(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b337e9_builtin_caller_common(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b08725_builtin_caller_common_mut(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b302c9_builtin_caller_error(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&);
inline jule::Ptr<_229a527d4_Data> _229b32bc2_builtin_caller_out(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229aa513e_builtin_caller_outln(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229ae6867_builtin_caller_new(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b10881_builtin_caller_panic(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b08a44_builtin_caller_make(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b2e97c_builtin_caller_append(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229aa2955_caller_copy_slice(jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b228d7_caller_copy_str(jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b074d2_builtin_caller_copy(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229abe08c_builtin_caller_clone(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229ada251_builtin_caller_assert(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b4294b_builtin_caller_std_mem_size_of(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b42c37_builtin_caller_std_mem_align_of(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b43155_builtin_caller_std_mem_free(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b43584_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b439a2_builtin_caller_std_jule_integrated_emit(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b43de2_builtin_caller_std_debug_out(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Ptr<_229a527d4_Data> _229b442cc_builtin_caller_std_debug_outln(jule::Ptr<_229a54352_Eval>&, jule::Ptr<_228d31982_FnCallExpr>&, jule::Ptr<_229a527d4_Data>&);
inline jule::Bool _229cee399_find_module_file(jule::Slice<jule::Ptr<_23e89737d_DirEntry>>&);
inline jule::Str _229cee4cb_find_module_file_deep(jule::Str);
inline jule::Slice<_2409487a2_Log> _229cee762_check_module_file(jule::Str);
inline jule::Ptr<_22a422945_FileInfo> _22a4295ea_parse_file(jule::Ptr<_2276b6da7_File>);
inline std::tuple<jule::Ptr<_228ce3900_Ast>,jule::Slice<_2409487a2_Log>> _22a475976_parse_fileset(jule::Ptr<_2276b6da7_File>);
inline jule::Ptr<_228d384b1_ScopeTree> _22a47637d_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _22a47668b_is_st(jule::Ptr<_2276b1a1c_Token>, jule::Ptr<_2276b1a1c_Token>);
inline jule::Bool _22a4769ee_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _22a476d95_next_st_pos(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_2276b1a1c_Token>>,jule::Bool> _22a4771d6_skip_st(jule::I64&, jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Slice<jule::Ptr<_22a4774d3_stmt>> _22a477879_split_stmts(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Slice<jule::Ptr<_2276b1a1c_Token>> _22a4842ae_get_block_expr(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_2276b1a1c_Token>>,jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a484611_split_delim(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::U64);
inline jule::I64 _22a4848a8_find_lowest_prec_op(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d2e72c_IdentExpr> _22a484bc7_build_ident_expr(jule::Ptr<_2276b1a1c_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_2276b1a1c_Token>>,jule::I64> _22a484e6e_get_range_expr_tokens(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Bool _22a4908b4_check_assign_tokens(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline _2409487a2_Log _22a4917a5_make_err(jule::I64, jule::I64, jule::Ptr<_2276b6da7_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_2276b1a1c_Token>> _22a491c4a_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_2276b1a1c_Token>>,jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a491ee2_range_last(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>,jule::Slice<_2409487a2_Log>> _22a492454_parts_kind(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>,jule::Slice<_2409487a2_Log>> _22a49283e_parts(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::U64, jule::Bool);
inline jule::Str _22a492b08_get_close_kind_of_brace(jule::Str);
inline _2409487a2_Log _22a492ec1_compiler_err(jule::Ptr<_2276b1a1c_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _22a493433_push_suggestion(_2409487a2_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _22a4936ca_tokstoa(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a43ab_build_void_type(void);
inline jule::Ptr<_228d28193_TypeDecl> _22a4a4620_build_prim_type(jule::Ptr<_2276b1a1c_Token>);
inline jule::I64 _22a4a4961_map_colon(jule::Slice<jule::Ptr<_2276b1a1c_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _229cc3923_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _229cc3b21_check_arch(jule::Str);
inline jule::Bool _229cdc365_is_pass_file_annotation(jule::Str);
inline void _229cdd564_set_os_vars(jule::Slice<jule::Str>&);
inline void _229cdd7b7_set_arch_vars(jule::Slice<jule::Str>&);
inline void _229cdda70_init_vars(jule::Slice<jule::Str>&, _229cdd256_CompileInfo&);
inline jule::Slice<jule::U8> _229daee93_read_buff(jule::Str);
inline _2409487a2_Log _229dd147b_flat_compiler_err(jule::Str);
inline void _22a0cba0b_push_passes(jule::Ptr<_2299d85a0_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _22a2428db_get_all_unique_passes(jule::Ptr<_2299d85a0_Package>&, jule::Slice<jule::Ptr<_2299d5646_ImportInfo>>);
inline _229cdd256_CompileInfo _22a24bb15_build_compile_info(void);
inline void _22a59cb58_eliminate_defines(jule::Ptr<_22a0e7571_IR>&);
inline jule::Ptr<_228ce499a_Directive> _22a59cedd_find_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>&, jule::Str);
inline jule::Bool _22a59d32e_has_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>&, jule::Str);
inline void _22a5a1e7b_eliminate_dead_code_of_scope(jule::Ptr<_2299b6c10_Scope>);
inline void _22a5a2212_eliminate_scope_functions(jule::Slice<jule::Ptr<_228de6cbc_Fn>>&);
inline void _22a5a2465_eliminate_functions_scope_package(jule::Ptr<_2299d85a0_Package>&);
inline void _22a5a271d_eliminate_scope_package(jule::Ptr<_2299d85a0_Package>&);
inline void _22a5a290a_eliminate_scopes(jule::Ptr<_22a0e7571_IR>&);
inline jule::Bool _227829943_is_std_package(jule::Str, jule::Str);
inline jule::Bool _22782c4a1_is_constant_valid_conditional_case(jule::Ptr<_2299b700c_If>&);
inline jule::Bool _22782daac_is_unreachable_expr(jule::Any&);
inline jule::Bool _22783161a_is_constant_valid_match_case(jule::Ptr<_2299bb42e_Case>&);
inline jule::Bool _22783286e_is_unreachable_conditional_case(jule::Ptr<_2299b700c_If>&);
inline jule::Bool _22783a657_is_unreachable_match_case(jule::Ptr<_2299bb42e_Case>&);
inline std::tuple<jule::Bool,jule::U64> _227c2e782_check_for_bit_shift_opt(jule::Ptr<_228dde853_OperandExprModel>&, jule::Ptr<_228dde853_OperandExprModel>&);
inline void _227c36239_push_opt_level(jule::I64);
inline void _22a5434d3_detect_enabled(void);
inline void _22a5c50d1_throw(jule::Str);
inline jule::U64 _22ab9bc3a_unix(void);
inline jule::U64 _22ab9c07b_unix_year_to_seconds(jule::U64, jule::Bool&);
inline jule::U64 _22ab9c411_unix_month_to_seconds(jule::U64, jule::Bool);
inline jule::Bool _22ab214d9_is_copy_optimizable(jule::Ptr<_229a527d4_Data>&);
inline jule::Bool _22ab21891_is_iter_copy_optimizable(jule::Ptr<_229a527d4_Data>&, jule::Ptr<_229a0a4a1_Var>&);
inline jule::Str _22ab2e99d_decompose_common_esq(jule::U8);
inline jule::Str _22ab2ec89_sbtoa(jule::U8);
inline jule::Str _22ab30031_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _22ab30350_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _22ab3065d_ftoa(jule::F64, jule::I64);
inline jule::Str _22ab30905_itoa(jule::I64);
inline jule::Str _22ab30b9c_utoa(jule::U64);
inline jule::Bool _22ab31054_is_forwarded(jule::Ptr<_2299b6c10_Scope>&);
inline jule::Bool _22ab3131d_is_builtin_call_has_debuginf(jule::Ptr<_228de06bc_FnCallExprModel>&);
inline void _22aba22b2_iter_files(jule::Ptr<_2299d85a0_Package>&, jule::Fn<void(jule::Ptr<_229a4ca76_SymbolTable>&)>);
inline void _22aba2515_prepare_structure(jule::Ptr<_228d188c0_Struct>&);
inline jule::Str _22aba27ac_concat_all_parts(jule::Slice<jule::Ptr<_2276b1a1c_Token>>);
inline jule::Ptr<_228ce499a_Directive> _22abaabd3_find_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>&, jule::Str);
inline jule::Bool _22abab068_has_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>&, jule::Str);
inline void _240914d34_print_error_message(jule::Str);
inline void _24092a3cc_help(jule::Slice<jule::Str>&);
inline void _24092bc91_version(jule::Slice<jule::Str>&);
inline void _24092c4de_tool_distos(void);
inline void _24092cc3c_tool_distarch(void);
inline void _24092d48a_tool(jule::Slice<jule::Str>&);
inline void _24092dbd8_julenv(jule::Slice<jule::Str>&);
inline void _240915c36_mod(jule::Slice<jule::Str>&);
inline jule::Bool _24093a6b7_process_command(jule::Slice<jule::Str>&);
inline void _240933da8_show_info(void);
void entry_point(void);
inline void _22a64e677_init(void);
inline jule::Ptr<_2405a4441_File> _22a9e7d0b_open_output(jule::Str&);
inline void _22abaeba4_clear_objects(void);
inline void _22abb1755_compile_ir(jule::Str, jule::Str);
inline jule::Bool _22abbc93c_is_cpp_source_file(jule::Str);
inline void _22abad015_push_comp_cmd_clang(jule::Str&);
inline void _22abab2aa_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _22a94cb73_gen_compile_cmd(jule::Str, jule::Ptr<_22a0e7571_IR>&);
inline jule::Str _22a9e716d_get_compile_path(void);
inline void _22a7c1b4b_apply_target_independent_optimizations(jule::Ptr<_22a0e7571_IR>&);
inline void _22a9ea0a5_check_compiler_flag(void);
inline void _22abb86e6_check_target_arch(jule::Str);
inline void _22abdd397_check_target_os(jule::Str);
inline void _22abdd4c9_check_target_flag(jule::Str&);
inline void _22abdd60b_check_opt_flag(jule::Str&);
inline void _22abdd96e_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _22abddaa1_check_flags(jule::Slice<jule::Str>&);
inline void _22abddbd3_setup_sema_flags(jule::I64&);
inline jule::Ptr<_22a0e7571_IR> _22abddd15_build_ir(jule::Slice<jule::Str>&);
inline void _22abdde47_compile_command(jule::Slice<jule::Str>&);


struct _2299d2d4c_ImporterMptrData {
	void(*_2299d1c6e_set_mod_path)(jule::Trait<_2299d2d4c_Importer>, jule::Str);
	jule::Str(*_2299d1eb1_get_mod_path)(jule::Trait<_2299d2d4c_Importer>);
	jule::Str(*_2299d22be_mod_by_id)(jule::Trait<_2299d2d4c_Importer>, jule::I64);
	jule::Ptr<_2299d5646_ImportInfo>(*_2299d25cc_get_import)(jule::Trait<_2299d2d4c_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_228ce3900_Ast>>,jule::Slice<_2409487a2_Log>>(*_2299d2984_import_package)(jule::Trait<_2299d2d4c_Importer>, jule::Str, jule::Bool);
	void(*_2299d2c09_imported)(jule::Trait<_2299d2d4c_Importer>, jule::Ptr<_2299d5646_ImportInfo>);
};

struct _229a7ce2a_KindMptrData {
	jule::Str(*_229a7c9c9_to_str)(jule::Trait<_229a7ce2a_Kind>);
	jule::Bool(*_229a7ccd7_equals)(jule::Trait<_229a7ce2a_Kind>, jule::Ptr<_229a7d359_TypeKind>);
};

struct _229a98e02_LookupMptrData {
	jule::Ptr<_2299d5646_ImportInfo>(*_229a970a9_find_package)(jule::Trait<_229a98e02_Lookup>, jule::Str);
	jule::Ptr<_2299d5646_ImportInfo>(*_229a973b7_select_package)(jule::Trait<_229a98e02_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)>);
	jule::Ptr<_229a0a4a1_Var>(*_229a9776e_find_var)(jule::Trait<_229a98e02_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_229a7c666_TypeAlias>(*_229a97b26_find_type_alias)(jule::Trait<_229a98e02_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_228d188c0_Struct>(*_229a97ecd_find_struct)(jule::Trait<_229a98e02_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_228de6cbc_Fn>(*_229a98385_find_fn)(jule::Trait<_229a98e02_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_22923d1bd_Trait>(*_229a98693_find_trait)(jule::Trait<_229a98e02_Lookup>, jule::Str);
	jule::Ptr<_228e0dcc3_Enum>(*_229a989a1_find_enum)(jule::Trait<_229a98e02_Lookup>, jule::Str);
	jule::Ptr<_2292e1e75_TypeEnum>(*_229a98cae_find_type_enum)(jule::Trait<_229a98e02_Lookup>, jule::Str);
};

struct _22a7c4874_CommonFlagMptrData {
	jule::Str(*_22a7c4742_name)(jule::Trait<_22a7c4874_CommonFlag>);
	jule::I32(*_22abbb672_short)(jule::Trait<_22a7c4874_CommonFlag>);
	jule::Str(*_22abd7b33_what)(jule::Trait<_22a7c4874_CommonFlag>);
	void(*_22abd7c65_reset)(jule::Trait<_22a7c4874_CommonFlag>);
};



inline void _2299d1c6e_set_mod_path_0(jule::Trait<_2299d2d4c_Importer> _self_, jule::Str _1735_path) {
	_229e509b2_set_mod_path(_self_.safe_ptr<_229dd6cbc_JuleImporter>(), _1735_path);
}
inline jule::Str _2299d1eb1_get_mod_path_0(jule::Trait<_2299d2d4c_Importer> _self_) {
	return _229e5abba_get_mod_path(_self_.safe_ptr<_229dd6cbc_JuleImporter>());
}
inline jule::Str _2299d22be_mod_by_id_0(jule::Trait<_2299d2d4c_Importer> _self_, jule::I64 _2528_id) {
	return _229e80bbd_mod_by_id(_self_.safe_ptr<_229dd6cbc_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_2299d5646_ImportInfo> _2299d25cc_get_import_0(jule::Trait<_2299d2d4c_Importer> _self_, jule::Str _3133_path) {
	return _22a03c4e9_get_import(_self_.safe_ptr<_229dd6cbc_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_228ce3900_Ast>>,jule::Slice<_2409487a2_Log>> _2299d2984_import_package_0(jule::Trait<_2299d2d4c_Importer> _self_, jule::Str _3737_path, jule::Bool _3748_update_mod) {
	return _22a0442d1_import_package(_self_.safe_ptr<_229dd6cbc_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _2299d2c09_imported_0(jule::Trait<_2299d2d4c_Importer> _self_, jule::Ptr<_2299d5646_ImportInfo> _4135__0) {
	_22a052d6c_imported(_self_.safe_ptr<_229dd6cbc_JuleImporter>(), _4135__0);
}
inline jule::Str _229a7c9c9_to_str_0(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _228d1a5a3_to_str(_self_.safe_ptr<_228d44c1a_StructIns>());
}
inline jule::Bool _229a7ccd7_equals_0(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _228d1b719_equals(_self_.data.as<_228d44c1a_StructIns>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_1(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _228de9c9d_to_str(_self_.safe_ptr<_228de996d_FnIns>());
}
inline jule::Bool _229a7ccd7_equals_1(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _228dea0ab_equals(_self_.data.as<_228de996d_FnIns>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_2(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _228e59170_to_str(_self_.safe_ptr<_22923d1bd_Trait>());
}
inline jule::Bool _229a7ccd7_equals_2(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _228e77ce8_equals(_self_.data.as<_22923d1bd_Trait>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_3(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _228ede854_to_str(_self_.safe_ptr<_228e0dcc3_Enum>());
}
inline jule::Bool _229a7ccd7_equals_3(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _228ee6dde_equals(_self_.data.as<_228e0dcc3_Enum>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_4(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _22916e011_to_str(_self_.safe_ptr<_2292e1e75_TypeEnum>());
}
inline jule::Bool _229a7ccd7_equals_4(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _22918d0b8_equals(_self_.data.as<_2292e1e75_TypeEnum>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_5(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _229a7d755_to_str(_self_.safe_ptr<_229a7d359_TypeKind>());
}
inline jule::Bool _229a7ccd7_equals_5(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _229a7da63_equals(_self_.data.as<_229a7d359_TypeKind>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_6(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _229a83194_to_str(_self_.safe_ptr<_229a82d31_Prim>());
}
inline jule::Bool _229a7ccd7_equals_6(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _229a834a2_equals(_self_.data.as<_229a82d31_Prim>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_7(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _229a86928_to_str(_self_.safe_ptr<_229a865b5_Sptr>());
}
inline jule::Bool _229a7ccd7_equals_7(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _229a86c36_equals(_self_.data.as<_229a865b5_Sptr>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_8(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _229a8752d_to_str(_self_.safe_ptr<_229a87022_Slc>());
}
inline jule::Bool _229a7ccd7_equals_8(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _229a8783b_equals(_self_.data.as<_229a87022_Slc>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_9(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _229a87e13_to_str(_self_.safe_ptr<_229a87aa0_Tuple>());
}
inline jule::Bool _229a7ccd7_equals_9(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _229a88221_equals(_self_.data.as<_229a87aa0_Tuple>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_10(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _229a8893b_to_str(_self_.safe_ptr<_229a885c8_Map>());
}
inline jule::Bool _229a7ccd7_equals_10(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _229a88c49_equals(_self_.data.as<_229a885c8_Map>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_11(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _229a89530_to_str(_self_.safe_ptr<_229a891bc_Arr>());
}
inline jule::Bool _229a7ccd7_equals_11(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _229a8983d_equals(_self_.data.as<_229a891bc_Arr>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_12(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _229a89e8c_to_str(_self_.safe_ptr<_229a89b29_Ptr>());
}
inline jule::Bool _229a7ccd7_equals_12(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _229a8a29a_equals(_self_.data.as<_229a89b29_Ptr>(), _5626_other);
}
inline jule::Str _229a7c9c9_to_str_13(jule::Trait<_229a7ce2a_Kind> _self_) {
	return _22aba378b_to_str(_self_.safe_ptr<_22aba34c2_CustomType>());
}
inline jule::Bool _229a7ccd7_equals_13(jule::Trait<_229a7ce2a_Kind> _self_, jule::Ptr<_229a7d359_TypeKind> _5626_other) {
	return _22aba3a99_equals(_self_.data.as<_22aba34c2_CustomType>(), _5626_other);
}
inline jule::Ptr<_2299d5646_ImportInfo> _229a970a9_find_package_0(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _935_ident) {
	return _2299bdc4a_find_package(_self_.safe_ptr<_2299bd7e9_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_2299d5646_ImportInfo> _229a973b7_select_package_0(jule::Trait<_229a98e02_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)> _1337_selector) {
	return _2299be058_select_package(_self_.safe_ptr<_2299bd7e9_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_229a0a4a1_Var> _229a9776e_find_var_0(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _2299be410_find_var(_self_.safe_ptr<_2299bd7e9_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_229a7c666_TypeAlias> _229a97b26_find_type_alias_0(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _2299be7b7_find_type_alias(_self_.safe_ptr<_2299bd7e9_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_228d188c0_Struct> _229a97ecd_find_struct_0(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _2299beb6e_find_struct(_self_.safe_ptr<_2299bd7e9_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_228de6cbc_Fn> _229a98385_find_fn_0(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _2299c0026_find_fn(_self_.safe_ptr<_2299bd7e9_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_22923d1bd_Trait> _229a98693_find_trait_0(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _3333_ident) {
	return _2299c0334_find_trait(_self_.safe_ptr<_2299bd7e9_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_228e0dcc3_Enum> _229a989a1_find_enum_0(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _3732_ident) {
	return _2299c0642_find_enum(_self_.safe_ptr<_2299bd7e9_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_2292e1e75_TypeEnum> _229a98cae_find_type_enum_0(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _4137_ident) {
	return _2299c0950_find_type_enum(_self_.safe_ptr<_2299bd7e9_ScopeChecker>(), _4137_ident);
}
inline jule::Ptr<_2299d5646_ImportInfo> _229a970a9_find_package_1(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _935_ident) {
	return _2299d5b63_find_package(_self_.safe_ptr<_2299d5646_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_2299d5646_ImportInfo> _229a973b7_select_package_1(jule::Trait<_229a98e02_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)> _1337_selector) {
	return _2299d5e71_select_package(_self_.safe_ptr<_2299d5646_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_229a0a4a1_Var> _229a9776e_find_var_1(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _2299d6328_find_var(_self_.safe_ptr<_2299d5646_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_229a7c666_TypeAlias> _229a97b26_find_type_alias_1(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _2299d66d0_find_type_alias(_self_.safe_ptr<_2299d5646_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_228d188c0_Struct> _229a97ecd_find_struct_1(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _2299d6a87_find_struct(_self_.safe_ptr<_2299d5646_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_228de6cbc_Fn> _229a98385_find_fn_1(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _2299d6e3e_find_fn(_self_.safe_ptr<_2299d5646_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_22923d1bd_Trait> _229a98693_find_trait_1(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _3333_ident) {
	return _2299d724c_find_trait(_self_.safe_ptr<_2299d5646_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_228e0dcc3_Enum> _229a989a1_find_enum_1(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _3732_ident) {
	return _2299d755a_find_enum(_self_.safe_ptr<_2299d5646_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_2292e1e75_TypeEnum> _229a98cae_find_type_enum_1(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _4137_ident) {
	return _2299d7868_find_type_enum(_self_.safe_ptr<_2299d5646_ImportInfo>(), _4137_ident);
}
inline jule::Ptr<_2299d5646_ImportInfo> _229a970a9_find_package_2(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _935_ident) {
	return _2299d8a78_find_package(_self_.safe_ptr<_2299d85a0_Package>(), _935_ident);
}
inline jule::Ptr<_2299d5646_ImportInfo> _229a973b7_select_package_2(jule::Trait<_229a98e02_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)> _1337_selector) {
	return _2299d8d86_select_package(_self_.safe_ptr<_2299d85a0_Package>(), _1337_selector);
}
inline jule::Ptr<_229a0a4a1_Var> _229a9776e_find_var_2(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _2299d923d_find_var(_self_.safe_ptr<_2299d85a0_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_229a7c666_TypeAlias> _229a97b26_find_type_alias_2(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _2299d95e5_find_type_alias(_self_.safe_ptr<_2299d85a0_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_228d188c0_Struct> _229a97ecd_find_struct_2(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _2299d999c_find_struct(_self_.safe_ptr<_2299d85a0_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_228de6cbc_Fn> _229a98385_find_fn_2(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _2299d9d54_find_fn(_self_.safe_ptr<_2299d85a0_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_22923d1bd_Trait> _229a98693_find_trait_2(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _3333_ident) {
	return _2299da162_find_trait(_self_.safe_ptr<_2299d85a0_Package>(), _3333_ident);
}
inline jule::Ptr<_228e0dcc3_Enum> _229a989a1_find_enum_2(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _3732_ident) {
	return _2299da470_find_enum(_self_.safe_ptr<_2299d85a0_Package>(), _3732_ident);
}
inline jule::Ptr<_2292e1e75_TypeEnum> _229a98cae_find_type_enum_2(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _4137_ident) {
	return _2299da77d_find_type_enum(_self_.safe_ptr<_2299d85a0_Package>(), _4137_ident);
}
inline jule::Ptr<_2299d5646_ImportInfo> _229a970a9_find_package_3(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _935_ident) {
	return _2299ddcae_find_package(_self_.safe_ptr<_2299dd792_Sema>(), _935_ident);
}
inline jule::Ptr<_2299d5646_ImportInfo> _229a973b7_select_package_3(jule::Trait<_229a98e02_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)> _1337_selector) {
	return _2299de0bc_select_package(_self_.safe_ptr<_2299dd792_Sema>(), _1337_selector);
}
inline jule::Ptr<_229a0a4a1_Var> _229a9776e_find_var_3(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _2299de474_find_var(_self_.safe_ptr<_2299dd792_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_229a7c666_TypeAlias> _229a97b26_find_type_alias_3(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _2299de82b_find_type_alias(_self_.safe_ptr<_2299dd792_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_228d188c0_Struct> _229a97ecd_find_struct_3(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _2299debd3_find_struct(_self_.safe_ptr<_2299dd792_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_228de6cbc_Fn> _229a98385_find_fn_3(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _2299e008a_find_fn(_self_.safe_ptr<_2299dd792_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_22923d1bd_Trait> _229a98693_find_trait_3(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _3333_ident) {
	return _2299e0398_find_trait(_self_.safe_ptr<_2299dd792_Sema>(), _3333_ident);
}
inline jule::Ptr<_228e0dcc3_Enum> _229a989a1_find_enum_3(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _3732_ident) {
	return _2299e06a6_find_enum(_self_.safe_ptr<_2299dd792_Sema>(), _3732_ident);
}
inline jule::Ptr<_2292e1e75_TypeEnum> _229a98cae_find_type_enum_3(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _4137_ident) {
	return _2299e09b4_find_type_enum(_self_.safe_ptr<_2299dd792_Sema>(), _4137_ident);
}
inline jule::Ptr<_2299d5646_ImportInfo> _229a970a9_find_package_4(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _935_ident) {
	return _229a4d093_find_package(_self_.safe_ptr<_229a4ca76_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_2299d5646_ImportInfo> _229a973b7_select_package_4(jule::Trait<_229a98e02_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)> _1337_selector) {
	return _229a4d3a1_select_package(_self_.safe_ptr<_229a4ca76_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_229a0a4a1_Var> _229a9776e_find_var_4(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _229a4d758_find_var(_self_.safe_ptr<_229a4ca76_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_229a7c666_TypeAlias> _229a97b26_find_type_alias_4(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _229a4db10_find_type_alias(_self_.safe_ptr<_229a4ca76_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_228d188c0_Struct> _229a97ecd_find_struct_4(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _229a4deb7_find_struct(_self_.safe_ptr<_229a4ca76_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_228de6cbc_Fn> _229a98385_find_fn_4(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _229a4e36e_find_fn(_self_.safe_ptr<_229a4ca76_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_22923d1bd_Trait> _229a98693_find_trait_4(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _3333_ident) {
	return _229a4e67c_find_trait(_self_.safe_ptr<_229a4ca76_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_228e0dcc3_Enum> _229a989a1_find_enum_4(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _3732_ident) {
	return _229a4e98a_find_enum(_self_.safe_ptr<_229a4ca76_SymbolTable>(), _3732_ident);
}
inline jule::Ptr<_2292e1e75_TypeEnum> _229a98cae_find_type_enum_4(jule::Trait<_229a98e02_Lookup> _self_, jule::Str _4137_ident) {
	return _229a4ec98_find_type_enum(_self_.safe_ptr<_229a4ca76_SymbolTable>(), _4137_ident);
}
inline jule::Str _22a7c4742_name_0(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d4999db_name(_self_.safe_ptr<_22d49a13a_Flag>());
}
inline jule::I32 _22abbb672_short_0(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d49a789_short(_self_.safe_ptr<_22d49a13a_Flag>());
}
inline jule::Str _22abd7b33_what_0(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d49a525_what(_self_.safe_ptr<_22d49a13a_Flag>());
}
inline void _22abd7c65_reset_0(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	_22d49a657_reset(_self_.safe_ptr<_22d49a13a_Flag>());
}
inline jule::Str _22a7c4742_name_1(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d49d847_name(_self_.safe_ptr<_22d49dced_Flag>());
}
inline jule::I32 _22abbb672_short_1(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d49e32b_short(_self_.safe_ptr<_22d49dced_Flag>());
}
inline jule::Str _22abd7b33_what_1(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d49e0b7_what(_self_.safe_ptr<_22d49dced_Flag>());
}
inline void _22abd7c65_reset_1(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	_22d49e1e9_reset(_self_.safe_ptr<_22d49dced_Flag>());
}
inline jule::Str _22a7c4742_name_2(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d4a232e_name(_self_.safe_ptr<_22d4a27d5_Flag>());
}
inline jule::I32 _22abbb672_short_2(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d4a2d13_short(_self_.safe_ptr<_22d4a27d5_Flag>());
}
inline jule::Str _22abd7b33_what_2(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d4a2a9e_what(_self_.safe_ptr<_22d4a27d5_Flag>());
}
inline void _22abd7c65_reset_2(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	_22d4a2bd1_reset(_self_.safe_ptr<_22d4a27d5_Flag>());
}
inline jule::Str _22a7c4742_name_3(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d4a5d5a_name(_self_.safe_ptr<_22d4a6311_Flag>());
}
inline jule::I32 _22abbb672_short_3(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d4a683e_short(_self_.safe_ptr<_22d4a6311_Flag>());
}
inline jule::Str _22abd7b33_what_3(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d4a65ca_what(_self_.safe_ptr<_22d4a6311_Flag>());
}
inline void _22abd7c65_reset_3(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	_22d4a670c_reset(_self_.safe_ptr<_22d4a6311_Flag>());
}
inline jule::Str _22a7c4742_name_4(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d4a9842_name(_self_.safe_ptr<_22d4a9ce8_Flag>());
}
inline jule::I32 _22abbb672_short_4(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d4aa326_short(_self_.safe_ptr<_22d4a9ce8_Flag>());
}
inline jule::Str _22abd7b33_what_4(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	return _22d4aa0b2_what(_self_.safe_ptr<_22d4a9ce8_Flag>());
}
inline void _22abd7c65_reset_4(jule::Trait<_22a7c4874_CommonFlag> _self_) {
	_22d4aa1e4_reset(_self_.safe_ptr<_22d4a9ce8_Flag>());
}


static _2299d2d4c_ImporterMptrData _2299d2d4c_Importer_mptr_data[] = {
	{
		._2299d1c6e_set_mod_path=_2299d1c6e_set_mod_path_0,
		._2299d1eb1_get_mod_path=_2299d1eb1_get_mod_path_0,
		._2299d22be_mod_by_id=_2299d22be_mod_by_id_0,
		._2299d25cc_get_import=_2299d25cc_get_import_0,
		._2299d2984_import_package=_2299d2984_import_package_0,
		._2299d2c09_imported=_2299d2c09_imported_0,
	},
};
static _229a7ce2a_KindMptrData _229a7ce2a_Kind_mptr_data[] = {
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_0,
		._229a7ccd7_equals=_229a7ccd7_equals_0,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_1,
		._229a7ccd7_equals=_229a7ccd7_equals_1,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_2,
		._229a7ccd7_equals=_229a7ccd7_equals_2,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_3,
		._229a7ccd7_equals=_229a7ccd7_equals_3,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_4,
		._229a7ccd7_equals=_229a7ccd7_equals_4,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_5,
		._229a7ccd7_equals=_229a7ccd7_equals_5,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_6,
		._229a7ccd7_equals=_229a7ccd7_equals_6,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_7,
		._229a7ccd7_equals=_229a7ccd7_equals_7,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_8,
		._229a7ccd7_equals=_229a7ccd7_equals_8,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_9,
		._229a7ccd7_equals=_229a7ccd7_equals_9,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_10,
		._229a7ccd7_equals=_229a7ccd7_equals_10,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_11,
		._229a7ccd7_equals=_229a7ccd7_equals_11,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_12,
		._229a7ccd7_equals=_229a7ccd7_equals_12,
	},
	{
		._229a7c9c9_to_str=_229a7c9c9_to_str_13,
		._229a7ccd7_equals=_229a7ccd7_equals_13,
	},
};
static _229a98e02_LookupMptrData _229a98e02_Lookup_mptr_data[] = {
	{
		._229a970a9_find_package=_229a970a9_find_package_0,
		._229a973b7_select_package=_229a973b7_select_package_0,
		._229a9776e_find_var=_229a9776e_find_var_0,
		._229a97b26_find_type_alias=_229a97b26_find_type_alias_0,
		._229a97ecd_find_struct=_229a97ecd_find_struct_0,
		._229a98385_find_fn=_229a98385_find_fn_0,
		._229a98693_find_trait=_229a98693_find_trait_0,
		._229a989a1_find_enum=_229a989a1_find_enum_0,
		._229a98cae_find_type_enum=_229a98cae_find_type_enum_0,
	},
	{
		._229a970a9_find_package=_229a970a9_find_package_1,
		._229a973b7_select_package=_229a973b7_select_package_1,
		._229a9776e_find_var=_229a9776e_find_var_1,
		._229a97b26_find_type_alias=_229a97b26_find_type_alias_1,
		._229a97ecd_find_struct=_229a97ecd_find_struct_1,
		._229a98385_find_fn=_229a98385_find_fn_1,
		._229a98693_find_trait=_229a98693_find_trait_1,
		._229a989a1_find_enum=_229a989a1_find_enum_1,
		._229a98cae_find_type_enum=_229a98cae_find_type_enum_1,
	},
	{
		._229a970a9_find_package=_229a970a9_find_package_2,
		._229a973b7_select_package=_229a973b7_select_package_2,
		._229a9776e_find_var=_229a9776e_find_var_2,
		._229a97b26_find_type_alias=_229a97b26_find_type_alias_2,
		._229a97ecd_find_struct=_229a97ecd_find_struct_2,
		._229a98385_find_fn=_229a98385_find_fn_2,
		._229a98693_find_trait=_229a98693_find_trait_2,
		._229a989a1_find_enum=_229a989a1_find_enum_2,
		._229a98cae_find_type_enum=_229a98cae_find_type_enum_2,
	},
	{
		._229a970a9_find_package=_229a970a9_find_package_3,
		._229a973b7_select_package=_229a973b7_select_package_3,
		._229a9776e_find_var=_229a9776e_find_var_3,
		._229a97b26_find_type_alias=_229a97b26_find_type_alias_3,
		._229a97ecd_find_struct=_229a97ecd_find_struct_3,
		._229a98385_find_fn=_229a98385_find_fn_3,
		._229a98693_find_trait=_229a98693_find_trait_3,
		._229a989a1_find_enum=_229a989a1_find_enum_3,
		._229a98cae_find_type_enum=_229a98cae_find_type_enum_3,
	},
	{
		._229a970a9_find_package=_229a970a9_find_package_4,
		._229a973b7_select_package=_229a973b7_select_package_4,
		._229a9776e_find_var=_229a9776e_find_var_4,
		._229a97b26_find_type_alias=_229a97b26_find_type_alias_4,
		._229a97ecd_find_struct=_229a97ecd_find_struct_4,
		._229a98385_find_fn=_229a98385_find_fn_4,
		._229a98693_find_trait=_229a98693_find_trait_4,
		._229a989a1_find_enum=_229a989a1_find_enum_4,
		._229a98cae_find_type_enum=_229a98cae_find_type_enum_4,
	},
};
static _22a7c4874_CommonFlagMptrData _22a7c4874_CommonFlag_mptr_data[] = {
	{
		._22a7c4742_name=_22a7c4742_name_0,
		._22abbb672_short=_22abbb672_short_0,
		._22abd7b33_what=_22abd7b33_what_0,
		._22abd7c65_reset=_22abd7c65_reset_0,
	},
	{
		._22a7c4742_name=_22a7c4742_name_1,
		._22abbb672_short=_22abbb672_short_1,
		._22abd7b33_what=_22abd7b33_what_1,
		._22abd7c65_reset=_22abd7c65_reset_1,
	},
	{
		._22a7c4742_name=_22a7c4742_name_2,
		._22abbb672_short=_22abbb672_short_2,
		._22abd7b33_what=_22abd7b33_what_2,
		._22abd7c65_reset=_22abd7c65_reset_2,
	},
	{
		._22a7c4742_name=_22a7c4742_name_3,
		._22abbb672_short=_22abbb672_short_3,
		._22abd7b33_what=_22abd7b33_what_3,
		._22abd7c65_reset=_22abd7c65_reset_3,
	},
	{
		._22a7c4742_name=_22a7c4742_name_4,
		._22abbb672_short=_22abbb672_short_4,
		._22abd7b33_what=_22abd7b33_what_4,
		._22abd7c65_reset=_22abd7c65_reset_4,
	},
};


jule::Str _22abac498_OUT_DIR = jule::Str("dist", 4);
jule::Str _22abb1e1a_OUT_NAME = jule::Str("ir.cpp", 6);
jule::Str _22abb3911_OUT = jule::Str();
jule::Str _23e692123_COMPILER = jule::Str();
jule::Str _23e74c71c_COMPILER_PATH = jule::Str();
jule::Str _23e74c981_CPP_STD = jule::Str("cpp17", 5);
jule::Bool _23e74cbe5_SHADOWING = false;
jule::Bool _23e74cec0_TRANSPILATION = false;
jule::Bool _23e74d2cd_TEST = false;
jule::Bool _23e74d5db_RC = true;
jule::Bool _23e74da09_SAFETY = true;
jule::Bool _23e74dd17_PRODUCTION = false;
jule::Ptr<_2272bbabc_RangeTable> _227247c57__L = jule::new_ptr<_2272bbabc_RangeTable>(_2272bbabc_RangeTable{._field_r16=jule::Slice<_2272bb1c6_Range16>::make({_2272bb1c6_Range16{._field_lo=65LLU, ._field_hi=90LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=97LLU, ._field_hi=122LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=170LLU, ._field_hi=181LLU, ._field_stride=11LLU},_2272bb1c6_Range16{._field_lo=186LLU, ._field_hi=192LLU, ._field_stride=6LLU},_2272bb1c6_Range16{._field_lo=193LLU, ._field_hi=214LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=216LLU, ._field_hi=246LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=248LLU, ._field_hi=705LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=710LLU, ._field_hi=721LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=736LLU, ._field_hi=740LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=748LLU, ._field_hi=750LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=880LLU, ._field_hi=884LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=886LLU, ._field_hi=887LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=890LLU, ._field_hi=893LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=895LLU, ._field_hi=902LLU, ._field_stride=7LLU},_2272bb1c6_Range16{._field_lo=904LLU, ._field_hi=906LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=908LLU, ._field_hi=910LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=911LLU, ._field_hi=929LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=931LLU, ._field_hi=1013LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1015LLU, ._field_hi=1153LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1162LLU, ._field_hi=1327LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1329LLU, ._field_hi=1366LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1369LLU, ._field_hi=1376LLU, ._field_stride=7LLU},_2272bb1c6_Range16{._field_lo=1377LLU, ._field_hi=1416LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1488LLU, ._field_hi=1514LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1519LLU, ._field_hi=1522LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1568LLU, ._field_hi=1610LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1646LLU, ._field_hi=1647LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1649LLU, ._field_hi=1747LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1749LLU, ._field_hi=1765LLU, ._field_stride=16LLU},_2272bb1c6_Range16{._field_lo=1766LLU, ._field_hi=1774LLU, ._field_stride=8LLU},_2272bb1c6_Range16{._field_lo=1775LLU, ._field_hi=1786LLU, ._field_stride=11LLU},_2272bb1c6_Range16{._field_lo=1787LLU, ._field_hi=1788LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1791LLU, ._field_hi=1808LLU, ._field_stride=17LLU},_2272bb1c6_Range16{._field_lo=1810LLU, ._field_hi=1839LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1869LLU, ._field_hi=1957LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=1969LLU, ._field_hi=1994LLU, ._field_stride=25LLU},_2272bb1c6_Range16{._field_lo=1995LLU, ._field_hi=2026LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2036LLU, ._field_hi=2037LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2042LLU, ._field_hi=2048LLU, ._field_stride=6LLU},_2272bb1c6_Range16{._field_lo=2049LLU, ._field_hi=2069LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2074LLU, ._field_hi=2084LLU, ._field_stride=10LLU},_2272bb1c6_Range16{._field_lo=2088LLU, ._field_hi=2112LLU, ._field_stride=24LLU},_2272bb1c6_Range16{._field_lo=2113LLU, ._field_hi=2136LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2144LLU, ._field_hi=2154LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2160LLU, ._field_hi=2183LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2185LLU, ._field_hi=2190LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2208LLU, ._field_hi=2249LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2308LLU, ._field_hi=2361LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2365LLU, ._field_hi=2384LLU, ._field_stride=19LLU},_2272bb1c6_Range16{._field_lo=2392LLU, ._field_hi=2401LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2417LLU, ._field_hi=2432LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2437LLU, ._field_hi=2444LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2447LLU, ._field_hi=2448LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2451LLU, ._field_hi=2472LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2474LLU, ._field_hi=2480LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2482LLU, ._field_hi=2486LLU, ._field_stride=4LLU},_2272bb1c6_Range16{._field_lo=2487LLU, ._field_hi=2489LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2493LLU, ._field_hi=2510LLU, ._field_stride=17LLU},_2272bb1c6_Range16{._field_lo=2524LLU, ._field_hi=2525LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2527LLU, ._field_hi=2529LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2544LLU, ._field_hi=2545LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2556LLU, ._field_hi=2565LLU, ._field_stride=9LLU},_2272bb1c6_Range16{._field_lo=2566LLU, ._field_hi=2570LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2575LLU, ._field_hi=2576LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2579LLU, ._field_hi=2600LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2602LLU, ._field_hi=2608LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2610LLU, ._field_hi=2611LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2613LLU, ._field_hi=2614LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2616LLU, ._field_hi=2617LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2649LLU, ._field_hi=2652LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2654LLU, ._field_hi=2674LLU, ._field_stride=20LLU},_2272bb1c6_Range16{._field_lo=2675LLU, ._field_hi=2676LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2693LLU, ._field_hi=2701LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2703LLU, ._field_hi=2705LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2707LLU, ._field_hi=2728LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2730LLU, ._field_hi=2736LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2738LLU, ._field_hi=2739LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2741LLU, ._field_hi=2745LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2749LLU, ._field_hi=2768LLU, ._field_stride=19LLU},_2272bb1c6_Range16{._field_lo=2784LLU, ._field_hi=2785LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2809LLU, ._field_hi=2821LLU, ._field_stride=12LLU},_2272bb1c6_Range16{._field_lo=2822LLU, ._field_hi=2828LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2831LLU, ._field_hi=2832LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2835LLU, ._field_hi=2856LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2858LLU, ._field_hi=2864LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2866LLU, ._field_hi=2867LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2869LLU, ._field_hi=2873LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2877LLU, ._field_hi=2908LLU, ._field_stride=31LLU},_2272bb1c6_Range16{._field_lo=2909LLU, ._field_hi=2911LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=2912LLU, ._field_hi=2913LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2929LLU, ._field_hi=2947LLU, ._field_stride=18LLU},_2272bb1c6_Range16{._field_lo=2949LLU, ._field_hi=2954LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2958LLU, ._field_hi=2960LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2962LLU, ._field_hi=2965LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2969LLU, ._field_hi=2970LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2972LLU, ._field_hi=2974LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=2975LLU, ._field_hi=2979LLU, ._field_stride=4LLU},_2272bb1c6_Range16{._field_lo=2980LLU, ._field_hi=2984LLU, ._field_stride=4LLU},_2272bb1c6_Range16{._field_lo=2985LLU, ._field_hi=2986LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=2990LLU, ._field_hi=3001LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3024LLU, ._field_hi=3077LLU, ._field_stride=53LLU},_2272bb1c6_Range16{._field_lo=3078LLU, ._field_hi=3084LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3086LLU, ._field_hi=3088LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3090LLU, ._field_hi=3112LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3114LLU, ._field_hi=3129LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3133LLU, ._field_hi=3160LLU, ._field_stride=27LLU},_2272bb1c6_Range16{._field_lo=3161LLU, ._field_hi=3162LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3165LLU, ._field_hi=3168LLU, ._field_stride=3LLU},_2272bb1c6_Range16{._field_lo=3169LLU, ._field_hi=3200LLU, ._field_stride=31LLU},_2272bb1c6_Range16{._field_lo=3205LLU, ._field_hi=3212LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3214LLU, ._field_hi=3216LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3218LLU, ._field_hi=3240LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3242LLU, ._field_hi=3251LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3253LLU, ._field_hi=3257LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3261LLU, ._field_hi=3293LLU, ._field_stride=32LLU},_2272bb1c6_Range16{._field_lo=3294LLU, ._field_hi=3296LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=3297LLU, ._field_hi=3313LLU, ._field_stride=16LLU},_2272bb1c6_Range16{._field_lo=3314LLU, ._field_hi=3332LLU, ._field_stride=18LLU},_2272bb1c6_Range16{._field_lo=3333LLU, ._field_hi=3340LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3342LLU, ._field_hi=3344LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3346LLU, ._field_hi=3386LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3389LLU, ._field_hi=3406LLU, ._field_stride=17LLU},_2272bb1c6_Range16{._field_lo=3412LLU, ._field_hi=3414LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3423LLU, ._field_hi=3425LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3450LLU, ._field_hi=3455LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3461LLU, ._field_hi=3478LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3482LLU, ._field_hi=3505LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3507LLU, ._field_hi=3515LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3517LLU, ._field_hi=3520LLU, ._field_stride=3LLU},_2272bb1c6_Range16{._field_lo=3521LLU, ._field_hi=3526LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3585LLU, ._field_hi=3632LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3634LLU, ._field_hi=3635LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3648LLU, ._field_hi=3654LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3713LLU, ._field_hi=3714LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3716LLU, ._field_hi=3718LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=3719LLU, ._field_hi=3722LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3724LLU, ._field_hi=3747LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3749LLU, ._field_hi=3751LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=3752LLU, ._field_hi=3760LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3762LLU, ._field_hi=3763LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3773LLU, ._field_hi=3776LLU, ._field_stride=3LLU},_2272bb1c6_Range16{._field_lo=3777LLU, ._field_hi=3780LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3782LLU, ._field_hi=3804LLU, ._field_stride=22LLU},_2272bb1c6_Range16{._field_lo=3805LLU, ._field_hi=3807LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3840LLU, ._field_hi=3904LLU, ._field_stride=64LLU},_2272bb1c6_Range16{._field_lo=3905LLU, ._field_hi=3911LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3913LLU, ._field_hi=3948LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=3976LLU, ._field_hi=3980LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4096LLU, ._field_hi=4138LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4159LLU, ._field_hi=4176LLU, ._field_stride=17LLU},_2272bb1c6_Range16{._field_lo=4177LLU, ._field_hi=4181LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4186LLU, ._field_hi=4189LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4193LLU, ._field_hi=4197LLU, ._field_stride=4LLU},_2272bb1c6_Range16{._field_lo=4198LLU, ._field_hi=4206LLU, ._field_stride=8LLU},_2272bb1c6_Range16{._field_lo=4207LLU, ._field_hi=4208LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4213LLU, ._field_hi=4225LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4238LLU, ._field_hi=4256LLU, ._field_stride=18LLU},_2272bb1c6_Range16{._field_lo=4257LLU, ._field_hi=4293LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4295LLU, ._field_hi=4301LLU, ._field_stride=6LLU},_2272bb1c6_Range16{._field_lo=4304LLU, ._field_hi=4346LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4348LLU, ._field_hi=4680LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4682LLU, ._field_hi=4685LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4688LLU, ._field_hi=4694LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4696LLU, ._field_hi=4698LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=4699LLU, ._field_hi=4701LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4704LLU, ._field_hi=4744LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4746LLU, ._field_hi=4749LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4752LLU, ._field_hi=4784LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4786LLU, ._field_hi=4789LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4792LLU, ._field_hi=4798LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4800LLU, ._field_hi=4802LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=4803LLU, ._field_hi=4805LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4808LLU, ._field_hi=4822LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4824LLU, ._field_hi=4880LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4882LLU, ._field_hi=4885LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4888LLU, ._field_hi=4954LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=4992LLU, ._field_hi=5007LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5024LLU, ._field_hi=5109LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5112LLU, ._field_hi=5117LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5121LLU, ._field_hi=5740LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5743LLU, ._field_hi=5759LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5761LLU, ._field_hi=5786LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5792LLU, ._field_hi=5866LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5873LLU, ._field_hi=5880LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5888LLU, ._field_hi=5905LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5919LLU, ._field_hi=5937LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5952LLU, ._field_hi=5969LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5984LLU, ._field_hi=5996LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=5998LLU, ._field_hi=6000LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6016LLU, ._field_hi=6067LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6103LLU, ._field_hi=6108LLU, ._field_stride=5LLU},_2272bb1c6_Range16{._field_lo=6176LLU, ._field_hi=6264LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6272LLU, ._field_hi=6276LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6279LLU, ._field_hi=6312LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6314LLU, ._field_hi=6320LLU, ._field_stride=6LLU},_2272bb1c6_Range16{._field_lo=6321LLU, ._field_hi=6389LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6400LLU, ._field_hi=6430LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6480LLU, ._field_hi=6509LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6512LLU, ._field_hi=6516LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6528LLU, ._field_hi=6571LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6576LLU, ._field_hi=6601LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6656LLU, ._field_hi=6678LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6688LLU, ._field_hi=6740LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6823LLU, ._field_hi=6917LLU, ._field_stride=94LLU},_2272bb1c6_Range16{._field_lo=6918LLU, ._field_hi=6963LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=6981LLU, ._field_hi=6988LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7043LLU, ._field_hi=7072LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7086LLU, ._field_hi=7087LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7098LLU, ._field_hi=7141LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7168LLU, ._field_hi=7203LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7245LLU, ._field_hi=7247LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7258LLU, ._field_hi=7293LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7296LLU, ._field_hi=7304LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7312LLU, ._field_hi=7354LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7357LLU, ._field_hi=7359LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7401LLU, ._field_hi=7404LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7406LLU, ._field_hi=7411LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7413LLU, ._field_hi=7414LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7418LLU, ._field_hi=7424LLU, ._field_stride=6LLU},_2272bb1c6_Range16{._field_lo=7425LLU, ._field_hi=7615LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7680LLU, ._field_hi=7957LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7960LLU, ._field_hi=7965LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=7968LLU, ._field_hi=8005LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8008LLU, ._field_hi=8013LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8016LLU, ._field_hi=8023LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8025LLU, ._field_hi=8031LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=8032LLU, ._field_hi=8061LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8064LLU, ._field_hi=8116LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8118LLU, ._field_hi=8124LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8126LLU, ._field_hi=8130LLU, ._field_stride=4LLU},_2272bb1c6_Range16{._field_lo=8131LLU, ._field_hi=8132LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8134LLU, ._field_hi=8140LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8144LLU, ._field_hi=8147LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8150LLU, ._field_hi=8155LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8160LLU, ._field_hi=8172LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8178LLU, ._field_hi=8180LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8182LLU, ._field_hi=8188LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8305LLU, ._field_hi=8319LLU, ._field_stride=14LLU},_2272bb1c6_Range16{._field_lo=8336LLU, ._field_hi=8348LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8450LLU, ._field_hi=8455LLU, ._field_stride=5LLU},_2272bb1c6_Range16{._field_lo=8458LLU, ._field_hi=8467LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8469LLU, ._field_hi=8473LLU, ._field_stride=4LLU},_2272bb1c6_Range16{._field_lo=8474LLU, ._field_hi=8477LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8484LLU, ._field_hi=8490LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=8491LLU, ._field_hi=8493LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8495LLU, ._field_hi=8505LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8508LLU, ._field_hi=8511LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8517LLU, ._field_hi=8521LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=8526LLU, ._field_hi=8579LLU, ._field_stride=53LLU},_2272bb1c6_Range16{._field_lo=8580LLU, ._field_hi=11264LLU, ._field_stride=2684LLU},_2272bb1c6_Range16{._field_lo=11265LLU, ._field_hi=11492LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11499LLU, ._field_hi=11502LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11506LLU, ._field_hi=11507LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11520LLU, ._field_hi=11557LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11559LLU, ._field_hi=11565LLU, ._field_stride=6LLU},_2272bb1c6_Range16{._field_lo=11568LLU, ._field_hi=11623LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11631LLU, ._field_hi=11648LLU, ._field_stride=17LLU},_2272bb1c6_Range16{._field_lo=11649LLU, ._field_hi=11670LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11680LLU, ._field_hi=11686LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11688LLU, ._field_hi=11694LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11696LLU, ._field_hi=11702LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11704LLU, ._field_hi=11710LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11712LLU, ._field_hi=11718LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11720LLU, ._field_hi=11726LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11728LLU, ._field_hi=11734LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11736LLU, ._field_hi=11742LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=11823LLU, ._field_hi=12293LLU, ._field_stride=470LLU},_2272bb1c6_Range16{._field_lo=12294LLU, ._field_hi=12337LLU, ._field_stride=43LLU},_2272bb1c6_Range16{._field_lo=12338LLU, ._field_hi=12341LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=12347LLU, ._field_hi=12348LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=12353LLU, ._field_hi=12438LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=12445LLU, ._field_hi=12447LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=12449LLU, ._field_hi=12538LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=12540LLU, ._field_hi=12543LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=12549LLU, ._field_hi=12591LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=12593LLU, ._field_hi=12686LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=12704LLU, ._field_hi=12735LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=12784LLU, ._field_hi=12799LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=13312LLU, ._field_hi=19903LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=19968LLU, ._field_hi=42124LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42192LLU, ._field_hi=42237LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42240LLU, ._field_hi=42508LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42512LLU, ._field_hi=42527LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42538LLU, ._field_hi=42539LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42560LLU, ._field_hi=42606LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42623LLU, ._field_hi=42653LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42656LLU, ._field_hi=42725LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42775LLU, ._field_hi=42783LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42786LLU, ._field_hi=42888LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42891LLU, ._field_hi=42954LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42960LLU, ._field_hi=42961LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42963LLU, ._field_hi=42965LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=42966LLU, ._field_hi=42969LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=42994LLU, ._field_hi=43009LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43011LLU, ._field_hi=43013LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43015LLU, ._field_hi=43018LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43020LLU, ._field_hi=43042LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43072LLU, ._field_hi=43123LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43138LLU, ._field_hi=43187LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43250LLU, ._field_hi=43255LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43259LLU, ._field_hi=43261LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=43262LLU, ._field_hi=43274LLU, ._field_stride=12LLU},_2272bb1c6_Range16{._field_lo=43275LLU, ._field_hi=43301LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43312LLU, ._field_hi=43334LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43360LLU, ._field_hi=43388LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43396LLU, ._field_hi=43442LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43471LLU, ._field_hi=43488LLU, ._field_stride=17LLU},_2272bb1c6_Range16{._field_lo=43489LLU, ._field_hi=43492LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43494LLU, ._field_hi=43503LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43514LLU, ._field_hi=43518LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43520LLU, ._field_hi=43560LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43584LLU, ._field_hi=43586LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43588LLU, ._field_hi=43595LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43616LLU, ._field_hi=43638LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43642LLU, ._field_hi=43646LLU, ._field_stride=4LLU},_2272bb1c6_Range16{._field_lo=43647LLU, ._field_hi=43695LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43697LLU, ._field_hi=43701LLU, ._field_stride=4LLU},_2272bb1c6_Range16{._field_lo=43702LLU, ._field_hi=43705LLU, ._field_stride=3LLU},_2272bb1c6_Range16{._field_lo=43706LLU, ._field_hi=43709LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43712LLU, ._field_hi=43714LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=43739LLU, ._field_hi=43741LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43744LLU, ._field_hi=43754LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43762LLU, ._field_hi=43764LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43777LLU, ._field_hi=43782LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43785LLU, ._field_hi=43790LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43793LLU, ._field_hi=43798LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43808LLU, ._field_hi=43814LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43816LLU, ._field_hi=43822LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43824LLU, ._field_hi=43866LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43868LLU, ._field_hi=43881LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=43888LLU, ._field_hi=44002LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=44032LLU, ._field_hi=55203LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=55216LLU, ._field_hi=55238LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=55243LLU, ._field_hi=55291LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=63744LLU, ._field_hi=64109LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=64112LLU, ._field_hi=64217LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=64256LLU, ._field_hi=64262LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=64275LLU, ._field_hi=64279LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=64285LLU, ._field_hi=64287LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=64288LLU, ._field_hi=64296LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=64298LLU, ._field_hi=64310LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=64312LLU, ._field_hi=64316LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=64318LLU, ._field_hi=64320LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=64321LLU, ._field_hi=64323LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=64324LLU, ._field_hi=64326LLU, ._field_stride=2LLU},_2272bb1c6_Range16{._field_lo=64327LLU, ._field_hi=64433LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=64467LLU, ._field_hi=64829LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=64848LLU, ._field_hi=64911LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=64914LLU, ._field_hi=64967LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=65008LLU, ._field_hi=65019LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=65136LLU, ._field_hi=65140LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=65142LLU, ._field_hi=65276LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=65313LLU, ._field_hi=65338LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=65345LLU, ._field_hi=65370LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=65382LLU, ._field_hi=65470LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=65474LLU, ._field_hi=65479LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=65482LLU, ._field_hi=65487LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=65490LLU, ._field_hi=65495LLU, ._field_stride=1LLU},_2272bb1c6_Range16{._field_lo=65498LLU, ._field_hi=65500LLU, ._field_stride=1LLU}}), ._field_r32=jule::Slice<_2272bb649_Range32>::make({_2272bb649_Range32{._field_lo=65536LLU, ._field_hi=65547LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=65549LLU, ._field_hi=65574LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=65576LLU, ._field_hi=65594LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=65596LLU, ._field_hi=65597LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=65599LLU, ._field_hi=65613LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=65616LLU, ._field_hi=65629LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=65664LLU, ._field_hi=65786LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66176LLU, ._field_hi=66204LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66208LLU, ._field_hi=66256LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66304LLU, ._field_hi=66335LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66349LLU, ._field_hi=66368LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66370LLU, ._field_hi=66377LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66384LLU, ._field_hi=66421LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66432LLU, ._field_hi=66461LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66464LLU, ._field_hi=66499LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66504LLU, ._field_hi=66511LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66560LLU, ._field_hi=66717LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66736LLU, ._field_hi=66771LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66776LLU, ._field_hi=66811LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66816LLU, ._field_hi=66855LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66864LLU, ._field_hi=66915LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66928LLU, ._field_hi=66938LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66940LLU, ._field_hi=66954LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66956LLU, ._field_hi=66962LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66964LLU, ._field_hi=66965LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66967LLU, ._field_hi=66977LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66979LLU, ._field_hi=66993LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=66995LLU, ._field_hi=67001LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67003LLU, ._field_hi=67004LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67072LLU, ._field_hi=67382LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67392LLU, ._field_hi=67413LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67424LLU, ._field_hi=67431LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67456LLU, ._field_hi=67461LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67463LLU, ._field_hi=67504LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67506LLU, ._field_hi=67514LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67584LLU, ._field_hi=67589LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67592LLU, ._field_hi=67594LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=67595LLU, ._field_hi=67637LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67639LLU, ._field_hi=67640LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67644LLU, ._field_hi=67647LLU, ._field_stride=3LLU},_2272bb649_Range32{._field_lo=67648LLU, ._field_hi=67669LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67680LLU, ._field_hi=67702LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67712LLU, ._field_hi=67742LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67808LLU, ._field_hi=67826LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67828LLU, ._field_hi=67829LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67840LLU, ._field_hi=67861LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67872LLU, ._field_hi=67897LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=67968LLU, ._field_hi=68023LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68030LLU, ._field_hi=68031LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68096LLU, ._field_hi=68112LLU, ._field_stride=16LLU},_2272bb649_Range32{._field_lo=68113LLU, ._field_hi=68115LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68117LLU, ._field_hi=68119LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68121LLU, ._field_hi=68149LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68192LLU, ._field_hi=68220LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68224LLU, ._field_hi=68252LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68288LLU, ._field_hi=68295LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68297LLU, ._field_hi=68324LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68352LLU, ._field_hi=68405LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68416LLU, ._field_hi=68437LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68448LLU, ._field_hi=68466LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68480LLU, ._field_hi=68497LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68608LLU, ._field_hi=68680LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68736LLU, ._field_hi=68786LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68800LLU, ._field_hi=68850LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=68864LLU, ._field_hi=68899LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69248LLU, ._field_hi=69289LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69296LLU, ._field_hi=69297LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69376LLU, ._field_hi=69404LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69415LLU, ._field_hi=69424LLU, ._field_stride=9LLU},_2272bb649_Range32{._field_lo=69425LLU, ._field_hi=69445LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69488LLU, ._field_hi=69505LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69552LLU, ._field_hi=69572LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69600LLU, ._field_hi=69622LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69635LLU, ._field_hi=69687LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69745LLU, ._field_hi=69746LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69749LLU, ._field_hi=69763LLU, ._field_stride=14LLU},_2272bb649_Range32{._field_lo=69764LLU, ._field_hi=69807LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69840LLU, ._field_hi=69864LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69891LLU, ._field_hi=69926LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=69956LLU, ._field_hi=69959LLU, ._field_stride=3LLU},_2272bb649_Range32{._field_lo=69968LLU, ._field_hi=70002LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70006LLU, ._field_hi=70019LLU, ._field_stride=13LLU},_2272bb649_Range32{._field_lo=70020LLU, ._field_hi=70066LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70081LLU, ._field_hi=70084LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70106LLU, ._field_hi=70108LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=70144LLU, ._field_hi=70161LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70163LLU, ._field_hi=70187LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70207LLU, ._field_hi=70208LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70272LLU, ._field_hi=70278LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70280LLU, ._field_hi=70282LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=70283LLU, ._field_hi=70285LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70287LLU, ._field_hi=70301LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70303LLU, ._field_hi=70312LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70320LLU, ._field_hi=70366LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70405LLU, ._field_hi=70412LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70415LLU, ._field_hi=70416LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70419LLU, ._field_hi=70440LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70442LLU, ._field_hi=70448LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70450LLU, ._field_hi=70451LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70453LLU, ._field_hi=70457LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70461LLU, ._field_hi=70480LLU, ._field_stride=19LLU},_2272bb649_Range32{._field_lo=70493LLU, ._field_hi=70497LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70656LLU, ._field_hi=70708LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70727LLU, ._field_hi=70730LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70751LLU, ._field_hi=70753LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70784LLU, ._field_hi=70831LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70852LLU, ._field_hi=70853LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=70855LLU, ._field_hi=71040LLU, ._field_stride=185LLU},_2272bb649_Range32{._field_lo=71041LLU, ._field_hi=71086LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71128LLU, ._field_hi=71131LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71168LLU, ._field_hi=71215LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71236LLU, ._field_hi=71296LLU, ._field_stride=60LLU},_2272bb649_Range32{._field_lo=71297LLU, ._field_hi=71338LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71352LLU, ._field_hi=71424LLU, ._field_stride=72LLU},_2272bb649_Range32{._field_lo=71425LLU, ._field_hi=71450LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71488LLU, ._field_hi=71494LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71680LLU, ._field_hi=71723LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71840LLU, ._field_hi=71903LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71935LLU, ._field_hi=71942LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71945LLU, ._field_hi=71948LLU, ._field_stride=3LLU},_2272bb649_Range32{._field_lo=71949LLU, ._field_hi=71955LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71957LLU, ._field_hi=71958LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71960LLU, ._field_hi=71983LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=71999LLU, ._field_hi=72001LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=72096LLU, ._field_hi=72103LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=72106LLU, ._field_hi=72144LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=72161LLU, ._field_hi=72163LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=72192LLU, ._field_hi=72203LLU, ._field_stride=11LLU},_2272bb649_Range32{._field_lo=72204LLU, ._field_hi=72242LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=72250LLU, ._field_hi=72272LLU, ._field_stride=22LLU},_2272bb649_Range32{._field_lo=72284LLU, ._field_hi=72329LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=72349LLU, ._field_hi=72368LLU, ._field_stride=19LLU},_2272bb649_Range32{._field_lo=72369LLU, ._field_hi=72440LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=72704LLU, ._field_hi=72712LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=72714LLU, ._field_hi=72750LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=72768LLU, ._field_hi=72818LLU, ._field_stride=50LLU},_2272bb649_Range32{._field_lo=72819LLU, ._field_hi=72847LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=72960LLU, ._field_hi=72966LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=72968LLU, ._field_hi=72969LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=72971LLU, ._field_hi=73008LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=73030LLU, ._field_hi=73056LLU, ._field_stride=26LLU},_2272bb649_Range32{._field_lo=73057LLU, ._field_hi=73061LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=73063LLU, ._field_hi=73064LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=73066LLU, ._field_hi=73097LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=73112LLU, ._field_hi=73440LLU, ._field_stride=328LLU},_2272bb649_Range32{._field_lo=73441LLU, ._field_hi=73458LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=73474LLU, ._field_hi=73476LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=73477LLU, ._field_hi=73488LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=73490LLU, ._field_hi=73523LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=73648LLU, ._field_hi=73728LLU, ._field_stride=80LLU},_2272bb649_Range32{._field_lo=73729LLU, ._field_hi=74649LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=74880LLU, ._field_hi=75075LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=77712LLU, ._field_hi=77808LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=77824LLU, ._field_hi=78895LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=78913LLU, ._field_hi=78918LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=82944LLU, ._field_hi=83526LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=92160LLU, ._field_hi=92728LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=92736LLU, ._field_hi=92766LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=92784LLU, ._field_hi=92862LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=92880LLU, ._field_hi=92909LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=92928LLU, ._field_hi=92975LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=92992LLU, ._field_hi=92995LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=93027LLU, ._field_hi=93047LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=93053LLU, ._field_hi=93071LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=93760LLU, ._field_hi=93823LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=93952LLU, ._field_hi=94026LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=94032LLU, ._field_hi=94099LLU, ._field_stride=67LLU},_2272bb649_Range32{._field_lo=94100LLU, ._field_hi=94111LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=94176LLU, ._field_hi=94177LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=94179LLU, ._field_hi=94208LLU, ._field_stride=29LLU},_2272bb649_Range32{._field_lo=94209LLU, ._field_hi=100343LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=100352LLU, ._field_hi=101589LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=101632LLU, ._field_hi=101640LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=110576LLU, ._field_hi=110579LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=110581LLU, ._field_hi=110587LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=110589LLU, ._field_hi=110590LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=110592LLU, ._field_hi=110882LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=110898LLU, ._field_hi=110928LLU, ._field_stride=30LLU},_2272bb649_Range32{._field_lo=110929LLU, ._field_hi=110930LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=110933LLU, ._field_hi=110948LLU, ._field_stride=15LLU},_2272bb649_Range32{._field_lo=110949LLU, ._field_hi=110951LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=110960LLU, ._field_hi=111355LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=113664LLU, ._field_hi=113770LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=113776LLU, ._field_hi=113788LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=113792LLU, ._field_hi=113800LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=113808LLU, ._field_hi=113817LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=119808LLU, ._field_hi=119892LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=119894LLU, ._field_hi=119964LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=119966LLU, ._field_hi=119967LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=119970LLU, ._field_hi=119973LLU, ._field_stride=3LLU},_2272bb649_Range32{._field_lo=119974LLU, ._field_hi=119977LLU, ._field_stride=3LLU},_2272bb649_Range32{._field_lo=119978LLU, ._field_hi=119980LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=119982LLU, ._field_hi=119993LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=119995LLU, ._field_hi=119997LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=119998LLU, ._field_hi=120003LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120005LLU, ._field_hi=120069LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120071LLU, ._field_hi=120074LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120077LLU, ._field_hi=120084LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120086LLU, ._field_hi=120092LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120094LLU, ._field_hi=120121LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120123LLU, ._field_hi=120126LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120128LLU, ._field_hi=120132LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120134LLU, ._field_hi=120138LLU, ._field_stride=4LLU},_2272bb649_Range32{._field_lo=120139LLU, ._field_hi=120144LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120146LLU, ._field_hi=120485LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120488LLU, ._field_hi=120512LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120514LLU, ._field_hi=120538LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120540LLU, ._field_hi=120570LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120572LLU, ._field_hi=120596LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120598LLU, ._field_hi=120628LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120630LLU, ._field_hi=120654LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120656LLU, ._field_hi=120686LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120688LLU, ._field_hi=120712LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120714LLU, ._field_hi=120744LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120746LLU, ._field_hi=120770LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=120772LLU, ._field_hi=120779LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=122624LLU, ._field_hi=122654LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=122661LLU, ._field_hi=122666LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=122928LLU, ._field_hi=122989LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=123136LLU, ._field_hi=123180LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=123191LLU, ._field_hi=123197LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=123214LLU, ._field_hi=123536LLU, ._field_stride=322LLU},_2272bb649_Range32{._field_lo=123537LLU, ._field_hi=123565LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=123584LLU, ._field_hi=123627LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=124112LLU, ._field_hi=124139LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=124896LLU, ._field_hi=124902LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=124904LLU, ._field_hi=124907LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=124909LLU, ._field_hi=124910LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=124912LLU, ._field_hi=124926LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=124928LLU, ._field_hi=125124LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=125184LLU, ._field_hi=125251LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=125259LLU, ._field_hi=126464LLU, ._field_stride=1205LLU},_2272bb649_Range32{._field_lo=126465LLU, ._field_hi=126467LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126469LLU, ._field_hi=126495LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126497LLU, ._field_hi=126498LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126500LLU, ._field_hi=126503LLU, ._field_stride=3LLU},_2272bb649_Range32{._field_lo=126505LLU, ._field_hi=126514LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126516LLU, ._field_hi=126519LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126521LLU, ._field_hi=126523LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=126530LLU, ._field_hi=126535LLU, ._field_stride=5LLU},_2272bb649_Range32{._field_lo=126537LLU, ._field_hi=126541LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=126542LLU, ._field_hi=126543LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126545LLU, ._field_hi=126546LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126548LLU, ._field_hi=126551LLU, ._field_stride=3LLU},_2272bb649_Range32{._field_lo=126553LLU, ._field_hi=126561LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=126562LLU, ._field_hi=126564LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=126567LLU, ._field_hi=126570LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126572LLU, ._field_hi=126578LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126580LLU, ._field_hi=126583LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126585LLU, ._field_hi=126588LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126590LLU, ._field_hi=126592LLU, ._field_stride=2LLU},_2272bb649_Range32{._field_lo=126593LLU, ._field_hi=126601LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126603LLU, ._field_hi=126619LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126625LLU, ._field_hi=126627LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126629LLU, ._field_hi=126633LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=126635LLU, ._field_hi=126651LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=131072LLU, ._field_hi=173791LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=173824LLU, ._field_hi=177977LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=177984LLU, ._field_hi=178205LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=178208LLU, ._field_hi=183969LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=183984LLU, ._field_hi=191456LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=194560LLU, ._field_hi=195101LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=196608LLU, ._field_hi=201546LLU, ._field_stride=1LLU},_2272bb649_Range32{._field_lo=201552LLU, ._field_hi=205743LLU, ._field_stride=1LLU}}), ._field_latin_offset=6LL});
jule::Array<jule::Str,4> _24093a1cd_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _24093b586_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _24093b872_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Array<jule::Str,3> _24094bbb2_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
jule::Array<jule::Str,3> _24094c047_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
jule::Str _2273c7c61_PATH_STDLIB = jule::Str();
jule::Str _2273c9b53_PATH_EXEC = jule::Str();
jule::Str _2273cc2a4_PATH_WD = jule::Str();
jule::Str _2273d7b83_PATH_API = jule::Str();
jule::Array<jule::I32,5> _227612462_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _2276126c6_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _227612a17_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _2276aaede_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _2276ab330_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_2276b8e0e_KindPair,47> _2276b9393_KEYWORDS = jule::Array<_2276b8e0e_KindPair,47>({_2276b8e0e_KindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("pub", 3), ._field_id=static_cast<jule::U64>(21LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(22LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(24LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(25LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(26LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(27LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(28LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(29LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(30LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(31LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(32LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(33LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(34LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(35LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(36LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(37LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(38LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_2276b8e0e_KindPair,39> _2276b9728_BASIC_OPS = jule::Array<_2276b8e0e_KindPair,39>({_2276b8e0e_KindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(23LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2276b8e0e_KindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<jule::U8,32> _2298e2993_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _2298e30e2_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_22950581a_FloatInfo _229352359_F32_INFO = _22950581a_FloatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_22950581a_FloatInfo _229357848_F64_INFO = _22950581a_FloatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _2293e2be1_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _22943ed1a_POWTAB = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _22944b2ee_F64_POW10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _2294630c4_F32_POW10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _2294c48c7_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_22993274c_LeftCheat> _229511947_LEFTCHEATS = jule::Slice<_22993274c_LeftCheat>::make({_22993274c_LeftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_22993274c_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_22993274c_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_22993274c_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_22993274c_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_22993274c_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_22993274c_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_22993274c_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_22993274c_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_22993274c_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_22993274c_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_22993274c_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_22993274c_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_22993274c_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_22993274c_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_22993274c_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_22993274c_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_22993274c_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_22993274c_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_22993274c_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_22993274c_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_22993274c_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_22993274c_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_22993274c_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_22993274c_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_22993274c_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_22993274c_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_22993274c_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_22993274c_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_22993274c_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_22993274c_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_22993274c_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_22993274c_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_22993274c_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_22993274c_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_22993274c_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_22993274c_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_22993274c_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_22993274c_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_22993274c_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_22993274c_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_22993274c_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_22993274c_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_22993274c_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_22993274c_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_22993274c_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_22993274c_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_22993274c_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_22993274c_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_22993274c_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_22993274c_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_22993274c_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_22993274c_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_22993274c_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_22993274c_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_22993274c_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_22993274c_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_22993274c_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_22993274c_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_22993274c_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_22993274c_LeftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _22999b134_BIT_SIZE = 0LL;
jule::Str _2299a3b0e_SYS_INT = jule::Str();
jule::Str _2299a3d73_SYS_UINT = jule::Str();
jule::Slice<jule::Str> _22993980e_BUILTIN_CONSTRAINTS = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _2276e7547_COPY = false;
jule::Bool _2276eba79_DEADCODE = false;
jule::Bool _2276d77ce_APPEND = false;
jule::Bool _227703465_MATH = false;
jule::Bool _2277088bb_ACCESS = false;
jule::Bool _2277218c3_INLINE = false;
jule::Bool _2277290c3_PTR = false;
jule::Bool _22772ae4e_COND = false;
jule::Bool _22a4ae4c6_expr_enabled = false;
jule::Bool _22a4b062b_scope_enabled = false;
jule::Array<jule::U64,12> _22ab96152_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _2273d8469_OS = jule::Str("linux", 5);
jule::Str _2273c78cb_ARCH = jule::Str("arm64", 5);
jule::Array<_22737d761_accept_range,16> _22737dac4_ACCEPT_RANGES = jule::Array<_22737d761_accept_range,16>({_22737d761_accept_range{._field_lo=128LLU, ._field_hi=191LLU},_22737d761_accept_range{._field_lo=160LLU, ._field_hi=191LLU},_22737d761_accept_range{._field_lo=128LLU, ._field_hi=159LLU},_22737d761_accept_range{._field_lo=144LLU, ._field_hi=191LLU},_22737d761_accept_range{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _2409347e3_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Ptr<_2272bbabc_RangeTable> _227250974_LETTER = _227247c57__L;
jule::Array<jule::U8,256> _2272b4db2__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _22737d1de_FIRST = jule::Array<jule::U8,256>({});





std::ostream &operator<<(std::ostream &_Stream, _2272bb1c6_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2272bb649_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2272bbabc_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22737d761_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _227387759_index(_2273872d6_LazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _2273879ce_append(_2273872d6_LazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _227387c43_string(_2273872d6_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,((*_self_)._field_vol_len + (*_self_)._field_w));
	};
	return ((*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _2273872d6_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23e89737d_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_23e89737d_DirEntry>>> static__22738b8d4_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_23e89737d_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_23e89737d_DirEntry>>();
	DIR* _1617_dir = _24057739d_opendir((&(_1524_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_23e89737d_DirEntry>>>(_23e7ece3d_get_last_fs_error());
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _2405774d0_readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_22b319110;
			};
			jule::Str _2517_name = _240576776_byte_ptr_to_str(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_2405a4809_Status> _2621_stat = ({
				auto except = static__23e803729_of(_227388947_join(jule::Slice<jule::Str>::make({_1524_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_23e89737d_DirEntry>>>(except.error);
				} jule::Ptr<_2405a4809_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_23e89737d_DirEntry>(_23e89737d_DirEntry{._field_name=_2517_name, ._field_stat=_2621_stat}));;
		}
	_iter_next_22b319110:;
	}
	_iter_end_22b319110:;;
	_240577843_closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_23e89737d_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__22738bae3_create(jule::Str _3926_path) {
	if ((_240577bd9_mkdir((&(_3926_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_23e7ece3d_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__22738bd02_remove(jule::Str _5126_path) {
	if ((_240577d1b_rmdir((&(_5126_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_23e7ece3d_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _23e7e275c_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_2405a4441_File>> static__23e7edbec_open(jule::Str _1824_path, jule::I64 _1835_flag, jule::I64 _1848_mode) {
	jule::I64 _1913_handle = _240577139_open((&(_1824_path[0LL])),static_cast<jule::I64>(_1835_flag),_1848_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2405a4441_File>>(_23e7ece3d_get_last_fs_error());
	};
	return jule::Exceptional<jule::Ptr<_2405a4441_File>>(jule::Any(),static__23e896190_new(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));
}



inline jule::VoidExceptional static__23e7eea33_remove(jule::Str _3026_path) {
	if ((_240577e4d_unlink((&(_3026_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_23e7ece3d_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _23e8015b2_write(_2405a4441_File* _self_, jule::Slice<jule::U8> _4428_buff) {
	jule::I64 _4445_n = jule::I64();
	if ((_4428_buff.len() == 0LL)) {
		_4445_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
	};
	_4445_n=static_cast<jule::I64>(_24057a549_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4428_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4428_buff.len()))));
	if ((_4445_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_23e7ece3d_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
}



inline jule::Exceptional<jule::I64> _23e802096_read(_2405a4441_File* _self_, jule::Slice<jule::U8> _6531_buff) {
	jule::I64 _6548_n = jule::I64();
	if ((_6531_buff.len() == 0LL)) {
		_6548_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
	};
	_6548_n=static_cast<jule::I64>(_240579cda_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6531_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6531_buff.len()))));
	if ((_6548_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_23e7ece3d_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
}



inline jule::Ptr<_2405a4441_File> static__23e896190_new(jule::Uintptr _4523_handle) {
	return jule::new_ptr<_2405a4441_File>(_2405a4441_File{._field_handle=_4523_handle});
}



inline jule::Exceptional<jule::Ptr<_2405a4441_File>> static__23e89636b_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_2405a4441_File>>(jule::Any(),({
		auto except = static__23e7edbec_open(_5526_path,((static_cast<jule::I64>(578LL) | 578LL) | 578LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_2405a4441_File>>(except.error);
		} jule::Ptr<_2405a4441_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__23e898406_read(jule::Str _6724_path) {
	jule::Ptr<_2405a4809_Status> _6813_s = ({
		auto except = static__23e803729_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2405a4809_Status>();});
	});;
	if ((!(_23e7ebcb6_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_2405a4441_File> _7817_f = ({
		auto except = static__23e7edbec_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2405a4441_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _23e89756a_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));;
	jule::I64 _8213_n = ({
		auto except = _23e802096_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__23e898eea_write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I64 _9150_perm) {
	jule::Ptr<_2405a4441_File> _9217_f = ({
		auto except = static__23e7edbec_open(_9125_path,((static_cast<jule::I64>(577LL) | 577LL) | 577LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_2405a4441_File>();});
	});;
	({
		auto except = _23e8015b2_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _23e89756a_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _23e89a31a_seek(_2405a4441_File* _self_, jule::I64 _10527_offset, jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _240579900_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_23e7ece3d_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _23e89756a_close(_2405a4441_File* _self_) {
	if ((_24057a15e_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_23e7ece3d_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2405a4441_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_2405a4809_Status>> static__23e803729_of(jule::Str _1122_path) {
	if (_1122_path.empty()) {
		return jule::Exceptional<jule::Ptr<_2405a4809_Status>>(static_cast<jule::I64>(4LL));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _240577007_stat((&(_1122_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_2405a4809_Status>>(jule::Any(),jule::new_ptr<_2405a4809_Status>(_2405a4809_Status{._field_mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_2405a4809_Status>>(_23e7ece3d_get_last_fs_error());
}



inline jule::Bool _23e7eb755_is_dir(_2405a4809_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _23e7ebcb6_is_reg(_2405a4809_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _2405a4809_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2273d9833_Cmd> static__2273d9c62_new(jule::Str _2023_path) {
	return jule::new_ptr<_2273d9833_Cmd>(_2273d9833_Cmd{._field_path=_2023_path, });
}



inline jule::Exceptional<jule::I64> _2273d9ec6_spawn(_2273d9833_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _2273dce63___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _2273dce63___spawn(_2273d9833_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_22b608e6b:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_22b60a368:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_2273dc78c_execvp((*_self_)._field_path,(*_self_)._field_args));
				} else {
					_5421_status=static_cast<jule::I64>(_2273dcb77_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_2273dd78d_exit(255LL);
			}
		}
		_match_end_22b60a214:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_2273d90a2_get_last_process_error());
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _2273d9833_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2409487a2_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _2276b1dc4_prec(_2276b1a1c_Token* _self_) {
	if (((*_self_)._field_id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_22b6abd10:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_22b6abd76:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_22b6ab716:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_22b6ab77c:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_22b6ab7e3:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_22b6ab4c4:;
			{
				return 0LLU;
			}
		}
		_match_end_22b6ab46e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2276b1a1c_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2276b72b4_is_ok(_2276b6da7_File* _self_) {
	({
		auto except = static__23e803729_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_2405a4809_Status>();});
	});
	return true;
}



inline void _2276b7539_fill(_2276b6da7_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _2276b779d_dir(_2276b6da7_File* _self_) {
	return _2273895a2_dir((*_self_)._field_path);
}



inline jule::Str _2276b7a12_name(_2276b6da7_File* _self_) {
	return _22738922d_base((*_self_)._field_path);
}



inline jule::Uintptr _2276b7c76_addr(_2276b6da7_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _2276b8084_get_row(_2276b6da7_File* _self_, jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_line_start = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_data[_4717_i] != '\n')) {
				goto _iter_next_22b6b1991;
			};
			(_4517_n)++;
			if ((_4517_n == _4426_row)) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			};
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_22b6b1991:;
	}
	_iter_end_22b6b1991:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _2276b6da7_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2276b8e0e_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _2276c00d0_push_err(_2276bea3b_Lex* _self_, jule::Str _45827_fmt, jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2276b9c12_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,jule::Any(_45840_args)));;
}



inline void _2276c03ee_push_err_tok(_2276bea3b_Lex* _self_, jule::Ptr<_2276b1a1c_Token>& _46332_token, jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2276b9c12_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));;
}



inline void _2276c05ca_lex(_2276bea3b_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_2276c25cc_new_line(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::Ptr<_2276b1a1c_Token> _47321_token = _2276c3952_token(&(*_self_));;
			if ((_47321_token.get()._field_id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_22b6e86dc:;
	}
	_iter_end_22b6e86dc:;;
}



inline jule::Str _2276c08d8_id(_2276bea3b_Lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _22737e344_decode_rune(_48222_ln);
	if (((_48614_r != '_') && (!(_2276b4ee8_is_letter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _22737e344_decode_rune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_2276b5537_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_2276b4ee8_is_letter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_22b6eb910:;
	}
	_iter_end_22b6eb910:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _2276c0b4c_resume(_2276bea3b_Lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);;
			if (_2276b4a97_is_space(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_22b7015c4:;
						{
							_2276c25cc_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_22b70163a:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_22b6ee4e5:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_22b70112e:;
				};
				goto _iter_next_22b6ee79d;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_data[_52421_j] == '\n')) {
						goto _iter_end_22b7004e6;
					};
				}
			_iter_next_22b7004e6:;
			}
			_iter_end_22b7004e6:;;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_22b6ee79d:;
	}
	_iter_end_22b6ee79d:;;
	return nullptr;
}



inline void _2276c0dc2_lex_line_comment(_2276bea3b_Lex* _self_, jule::Ptr<_2276b1a1c_Token>& _53640_token) {
	jule::I64 _53713_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if (((_54017_r == '\n') || (_54017_r == '\r'))) {
				goto _iter_end_22b704022;
			};
		}
	_iter_next_22b704022:;
	}
	_iter_end_22b704022:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53640_token.get()._field_id=static_cast<jule::U64>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	};
}



inline void _2276c1147_lex_range_comment(_2276bea3b_Lex* _self_, jule::Ptr<_2276b1a1c_Token>& _55141_token) {
	jule::I64 _55213_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_55517_r == '\r')) {
				goto _iter_next_22b7073cc;
			};
			if ((_55517_r == '\n')) {
				_2276c25cc_new_line(&(*_self_));
				goto _iter_next_22b7073cc;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_data.len()) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55141_token.get()._field_id=static_cast<jule::U64>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_22b7073cc:;
	}
	_iter_end_22b7073cc:;;
	_2276c00d0_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _2276c1455_num(_2276bea3b_Lex* _self_, jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if ((_57923_txt[0LL] == '_')) {
		_57938_lit = jule::Str();
		return _57938_lit;
	};
	_57938_lit=_2276bd52e_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_2276bd287_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_2276bbbd1_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_2276bb939_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57938_lit.len();
	return _57938_lit;
}



inline jule::Str _2276c1763_escape_seq(_2276bea3b_Lex* _self_, jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();;
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_22b7124a3:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_22b7121a6:;
			{
				_60217_seq=_2276bdb39_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_22b71221c:;
			{
				_60217_seq=_2276bdd04_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_22b712283:;
			{
				_60217_seq=_2276be0ac_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_22b711936:;
			{
				_60217_seq=_2276be354_byte_escape(_60130_txt);
			}
		}
		_match_end_22b712063:;
	};
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_2276c00d0_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60217_seq.len();
	return _60217_seq;
}



inline jule::Str _2276c1b1a_get_rune(_2276bea3b_Lex* _self_, jule::Slice<jule::U8>& _63128_txt, jule::Bool _63141_raw) {
	if (((!(_63141_raw)) && (_63128_txt[0LL] == '\\'))) {
		return _2276c1763_escape_seq(&(*_self_), _63128_txt);
	};
	jule::I32 _63614_r;;
	jule::I64 _63617_n;;
	std::tie(_63614_r,_63617_n) = _22737e344_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _2276c1e28_lex_rune(_2276bea3b_Lex* _self_, jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64417_n = 0LL;;
	jule::I64 _64517_i = 1LL;;
	for (; (_64517_i < _64128_txt.len()); (_64517_i)++) {
		{
			if ((_64128_txt[_64517_i] == '\r')) {
				goto _iter_next_22b7193cd;
			};
			if ((_64128_txt[_64517_i] == '\n')) {
				_2276c00d0_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_2276c25cc_new_line(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);;
			jule::Str _65817_r = _2276c1b1a_get_rune(&(*_self_), _65717_part,false);;
			_64217_run+=_65817_r;
			(*_self_)._field_column+=_227381038_rune_count_str(_65817_r);
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_22b7193cd;
			};
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=(_65817_r.len() - 1LL);
			};
			(_64417_n)++;
		}
	_iter_next_22b7193cd:;
	}
	_iter_end_22b7193cd:;;
	if ((_64417_n == 0LL)) {
		_2276c00d0_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_2276c00d0_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64217_run;
}



inline jule::Str _2276c218c_lex_str(_2276bea3b_Lex* _self_) {
	jule::Str _68117_s = jule::Str();;
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = (_68213_mark == '`');;
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_68917_ch == '\r')) {
				goto _iter_next_22b720417;
			};
			if ((_68917_ch == '\n')) {
				_2276c25cc_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_2276c00d0_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);;
			jule::Str _70217_r = _2276c1b1a_get_rune(&(*_self_), _70121_part,_68413_raw);;
			_68117_s+=_70217_r;
			(*_self_)._field_column+=_227381038_rune_count_str(_70217_r);
			if ((_68917_ch == _68213_mark)) {
				goto _iter_end_22b720417;
			};
		}
	_iter_next_22b720417:;
	}
	_iter_end_22b720417:;;
	return _68117_s;
}



inline jule::Bool _2276c2401_is_first_token_of_line(_2276bea3b_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _2276c25cc_new_line(_2276bea3b_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _2276c2ac7_is_op(_2276bea3b_Lex* _self_, jule::Slice<jule::U8>& _72225_txt, jule::Str _72238_kind, jule::U64 _72249_id, jule::Ptr<_2276b1a1c_Token>& _72267_t) {
	if ((!(_2276ba097_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	};
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=_72238_kind.len();
	return true;
}



inline jule::Bool _2276c2e7e_lex_basic_ops(_2276bea3b_Lex* _self_, jule::Slice<jule::U8> _73332_txt, jule::Ptr<_2276b1a1c_Token>& _73350_tok) {
	{
		auto &expr = _2276b9728_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_22b726a06:;
		if (it != expr.end()) {
			_2276b8e0e_KindPair &_73416_pair = *it;
			{
				if (_2276c2ac7_is_op(&(*_self_), _73332_txt,_73416_pair._field_kind,_73416_pair._field_id,_73350_tok)) {
					return true;
				};
			}
			_iter_next_22b726a06:;
			++it;
			goto _iter_begin_22b726a06;
		}
		_iter_end_22b726a06:;
	};
	return false;
}



inline jule::Bool _2276c3336_lex_id(_2276bea3b_Lex* _self_, jule::Slice<jule::U8>& _74326_txt, jule::Ptr<_2276b1a1c_Token>& _74344_t) {
	jule::Str _74413_lex = _2276c08d8_id(&(*_self_), _74326_txt);;
	if (_74413_lex.empty()) {
		return false;
	};
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _2276c36dd_lex_num(_2276bea3b_Lex* _self_, jule::Slice<jule::U8>& _75427_txt, jule::Ptr<_2276b1a1c_Token>& _75445_t) {
	jule::Str _75513_lex = _2276c1455_num(&(*_self_), _75427_txt);;
	if (_75513_lex.empty()) {
		return false;
	};
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_2276b1a1c_Token> _2276c3952_token(_2276bea3b_Lex* _self_) {
	jule::Ptr<_2276b1a1c_Token> _76717_t = jule::new_ptr<_2276b1a1c_Token>(_2276b1a1c_Token{._field_file=(*_self_)._field_file, ._field_id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _77213_txt = _2276c0b4c_resume(&(*_self_));;
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	};
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_2276c36dd_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_22b72cd5e:;
			{
				goto _match_end_22b72b8b8;
			}
		}
		else if ((_77213_txt[0LL] == '\'')) {
			_case_begin_22b72cdc5:;
			{
				_76717_t.get()._field_kind=_2276c1e28_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`'))) {
			_case_begin_22b72d9ca:;
			{
				_76717_t.get()._field_kind=_2276c218c_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (_2276ba097_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_22b72da41:;
			{
				_2276c0dc2_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_2276ba097_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_22b72daa7:;
			{
				_2276c1147_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_2276c2ac7_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76717_t) || _2276c2ac7_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76717_t) || _2276c2ac7_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76717_t) || _2276c2ac7_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76717_t) || _2276c2ac7_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76717_t) || _2276c2ac7_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76717_t) || _2276c2e7e_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_22b72c2d1:;
			{
				goto _match_end_22b72b8b8;
			}
		}
		else if (_2276c3336_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_22b72c347:;
			{
				{
					auto &expr = _2276b9393_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_22b7344c5:;
					if (it != expr.end()) {
						_2276b8e0e_KindPair &_81020_pair = *it;
						{
							if ((_81020_pair._field_kind == _76717_t.get()._field_kind)) {
								_76717_t.get()._field_id=_81020_pair._field_id;
								goto _iter_end_22b7344c5;
							};
						}
						_iter_next_22b7344c5:;
						++it;
						goto _iter_begin_22b7344c5;
					}
					_iter_end_22b7344c5:;
				};
			}
		}
		else {
			_case_begin_22b72c26a:;
			{
				jule::I32 _81718_r;;
				jule::I64 _81721_sz;;
				std::tie(_81718_r,_81721_sz) = _22737e344_decode_rune(_77213_txt);
				_2276c00d0_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_22b72b8b8:;
	};
	(*_self_)._field_column+=_227381038_rune_count_str(_76717_t.get()._field_kind);
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _2276bea3b_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228ce3900_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228ce459e_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228ce499a_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d28193_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d28abc_is_prim(_228d28759_IdentTypeDecl* _self_) {
	return ((*_self_)._field_token.get()._field_id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _228d28759_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d28da8_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d29260_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d2954b_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d29947_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d29c33_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d2a371_is_unsafe(_228d2a01e_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _228d2a01e_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d2aa7a_auto_sized(_228d2a6a1_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _228d2a6a1_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d2adee_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d2b2a6_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d2c6b4_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d2c9a0_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d2d055_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d2d341_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d2da4a_is_nil(_228d2d6e8_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _228d2d6e8_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d2de02_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d2e2a9_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d2ea7e_is_self(_228d2e72c_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _228d2e72c_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d2ee36_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d302dd_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d30695_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d30a4c_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d30ec0_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d31443_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d31ce5_unhandled(_228d31982_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _228d32059_ignored(_228d31982_FnCallExpr* _self_) {
	return (((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _228d31982_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d32763_is_targeted(_228d32411_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _228d32411_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d32b5e_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d33753_is_empty(_228d330d2_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _228d330d2_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d33ae9_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d343be_is_empty(_228d3406c_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _228d3406c_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d3490d_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d35018_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d35304_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "mask:" << _Src._field_mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d35777_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "constraint:" << _Src._field_constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d35b2e_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d35ed6_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d362c2_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d368cc_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d36e1b_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d37da6_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d384b1_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d38eea_is_self(_228d38b87_ParamDecl* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _228d3925e_is_ref(_228d38b87_ParamDecl* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _228d38b87_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d3a309_is_anon(_228d39ea7_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _228d39ea7_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d3ae86_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d3b33d_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d3bd00_is_inf(_228d3b99d_Iter* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _228d3b99d_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d3c5c5_is_while_next(_228d3c273_WhileKind* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _228d3c273_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d3cb14_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d3cebb_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d3d373_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d3d7e6_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d3db9d_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d3e121_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d3e7e7_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d3ec6a_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d40441_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d40bd3_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d414a8_auto_expr(_228d41156_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _228d41156_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d42212_default_typed(_228d41b7e_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _228d41b7e_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d42685_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d42883_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d42dd3_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d43741_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d43d4b_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228d447b9_is_trait_impl(_228d44456_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _228d44a2d_is_struct_impl(_228d44456_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _228d44456_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_228d7b4d2_Const> static__228dd63b6_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_228d7b4d2_Const>(_228d7b4d2_Const{._field_data=jule::Any(_1327_x)});
}



inline jule::Ptr<_228d7b4d2_Const> static__228dd64e8_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_228d7b4d2_Const>(_228d7b4d2_Const{._field_data=jule::Any(_1627_x)});
}



inline jule::Ptr<_228d7b4d2_Const> static__228dd6680_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_228d7b4d2_Const>(_228d7b4d2_Const{._field_data=jule::Any(_1928_x)});
}



inline jule::Ptr<_228d7b4d2_Const> static__228dd6927_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_228d7b4d2_Const>(_228d7b4d2_Const{._field_data=jule::Any(_2227_x)});
}



inline jule::Ptr<_228d7b4d2_Const> static__228dd6bbe_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_228d7b4d2_Const>(_228d7b4d2_Const{._field_data=jule::Any(_2527_x)});
}



inline jule::Ptr<_228d7b4d2_Const> static__228dd6dbc_new_nil(void) {
	return jule::new_ptr<_228d7b4d2_Const>(_228d7b4d2_Const{._field_data=nullptr});
}



inline jule::I64 _228dd74b6_read_i64(_228d7b4d2_Const* _self_) {
	if ((!(_228dd985e_is_i64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _228dd772a_read_u64(_228d7b4d2_Const* _self_) {
	if ((!(_228dd9ac3_is_u64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _228dd798e_read_bool(_228d7b4d2_Const* _self_) {
	if ((!(_228dd9d37_is_bool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _228dd7c03_read_str(_228d7b4d2_Const* _self_) {
	if ((!(_228dda09b_is_str(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _228dd7e67_read_f64(_228d7b4d2_Const* _self_) {
	if ((!(_228dda310_is_f64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _228dd81cb_as_i64(_228d7b4d2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_22b79a838:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_22b79a89e:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_22b79a20b:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_22b79a12e:;
			{
				return 0LL;
			}
		}
		_match_end_22b799925:;
	};
}



inline jule::U64 _228dd8440_as_u64(_228d7b4d2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_22b79b7d4:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_22b79c373:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_22b79c3d9:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_22b79a97b:;
			{
				return 0LLU;
			}
		}
		_match_end_22b79a926:;
	};
}



inline jule::F64 _228dd86a4_as_f64(_228d7b4d2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_22b79d31e:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_22b79ddad:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_22b79de24:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_22b79be22:;
			{
				return 0LL;
			}
		}
		_match_end_22b79bdbc:;
	};
}



inline void _228dd8929_set_i64(_228d7b4d2_Const* _self_, jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _228dd8b9e_set_u64(_228d7b4d2_Const* _self_, jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _228dd8e24_set_bool(_228d7b4d2_Const* _self_, jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _228dd9199_set_str(_228d7b4d2_Const* _self_, jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _228dd941e_set_f64(_228d7b4d2_Const* _self_, jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _228dd95ea_set_nil(_228d7b4d2_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _228dd985e_is_i64(_228d7b4d2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_22b7a2b5e:;
			{
				return true;
			}
		}
		else {
			_case_begin_22b7a2a82:;
			{
				return false;
			}
		}
		_match_end_22b7a2a2c:;
	};
}



inline jule::Bool _228dd9ac3_is_u64(_228d7b4d2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_22b7a3731:;
			{
				return true;
			}
		}
		else {
			_case_begin_22b7a3412:;
			{
				return false;
			}
		}
		_match_end_22b7a3126:;
	};
}



inline jule::Bool _228dd9d37_is_bool(_228d7b4d2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_22b7a4259:;
			{
				return true;
			}
		}
		else {
			_case_begin_22b7a3e3a:;
			{
				return false;
			}
		}
		_match_end_22b7a3b2c:;
	};
}



inline jule::Bool _228dda09b_is_str(_228d7b4d2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_22b7a4c82:;
			{
				return true;
			}
		}
		else {
			_case_begin_22b7a4963:;
			{
				return false;
			}
		}
		_match_end_22b7a4655:;
	};
}



inline jule::Bool _228dda310_is_f64(_228d7b4d2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_22b7a57aa:;
			{
				return true;
			}
		}
		else {
			_case_begin_22b7a548b:;
			{
				return false;
			}
		}
		_match_end_22b7a517d:;
	};
}



inline jule::Bool _228dda574_is_nil(_228d7b4d2_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _228dda882_are_same_types(_228d7b4d2_Const* _self_, _228d7b4d2_Const _21033_x) {
	{
		
		if ((_228dd985e_is_i64(&(*_self_)) == _228dd985e_is_i64(&_21033_x))) {
			_case_begin_22b7a714c:;
			{
				return true;
			}
		}
		else if ((_228dd9ac3_is_u64(&(*_self_)) == _228dd9ac3_is_u64(&_21033_x))) {
			_case_begin_22b7a68dd:;
			{
				return true;
			}
		}
		else if ((_228dda310_is_f64(&(*_self_)) == _228dda310_is_f64(&_21033_x))) {
			_case_begin_22b7a6965:;
			{
				return true;
			}
		}
		else if ((_228dd9d37_is_bool(&(*_self_)) == _228dd9d37_is_bool(&_21033_x))) {
			_case_begin_22b7a69dc:;
			{
				return true;
			}
		}
		else if ((_228dda09b_is_str(&(*_self_)) == _228dda09b_is_str(&_21033_x))) {
			_case_begin_22b7a6a64:;
			{
				return true;
			}
		}
		else if ((_228dda574_is_nil(&(*_self_)) == _228dda574_is_nil(&_21033_x))) {
			_case_begin_22b7a6d0b:;
			{
				return true;
			}
		}
		else {
			_case_begin_22b7a6866:;
			{
				return false;
			}
		}
		_match_end_22b7a6789:;
	};
}



inline jule::Bool _228ddab90_and(_228d7b4d2_Const* _self_, _228d7b4d2_Const _23522_x) {
	{
		
		if ((_228dd9d37_is_bool(&(*_self_)) && _228dd9d37_is_bool(&_23522_x))) {
			_case_begin_22b7aa590:;
			{
				return (_228dd798e_read_bool(&(*_self_)) && _228dd798e_read_bool(&_23522_x));
			}
		}
		else {
			_case_begin_22b7a9b99:;
			{
				return false;
			}
		}
		_match_end_22b7a9abc:;
	};
}



inline jule::Bool _228ddae9d_or(_228d7b4d2_Const* _self_, _228d7b4d2_Const _24621_x) {
	{
		
		if ((_228dd9d37_is_bool(&(*_self_)) && _228dd9d37_is_bool(&_24621_x))) {
			_case_begin_22b7ab98c:;
			{
				return (_228dd798e_read_bool(&(*_self_)) || _228dd798e_read_bool(&_24621_x));
			}
		}
		else {
			_case_begin_22b7aa903:;
			{
				return false;
			}
		}
		_match_end_22b7aa826:;
	};
}



inline jule::Bool _228ddb2ab_eq(_228d7b4d2_Const* _self_, _228d7b4d2_Const _25721_x) {
	{
		
		if (_228dda574_is_nil(&(*_self_))) {
			_case_begin_22b7ace11:;
			{
				return _228dda574_is_nil(&_25721_x);
			}
		}
		else if (_228dd9d37_is_bool(&(*_self_))) {
			_case_begin_22b7ac6d5:;
			{
				return (_228dd9d37_is_bool(&_25721_x) && (_228dd798e_read_bool(&(*_self_)) == _228dd798e_read_bool(&_25721_x)));
			}
		}
		else if (_228dda09b_is_str(&(*_self_))) {
			_case_begin_22b7ac74b:;
			{
				return (_228dda09b_is_str(&_25721_x) && (_228dd7c03_read_str(&(*_self_)) == _228dd7c03_read_str(&_25721_x)));
			}
		}
		else if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_22b7ac7c3:;
			{
				return (_228dd74b6_read_i64(&(*_self_)) == _228dd81cb_as_i64(&_25721_x));
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_22b7ac84a:;
			{
				return (_228dd772a_read_u64(&(*_self_)) == _228dd8440_as_u64(&_25721_x));
			}
		}
		else if (_228dda310_is_f64(&(*_self_))) {
			_case_begin_22b7acae2:;
			{
				return (_228dd7e67_read_f64(&(*_self_)) == _228dd86a4_as_f64(&_25721_x));
			}
		}
		else {
			_case_begin_22b7abd22:;
			{
				return false;
			}
		}
		_match_end_22b7abc45:;
	};
}



inline jule::Bool _228ddb5b9_lt(_228d7b4d2_Const* _self_, _228d7b4d2_Const _28421_x) {
	{
		
		if (_228dda09b_is_str(&(*_self_))) {
			_case_begin_22b7b208b:;
			{
				return (_228dda09b_is_str(&_28421_x) && (_228dd7c03_read_str(&(*_self_)) < _228dd7c03_read_str(&_28421_x)));
			}
		}
		else if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_22b7b193c:;
			{
				return (_228dd74b6_read_i64(&(*_self_)) < _228dd81cb_as_i64(&_28421_x));
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_22b7b19a3:;
			{
				return (_228dd772a_read_u64(&(*_self_)) < _228dd8440_as_u64(&_28421_x));
			}
		}
		else if (_228dda310_is_f64(&(*_self_))) {
			_case_begin_22b7b1a19:;
			{
				return (_228dd7e67_read_f64(&(*_self_)) < _228dd86a4_as_f64(&_28421_x));
			}
		}
		else {
			_case_begin_22b7ad241:;
			{
				return false;
			}
		}
		_match_end_22b7b13dc:;
	};
}



inline jule::Bool _228ddb8c7_lt_eq(_228d7b4d2_Const* _self_, _228d7b4d2_Const _30724_x) {
	{
		
		if (_228dda09b_is_str(&(*_self_))) {
			_case_begin_22b7b5127:;
			{
				return (_228dda09b_is_str(&_30724_x) && (_228dd7c03_read_str(&(*_self_)) <= _228dd7c03_read_str(&_30724_x)));
			}
		}
		else if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_22b7b49c8:;
			{
				return (_228dd74b6_read_i64(&(*_self_)) <= _228dd81cb_as_i64(&_30724_x));
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_22b7b4a3e:;
			{
				return (_228dd772a_read_u64(&(*_self_)) <= _228dd8440_as_u64(&_30724_x));
			}
		}
		else if (_228dda310_is_f64(&(*_self_))) {
			_case_begin_22b7b4aa5:;
			{
				return (_228dd7e67_read_f64(&(*_self_)) <= _228dd86a4_as_f64(&_30724_x));
			}
		}
		else {
			_case_begin_22b7b229a:;
			{
				return false;
			}
		}
		_match_end_22b7b41e2:;
	};
}



inline jule::Bool _228ddbbd5_gt(_228d7b4d2_Const* _self_, _228d7b4d2_Const _33021_x) {
	{
		
		if (_228dda09b_is_str(&(*_self_))) {
			_case_begin_22b7b81b3:;
			{
				return (_228dda09b_is_str(&_33021_x) && (_228dd7c03_read_str(&(*_self_)) > _228dd7c03_read_str(&_33021_x)));
			}
		}
		else if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_22b7b7a64:;
			{
				return (_228dd74b6_read_i64(&(*_self_)) > _228dd81cb_as_i64(&_33021_x));
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_22b7b7aca:;
			{
				return (_228dd772a_read_u64(&(*_self_)) > _228dd8440_as_u64(&_33021_x));
			}
		}
		else if (_228dda310_is_f64(&(*_self_))) {
			_case_begin_22b7b7b41:;
			{
				return (_228dd7e67_read_f64(&(*_self_)) > _228dd86a4_as_f64(&_33021_x));
			}
		}
		else {
			_case_begin_22b7b5336:;
			{
				return false;
			}
		}
		_match_end_22b7b727d:;
	};
}



inline jule::Bool _228ddbee3_gt_eq(_228d7b4d2_Const* _self_, _228d7b4d2_Const _35324_x) {
	{
		
		if (_228dda09b_is_str(&(*_self_))) {
			_case_begin_22b7bb24e:;
			{
				return (_228dda09b_is_str(&_35324_x) && (_228dd7c03_read_str(&(*_self_)) >= _228dd7c03_read_str(&_35324_x)));
			}
		}
		else if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_22b7bab00:;
			{
				return (_228dd74b6_read_i64(&(*_self_)) >= _228dd81cb_as_i64(&_35324_x));
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_22b7bab66:;
			{
				return (_228dd772a_read_u64(&(*_self_)) >= _228dd8440_as_u64(&_35324_x));
			}
		}
		else if (_228dda310_is_f64(&(*_self_))) {
			_case_begin_22b7babcc:;
			{
				return (_228dd7e67_read_f64(&(*_self_)) >= _228dd86a4_as_f64(&_35324_x));
			}
		}
		else {
			_case_begin_22b7b83c2:;
			{
				return false;
			}
		}
		_match_end_22b7ba319:;
	};
}



inline jule::Bool _228ddc301_add(_228d7b4d2_Const* _self_, _228d7b4d2_Const _37426_x) {
	{
		
		if (_228dda09b_is_str(&(*_self_))) {
			_case_begin_22743e525:;
			{
				if ((!(_228dda09b_is_str(&_37426_x)))) {
					return false;
				};
				_228dd9199_set_str(&(*_self_), (_228dd7c03_read_str(&(*_self_)) + _228dd7c03_read_str(&_37426_x)));
			}
		}
		else if (_228dda310_is_f64(&(*_self_))) {
			_case_begin_227441aee:;
			{
				_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>((_228dd7e67_read_f64(&(*_self_)) + _228dd86a4_as_f64(&_37426_x))));
			}
		}
		else if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_2274a5de9:;
			{
				if (_228dda310_is_f64(&_37426_x)) {
					_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>((_228dd86a4_as_f64(&(*_self_)) + _228dd7e67_read_f64(&_37426_x))));
				} else {
					_228dd8929_set_i64(&(*_self_), static_cast<jule::I64>((_228dd74b6_read_i64(&(*_self_)) + _228dd81cb_as_i64(&_37426_x))));
				};
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_2274cc096:;
			{
				if (_228dda310_is_f64(&_37426_x)) {
					_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>((_228dd86a4_as_f64(&(*_self_)) + _228dd7e67_read_f64(&_37426_x))));
				} else {
					_228dd8b9e_set_u64(&(*_self_), static_cast<jule::U64>((_228dd772a_read_u64(&(*_self_)) + _228dd8440_as_u64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_2274230db:;
			{
				return false;
			}
		}
		_match_end_227426e7a:;
	};
	return true;
}



inline jule::Bool _228ddc60e_sub(_228d7b4d2_Const* _self_, _228d7b4d2_Const _40326_x) {
	{
		
		if (_228dda310_is_f64(&(*_self_))) {
			_case_begin_2409298d7:;
			{
				_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>((_228dd7e67_read_f64(&(*_self_)) - _228dd86a4_as_f64(&_40326_x))));
			}
		}
		else if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_227420ced:;
			{
				if (_228dda310_is_f64(&_40326_x)) {
					_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>((_228dd86a4_as_f64(&(*_self_)) - _228dd7e67_read_f64(&_40326_x))));
				} else {
					_228dd8929_set_i64(&(*_self_), static_cast<jule::I64>((_228dd74b6_read_i64(&(*_self_)) - _228dd81cb_as_i64(&_40326_x))));
				};
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_227420d64:;
			{
				if (_228dda310_is_f64(&_40326_x)) {
					_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>((_228dd86a4_as_f64(&(*_self_)) - _228dd7e67_read_f64(&_40326_x))));
				} else {
					_228dd8b9e_set_u64(&(*_self_), static_cast<jule::U64>((_228dd772a_read_u64(&(*_self_)) - _228dd8440_as_u64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_227701056:;
			{
				return false;
			}
		}
		_match_end_22775c0b2:;
	};
	return true;
}



inline jule::Bool _228ddc91c_mul(_228d7b4d2_Const* _self_, _228d7b4d2_Const _42726_x) {
	{
		
		if (_228dda310_is_f64(&(*_self_))) {
			_case_begin_228a9137e:;
			{
				_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>((_228dd7e67_read_f64(&(*_self_)) * _228dd86a4_as_f64(&_42726_x))));
			}
		}
		else if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_228a913e5:;
			{
				if (_228dda310_is_f64(&_42726_x)) {
					_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>((_228dd86a4_as_f64(&(*_self_)) * _228dd7e67_read_f64(&_42726_x))));
				} else {
					_228dd8929_set_i64(&(*_self_), static_cast<jule::I64>((_228dd74b6_read_i64(&(*_self_)) * _228dd81cb_as_i64(&_42726_x))));
				};
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_228a8b126:;
			{
				if (_228dda310_is_f64(&_42726_x)) {
					_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>((_228dd86a4_as_f64(&(*_self_)) * _228dd7e67_read_f64(&_42726_x))));
				} else {
					_228dd8b9e_set_u64(&(*_self_), static_cast<jule::U64>((_228dd772a_read_u64(&(*_self_)) * _228dd8440_as_u64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_22875893c:;
			{
				return false;
			}
		}
		_match_end_228703ed1:;
	};
	return true;
}



inline jule::Bool _228ddcc2a_div(_228d7b4d2_Const* _self_, _228d7b4d2_Const _45526_x) {
	{
		
		if (_228dda310_is_f64(&(*_self_))) {
			_case_begin_2278e19e9:;
			{
				jule::F64 _45817_l = _228dd86a4_as_f64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_228dd7e67_read_f64(&(*_self_)),_45817_l)));
			}
		}
		else if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_2278e1a60:;
			{
				jule::F64 _46417_l = _228dd86a4_as_f64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_228dd86a4_as_f64(&(*_self_)),_46417_l)));
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_2278e1dc3:;
			{
				jule::F64 _47017_l = _228dd86a4_as_f64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_228dd941e_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_228dd86a4_as_f64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_22783938c:;
			{
				return false;
			}
		}
		_match_end_22781802a:;
	};
	return true;
}



inline jule::Bool _228ddd038_mod(_228d7b4d2_Const* _self_, _228d7b4d2_Const _48426_x) {
	{
		
		if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_227bd64e7:;
			{
				jule::I64 _48717_l = _228dd81cb_as_i64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_228dd8929_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(_228dd74b6_read_i64(&(*_self_)),_48717_l)));
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_227c0eee3:;
			{
				jule::U64 _49317_l = _228dd8440_as_u64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_228dd8b9e_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(_228dd772a_read_u64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_227bc4e97:;
			{
				return false;
			}
		}
		_match_end_227b2526b:;
	};
	return true;
}



inline jule::Bool _228ddd346_bitwise_and(_228d7b4d2_Const* _self_, _228d7b4d2_Const _50634_x) {
	{
		
		if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_227ea39a1:;
			{
				_228dd8929_set_i64(&(*_self_), static_cast<jule::I64>((_228dd74b6_read_i64(&(*_self_)) & _228dd81cb_as_i64(&_50634_x))));
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_227ea3a17:;
			{
				_228dd8b9e_set_u64(&(*_self_), static_cast<jule::U64>((_228dd772a_read_u64(&(*_self_)) & _228dd8440_as_u64(&_50634_x))));
			}
		}
		else {
			_case_begin_227e95036:;
			{
				return false;
			}
		}
		_match_end_227e02405:;
	};
	return true;
}



inline jule::Bool _228ddd654_bitwise_or(_228d7b4d2_Const* _self_, _228d7b4d2_Const _52033_x) {
	{
		
		if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_22807e395:;
			{
				_228dd8929_set_i64(&(*_self_), static_cast<jule::I64>((_228dd74b6_read_i64(&(*_self_)) | _228dd81cb_as_i64(&_52033_x))));
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_228085401:;
			{
				_228dd8b9e_set_u64(&(*_self_), static_cast<jule::U64>((_228dd772a_read_u64(&(*_self_)) | _228dd8440_as_u64(&_52033_x))));
			}
		}
		else {
			_case_begin_228078d62:;
			{
				return false;
			}
		}
		_match_end_228075435:;
	};
	return true;
}



inline jule::Bool _228ddd962_xor(_228d7b4d2_Const* _self_, _228d7b4d2_Const _53426_x) {
	{
		
		if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_2282ac815:;
			{
				_228dd8929_set_i64(&(*_self_), static_cast<jule::I64>((_228dd74b6_read_i64(&(*_self_)) ^ _228dd81cb_as_i64(&_53426_x))));
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_2282ac87b:;
			{
				_228dd8b9e_set_u64(&(*_self_), static_cast<jule::U64>((_228dd772a_read_u64(&(*_self_)) ^ _228dd8440_as_u64(&_53426_x))));
			}
		}
		else {
			_case_begin_228282037:;
			{
				return false;
			}
		}
		_match_end_228279826:;
	};
	return true;
}



inline jule::Bool _228dddc70_lshift(_228d7b4d2_Const* _self_, _228d7b4d2_Const _54829_x) {
	{
		
		if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_2287c922c:;
			{
				jule::I64 _55117_l = _228dd81cb_as_i64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _228dd8440_as_u64(&_54829_x);;
					_228dd8929_set_i64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_228dde3e1_lshift_unsig((*_self_),_54829_x);
				};
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_2287cbc8a:;
			{
				_228dde3e1_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_228792c0c:;
			{
				return false;
			}
		}
		_match_end_2287910e5:;
	};
	return true;
}



inline jule::Bool _228dde07d_rshift(_228d7b4d2_Const* _self_, _228d7b4d2_Const _56829_x) {
	{
		
		if (_228dd985e_is_i64(&(*_self_))) {
			_case_begin_22888ebb6:;
			{
				jule::I64 _57117_l = _228dd81cb_as_i64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _228dd8440_as_u64(&_56829_x);;
					_228dd8929_set_i64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_228dde6dd_rshift_unsig((*_self_),_56829_x);
				};
			}
		}
		else if (_228dd9ac3_is_u64(&(*_self_))) {
			_case_begin_2288a7d66:;
			{
				_228dde6dd_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_2288708bc:;
			{
				return false;
			}
		}
		_match_end_22886ed83:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _228d7b4d2_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22950581a_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _229407123_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22993274c_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _229799251_set(_229932ab0_Decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_22bc7663d:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_22bc766a4:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_22bc76495:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_22bc7893c:;
					{
						goto _iter_next_22bc78178;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_22bc789b4:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_22bc78178;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_22bc78a3b:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_22bc78178;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_22bc78178;
					}
				}
				_match_end_22bc7880a:;
			};
			goto _iter_end_22bc78178;
		}
	_iter_next_22bc78178:;
	}
	_iter_end_22bc78178:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_229567be0_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_22bc8147d;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_22bc8147d:;
		}
		_iter_end_22bc8147d:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _2294174da_float_bits(_229932ab0_Decimal* _self_, _22950581a_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _22943ed1a_POWTAB.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_22943ed1a_POWTAB[(*_self_)._field_dp];
			};
			_229932dce_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_22bc87e8a:;
	}
	_iter_end_22bc87e8a:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _22943ed1a_POWTAB.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_22943ed1a_POWTAB[(-((*_self_)._field_dp))];
			};
			_229932dce_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_22bc88694:;
	}
	_iter_end_22bc88694:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32730_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32730_flt._field_bias + 1LL) - _32817_exp);;
		_229932dce_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_229932dce_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32730_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_2299333a7_rounded_integer(&(*_self_)));
	if ((_32917_mant == (2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32730_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32730_flt._field_bias))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32730_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32730_flt._field_mantbits) << _32730_flt._field_expbits);
	};
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _229932c9c_assign(_229932ab0_Decimal* _self_, jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _21417_n = 0LL;;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);;
			_21029_v-=(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_21029_v + '0')));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_22bc967d4:;
	}
	_iter_end_22bc967d4:;;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_22bc97cbe:;
	}
	_iter_end_22bc97cbe:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_22993361b_trim((*_self_));
}



inline void _229932dce_shift(_229932ab0_Decimal* _self_, jule::I64 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_22bc99441:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_22bc994b8:;
			{
				while ((_23528_k > 60LL)) {
					{
						_2299339b2_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_22bc99ae5:;
				}
				_iter_end_22bc99ae5:;;
				_2299339b2_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_22bc99540:;
			{
				while ((_23528_k < -60LL)) {
					{
						_22993374d_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_22bc9abc3:;
				}
				_iter_end_22bc9abc3:;;
				_22993374d_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_23528_k)))));
			}
		}
		_match_end_22bc9930e:;
	};
}



inline void _229933011_round_down(_229932ab0_Decimal* _self_, jule::I64 _25529_nd) {
	if (((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_25529_nd;
	_22993361b_trim((*_self_));
}



inline void _229933143_round_up(_229932ab0_Decimal* _self_, jule::I64 _26427_nd) {
	if (((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _27017_i = (_26427_nd - 1LL);;
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];;
			if ((_27217_c < '9')) {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_27017_i + 1LL));
				return;;
			};
		}
	_iter_next_22bc9de6d:;
	}
	_iter_end_22bc9de6d:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _229933275_round(_229932ab0_Decimal* _self_, jule::I64 _29124_nd) {
	if (((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_229933ae4_should_round_up((*_self_),_29124_nd)) {
		_229933143_round_up(&(*_self_), _29124_nd);
	} else {
		_229933011_round_down(&(*_self_), _29124_nd);
	};
}



inline jule::U64 _2299333a7_rounded_integer(_229932ab0_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _30817_i = 0LL;;
	jule::U64 _30917_n = 0LLU;;
	for (; ((_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd)); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(((_30917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_22bca1ca6:;
	}
	_iter_end_22bca1ca6:;;
	for (; (_30817_i < (*_self_)._field_dp); (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_22bca4847:;
	}
	_iter_end_22bca4847:;;
	if (_229933ae4_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	};
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _229932ab0_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_228d21037_FieldIns> _228ce9bd1_instance(jule::Ptr<_228d0ad8a_Field> _self_) {
	return jule::new_ptr<_228d21037_FieldIns>(_228d21037_FieldIns{._field_decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _228d0ad8a_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d1a2ea_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_228d44c1a_StructIns> _228d00cc5_instance(jule::Ptr<_228d188c0_Struct> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	jule::Ptr<_228d44c1a_StructIns> _9917_ins = jule::new_ptr<_228d44c1a_StructIns>(_228d44c1a_StructIns{._field_decl=_self_, ._field_fields=jule::Slice<jule::Ptr<_228d21037_FieldIns>>::alloc(0LL,_self_.get()._field_fields.len()), ._field_refers=static__228dec520_new(), });;
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_22cb8dd6d:;
		if (it != expr.end()) {
			jule::Ptr<_228d0ad8a_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_fields = jule::alloc_for_append(_9917_ins.get()._field_fields,1);_9917_ins.get()._field_fields.__push(_228ce9bd1_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_mutable)) && (_10521_f.get()._field_kind.get()._field_kind != nullptr)) && _229a7e756_mutable(_10521_f.get()._field_kind.get()._field_kind.ptr()))) {
					_9917_ins.get()._field_mutable=true;
				};
			}
			_iter_next_22cb8dd6d:;
			++it;
			goto _iter_begin_22cb8dd6d;
		}
		_iter_end_22cb8dd6d:;
	};
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_9917_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_9917_ins.get()._field_methods=jule::Slice<jule::Ptr<_228de6cbc_Fn>>::alloc(0LL,_self_.get()._field_methods.len());
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_22cb920c4:;
			if (it != expr.end()) {
				jule::Ptr<_228de6cbc_Fn> _11625_f = *it;
				{
					jule::Ptr<_228de6cbc_Fn> _11725_fins = jule::new_ptr<_228de6cbc_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_instances=nullptr;
					_9917_ins.get()._field_methods = jule::alloc_for_append(_9917_ins.get()._field_methods,1);_9917_ins.get()._field_methods.__push(_11725_fins);;
				}
				_iter_next_22cb920c4:;
				++it;
				goto _iter_begin_22cb920c4;
			}
			_iter_end_22cb920c4:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_228d44c1a_StructIns> _228d0503d_append_instance(_228d188c0_Struct* _self_, jule::Ptr<_228d44c1a_StructIns>& _12839_ins) {
	if ((((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL))) {
		return (*_self_)._field_instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_22cb9456b:;
		if (it != expr.end()) {
			jule::Ptr<_228d44c1a_StructIns> _13421_ains = *it;
			{
				if (_228d1da6d_same(_13421_ains.ptr(), _12839_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_22cb9456b:;
			++it;
			goto _iter_begin_22cb9456b;
		}
		_iter_end_22cb9456b:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}



inline jule::Ptr<_228de6cbc_Fn> _228d07cdd_find_method(_228d188c0_Struct* _self_, jule::Str _14634_ident, jule::Bool _14646_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_22cb95abc:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_statically == _14646_statically) && (_14721_f.get()._field_ident == _14634_ident))) {
					return _14721_f;
				};
			}
			_iter_next_22cb95abc:;
			++it;
			goto _iter_begin_22cb95abc;
		}
		_iter_end_22cb95abc:;
	};
	return nullptr;
}



inline jule::Ptr<_229a0a4a1_Var> _228d08d00_find_static(_228d188c0_Struct* _self_, jule::Str _15734_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_22cb96cee:;
		if (it != expr.end()) {
			jule::Ptr<_229a0a4a1_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_ident == _15734_ident)) {
					return _15821_v;
				};
			}
			_iter_next_22cb96cee:;
			++it;
			goto _iter_begin_22cb96cee;
		}
		_iter_end_22cb96cee:;
	};
	return nullptr;
}



inline jule::Ptr<_228d0ad8a_Field> _228d0823e_find_field(_228d188c0_Struct* _self_, jule::Str _16833_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_22cb97c89:;
		if (it != expr.end()) {
			jule::Ptr<_228d0ad8a_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_ident == _16833_ident)) {
					return _16921_f;
				};
			}
			_iter_next_22cb97c89:;
			++it;
			goto _iter_begin_22cb97c89;
		}
		_iter_end_22cb97c89:;
	};
	return nullptr;
}



inline jule::Bool _228d0a51b_is_implements(_228d188c0_Struct* _self_, jule::Ptr<_22923d1bd_Trait> _17832_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_22cb98262:;
		if (it != expr.end()) {
			jule::Ptr<_22923d1bd_Trait> &_17916_it = *it;
			{
				if ((_17832_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_22cb98262:;
			++it;
			goto _iter_begin_22cb98262;
		}
		_iter_end_22cb98262:;
	};
	return false;
}



inline jule::Bool _228d09927_is_derives(_228d188c0_Struct* _self_, jule::Str _18829_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_22cb9e4aa:;
		if (it != expr.end()) {
			jule::Ptr<_228ce499a_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_args.len() == 1LL) && (_18916_d.get()._field_args[0LL].get()._field_kind == _18829_ident))) {
						return true;
					};
				};
			}
			_iter_next_22cb9e4aa:;
			++it;
			goto _iter_begin_22cb9e4aa;
		}
		_iter_end_22cb9e4aa:;
	};
	return false;
}



inline jule::Bool _228d0d6c8_is_uses(_228d188c0_Struct* _self_, jule::Ptr<_228d188c0_Struct> _20026_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_22cba1886:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> &_20116_u = *it;
			{
				while ((_20026_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_22cba2139:;
				}
				_iter_end_22cba2139:;;
			}
			_iter_next_22cba1886:;
			++it;
			goto _iter_begin_22cba1886;
		}
		_iter_end_22cba1886:;
	};
	return false;
}



inline jule::Bool _228d0dd8d_has_ref_accessible(_228d188c0_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_22cba2337:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_params.len() > 0LL) && _228de5d21_is_ref(_21116_m.get()._field_params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_22cba2337:;
			++it;
			goto _iter_begin_22cba2337;
		}
		_iter_end_22cba2337:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _228d188c0_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228d21037_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228dde853_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228ddea40_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228ddec2c_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228ddee19_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de0106_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de02e3_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de04d0_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de06bc_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de08a9_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de0a96_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de0c83_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de0e70_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de115c_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de1349_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de1536_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de1954_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de1b41_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de1d2d_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de201a_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de2207_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de23e4_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de25d1_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de27bd_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de29aa_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de2b97_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de2d84_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de3071_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de325d_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de344a_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de3637_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de3824_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de1723_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de3e84_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de4171_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de435d_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de454a_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de4737_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228de4cba_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_228de8a9e_ParamIns> _228de5848_instance(jule::Ptr<_228de5480_Param> _self_) {
	return jule::new_ptr<_228de8a9e_ParamIns>(_228de8a9e_ParamIns{._field_decl=_self_, });
}



inline jule::Bool _228de5aac_is_self(_228de5480_Param* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _228de5d21_is_ref(_228de5480_Param* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _228de5480_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _228de722e_is_void(_228de6cbc_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _228de7493_is_method(_228de6cbc_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _228de7707_is_entry_point(_228de6cbc_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _228de796b_is_init(_228de6cbc_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _228de7bd0_is_anon(_228de6cbc_Fn* _self_) {
	return _2276b4558_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _228de7e44_any_var(_228de6cbc_Fn* _self_) {
	return (((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL));
}



inline jule::Ptr<_228de996d_FnIns> _228de81a8_instance_force(jule::Ptr<_228de6cbc_Fn> _self_) {
	jule::Ptr<_228de996d_FnIns> _10017_ins = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_decl=_self_, ._field_scope=jule::new_ptr<_2299b6c10_Scope>(), ._field_refers=static__228dec520_new(), });;
	_10017_ins.get()._field_params=jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>::alloc(0LL,_self_.get()._field_params.len());
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_22cbb5bb9:;
		if (it != expr.end()) {
			jule::Ptr<_228de5480_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_params = jule::alloc_for_append(_10017_ins.get()._field_params,1);_10017_ins.get()._field_params.__push(_228de5848_instance(_10721_p));;
			}
			_iter_next_22cbb5bb9:;
			++it;
			goto _iter_begin_22cbb5bb9;
		}
		_iter_end_22cbb5bb9:;
	};
	if ((_10017_ins.get()._field_decl.get()._field_result != nullptr)) {
		_10017_ins.get()._field_result=_10017_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_228de996d_FnIns> _228de841c_instance(jule::Ptr<_228de6cbc_Fn> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	return _228de81a8_instance_force(_self_);
}



inline jule::Ptr<_228de996d_FnIns> _228de86e7_append_instance(_228de6cbc_Fn* _self_, jule::Ptr<_228de996d_FnIns>& _12839_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		};
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_22cbb9c67:;
		if (it != expr.end()) {
			jule::Ptr<_228de996d_FnIns> _14421_ains = *it;
			{
				if (_228deac38_same(_14421_ains.ptr(), _12839_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_22cbb9c67:;
			++it;
			goto _iter_begin_22cbb9c67;
		}
		_iter_end_22cbb9c67:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _228de6cbc_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _228de8e78_to_str(_228de8a9e_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_decl.get()._field_reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_228de5aac_is_self((*_self_)._field_decl.ptr())) {
		if (_228de5d21_is_ref((*_self_)._field_decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_decl.get()._field_variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_kind != nullptr)) {
		_16617_s+=_229a7d755_to_str((*_self_)._field_kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _228de8a9e_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _228de9c9d_to_str(_228de996d_FnIns* _self_) {
	;
	return _228deb046_get_kind_str(&(*_self_), false);
}



inline jule::Bool _228dea0ab_equals(jule::Ptr<_228de996d_FnIns> _self_, jule::Ptr<_229a7d359_TypeKind> _21726_other) {
	jule::Ptr<_228de996d_FnIns> _21813_f = _229a81659_fnc(_21726_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_exceptional != _21813_f.get()._field_decl.get()._field_exceptional)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_unsafety != _21813_f.get()._field_decl.get()._field_unsafety)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _21813_f.get()._field_generics.len())) {
		return false;
	};
	if ((_228de722e_is_void(_self_.get()._field_decl.ptr()) != _228de722e_is_void(_21813_f.get()._field_decl.ptr()))) {
		return false;
	};
	jule::I64 _23917_i = 0LL;;
	for (; (_23917_i < _self_.get()._field_generics.len()); (_23917_i)++) {
		{
			if ((!(_229a7da63_equals(_self_.get()._field_generics[_23917_i].get()._field_kind, _21813_f.get()._field_generics[_23917_i].get()._field_kind)))) {
				return false;
			};
		}
	_iter_next_22cbc3a51:;
	}
	_iter_end_22cbc3a51:;;
	jule::Fn<jule::Bool(jule::Ptr<_228de8a9e_ParamIns>,jule::Ptr<_228de8a9e_ParamIns>)> _24613_check_params = jule::Fn<jule::Bool(jule::Ptr<_228de8a9e_ParamIns>,jule::Ptr<_228de8a9e_ParamIns>)>([=](jule::Ptr<_228de8a9e_ParamIns> _24631_p1, jule::Ptr<_228de8a9e_ParamIns> _24646_p2) mutable -> jule::Bool {
		if ((_24631_p1.get()._field_decl.get()._field_mutable != _24646_p2.get()._field_decl.get()._field_mutable)) {
			return false;
		};
		if (_228de5aac_is_self(_24631_p1.get()._field_decl.ptr())) {
			if ((!(_228de5aac_is_self(_24646_p2.get()._field_decl.ptr())))) {
				return false;
			};
			if ((_228de5d21_is_ref(_24631_p1.get()._field_decl.ptr()) != _228de5d21_is_ref(_24646_p2.get()._field_decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_24631_p1.get()._field_decl.get()._field_reference != _24646_p2.get()._field_decl.get()._field_reference)) {
			return false;
		};
		if ((_24631_p1.get()._field_decl.get()._field_variadic != _24646_p2.get()._field_decl.get()._field_variadic)) {
			return false;
		};
		return _229a7da63_equals(_24631_p1.get()._field_kind, _24646_p2.get()._field_kind);
	});;
	if ((_21813_f.get()._field_params.len() != _self_.get()._field_params.len())) {
		return false;
	};
	_23917_i=0LL;
	for (; (_23917_i < _self_.get()._field_params.len()); (_23917_i)++) {
		{
			if ((!(_24613_check_params(_self_.get()._field_params[_23917_i],_21813_f.get()._field_params[_23917_i])))) {
				return false;
			};
		}
	_iter_next_22cbc5c51:;
	}
	_iter_end_22cbc5c51:;;
	if ((!(_228de722e_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_229a7da63_equals(_self_.get()._field_result, _21813_f.get()._field_result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Slice<jule::Ptr<_229a7d359_TypeKind>> _228dea452_types(_228de996d_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_22cbcb7a1:;
			{
				return nullptr;
			}
		}
		else if ((_229a8210a_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_22cbcb817:;
			{
				return jule::Slice<jule::Ptr<_229a7d359_TypeKind>>::make({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_22cbcb73a:;
			{
				return _229a8210a_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_22cbcb65d:;
	};
}



inline jule::Bool _228dea6b6_is_builtin(_228de996d_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _228dea92a_is_anon(_228de996d_FnIns* _self_) {
	return ((*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _228de7bd0_is_anon((*_self_)._field_decl.ptr())));
}



inline jule::Bool _228deac38_same(_228de996d_FnIns* _self_, jule::Ptr<_228de996d_FnIns> _32323_f) {
	if ((((*_self_)._field_decl != _32323_f.get()._field_decl) || (_32323_f.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_22cbd0178:;
		if (it != expr.end()) {
			jule::I64 _32813_i = it - expr.begin();
			jule::Ptr<_229a7bb2c_InsGeneric> &_32816_g = *it;
			{
				if ((!(_229a7da63_equals(_32816_g.get()._field_kind, _32323_f.get()._field_generics[_32813_i].get()._field_kind)))) {
					return false;
				};
			}
			_iter_next_22cbd0178:;
			++it;
			_32813_i++;
			goto _iter_begin_22cbd0178;
		}
		_iter_end_22cbd0178:;
	};
	return true;
}



inline jule::Str _228deb046_get_kind_str(_228de996d_FnIns* _self_, jule::Bool _33931_ident) {
	jule::Str _34017_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_34017_s+=jule::Str("unsafe ", 7);
	};
	_34017_s+=jule::Str("fn", 2);
	if ((_33931_ident && ((*_self_)._field_decl != nullptr))) {
		_34017_s+=(jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident);
	};
	if (((*_self_)._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_22cbd3995:;
			if (it != expr.end()) {
				jule::I64 _35417_i = it - expr.begin();
				jule::Ptr<_229a7bb2c_InsGeneric> &_35420_t = *it;
				{
					_34017_s+=_229a7d755_to_str(_35420_t.get()._field_kind.ptr());
					if (((_35417_i + 1LL) < (*_self_)._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_22cbd3995:;
				++it;
				_35417_i++;
				goto _iter_begin_22cbd3995;
			}
			_iter_end_22cbd3995:;
		};
		_34017_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_22cbd59db:;
			if (it != expr.end()) {
				jule::I64 _36317_i = it - expr.begin();
				jule::Ptr<_228d35777_GenericDecl> &_36320_g = *it;
				{
					_34017_s+=_36320_g.get()._field_ident;
					if (((_36317_i + 1LL) < (*_self_)._field_decl.get()._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_22cbd59db:;
				++it;
				_36317_i++;
				goto _iter_begin_22cbd59db;
			}
			_iter_end_22cbd59db:;
		};
		_34017_s+=jule::Str("]", 1);
	};
	_34017_s+=jule::Str("(", 1);
	jule::I64 _37313_n = (*_self_)._field_params.len();;
	if ((_37313_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_22cbd81d6:;
			if (it != expr.end()) {
				jule::Ptr<_228de8a9e_ParamIns> &_37520_p = *it;
				{
					_34017_s+=_228de8e78_to_str(_37520_p.ptr());
					_34017_s+=jule::Str(",", 1);
				}
				_iter_next_22cbd81d6:;
				++it;
				goto _iter_begin_22cbd81d6;
			}
			_iter_end_22cbd81d6:;
		};
		(_34017_s).mut_slice(0LL,(_34017_s.len() - 1LL));;
	};
	_34017_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_34017_s+=jule::Str("!", 1);
	};
	if ((!(_228de722e_is_void((*_self_)._field_decl.ptr())))) {
		_34017_s+=jule::Str(":", 1);
		_34017_s+=_229a7d755_to_str((*_self_)._field_result.ptr());
	};
	return _34017_s;
}







std::ostream &operator<<(std::ostream &_Stream, _228de996d_FnIns _Src) {
	_Stream << _228de9c9d_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_228dec234_ReferenceStack> static__228dec520_new(void) {
	return jule::new_ptr<_228dec234_ReferenceStack>(_228dec234_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _228dec8a5_len(_228dec234_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _228decbb3_at(_228dec234_ReferenceStack* _self_, jule::I64 _6825_i) {
	return jule::Any((*_self_)._field_buffer[_6825_i]);
}



inline void _228dece38_push(_228dec234_ReferenceStack* _self_, jule::Any _7331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7331_ref));;
}



inline jule::Bool _22d2c5d56_exist(_228dec234_ReferenceStack* _self_, jule::Ptr<_228de996d_FnIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_22d2c7077:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_22d2c7077:;
			++it;
			goto _iter_begin_22d2c7077;
		}
		_iter_end_22d2c7077:;
	};
	return false;
}

inline jule::Bool _22d2da651_exist(_228dec234_ReferenceStack* _self_, jule::Ptr<_229a0a4a1_Var> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_22d2db82d:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_22d2db82d:;
			++it;
			goto _iter_begin_22d2db82d;
		}
		_iter_end_22d2db82d:;
	};
	return false;
}

inline jule::Bool _22d375de5_exist(_228dec234_ReferenceStack* _self_, jule::Ptr<_228d44c1a_StructIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_22d377116:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_22d377116:;
			++it;
			goto _iter_begin_22d377116;
		}
		_iter_end_22d377116:;
	};
	return false;
}

inline jule::Bool _22b7ce509_exist(_228dec234_ReferenceStack* _self_, jule::Ptr<_22923d1bd_Trait> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_22b7d06d6:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_22b7d06d6:;
			++it;
			goto _iter_begin_22b7d06d6;
		}
		_iter_end_22b7d06d6:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _228dec234_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228ded5ed_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_228e02a97_SymbolBuilder> _228e0304d_get_root(jule::Ptr<_228e02a97_SymbolBuilder> _self_) {
	jule::Ptr<_228e02a97_SymbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_22cc01694:;
	}
	_iter_end_22cc01694:;;
	return _31617_root;
}



inline void _228e03416_push_err(_228e02a97_SymbolBuilder* _self_, jule::Ptr<_2276b1a1c_Token>& _32328_token, jule::Str _32343_fmt, jule::Slice<jule::Any> _32356_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2299dbd78_compiler_err(_32328_token,true,_32343_fmt,jule::Any(_32356_args)));;
}



inline void _228e037ce_push_err_text(_228e02a97_SymbolBuilder* _self_, jule::Ptr<_2276b1a1c_Token>& _32733_token, jule::Str _32748_fmt, jule::Slice<jule::Any> _32761_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2299dbd78_compiler_err(_32733_token,false,_32748_fmt,jule::Any(_32761_args)));;
}



inline void _228e03aed_push_suggestion(_228e02a97_SymbolBuilder* _self_, jule::Str _33234_fmt, jule::Slice<jule::Any> _33247_args) {
	{
		_2299dd30d_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33234_fmt,jule::Any(_33247_args));
	};
}



inline jule::Bool _228e03ec7_check_cpp_use_decl_path(_228e02a97_SymbolBuilder* _self_, jule::Ptr<_228d40bd3_UseDecl>& _33643_decl, jule::Str _33659_path) {
	jule::Bool _33672_ok = jule::Bool();
	jule::Str _33713_ext = _227388bde_ext(_33659_path);;
	if (((!(_24093be05_is_valid_header_ext(_33713_ext))) && (!(_24093c19c_is_valid_cpp_ext(_33713_ext))))) {
		_228e03416_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33672_ok = false;
		return _33672_ok;
	};
	jule::Ptr<_2405a4809_Status> _34413_info = ({
		auto except = static__23e803729_of(_33659_path);
		(except.ok()) ? (except.result) : ({{
			_228e03416_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
			_33672_ok = false;
			return _33672_ok;
		} jule::Ptr<_2405a4809_Status>();});
	});;
	if (_23e7eb755_is_dir(_34413_info.ptr())) {
		_228e03416_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
		_33672_ok = false;
		return _33672_ok;
	};
	_33672_ok = true;
	return _33672_ok;
}



inline jule::Ptr<_2299d5646_ImportInfo> _228e042d5_build_cpp_header_import(_228e02a97_SymbolBuilder* _self_, jule::Ptr<_228d40bd3_UseDecl>& _35647_decl) {
	jule::Str _35717_path = _35647_decl.get()._field_link_path;;
	if ((!(_24093bb4c_is_std_header_path(_35647_decl.get()._field_link_path)))) {
		_35717_path=_227388947_join(jule::Slice<jule::Str>::make({_2276b779d_dir(_35647_decl.get()._field_token.get()._field_file.ptr()),_35647_decl.get()._field_link_path}));
		jule::Bool _36121_ok = _228e03ec7_check_cpp_use_decl_path(&(*_self_), _35647_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _227388e86_abs(_35717_path);
		if ((!(_36121_ok))) {
			_228e03416_push_err(&(*_self_), _35647_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35647_decl.get()._field_link_path)}));
		};
	};
	return jule::new_ptr<_2299d5646_ImportInfo>(_2299d5646_ImportInfo{._field_token=_35647_decl.get()._field_token, ._field_path=_35717_path, ._field_link_path=_35647_decl.get()._field_link_path, ._field_ident=jule::Str(), ._field_cpp_linked=true, ._field_std=false, ._field_package=nullptr, });
}



inline jule::Ptr<_2299d5646_ImportInfo> _228e04604_build_std_import(_228e02a97_SymbolBuilder* _self_, jule::Ptr<_228d40bd3_UseDecl>& _38440_decl) {
	jule::Str _38517_path = _38440_decl.get()._field_link_path.slice(5LL);;
	_38517_path=_227384b85_replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_227388947_join(jule::Slice<jule::Str>::make({_2273c7c61_PATH_STDLIB,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _227388e86_abs(_38517_path);
	if ((!(_38820_ok))) {
		_228e03416_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_2405a4809_Status> _39513_info = ({
		auto except = static__23e803729_of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_228e03416_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_2405a4809_Status>();});
	});;
	if ((!(_23e7eb755_is_dir(_39513_info.ptr())))) {
		_228e03416_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_227381da2_find_last(_38440_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38440_decl.get()._field_link_path.slice(_40513_i);;
	return jule::new_ptr<_2299d5646_ImportInfo>(_2299d5646_ImportInfo{._field_token=_38440_decl.get()._field_token, ._field_path=_38517_path, ._field_link_path=_38440_decl.get()._field_link_path, ._field_ident=_40613_ident, ._field_alias=_38440_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=true, ._field_import_all=_38440_decl.get()._field_full, ._field_package=jule::new_ptr<_2299d85a0_Package>(_2299d85a0_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_2299d5646_ImportInfo> _228e04912_build_ident_import(jule::Ptr<_228e02a97_SymbolBuilder> _self_, jule::Ptr<_228d40bd3_UseDecl>& _42343_decl) {
	jule::Str _42413_mod_path = _2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d1eb1_get_mod_path(_self_.get()._field_importer);;
	if ((_42413_mod_path.len() == 0LL)) {
		_228e03416_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_228e03aed_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42343_decl.get()._field_link_path;;
	_43117_path=_227384b85_replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_227388947_join(jule::Slice<jule::Str>::make({_42413_mod_path,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _227388e86_abs(_43117_path);
	if ((!(_43520_ok))) {
		_228e03416_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_2405a4809_Status> _44213_info = ({
		auto except = static__23e803729_of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_228e03416_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_2405a4809_Status>();});
	});;
	if ((!(_23e7eb755_is_dir(_44213_info.ptr())))) {
		_228e03416_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_227381da2_find_last(_42343_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42343_decl.get()._field_link_path.slice(_45213_i);;
	return jule::new_ptr<_2299d5646_ImportInfo>(_2299d5646_ImportInfo{._field_token=_42343_decl.get()._field_token, ._field_path=_43117_path, ._field_link_path=_42343_decl.get()._field_link_path, ._field_ident=_45313_ident, ._field_alias=_42343_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=false, ._field_import_all=_42343_decl.get()._field_full, ._field_package=jule::new_ptr<_2299d85a0_Package>(_2299d85a0_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_2299d5646_ImportInfo> _228e04c20_build_import(jule::Ptr<_228e02a97_SymbolBuilder> _self_, jule::Ptr<_228d40bd3_UseDecl>& _47037_decl) {
	{
		
		if (_47037_decl.get()._field_cpp_linked) {
			_case_begin_22cc1a0c5:;
			{
				return _228e042d5_build_cpp_header_import(_self_.ptr(), _47037_decl);
			}
		}
		else if (_47037_decl.get()._field_std) {
			_case_begin_22cc1a339:;
			{
				return _228e04604_build_std_import(_self_.ptr(), _47037_decl);
			}
		}
		else {
			_case_begin_22cc19855:;
			{
				return _228e04912_build_ident_import(_self_, _47037_decl);
			}
		}
		_match_end_22cc19778:;
	};
}



inline jule::Bool _228e05050_check_duplicate_use_decl(_228e02a97_SymbolBuilder* _self_, jule::Ptr<_2299d5646_ImportInfo>& _48144_pkg) {
	jule::Bool _48164_ok = jule::Bool();
	jule::Ptr<_2299d5646_ImportInfo> _48313_lpkg = _229a4d3a1_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)>([=](jule::Ptr<_2299d5646_ImportInfo> _48349_spkg) mutable -> jule::Bool {
		return (_48144_pkg.get()._field_path == _48349_spkg.get()._field_path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48164_ok = true;
		return _48164_ok;
	};
	_228e03416_push_err(&(*_self_), _48144_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48144_pkg.get()._field_link_path)}));
	_228e03aed_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48164_ok = false;
	return _48164_ok;
}



inline void _228e05380_impl_import_selections(_228e02a97_SymbolBuilder* _self_, jule::Ptr<_2299d5646_ImportInfo>& _49546_imp, jule::Ptr<_228d40bd3_UseDecl>& _49569_decl) {
	_49546_imp.get()._field_selected=_49569_decl.get()._field_selected;
	{
		auto &expr = _49546_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_22cc1dd43:;
		if (it != expr.end()) {
			jule::Ptr<_2276b1a1c_Token> _49716_item = *it;
			{
				{
					auto &expr = _49546_imp.get()._field_selected;
					auto it = expr.begin();
					_iter_begin_22cc1e8c1:;
					if (it != expr.end()) {
						jule::Ptr<_2276b1a1c_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_22cc1e8c1;
							} else if ((_49716_item.get()._field_kind == _49820_citem.get()._field_kind)) {
								_228e03416_push_err(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_kind)}));
								_228e03aed_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_22cc1e8c1;
							};
						}
						_iter_next_22cc1e8c1:;
						++it;
						goto _iter_begin_22cc1e8c1;
					}
					_iter_end_22cc1e8c1:;
				};
			}
			_iter_next_22cc1dd43:;
			++it;
			goto _iter_begin_22cc1dd43;
		}
		_iter_end_22cc1dd43:;
	};
}



inline jule::Str _228e0568d_get_as_link_path(jule::Ptr<_228e02a97_SymbolBuilder> _self_, jule::Str _51040_path) {
	if (_2273415c0_has_prefix(_51040_path,_2273c7c61_PATH_STDLIB)) {
		(_51040_path).mut_slice(_2273c7c61_PATH_STDLIB.len());;
		return (jule::Str("std", 3) + _227384b85_replace(_51040_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _227388e86_abs(_2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d1eb1_get_mod_path(_self_.get()._field_importer));
	(_51040_path).mut_slice(_51614_root.len());;
	if ((_51040_path[0LL] == 47LLU)) {
		(_51040_path).mut_slice(1LL);;
	};
	return _227384b85_replace(_51040_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _228e05a56_push_cycle_error(jule::Ptr<_228e02a97_SymbolBuilder> _self_, jule::Ptr<_228e02a97_SymbolBuilder>& _52437_sb, jule::Str _52457_path, jule::Str& _52473_message) {
	;
	jule::Str _52713_refers_to = _240948be2_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_228e0568d_get_as_link_path(_self_, _2276b779d_dir(_52437_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_228e0568d_get_as_link_path(_self_, _52457_path))}));;
	(_52473_message).buffer.insert(0, (((_227315ab1_repeat(jule::Str(" ", 1),4LL) + _52713_refers_to) + jule::Str("\n", 1))));;
}



inline void _228e05e1e_push_cross_cycle_error(jule::Ptr<_228e02a97_SymbolBuilder> _self_, jule::Ptr<_228e02a97_SymbolBuilder>& _53443_target, jule::Ptr<_2299d5646_ImportInfo>& _53468_imp, jule::Ptr<_2276b1a1c_Token>& _53487_error_token) {
	jule::Str _53517_message = jule::Str();;
	_228e05a56_push_cycle_error(_self_, _self_,_53468_imp.get()._field_path,_53517_message);
	jule::Ptr<_228e02a97_SymbolBuilder> _53917_owner = _self_.get()._field_owner;;
	jule::Ptr<_228e02a97_SymbolBuilder> _54017_old = _self_;;
	while ((_53917_owner.get()._field_owner != nullptr)) {
		{
			_228e05a56_push_cycle_error(_self_, _54017_old.get()._field_owner,_2276b779d_dir(_54017_old.get()._field_table.get()._field_file.ptr()),_53517_message);
			if ((_53917_owner.get()._field_owner == _53443_target)) {
				_228e05a56_push_cycle_error(_self_, _53443_target,_2276b779d_dir(_53917_owner.get()._field_table.get()._field_file.ptr()),_53517_message);
				goto _iter_end_22cc26422;
			};
			_54017_old=_53917_owner;
			_53917_owner=_53917_owner.get()._field_owner;
		}
	_iter_next_22cc26422:;
	}
	_iter_end_22cc26422:;;
	_228e03416_push_err(_self_.ptr(), _53487_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53517_message)}));
}



inline jule::Bool _228e062c6_check_import_cycles(jule::Ptr<_228e02a97_SymbolBuilder> _self_, jule::Ptr<_2299d5646_ImportInfo> _55739_imp, jule::Ptr<_228d40bd3_UseDecl>& _55758_decl) {
	if ((_55739_imp.get()._field_path == _2276b779d_dir(_self_.get()._field_table.get()._field_file.ptr()))) {
		_228e03416_push_err(_self_.ptr(), _55758_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_228e0568d_get_as_link_path(_self_, _55739_imp.get()._field_path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_2276b779d_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_228e05e1e_push_cross_cycle_error(_self_, _self_.get()._field_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	jule::Ptr<_228e02a97_SymbolBuilder> _57217_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_2276b779d_dir(_57217_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_228e05e1e_push_cross_cycle_error(_self_, _57217_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	if ((_57217_owner.get()._field_owner != nullptr)) {
		_57217_owner=_57217_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _228e066b1_check_package_accessibility(_228e02a97_SymbolBuilder* _self_, jule::Ptr<_228d40bd3_UseDecl>& _59347_decl, jule::Str& _59364_mod, jule::Str& _59375_path) {
	if (((_2299d2d4c_Importer_mptr_data[((*_self_)._field_importer).type_offset]._2299d1eb1_get_mod_path((*_self_)._field_importer) != _59364_mod) && _2273838dc_contains(_59375_path,jule::Str("internal", 8)))) {
		_228e03416_push_err(&(*_self_), _59347_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _228e06a79_import_package(jule::Ptr<_228e02a97_SymbolBuilder> _self_, jule::Ptr<_2299d5646_ImportInfo>& _59939_imp, jule::Ptr<_228d40bd3_UseDecl>& _59962_decl) {
	jule::Bool _59980_ok = jule::Bool();
	if (_59939_imp.get()._field_cpp_linked) {
		_59980_ok = true;
		return _59980_ok;
	};
	jule::Ptr<_2299d5646_ImportInfo> _60417_port = _2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d25cc_get_import(_self_.get()._field_importer, _59939_imp.get()._field_path);;
	if ((_60417_port != nullptr)) {
		_59939_imp.get()._field_package=_60417_port.get()._field_package;
		_59939_imp.get()._field_duplicate=true;
		jule::Str _60917_old_mod = _2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d1eb1_get_mod_path(_self_.get()._field_importer);;
		_2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d1c6e_set_mod_path(_self_.get()._field_importer, _2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d22be_mod_by_id(_self_.get()._field_importer, _59939_imp.get()._field_mod_id));
		_228e066b1_check_package_accessibility(_self_.ptr(), _59962_decl,_60917_old_mod,_60417_port.get()._field_path);
		_2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d1c6e_set_mod_path(_self_.get()._field_importer, _60917_old_mod);
	} else {
		if ((!(_228e062c6_check_import_cycles(_self_, _59939_imp,_59962_decl)))) {
			_59980_ok = false;
			return _59980_ok;
		};
		jule::Str _61817_old_mod = _2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d1eb1_get_mod_path(_self_.get()._field_importer);;
		__JULE_DEFER({
			_2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d1c6e_set_mod_path(_self_.get()._field_importer, _61817_old_mod);
		});;
		if (_59939_imp.get()._field_std) {
			_2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d1c6e_set_mod_path(_self_.get()._field_importer, _2273c7c61_PATH_STDLIB);
		};
		jule::Slice<jule::Ptr<_228ce3900_Ast>> _62322_asts;;
		jule::Slice<_2409487a2_Log> _62332_errors;;
		std::tie(_62322_asts,_62332_errors) = _2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d2984_import_package(_self_.get()._field_importer, _59939_imp.get()._field_path,(!(_59939_imp.get()._field_std)));
		if ((_62332_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
			_59980_ok = false;
			return _59980_ok;
		};
		_228e066b1_check_package_accessibility(_self_.ptr(), _59962_decl,_61817_old_mod,_59939_imp.get()._field_path);
		{
			auto &expr = _62322_asts;
			auto it = expr.begin();
			_iter_begin_22cc36cd4:;
			if (it != expr.end()) {
				jule::Ptr<_228ce3900_Ast> _63125_ast = *it;
				{
					jule::Ptr<_229a4ca76_SymbolTable> _63225_table = nullptr;;
					std::tie(_63225_table,_62332_errors) = _229a9995d_build_symbols(_63125_ast,_self_.get()._field_importer,_self_);
					if ((_62332_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
						_228e037ce_push_err_text(_self_.ptr(), _59939_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59939_imp.get()._field_link_path)}));
						_59980_ok = false;
						return _59980_ok;
					};
					_59939_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_59939_imp.get()._field_package.get()._field_files,1);_59939_imp.get()._field_package.get()._field_files.__push(_63225_table);;
				}
				_iter_next_22cc36cd4:;
				++it;
				goto _iter_begin_22cc36cd4;
			}
			_iter_end_22cc36cd4:;
		};
	};
	_228e05380_impl_import_selections(_self_.ptr(), _59939_imp,_59962_decl);
	_59980_ok = true;
	return _59980_ok;
}



inline jule::Ptr<_2299d5646_ImportInfo> _228e06d87_import_use_decl(jule::Ptr<_228e02a97_SymbolBuilder> _self_, jule::Ptr<_228d40bd3_UseDecl>& _65140_decl) {
	jule::Ptr<_2299d5646_ImportInfo> _65217_imp = _228e04c20_build_import(_self_, _65140_decl);;
	if ((_65217_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65817_ok = _228e05050_check_duplicate_use_decl(_self_.ptr(), _65217_imp);;
	if ((!(_65817_ok))) {
		return nullptr;
	};
	_65817_ok=_228e06a79_import_package(_self_, _65217_imp,_65140_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_65217_imp);;
	if (_65817_ok) {
		_2299d2d4c_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2299d2c09_imported(_self_.get()._field_importer, _65217_imp);
		return _65217_imp;
	};
	return nullptr;
}



inline void _228e07063_import_use_decls(jule::Ptr<_228e02a97_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_22cc3c867:;
		if (it != expr.end()) {
			jule::Ptr<_228d40bd3_UseDecl> _67321_decl = *it;
			{
				_228e06d87_import_use_decl(_self_, _67321_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_22cc3c867;
				};
			}
			_iter_next_22cc3c867:;
			++it;
			goto _iter_begin_22cc3c867;
		}
		_iter_end_22cc3c867:;
	};
}



inline void _228e072d8_append_node(_228e02a97_SymbolBuilder* _self_, _228ce459e_Node& _68335_node) {
	{
		auto &_match_expr{ _68335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_228d44456_Impl>>()) {
			_case_begin_22cc3e32a:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_228e02547_build_impl(_68335_node._field_data.operator jule::Ptr<_228d44456_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3e7e7_TypeAliasDecl>>()) {
			_case_begin_22cc3d02c:;
			{
				jule::Ptr<_229a7c666_TypeAlias> _68821_ta = _228deded3_build_type_alias(_68335_node._field_data.operator jule::Ptr<_228d3e7e7_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_68821_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d43741_StructDecl>>()) {
			_case_begin_22cc3de2e:;
			{
				jule::Ptr<_228d188c0_Struct> _69121_srct = _228dee841_build_struct(_68335_node._field_data.operator jule::Ptr<_228d43741_StructDecl>());;
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_69121_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d39ea7_FnDecl>>()) {
			_case_begin_22cc3de95:;
			{
				jule::Ptr<_228de6cbc_Fn> _69421_f = _228e0049b_build_fn(_68335_node._field_data.operator jule::Ptr<_228d39ea7_FnDecl>());;
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_69421_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d43d4b_TraitDecl>>()) {
			_case_begin_22cc3e78c:;
			{
				jule::Ptr<_22923d1bd_Trait> _69721_t = _228e009da_build_trait(_68335_node._field_data.operator jule::Ptr<_228d43d4b_TraitDecl>());;
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_69721_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3ae86_VarDecl>>()) {
			_case_begin_22cc3e803:;
			{
				jule::Ptr<_229a0a4a1_Var> _70021_v = _228e02008_build_var(_68335_node._field_data.operator jule::Ptr<_228d3ae86_VarDecl>());;
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_70021_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d41b7e_EnumDecl>>()) {
			_case_begin_22cc3e869:;
			{
				jule::Ptr<_228e0dcc3_Enum> _70321_e = _228e012c1_build_enum(_68335_node._field_data.operator jule::Ptr<_228d41b7e_EnumDecl>());;
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_70321_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d42883_TypeEnumDecl>>()) {
			_case_begin_22cc3e8d0:;
			{
				jule::Ptr<_2292e1e75_TypeEnum> _70621_e = _228e01c61_build_type_enum(_68335_node._field_data.operator jule::Ptr<_228d42883_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_type_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_type_enums,1);(*_self_)._field_table.get()._field_type_enums.__push(_70621_e);;
			}
		}
		else {
			_case_begin_22cc3dcdb:;
			{
				_228e03416_push_err(&(*_self_), _68335_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_22cc3d0d7:;
	};
}



inline void _228e074b4_append_nodes(_228e02a97_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_22cc481be:;
		if (it != expr.end()) {
			_228ce459e_Node _71421_node = *it;
			{
				_228e072d8_append_node(&(*_self_), _71421_node);
			}
			_iter_next_22cc481be:;
			++it;
			goto _iter_begin_22cc481be;
		}
		_iter_end_22cc481be:;
	};
}



inline void _228e07739_push_directive_pass(_228e02a97_SymbolBuilder* _self_, jule::Ptr<_228ce499a_Directive>& _71943_d) {
	if ((_71943_d.get()._field_args.len() == 0LL)) {
		_228e03416_push_err(&(*_self_), _71943_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71943_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_2276b1a1c_Token> _72417_arg = _71943_d.get()._field_args[1LL];;
		_228e03416_push_err(&(*_self_), _72417_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_2276b1a1c_Token> _72813_arg = _71943_d.get()._field_args[0LL];;
	if ((_72813_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_228e03416_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72813_arg.get()._field_kind[0LL] != '\"')) {
		_228e03416_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_228ded5ed_Pass{._field_token=_71943_d.get()._field_tag, ._field_text=_72813_arg.get()._field_kind.slice(1LL,(_72813_arg.get()._field_kind.len() - 1LL))});;
}



inline void _228e07915_append_top_directives(_228e02a97_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_22cc4b117:;
		if (it != expr.end()) {
			jule::Ptr<_228ce499a_Directive> _74621_d = *it;
			{
				{
					auto &_match_expr{ _74621_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_22cc4e0c6:;
						{
							_228e07739_push_directive_pass(&(*_self_), _74621_d);
						}
					}
					_match_end_22cc4e01b:;
				};
			}
			_iter_next_22cc4b117:;
			++it;
			goto _iter_begin_22cc4b117;
		}
		_iter_end_22cc4b117:;
	};
}



inline void _228e07ae1_build(jule::Ptr<_228e02a97_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_229a4ca76_SymbolTable>(_229a4ca76_SymbolTable{._field_file=_self_.get()._field_ast.get()._field_file, });
	_228e07915_append_top_directives(_self_.ptr());
	_228e07063_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_228e074b4_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _228e02a97_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _228e59170_to_str(_22923d1bd_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _228e77ce8_equals(jule::Ptr<_22923d1bd_Trait> _self_, jule::Ptr<_229a7d359_TypeKind> _2626_other) {
	jule::Ptr<_22923d1bd_Trait> _2713_trt = _229a81b32_trt(_2626_other.ptr());;
	return (_self_ == _2713_trt);
}



inline jule::Bool _228e7e52a_is_builtin(_22923d1bd_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_228de6cbc_Fn> _228ea37b3_find_method(_22923d1bd_Trait* _self_, jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_22cc52e87:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_ident == _4034_ident)) {
					return _4121_f;
				};
			}
			_iter_next_22cc52e87:;
			++it;
			goto _iter_begin_22cc52e87;
		}
		_iter_end_22cc52e87:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _22923d1bd_Trait _Src) {
	_Stream << _228e59170_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _228eb56c6_auto_expr(_22908619d_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _22908619d_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _228ede854_to_str(_228e0dcc3_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _228ee6dde_equals(jule::Ptr<_228e0dcc3_Enum> _self_, jule::Ptr<_229a7d359_TypeKind> _3826_other) {
	jule::Ptr<_228e0dcc3_Enum> _3913_enm = _229a80ba8_enm(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_22908619d_EnumItem> _2290792b2_find_item(_228e0dcc3_Enum* _self_, jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_22cc5572b:;
		if (it != expr.end()) {
			jule::Ptr<_22908619d_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_ident == _4732_ident)) {
					return _4821_item;
				};
			}
			_iter_next_22cc5572b:;
			++it;
			goto _iter_begin_22cc5572b;
		}
		_iter_end_22cc5572b:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _228e0dcc3_Enum _Src) {
	_Stream << _228ede854_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2290786bd_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _22916e011_to_str(_2292e1e75_TypeEnum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _22918d0b8_equals(jule::Ptr<_2292e1e75_TypeEnum> _self_, jule::Ptr<_229a7d359_TypeKind> _8026_other) {
	jule::Ptr<_2292e1e75_TypeEnum> _8113_tenm = _229a80e1c_tenm(_8026_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_2290786bd_TypeEnumItem> _22923da09_find_item(_2292e1e75_TypeEnum* _self_, jule::Str _8932_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_22cc5795e:;
		if (it != expr.end()) {
			jule::Ptr<_2290786bd_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_ident == _8932_ident)) {
					return _9021_item;
				};
			}
			_iter_next_22cc5795e:;
			++it;
			goto _iter_begin_22cc5795e;
		}
		_iter_end_22cc5795e:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _2292e1e75_TypeEnum _Src) {
	_Stream << _22916e011_to_str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_2299dd792_Sema>&,jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>&)> _22994938a_ready_fn(jule::Ptr<_229938e6d_ConstraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_2299dd792_Sema>&,jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>&)>([=](jule::Ptr<_2299dd792_Sema>& _5621_sema, jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>& _5639_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_generics_d;
			auto it = expr.begin();
			_iter_begin_22cc656e7:;
			if (it != expr.end()) {
				jule::I64 _5718_i = it - expr.begin();
				jule::Ptr<_228d35777_GenericDecl> _5725_g = *it;
				{
					jule::Ptr<_229a7bb2c_InsGeneric> _5825_generic = _self_.get()._field_generics[_5718_i];;
					if (((_5725_g.get()._field_constraint == nullptr) || (_5725_g.get()._field_constraint.get()._field_mask.len() == 0LL))) {
						goto _iter_next_22cc656e7;
					};
					_5825_generic.get()._field_constraint=jule::Slice<jule::Ptr<_229a7d359_TypeKind>>::alloc(0LL,_5725_g.get()._field_constraint.get()._field_mask.len());
					{
						auto &expr = _5725_g.get()._field_constraint.get()._field_mask;
						auto it = expr.begin();
						_iter_begin_22cc67c49:;
						if (it != expr.end()) {
							jule::Ptr<_228d28193_TypeDecl> _6329_mask = *it;
							{
								jule::I64 _6425_n = _5621_sema.get()._field_errors.len();;
								jule::Ptr<_229a7d359_TypeKind> _6529_kind = _2299e4787_build_type_with_refers(_5621_sema, _6329_mask,jule::Trait<_229a98e02_Lookup>(_5621_sema, 3),_5639_generics,nullptr);;
								if ((_6529_kind == nullptr)) {
									{
										auto &_match_expr{ _6329_mask.get()._field_kind };
										
										if (_match_expr.type_is<jule::Ptr<_228d28759_IdentTypeDecl>>()) {
											_case_begin_22cc69ad6:;
											{
												jule::Ptr<_228d28759_IdentTypeDecl> _6937_itd = _6329_mask.get()._field_kind.operator jule::Ptr<_228d28759_IdentTypeDecl>();;
												if (((_6937_itd.get()._field_generics.len() == 0LL) && _22998202c_is_builtin_constraint(_6937_itd.get()._field_ident))) {
													_6529_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(_6937_itd.get()._field_ident), 6)});
													_5621_sema.get()._field_errors=_5621_sema.get()._field_errors.slice(0LL,_6425_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_22cc69a81:;
									};
									return false;
								};
								_julec_label_success:;
								_5825_generic.get()._field_constraint = jule::alloc_for_append(_5825_generic.get()._field_constraint,1);_5825_generic.get()._field_constraint.__push(_6529_kind);;
							}
							_iter_next_22cc67c49:;
							++it;
							goto _iter_begin_22cc67c49;
						}
						_iter_end_22cc67c49:;
					};
				}
				_iter_next_22cc656e7:;
				++it;
				_5718_i++;
				goto _iter_begin_22cc656e7;
			}
			_iter_end_22cc656e7:;
		};
		return true;
	});
}



inline jule::Bool _229961ade_ready_fi(jule::Ptr<_229938e6d_ConstraintChecker> _self_) {
	_self_.get()._field_generics_d=_self_.get()._field_fi.get()._field_decl.get()._field_generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_generics;
	return ((!(_self_.get()._field_uniq)) || _2299e8c64_fn_environment(_self_.get()._field_s, _self_.get()._field_fi,_22994938a_ready_fn(_self_)));
}



inline jule::Bool _22997bba3_ready_si(jule::Ptr<_229938e6d_ConstraintChecker> _self_) {
	_self_.get()._field_generics_d=_self_.get()._field_si.get()._field_decl.get()._field_generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_generics;
	return ((!(_self_.get()._field_uniq)) || _22994938a_ready_fn(_self_)(_self_.get()._field_s,_self_.get()._field_generics_a));
}



inline jule::Bool _22997d9eb_ready(jule::Ptr<_229938e6d_ConstraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _229961ade_ready_fi(_self_);
	};
	return _22997bba3_ready_si(_self_);
}



inline jule::Bool _22997ebd9_check(jule::Ptr<_229938e6d_ConstraintChecker> _self_) {
	if ((!(_22997d9eb_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22cc71acc:;
		if (it != expr.end()) {
			jule::I64 _11214_i = it - expr.begin();
			jule::Ptr<_229a7bb2c_InsGeneric> _11221_g = *it;
			{
				if ((_11221_g.get()._field_constraint == nullptr)) {
					goto _iter_next_22cc71acc;
				};
				{
					auto &expr = _11221_g.get()._field_constraint;
					auto it = expr.begin();
					_iter_begin_22cc7279d:;
					if (it != expr.end()) {
						jule::Ptr<_229a7d359_TypeKind> _11625_c2 = *it;
						{
							jule::Ptr<_229a82d31_Prim> _11725_prim = _229a8046b_prim(_11625_c2.ptr());;
							if (((_11725_prim != nullptr) && _229a83925_is_constraint(_11725_prim.ptr()))) {
								if (_229980437_match_constraint(_11725_prim.get()._field_kind,_11221_g.get()._field_kind)) {
									goto _iter_next_22cc71acc;
								};
								goto _iter_next_22cc7279d;
							};
							if (_229a7da63_equals(_11625_c2, _11221_g.get()._field_kind)) {
								goto _iter_next_22cc71acc;
							};
						}
						_iter_next_22cc7279d:;
						++it;
						goto _iter_begin_22cc7279d;
					}
					_iter_end_22cc7279d:;
				};
				_2299e1454_push_err(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_11221_g.get()._field_kind.ptr())),jule::Any(_self_.get()._field_generics_d[_11214_i].get()._field_ident)}));
				return false;
			}
			_iter_next_22cc71acc:;
			++it;
			_11214_i++;
			goto _iter_begin_22cc71acc;
		}
		_iter_end_22cc71acc:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _229938e6d_ConstraintChecker _Src) {
	_Stream << "ConstraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "generics_d:" << _Src._field_generics_d << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "generics_a:" << _Src._field_generics_a << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _229983968_is_trait_impl(_2299a3504_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _22998b300_is_struct_impl(_2299a3504_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2299a3504_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b6c10_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b700c_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b72e8_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b76e4_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b79d0_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2299b82e9_is_while_next(_2299b7e53_WhileIter* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2299b7e53_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b8838_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b8c34_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b90db_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b93c7_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b96b3_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b9a6a_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299b9edd_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299ba395_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2299bade0_is_generic_type_match(_2299ba8d4_Match* _self_) {
	return (((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic);
}







std::ostream &operator<<(std::ostream &_Stream, _2299ba8d4_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2299bb6e8_is_default(_2299bb42e_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2299bb42e_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299bb9d4_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299bbe57_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299bc562_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2299bc9d5_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2299d5646_ImportInfo> _2299bdc4a_find_package(_2299bd7e9_ScopeChecker* _self_, jule::Str _45635_ident) {
	return _2299ddcae_find_package((*_self_)._field_s.ptr(), _45635_ident);
}



inline jule::Ptr<_2299d5646_ImportInfo> _2299be058_select_package(_2299bd7e9_ScopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)> _46637_selector) {
	return _2299de0bc_select_package((*_self_)._field_s.ptr(), _46637_selector);
}



inline jule::Ptr<_229a0a4a1_Var> _2299be410_find_var(_2299bd7e9_ScopeChecker* _self_, jule::Str _47731_ident, jule::Bool _47743_cpp_linked) {
	;
	jule::Ptr<_229a0a4a1_Var> _48017_v = _229a5031a___find_var((*_self_)._field_table.ptr(), _47731_ident,_47743_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_2299bd7e9_ScopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_229a5031a___find_var(_48517_parent.get()._field_table.ptr(), _47731_ident,_47743_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_22cc9d983:;
	}
	_iter_end_22cc9d983:;;
	return _2299de474_find_var((*_self_)._field_s.ptr(), _47731_ident,_47743_cpp_linked);
}



inline jule::Ptr<_229a7c666_TypeAlias> _2299be7b7_find_type_alias(_2299bd7e9_ScopeChecker* _self_, jule::Str _50438_ident, jule::Bool _50450_cpp_linked) {
	;
	jule::Ptr<_229a7c666_TypeAlias> _50717_ta = _229a5076b___find_type_alias((*_self_)._field_table.ptr(), _50438_ident,_50450_cpp_linked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_2299bd7e9_ScopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_229a5076b___find_type_alias(_51217_parent.get()._field_table.ptr(), _50438_ident,_50450_cpp_linked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_22cca1821:;
	}
	_iter_end_22cca1821:;;
	return _2299de82b_find_type_alias((*_self_)._field_s.ptr(), _50438_ident,_50450_cpp_linked);
}



inline jule::Ptr<_228d188c0_Struct> _2299beb6e_find_struct(_2299bd7e9_ScopeChecker* _self_, jule::Str _52934_ident, jule::Bool _52946_cpp_linked) {
	return _2299debd3_find_struct((*_self_)._field_s.ptr(), _52934_ident,_52946_cpp_linked);
}



inline jule::Ptr<_228de6cbc_Fn> _2299c0026_find_fn(_2299bd7e9_ScopeChecker* _self_, jule::Str _53830_ident, jule::Bool _53842_cpp_linked) {
	return _2299e008a_find_fn((*_self_)._field_s.ptr(), _53830_ident,_53842_cpp_linked);
}



inline jule::Ptr<_22923d1bd_Trait> _2299c0334_find_trait(_2299bd7e9_ScopeChecker* _self_, jule::Str _54733_ident) {
	return _2299e0398_find_trait((*_self_)._field_s.ptr(), _54733_ident);
}



inline jule::Ptr<_228e0dcc3_Enum> _2299c0642_find_enum(_2299bd7e9_ScopeChecker* _self_, jule::Str _55632_ident) {
	return _2299e06a6_find_enum((*_self_)._field_s.ptr(), _55632_ident);
}



inline jule::Ptr<_2292e1e75_TypeEnum> _2299c0950_find_type_enum(_2299bd7e9_ScopeChecker* _self_, jule::Str _56537_ident) {
	return _2299e09b4_find_type_enum((*_self_)._field_s.ptr(), _56537_ident);
}



inline jule::Bool _2299c0c80_is_unsafe(jule::Ptr<_2299bd7e9_ScopeChecker> _self_) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _2299c0ee4_is_root(_2299bd7e9_ScopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _2299c11c0_stop(_2299bd7e9_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _2299c1434_stopped(_2299bd7e9_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _2299c1698_is_deferred(jule::Ptr<_2299bd7e9_ScopeChecker> _self_) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_2299bd7e9_ScopeChecker> _2299c190c_get_root(jule::Ptr<_2299bd7e9_ScopeChecker> _self_) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_22ccaad9c:;
	}
	_iter_end_22ccaad9c:;;
	return _62417_root;
}



inline jule::Ptr<_2299bd7e9_ScopeChecker> _2299c1b71_get_hard_root(jule::Ptr<_2299bd7e9_ScopeChecker> _self_) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_22ccac167:;
	}
	_iter_end_22ccac167:;;
	return _63417_root;
}



inline jule::Ptr<_2299b93c7_Label> _2299c1e7e_find_label(_2299bd7e9_ScopeChecker* _self_, jule::Str _64429_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_22ccace26:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_2299b93c7_Label>>()) {
						_case_begin_22ccad72e:;
						{
							jule::Ptr<_2299b93c7_Label> _64825_label = _64521_st.operator jule::Ptr<_2299b93c7_Label>();;
							if ((_64825_label.get()._field_ident == _64429_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_22ccad630:;
				};
			}
			_iter_next_22ccace26:;
			++it;
			goto _iter_begin_22ccace26;
		}
		_iter_end_22ccace26:;
	};
	return nullptr;
}



inline jule::Ptr<_2299bc562_ScopeLabel> _2299c228c_find_label_scope(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Str _66036_ident) {
	jule::Ptr<_2299bc562_ScopeLabel> _66117_label = _2299c259a_find_label_all(_self_.ptr(), _66036_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_2299bc562_ScopeLabel> _2299c259a_find_label_all(_2299bd7e9_ScopeChecker* _self_, jule::Str _67233_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_22ccb0ae9:;
		if (it != expr.end()) {
			jule::Ptr<_2299bc562_ScopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_ident == _67233_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_22ccb0ae9:;
			++it;
			goto _iter_begin_22ccb0ae9;
		}
		_iter_end_22ccb0ae9:;
	};
	return nullptr;
}



inline jule::Bool _2299c2952_is_duplicated_ident(_2299bd7e9_ScopeChecker* _self_, jule::Uintptr _68438_itself, jule::Str _68455_ident) {
	jule::Ptr<_229a0a4a1_Var> _68513_v = _2299be410_find_var(&(*_self_), _68455_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68438_itself))) {
		if ((_68513_v.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_scope == (*_self_)._field_scope) || (!(_2299e0d16_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_229a7c666_TypeAlias> _69313_ta = _2299be7b7_find_type_alias(&(*_self_), _68455_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68438_itself))) {
		if ((_69313_ta.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_scope == (*_self_)._field_tree) || (!(_2299e0d16_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _2299c2bc7_check_var_decl(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3ae86_VarDecl> _70438_decl) {
	jule::Ptr<_229a0a4a1_Var> _70517_v = _228e02008_build_var(_70438_decl);;
	_70517_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_2299c2952_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_ident)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _70517_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_ident)}));
		_2299e1773_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_2299c11c0_stop(_self_.ptr());
		return;;
	};
	_2299ee891_check_var_decl(_self_.get()._field_s, _70517_v,jule::Trait<_229a98e02_Lookup>(_self_, 0));
	if (((!(_229a0aabc_is_type_inferred(_70517_v.ptr()))) && ((_70517_v.get()._field_kind == nullptr) || (_70517_v.get()._field_kind.get()._field_kind == nullptr)))) {
		return;;
	};
	_229a03015_check_type_var(_self_.get()._field_s, _70517_v,jule::Trait<_229a98e02_Lookup>(_self_, 0));
}



inline void _2299c2e4c_check_type_alias_decl(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3e7e7_TypeAliasDecl> _72845_decl) {
	jule::Ptr<_229a7c666_TypeAlias> _72917_ta = _228deded3_build_type_alias(_72845_decl);;
	if (_2299c2952_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_ident)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _72917_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_ident)}));
		_2299e1773_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_2299c11c0_stop(_self_.ptr());
		return;;
	};
	_2299ea55c_check_type_alias_decl(_self_.get()._field_s, _72917_ta,jule::Trait<_229a98e02_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_2299c11c0_stop(_self_.ptr());
	};
}



inline jule::Ptr<_2299b6c10_Scope> _2299c31b1_get_child(_2299bd7e9_ScopeChecker* _self_) {
	return jule::new_ptr<_2299b6c10_Scope>(_2299b6c10_Scope{._field_parent=(*_self_)._field_scope, });
}



inline void _2299c3579_check_child_ssc(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d384b1_ScopeTree>& _75240_tree, jule::Ptr<_2299b6c10_Scope>& _75263_s, jule::Ptr<_2299bd7e9_ScopeChecker>& _75279_ssc) {
	_75279_ssc.get()._field_parent=_self_;
	_2299cdb28_check(_75279_ssc, _75240_tree,_75263_s);
}



inline jule::Ptr<_2299b6c10_Scope> _2299c3931_check_child_sc(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d384b1_ScopeTree>& _75739_tree, jule::Ptr<_2299bd7e9_ScopeChecker>& _75762_ssc) {
	jule::Ptr<_2299b6c10_Scope> _75817_s = _2299c31b1_get_child(_self_.ptr());;
	_2299c3579_check_child_ssc(_self_, _75739_tree,_75817_s,_75762_ssc);
	return _75817_s;
}



inline jule::Ptr<_2299b6c10_Scope> _2299c3c3e_check_child(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d384b1_ScopeTree>& _76336_tree) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _76417_ssc = _2299cdd8c_new_child_checker(_self_);;
	return _2299c3931_check_child_sc(_self_, _76336_tree,_76417_ssc);
}



inline void _2299c3eb4_check_anon_scope(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d384b1_ScopeTree> _76840_tree) {
	jule::Ptr<_2299b6c10_Scope> _76917_s = _2299c3c3e_check_child(_self_, _76840_tree);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _2299c42d3_process_error_call(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228de3824_BuiltinErrorCallExprModel>& _77343_m, jule::Ptr<_2276b1a1c_Token> _77374_err) {
	if (_2299c1698_is_deferred(_self_)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _77374_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_2299bd7e9_ScopeChecker> _77817_root = _2299c190c_get_root(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _77374_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_2299e1773_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77343_m.get()._field_func=_77817_root.get()._field_owner;
}



inline void _2299c4558_check_expr(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d2c6b4_Expr> _78634_expr) {
	jule::Ptr<_229a54352_Eval> _78717_eval = _2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_229a527d4_Data> _78917_d = _229a6ea21_eval_expr(_78717_eval, _78634_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228de3824_BuiltinErrorCallExprModel>>()) {
			_case_begin_22ccc7270:;
			{
				jule::Ptr<_228de3824_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_model.operator jule::Ptr<_228de3824_BuiltinErrorCallExprModel>();;
				_2299c42d3_process_error_call(_self_, _79621_m,_78634_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de454a_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_228de344a_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_228de29aa_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_228de25d1_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_228de3071_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_228de3637_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_228de4737_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_228de06bc_FnCallExprModel>>()) {
			_case_begin_22ccc746d:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_22ccc712c:;
			{
				_2299e1454_push_err(_self_.get()._field_s.ptr(), _78634_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_22ccc70c7:;
	};
}



inline void _2299c47cd_check_co_expr(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d2e2a9_CoExpr> _81537_expr) {
	jule::Ptr<_229a54352_Eval> _81617_eval = _2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_229a527d4_Data> _81817_d = _229a6ea21_eval_expr(_81617_eval, _81537_expr.get()._field_expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228de06bc_FnCallExprModel>>()) {
			_case_begin_22cccc550:;
			{
				jule::Ptr<_228de06bc_FnCallExprModel> _82521_model = _81817_d.get()._field_model.operator jule::Ptr<_228de06bc_FnCallExprModel>();;
				if (_82521_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_2299e1454_push_err(_self_.get()._field_s.ptr(), _81537_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_2299e1773_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_is_co=true;
				_229a668b4_check_fn_of_concurrent_call(_81617_eval.ptr(), _82521_model.get()._field_func,_81537_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_22cccc3eb:;
			{
				_2299e1454_push_err(_self_.get()._field_s.ptr(), _81537_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_22cccc396:;
	};
}



inline jule::Ptr<_2299b700c_If> _2299c4adb_check_if(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3d7e6_If> _83932_i) {
	jule::Ptr<_2299b6c10_Scope> _84017_s = _2299c3c3e_check_child(_self_, _83932_i.get()._field_scope);;
	jule::Ptr<_229a527d4_Data> _84217_d = _229a6ea21_eval_expr(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _83932_i.get()._field_expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_229a82d31_Prim> _84717_prim = _229a8046b_prim(_84217_d.get()._field_kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_229a85d01_is_bool(_84717_prim.ptr()))))) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _83932_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_2299b700c_If>(_2299b700c_If{._field_expr=_84217_d.get()._field_model, ._field_scope=_84017_s});
}



inline jule::Ptr<_2299b72e8_Else> _2299c4de9_check_else(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3db9d_Else> _85934_e) {
	return jule::new_ptr<_2299b72e8_Else>(_2299b72e8_Else{._field_scope=_2299c3c3e_check_child(_self_, _85934_e.get()._field_scope)});
}



inline void _2299c516e_check_conditional(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3e121_Conditional> _86541_conditional) {
	jule::Ptr<_2299b76e4_Conditional> _86617_c = jule::new_ptr<_2299b76e4_Conditional>(_2299b76e4_Conditional{});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_elifs=jule::Slice<jule::Ptr<_2299b700c_If>>::alloc(0LL,(_86541_conditional.get()._field_tail.len() + 1LL));
	_86617_c.get()._field_elifs = jule::alloc_for_append(_86617_c.get()._field_elifs,1);_86617_c.get()._field_elifs.__push(_2299c4adb_check_if(_self_, _86541_conditional.get()._field_head));;
	{
		auto &expr = _86541_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_22ccd5778:;
		if (it != expr.end()) {
			jule::Ptr<_228d3d7e6_If> _87221_elif = *it;
			{
				_86617_c.get()._field_elifs = jule::alloc_for_append(_86617_c.get()._field_elifs,1);_86617_c.get()._field_elifs.__push(_2299c4adb_check_if(_self_, _87221_elif));;
			}
			_iter_next_22ccd5778:;
			++it;
			goto _iter_begin_22ccd5778;
		}
		_iter_end_22ccd5778:;
	};
	if ((_86541_conditional.get()._field_default != nullptr)) {
		_86617_c.get()._field_default=_2299c4de9_check_else(_self_, _86541_conditional.get()._field_default);
	};
}



inline void _2299c55d1_check_iter_scope_ssc(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Uintptr _88140_it, jule::Ptr<_228d384b1_ScopeTree> _88157_tree, jule::Ptr<_2299b6c10_Scope>& _88180_s, jule::Ptr<_2299bd7e9_ScopeChecker> _88195_ssc) {
	_88195_ssc.get()._field_it=_88140_it;
	_2299c3579_check_child_ssc(_self_, _88157_tree,_88180_s,_88195_ssc);
}



inline jule::Ptr<_2299b6c10_Scope> _2299c5a32_check_iter_scope_sc(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Uintptr _88639_it, jule::Ptr<_228d384b1_ScopeTree> _88656_tree, jule::Ptr<_2299bd7e9_ScopeChecker> _88678_ssc) {
	jule::Ptr<_2299b6c10_Scope> _88717_scope = _2299c31b1_get_child(_self_.ptr());;
	_2299c55d1_check_iter_scope_ssc(_self_, _88639_it,_88656_tree,_88717_scope,_88678_ssc);
	return _88717_scope;
}



inline jule::Ptr<_2299b6c10_Scope> _2299c5dd9_check_iter_scope(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Uintptr _89236_it, jule::Ptr<_228d384b1_ScopeTree>& _89254_tree) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _89317_ssc = _2299cdd8c_new_child_checker(_self_);;
	return _2299c5a32_check_iter_scope_sc(_self_, _89236_it,_89254_tree,_89317_ssc);
}



inline void _2299c615e_check_inf_iter(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3b99d_Iter>& _89739_it) {
	jule::Ptr<_2299b79d0_InfIter> _89817_kind = jule::new_ptr<_2299b79d0_InfIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_scope=_2299c5dd9_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89739_it.get()._field_scope);
}



inline void _2299c63d4_check_while_iter(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3b99d_Iter>& _90341_it) {
	jule::Ptr<_228d3c273_WhileKind> _90417_wh = _90341_it.get()._field_kind.operator jule::Ptr<_228d3c273_WhileKind>();;
	if (((_90417_wh.get()._field_expr == nullptr) && (_90417_wh.get()._field_next == nullptr))) {
		_2299c615e_check_inf_iter(_self_, _90341_it);
		return;;
	};
	jule::Ptr<_2299b7e53_WhileIter> _91017_kind = jule::new_ptr<_2299b7e53_WhileIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_scope=_2299c5dd9_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90341_it.get()._field_scope);
	if ((_90417_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_229a527d4_Data> _91521_d = _229a6ea21_eval_expr(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _90417_wh.get()._field_expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_229a82d31_Prim> _92017_prim = _229a8046b_prim(_91521_d.get()._field_kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _90341_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_229a85d01_is_bool(_92017_prim.ptr())))) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _90341_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_expr=_91521_d.get()._field_model;
	};
	if (_228d3c5c5_is_while_next(_90417_wh.ptr())) {
		if ((!(_22994d3c2_is_valid_ast_st_for_next_st(_90417_wh.get()._field_next)))) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _90417_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_stmts.len();;
		_2299cc8c4_check_node(_self_, _90417_wh.get()._field_next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_94017_n);
			if ((!(_22998aab3_is_valid_st_for_next_st(_94325_st)))) {
				_2299e1454_push_err(_self_.get()._field_s.ptr(), _90417_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_next=_94325_st;
		};
	};
}



inline void _2299c6659_check_range_iter(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3b99d_Iter>& _95441_it) {
	jule::Ptr<_228d3cb14_RangeKind> _95517_rang = _95441_it.get()._field_kind.operator jule::Ptr<_228d3cb14_RangeKind>();;
	jule::Ptr<_229a527d4_Data> _95717_d = _229a6ea21_eval_expr(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _95517_rang.get()._field_expr);;
	if ((_95717_d == nullptr)) {
		return;;
	};
	jule::Ptr<_2299b8838_RangeIter> _96217_kind = jule::new_ptr<_2299b8838_RangeIter>(_2299b8838_RangeIter{._field_expr=_95717_d, });;
	_229a48a3e_RangeChecker _96617_rc = _229a48a3e_RangeChecker{._field_sc=_self_, ._field_rang=_95517_rang, ._field_kind=_96217_kind, ._field_d=_95717_d};;
	jule::Bool _97213_ok = _229a4a436_check(&_96617_rc);;
	if ((!(_97213_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_96217_kind));;
	jule::Ptr<_2299bd7e9_ScopeChecker> _97917_ssc = _2299cdd8c_new_child_checker(_self_);;
	jule::Ptr<_2299b6c10_Scope> _98017_scope = _2299c31b1_get_child(_self_.ptr());;
	if ((_96217_kind.get()._field_key_a != nullptr)) {
		if (((!(_2299e0d16_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _2299c2952_is_duplicated_ident(_self_.ptr(), 0LLU,_96217_kind.get()._field_key_a.get()._field_ident))) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _96217_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_key_a.get()._field_ident)}));
			_2299e1773_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_key_a.get()._field_scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_vars,1);_97917_ssc.get()._field_table.get()._field_vars.__push(_96217_kind.get()._field_key_a);;
	};
	if ((_96217_kind.get()._field_key_b != nullptr)) {
		if (((!(_2299e0d16_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _2299c2952_is_duplicated_ident(_self_.ptr(), 0LLU,_96217_kind.get()._field_key_b.get()._field_ident))) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _96217_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_key_b.get()._field_ident)}));
			_2299e1773_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_key_b.get()._field_scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_vars,1);_97917_ssc.get()._field_table.get()._field_vars.__push(_96217_kind.get()._field_key_b);;
	};
	_2299c55d1_check_iter_scope_ssc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96217_kind)),_95441_it.get()._field_scope,_98017_scope,_97917_ssc);
	_96217_kind.get()._field_scope=_98017_scope;
}



inline void _2299c68ce_check_iter(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3b99d_Iter> _100434_it) {
	if (_228d3bd00_is_inf(_100434_it.ptr())) {
		_2299c615e_check_inf_iter(_self_, _100434_it);
		return;;
	};
	{
		auto &_match_expr{ _100434_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d3c273_WhileKind>>()) {
			_case_begin_22cd03510:;
			{
				_2299c63d4_check_while_iter(_self_, _100434_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3cb14_RangeKind>>()) {
			_case_begin_22cd02971:;
			{
				_2299c6659_check_range_iter(_self_, _100434_it);
			}
		}
		else {
			_case_begin_22cd0283e:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_22cd02e9e:;
	};
}



inline jule::Bool _2299c6bdc_check_valid_cont_label(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Uintptr _102042_it) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _102117_scope = _self_;;
	_julec_label_iter:;
	if ((_102117_scope.get()._field_it == _102042_it)) {
		return true;
	};
	if ((_102117_scope.get()._field_parent != nullptr)) {
		_102117_scope=_102117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _2299c701c_check_valid_break_label(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Uintptr _103643_ptr) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _103717_scope = _self_;;
	_julec_label_iter:;
	if ((_103717_scope.get()._field_it == _103643_ptr)) {
		return true;
	};
	if ((_103717_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104517_mtch = static_cast<jule::Uintptr>(((_2299bb42e_Case*)(_103717_scope.get()._field_cse))->_field_owner);;
		if ((_104517_mtch == _103643_ptr)) {
			return true;
		};
	};
	if ((_103717_scope.get()._field_parent != nullptr)) {
		_103717_scope=_103717_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_2299b8c34_ContSt> _2299c733b_check_cont_valid_scope(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3d373_ContSt> _105942_c) {
	if (_2299c1698_is_deferred(_self_)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _105942_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105942_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_2299b8c34_ContSt>();
	};
	jule::Ptr<_2299bd7e9_ScopeChecker> _106917_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106917_scope.get()._field_it == 0LLU) && (_106917_scope.get()._field_parent != nullptr)) && (_106917_scope.get()._field_owner == nullptr))) {
			_case_begin_22cd1094b:;
			{
				_106917_scope=_106917_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106917_scope.get()._field_it != 0LLU)) {
			_case_begin_22cd109c3:;
			{
				return jule::new_ptr<_2299b8c34_ContSt>(_2299b8c34_ContSt{._field_it=_106917_scope.get()._field_it});
			}
		}
		_match_end_22cd108c4:;
	};
	_2299e1454_push_err(_self_.get()._field_s.ptr(), _105942_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _2299c75b1_check_cont(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3d373_ContSt> _108330_c) {
	jule::Ptr<_2299b8c34_ContSt> _108417_cont = _2299c733b_check_cont_valid_scope(_self_, _108330_c);;
	if ((_108417_cont == nullptr)) {
		return;;
	};
	if ((_108330_c.get()._field_label != nullptr)) {
		jule::Ptr<_2299bc562_ScopeLabel> _109021_label = _229981d84_find_label_parent(_108330_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
		if ((_109021_label == nullptr)) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		_109021_label.get()._field_used=true;
		if (((_109021_label.get()._field_pos + 1LL) >= _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		jule::I64 _110317_i = (_109021_label.get()._field_pos + 1LL);;
		if ((_110317_i >= _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110725_st = _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts[_110317_i];;
			{
				auto &_match_expr{ _110725_st };
				
				if (_match_expr.type_is<jule::Ptr<_2299b79d0_InfIter>>()) {
					_case_begin_22cd16347:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_2299b79d0_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_2299b8838_RangeIter>>()) {
					_case_begin_22cd193d3:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_2299b8838_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_2299b7e53_WhileIter>>()) {
					_case_begin_22cd19449:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_2299b7e53_WhileIter>()));
					}
				}
				else {
					_case_begin_22cd1927e:;
					{
						_2299e1454_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_22cd191a2:;
			};
		};
	};
	if ((_108417_cont.get()._field_it != 0LLU)) {
		if ((!(_2299c6bdc_check_valid_cont_label(_self_, _108417_cont.get()._field_it)))) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_108417_cont));;
}



inline void _2299c7836_check_label(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d35b2e_LabelSt> _113035_l) {
	if ((_2299c1e7e_find_label(_self_.ptr(), _113035_l.get()._field_ident) != nullptr)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _113035_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_113035_l.get()._field_ident)}));
		return;;
	};
	jule::Ptr<_2299b93c7_Label> _113617_label = jule::new_ptr<_2299b93c7_Label>(_2299b93c7_Label{._field_ident=_113035_l.get()._field_ident});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_113617_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_2299bc562_ScopeLabel>>::make({jule::new_ptr<_2299bc562_ScopeLabel>(_2299bc562_ScopeLabel{._field_token=_113035_l.get()._field_token, ._field_label=_113617_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _2299c7aab_push_goto(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d35ed6_GotoSt> _114933_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_2299b96b3_GotoSt>(_2299b96b3_GotoSt{._field_ident=_114933_gt.get()._field_label.get()._field_kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_2299bc9d5_ScopeGoto>>::make({jule::new_ptr<_2299bc9d5_ScopeGoto>(_2299bc9d5_ScopeGoto{._field_gt=_114933_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL))})}));
}



inline void _2299c7d31_check_postfix(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d36e1b_AssignSt> _116137_a) {
	if ((_116137_a.get()._field_left.len() > 1LL)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_228d2c6b4_Expr> _116717_expr = _116137_a.get()._field_left[0LL].get()._field_expr;;
	jule::Ptr<_229a527d4_Data> _116817_d = _229a6ea21_eval_expr(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _116717_expr);;
	if ((_116817_d == nullptr)) {
		return;;
	};
	_22999c773_check_assign(_self_.get()._field_s,_116817_d,nullptr,_116137_a.get()._field_setter);
	if ((_229a80944_ptr(_116817_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_229a89b29_Ptr> _117621_ptr = _229a80944_ptr(_116817_d.get()._field_kind.ptr());;
		if (_229a8a5ec_is_unsafe(_117621_ptr.ptr())) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116137_a.get()._field_setter.get()._field_kind),jule::Any(_229a7d755_to_str(_116817_d.get()._field_kind.ptr()))}));
			return;;
		};
	} else {
		if (((_229a8046b_prim(_116817_d.get()._field_kind.ptr()) == nullptr) || (!(_2299b6528_is_num(_229a8046b_prim(_116817_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116137_a.get()._field_setter.get()._field_kind),jule::Any(_229a7d755_to_str(_116817_d.get()._field_kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_2299b9a6a_Postfix>(_2299b9a6a_Postfix{._field_expr=_116817_d.get()._field_model, ._field_op=_116137_a.get()._field_setter.get()._field_kind})));;
}



inline jule::Bool _2299c813e_is_new_assign_ident(_2299bd7e9_ScopeChecker* _self_, jule::Str _119438_ident) {
	if ((_2276b42b1_is_ignore_ident(_119438_ident) || _119438_ident.empty())) {
		return false;
	};
	return (_229a50b23_def_by_ident((*_self_)._field_table.ptr(), _119438_ident,false) == nullptr);
}



inline jule::Bool _2299c85b2_check_structure_assign_op(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d44c1a_StructIns>& _120250_s, jule::Ptr<_228d36e1b_AssignSt>& _120270_a, jule::Ptr<_229a527d4_Data>& _120289_r) {
	jule::Ptr<_228de996d_FnIns> _120517_overload = nullptr;;
	{
		auto &_match_expr{ _120270_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_22cd2bd30:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_22cd2bd96:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_22cd2cca9:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_22cd2cd20:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_22cd2cd86:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_22cd2cdec:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_22cd2ce63:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_22cd2d02e:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_22cd2d095:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_22cd2d10b:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_22cd2bbed:;
			{
				_2299e1454_push_err(_self_.get()._field_s.ptr(), _120270_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120270_a.get()._field_setter.get()._field_kind),jule::Any(_228d1a5a3_to_str(_120250_s.ptr()))}));
				return false;
			}
		}
		_match_end_22cd2bb43:;
	};
	if ((_120517_overload == nullptr)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _120270_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120270_a.get()._field_setter.get()._field_kind),jule::Any(_228d1a5a3_to_str(_120250_s.ptr()))}));
		return false;
	};
	jule::Ptr<_228de8a9e_ParamIns> _123717_p = _120517_overload.get()._field_params[1LL];;
	return _2299e705e_check_assign_type(_self_.get()._field_s, _123717_p.get()._field_decl.get()._field_reference,_123717_p.get()._field_kind,_120289_r,_120270_a.get()._field_setter);
}



inline void _2299c8848_check_single_assign(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d36e1b_AssignSt>& _124144_a) {
	jule::Ptr<_229a527d4_Data> _124217_l = nullptr;;
	if ((!(_2276b42b1_is_ignore_ident(_124144_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_228d2c6b4_Expr> _124521_expr = _124144_a.get()._field_left[0LL].get()._field_expr;;
		_124217_l=_229a6ea21_eval_expr(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _124521_expr);
		if ((_124217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_229a54352_Eval> _125217_eval = nullptr;;
	if ((_124217_l != nullptr)) {
		_125217_eval=_2299e6756_evalp(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0),_124217_l.get()._field_kind);
	} else {
		_125217_eval=_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0));
	};
	_125217_eval.get()._field_unsafety=_2299c0c80_is_unsafe(_self_);
	jule::Ptr<_229a527d4_Data> _125917_r = _229a6ea21_eval_expr(_125217_eval, _124144_a.get()._field_right);;
	if ((_125917_r == nullptr)) {
		return;;
	};
	if ((_124217_l == nullptr)) {
		if (_229a7e4e2_void(_125917_r.get()._field_kind.ptr())) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _124144_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_125917_r));;
		return;;
	};
	if ((!(_22999c773_check_assign(_self_.get()._field_s,_124217_l,_125917_r,_124144_a.get()._field_setter)))) {
		return;;
	};
	if ((_229a8210a_tup(_125917_r.get()._field_kind.ptr()) != nullptr)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _124144_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_228dde853_OperandExprModel> _128117_lm = jule::new_ptr<_228dde853_OperandExprModel>(_228dde853_OperandExprModel{._field_kind=_124217_l.get()._field_kind, ._field_model=_124217_l.get()._field_model});;
	jule::Ptr<_228dde853_OperandExprModel> _128517_rm = jule::new_ptr<_228dde853_OperandExprModel>(_228dde853_OperandExprModel{._field_kind=_125917_r.get()._field_kind, ._field_model=_125917_r.get()._field_model});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_2299b9edd_Assign>(_2299b9edd_Assign{._field_l=_128117_lm, ._field_r=_128517_rm, ._field_op=_124144_a.get()._field_setter})));;
	if ((_124144_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_228d44c1a_StructIns> _129221_strct = _229a818bd_strct(_124217_l.get()._field_kind.ptr());;
		if ((_129221_strct != nullptr)) {
			_2299c85b2_check_structure_assign_op(_self_, _129221_strct,_124144_a,_125917_r);
			return;;
		};
		_124144_a.get()._field_setter.get()._field_kind=_124144_a.get()._field_setter.get()._field_kind.slice(0LL,(_124144_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_229a71c32_BinaryEval _129921_solver = static__229a72639_new(_125217_eval,_124144_a.get()._field_setter);;
		_125917_r=_229a77331_solve_explicit(&_129921_solver, _124217_l,_125917_r);
		if ((_125917_r == nullptr)) {
			return;;
		};
		_124144_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;;
	};
	_229a3d292_AssignTypeChecker _130817_checker = _229a3d292_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124217_l.get()._field_kind, ._field_d=_125917_r, ._field_error_token=_124144_a.get()._field_setter};;
	if (_229a3e419_check(&_130817_checker)) {
		_128517_rm.get()._field_model=_125917_r.get()._field_model;
		_128117_lm.get()._field_model=_124217_l.get()._field_model;
	};
}



inline void _2299c8d87___process_end_part_of_multi_assign(_2299bd7e9_ScopeChecker* _self_, jule::Ptr<_2299ba395_MultiAssign> _132057_st, jule::Ptr<_228d36e1b_AssignSt> _132113_a, jule::Ptr<_228d368cc_AssignLeft> _132131_lexpr, jule::Ptr<_229a527d4_Data> _132155_l, jule::Ptr<_229a527d4_Data> _132169_r) {
	if (_2276b42b1_is_ignore_ident(_132131_lexpr.get()._field_ident)) {
		if (_229a7e4e2_void(_132169_r.get()._field_kind.ptr())) {
			_2299e1454_push_err((*_self_)._field_s.ptr(), _132113_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(nullptr);;
		return;;
	};
	if ((_132113_a.get()._field_declarative && _2299c813e_is_new_assign_ident(&(*_self_), _132131_lexpr.get()._field_ident))) {
		if (_2299c2952_is_duplicated_ident(&(*_self_), 0LLU,_132131_lexpr.get()._field_ident)) {
			_2299e1454_push_err((*_self_)._field_s.ptr(), _132131_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132131_lexpr.get()._field_ident)}));
			_2299e1773_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_2299c11c0_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_229a0a4a1_Var> _133921_v = jule::new_ptr<_229a0a4a1_Var>(_229a0a4a1_Var{._field_scope=(*_self_)._field_scope, ._field_token=_132131_lexpr.get()._field_token, ._field_ident=_132131_lexpr.get()._field_ident, ._field_mutable=_132131_lexpr.get()._field_mutable, ._field_reference=_132131_lexpr.get()._field_reference, ._field_value=jule::new_ptr<_229a5385c_Value>(_229a5385c_Value{._field_expr=_132113_a.get()._field_right, ._field_data=_132169_r}), });;
		_229a02be6_check_var((*_self_)._field_s, _133921_v);
		_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(static_cast<jule::Any>(_133921_v));;
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_133921_v);;
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_133921_v));;
		return;;
	};
	if ((_132131_lexpr.get()._field_mutable || _132131_lexpr.get()._field_reference)) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _132131_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132131_lexpr.get()._field_ident)}));
		_2299e1773_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_22999c773_check_assign((*_self_)._field_s,_132155_l,_132169_r,_132113_a.get()._field_setter)))) {
		return;;
	};
	;
	_2299e9d75_check_validity_for_init_expr((*_self_)._field_s, _132155_l.get()._field_mutable,false,_132155_l.get()._field_kind,_132169_r,_132113_a.get()._field_setter);
	_229a3d292_AssignTypeChecker _137417_checker = _229a3d292_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_132155_l.get()._field_kind, ._field_d=_132169_r, ._field_error_token=_132113_a.get()._field_setter};;
	_229a3e419_check(&_137417_checker);
	_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(_132155_l.get()._field_model);;
}



inline void _2299c910c_check_ret_multi_assign(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d36e1b_AssignSt>& _138547_a) {
	jule::Ptr<_229a527d4_Data> _138617_rd = _229a6ea21_eval_expr(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _138547_a.get()._field_right);;
	if ((_138617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_229a527d4_Data>> _139117_r = _2299a0a40_get_datas_from_tuple_data(_138617_rd);;
	{
		
		if ((_138547_a.get()._field_left.len() > _139117_r.len())) {
			_case_begin_22cd4cc0d:;
			{
				_2299e1454_push_err(_self_.get()._field_s.ptr(), _138547_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138547_a.get()._field_left.len() < _139117_r.len())) {
			_case_begin_22cd4cc85:;
			{
				_2299e1454_push_err(_self_.get()._field_s.ptr(), _138547_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_22cd4cb53:;
	};
	jule::Ptr<_2299ba395_MultiAssign> _140217_st = jule::new_ptr<_2299ba395_MultiAssign>(_2299ba395_MultiAssign{._field_r=_138617_rd.get()._field_model});;
	if ((_229a8210a_tup(_138617_rd.get()._field_kind.ptr()) == nullptr)) {
		_140217_st.get()._field_r=static_cast<jule::Any>(jule::new_ptr<_228de23e4_TupleExprModel>(_228de23e4_TupleExprModel{._field_datas=_139117_r}));
	};
	{
		auto &expr = _138547_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_22cd50958:;
		if (it != expr.end()) {
			jule::I64 _141013_i = it - expr.begin();
			{
				jule::Ptr<_228d368cc_AssignLeft> _141121_lexpr = _138547_a.get()._field_left[_141013_i];;
				jule::Ptr<_229a527d4_Data> _141221_l = nullptr;;
				if (((!(_2276b42b1_is_ignore_ident(_141121_lexpr.get()._field_ident))) && ((!(_138547_a.get()._field_declarative)) || (!(_2299c813e_is_new_assign_ident(_self_.ptr(), _141121_lexpr.get()._field_ident)))))) {
					_141221_l=_229a6ea21_eval_expr(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _141121_lexpr.get()._field_expr);
					if ((_141221_l == nullptr)) {
						goto _iter_next_22cd50958;
					};
				};
				_2299c8d87___process_end_part_of_multi_assign(_self_.ptr(), _140217_st,_138547_a,_141121_lexpr,_141221_l,_139117_r[_141013_i]);
			}
			_iter_next_22cd50958:;
			++it;
			_141013_i++;
			goto _iter_begin_22cd50958;
		}
		_iter_end_22cd50958:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_140217_st));;
}



inline void _2299c9382_check_multi_assign(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d36e1b_AssignSt>& _142843_a) {
	{
		auto &_match_expr{ _142843_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d31982_FnCallExpr>>()) {
			_case_begin_22cd5496d:;
			{
				_2299c910c_check_ret_multi_assign(_self_, _142843_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2de02_UnsafeExpr>>()) {
			_case_begin_22cd549e5:;
			{
				{
					auto &_match_expr{ _142843_a.get()._field_right.get()._field_kind.operator jule::Ptr<_228d2de02_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_228d31982_FnCallExpr>>()) {
						_case_begin_22cd55cc1:;
						{
							_2299c910c_check_ret_multi_assign(_self_, _142843_a);
							return;;
						}
					}
					_match_end_22cd55c49:;
				};
			}
		}
		_match_end_22cd54264:;
	};
	jule::Slice<jule::Any> _144117_right = _2299a1579_get_expr_models(_142843_a.get()._field_right.get()._field_kind);;
	{
		
		if ((_142843_a.get()._field_left.len() > _144117_right.len())) {
			_case_begin_22cd56ae6:;
			{
				_2299e1454_push_err(_self_.get()._field_s.ptr(), _142843_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_142843_a.get()._field_left.len() < _144117_right.len())) {
			_case_begin_22cd56b6d:;
			{
				_2299e1454_push_err(_self_.get()._field_s.ptr(), _142843_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_22cd569a3:;
	};
	jule::Ptr<_228de23e4_TupleExprModel> _145217_right_tuple = jule::new_ptr<_228de23e4_TupleExprModel>();;
	jule::Ptr<_2299ba395_MultiAssign> _145417_st = jule::new_ptr<_2299ba395_MultiAssign>(_2299ba395_MultiAssign{._field_r=static_cast<jule::Any>(_145217_right_tuple)});;
	{
		auto &expr = _142843_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_22cd59445:;
		if (it != expr.end()) {
			jule::I64 _145813_i = it - expr.begin();
			{
				jule::Ptr<_228d368cc_AssignLeft> _145921_lexpr = _142843_a.get()._field_left[_145813_i];;
				jule::Ptr<_229a527d4_Data> _146021_l = nullptr;;
				if (((!(_2276b42b1_is_ignore_ident(_145921_lexpr.get()._field_ident))) && ((!(_142843_a.get()._field_declarative)) || (!(_2299c813e_is_new_assign_ident(_self_.ptr(), _145921_lexpr.get()._field_ident)))))) {
					_146021_l=_229a6ea21_eval_expr(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _145921_lexpr.get()._field_expr);
					if ((_146021_l == nullptr)) {
						goto _iter_next_22cd59445;
					};
				};
				jule::Ptr<_228d2c6b4_Expr> _147021_expr = jule::new_ptr<_228d2c6b4_Expr>(_228d2c6b4_Expr{._field_token=_142843_a.get()._field_right.get()._field_token, ._field_kind=_144117_right[_145813_i]});;
				jule::Ptr<_229a54352_Eval> _147421_eval = nullptr;;
				if ((_146021_l != nullptr)) {
					_147421_eval=_2299e6756_evalp(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0),_146021_l.get()._field_kind);
				} else {
					_147421_eval=_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0));
				};
				jule::Ptr<_229a527d4_Data> _148021_r = _229a6ea21_eval_expr(_147421_eval, _147021_expr);;
				if ((_148021_r == nullptr)) {
					goto _iter_next_22cd59445;
				};
				_145217_right_tuple.get()._field_datas = jule::alloc_for_append(_145217_right_tuple.get()._field_datas,1);_145217_right_tuple.get()._field_datas.__push(_148021_r);;
				_2299c8d87___process_end_part_of_multi_assign(_self_.ptr(), _145417_st,_142843_a,_145921_lexpr,_146021_l,_148021_r);
			}
			_iter_next_22cd59445:;
			++it;
			_145813_i++;
			goto _iter_begin_22cd59445;
		}
		_iter_end_22cd59445:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_145417_st));;
}



inline void _2299c9607_check_assign_st(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d36e1b_AssignSt> _149339_a) {
	{
		
		if (_2276b635c_is_postfix_op(_149339_a.get()._field_setter.get()._field_kind)) {
			_case_begin_22cd61051:;
			{
				_2299c7d31_check_postfix(_self_, _149339_a);
			}
		}
		else if (((_149339_a.get()._field_left.len() == 1LL) && (!(_149339_a.get()._field_declarative)))) {
			_case_begin_22cd60c21:;
			{
				_2299c8848_check_single_assign(_self_, _149339_a);
			}
		}
		else {
			_case_begin_22cd60baa:;
			{
				_2299c9382_check_multi_assign(_self_, _149339_a);
			}
		}
		_match_end_22cd60649:;
	};
}



inline jule::Ptr<_2299b6c10_Scope> _2299c99ae_check_case_scope(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_2299bb42e_Case>& _150437_c, jule::Ptr<_228d384b1_ScopeTree>& _150452_tree) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _150517_ssc = _2299cdd8c_new_child_checker(_self_);;
	_150517_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150437_c));
	return _2299c3931_check_child_sc(_self_, _150452_tree,_150517_ssc);
}



inline jule::Ptr<_2299bb42e_Case> _2299c9ea9_check_case(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_2299ba8d4_Match> _151034_m, jule::I64 _151045_i, jule::Ptr<_228d3ec6a_Case> _151057_c, jule::Ptr<_229a527d4_Data> _151076_expr) {
	jule::Ptr<_2299bb42e_Case> _151117__case = _151034_m.get()._field_cases[_151045_i];;
	_151117__case.get()._field_exprs=jule::Slice<jule::Ptr<_229a527d4_Data>>::alloc(0LL,_151057_c.get()._field_exprs.len());
	jule::Bool _151317_generic_matched = false;;
	jule::Ptr<_229a54352_Eval> _151417_eval = _2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0));;
	{
		auto &expr = _151057_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_22cd66001:;
		if (it != expr.end()) {
			jule::Ptr<_228d2c6b4_Expr> _151521_e = *it;
			{
				jule::Ptr<_229a527d4_Data> _151621_d = _229a6e405_eval_expr_kind(_151417_eval, _151521_e.get()._field_kind);;
				if ((_151621_d == nullptr)) {
					goto _iter_next_22cd66001;
				};
				if (_151034_m.get()._field_type_match) {
					_151117__case.get()._field_exprs = jule::alloc_for_append(_151117__case.get()._field_exprs,1);_151117__case.get()._field_exprs.__push(_151621_d);;
					if ((_22999cae7_count_match_type(_151034_m,_151621_d.get()._field_kind) > 1LL)) {
						_2299e1454_push_err(_self_.get()._field_s.ptr(), _151521_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_151621_d.get()._field_kind.ptr()))}));
					};
					if (_151076_expr.get()._field_kind.get()._field_generic) {
						_151317_generic_matched=(_151317_generic_matched || _229a7da63_equals(_151076_expr.get()._field_kind, _151621_d.get()._field_kind));
					} else {
						if ((_229a80e1c_tenm(_151076_expr.get()._field_kind.ptr()) != nullptr)) {
							_2299e74d2_check_type_compatibility(_self_.get()._field_s, _151076_expr.get()._field_kind,_151621_d.get()._field_kind,_151521_e.get()._field_token);
						} else {
							jule::Ptr<_22923d1bd_Trait> _153129_trt = _229a81b32_trt(_151076_expr.get()._field_kind.ptr());;
							if ((_153129_trt != nullptr)) {
								_2299e74d2_check_type_compatibility(_self_.get()._field_s, _151076_expr.get()._field_kind,_151621_d.get()._field_kind,_151521_e.get()._field_token);
							};
						};
					};
					goto _iter_next_22cd66001;
				};
				if (_151621_d.get()._field_decl) {
					_2299e1454_push_err(_self_.get()._field_s.ptr(), _151521_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_2299e1773_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_22cd66001;
				};
				_151117__case.get()._field_exprs = jule::alloc_for_append(_151117__case.get()._field_exprs,1);_151117__case.get()._field_exprs.__push(_151621_d);;
				_229a3d292_AssignTypeChecker _154921_checker = _229a3d292_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_151076_expr.get()._field_kind, ._field_d=_151621_d, ._field_error_token=_151521_e.get()._field_token};;
				_229a3e419_check(&_154921_checker);
			}
			_iter_next_22cd66001:;
			++it;
			goto _iter_begin_22cd66001;
		}
		_iter_end_22cd66001:;
	};
	if ((((!(_151034_m.get()._field_type_match)) || (!(_151076_expr.get()._field_kind.get()._field_generic))) || _151317_generic_matched)) {
		_151117__case.get()._field_scope=_2299c99ae_check_case_scope(_self_, _151117__case,_151057_c.get()._field_scope);
	};
	return _151117__case;
}



inline void _2299ca372_check_cases(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d40441_MatchCase>& _156336_m, jule::Ptr<_2299ba8d4_Match> _156355_rm, jule::Ptr<_229a527d4_Data> _156371_expr) {
	_156355_rm.get()._field_cases=jule::Slice<jule::Ptr<_2299bb42e_Case>>::alloc(0LL,_156336_m.get()._field_cases.len());
	{
		auto &expr = _156336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_22cd6e69c:;
		if (it != expr.end()) {
			jule::I64 _156513_i = it - expr.begin();
			{
				jule::Ptr<_2299bb42e_Case> _156621__case = jule::new_ptr<_2299bb42e_Case>(_2299bb42e_Case{._field_owner=_156355_rm, });;
				if ((_156513_i > 0LL)) {
					_156355_rm.get()._field_cases[(_156513_i - 1LL)].get()._field_next=_156621__case;
				};
				_156355_rm.get()._field_cases = jule::alloc_for_append(_156355_rm.get()._field_cases,1);_156355_rm.get()._field_cases.__push(_156621__case);;
			}
			_iter_next_22cd6e69c:;
			++it;
			_156513_i++;
			goto _iter_begin_22cd6e69c;
		}
		_iter_end_22cd6e69c:;
	};
	if (((_156355_rm.get()._field_default != nullptr) && (_156336_m.get()._field_cases.len() > 0LL))) {
		_156355_rm.get()._field_cases[(_156355_rm.get()._field_cases.len() - 1LL)].get()._field_next=_156355_rm.get()._field_default;
	};
	{
		auto &expr = _156336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_22cd72c22:;
		if (it != expr.end()) {
			jule::I64 _157914_i = it - expr.begin();
			jule::Ptr<_228d3ec6a_Case> _157921_c = *it;
			{
				_2299c9ea9_check_case(_self_, _156355_rm,_157914_i,_157921_c,_156371_expr);
			}
			_iter_next_22cd72c22:;
			++it;
			_157914_i++;
			goto _iter_begin_22cd72c22;
		}
		_iter_end_22cd72c22:;
	};
}



inline jule::Ptr<_2299bb42e_Case> _2299ca729_check_default(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_2299ba8d4_Match> _158437_m, jule::Ptr<_228d3db9d_Else> _158452_d) {
	jule::Ptr<_2299bb42e_Case> _158517_def = jule::new_ptr<_2299bb42e_Case>(_2299bb42e_Case{._field_owner=_158437_m, });;
	_158517_def.get()._field_scope=_2299c99ae_check_case_scope(_self_, _158517_def,_158452_d.get()._field_scope);
	return _158517_def;
}



inline void _2299ca99e_check_comptime_panic(_2299bd7e9_ScopeChecker* _self_, jule::Ptr<_2299b6c10_Scope>& _159240_s) {
	if ((_159240_s.get()._field_stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159713_stmt = _159240_s.get()._field_stmts[0LL];;
	{
		auto &_match_expr{ _159713_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_229a527d4_Data>>()) {
			_case_begin_22cd76033:;
			{
				jule::Ptr<_229a527d4_Data> _160017_d = _159713_stmt.operator jule::Ptr<_229a527d4_Data>();;
				{
					auto &_match_expr{ _160017_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>>()) {
						_case_begin_22cd76d69:;
						{
							jule::Ptr<_228de2d84_BuiltinPanicCallExprModel> _160321_m = _160017_d.get()._field_model.operator jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _160321_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_228d7b4d2_Const>>()) {
									_case_begin_22cd77d59:;
									{
										jule::Ptr<_228d7b4d2_Const> _160625_c = _160321_m.get()._field_expr.operator jule::Ptr<_228d7b4d2_Const>();;
										if (_228dda09b_is_str(_160625_c.ptr())) {
											_2299e1454_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_228dd7c03_read_str(_160625_c.ptr()))}));
										};
									}
								}
								_match_end_22cd77cb0:;
							};
						}
					}
					_match_end_22cd76c26:;
				};
			}
		}
		_match_end_22cd75ecd:;
	};
}



inline void _2299cacbd_push_type_match(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_2299ba8d4_Match> _161539_tm, jule::Ptr<_228d40441_MatchCase>& _161556_m) {
	if (_161539_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _161539_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_22cd77320:;
			if (it != expr.end()) {
				jule::Ptr<_2299bb42e_Case> _161925_c = *it;
				{
					if ((_161925_c.get()._field_scope != nullptr)) {
						_2299ca99e_check_comptime_panic(_self_.ptr(), _161925_c.get()._field_scope);
						_161539_tm.get()._field_default=_161925_c;
						_161539_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_22cd77320:;
				++it;
				goto _iter_begin_22cd77320;
			}
			_iter_end_22cd77320:;
		};
		if ((_161556_m.get()._field_default != nullptr)) {
			_161539_tm.get()._field_cases=nullptr;
			_161539_tm.get()._field_default=_2299ca729_check_default(_self_, _161539_tm,_161556_m.get()._field_default);
			if ((_161539_tm.get()._field_default != nullptr)) {
				_2299ca99e_check_comptime_panic(_self_.ptr(), _161539_tm.get()._field_default.get()._field_scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_161539_tm));;
}



inline void _2299cb043_check_type_match(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d40441_MatchCase>& _163941_m) {
	jule::Ptr<_229a527d4_Data> _164017_d = _229a6e713_eval(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _163941_m.get()._field_expr);;
	if ((_164017_d == nullptr)) {
		return;;
	};
	if (((!(_164017_d.get()._field_kind.get()._field_generic)) && (!(((((_229a8046b_prim(_164017_d.get()._field_kind.ptr()) != nullptr) && _229a862c9_is_any(_229a8046b_prim(_164017_d.get()._field_kind.ptr()).ptr())) || (_229a81b32_trt(_164017_d.get()._field_kind.ptr()) != nullptr)) || (_229a80e1c_tenm(_164017_d.get()._field_kind.ptr()) != nullptr)))))) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _163941_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2299ba8d4_Match> _165117_tm = jule::new_ptr<_2299ba8d4_Match>(_2299ba8d4_Match{._field_expr=_164017_d, ._field_type_match=true, });;
	if (((!(_165117_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_163941_m.get()._field_default != nullptr))) {
		_165117_tm.get()._field_default=_2299ca729_check_default(_self_, _165117_tm,_163941_m.get()._field_default);
	};
	_2299ca372_check_cases(_self_, _163941_m,_165117_tm,_164017_d);
	_2299cacbd_push_type_match(_self_, _165117_tm,_163941_m);
}



inline void _2299cb2b8_check_common_match(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d40441_MatchCase>& _166443_m) {
	jule::Ptr<_229a527d4_Data> _166517_d = nullptr;;
	if ((_166443_m.get()._field_expr == nullptr)) {
		_166517_d=jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_constant=static__228dd6680_new_bool(true)});
		_166517_d.get()._field_model=static_cast<jule::Any>(_166517_d.get()._field_constant);
	} else {
		_166517_d=_229a6ea21_eval_expr(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _166443_m.get()._field_expr);
		if ((_166517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_2299ba8d4_Match> _167917_mc = jule::new_ptr<_2299ba8d4_Match>(_2299ba8d4_Match{._field_expr=_166517_d, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_167917_mc));;
	if ((_166443_m.get()._field_default != nullptr)) {
		_167917_mc.get()._field_default=_2299ca729_check_default(_self_, _167917_mc,_166443_m.get()._field_default);
	};
	_2299ca372_check_cases(_self_, _166443_m,_167917_mc,_166517_d);
}



inline void _2299cb53d_check_match(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d40441_MatchCase> _169135_m) {
	if (_169135_m.get()._field_type_match) {
		_2299cb043_check_type_match(_self_, _169135_m);
		return;;
	};
	_2299cb2b8_check_common_match(_self_, _169135_m);
}



inline void _2299cb7b3_check_fall(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d362c2_FallSt> _169930_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_stmts.len())) || _2299c1698_is_deferred(_self_))) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _169930_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_2299bb42e_Case* _170717__case = ((_2299bb42e_Case*)(_self_.get()._field_cse));;
	if ((_170717__case->_field_next == nullptr)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _169930_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_2299e1773_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_2299bb9d4_FallSt>(_2299bb9d4_FallSt{._field_dest_case=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170717__case->_field_next))})));;
}



inline jule::Ptr<_2299b90db_BreakSt> _2299cbac1_check_break_with_label(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3cebb_BreakSt> _171942_b) {
	jule::Ptr<_2299b90db_BreakSt> _172017_brk = _2299cbdce_check_plain_break(_self_, _171942_b);;
	if ((_172017_brk == nullptr)) {
		return nullptr;
	};
	_172017_brk.get()._field_it=0LLU;
	_172017_brk.get()._field_mtch=0LLU;
	jule::Ptr<_2299bc562_ScopeLabel> _173017_label = _229981d84_find_label_parent(_171942_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
	if ((_173017_label == nullptr)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	_173017_label.get()._field_used=true;
	if (((_173017_label.get()._field_pos + 1LL) >= _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	jule::I64 _174313_i = (_173017_label.get()._field_pos + 1LL);;
	if ((_174313_i >= _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _174721_st = _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts[_174313_i];;
		{
			auto &_match_expr{ _174721_st };
			
			if (_match_expr.type_is<jule::Ptr<_2299b79d0_InfIter>>()) {
				_case_begin_22cd90e71:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_2299b79d0_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_2299b8838_RangeIter>>()) {
				_case_begin_22cd944c4:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_2299b8838_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_2299b7e53_WhileIter>>()) {
				_case_begin_22cd9453a:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_2299b7e53_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_2299ba8d4_Match>>()) {
				_case_begin_22cd945a1:;
				{
					_172017_brk.get()._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_2299ba8d4_Match>()));
				}
			}
			else {
				_case_begin_22cd94370:;
				{
					_2299e1454_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_22cd94293:;
		};
	};
	if ((_172017_brk.get()._field_it != 0LLU)) {
		if ((!(_2299c701c_check_valid_break_label(_self_, _172017_brk.get()._field_it)))) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		};
	};
	if ((_172017_brk.get()._field_mtch != 0LLU)) {
		if ((!(_2299c701c_check_valid_break_label(_self_, _172017_brk.get()._field_mtch)))) {
			_2299e1454_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		};
	};
	return _172017_brk;
}



inline jule::Ptr<_2299b90db_BreakSt> _2299cbdce_check_plain_break(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3cebb_BreakSt> _177737_b) {
	if (_2299c1698_is_deferred(_self_)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _177737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2299bd7e9_ScopeChecker> _178317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_178317_scope.get()._field_it == 0LLU) && (_178317_scope.get()._field_cse == 0LLU)) && (_178317_scope.get()._field_parent != nullptr)) && (_178317_scope.get()._field_owner == nullptr))) {
			_case_begin_22cd9a84e:;
			{
				_178317_scope=_178317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_178317_scope.get()._field_it != 0LLU)) {
			_case_begin_22cd9a8c6:;
			{
				return jule::new_ptr<_2299b90db_BreakSt>(_2299b90db_BreakSt{._field_it=_178317_scope.get()._field_it, });
			}
		}
		else if ((_178317_scope.get()._field_cse != 0LLU)) {
			_case_begin_22cd9a94d:;
			{
				return jule::new_ptr<_2299b90db_BreakSt>(_2299b90db_BreakSt{._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_2299bb42e_Case*)(_178317_scope.get()._field_cse))->_field_owner))});
			}
		}
		_match_end_22cd9a783:;
	};
	_2299e1454_push_err(_self_.get()._field_s.ptr(), _177737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _2299cc154_check_break(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3cebb_BreakSt> _179931_b) {
	if ((_179931_b.get()._field_label != nullptr)) {
		jule::Ptr<_2299b90db_BreakSt> _180121_brk = _2299cbac1_check_break_with_label(_self_, _179931_b);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_180121_brk));;
		return;;
	};
	jule::Ptr<_2299b90db_BreakSt> _180617_brk = _2299cbdce_check_plain_break(_self_, _179931_b);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_180617_brk));;
}



inline void _2299cc3c9_check_ret(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d3b33d_RetSt> _181033_r) {
	if (_2299c1698_is_deferred(_self_)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _181033_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_2299bbe57_RetSt> _181517_rt = jule::new_ptr<_2299bbe57_RetSt>(_2299bbe57_RetSt{._field_func=_2299c190c_get_root(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_181517_rt));;
	jule::Ptr<_229a4abc8_RetTypeChecker> _182017_rtc = jule::new_ptr<_229a4abc8_RetTypeChecker>(_229a4abc8_RetTypeChecker{._field_sc=_self_, ._field_f=_181517_rt.get()._field_func, ._field_error_token=_181033_r.get()._field_token, });;
	jule::Bool _182513_ok = _229a4bab9_check(_182017_rtc.ptr(), _181033_r.get()._field_expr);;
	if ((!(_182513_ok))) {
		return;;
	};
	if (((_181033_r.get()._field_expr == nullptr) && (_182017_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_181517_rt.get()._field_vars=_182017_rtc.get()._field_vars;
	if ((_181033_r.get()._field_expr != nullptr)) {
		_181517_rt.get()._field_expr=_182017_rtc.get()._field_model;
	};
}



inline void _2299cc64e_check_use_expr(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d2d055_UseExpr> _184134_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_2299c1698_is_deferred(_self_)) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_stmts.len())) {
		_2299e1454_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _2299cc8c4_check_node(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Any& _185735_node) {
	{
		auto &_match_expr{ _185735_node };
		
		if (_match_expr.type_is<jule::Ptr<_228d384b1_ScopeTree>>()) {
			_case_begin_22cda8dce:;
			{
				_2299c3eb4_check_anon_scope(_self_, _185735_node.operator jule::Ptr<_228d384b1_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3ae86_VarDecl>>()) {
			_case_begin_22cda88c3:;
			{
				_2299c2bc7_check_var_decl(_self_, _185735_node.operator jule::Ptr<_228d3ae86_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3e7e7_TypeAliasDecl>>()) {
			_case_begin_22cda8cd0:;
			{
				_2299c2e4c_check_type_alias_decl(_self_, _185735_node.operator jule::Ptr<_228d3e7e7_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2c6b4_Expr>>()) {
			_case_begin_22cda9121:;
			{
				_2299c4558_check_expr(_self_, _185735_node.operator jule::Ptr<_228d2c6b4_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2e2a9_CoExpr>>()) {
			_case_begin_22cda92ca:;
			{
				_2299c47cd_check_co_expr(_self_, _185735_node.operator jule::Ptr<_228d2e2a9_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3e121_Conditional>>()) {
			_case_begin_22cda9341:;
			{
				_2299c516e_check_conditional(_self_, _185735_node.operator jule::Ptr<_228d3e121_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3b99d_Iter>>()) {
			_case_begin_22cda93a7:;
			{
				_2299c68ce_check_iter(_self_, _185735_node.operator jule::Ptr<_228d3b99d_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3d373_ContSt>>()) {
			_case_begin_22cda941d:;
			{
				_2299c75b1_check_cont(_self_, _185735_node.operator jule::Ptr<_228d3d373_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d35b2e_LabelSt>>()) {
			_case_begin_22cda9484:;
			{
				_2299c7836_check_label(_self_, _185735_node.operator jule::Ptr<_228d35b2e_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d35ed6_GotoSt>>()) {
			_case_begin_22cda94ea:;
			{
				_2299c7aab_push_goto(_self_, _185735_node.operator jule::Ptr<_228d35ed6_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d36e1b_AssignSt>>()) {
			_case_begin_22cda9561:;
			{
				_2299c9607_check_assign_st(_self_, _185735_node.operator jule::Ptr<_228d36e1b_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d40441_MatchCase>>()) {
			_case_begin_22cda95c7:;
			{
				_2299cb53d_check_match(_self_, _185735_node.operator jule::Ptr<_228d40441_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d362c2_FallSt>>()) {
			_case_begin_22cda963d:;
			{
				_2299cb7b3_check_fall(_self_, _185735_node.operator jule::Ptr<_228d362c2_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3cebb_BreakSt>>()) {
			_case_begin_22cda96a4:;
			{
				_2299cc154_check_break(_self_, _185735_node.operator jule::Ptr<_228d3cebb_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3b33d_RetSt>>()) {
			_case_begin_22cda971a:;
			{
				_2299cc3c9_check_ret(_self_, _185735_node.operator jule::Ptr<_228d3b33d_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2d055_UseExpr>>()) {
			_case_begin_22cda9781:;
			{
				_2299cc64e_check_use_expr(_self_, _185735_node.operator jule::Ptr<_228d2d055_UseExpr>());
			}
		}
		else {
			_case_begin_22cda8a49:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_22cda896c:;
	};
}



inline void _2299ccaa0_check_result(jule::Ptr<_2299bd7e9_ScopeChecker> _self_) {
	_228d37da6_Stmt _189717_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _189717_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_228d2d055_UseExpr>>()) {
			_case_begin_22cdb36ad:;
			{
				jule::Ptr<_228d2d055_UseExpr> _190021_ue = _189717_stmt._field_data.operator jule::Ptr<_228d2d055_UseExpr>();;
				jule::Ptr<_229a527d4_Data> _190121_d = _229a6ea21_eval_expr(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _190021_ue.get()._field_expr);;
				if ((_190121_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_190121_d));;
				jule::Ptr<_229a4abc8_RetTypeChecker> _190621_rtc = jule::new_ptr<_229a4abc8_RetTypeChecker>(_229a4abc8_RetTypeChecker{._field_sc=_self_, ._field_types=_228dea452_types(_self_.get()._field_result.ptr()), ._field_error_token=_190021_ue.get()._field_expr.get()._field_token, });;
				_229a4bab9_check(_190621_rtc.ptr(), _190021_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2c6b4_Expr>>()) {
			_case_begin_22cdb3724:;
			{
				jule::Ptr<_228d2c6b4_Expr> _191321_expr = _189717_stmt._field_data.operator jule::Ptr<_228d2c6b4_Expr>();;
				jule::Ptr<_229a527d4_Data> _191421_d = _229a6ea21_eval_expr(_2299e6a64_eval(_self_.get()._field_s, jule::Trait<_229a98e02_Lookup>(_self_, 0)), _191321_expr);;
				if ((_191421_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _191421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_228de3824_BuiltinErrorCallExprModel>>()) {
						_case_begin_22cdb7e10:;
						{
							jule::Ptr<_228de3824_BuiltinErrorCallExprModel> _192025_m = _191421_d.get()._field_model.operator jule::Ptr<_228de3824_BuiltinErrorCallExprModel>();;
							_2299c42d3_process_error_call(_self_, _192025_m,_191321_expr.get()._field_token);
							_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_191421_d));;
						}
					}
					else {
						_case_begin_22cdb7cbc:;
						{
							return;;
						}
					}
					_match_end_22cdb7c67:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d35ed6_GotoSt>>() || _match_expr.type_is<jule::Ptr<_228d3cebb_BreakSt>>() || _match_expr.type_is<jule::Ptr<_228d3d373_ContSt>>() || _match_expr.type_is<jule::Ptr<_228d3b33d_RetSt>>()) {
			_case_begin_22cdb2d72:;
			{
				_2299cc8c4_check_node(_self_, _189717_stmt._field_data);
			}
		}
		else {
			_case_begin_22cdb2d0b:;
			{
				_2299cc8c4_check_node(_self_, _189717_stmt._field_data);
				return;;
			}
		}
		_match_end_22cdb2b85:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _2299ccc7b_check_tree(jule::Ptr<_2299bd7e9_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _194217_n = _self_.get()._field_tree.get()._field_stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_194217_n)--;
	};
	for (; (_self_.get()._field_i < _194217_n); (_self_.get()._field_i)++) {
		{
			_228d37da6_Stmt _195021_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];;
			_2299cc8c4_check_node(_self_, _195021_stmt._field_data);
			if (_2299c1434_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_22cdbb353:;
	}
	_iter_end_22cdbb353:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL))) {
		_2299ccaa0_check_result(_self_);
	};
}



inline void _2299cd09a_check_goto(_2299bd7e9_ScopeChecker* _self_, jule::Ptr<_2299bc9d5_ScopeGoto>& _196134_gt, jule::Ptr<_2299bc562_ScopeLabel>& _196155_label) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _196217_gtsc = _196134_gt.get()._field_scope;;
	while (((_196217_gtsc.get()._field_child_index - 1LL) > _196155_label.get()._field_scope.get()._field_child_index)) {
		{
			_196217_gtsc=_196217_gtsc.get()._field_parent;
		}
	_iter_next_22cdbe444:;
	}
	_iter_end_22cdbe444:;;
	jule::I64 _196717_n = 0LL;;
	if ((_196217_gtsc.get()._field_scope == _196155_label.get()._field_scope.get()._field_scope)) {
		if ((_196134_gt.get()._field_pos > _196155_label.get()._field_pos)) {
			return;;
		};
		_196717_n=_196134_gt.get()._field_pos;
	};
	jule::I64 _198017_i = (_196155_label.get()._field_pos - 1LL);;
	if ((_196717_n == 0LL)) {
		{
			auto &expr = _196155_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_22cdc1a40:;
			if (it != expr.end()) {
				jule::I64 _198317_j = it - expr.begin();
				jule::Any _198320_stmt = *it;
				{
					if (_22998eab7_stmt_is_goto_scope(_198320_stmt,_196217_gtsc.get()._field_scope)) {
						_196717_n=_198317_j;
						goto _iter_end_22cdc1a40;
					};
				}
				_iter_next_22cdc1a40:;
				++it;
				_198317_j++;
				goto _iter_begin_22cdc1a40;
			}
			_iter_end_22cdc1a40:;
		};
	};
	for (; (_198017_i >= _196717_n); (_198017_i)--) {
		{
			jule::Any _199321_stmt = _196155_label.get()._field_scope.get()._field_scope.get()._field_stmts[_198017_i];;
			if (_2299b6acd_stmt_is_def(_199321_stmt)) {
				_2299e1454_push_err((*_self_)._field_s.ptr(), _196134_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_196134_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;;
			};
		}
	_iter_next_22cdc15ab:;
	}
	_iter_end_22cdc15ab:;;
}



inline void _2299cd276_check_gotos(_2299bd7e9_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_22cdc3998:;
		if (it != expr.end()) {
			jule::Ptr<_2299bc9d5_ScopeGoto> _200221_gt = *it;
			{
				jule::Ptr<_2299bc562_ScopeLabel> _200321_label = _2299c259a_find_label_all(&(*_self_), _200221_gt.get()._field_gt.get()._field_label.get()._field_kind);;
				if ((_200321_label == nullptr)) {
					_2299e1454_push_err((*_self_)._field_s.ptr(), _200221_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_200221_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_22cdc3998;
				};
				_200321_label.get()._field_used=true;
				_2299cd09a_check_goto(&(*_self_), _200221_gt,_200321_label);
			}
			_iter_next_22cdc3998:;
			++it;
			goto _iter_begin_22cdc3998;
		}
		_iter_end_22cdc3998:;
	};
}



inline void _2299cd452_check_labels(_2299bd7e9_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_22cdc6e41:;
		if (it != expr.end()) {
			jule::Ptr<_2299bc562_ScopeLabel> _201516_l = *it;
			{
				if ((!(_201516_l.get()._field_used))) {
					_2299e1454_push_err((*_self_)._field_s.ptr(), _201516_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201516_l.get()._field_label.get()._field_ident)}));
				};
			}
			_iter_next_22cdc6e41:;
			++it;
			goto _iter_begin_22cdc6e41;
		}
		_iter_end_22cdc6e41:;
	};
}



inline void _2299cd62d_check_vars(_2299bd7e9_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_22cdc732b:;
		if (it != expr.end()) {
			jule::Ptr<_229a0a4a1_Var> _202316_v = *it;
			{
				if (((((!(_202316_v.get()._field_used)) && (!(_2276b42b1_is_ignore_ident(_202316_v.get()._field_ident)))) && (!(_2276b4558_is_anon_ident(_202316_v.get()._field_ident)))) && (_202316_v.get()._field_ident != jule::Str("self", 4)))) {
					_2299e1454_push_err((*_self_)._field_s.ptr(), _202316_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202316_v.get()._field_ident)}));
				};
			}
			_iter_next_22cdc732b:;
			++it;
			goto _iter_begin_22cdc732b;
		}
		_iter_end_22cdc732b:;
	};
}



inline void _2299cd809_check_aliases(_2299bd7e9_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_22cdc90a8:;
		if (it != expr.end()) {
			jule::Ptr<_229a7c666_TypeAlias> _203116_a = *it;
			{
				if ((((!(_203116_a.get()._field_used)) && (!(_2276b42b1_is_ignore_ident(_203116_a.get()._field_ident)))) && (!(_2276b4558_is_anon_ident(_203116_a.get()._field_ident))))) {
					_2299e1454_push_err((*_self_)._field_s.ptr(), _203116_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_203116_a.get()._field_ident)}));
				};
			}
			_iter_next_22cdc90a8:;
			++it;
			goto _iter_begin_22cdc90a8;
		}
		_iter_end_22cdc90a8:;
	};
}



inline void _2299cdb28_check(jule::Ptr<_2299bd7e9_ScopeChecker> _self_, jule::Ptr<_228d384b1_ScopeTree>& _203930_tree, jule::Ptr<_2299b6c10_Scope>& _203953_s) {
	_203953_s.get()._field_deferred=_203930_tree.get()._field_deferred;
	_203953_s.get()._field_unsafety=_203930_tree.get()._field_unsafety;
	jule::I64 _204313_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_203930_tree;
	_self_.get()._field_scope=_203953_s;
	_2299ccc7b_check_tree(_self_);
	if ((_204313_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_2299cd62d_check_vars(_self_.ptr());
		_2299cd809_check_aliases(_self_.ptr());
		if (_2299c0ee4_is_root(_self_.ptr())) {
			_2299cd276_check_gotos(_self_.ptr());
			_2299cd452_check_labels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_2299bd7e9_ScopeChecker> _2299cdd8c_new_child_checker(jule::Ptr<_2299bd7e9_ScopeChecker> _self_) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _206317_base = _22998bd7d_new_scope_checker_base(_self_.get()._field_s,nullptr);;
	_206317_base.get()._field_parent=_self_;
	_206317_base.get()._field_labels=_self_.get()._field_labels;
	_206317_base.get()._field_gotos=_self_.get()._field_gotos;
	_206317_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _206317_base;
}







std::ostream &operator<<(std::ostream &_Stream, _2299bd7e9_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2299ced7c_check_cdef(_2299ce93c_DirectiveChecker* _self_, jule::Ptr<_228ce499a_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_228de6cbc_Fn>>()) {
			_case_begin_22cdd1896:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_228de6cbc_Fn>().get()._field_cpp_linked) {
					goto _match_end_22cdd1ad8;
				};
				goto _case_begin_22cdd1b3d;
			}
		}
		else {
			_case_begin_22cdd1b3d:;
			{
				_2299e1454_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_22cdd1ad8:;
	};
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _2299d0102_check_typedef(_2299ce93c_DirectiveChecker* _self_, jule::Ptr<_228ce499a_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
			_case_begin_22cdd4976:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_228d188c0_Struct>().get()._field_cpp_linked) {
					goto _match_end_22cdd4338;
				};
				goto _case_begin_22cdd438d;
			}
		}
		else {
			_case_begin_22cdd438d:;
			{
				_2299e1454_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_22cdd4338:;
	};
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _2299d0377_check_derive(_2299ce93c_DirectiveChecker* _self_, jule::Ptr<_228ce499a_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
			_case_begin_22cdd688a:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_228d188c0_Struct>().get()._field_cpp_linked))) {
					goto _match_end_22cdd6aaa;
				};
				goto _case_begin_22cdd6b10;
			}
		}
		else {
			_case_begin_22cdd6b10:;
			{
				_2299e1454_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_22cdd6aaa:;
	};
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_2299e1773_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_22cdda592:;
		}
		else {
			_case_begin_22cdd6c42:;
			{
				_2299e1454_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_22cdda152:;
	};
}



inline void _2299d05ec_check_namespace(_2299ce93c_DirectiveChecker* _self_, jule::Ptr<_228ce499a_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
			_case_begin_22cddc055:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_228d188c0_Struct>().get()._field_cpp_linked))) {
					_2299e1454_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de6cbc_Fn>>()) {
			_case_begin_22cddb609:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_228de6cbc_Fn>().get()._field_cpp_linked))) {
					_2299e1454_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
			_case_begin_22cddba9e:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_229a0a4a1_Var>().get()._field_cpp_linked))) {
					_2299e1454_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_22cddb96c:;
			{
				_2299e1454_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_22cddb917:;
	};
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_2276b1a1c_Token> _9913_arg = _7439_d.get()._field_args[0LL];;
	if ((_9913_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_kind[0LL] != '\"')) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
			_case_begin_22cde51a1:;
			{
				if ((_229a77a3a_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_228ce499a_Directive> _11625_typedef = jule::new_ptr<_228ce499a_Directive>(_228ce499a_Directive{._field_tag=_7439_d.get()._field_tag, });;
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_228ce499a_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_22cde307d:;
	};
}



inline void _2299d0872_check_deprecated(_2299ce93c_DirectiveChecker* _self_, jule::Ptr<_228ce499a_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
			_case_begin_22cde5e1b:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_228d188c0_Struct>().get()._field_cpp_linked) {
					_2299e1454_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de6cbc_Fn>>()) {
			_case_begin_22cde7439:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_228de6cbc_Fn>().get()._field_cpp_linked) {
					_2299e1454_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
			_case_begin_22cde74a0:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_229a0a4a1_Var>().get()._field_cpp_linked) {
					_2299e1454_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_22cde6d40:;
			{
				_2299e1454_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_22cde5712:;
	};
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;;
	};
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_2276b1a1c_Token> _15013_arg = _12540_d.get()._field_args[0LL];;
	if ((_15013_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_kind[0LL] != '\"')) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _2299d0ae7_check_test(_2299ce93c_DirectiveChecker* _self_, jule::Ptr<_228ce499a_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_228de6cbc_Fn>>()) {
			_case_begin_22cdeec16:;
			{
				jule::Ptr<_228de6cbc_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_228de6cbc_Fn>();;
				if ((((!(_16717_f.get()._field_cpp_linked)) && (!(_228de796b_is_init(_16717_f.ptr())))) && (!(_228de7707_is_entry_point(_16717_f.ptr()))))) {
					goto _match_end_22ce0072d;
				};
				if (_228de7493_is_method(_16717_f.ptr())) {
					_2299e1454_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_22ce0072d;
				};
				goto _case_begin_22ce00783;
			}
		}
		else {
			_case_begin_22ce00783:;
			{
				_2299e1454_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_22ce0072d:;
	};
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_2299e1454_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _2299d0d6c_check_directive(_2299ce93c_DirectiveChecker* _self_, jule::Ptr<_228ce499a_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_22ce05029:;
			{
				_2299ced7c_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_22ce046ee:;
			{
				_2299d0102_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_22ce04765:;
			{
				_2299d0377_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_22ce047cb:;
			{
				_2299d05ec_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_22ce04842:;
			{
				_2299d0872_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_22ce0548b:;
			{
				_2299d0ae7_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_22ce05502:;
			{
				_2299e1454_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_22ce04688:;
			{
				_2299e1454_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_22ce045cd:;
	};
}



inline void _2299d1048_check(_2299ce93c_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_22ce07aba:;
		if (it != expr.end()) {
			jule::Ptr<_228ce499a_Directive> _20821_d = *it;
			{
				_2299d0d6c_check_directive(&(*_self_), _20821_d);
			}
			_iter_next_22ce07aba:;
			++it;
			goto _iter_begin_22ce07aba;
		}
		_iter_end_22ce07aba:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2299ce93c_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2299d5646_ImportInfo> _2299d5b63_find_package(_2299d5646_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_2299d5646_ImportInfo> _2299d5e71_select_package(_2299d5646_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_229a0a4a1_Var> _2299d6328_find_var(_2299d5646_ImportInfo* _self_, jule::Str _18131_ident, jule::Bool _18143_cpp_linked) {
	if ((!(_2299d7c0e_is_lookupable(&(*_self_), _18131_ident)))) {
		return nullptr;
	};
	return _2299d31d2_find_var_in_package((*_self_)._field_package.get()._field_files,_18131_ident,false);
}



inline jule::Ptr<_229a7c666_TypeAlias> _2299d66d0_find_type_alias(_2299d5646_ImportInfo* _self_, jule::Str _19338_ident, jule::Bool _19350_cpp_linked) {
	if ((!(_2299d7c0e_is_lookupable(&(*_self_), _19338_ident)))) {
		return nullptr;
	};
	return _2299d3633_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_19338_ident,false);
}



inline jule::Ptr<_228d188c0_Struct> _2299d6a87_find_struct(_2299d5646_ImportInfo* _self_, jule::Str _20534_ident, jule::Bool _20546_cpp_linked) {
	if ((!(_2299d7c0e_is_lookupable(&(*_self_), _20534_ident)))) {
		return nullptr;
	};
	return _2299d3a2e_find_struct_in_package((*_self_)._field_package.get()._field_files,_20534_ident,false);
}



inline jule::Ptr<_228de6cbc_Fn> _2299d6e3e_find_fn(_2299d5646_ImportInfo* _self_, jule::Str _21730_ident, jule::Bool _21742_cpp_linked) {
	if ((!(_2299d7c0e_is_lookupable(&(*_self_), _21730_ident)))) {
		return nullptr;
	};
	return _2299d3e91_find_fn_in_package((*_self_)._field_package.get()._field_files,_21730_ident,false);
}



inline jule::Ptr<_22923d1bd_Trait> _2299d724c_find_trait(_2299d5646_ImportInfo* _self_, jule::Str _22833_ident) {
	if ((!(_2299d7c0e_is_lookupable(&(*_self_), _22833_ident)))) {
		return nullptr;
	};
	return _2299d429e_find_trait_in_package((*_self_)._field_package.get()._field_files,_22833_ident);
}



inline jule::Ptr<_228e0dcc3_Enum> _2299d755a_find_enum(_2299d5646_ImportInfo* _self_, jule::Str _23932_ident) {
	if ((!(_2299d7c0e_is_lookupable(&(*_self_), _23932_ident)))) {
		return nullptr;
	};
	return _2299d45e0_find_enum_in_package((*_self_)._field_package.get()._field_files,_23932_ident);
}



inline jule::Ptr<_2292e1e75_TypeEnum> _2299d7868_find_type_enum(_2299d5646_ImportInfo* _self_, jule::Str _25037_ident) {
	if ((!(_2299d7c0e_is_lookupable(&(*_self_), _25037_ident)))) {
		return nullptr;
	};
	return _2299d4953_find_type_enum_in_package((*_self_)._field_package.get()._field_files,_25037_ident);
}



inline jule::Bool _2299d7c0e_is_lookupable(_2299d5646_ImportInfo* _self_, jule::Str _25928_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	};
	if ((!((*_self_)._field_import_all))) {
		if ((((*_self_)._field_alias.len() != 0LL) || _2299d801c_exist_ident(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_2299d801c_exist_ident(&(*_self_), _25928_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _2299d801c_exist_ident(_2299d5646_ImportInfo* _self_, jule::Str _27926_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_22ce1c8d2:;
		if (it != expr.end()) {
			jule::Ptr<_2276b1a1c_Token> &_28016_sident = *it;
			{
				if ((_28016_sident.get()._field_kind == _27926_ident)) {
					return true;
				};
			}
			_iter_next_22ce1c8d2:;
			++it;
			goto _iter_begin_22ce1c8d2;
		}
		_iter_end_22ce1c8d2:;
	};
	return false;
}



inline jule::Bool _2299d82a3_is_accessible_via_selection(_2299d5646_ImportInfo* _self_) {
	return (((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _2299d801c_exist_ident(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _2299d5646_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2299d5646_ImportInfo> _2299d8a78_find_package(_2299d85a0_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_2299d5646_ImportInfo> _2299d8d86_select_package(_2299d85a0_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_229a0a4a1_Var> _2299d923d_find_var(_2299d85a0_Package* _self_, jule::Str _30931_ident, jule::Bool _30943_cpp_linked) {
	return _2299d31d2_find_var_in_package((*_self_)._field_files,_30931_ident,_30943_cpp_linked);
}



inline jule::Ptr<_229a7c666_TypeAlias> _2299d95e5_find_type_alias(_2299d85a0_Package* _self_, jule::Str _31538_ident, jule::Bool _31550_cpp_linked) {
	return _2299d3633_find_type_alias_in_package((*_self_)._field_files,_31538_ident,_31550_cpp_linked);
}



inline jule::Ptr<_228d188c0_Struct> _2299d999c_find_struct(_2299d85a0_Package* _self_, jule::Str _32134_ident, jule::Bool _32146_cpp_linked) {
	return _2299d3a2e_find_struct_in_package((*_self_)._field_files,_32134_ident,_32146_cpp_linked);
}



inline jule::Ptr<_228de6cbc_Fn> _2299d9d54_find_fn(_2299d85a0_Package* _self_, jule::Str _32730_ident, jule::Bool _32742_cpp_linked) {
	return _2299d3e91_find_fn_in_package((*_self_)._field_files,_32730_ident,_32742_cpp_linked);
}



inline jule::Ptr<_22923d1bd_Trait> _2299da162_find_trait(_2299d85a0_Package* _self_, jule::Str _33333_ident) {
	return _2299d429e_find_trait_in_package((*_self_)._field_files,_33333_ident);
}



inline jule::Ptr<_228e0dcc3_Enum> _2299da470_find_enum(_2299d85a0_Package* _self_, jule::Str _33932_ident) {
	return _2299d45e0_find_enum_in_package((*_self_)._field_files,_33932_ident);
}



inline jule::Ptr<_2292e1e75_TypeEnum> _2299da77d_find_type_enum(_2299d85a0_Package* _self_, jule::Str _34537_ident) {
	return _2299d4953_find_type_enum_in_package((*_self_)._field_files,_34537_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _2299d85a0_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2299d5646_ImportInfo> _2299ddcae_find_package(_2299dd792_Sema* _self_, jule::Str _22035_ident) {
	return _229a4d093_find_package((*_self_)._field_file.ptr(), _22035_ident);
}



inline jule::Ptr<_2299d5646_ImportInfo> _2299de0bc_select_package(_2299dd792_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)> _23037_selector) {
	return _229a4d3a1_select_package((*_self_)._field_file.ptr(), _23037_selector);
}



inline jule::Ptr<_229a0a4a1_Var> _2299de474_find_var(_2299dd792_Sema* _self_, jule::Str _24031_ident, jule::Bool _24043_cpp_linked) {
	jule::Ptr<_229a0a4a1_Var> _24217_v = _2299d31d2_find_var_in_package((*_self_)._field_files,_24031_ident,_24043_cpp_linked);;
	if ((_24217_v != nullptr)) {
		return _24217_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22ce4041b:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _24821_imp = *it;
			{
				if ((!(_2299dc1b9_imp_is_lookupable(_24821_imp,_24031_ident)))) {
					goto _iter_next_22ce4041b;
				};
				_24217_v=_2299d6328_find_var(_24821_imp.ptr(), _24031_ident,_24043_cpp_linked);
				if (((_24217_v != nullptr) && _2299e1b2a_is_accessible_define(&(*_self_), _24217_v.get()._field_public,_24217_v.get()._field_token))) {
					return _24217_v;
				};
			}
			_iter_next_22ce4041b:;
			++it;
			goto _iter_begin_22ce4041b;
		}
		_iter_end_22ce4041b:;
	};
	return nullptr;
}



inline jule::Ptr<_229a7c666_TypeAlias> _2299de82b_find_type_alias(_2299dd792_Sema* _self_, jule::Str _26738_ident, jule::Bool _26750_cpp_linked) {
	jule::Ptr<_229a7c666_TypeAlias> _26917_ta = _2299d3633_find_type_alias_in_package((*_self_)._field_files,_26738_ident,_26750_cpp_linked);;
	if ((_26917_ta != nullptr)) {
		return _26917_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22ce42dad:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _27521_imp = *it;
			{
				if ((!(_2299dc1b9_imp_is_lookupable(_27521_imp,_26738_ident)))) {
					goto _iter_next_22ce42dad;
				};
				_26917_ta=_2299d66d0_find_type_alias(_27521_imp.ptr(), _26738_ident,_26750_cpp_linked);
				if (((_26917_ta != nullptr) && _2299e1b2a_is_accessible_define(&(*_self_), _26917_ta.get()._field_public,_26917_ta.get()._field_token))) {
					return _26917_ta;
				};
			}
			_iter_next_22ce42dad:;
			++it;
			goto _iter_begin_22ce42dad;
		}
		_iter_end_22ce42dad:;
	};
	return nullptr;
}



inline jule::Ptr<_228d188c0_Struct> _2299debd3_find_struct(_2299dd792_Sema* _self_, jule::Str _29434_ident, jule::Bool _29446_cpp_linked) {
	jule::Ptr<_228d188c0_Struct> _29617_s = _2299d3a2e_find_struct_in_package((*_self_)._field_files,_29434_ident,_29446_cpp_linked);;
	if ((_29617_s != nullptr)) {
		return _29617_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22ce45872:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _30221_imp = *it;
			{
				if ((!(_2299dc1b9_imp_is_lookupable(_30221_imp,_29434_ident)))) {
					goto _iter_next_22ce45872;
				};
				_29617_s=_2299d6a87_find_struct(_30221_imp.ptr(), _29434_ident,_29446_cpp_linked);
				if (((_29617_s != nullptr) && _2299e1b2a_is_accessible_define(&(*_self_), _29617_s.get()._field_public,_29617_s.get()._field_token))) {
					return _29617_s;
				};
			}
			_iter_next_22ce45872:;
			++it;
			goto _iter_begin_22ce45872;
		}
		_iter_end_22ce45872:;
	};
	return nullptr;
}



inline jule::Ptr<_228de6cbc_Fn> _2299e008a_find_fn(_2299dd792_Sema* _self_, jule::Str _32130_ident, jule::Bool _32142_cpp_linked) {
	jule::Ptr<_228de6cbc_Fn> _32317_f = _2299d3e91_find_fn_in_package((*_self_)._field_files,_32130_ident,_32142_cpp_linked);;
	if ((_32317_f != nullptr)) {
		return _32317_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22ce48325:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _32921_imp = *it;
			{
				if ((!(_2299dc1b9_imp_is_lookupable(_32921_imp,_32130_ident)))) {
					goto _iter_next_22ce48325;
				};
				_32317_f=_2299d6e3e_find_fn(_32921_imp.ptr(), _32130_ident,_32142_cpp_linked);
				if (((_32317_f != nullptr) && _2299e1b2a_is_accessible_define(&(*_self_), _32317_f.get()._field_public,_32317_f.get()._field_token))) {
					return _32317_f;
				};
			}
			_iter_next_22ce48325:;
			++it;
			goto _iter_begin_22ce48325;
		}
		_iter_end_22ce48325:;
	};
	return nullptr;
}



inline jule::Ptr<_22923d1bd_Trait> _2299e0398_find_trait(_2299dd792_Sema* _self_, jule::Str _34833_ident) {
	jule::Ptr<_22923d1bd_Trait> _35017_t = _2299d429e_find_trait_in_package((*_self_)._field_files,_34833_ident);;
	if ((_35017_t != nullptr)) {
		return _35017_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22ce4a965:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _35621_imp = *it;
			{
				if ((!(_2299dc1b9_imp_is_lookupable(_35621_imp,_34833_ident)))) {
					goto _iter_next_22ce4a965;
				};
				_35017_t=_2299d724c_find_trait(_35621_imp.ptr(), _34833_ident);
				if (((_35017_t != nullptr) && _2299e1b2a_is_accessible_define(&(*_self_), _35017_t.get()._field_public,_35017_t.get()._field_token))) {
					return _35017_t;
				};
			}
			_iter_next_22ce4a965:;
			++it;
			goto _iter_begin_22ce4a965;
		}
		_iter_end_22ce4a965:;
	};
	return nullptr;
}



inline jule::Ptr<_228e0dcc3_Enum> _2299e06a6_find_enum(_2299dd792_Sema* _self_, jule::Str _37532_ident) {
	jule::Ptr<_228e0dcc3_Enum> _37717_e = _2299d45e0_find_enum_in_package((*_self_)._field_files,_37532_ident);;
	if ((_37717_e != nullptr)) {
		return _37717_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22ce4d1a4:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _38321_imp = *it;
			{
				if ((!(_2299dc1b9_imp_is_lookupable(_38321_imp,_37532_ident)))) {
					goto _iter_next_22ce4d1a4;
				};
				_37717_e=_2299d755a_find_enum(_38321_imp.ptr(), _37532_ident);
				if (((_37717_e != nullptr) && _2299e1b2a_is_accessible_define(&(*_self_), _37717_e.get()._field_public,_37717_e.get()._field_token))) {
					return _37717_e;
				};
			}
			_iter_next_22ce4d1a4:;
			++it;
			goto _iter_begin_22ce4d1a4;
		}
		_iter_end_22ce4d1a4:;
	};
	return nullptr;
}



inline jule::Ptr<_2292e1e75_TypeEnum> _2299e09b4_find_type_enum(_2299dd792_Sema* _self_, jule::Str _40237_ident) {
	jule::Ptr<_2292e1e75_TypeEnum> _40417_e = _2299d4953_find_type_enum_in_package((*_self_)._field_files,_40237_ident);;
	if ((_40417_e != nullptr)) {
		return _40417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22ce50904:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _41021_imp = *it;
			{
				if ((!(_2299dc1b9_imp_is_lookupable(_41021_imp,_40237_ident)))) {
					goto _iter_next_22ce50904;
				};
				_40417_e=_2299d7868_find_type_enum(_41021_imp.ptr(), _40237_ident);
				if (((_40417_e != nullptr) && _2299e1b2a_is_accessible_define(&(*_self_), _40417_e.get()._field_public,_40417_e.get()._field_token))) {
					return _40417_e;
				};
			}
			_iter_next_22ce50904:;
			++it;
			goto _iter_begin_22ce50904;
		}
		_iter_end_22ce50904:;
	};
	return nullptr;
}



inline jule::Bool _2299e0d16_is_flag(_2299dd792_Sema* _self_, jule::I64 _42622_flags) {
	return (((*_self_)._field_flags & _42622_flags) == _42622_flags);
}



inline void _2299e108b_set_current_file(_2299dd792_Sema* _self_, jule::Ptr<_229a4ca76_SymbolTable> _42839_f) {
	(*_self_)._field_file=_42839_f;
}



inline void _2299e1454_push_err(_2299dd792_Sema* _self_, jule::Ptr<_2276b1a1c_Token> _43027_token, jule::Str _43042_fmt, jule::Slice<jule::Any> _43055_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2299dbd78_compiler_err(_43027_token,true,_43042_fmt,jule::Any(_43055_args)));;
}



inline void _2299e1773_push_suggestion(_2299dd792_Sema* _self_, jule::Str _43534_fmt, jule::Slice<jule::Any> _43547_args) {
	{
		_2299dd30d_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43534_fmt,jule::Any(_43547_args));
	};
}



inline jule::Bool _2299e1b2a_is_accessible_define(_2299dd792_Sema* _self_, jule::Bool _44035_public, jule::Ptr<_2276b1a1c_Token> _44049_token) {
	return ((_44035_public || (_44049_token.get()._field_file == nullptr)) || (_2276b779d_dir((*_self_)._field_file.get()._field_file.ptr()) == _2276b779d_dir(_44049_token.get()._field_file.ptr())));
}



inline jule::Bool _2299e207b_is_duplicated_ident(_2299dd792_Sema* _self_, jule::Uintptr _44734_itself, jule::Str _44751_ident, jule::Bool _44763_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_22ce575a9:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> &_44816_f = *it;
			{
				if (_229a51074_is_duplicated_ident(_44816_f.ptr(), _44734_itself,_44751_ident,_44763_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44816_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_22ce57e6c:;
					if (it != expr.end()) {
						jule::Ptr<_2299d5646_ImportInfo> &_45320_imp = *it;
						{
							{
								auto &expr = _45320_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_22ce58d08:;
								if (it != expr.end()) {
									jule::Ptr<_2276b1a1c_Token> &_45424_selected = *it;
									{
										if ((_45424_selected.get()._field_kind == _44751_ident)) {
											return true;
										};
									}
									_iter_next_22ce58d08:;
									++it;
									goto _iter_begin_22ce58d08;
								}
								_iter_end_22ce58d08:;
							};
						}
						_iter_next_22ce57e6c:;
						++it;
						goto _iter_begin_22ce57e6c;
					}
					_iter_end_22ce57e6c:;
				};
			}
			_iter_next_22ce575a9:;
			++it;
			goto _iter_begin_22ce575a9;
		}
		_iter_end_22ce575a9:;
	};
	return false;
}



inline void _2299e239a_check_directives(jule::Ptr<_2299dd792_Sema> _self_, jule::Slice<jule::Ptr<_228ce499a_Directive>>& _46441_d, jule::Any _46467_o) {
	_2299ce93c_DirectiveChecker _46517_dc = _2299ce93c_DirectiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_228ce499a_Directive>>>)((&(_46441_d)))), ._field_o=jule::Any(_46467_o)};;
	_2299d1048_check(&_46517_dc);
}



inline jule::Bool _2299e27eb_check_generic_quantity(_2299dd792_Sema* _self_, jule::I64 _47341_required, jule::I64 _47356_given, jule::Ptr<_2276b1a1c_Token> _47368_token) {
	jule::Bool _47385_ok = jule::Bool();
	{
		
		if (((_47341_required == 0LL) && (_47356_given > 0LL))) {
			_case_begin_22ce5ba42:;
			{
				_2299e1454_push_err(&(*_self_), _47368_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else if (((_47341_required > 0LL) && (_47356_given == 0LL))) {
			_case_begin_22ce5bb1e:;
			{
				_2299e1454_push_err(&(*_self_), _47368_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else if ((_47341_required < _47356_given)) {
			_case_begin_22ce5bb85:;
			{
				_2299e1454_push_err(&(*_self_), _47368_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else if ((_47341_required > _47356_given)) {
			_case_begin_22ce5b866:;
			{
				_2299e1454_push_err(&(*_self_), _47368_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else {
			_case_begin_22ce5b3d2:;
			{
				_47385_ok = true;
				return _47385_ok;
			}
		}
		_match_end_22ce5b305:;
	};
}



inline jule::Bool _2299e2bc5_is_duplicated_import_selection(_2299dd792_Sema* _self_, jule::Uintptr _49245_itself, jule::Str _49262_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22ce5eabc:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> &_49316_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49316_imp) == _49245_itself)) {
					goto _iter_end_22ce5eabc;
				};
				if (_2299d801c_exist_ident(_49316_imp.ptr(), _49262_ident)) {
					return true;
				};
			}
			_iter_next_22ce5eabc:;
			++it;
			goto _iter_begin_22ce5eabc;
		}
		_iter_end_22ce5eabc:;
	};
	return false;
}



inline jule::Any _2299e308d_get_import_def(_2299dd792_Sema* _self_, jule::Str _50729_ident, jule::Ptr<_2299d5646_ImportInfo>& _50746_imp) {
	if ((_229b07a76_find_package_builtin_def(_50746_imp.get()._field_link_path,_50729_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50746_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22ce66277:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _51221_f = *it;
			{
				;
				jule::Any _51421_def = _229a50b23_def_by_ident(_51221_f.ptr(), _50729_ident,false);;
				if ((_51421_def != nullptr)) {
					return jule::Any(_51421_def);
				};
			}
			_iter_next_22ce66277:;
			++it;
			goto _iter_begin_22ce66277;
		}
		_iter_end_22ce66277:;
	};
	return nullptr;
}



inline jule::Bool _2299e33bd_check_import_selections(_2299dd792_Sema* _self_, jule::Ptr<_2299d5646_ImportInfo>& _52347_imp) {
	jule::Bool _52367_ok = jule::Bool();
	_52367_ok=true;
	{
		auto &expr = _52347_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_22ce687da:;
		if (it != expr.end()) {
			jule::Ptr<_2276b1a1c_Token> _52516_ident = *it;
			{
				if ((_52516_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_22ce687da;
				};
				if (_2299e2bc5_is_duplicated_import_selection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_52347_imp)),_52516_ident.get()._field_kind)) {
					_2299e1454_push_err(&(*_self_), _52516_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_52516_ident.get()._field_kind)}));
					_2299e1773_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_52367_ok=false;
					goto _iter_next_22ce687da;
				};
				jule::Any _53721_def = _2299e308d_get_import_def(&(*_self_), _52516_ident.get()._field_kind,_52347_imp);;
				{
					auto &_match_expr{ _53721_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_22ce6a875:;
						{
							goto _iter_next_22ce687da;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
						_case_begin_22ce6b2e3:;
						{
							jule::Ptr<_229a0a4a1_Var> _54325_v = _53721_def.operator jule::Ptr<_229a0a4a1_Var>();;
							if (_2299e1b2a_is_accessible_define(&(*_self_), _54325_v.get()._field_public,_54325_v.get()._field_token)) {
								goto _iter_next_22ce687da;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_229a7c666_TypeAlias>>()) {
						_case_begin_22ce6b359:;
						{
							jule::Ptr<_229a7c666_TypeAlias> _54825_ta = _53721_def.operator jule::Ptr<_229a7c666_TypeAlias>();;
							if (_2299e1b2a_is_accessible_define(&(*_self_), _54825_ta.get()._field_public,_54825_ta.get()._field_token)) {
								goto _iter_next_22ce687da;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
						_case_begin_22ce6b3c0:;
						{
							jule::Ptr<_228d188c0_Struct> _55325_strct = _53721_def.operator jule::Ptr<_228d188c0_Struct>();;
							if (_2299e1b2a_is_accessible_define(&(*_self_), _55325_strct.get()._field_public,_55325_strct.get()._field_token)) {
								goto _iter_next_22ce687da;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_22923d1bd_Trait>>()) {
						_case_begin_22ce6be4d:;
						{
							jule::Ptr<_22923d1bd_Trait> _55825_t = _53721_def.operator jule::Ptr<_22923d1bd_Trait>();;
							if (_2299e1b2a_is_accessible_define(&(*_self_), _55825_t.get()._field_public,_55825_t.get()._field_token)) {
								goto _iter_next_22ce687da;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_228e0dcc3_Enum>>()) {
						_case_begin_22ce6beb4:;
						{
							jule::Ptr<_228e0dcc3_Enum> _56325_e = _53721_def.operator jule::Ptr<_228e0dcc3_Enum>();;
							if (_2299e1b2a_is_accessible_define(&(*_self_), _56325_e.get()._field_public,_56325_e.get()._field_token)) {
								goto _iter_next_22ce687da;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2292e1e75_TypeEnum>>()) {
						_case_begin_22ce6c02a:;
						{
							jule::Ptr<_2292e1e75_TypeEnum> _56825_e = _53721_def.operator jule::Ptr<_2292e1e75_TypeEnum>();;
							if (_2299e1b2a_is_accessible_define(&(*_self_), _56825_e.get()._field_public,_56825_e.get()._field_token)) {
								goto _iter_next_22ce687da;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_228de6cbc_Fn>>()) {
						_case_begin_22ce6c091:;
						{
							jule::Ptr<_228de6cbc_Fn> _57325_f = _53721_def.operator jule::Ptr<_228de6cbc_Fn>();;
							if (_2299e1b2a_is_accessible_define(&(*_self_), _57325_f.get()._field_public,_57325_f.get()._field_token)) {
								goto _iter_next_22ce687da;
							};
						}
					}
					else {
						_case_begin_22ce6b07e:;
						{
							_2299e1454_push_err(&(*_self_), _52516_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_52516_ident.get()._field_kind)}));
							_52367_ok=false;
							goto _iter_next_22ce687da;
						}
					}
					_match_end_22ce69005:;
				};
				_2299e1454_push_err(&(*_self_), _52516_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52516_ident.get()._field_kind)}));
				_2299e1773_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_52367_ok=false;
			}
			_iter_next_22ce687da:;
			++it;
			goto _iter_begin_22ce687da;
		}
		_iter_end_22ce687da:;
	};
	return _52367_ok;
}



inline jule::Bool _2299e370e_is_use_alias_duplication(_2299dd792_Sema* _self_, jule::Ptr<_2299d5646_ImportInfo>& _59044_imp) {
	if ((_59044_imp.get()._field_alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22ce74cd0:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _59521_imp2 = *it;
			{
				if ((_59521_imp2 == _59044_imp)) {
					goto _iter_end_22ce74cd0;
				};
				if ((_59521_imp2.get()._field_alias == _59044_imp.get()._field_alias)) {
					return true;
				};
				if (((_59521_imp2.get()._field_ident == _59521_imp2.get()._field_link_path) && (_59521_imp2.get()._field_ident == _59044_imp.get()._field_alias))) {
					return true;
				};
			}
			_iter_next_22ce74cd0:;
			++it;
			goto _iter_begin_22ce74cd0;
		}
		_iter_end_22ce74cd0:;
	};
	return false;
}



inline jule::Bool _2299e3a2d_check_import(_2299dd792_Sema* _self_, jule::Ptr<_2299d5646_ImportInfo>& _61136_imp) {
	if ((_61136_imp.get()._field_cpp_linked || (_61136_imp.get()._field_package.get()._field_files.len() == 0LL))) {
		return true;
	};
	if (_2299e370e_is_use_alias_duplication(&(*_self_), _61136_imp)) {
		_2299e1454_push_err(&(*_self_), _61136_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_61136_imp.get()._field_alias)}));
		_2299e1773_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_61136_imp.get()._field_duplicate))) {
		jule::Ptr<_2299dd792_Sema> _62221_sema = jule::new_ptr<_2299dd792_Sema>(_2299dd792_Sema{._field_flags=(*_self_)._field_flags});;
		_229a074c0_check(_62221_sema, _61136_imp.get()._field_package.get()._field_files);
		if ((_62221_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_62221_sema.get()._field_errors);
			_62221_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _2299e33bd_check_import_selections(&(*_self_), _61136_imp);
}



inline void _2299e3c09_check_imports(_2299dd792_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_22ce7a05a:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _63621_file = *it;
			{
				_2299e108b_set_current_file(&(*_self_), _63621_file);
				{
					auto &expr = _63621_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_22ce7b589:;
					if (it != expr.end()) {
						jule::Ptr<_2299d5646_ImportInfo> _63925_imp = *it;
						{
							jule::Bool _64021_ok = _2299e3a2d_check_import(&(*_self_), _63925_imp);;
							if ((!(_64021_ok))) {
								_2299e1454_push_err(&(*_self_), _63925_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_63925_imp.get()._field_link_path)}));
								return;;
							};
						}
						_iter_next_22ce7b589:;
						++it;
						goto _iter_begin_22ce7b589;
					}
					_iter_end_22ce7b589:;
				};
			}
			_iter_next_22ce7a05a:;
			++it;
			goto _iter_begin_22ce7a05a;
		}
		_iter_end_22ce7a05a:;
	};
}



inline void _2299e3dd5_impl_file_impls(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_22ce7bca4:;
		if (it != expr.end()) {
			jule::Ptr<_2299a3504_Impl> _65221_imp = *it;
			{
				_2299ee572_impl_impl(_self_, _65221_imp);
			}
			_iter_next_22ce7bca4:;
			++it;
			goto _iter_begin_22ce7bca4;
		}
		_iter_end_22ce7bca4:;
	};
}



inline void _2299e40b1_impl_impls(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22ce7d47b:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _65821_file = *it;
			{
				_2299e108b_set_current_file(_self_.ptr(), _65821_file);
				_2299e3dd5_impl_file_impls(_self_);
			}
			_iter_next_22ce7d47b:;
			++it;
			goto _iter_begin_22ce7d47b;
		}
		_iter_end_22ce7d47b:;
	};
}



inline void _2299e428c_check_enums(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22ce7ea10:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _66521_file = *it;
			{
				_2299e108b_set_current_file(_self_.ptr(), _66521_file);
				_2299eba58_check_enum_decls(_self_);
			}
			_iter_next_22ce7ea10:;
			++it;
			goto _iter_begin_22ce7ea10;
		}
		_iter_end_22ce7ea10:;
	};
}



inline jule::Ptr<_229a7d359_TypeKind> _2299e4787_build_type_with_refers(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d28193_TypeDecl>& _67247_t, jule::Trait<_229a98e02_Lookup> _67270_l, jule::Slice<jule::Ptr<_229a7c666_TypeAlias>> _67313_generics, jule::Ptr<_229a8aa70_Referencer> _67341_referencer) {
	_229a8b7b8_TypeChecker _67417_tc = _229a8b7b8_TypeChecker{._field_s=_self_, ._field_lookup=_67270_l, ._field_referencer=_67341_referencer, ._field_use_generics=_67313_generics, };;
	{
		auto &_match_expr{ _67270_l };
		
		if (_match_expr.type_is<jule::Ptr<_2299bd7e9_ScopeChecker>>()) {
			_case_begin_22ce816d2:;
			{
				jule::Ptr<_2299bd7e9_ScopeChecker> _68221_hard = _2299c1b71_get_hard_root(_67270_l.operator jule::Ptr<_2299bd7e9_ScopeChecker>());;
				_67417_tc._field_refers=_68221_hard.get()._field_owner.get()._field_refers;
			}
		}
		_match_end_22ce8143a:;
	};
	if (((_67341_referencer != nullptr) && (_67341_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _67341_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_229a7c666_TypeAlias>>()) {
				_case_begin_22ce81b88:;
				{
					_67417_tc._field_owner_alias=_67341_referencer.get()._field_owner.operator jule::Ptr<_229a7c666_TypeAlias>();
				}
			}
			_match_end_22ce81b33:;
		};
	};
	return _229a93a34_check_decl(&_67417_tc, _67247_t);
}



inline jule::Bool _2299e4c82_check_type_with_refers(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_229a824b2_TypeSymbol>& _69947_t, jule::Trait<_229a98e02_Lookup> _69967_l, jule::Slice<jule::Ptr<_229a7c666_TypeAlias>> _70013_generics, jule::Ptr<_229a8aa70_Referencer> _70041_referencer) {
	jule::Bool _70068_ok = jule::Bool();
	if (_229a82869_checked(_69947_t.ptr())) {
		_70068_ok = true;
		return _70068_ok;
	};
	_69947_t.get()._field_kind=_2299e4787_build_type_with_refers(_self_, _69947_t.get()._field_decl,_69967_l,_70013_generics,_70041_referencer);
	_70068_ok = _229a82869_checked(_69947_t.ptr());
	return _70068_ok;
}



inline jule::Ptr<_229938e6d_ConstraintChecker> _2299e4ee6_constraint_checker(jule::Ptr<_2299dd792_Sema> _self_) {
	return jule::new_ptr<_229938e6d_ConstraintChecker>(_229938e6d_ConstraintChecker{._field_s=_self_, });
}



inline jule::Bool _2299e539d_check_type(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_229a824b2_TypeSymbol>& _71435_t, jule::Trait<_229a98e02_Lookup> _71455_l) {
	return _2299e4c82_check_type_with_refers(_self_, _71435_t,_71455_l,nullptr,nullptr);
}



inline jule::Ptr<_229a7d359_TypeKind> _2299e5821_build_type_with_generics(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d28193_TypeDecl>& _72049_t, jule::Slice<jule::Ptr<_229a7c666_TypeAlias>> _72113_generics, jule::Ptr<_228dec234_ReferenceStack> _72141_refers) {
	jule::Ptr<_229a8b7b8_TypeChecker> _72217_tc = jule::new_ptr<_229a8b7b8_TypeChecker>(_229a8b7b8_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_229a98e02_Lookup>(_self_, 3), ._field_refers=_72141_refers, ._field_use_generics=_72113_generics, });;
	return _229a93a34_check_decl(_72217_tc.ptr(), _72049_t);
}



inline jule::Ptr<_229a7d359_TypeKind> _2299e5b40_build_type(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d28193_TypeDecl>& _73235_t) {
	return _2299e5821_build_type_with_generics(_self_, _73235_t,nullptr,nullptr);
}



inline jule::Ptr<_229a7d359_TypeKind> _2299e5e4d_select_type(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d28193_TypeDecl>& _73736_t) {
	jule::Ptr<_229a8b7b8_TypeChecker> _73817_tc = jule::new_ptr<_229a8b7b8_TypeChecker>(_229a8b7b8_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_229a98e02_Lookup>(_self_, 3), ._field_selection=true, });;
	return _229a93a34_check_decl(_73817_tc.ptr(), _73736_t);
}



inline jule::Ptr<_229a54352_Eval> _2299e639e_evalpd(jule::Ptr<_2299dd792_Sema> _self_, jule::Trait<_229a98e02_Lookup> _74830_l, jule::Ptr<_229a7d359_TypeKind> _74845_p, jule::Ptr<_229a0a4a1_Var> _74863_owner) {
	jule::Ptr<_229a54352_Eval> _74917_e = jule::new_ptr<_229a54352_Eval>(_229a54352_Eval{._field_s=_self_, ._field_lookup=_74830_l, ._field_owner=_74863_owner, });;
	{
		auto &_match_expr{ _74830_l };
		
		if (_match_expr.type_is<jule::Ptr<_2299bd7e9_ScopeChecker>>()) {
			_case_begin_22ce8a2ce:;
			{
				_74917_e.get()._field_unsafety=_2299c0c80_is_unsafe(_74830_l.operator jule::Ptr<_2299bd7e9_ScopeChecker>());
			}
		}
		_match_end_22ce8a268:;
	};
	_74917_e.get()._field_prefix=_74845_p;
	return _74917_e;
}



inline jule::Ptr<_229a54352_Eval> _2299e6756_evalp(jule::Ptr<_2299dd792_Sema> _self_, jule::Trait<_229a98e02_Lookup> _76629_l, jule::Ptr<_229a7d359_TypeKind> _76644_p) {
	return _2299e639e_evalpd(_self_, _76629_l,_76644_p,nullptr);
}



inline jule::Ptr<_229a54352_Eval> _2299e6a64_eval(jule::Ptr<_2299dd792_Sema> _self_, jule::Trait<_229a98e02_Lookup> _77128_l) {
	return _2299e6756_evalp(_self_, _77128_l,nullptr);
}



inline jule::Bool _2299e705e_check_assign_type(jule::Ptr<_2299dd792_Sema> _self_, jule::Bool _77537_dest_is_ref, jule::Ptr<_229a7d359_TypeKind>& _77561_dest, jule::Ptr<_229a527d4_Data>& _77614_d, jule::Ptr<_2276b1a1c_Token> _77628_error_token) {
	if (_77614_d.get()._field_decl) {
		_2299e1454_push_err(_self_.ptr(), _77628_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_77537_dest_is_ref) {
		if ((!(_229a7da63_equals(_77561_dest, _77614_d.get()._field_kind)))) {
			_2299e1454_push_err(_self_.ptr(), _77628_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_77561_dest.ptr())),jule::Any(_229a7d755_to_str(_77614_d.get()._field_kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_229a3d292_AssignTypeChecker> _78721_atc = jule::new_ptr<_229a3d292_AssignTypeChecker>(_229a3d292_AssignTypeChecker{._field_s=_self_, ._field_dest=_77561_dest, ._field_d=_77614_d, ._field_error_token=_77628_error_token});;
		jule::Bool _79317_ok = _229a3e419_check(_78721_atc.ptr());;
		if ((!(_79317_ok))) {
			return false;
		};
	};
	if (((!(_229a53197_is_const(_77614_d.ptr()))) || (_229a8046b_prim(_77561_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _80317_kind = _229a8046b_prim(_77561_dest.ptr()).get()._field_kind;;
	{
		
		if (_2299b58ce_is_sig_int(_80317_kind)) {
			_case_begin_22ce91bba:;
			{
				_228dd8929_set_i64(_77614_d.get()._field_constant.ptr(), static_cast<jule::I64>(_228dd81cb_as_i64(_77614_d.get()._field_constant.ptr())));
			}
		}
		else if (_2299b5bba_is_unsig_int(_80317_kind)) {
			_case_begin_22ce91c42:;
			{
				_228dd8b9e_set_u64(_77614_d.get()._field_constant.ptr(), static_cast<jule::U64>(_228dd8440_as_u64(_77614_d.get()._field_constant.ptr())));
			}
		}
		else if (_2299b6281_is_float(_80317_kind)) {
			_case_begin_22ce91cb9:;
			{
				_228dd941e_set_f64(_77614_d.get()._field_constant.ptr(), static_cast<jule::F64>(_228dd86a4_as_f64(_77614_d.get()._field_constant.ptr())));
			}
		}
		_match_end_22ce91aee:;
	};
	return true;
}



inline jule::Bool _2299e74d2_check_type_compatibility(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_229a7d359_TypeKind>& _81749_dest, jule::Ptr<_229a7d359_TypeKind>& _81814_src, jule::Ptr<_2276b1a1c_Token>& _81835_error_token) {
	if ((_81814_src == nullptr)) {
		_2299e1454_push_err(_self_.ptr(), _81835_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_81749_dest.ptr())),jule::Any(_229a7d755_to_str(_81814_src.ptr()))}));
		return false;
	};
	if ((_229a8210a_tup(_81814_src.ptr()) != nullptr)) {
		_2299e1454_push_err(_self_.ptr(), _81835_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_81749_dest.ptr())),jule::Any(_229a7d755_to_str(_81814_src.ptr()))}));
		return false;
	};
	_229a3b669_TypeCompatibilityChecker _83217_tcc = _229a3b669_TypeCompatibilityChecker{._field_s=_self_, ._field_dest=_81749_dest, ._field_src=_81814_src, ._field_error_token=_81835_error_token};;
	if (_229a3cc53_check(&_83217_tcc)) {
		return true;
	};
	_2299e1454_push_err(_self_.ptr(), _81835_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_81749_dest.ptr())),jule::Any(_229a7d755_to_str(_81814_src.ptr()))}));
	return false;
}



inline jule::Ptr<_229a7d359_TypeKind> _2299e78bc_build_non_generic_type_kind(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d28193_TypeDecl>& _85352_ast, jule::Slice<jule::Ptr<_228d35777_GenericDecl>>& _85414_generics) {
	jule::Ptr<_229a8b7b8_TypeChecker> _85517_tc = jule::new_ptr<_229a8b7b8_TypeChecker>(_229a8b7b8_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_229a98e02_Lookup>(_self_, 3), ._field_ignore_generics=_85414_generics, });;
	return _229a93a34_check_decl(_85517_tc.ptr(), _85352_ast);
}



inline void _2299e7b75_build_fn_non_generic_type_kinds(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de996d_FnIns>& _86356_f) {
	jule::Slice<jule::Ptr<_228d35777_GenericDecl>> _86417_generics = nullptr;;
	if (_228de7493_is_method(_86356_f.get()._field_decl.ptr())) {
		_86417_generics=jule::append(_86356_f.get()._field_decl.get()._field_generics,_86356_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_86417_generics=_86356_f.get()._field_decl.get()._field_generics;
	};
	{
		auto &expr = _86356_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_22ce9a5b9:;
		if (it != expr.end()) {
			jule::Ptr<_228de8a9e_ParamIns> _87121_p = *it;
			{
				if ((!(_228de5aac_is_self(_87121_p.get()._field_decl.ptr())))) {
					_87121_p.get()._field_kind=_2299e78bc_build_non_generic_type_kind(_self_, _87121_p.get()._field_decl.get()._field_kind.get()._field_decl,_86417_generics);
				};
			}
			_iter_next_22ce9a5b9:;
			++it;
			goto _iter_begin_22ce9a5b9;
		}
		_iter_end_22ce9a5b9:;
	};
	if ((!(_228de722e_is_void(_86356_f.get()._field_decl.ptr())))) {
		_86356_f.get()._field_result=_2299e78bc_build_non_generic_type_kind(_self_, _86356_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_86417_generics);
	};
}



inline jule::Ptr<_228de996d_FnIns> _2299e7eb6_get_trait_check_fn_kind(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de6cbc_Fn>& _88148_f) {
	if ((_88148_f.get()._field_instances.len() == 1LL)) {
		return _88148_f.get()._field_instances[0LL];
	};
	jule::Ptr<_228de996d_FnIns> _88517_ins = _228de81a8_instance_force(_88148_f);;
	jule::Ptr<_229a8b7b8_TypeChecker> _88717_tc = jule::new_ptr<_229a8b7b8_TypeChecker>(_229a8b7b8_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_229a98e02_Lookup>(_self_, 3), });;
	{
		auto &expr = _88517_ins.get()._field_params;
		auto it = expr.begin();
		_iter_begin_22ce9e17d:;
		if (it != expr.end()) {
			jule::Ptr<_228de8a9e_ParamIns> _89121_p = *it;
			{
				if ((!(_228de5aac_is_self(_89121_p.get()._field_decl.ptr())))) {
					_89121_p.get()._field_kind=_229a93a34_check_decl(_88717_tc.ptr(), _89121_p.get()._field_decl.get()._field_kind.get()._field_decl);
				};
			}
			_iter_next_22ce9e17d:;
			++it;
			goto _iter_begin_22ce9e17d;
		}
		_iter_end_22ce9e17d:;
	};
	if ((!(_228de722e_is_void(_88148_f.ptr())))) {
		_88517_ins.get()._field_result=_229a93a34_check_decl(_88717_tc.ptr(), _88148_f.get()._field_result.get()._field_kind.get()._field_decl);
	};
	return _88517_ins;
}



inline jule::Bool _2299e8428_check_constraints_fn(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de996d_FnIns>& _90345_f, jule::Ptr<_2276b1a1c_Token>& _90361_et, jule::Ptr<_228de996d_FnIns> _90377_exist) {
	jule::Ptr<_229938e6d_ConstraintChecker> _90417_cc = _2299e4ee6_constraint_checker(_self_);;
	_90417_cc.get()._field_et=_90361_et;
	_90417_cc.get()._field_fi=_90345_f;
	if ((_90377_exist != nullptr)) {
		{
			auto &expr = _90377_exist.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_22cea24b1:;
			if (it != expr.end()) {
				jule::I64 _90818_i = it - expr.begin();
				jule::Ptr<_229a7bb2c_InsGeneric> _90825_g = *it;
				{
					_90345_f.get()._field_generics[_90818_i].get()._field_constraint=_90825_g.get()._field_constraint;
				}
				_iter_next_22cea24b1:;
				++it;
				_90818_i++;
				goto _iter_begin_22cea24b1;
			}
			_iter_end_22cea24b1:;
		};
	} else {
		_90417_cc.get()._field_uniq=true;
	};
	return _22997ebd9_check(_90417_cc);
}



inline jule::Bool _2299e889b_check_constraints_struct(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d44c1a_StructIns>& _91749_s, jule::Ptr<_2276b1a1c_Token>& _91769_et, jule::Ptr<_228d44c1a_StructIns> _91785_exist) {
	jule::Ptr<_229938e6d_ConstraintChecker> _91817_cc = _2299e4ee6_constraint_checker(_self_);;
	_91817_cc.get()._field_et=_91769_et;
	_91817_cc.get()._field_si=_91749_s;
	if ((_91785_exist != nullptr)) {
		{
			auto &expr = _91785_exist.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_22cea5052:;
			if (it != expr.end()) {
				jule::I64 _92218_i = it - expr.begin();
				jule::Ptr<_229a7bb2c_InsGeneric> _92225_g = *it;
				{
					_91749_s.get()._field_generics[_92218_i].get()._field_constraint=_92225_g.get()._field_constraint;
				}
				_iter_next_22cea5052:;
				++it;
				_92218_i++;
				goto _iter_begin_22cea5052;
			}
			_iter_end_22cea5052:;
		};
	} else {
		_91817_cc.get()._field_uniq=true;
	};
	return _22997ebd9_check(_91817_cc);
}



inline jule::Bool _2299e8c64_fn_environment(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de996d_FnIns>& _93439_f, jule::Fn<jule::Bool(jule::Ptr<_2299dd792_Sema>&,jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>&)> _93450_algo) {
	jule::Ptr<_2299dd792_Sema> _93517_sema = _93439_f.get()._field_decl.get()._field_sema;;
	jule::Ptr<_229a4ca76_SymbolTable> _93617_old = _93439_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_2299e108b_set_current_file(_93439_f.get()._field_decl.get()._field_sema.ptr(), _93617_old);
	});;
	jule::Ptr<_229a4ca76_SymbolTable> _93817_file = _2299dcd9b_find_file(_93439_f.get()._field_decl.get()._field_sema.get()._field_files,_93439_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_93817_file != nullptr)) {
		_2299e108b_set_current_file(_93439_f.get()._field_decl.get()._field_sema.ptr(), _93817_file);
	};
	jule::I64 _94317_size = _93439_f.get()._field_generics.len();;
	if (((_93439_f.get()._field_decl != nullptr) && (_93439_f.get()._field_decl.get()._field_owner != nullptr))) {
		_94317_size+=_93439_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	jule::Slice<jule::Ptr<_229a7c666_TypeAlias>> _94817_generics = jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>::alloc(0LL,_94317_size);;
	_2299dca49_append_generic_type_aliases(_94817_generics,_93439_f);
	jule::Bool _95113_ok = _93450_algo(_93517_sema,_94817_generics);;
	if ((_93517_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_93517_sema.get()._field_errors);
		_93517_sema.get()._field_errors=nullptr;
	};
	return _95113_ok;
}



inline void _2299e8ed9_check_fn_param_kind(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de8a9e_ParamIns>& _96144_p) {
	_96144_p.get()._field_kind.get()._field_variadic=_96144_p.get()._field_decl.get()._field_variadic;
	if ((_96144_p.get()._field_decl.get()._field_reference && (!(_229a95849_is_valid_for_ref(_96144_p.get()._field_kind))))) {
		_2299e1454_push_err(_self_.ptr(), _96144_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_96144_p.get()._field_kind.ptr()))}));
	};
}



inline jule::Bool _2299e92e7_reload_fn_ins_types(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de996d_FnIns> _96843_f) {
	if ((_228dea6b6_is_builtin(_96843_f.ptr()) || _228dea92a_is_anon(_96843_f.ptr()))) {
		return true;
	};
	return _2299e8c64_fn_environment(_self_, _96843_f,jule::Fn<jule::Bool(jule::Ptr<_2299dd792_Sema>&,jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>&)>([=](jule::Ptr<_2299dd792_Sema>& _97244_sema, jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>& _97262_generics) mutable -> jule::Bool {
		jule::Bool _97321_ok = true;;
		{
			auto &expr = _96843_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_22ceb14d1:;
			if (it != expr.end()) {
				jule::Ptr<_228de8a9e_ParamIns> _97425_p = *it;
				{
					if (_228de5aac_is_self(_97425_p.get()._field_decl.ptr())) {
						if (_228de5d21_is_ref(_97425_p.get()._field_decl.ptr())) {
							_97425_p.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_229a865b5_Sptr>(_229a865b5_Sptr{._field_elem=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_96843_f.get()._field_owner, 0)})}), 7)});
						} else {
							_97425_p.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_96843_f.get()._field_owner, 0)});
						};
					} else {
						_97425_p.get()._field_kind=_2299e5821_build_type_with_generics(_97244_sema, _97425_p.get()._field_decl.get()._field_kind.get()._field_decl,_97262_generics,_96843_f.get()._field_refers);
						if ((_97425_p.get()._field_kind != nullptr)) {
							_2299e8ed9_check_fn_param_kind(_self_, _97425_p);
						} else {
							_97321_ok=false;
						};
					};
				}
				_iter_next_22ceb14d1:;
				++it;
				goto _iter_begin_22ceb14d1;
			}
			_iter_end_22ceb14d1:;
		};
		if ((!(_228de722e_is_void(_96843_f.get()._field_decl.ptr())))) {
			_96843_f.get()._field_result=_2299e5821_build_type_with_generics(_97244_sema, _96843_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_97262_generics,_96843_f.get()._field_refers);
			_97321_ok=((_96843_f.get()._field_result != nullptr) && _97321_ok);
		};
		return _97321_ok;
	}));
}



inline jule::Bool _2299e977b_check_ref_validity_for_init_expr(jule::Ptr<_2299dd792_Sema> _self_, jule::Bool _100452_left_mut, jule::Ptr<_229a527d4_Data>& _100473_d, jule::Ptr<_2276b1a1c_Token>& _100488_error_token) {
	{
		auto &_match_expr{ _100473_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
			_case_begin_22ceb6a25:;
			{
				goto _match_end_22ceb6074;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1536_TraitSubIdentExprModel>>()) {
			_case_begin_22ceb6a8b:;
			{
				jule::Ptr<_228de1536_TraitSubIdentExprModel> _100921_model = _100473_d.get()._field_model.operator jule::Ptr<_228de1536_TraitSubIdentExprModel>();;
				if ((!(_2299db8d3_is_valid_model_for_ref(_100921_model.get()._field_expr)))) {
					_2299e1454_push_err(_self_.ptr(), _100488_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_100921_model.get()._field_method.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1954_StructSubIdentExprModel>>()) {
			_case_begin_22ceb6b68:;
			{
				jule::Ptr<_228de1954_StructSubIdentExprModel> _101521_model = _100473_d.get()._field_model.operator jule::Ptr<_228de1954_StructSubIdentExprModel>();;
				if ((!(_2299db8d3_is_valid_model_for_ref(_101521_model.get()._field_expr.get()._field_model)))) {
					_2299e1454_push_err(_self_.ptr(), _100488_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_101521_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de201a_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_228de2207_CommonSubIdentExprModel>>()) {
			_case_begin_22ceb6bce:;
			{
				_2299e1454_push_err(_self_.ptr(), _100488_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228ddec2c_UnaryExprModel>>()) {
			_case_begin_22ceb61b7:;
			{
				jule::Ptr<_228ddec2c_UnaryExprModel> _102521_unary = _100473_d.get()._field_model.operator jule::Ptr<_228ddec2c_UnaryExprModel>();;
				if ((_102521_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_2299db8d3_is_valid_model_for_ref(_100473_d.get()._field_model)))) {
						_2299e1454_push_err(_self_.ptr(), _100488_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_22ceb6074;
				};
				goto _case_begin_22ceb60c9;
			}
		}
		else {
			_case_begin_22ceb60c9:;
			{
				_2299e1454_push_err(_self_.ptr(), _100488_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_22ceb6074:;
	};
	if ((_100452_left_mut && (!(_100473_d.get()._field_mutable)))) {
		_2299e1454_push_err(_self_.ptr(), _100488_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _2299e9d75_check_validity_for_init_expr(jule::Ptr<_2299dd792_Sema> _self_, jule::Bool _104648_left_mut, jule::Bool _104664_left_ref, jule::Ptr<_229a7d359_TypeKind>& _104710_left_kind, jule::Ptr<_229a527d4_Data>& _104737_d, jule::Ptr<_2276b1a1c_Token>& _104752_error_token) {
	if (((_104648_left_mut && (!(_104737_d.get()._field_mutable))) && _229a7e756_mutable(_104737_d.get()._field_kind.ptr()))) {
		_2299e1454_push_err(_self_.ptr(), _104752_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_104737_d.get()._field_kind.ptr()))}));
		return false;
	};
	if (_104664_left_ref) {
		if ((!(_2299e977b_check_ref_validity_for_init_expr(_self_, _104648_left_mut,_104737_d,_104752_error_token)))) {
			return false;
		};
	};
	jule::Ptr<_229a3d292_AssignTypeChecker> _105817_atc = jule::new_ptr<_229a3d292_AssignTypeChecker>(_229a3d292_AssignTypeChecker{._field_s=_self_, ._field_d=_104737_d, ._field_error_token=_104752_error_token});;
	return _229a3d968_check_validity(_105817_atc.ptr());
}



inline jule::Bool _2299ea22c_check_type_alias_decl_kind(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_229a7c666_TypeAlias>& _106651_ta, jule::Trait<_229a98e02_Lookup> _106671_l) {
	jule::Bool _106684_ok = jule::Bool();
	jule::Ptr<_229a4ca76_SymbolTable> _106717_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_2299e108b_set_current_file(_self_.ptr(), _106717_old);
	});;
	if ((_106651_ta.get()._field_token != nullptr)) {
		jule::Ptr<_229a4ca76_SymbolTable> _107221_file = _2299dcd9b_find_file(_self_.get()._field_files,_106651_ta.get()._field_token.get()._field_file);;
		if ((_107221_file != nullptr)) {
			_2299e108b_set_current_file(_self_.ptr(), _107221_file);
		};
	};
	_106684_ok=_2299e4c82_check_type_with_refers(_self_, _106651_ta.get()._field_kind,_106671_l,nullptr,jule::new_ptr<_229a8aa70_Referencer>(_229a8aa70_Referencer{._field_ident=_106651_ta.get()._field_ident, ._field_owner=jule::Any(_106651_ta), ._field_refs=(&(_106651_ta.get()._field_refers))}));
	if (((_106684_ok && (_229a81181_arr(_106651_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _229a81181_arr(_106651_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto)) {
		_2299e1454_push_err(_self_.ptr(), _106651_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_106684_ok=false;
	};
	return _106684_ok;
}



inline void _2299ea55c_check_type_alias_decl(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_229a7c666_TypeAlias>& _108946_ta, jule::Trait<_229a98e02_Lookup> _108966_l) {
	if (_2276b42b1_is_ignore_ident(_108946_ta.get()._field_ident)) {
		_2299e1454_push_err(_self_.ptr(), _108946_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_2299ea22c_check_type_alias_decl_kind(_self_, _108946_ta,_108966_l);
}



inline void _2299ea804_check_type_alias_decl_dup(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_229a7c666_TypeAlias>& _109750_ta) {
	if (_2276b42b1_is_ignore_ident(_109750_ta.get()._field_ident)) {
		_2299e1454_push_err(_self_.ptr(), _109750_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_2299e207b_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_109750_ta)),_109750_ta.get()._field_ident,_109750_ta.get()._field_cpp_linked)) {
		_2299e1454_push_err(_self_.ptr(), _109750_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_109750_ta.get()._field_ident)}));
		_2299e1773_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_2299ea22c_check_type_alias_decl_kind(_self_, _109750_ta,jule::Trait<_229a98e02_Lookup>(_self_, 3));
}



inline jule::Bool _2299eaa79_check_type_alias_decls(jule::Ptr<_2299dd792_Sema> _self_) {
	jule::Bool _110944_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_22cec8c8a:;
		if (it != expr.end()) {
			jule::Ptr<_229a7c666_TypeAlias> _111021_ta = *it;
			{
				_2299ea804_check_type_alias_decl_dup(_self_, _111021_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_110944_ok = false;
					return _110944_ok;
				};
			}
			_iter_next_22cec8c8a:;
			++it;
			goto _iter_begin_22cec8c8a;
		}
		_iter_end_22cec8c8a:;
	};
	_110944_ok = true;
	return _110944_ok;
}



inline void _22ceda197_check_enum_items_dup(_2299dd792_Sema* _self_, jule::Slice<jule::Ptr<_22908619d_EnumItem>> _112142_items) {
	{
		auto &expr = _112142_items;
		auto it = expr.begin();
		_iter_begin_22cedb5a5:;
		if (it != expr.end()) {
			jule::Ptr<_22908619d_EnumItem> &_112216_item = *it;
			{
				if (_112216_item.get()._field_ident.empty()) {
					goto _iter_next_22cedb5a5;
				} else if (_2276b42b1_is_ignore_ident(_112216_item.get()._field_ident)) {
					_2299e1454_push_err(&(*_self_), _112216_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _112142_items;
						auto it = expr.begin();
						_iter_begin_22cedc2dc:;
						if (it != expr.end()) {
							jule::Ptr<_22908619d_EnumItem> &_112824_citem = *it;
							{
								if ((_112216_item == _112824_citem)) {
									goto _iter_end_22cedc2dc;
								} else if ((_112216_item.get()._field_ident == _112824_citem.get()._field_ident)) {
									_2299e1454_push_err(&(*_self_), _112216_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_112216_item.get()._field_ident)}));
									_2299e1773_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_22cedc2dc;
								};
							}
							_iter_next_22cedc2dc:;
							++it;
							goto _iter_begin_22cedc2dc;
						}
						_iter_end_22cedc2dc:;
					};
				};
			}
			_iter_next_22cedb5a5:;
			++it;
			goto _iter_begin_22cedb5a5;
		}
		_iter_end_22cedb5a5:;
	};
}

inline void _22cee59bb_check_enum_items_dup(_2299dd792_Sema* _self_, jule::Slice<jule::Ptr<_2290786bd_TypeEnumItem>> _112142_items) {
	{
		auto &expr = _112142_items;
		auto it = expr.begin();
		_iter_begin_22cee6dc9:;
		if (it != expr.end()) {
			jule::Ptr<_2290786bd_TypeEnumItem> &_112216_item = *it;
			{
				if (_112216_item.get()._field_ident.empty()) {
					goto _iter_next_22cee6dc9;
				} else if (_2276b42b1_is_ignore_ident(_112216_item.get()._field_ident)) {
					_2299e1454_push_err(&(*_self_), _112216_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _112142_items;
						auto it = expr.begin();
						_iter_begin_22cee7b11:;
						if (it != expr.end()) {
							jule::Ptr<_2290786bd_TypeEnumItem> &_112824_citem = *it;
							{
								if ((_112216_item == _112824_citem)) {
									goto _iter_end_22cee7b11;
								} else if ((_112216_item.get()._field_ident == _112824_citem.get()._field_ident)) {
									_2299e1454_push_err(&(*_self_), _112216_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_112216_item.get()._field_ident)}));
									_2299e1773_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_22cee7b11;
								};
							}
							_iter_next_22cee7b11:;
							++it;
							goto _iter_begin_22cee7b11;
						}
						_iter_end_22cee7b11:;
					};
				};
			}
			_iter_next_22cee6dc9:;
			++it;
			goto _iter_begin_22cee6dc9;
		}
		_iter_end_22cee6dc9:;
	};
}



inline void _2299eb074_check_enum_items_str(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228e0dcc3_Enum>& _114145_e) {
	jule::Ptr<_229a54352_Eval> _114217_eval = _2299e6a64_eval(_self_, jule::Trait<_229a98e02_Lookup>(_self_, 3));;
	{
		auto &expr = _114145_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_22cecab49:;
		if (it != expr.end()) {
			jule::Ptr<_22908619d_EnumItem> _114321_item = *it;
			{
				if (_228eb56c6_auto_expr(_114321_item.ptr())) {
					_114321_item.get()._field_value=jule::new_ptr<_229a5385c_Value>(_229a5385c_Value{._field_data=jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_constant=static__228dd6927_new_str(_114321_item.get()._field_ident)})});
					_114321_item.get()._field_value.get()._field_data.get()._field_model=static_cast<jule::Any>(_114321_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_229a527d4_Data> _115225_d = _229a6ea21_eval_expr(_114217_eval, _114321_item.get()._field_value.get()._field_expr);;
					if ((_115225_d == nullptr)) {
						goto _iter_next_22cecab49;
					};
					if ((!(_229a53197_is_const(_115225_d.ptr())))) {
						_2299e1454_push_err(_self_.ptr(), _114321_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_2299e705e_check_assign_type(_self_, false,_114145_e.get()._field_kind.get()._field_kind,_115225_d,_114321_item.get()._field_token);
					_114321_item.get()._field_value.get()._field_data=_115225_d;
				};
			}
			_iter_next_22cecab49:;
			++it;
			goto _iter_begin_22cecab49;
		}
		_iter_end_22cecab49:;
	};
}



inline void _2299eb2e9_check_enum_items_int(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228e0dcc3_Enum>& _116745_e) {
	jule::Ptr<_229a82d31_Prim> _116813_prim = _229a8046b_prim(_116745_e.get()._field_kind.get()._field_kind.ptr());;
	jule::U64 _116917_max = static_cast<jule::U64>(_2299b0a83_max(_229a83194_to_str(_116813_prim.ptr())));;
	jule::Ptr<_229a54352_Eval> _117017_eval = _2299e6a64_eval(_self_, jule::Trait<_229a98e02_Lookup>(_self_, 3));;
	{
		auto &expr = _116745_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_22ced10b1:;
		if (it != expr.end()) {
			jule::I64 _117114_i = it - expr.begin();
			jule::Ptr<_22908619d_EnumItem> _117121_item = *it;
			{
				if ((_116917_max == 0LLU)) {
					_2299e1454_push_err(_self_.ptr(), _117121_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_116917_max)--;
				};
				if (_228eb56c6_auto_expr(_117121_item.ptr())) {
					_117121_item.get()._field_value=jule::new_ptr<_229a5385c_Value>(_229a5385c_Value{._field_data=jule::new_ptr<_229a527d4_Data>()});
					{
						
						if (_2299b58ce_is_sig_int(_229a83194_to_str(_116813_prim.ptr()))) {
							_case_begin_22ced3646:;
							{
								_117121_item.get()._field_value.get()._field_data.get()._field_constant=static__228dd63b6_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((_116917_max - (_116917_max - static_cast<jule::U64>(_117114_i))))));
							}
						}
						else {
							_case_begin_22ced32a0:;
							{
								_117121_item.get()._field_value.get()._field_data.get()._field_constant=static__228dd64e8_new_u64(static_cast<jule::U64>((_116917_max - (_116917_max - static_cast<jule::U64>(_117114_i)))));
							}
						}
						_match_end_22ced3239:;
					};
					_117121_item.get()._field_value.get()._field_data.get()._field_model=static_cast<jule::Any>(_117121_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_229a527d4_Data> _118925_d = _229a6ea21_eval_expr(_117017_eval, _117121_item.get()._field_value.get()._field_expr);;
					if ((_118925_d == nullptr)) {
						goto _iter_next_22ced10b1;
					};
					if ((!(_229a53197_is_const(_118925_d.ptr())))) {
						_2299e1454_push_err(_self_.ptr(), _117121_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_2299e705e_check_assign_type(_self_, false,_116745_e.get()._field_kind.get()._field_kind,_118925_d,_117121_item.get()._field_token);
					_117121_item.get()._field_value.get()._field_data=_118925_d;
				};
			}
			_iter_next_22ced10b1:;
			++it;
			_117114_i++;
			goto _iter_begin_22ced10b1;
		}
		_iter_end_22ced10b1:;
	};
}



inline void _2299eb56e_check_enum_decl(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228e0dcc3_Enum>& _120440_e) {
	if (_2276b42b1_is_ignore_ident(_120440_e.get()._field_ident)) {
		_2299e1454_push_err(_self_.ptr(), _120440_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_2299e207b_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_120440_e)),_120440_e.get()._field_ident,false)) {
		_2299e1454_push_err(_self_.ptr(), _120440_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_120440_e.get()._field_ident)}));
		_2299e1773_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_120440_e.get()._field_items.len() == 0LL)) {
		_2299e1454_push_err(_self_.ptr(), _120440_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_120440_e.get()._field_ident)}));
	};
	_22ceda197_check_enum_items_dup(_self_.ptr(), _120440_e.get()._field_items);
	if ((_120440_e.get()._field_kind != nullptr)) {
		if ((!(_2299e539d_check_type(_self_, _120440_e.get()._field_kind,jule::Trait<_229a98e02_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_120440_e.get()._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_229a82d31_Prim> _123117_t = _229a8046b_prim(_120440_e.get()._field_kind.get()._field_kind.ptr());;
	if ((_123117_t == nullptr)) {
		_2299e1454_push_err(_self_.ptr(), _120440_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_229a86065_is_str(_123117_t.ptr())) {
			_case_begin_22cee18c9:;
			{
				_2299eb074_check_enum_items_str(_self_, _120440_e);
			}
		}
		else if (_2299b5e62_is_int(_229a83194_to_str(_123117_t.ptr()))) {
			_case_begin_22cee1621:;
			{
				_2299eb2e9_check_enum_items_int(_self_, _120440_e);
			}
		}
		else {
			_case_begin_22cee0ac6:;
			{
				_2299e1454_push_err(_self_.ptr(), _120440_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_22cee091c:;
	};
}



inline void _2299eb7e4_check_type_enum_decl(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_2292e1e75_TypeEnum>& _124845_e) {
	if (_2276b42b1_is_ignore_ident(_124845_e.get()._field_ident)) {
		_2299e1454_push_err(_self_.ptr(), _124845_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_2299e207b_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_124845_e)),_124845_e.get()._field_ident,false)) {
		_2299e1454_push_err(_self_.ptr(), _124845_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_124845_e.get()._field_ident)}));
		_2299e1773_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_124845_e.get()._field_items.len() == 0LL)) {
		_2299e1454_push_err(_self_.ptr(), _124845_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_124845_e.get()._field_ident)}));
		return;;
	};
	_22cee59bb_check_enum_items_dup(_self_.ptr(), _124845_e.get()._field_items);
	{
		auto &expr = _124845_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_22cee637e:;
		if (it != expr.end()) {
			jule::Ptr<_2290786bd_TypeEnumItem> _126221_item = *it;
			{
				if ((_126221_item.get()._field_kind == nullptr)) {
					_2299e1454_push_err(_self_.ptr(), _126221_item.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_22cee637e;
				};
				jule::Bool _126717_ok = _2299e539d_check_type(_self_, _126221_item.get()._field_kind,jule::Trait<_229a98e02_Lookup>(_self_, 3));;
				if ((!(_126717_ok))) {
					goto _iter_next_22cee637e;
				};
				jule::Ptr<_229a82d31_Prim> _127117_p = _229a8046b_prim(_126221_item.get()._field_kind.get()._field_kind.ptr());;
				if (((_127117_p != nullptr) && _229a862c9_is_any(_127117_p.ptr()))) {
					_2299e1454_push_err(_self_.ptr(), _126221_item.get()._field_token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_22cee637e:;
			++it;
			goto _iter_begin_22cee637e;
		}
		_iter_end_22cee637e:;
	};
	if ((_124845_e.get()._field_items.len() == 1LL)) {
		jule::Ptr<_2290786bd_TypeEnumItem> _127721_item = _124845_e.get()._field_items[0LL];;
		_229a7d359_TypeKind _127817_tk = _229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_124845_e, 4)};;
		if (((_127721_item.get()._field_kind.get()._field_kind != nullptr) && _229a7da63_equals(_127721_item.get()._field_kind.get()._field_kind, ((jule::Ptr<_229a7d359_TypeKind>)((&(_127817_tk))))))) {
			_2299e1454_push_err(_self_.ptr(), _127721_item.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_22916e011_to_str(_124845_e.ptr()))}));
		};
	};
}



inline jule::Bool _2299eba58_check_enum_decls(jule::Ptr<_2299dd792_Sema> _self_) {
	jule::Bool _128838_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_22d0002ab:;
		if (it != expr.end()) {
			jule::Ptr<_228e0dcc3_Enum> _128921_e = *it;
			{
				_2299eb56e_check_enum_decl(_self_, _128921_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_128838_ok = false;
					return _128838_ok;
				};
			}
			_iter_next_22d0002ab:;
			++it;
			goto _iter_begin_22d0002ab;
		}
		_iter_end_22d0002ab:;
	};
	_128838_ok = true;
	return _128838_ok;
}



inline jule::Bool _2299ebcbc_check_type_enum_decls(jule::Ptr<_2299dd792_Sema> _self_) {
	jule::Bool _130143_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_enums;
		auto it = expr.begin();
		_iter_begin_22d001994:;
		if (it != expr.end()) {
			jule::Ptr<_2292e1e75_TypeEnum> _130221_e = *it;
			{
				_2299eb7e4_check_type_enum_decl(_self_, _130221_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_130143_ok = false;
					return _130143_ok;
				};
			}
			_iter_next_22d001994:;
			++it;
			goto _iter_begin_22d001994;
		}
		_iter_end_22d001994:;
	};
	_130143_ok = true;
	return _130143_ok;
}



inline jule::Bool _2299ec0ca_check_decl_generics(_2299dd792_Sema* _self_, jule::Slice<jule::Ptr<_228d35777_GenericDecl>>& _131339_generics) {
	jule::Bool _131372_ok = jule::Bool();
	_131372_ok=true;
	{
		auto &expr = _131339_generics;
		auto it = expr.begin();
		_iter_begin_22d0032d1:;
		if (it != expr.end()) {
			jule::I64 _131513_i = it - expr.begin();
			jule::Ptr<_228d35777_GenericDecl> &_131516_g = *it;
			{
				if (_2276b42b1_is_ignore_ident(_131516_g.get()._field_ident)) {
					_2299e1454_push_err(&(*_self_), _131516_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_131372_ok=false;
					goto _iter_next_22d0032d1;
				};
				_julec_label_duplication_lookup:;
				{
					auto &expr = _131339_generics;
					auto it = expr.begin();
					_iter_begin_22d00437b:;
					if (it != expr.end()) {
						jule::I64 _132417_j = it - expr.begin();
						jule::Ptr<_228d35777_GenericDecl> &_132420_ct = *it;
						{
							{
								
								if ((_132417_j >= _131513_i)) {
									_case_begin_22d005bc9:;
									{
										goto _iter_end_22d00437b;
									}
								}
								else if ((_131516_g.get()._field_ident == _132420_ct.get()._field_ident)) {
									_case_begin_22d005c51:;
									{
										_2299e1454_push_err(&(*_self_), _131516_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131516_g.get()._field_ident)}));
										_2299e1773_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_131372_ok=false;
										goto _iter_end_22d00437b;
									}
								}
								_match_end_22d005aa8:;
							};
						}
						_iter_next_22d00437b:;
						++it;
						_132417_j++;
						goto _iter_begin_22d00437b;
					}
					_iter_end_22d00437b:;
				};
			}
			_iter_next_22d0032d1:;
			++it;
			_131513_i++;
			goto _iter_begin_22d0032d1;
		}
		_iter_end_22d0032d1:;
	};
	return _131372_ok;
}



inline jule::Bool _2299ec40a_check_fn_decl_params_dup(_2299dd792_Sema* _self_, jule::Ptr<_228de6cbc_Fn>& _134044_f) {
	jule::Bool _134054_ok = jule::Bool();
	_134054_ok=true;
	_julec_label_check:;
	{
		auto &expr = _134044_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_22d0080c7:;
		if (it != expr.end()) {
			jule::I64 _134313_i = it - expr.begin();
			jule::Ptr<_228de5480_Param> &_134316_p = *it;
			{
				{
					auto &expr = _134044_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_22d008d42:;
					if (it != expr.end()) {
						jule::Ptr<_228d35777_GenericDecl> &_134520_g = *it;
						{
							if ((_134316_p.get()._field_ident == _134520_g.get()._field_ident)) {
								_134054_ok=false;
								_2299e1454_push_err(&(*_self_), _134316_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_134316_p.get()._field_ident)}));
								_2299e1773_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_22d0080c7;
							};
						}
						_iter_next_22d008d42:;
						++it;
						goto _iter_begin_22d008d42;
					}
					_iter_end_22d008d42:;
				};
				_julec_label_params_lookup:;
				{
					auto &expr = _134044_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_22d0092c6:;
					if (it != expr.end()) {
						jule::I64 _135517_j = it - expr.begin();
						jule::Ptr<_228de5480_Param> &_135520_jp = *it;
						{
							{
								
								if ((_135517_j >= _134313_i)) {
									_case_begin_22d00b5c5:;
									{
										goto _iter_end_22d0092c6;
									}
								}
								else if ((_2276b4558_is_anon_ident(_134316_p.get()._field_ident) || _2276b4558_is_anon_ident(_135520_jp.get()._field_ident))) {
									_case_begin_22d00b64c:;
									{
										goto _iter_end_22d0092c6;
									}
								}
								else if ((_134316_p.get()._field_ident == _135520_jp.get()._field_ident)) {
									_case_begin_22d00b6c4:;
									{
										_134054_ok=false;
										_2299e1454_push_err(&(*_self_), _134316_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_134316_p.get()._field_ident)}));
										_2299e1773_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_22d0080c7;
									}
								}
								_match_end_22d00b493:;
							};
						}
						_iter_next_22d0092c6:;
						++it;
						_135517_j++;
						goto _iter_begin_22d0092c6;
					}
					_iter_end_22d0092c6:;
				};
			}
			_iter_next_22d0080c7:;
			++it;
			_134313_i++;
			goto _iter_begin_22d0080c7;
		}
		_iter_end_22d0080c7:;
	};
	return _134054_ok;
}



inline jule::Bool _2299ec74b_check_fn_decl_result_dup(_2299dd792_Sema* _self_, jule::Ptr<_228de6cbc_Fn>& _137444_f) {
	jule::Bool _137454_ok = jule::Bool();
	_137454_ok=true;
	if (_228de722e_is_void(_137444_f.ptr())) {
		return _137454_ok;
	};
	{
		auto &expr = _137444_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_22d00e298:;
		if (it != expr.end()) {
			jule::I64 _138113_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> &_138116_v = *it;
			{
				if ((_2276b42b1_is_ignore_ident(_138116_v.get()._field_kind) || _2276b4558_is_anon_ident(_138116_v.get()._field_kind))) {
					goto _iter_next_22d00e298;
				};
				{
					auto &expr = _137444_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_22d0109d6:;
					if (it != expr.end()) {
						jule::Ptr<_228d35777_GenericDecl> &_138620_g = *it;
						{
							if ((_138116_v.get()._field_kind == _138620_g.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_22d0109d6:;
						++it;
						goto _iter_begin_22d0109d6;
					}
					_iter_end_22d0109d6:;
				};
				{
					auto &expr = _137444_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_22d011c6d:;
					if (it != expr.end()) {
						jule::Ptr<_228de5480_Param> &_139220_p = *it;
						{
							if ((_138116_v.get()._field_kind == _139220_p.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_22d011c6d:;
						++it;
						goto _iter_begin_22d011c6d;
					}
					_iter_end_22d011c6d:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _137444_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_22d013016:;
					if (it != expr.end()) {
						jule::I64 _140017_j = it - expr.begin();
						jule::Ptr<_2276b1a1c_Token> &_140020_jv = *it;
						{
							{
								
								if ((_140017_j >= _138113_i)) {
									_case_begin_22d013ca3:;
									{
										goto _iter_end_22d013016;
									}
								}
								else if ((_140020_jv.get()._field_kind == _138116_v.get()._field_kind)) {
									_case_begin_22d013d2a:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_22d013b82:;
							};
						}
						_iter_next_22d013016:;
						++it;
						_140017_j++;
						goto _iter_begin_22d013016;
					}
					_iter_end_22d013016:;
				};
				goto _iter_next_22d00e298;
				_julec_label_exist:;
				_2299e1454_push_err(&(*_self_), _138116_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_138116_v.get()._field_kind)}));
				_2299e1773_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_137454_ok=false;
			}
			_iter_next_22d00e298:;
			++it;
			_138113_i++;
			goto _iter_begin_22d00e298;
		}
		_iter_end_22d00e298:;
	};
	return _137454_ok;
}



inline void _2299eca04_check_fn_decl_prototype(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de6cbc_Fn>& _142148_f) {
	if ((_142148_f.get()._field_exceptional && _142148_f.get()._field_cpp_linked)) {
		_2299e1454_push_err(_self_.ptr(), _142148_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_142148_f.get()._field_exceptional) {
		if (_228de7707_is_entry_point(_142148_f.ptr())) {
			_2299e1454_push_err(_self_.ptr(), _142148_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_228de796b_is_init(_142148_f.ptr())) {
			_2299e1454_push_err(_self_.ptr(), _142148_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_2299ec0ca_check_decl_generics(_self_.ptr(), _142148_f.get()._field_generics)))) {
			_case_begin_22d017119:;
		}
		else if ((!(_2299ec40a_check_fn_decl_params_dup(_self_.ptr(), _142148_f)))) {
			_case_begin_22d0184a0:;
		}
		else if ((!(_2299ec74b_check_fn_decl_result_dup(_self_.ptr(), _142148_f)))) {
			_case_begin_22d018516:;
		}
		_match_end_22d016e60:;
	};
}



inline void _2299eccac_check_trait_decl_method(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de6cbc_Fn>& _144248_f) {
	if (_2276b42b1_is_ignore_ident(_144248_f.get()._field_ident)) {
		_2299e1454_push_err(_self_.ptr(), _144248_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_144248_f.get()._field_sema=_self_;
	_2299eca04_check_fn_decl_prototype(_self_, _144248_f);
	jule::Ptr<_228de996d_FnIns> _144917_ins = _228de841c_instance(_144248_f);;
	_2299e92e7_reload_fn_ins_types(_self_, _144917_ins);
	_144917_ins.get()._field_reloaded=true;
	_228de86e7_append_instance(_144248_f.ptr(), _144917_ins);
}



inline void _2299ed065_check_trait_decl_methods(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_22923d1bd_Trait>& _145549_t) {
	{
		auto &expr = _145549_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_22d01ba7a:;
		if (it != expr.end()) {
			jule::I64 _145614_i = it - expr.begin();
			jule::Ptr<_228de6cbc_Fn> _145621_f = *it;
			{
				_2299eccac_check_trait_decl_method(_self_, _145621_f);
				_145549_t.get()._field_mutable=(_145549_t.get()._field_mutable || _145621_f.get()._field_params[0LL].get()._field_mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _145549_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_22d01d7c4:;
					if (it != expr.end()) {
						jule::I64 _146717_j = it - expr.begin();
						jule::Ptr<_228de6cbc_Fn> _146720_jf = *it;
						{
							{
								
								if ((_146717_j >= _145614_i)) {
									_case_begin_22d01e95c:;
									{
										goto _iter_end_22d01d7c4;
									}
								}
								else if ((_145621_f.get()._field_ident == _146720_jf.get()._field_ident)) {
									_case_begin_22d01e9d4:;
									{
										_2299e1454_push_err(_self_.ptr(), _145621_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_145621_f.get()._field_ident)}));
										_2299e1773_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_22d01d7c4;
									}
								}
								_match_end_22d01e83b:;
							};
						}
						_iter_next_22d01d7c4:;
						++it;
						_146717_j++;
						goto _iter_begin_22d01d7c4;
					}
					_iter_end_22d01d7c4:;
				};
			}
			_iter_next_22d01ba7a:;
			++it;
			_145614_i++;
			goto _iter_begin_22d01ba7a;
		}
		_iter_end_22d01ba7a:;
	};
}



inline void _2299ed2eb_check_trait_decl(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_22923d1bd_Trait>& _148641_t) {
	if (_2276b42b1_is_ignore_ident(_148641_t.get()._field_ident)) {
		_2299e1454_push_err(_self_.ptr(), _148641_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_2299e207b_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_148641_t)),_148641_t.get()._field_ident,false)) {
		_2299e1454_push_err(_self_.ptr(), _148641_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_148641_t.get()._field_ident)}));
		_2299e1773_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_2299ed065_check_trait_decl_methods(_self_, _148641_t);
}



inline jule::Bool _2299ed560_check_trait_decls(jule::Ptr<_2299dd792_Sema> _self_) {
	jule::Bool _149839_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_22d023983:;
		if (it != expr.end()) {
			jule::Ptr<_22923d1bd_Trait> _149921_t = *it;
			{
				_2299ed2eb_check_trait_decl(_self_, _149921_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_149839_ok = false;
					return _149839_ok;
				};
			}
			_iter_next_22d023983:;
			++it;
			goto _iter_begin_22d023983;
		}
		_iter_end_22d023983:;
	};
	_149839_ok = true;
	return _149839_ok;
}



inline jule::Bool _2299ed939_check_trait_impl_methods(_2299dd792_Sema* _self_, jule::Ptr<_22923d1bd_Trait>& _151048_base, jule::Ptr<_2299a3504_Impl>& _151063_ipl) {
	jule::Bool _151077_ok = jule::Bool();
	_151077_ok=true;
	{
		auto &expr = _151063_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_22d025710:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> &_151216_f = *it;
			{
				if ((_228ea37b3_find_method(_151048_base.ptr(), _151216_f.get()._field_ident) == nullptr)) {
					_2299e1454_push_err(&(*_self_), _151216_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_151048_base.get()._field_ident),jule::Any(_151216_f.get()._field_ident)}));
					_151077_ok=false;
				};
			}
			_iter_next_22d025710:;
			++it;
			goto _iter_begin_22d025710;
		}
		_iter_end_22d025710:;
	};
	return _151077_ok;
}



inline jule::Bool _2299edd02_impl_to_struct(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d188c0_Struct>& _152139_dest, jule::Ptr<_2299a3504_Impl>& _152159_ipl) {
	jule::Bool _152173_ok = jule::Bool();
	_152173_ok=true;
	{
		auto &expr = _152159_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_22d027a53:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _152521_f = *it;
			{
				if (((_228d07cdd_find_method(_152139_dest.ptr(), _152521_f.get()._field_ident,_152521_f.get()._field_statically) != nullptr) || (_228d0823e_find_field(_152139_dest.ptr(), _152521_f.get()._field_ident) != nullptr))) {
					_2299e1454_push_err(_self_.ptr(), _152521_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_152139_dest.get()._field_ident),jule::Any(_152521_f.get()._field_ident)}));
					_152173_ok=false;
					goto _iter_next_22d027a53;
				};
				if (((_152139_dest.get()._field_generics.len() > 0LL) && (_152521_f.get()._field_generics.len() > 0LL))) {
					{
						auto &expr = _152521_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_22d02a14e:;
						if (it != expr.end()) {
							jule::Ptr<_228d35777_GenericDecl> _153324_fg = *it;
							{
								{
									auto &expr = _152139_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_22d02a98a:;
									if (it != expr.end()) {
										jule::Ptr<_228d35777_GenericDecl> _153428_dg = *it;
										{
											if ((_153324_fg.get()._field_ident == _153428_dg.get()._field_ident)) {
												_2299e1454_push_err(_self_.ptr(), _153324_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_152173_ok=false;
											};
										}
										_iter_next_22d02a98a:;
										++it;
										goto _iter_begin_22d02a98a;
									}
									_iter_end_22d02a98a:;
								};
							}
							_iter_next_22d02a14e:;
							++it;
							goto _iter_begin_22d02a14e;
						}
						_iter_end_22d02a14e:;
					};
				};
				_2299e239a_check_directives(_self_, _152521_f.get()._field_directives,jule::Any(_152521_f));
				_152521_f.get()._field_sema=_self_;
				_152521_f.get()._field_owner=_152139_dest;
				_152139_dest.get()._field_methods = jule::alloc_for_append(_152139_dest.get()._field_methods,1);_152139_dest.get()._field_methods.__push(_152521_f);;
			}
			_iter_next_22d027a53:;
			++it;
			goto _iter_begin_22d027a53;
		}
		_iter_end_22d027a53:;
	};
	{
		auto &expr = _152159_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_22d02c87c:;
		if (it != expr.end()) {
			jule::Ptr<_229a0a4a1_Var> _155021_v = *it;
			{
				;
				if (((_228d07cdd_find_method(_152139_dest.ptr(), _155021_v.get()._field_ident,true) != nullptr) || (_228d08d00_find_static(_152139_dest.ptr(), _155021_v.get()._field_ident) != nullptr))) {
					_2299e1454_push_err(_self_.ptr(), _155021_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_152139_dest.get()._field_ident),jule::Any(_155021_v.get()._field_ident)}));
					_152173_ok=false;
					goto _iter_next_22d02c87c;
				};
				_2299ee891_check_var_decl(_self_, _155021_v,jule::Trait<_229a98e02_Lookup>(_self_, 3));
				_229a03015_check_type_var(_self_, _155021_v,jule::Trait<_229a98e02_Lookup>(_self_, 3));
				_152139_dest.get()._field_statics = jule::alloc_for_append(_152139_dest.get()._field_statics,1);_152139_dest.get()._field_statics.__push(_155021_v);;
			}
			_iter_next_22d02c87c:;
			++it;
			goto _iter_begin_22d02c87c;
		}
		_iter_end_22d02c87c:;
	};
	return _152173_ok;
}



inline void _2299ee077_impl_trait(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_2299a3504_Impl>& _156635_decl) {
	jule::Ptr<_229a7d359_TypeKind> _156717_base_t = _2299e5e4d_select_type(_self_, _156635_decl.get()._field_base);;
	if ((_156717_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_22923d1bd_Trait> _157117_base = _229a81b32_trt(_156717_base_t.ptr());;
	if ((_157117_base == nullptr)) {
		_2299e1454_push_err(_self_.ptr(), _156635_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_156717_base_t.ptr()))}));
		_2299e1773_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_229a7d359_TypeKind> _157817_dest_t = _2299e5e4d_select_type(_self_, _156635_decl.get()._field_dest);;
	if ((_157817_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_228d44c1a_StructIns> _158217_dest_s = _229a818bd_strct(_157817_dest_t.ptr());;
	if ((_158217_dest_s == nullptr)) {
		_2299e1454_push_err(_self_.ptr(), _156635_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_157817_dest_t.ptr()))}));
		_2299e1773_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_228d188c0_Struct> _158917_dest = _158217_dest_s.get()._field_decl;;
	if ((_2276b779d_dir(_158917_dest.get()._field_token.get()._field_file.ptr()) != _2276b779d_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_2299e1454_push_err(_self_.ptr(), _156635_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_157117_base.get()._field_implemented = jule::alloc_for_append(_157117_base.get()._field_implemented,1);_157117_base.get()._field_implemented.__push(_158917_dest);;
	_158917_dest.get()._field_implements = jule::alloc_for_append(_158917_dest.get()._field_implements,1);_158917_dest.get()._field_implements.__push(_157117_base);;
	if ((_156635_decl.get()._field_statics.len() > 0LL)) {
		_2299e1454_push_err(_self_.ptr(), _156635_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_2299ed939_check_trait_impl_methods(_self_.ptr(), _157117_base,_156635_decl)))) {
			_case_begin_22d0382b1:;
			{
				return;;
			}
		}
		else if ((!(_2299edd02_impl_to_struct(_self_, _158917_dest,_156635_decl)))) {
			_case_begin_22d038327:;
			{
				return;;
			}
		}
		_match_end_22d037469:;
	};
}



inline void _2299ee2ec_impl_struct(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_2299a3504_Impl>& _161136_decl) {
	jule::Ptr<_229a7d359_TypeKind> _161217_dest_t = _2299e5e4d_select_type(_self_, _161136_decl.get()._field_dest);;
	if ((_161217_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_228d44c1a_StructIns> _161617_dest_s = _229a818bd_strct(_161217_dest_t.ptr());;
	if ((_161617_dest_s == nullptr)) {
		_2299e1454_push_err(_self_.ptr(), _161136_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_161217_dest_t.ptr()))}));
		_2299e1773_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_228d188c0_Struct> _162317_dest = _161617_dest_s.get()._field_decl;;
	if ((_2276b779d_dir(_162317_dest.get()._field_token.get()._field_file.ptr()) != _2276b779d_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_2299e1454_push_err(_self_.ptr(), _161136_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_2299edd02_impl_to_struct(_self_, _162317_dest,_161136_decl)))) {
			_case_begin_22d03cda9:;
			{
				return;;
			}
		}
		_match_end_22d03b759:;
	};
}



inline void _2299ee572_impl_impl(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_2299a3504_Impl>& _163634_decl) {
	{
		
		if (_229983968_is_trait_impl(_163634_decl.ptr())) {
			_case_begin_22d03d99d:;
			{
				_2299ee077_impl_trait(_self_, _163634_decl);
			}
		}
		else if (_22998b300_is_struct_impl(_163634_decl.ptr())) {
			_case_begin_22d03da25:;
			{
				_2299ee2ec_impl_struct(_self_, _163634_decl);
			}
		}
		_match_end_22d03d87c:;
	};
}



inline void _2299ee891_check_var_decl(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_229a0a4a1_Var>& _164739_decl, jule::Trait<_229a98e02_Lookup> _164755_l) {
	if (_2276b42b1_is_ignore_ident(_164739_decl.get()._field_ident)) {
		_2299e1454_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_229a0aabc_is_type_inferred(_164739_decl.ptr())) {
		if ((!(_229a0a858_is_initialized(_164739_decl.ptr())))) {
			_2299e1454_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_2299e539d_check_type(_self_, _164739_decl.get()._field_kind,_164755_l);
	};
	if ((_164739_decl.get()._field_constant && _164739_decl.get()._field_reference)) {
		_2299e1454_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_229a0a858_is_initialized(_164739_decl.ptr())))) {
		if (_164739_decl.get()._field_constant) {
			_2299e1454_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_164739_decl.get()._field_statically) {
			_2299e1454_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_164739_decl.get()._field_reference) {
			_2299e1454_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _2299eeb16_check_global_var_decl(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_229a0a4a1_Var>& _167946_decl) {
	if (_2299e207b_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167946_decl)),_167946_decl.get()._field_ident,_167946_decl.get()._field_cpp_linked)) {
		_2299e1454_push_err(_self_.ptr(), _167946_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_167946_decl.get()._field_ident)}));
		_2299e1773_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_167946_decl.get()._field_cpp_linked && _167946_decl.get()._field_constant)) {
		_2299e1454_push_err(_self_.ptr(), _167946_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_167946_decl.get()._field_cpp_linked)) && (!(_167946_decl.get()._field_constant))) && (!(_167946_decl.get()._field_statically)))) {
		_2299e1454_push_err(_self_.ptr(), _167946_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_2299e1773_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_2299e239a_check_directives(_self_, _167946_decl.get()._field_directives,jule::Any(_167946_decl));
	_2299ee891_check_var_decl(_self_, _167946_decl,jule::Trait<_229a98e02_Lookup>(_self_, 3));
}



inline jule::Bool _2299eed7a_check_global_decls(jule::Ptr<_2299dd792_Sema> _self_) {
	jule::Bool _169840_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_22d0484ad:;
		if (it != expr.end()) {
			jule::Ptr<_229a0a4a1_Var> _169921_decl = *it;
			{
				_2299eeb16_check_global_var_decl(_self_, _169921_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_169840_ok = false;
					return _169840_ok;
				};
			}
			_iter_next_22d0484ad:;
			++it;
			goto _iter_begin_22d0484ad;
		}
		_iter_end_22d0484ad:;
	};
	_169840_ok = true;
	return _169840_ok;
}



inline jule::Bool _229a00254_check_struct_trait_impl(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d188c0_Struct>& _171048_strct, jule::Ptr<_22923d1bd_Trait>& _171069_trt) {
	jule::Bool _171084_ok = jule::Bool();
	{
		auto &expr = _171069_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_22d049ed7:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _171121_tf = *it;
			{
				jule::Bool _171221_exist = false;;
				jule::Ptr<_228de6cbc_Fn> _171321_sf = _228d07cdd_find_method(_171048_strct.ptr(), _171121_tf.get()._field_ident,_171121_tf.get()._field_statically);;
				jule::Ptr<_228de996d_FnIns> _171417_tf_k = _2299e7eb6_get_trait_check_fn_kind(_self_, _171121_tf);;
				if ((_171321_sf != nullptr)) {
					jule::Ptr<_228de996d_FnIns> _171625_sf_k = _2299e7eb6_get_trait_check_fn_kind(_self_, _171321_sf);;
					_171221_exist=(((_171417_tf_k.get()._field_decl.get()._field_public == _171625_sf_k.get()._field_decl.get()._field_public) && (_171417_tf_k.get()._field_decl.get()._field_ident == _171625_sf_k.get()._field_decl.get()._field_ident)) && _228dea0ab_equals(_171417_tf_k, jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_171625_sf_k, 1)})));
				};
				if (_171221_exist) {
					jule::Ptr<_228ce499a_Directive> _172221_d = _229a77a3a_find_directive(_171321_sf.get()._field_directives,jule::Str("deprecated", 10));;
					if ((_172221_d != nullptr)) {
						_2299e1454_push_err(_self_.ptr(), _172221_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_171084_ok=false;
				} else {
					;
					jule::Str _172925_s = _228deb046_get_kind_str(_171417_tf_k.ptr(), true);;
					if (_171121_tf.get()._field_public) {
						(_172925_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_2299e1454_push_err(_self_.ptr(), _171048_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_171069_trt.get()._field_ident),jule::Any(_172925_s)}));
					_171084_ok=false;
				};
			}
			_iter_next_22d049ed7:;
			++it;
			goto _iter_begin_22d049ed7;
		}
		_iter_end_22d049ed7:;
	};
	return _171084_ok;
}



inline jule::Bool _229a00573_check_struct_impls(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d188c0_Struct>& _174043_s) {
	jule::Bool _174057_ok = jule::Bool();
	_174057_ok=true;
	{
		auto &expr = _174043_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_22d051cd0:;
		if (it != expr.end()) {
			jule::Ptr<_22923d1bd_Trait> _174221_trt = *it;
			{
				_174057_ok=(_229a00254_check_struct_trait_impl(_self_, _174043_s,_174221_trt) && _174057_ok);
			}
			_iter_next_22d051cd0:;
			++it;
			goto _iter_begin_22d051cd0;
		}
		_iter_end_22d051cd0:;
	};
	return _174057_ok;
}



inline jule::Bool _229a00881_check_struct_fields(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d188c0_Struct>& _174844_st) {
	jule::Bool _174859_ok = jule::Bool();
	_174859_ok=true;
	{
		auto &expr = _174844_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_22d053221:;
		if (it != expr.end()) {
			jule::Ptr<_228d0ad8a_Field> _175021_f = *it;
			{
				_175021_f.get()._field_owner=_174844_st;
				{
					auto &expr = _174844_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_22d053d15:;
					if (it != expr.end()) {
						jule::Ptr<_228d0ad8a_Field> _175220_cf = *it;
						{
							if ((_175021_f == _175220_cf)) {
								goto _iter_end_22d053d15;
							} else if ((_175021_f.get()._field_ident == _175220_cf.get()._field_ident)) {
								_2299e1454_push_err(_self_.ptr(), _175021_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_175021_f.get()._field_ident)}));
								_2299e1773_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_174859_ok=false;
							};
						}
						_iter_next_22d053d15:;
						++it;
						goto _iter_begin_22d053d15;
					}
					_iter_end_22d053d15:;
				};
			}
			_iter_next_22d053221:;
			++it;
			goto _iter_begin_22d053221;
		}
		_iter_end_22d053221:;
	};
	return _174859_ok;
}



inline void _229a00b06_check_struct_decl(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d188c0_Struct>& _176542_s) {
	if (_2276b42b1_is_ignore_ident(_176542_s.get()._field_ident)) {
		_2299e1454_push_err(_self_.ptr(), _176542_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_2299e207b_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_176542_s)),_176542_s.get()._field_ident,_176542_s.get()._field_cpp_linked)) {
		_2299e1454_push_err(_self_.ptr(), _176542_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_176542_s.get()._field_ident)}));
		_2299e1773_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_2299e239a_check_directives(_self_, _176542_s.get()._field_directives,jule::Any(_176542_s));
	{
		
		if ((!(_2299ec0ca_check_decl_generics(_self_.ptr(), _176542_s.get()._field_generics)))) {
			_case_begin_22d057c4d:;
		}
		else if ((!(_229a00881_check_struct_fields(_self_, _176542_s)))) {
			_case_begin_22d057cb4:;
		}
		else if ((!(_229a00573_check_struct_impls(_self_, _176542_s)))) {
			_case_begin_22d057d2a:;
		}
		_match_end_22d057b0a:;
	};
}



inline jule::Bool _229a00d6a_check_struct_decls(jule::Ptr<_2299dd792_Sema> _self_) {
	jule::Bool _178340_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_22d059117:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> _178421_s = *it;
			{
				_229a00b06_check_struct_decl(_self_, _178421_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_178340_ok = false;
					return _178340_ok;
				};
			}
			_iter_next_22d059117:;
			++it;
			goto _iter_begin_22d059117;
		}
		_iter_end_22d059117:;
	};
	_178340_ok = true;
	return _178340_ok;
}



inline void _229a010e0_check_fn_decl(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de6cbc_Fn>& _179638_f) {
	if (_2276b42b1_is_ignore_ident(_179638_f.get()._field_ident)) {
		_2299e1454_push_err(_self_.ptr(), _179638_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_2299e239a_check_directives(_self_, _179638_f.get()._field_directives,jule::Any(_179638_f));
	_179638_f.get()._field_sema=_self_;
	_2299eca04_check_fn_decl_prototype(_self_, _179638_f);
	if (_2299e207b_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_179638_f)),_179638_f.get()._field_ident,_179638_f.get()._field_cpp_linked)) {
		if ((_179638_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_228de6cbc_Fn> _180821_init = _2299e008a_find_fn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_180821_init != nullptr)) {
				return;;
			};
		};
		_2299e1454_push_err(_self_.ptr(), _179638_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_179638_f.get()._field_ident)}));
		_2299e1773_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _229a01354_check_fn_decls(jule::Ptr<_2299dd792_Sema> _self_) {
	jule::Bool _181936_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_22d05e33c:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _182021_f = *it;
			{
				_229a010e0_check_fn_decl(_self_, _182021_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_181936_ok = false;
					return _181936_ok;
				};
			}
			_iter_next_22d05e33c:;
			++it;
			goto _iter_begin_22d05e33c;
		}
		_iter_end_22d05e33c:;
	};
	_181936_ok = true;
	return _181936_ok;
}



inline void _229a0171c_push_cycle_error(_2299dd792_Sema* _self_, jule::Ptr<_228d188c0_Struct>& _183132_st1, jule::Ptr<_228d188c0_Struct>& _183147_st2, jule::Str& _183166_message) {
	;
	jule::Str _183413_refers_to = _240948be2_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_183132_st1.get()._field_ident),jule::Any(_183147_st2.get()._field_ident)}));;
	(_183166_message).buffer.insert(0, (((_227315ab1_repeat(jule::Str(" ", 1),4LL) + _183413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _229a01b6d_check_cross_cycle(_2299dd792_Sema* _self_, jule::Ptr<_228d188c0_Struct>& _183833_st1, jule::Ptr<_228d188c0_Struct>& _183848_st2, jule::Str& _183867_message) {
	{
		auto &expr = _183848_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_22d0628d4:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> &_183916_u = *it;
			{
				if ((_183916_u == _183833_st1)) {
					_229a0171c_push_cycle_error(&(*_self_), _183848_st2,_183916_u,_183867_message);
					return false;
				};
				if ((!(_229a01b6d_check_cross_cycle(&(*_self_), _183833_st1,_183916_u,_183867_message)))) {
					_229a0171c_push_cycle_error(&(*_self_), _183848_st2,_183916_u,_183867_message);
					return false;
				};
			}
			_iter_next_22d0628d4:;
			++it;
			goto _iter_begin_22d0628d4;
		}
		_iter_end_22d0628d4:;
	};
	return true;
}



inline jule::Bool _229a02102_check_struct_derive_illegal_cycles(_2299dd792_Sema* _self_, jule::Str _185453_derive, jule::Ptr<_228d188c0_Struct>& _185467_st1, jule::Ptr<_229a7d359_TypeKind>& _185486_k) {
	jule::Bool _1854102_ok = jule::Bool();
	jule::Ptr<_228d188c0_Struct> _185517_st2 = _229a9651a_get_struct_from_kind(_185486_k);;
	if ((_185517_st2 == nullptr)) {
		_1854102_ok = true;
		return _1854102_ok;
	};
	if ((_185467_st1 == _185517_st2)) {
		_2299e1454_push_err(&(*_self_), _185467_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_185453_derive),jule::Any(_185467_st1.get()._field_ident)}));
		_1854102_ok = false;
		return _1854102_ok;
	};
	jule::Str _186717_message = jule::Str();;
	if ((!(_229a01b6d_check_cross_cycle(&(*_self_), _185467_st1,_185517_st2,_186717_message)))) {
		jule::Str _187021_err_msg = _186717_message;;
		_186717_message=jule::Str();
		_229a0171c_push_cycle_error(&(*_self_), _185467_st1,_185517_st2,_186717_message);
		_187021_err_msg=(_187021_err_msg + _186717_message);
		_2299e1454_push_err(&(*_self_), _185467_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_185453_derive),jule::Any(_187021_err_msg)}));
		_1854102_ok = false;
		return _1854102_ok;
	};
	_1854102_ok = true;
	return _1854102_ok;
}



inline jule::Bool _229a02432_check_struct_ins_derive_clone(_2299dd792_Sema* _self_, jule::Ptr<_228d44c1a_StructIns> _188152_st) {
	jule::Bool _188170_ok = jule::Bool();
	if ((!(_228d09927_is_derives(_188152_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_188170_ok = true;
		return _188170_ok;
	};
	{
		auto &expr = _188152_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_22d069127:;
		if (it != expr.end()) {
			jule::Ptr<_228d21037_FieldIns> _188621_f = *it;
			{
				if ((_188621_f.get()._field_kind == nullptr)) {
					goto _iter_next_22d069127;
				};
				if ((!(_229a7ee93_supports_cloning(_188621_f.get()._field_kind.ptr())))) {
					_2299e1454_push_err(&(*_self_), _188152_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_188621_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_188170_ok = false;
					return _188170_ok;
				};
				if ((!(_229a02102_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_188152_st.get()._field_decl,_188621_f.get()._field_kind)))) {
					_188170_ok = false;
					return _188170_ok;
				};
			}
			_iter_next_22d069127:;
			++it;
			goto _iter_begin_22d069127;
		}
		_iter_end_22d069127:;
	};
	_188170_ok = true;
	return _188170_ok;
}



inline void _229a0261e_check_package_decls(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22d069721:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _190721_f = *it;
			{
				_2299e108b_set_current_file(_self_.ptr(), _190721_f);
				if ((!(_2299ebcbc_check_type_enum_decls(_self_)))) {
					return;;
				};
				if ((!(_2299eaa79_check_type_alias_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_22d069721:;
			++it;
			goto _iter_begin_22d069721;
		}
		_iter_end_22d069721:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22d06bca6:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _191721_f = *it;
			{
				_2299e108b_set_current_file(_self_.ptr(), _191721_f);
				if ((!(_2299ed560_check_trait_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_22d06bca6:;
			++it;
			goto _iter_begin_22d06bca6;
		}
		_iter_end_22d06bca6:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22d06cdc8:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _192421_f = *it;
			{
				_2299e108b_set_current_file(_self_.ptr(), _192421_f);
				if ((!(_2299eed7a_check_global_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_22d06cdc8:;
			++it;
			goto _iter_begin_22d06cdc8;
		}
		_iter_end_22d06cdc8:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22d06d3e5:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _193121_f = *it;
			{
				_2299e108b_set_current_file(_self_.ptr(), _193121_f);
				{
					
					if ((!(_229a01354_check_fn_decls(_self_)))) {
						_case_begin_22d070628:;
					}
					else if ((!(_229a00d6a_check_struct_decls(_self_)))) {
						_case_begin_22d07068e:;
					}
					else {
						_case_begin_22d0705b2:;
						{
							goto _iter_next_22d06d3e5;
						}
					}
					_match_end_22d07054b:;
				};
				return;;
			}
			_iter_next_22d06d3e5:;
			++it;
			goto _iter_begin_22d06d3e5;
		}
		_iter_end_22d06d3e5:;
	};
}



inline void _229a02960_check_data_for_type_inference(_2299dd792_Sema* _self_, jule::Ptr<_229a527d4_Data>& _194349_d, jule::Ptr<_2276b1a1c_Token>& _194360_err_token) {
	{
		
		if (_229a52bbe_is_nil(_194349_d.ptr())) {
			_case_begin_22d07164b:;
			{
				_2299e1454_push_err(&(*_self_), _194360_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_229a52e33_is_void(_194349_d.ptr())) {
			_case_begin_22d0716c3:;
			{
				_2299e1454_push_err(&(*_self_), _194360_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_194349_d.get()._field_kind.get()._field_variadic) {
			_case_begin_22d07174a:;
			{
				_2299e1454_push_err(&(*_self_), _194360_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_22d071519:;
	};
}



inline void _229a02be6_check_var(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_229a0a4a1_Var>& _195434_v) {
	if (_195434_v.get()._field_cpp_linked) {
		return;;
	};
	if (_229a0aabc_is_type_inferred(_195434_v.ptr())) {
		_195434_v.get()._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=_195434_v.get()._field_value.get()._field_data.get()._field_kind});
		_229a02960_check_data_for_type_inference(_self_.ptr(), _195434_v.get()._field_value.get()._field_data,_195434_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_229a891bc_Arr> _196521_arr = _229a81181_arr(_195434_v.get()._field_kind.get()._field_kind.ptr());;
		if ((_196521_arr != nullptr)) {
			if (_196521_arr.get()._field_auto) {
				jule::Ptr<_229a891bc_Arr> _196825_data_arr = _229a81181_arr(_195434_v.get()._field_value.get()._field_data.get()._field_kind.ptr());;
				if ((_196825_data_arr != nullptr)) {
					_196521_arr.get()._field_n=_196825_data_arr.get()._field_n;
				};
			};
		};
		_2299e705e_check_assign_type(_self_, _195434_v.get()._field_reference,_195434_v.get()._field_kind.get()._field_kind,_195434_v.get()._field_value.get()._field_data,_195434_v.get()._field_value.get()._field_expr.get()._field_token);
	};
	if ((_195434_v.get()._field_reference && (!(_229a95849_is_valid_for_ref(_195434_v.get()._field_kind.get()._field_kind))))) {
		_2299e1454_push_err(_self_.ptr(), _195434_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_195434_v.get()._field_kind.get()._field_kind.ptr()))}));
	};
	_2299e9d75_check_validity_for_init_expr(_self_, _195434_v.get()._field_mutable,_195434_v.get()._field_reference,_195434_v.get()._field_kind.get()._field_kind,_195434_v.get()._field_value.get()._field_data,_195434_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_195434_v.get()._field_constant) {
		if ((!(_229a53197_is_const(_195434_v.get()._field_value.get()._field_data.ptr())))) {
			_2299e1454_push_err(_self_.ptr(), _195434_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_195434_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	};
	if ((_229a8210a_tup(_195434_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_195434_v.get()._field_kind.get()._field_kind=nullptr;
	};
}



inline void _229a03015_check_type_var(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_229a0a4a1_Var>& _200339_decl, jule::Trait<_229a98e02_Lookup> _200355_l) {
	if ((_200339_decl.get()._field_cpp_linked || (!(_229a0a858_is_initialized(_200339_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_229a54352_Eval> _200817_eval = nullptr;;
	if ((_200339_decl.get()._field_kind != nullptr)) {
		_200817_eval=_2299e639e_evalpd(_self_, _200355_l,_200339_decl.get()._field_kind.get()._field_kind,_200339_decl);
	} else {
		_200817_eval=_2299e639e_evalpd(_self_, _200355_l,nullptr,_200339_decl);
	};
	_200817_eval.get()._field_immutable=(!(_200339_decl.get()._field_mutable));
	_200339_decl.get()._field_value.get()._field_data=_229a6ea21_eval_expr(_200817_eval, _200339_decl.get()._field_value.get()._field_expr);
	if ((_200339_decl.get()._field_value.get()._field_data == nullptr)) {
		return;;
	};
	_229a02be6_check_var(_self_, _200339_decl);
}



inline void _229a031e1_check_global_types(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_22d07e9ab:;
		if (it != expr.end()) {
			jule::Ptr<_229a0a4a1_Var> _202521_decl = *it;
			{
				if (((_229a0a858_is_initialized(_202521_decl.ptr()) && (_202521_decl.get()._field_value.get()._field_data == nullptr)) || (_229a0aabc_is_type_inferred(_202521_decl.ptr()) && (_202521_decl.get()._field_kind.get()._field_kind == nullptr)))) {
					_229a03015_check_type_var(_self_, _202521_decl,jule::Trait<_229a98e02_Lookup>(_self_, 3));
				};
			}
			_iter_next_22d07e9ab:;
			++it;
			goto _iter_begin_22d07e9ab;
		}
		_iter_end_22d07e9ab:;
	};
}



inline jule::Ptr<_228de996d_FnIns> _229a03598_ready_to_check_fn(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d44c1a_StructIns>& _203642_s, jule::Ptr<_228de6cbc_Fn>& _203662_f) {
	jule::Ptr<_228de996d_FnIns> _203717_ins = _228de841c_instance(_203662_f);;
	if ((_203662_f.get()._field_instances.len() != 0LL)) {
		return _203717_ins;
	};
	_203717_ins.get()._field_owner=_203642_s;
	_228de86e7_append_instance(_203662_f.ptr(), _203717_ins);
	_203717_ins.get()._field_reloaded=true;
	if (_2299e92e7_reload_fn_ins_types(_self_, _203717_ins)) {
		return _203717_ins;
	};
	return nullptr;
}



inline void _229a038b7_check_type_method(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d44c1a_StructIns>& _205042_s, jule::Ptr<_228de6cbc_Fn>& _205062_f) {
	if ((_205062_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_228de996d_FnIns> _205517_ins = _205062_f.get()._field_instances[0LL];;
	if ((_205517_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		return;;
	};
	_229a06090_check_fn_ins(_self_, _205517_ins);
}



inline jule::Ptr<_228de996d_FnIns> _229a03d18_check_struct_ins_op(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d44c1a_StructIns>& _206344_s, jule::Ptr<_228de6cbc_Fn>& _206364_f, jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)> _206372_p) {
	if ((((_206364_f == nullptr) || (_206364_f.get()._field_generics.len() > 0LL)) || (!(_206372_p(_206364_f))))) {
		return nullptr;
	};
	return _206364_f.get()._field_instances[0LL];
}



inline jule::Bool _229a041c0_check_struct_env(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d44c1a_StructIns>& _207341_s, jule::Ptr<_2276b1a1c_Token> _207360_error_token) {
	jule::Bool _207383_ok = jule::Bool();
	_229a8b7b8_TypeChecker _207417_tc = _229a8b7b8_TypeChecker{._field_s=_207341_s.get()._field_decl.get()._field_sema, ._field_lookup=jule::Trait<_229a98e02_Lookup>(_207341_s.get()._field_decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_229a8aa70_Referencer>(_229a8aa70_Referencer{._field_ident=_207341_s.get()._field_decl.get()._field_ident, ._field_owner=jule::Any(_207341_s.get()._field_decl), }), ._field_refers=_207341_s.get()._field_refers, };;
	if ((_207341_s.get()._field_generics.len() > 0LL)) {
		_207417_tc._field_use_generics=jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>::alloc(0LL,_207341_s.get()._field_generics.len());
		{
			auto &expr = _207341_s.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_22d088aa3:;
			if (it != expr.end()) {
				jule::I64 _208618_i = it - expr.begin();
				jule::Ptr<_229a7bb2c_InsGeneric> _208625_g = *it;
				{
					_207417_tc._field_use_generics = jule::alloc_for_append(_207417_tc._field_use_generics,1);_207417_tc._field_use_generics.__push(jule::new_ptr<_229a7c666_TypeAlias>(_229a7c666_TypeAlias{._field_ident=_207341_s.get()._field_decl.get()._field_generics[_208618_i].get()._field_ident, ._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=_208625_g.get()._field_kind}), }));;
				}
				_iter_next_22d088aa3:;
				++it;
				_208618_i++;
				goto _iter_begin_22d088aa3;
			}
			_iter_end_22d088aa3:;
		};
	};
	jule::Ptr<_229a4ca76_SymbolTable> _209417_old_file = _self_.get()._field_file;;
	__JULE_DEFER({
		_2299e108b_set_current_file(_self_.ptr(), _209417_old_file);
	});;
	if ((_self_.get()._field_file.get()._field_file != _207341_s.get()._field_decl.get()._field_token.get()._field_file)) {
		jule::Ptr<_229a4ca76_SymbolTable> _209821_file = _2299dcd9b_find_file(_self_.get()._field_files,_207341_s.get()._field_decl.get()._field_token.get()._field_file);;
		if ((_209821_file != nullptr)) {
			_2299e108b_set_current_file(_self_.ptr(), _209821_file);
		};
	};
	if ((_207341_s.get()._field_generics.len() > 0LL)) {
		jule::Ptr<_229938e6d_ConstraintChecker> _210521_cc = _2299e4ee6_constraint_checker(_self_);;
		_210521_cc.get()._field_et=_207360_error_token;
		_210521_cc.get()._field_si=_207341_s;
		_210521_cc.get()._field_generics_a=_207417_tc._field_use_generics;
		_210521_cc.get()._field_uniq=true;
		if ((!(_22997ebd9_check(_210521_cc)))) {
			return _207383_ok;
		};
	};
	jule::Ptr<_229a54352_Eval> _211517_eval = _2299e6a64_eval(_self_, jule::Trait<_229a98e02_Lookup>(_self_, 3));;
	_207383_ok=true;
	{
		auto &expr = _207341_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_22d08eacb:;
		if (it != expr.end()) {
			jule::Ptr<_228d21037_FieldIns> _211721_f = *it;
			{
				jule::Ptr<_229a7d359_TypeKind> _211821_kind = _229a93a34_check_decl(&_207417_tc, _211721_f.get()._field_decl.get()._field_kind.get()._field_decl);;
				_207383_ok=((_211821_kind != nullptr) && _207383_ok);
				if ((_211821_kind == nullptr)) {
					if (((_self_ != _207341_s.get()._field_decl.get()._field_sema) && (_207341_s.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_207341_s.get()._field_decl.get()._field_sema.get()._field_errors);
						_207341_s.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_22d08eacb;
				};
				_211721_f.get()._field_kind=_211821_kind;
				_207341_s.get()._field_mutable=(_207341_s.get()._field_mutable || ((!(_211721_f.get()._field_decl.get()._field_mutable)) && _229a7e756_mutable(_211721_f.get()._field_kind.ptr())));
				_229a02432_check_struct_ins_derive_clone(_self_.ptr(), _207341_s);
				if ((_211721_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_22d08eacb;
				};
				_211517_eval.get()._field_prefix=_211721_f.get()._field_kind;
				_211517_eval.get()._field_field=_211721_f;
				_211721_f.get()._field_default=_229a6ea21_eval_expr(_211517_eval, _211721_f.get()._field_decl.get()._field_default);
				if ((_211721_f.get()._field_default == nullptr)) {
					goto _iter_next_22d08eacb;
				};
				;
				_2299e705e_check_assign_type(_self_, false,_211721_f.get()._field_kind,_211721_f.get()._field_default,_211721_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_22d08eacb:;
			++it;
			goto _iter_begin_22d08eacb;
		}
		_iter_end_22d08eacb:;
	};
	return _207383_ok;
}



inline jule::Bool _229a04577_precheck_struct_ins(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d44c1a_StructIns>& _215144_s, jule::Ptr<_2276b1a1c_Token> _215163_error_token) {
	jule::Bool _215186_ok = jule::Bool();
	_215186_ok=_229a041c0_check_struct_env(_self_, _215144_s,_215163_error_token);
	if ((!(_215186_ok))) {
		_215186_ok = false;
		return _215186_ok;
	};
	{
		auto &expr = _215144_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_22d096550:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _215621_f = *it;
			{
				if ((_215621_f.get()._field_generics.len() == 0LL)) {
					if ((_229a03598_ready_to_check_fn(_self_, _215144_s,_215621_f) == nullptr)) {
						_215186_ok = false;
						return _215186_ok;
					};
				};
			}
			_iter_next_22d096550:;
			++it;
			goto _iter_begin_22d096550;
		}
		_iter_end_22d096550:;
	};
	_215186_ok = true;
	return _215186_ok;
}



inline void _229a047ec_check_struct_ins(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d44c1a_StructIns>& _216641_s) {
	{
		auto &expr = _216641_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_22d098101:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _216721_f = *it;
			{
				_229a038b7_check_type_method(_self_, _216641_s,_216721_f);
			}
			_iter_next_22d098101:;
			++it;
			goto _iter_begin_22d098101;
		}
		_iter_end_22d098101:;
	};
}



inline void _229a04a72_check_type_struct(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d188c0_Struct>& _217242_s) {
	if (_217242_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_217242_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _217242_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_22d09960d:;
		if (it != expr.end()) {
			jule::Ptr<_228d44c1a_StructIns> _218521_ins = *it;
			{
				_229a047ec_check_struct_ins(_self_, _218521_ins);
			}
			_iter_next_22d09960d:;
			++it;
			goto _iter_begin_22d09960d;
		}
		_iter_end_22d09960d:;
	};
}



inline void _229a04c4d_check_struct_types(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_22d09a224:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> _219121_s = *it;
			{
				_229a04a72_check_type_struct(_self_, _219121_s);
			}
			_iter_next_22d09a224:;
			++it;
			goto _iter_begin_22d09a224;
		}
		_iter_end_22d09a224:;
	};
}



inline void _229a04ee5_check_struct_ins_operators(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d44c1a_StructIns> _219650_s) {
	{
		auto &expr = _219650_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_22d09b577:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _219721_m = *it;
			{
				{
					auto &_match_expr{ _219721_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_22d09c303:;
						{
							_219650_s.get()._field_operators._field_eq=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _220068_f) mutable -> jule::Bool {
								return static__229a0beca_eq(_220068_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_22d09c369:;
						{
							_219650_s.get()._field_operators._field_gt=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _220268_f) mutable -> jule::Bool {
								return static__229a0c272_gt(_220268_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_22d09c3e1:;
						{
							_219650_s.get()._field_operators._field_gt_eq=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _220471_f) mutable -> jule::Bool {
								return static__229a0c519_gt_eq(_220471_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_22d09c468:;
						{
							_219650_s.get()._field_operators._field_lt=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _220668_f) mutable -> jule::Bool {
								return static__229a0c7b1_lt(_220668_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_22d09c4e0:;
						{
							_219650_s.get()._field_operators._field_lt_eq=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _220871_f) mutable -> jule::Bool {
								return static__229a0ca58_lt_eq(_220871_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_22d09c567:;
						{
							_219650_s.get()._field_operators._field_shl=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _221069_f) mutable -> jule::Bool {
								return static__229a0d141_shl(_221069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_22d09c5de:;
						{
							_219650_s.get()._field_operators._field_shr=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _221269_f) mutable -> jule::Bool {
								return static__229a0d3d8_shr(_221269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_22d09c666:;
						{
							_219650_s.get()._field_operators._field_add=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _221469_f) mutable -> jule::Bool {
								return static__229a0d680_add(_221469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_22d09c6dd:;
						{
							_219650_s.get()._field_operators._field_sub=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _221669_f) mutable -> jule::Bool {
								return static__229a0d927_sub(_221669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_22d09c765:;
						{
							_219650_s.get()._field_operators._field_div=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _221869_f) mutable -> jule::Bool {
								return static__229a0dbbe_div(_221869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_22d09c7dc:;
						{
							_219650_s.get()._field_operators._field_mul=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _222069_f) mutable -> jule::Bool {
								return static__229a0de66_mul(_222069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_22d09c864:;
						{
							_219650_s.get()._field_operators._field_mod=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _222269_f) mutable -> jule::Bool {
								return static__229a0e20d_mod(_222269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_22d09c8db:;
						{
							_219650_s.get()._field_operators._field_bit_and=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _222473_f) mutable -> jule::Bool {
								return static__229a0e4a5_bit_and(_222473_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_22d09c963:;
						{
							_219650_s.get()._field_operators._field_bit_or=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _222672_f) mutable -> jule::Bool {
								return static__229a0e74c_bit_or(_222672_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_22d09c9da:;
						{
							_219650_s.get()._field_operators._field_bit_xor=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _222873_f) mutable -> jule::Bool {
								return static__229a0e9e4_bit_xor(_222873_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_22d09ca62:;
						{
							_219650_s.get()._field_operators._field_neg=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _223069_f) mutable -> jule::Bool {
								return static__229a100cc_neg(_223069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_22d09cad9:;
						{
							_219650_s.get()._field_operators._field_pos=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _223269_f) mutable -> jule::Bool {
								return static__229a10374_pos(_223269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_22d09cb61:;
						{
							_219650_s.get()._field_operators._field_bit_not=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _223473_f) mutable -> jule::Bool {
								return static__229a1061b_bit_not(_223473_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_22d09cbd8:;
						{
							_219650_s.get()._field_operators._field_add_assign=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _223676_f) mutable -> jule::Bool {
								return static__229a10c04_add_assign(_223676_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_22d09cc60:;
						{
							_219650_s.get()._field_operators._field_sub_assign=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _223876_f) mutable -> jule::Bool {
								return static__229a10e9b_sub_assign(_223876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_22d09ccd7:;
						{
							_219650_s.get()._field_operators._field_div_assign=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _224076_f) mutable -> jule::Bool {
								return static__229a11243_div_assign(_224076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_22d09cd5e:;
						{
							_219650_s.get()._field_operators._field_mul_assign=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _224276_f) mutable -> jule::Bool {
								return static__229a114da_mul_assign(_224276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_22d09cdd6:;
						{
							_219650_s.get()._field_operators._field_mod_assign=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _224476_f) mutable -> jule::Bool {
								return static__229a11782_mod_assign(_224476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_22d09ce5d:;
						{
							_219650_s.get()._field_operators._field_shl_assign=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _224676_f) mutable -> jule::Bool {
								return static__229a11a29_shl_assign(_224676_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_22d09ced5:;
						{
							_219650_s.get()._field_operators._field_shr_assign=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _224876_f) mutable -> jule::Bool {
								return static__229a11cc1_shr_assign(_224876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_22d09d05c:;
						{
							_219650_s.get()._field_operators._field_bit_or_assign=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _225079_f) mutable -> jule::Bool {
								return static__229a12068_bit_or_assign(_225079_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_22d09d0d4:;
						{
							_219650_s.get()._field_operators._field_bit_and_assign=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _225280_f) mutable -> jule::Bool {
								return static__229a12310_bit_and_assign(_225280_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_22d09d15b:;
						{
							_219650_s.get()._field_operators._field_bit_xor_assign=_229a03d18_check_struct_ins_op(_self_, _219650_s,_219721_m,jule::Fn<jule::Bool(jule::Ptr<_228de6cbc_Fn>)>([=](jule::Ptr<_228de6cbc_Fn> _225480_f) mutable -> jule::Bool {
								return static__229a125a7_bit_xor_assign(_225480_f);
							}));
						}
					}
					_match_end_22d09bdd5:;
				};
			}
			_iter_next_22d09b577:;
			++it;
			goto _iter_begin_22d09b577;
		}
		_iter_end_22d09b577:;
	};
}



inline void _229a0527b_precheck_struct_type(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228d188c0_Struct>& _225945_s) {
	if (_225945_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_225945_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_225945_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_228d44c1a_StructIns> _227021_ins = _228d00cc5_instance(_225945_s);;
		_227021_ins.get()._field_checked=true;
		_228d0503d_append_instance(_225945_s.ptr(), _227021_ins);
		_229a04577_precheck_struct_ins(_self_, _227021_ins,nullptr);
	};
	_229a04ee5_check_struct_ins_operators(_self_, _225945_s.get()._field_instances[0LL]);
}



inline void _229a05457_precheck_struct_types(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_22d0cd037:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> _228021_s = *it;
			{
				_229a0527b_precheck_struct_type(_self_, _228021_s);
			}
			_iter_next_22d0cd037:;
			++it;
			goto _iter_begin_22d0cd037;
		}
		_iter_end_22d0cd037:;
	};
}



inline void _229a056cc_check_rets(_2299dd792_Sema* _self_, jule::Ptr<_228de996d_FnIns>& _228534_f) {
	if (_228de722e_is_void(_228534_f.get()._field_decl.ptr())) {
		return;;
	};
	_229a07877_MissingRetChecker _228913_mrc = static__229a07c40_new();;
	jule::Bool _229013_ok = _229a08c52_check(&_228913_mrc, _228534_f.get()._field_scope);;
	if ((!(_229013_ok))) {
		_2299e1454_push_err(&(*_self_), _228534_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _229a059eb_check_fn_ins_sc(_2299dd792_Sema* _self_, jule::Ptr<_228de996d_FnIns>& _229639_f, jule::Ptr<_2299bd7e9_ScopeChecker>& _229655_sc) {
	_2299dc4b6_append_ret_vars(_229655_sc.get()._field_table.get()._field_vars,_229639_f);
	_2299dc76e_append_param_vars(_229655_sc.get()._field_table.get()._field_vars,_229639_f);
	_2299dca49_append_generic_type_aliases(_229655_sc.get()._field_table.get()._field_type_aliases,_229639_f);
	_2299cdb28_check(_229655_sc, _229639_f.get()._field_decl.get()._field_scope,_229639_f.get()._field_scope);
	if ((!(_2299c1434_stopped(_229655_sc.ptr())))) {
		_229a056cc_check_rets(&(*_self_), _229639_f);
	};
}



inline void _229a05d1a_check_fn_ins_caller(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de996d_FnIns>& _230944_f, jule::Ptr<_2276b1a1c_Token> _230959_caller) {
	if (_230944_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	jule::Ptr<_229a4ca76_SymbolTable> _231417_old = _230944_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_2299e108b_set_current_file(_230944_f.get()._field_decl.get()._field_sema.ptr(), _231417_old);
	});;
	jule::Ptr<_229a4ca76_SymbolTable> _231617_file = _2299dcd9b_find_file(_230944_f.get()._field_decl.get()._field_sema.get()._field_files,_230944_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_231617_file != nullptr)) {
		_2299e108b_set_current_file(_230944_f.get()._field_decl.get()._field_sema.ptr(), _231617_file);
	};
	jule::Ptr<_2299bd7e9_ScopeChecker> _232117_sc = _22998cc3b_new_scope_checker(_230944_f.get()._field_decl.get()._field_sema,_230944_f);;
	_232117_sc.get()._field_called_from=_230959_caller;
	_229a059eb_check_fn_ins_sc(_self_.ptr(), _230944_f,_232117_sc);
	if ((_230944_f.get()._field_decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_230944_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_230944_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _229a06090_check_fn_ins(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de996d_FnIns>& _233137_f) {
	_229a05d1a_check_fn_ins_caller(_self_, _233137_f,nullptr);
}



inline void _229a06315_check_type_fn(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de6cbc_Fn>& _233538_f) {
	if (_233538_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_233538_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _233538_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_22d0d865d:;
		if (it != expr.end()) {
			jule::Ptr<_228de996d_FnIns> _234521_ins = *it;
			{
				_229a06090_check_fn_ins(_self_, _234521_ins);
			}
			_iter_next_22d0d865d:;
			++it;
			goto _iter_begin_22d0d865d;
		}
		_iter_end_22d0d865d:;
	};
}



inline void _229a0658a_check_test_fn(_2299dd792_Sema* _self_, jule::Ptr<_228de996d_FnIns>& _235037_f) {
	if (_235037_f.get()._field_decl.get()._field_public) {
		_2299e1454_push_err(&(*_self_), _235037_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_2299e1773_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_235037_f.get()._field_params.len() != 1LL) || (_235037_f.get()._field_result != nullptr))) {
		_2299e1454_push_err(&(*_self_), _235037_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_2299e1773_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_229a865b5_Sptr> _236317_sptr = _229a806d0_sptr(_235037_f.get()._field_params[0LL].get()._field_kind.ptr());;
	if ((_236317_sptr == nullptr)) {
		_2299e1454_push_err(&(*_self_), _235037_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_2299e1773_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_228d44c1a_StructIns> _237013_s = _229a818bd_strct(_236317_sptr.get()._field_elem.ptr());;
	if (((_237013_s == nullptr) || (!(_2299dab79_is_std_package(_237013_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7)))))) {
		_2299e1454_push_err(&(*_self_), _235037_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_2299e1773_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _229a06810_precheck_type_fn(jule::Ptr<_2299dd792_Sema> _self_, jule::Ptr<_228de6cbc_Fn>& _237841_f) {
	if (_237841_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_237841_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_237841_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_228de996d_FnIns> _238921_ins = _228de81a8_instance_force(_237841_f);;
		_237841_f.get()._field_instances = jule::alloc_for_append(_237841_f.get()._field_instances,1);_237841_f.get()._field_instances.__push(_238921_ins);;
		_2299e92e7_reload_fn_ins_types(_self_, _238921_ins);
		_238921_ins.get()._field_reloaded=true;
		if (_229a94edb_has_directive(_237841_f.get()._field_directives,jule::Str("test", 4))) {
			_229a0658a_check_test_fn(_self_.ptr(), _238921_ins);
		};
	};
}



inline void _229a069db_precheck_fn_types(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_22d0e3239:;
		if (it != expr.end()) {
			jule::Ptr<_22923d1bd_Trait> _240221_decl = *it;
			{
				{
					auto &expr = _240221_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_22d0e3aec:;
					if (it != expr.end()) {
						jule::Ptr<_228de6cbc_Fn> _240325_m = *it;
						{
							_229a06810_precheck_type_fn(_self_, _240325_m);
						}
						_iter_next_22d0e3aec:;
						++it;
						goto _iter_begin_22d0e3aec;
					}
					_iter_end_22d0e3aec:;
				};
			}
			_iter_next_22d0e3239:;
			++it;
			goto _iter_begin_22d0e3239;
		}
		_iter_end_22d0e3239:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_22d0e3811:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _240721_decl = *it;
			{
				_229a06810_precheck_type_fn(_self_, _240721_decl);
			}
			_iter_next_22d0e3811:;
			++it;
			goto _iter_begin_22d0e3811;
		}
		_iter_end_22d0e3811:;
	};
}



inline void _229a06bb7_check_fn_types(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_22d0e4eb6:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _241421_decl = *it;
			{
				_229a06315_check_type_fn(_self_, _241421_decl);
			}
			_iter_next_22d0e4eb6:;
			++it;
			goto _iter_begin_22d0e4eb6;
		}
		_iter_end_22d0e4eb6:;
	};
}



inline void _229a06d93_check_package_types(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22d0e57d0:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _242221_f = *it;
			{
				_2299e108b_set_current_file(_self_.ptr(), _242221_f);
				_229a031e1_check_global_types(_self_);
				_229a069db_precheck_fn_types(_self_);
				_229a05457_precheck_struct_types(_self_);
			}
			_iter_next_22d0e57d0:;
			++it;
			goto _iter_begin_22d0e57d0;
		}
		_iter_end_22d0e57d0:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22d0e764a:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _243321_f = *it;
			{
				_2299e108b_set_current_file(_self_.ptr(), _243321_f);
				_229a06bb7_check_fn_types(_self_);
				_229a04c4d_check_struct_types(_self_);
			}
			_iter_next_22d0e764a:;
			++it;
			goto _iter_begin_22d0e764a;
		}
		_iter_end_22d0e764a:;
	};
}



inline void _229a0706e_set_file_sema_fields(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_22d0e7c33:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _244121_f = *it;
			{
				_244121_f.get()._field_sema=_self_;
			}
			_iter_next_22d0e7c33:;
			++it;
			goto _iter_begin_22d0e7c33;
		}
		_iter_end_22d0e7c33:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_22d0e8d44:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> _244521_st = *it;
			{
				_244521_st.get()._field_sema=_self_;
			}
			_iter_next_22d0e8d44:;
			++it;
			goto _iter_begin_22d0e8d44;
		}
		_iter_end_22d0e8d44:;
	};
}



inline void _229a0724a_set_sema_fields(jule::Ptr<_2299dd792_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22d0e984a:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _245121_file = *it;
			{
				_2299e108b_set_current_file(_self_.ptr(), _245121_file);
				_229a0706e_set_file_sema_fields(_self_);
			}
			_iter_next_22d0e984a:;
			++it;
			goto _iter_begin_22d0e984a;
		}
		_iter_end_22d0e984a:;
	};
}



inline void _229a074c0_check(jule::Ptr<_2299dd792_Sema> _self_, jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>& _245730_files) {
	_self_.get()._field_files=_245730_files;
	_2299e3c09_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_229a0724a_set_sema_fields(_self_);
	_2299e428c_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_2299e40b1_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_229a0261e_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_229a06d93_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _2299dd792_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _229a07877_MissingRetChecker static__229a07c40_new(void) {
	return _229a07877_MissingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _229a0801a_check_conditional(_229a07877_MissingRetChecker* _self_, jule::Ptr<_2299b76e4_Conditional> _250036_c) {
	{
		auto &expr = _250036_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_22d0edca0:;
		if (it != expr.end()) {
			jule::Ptr<_2299b700c_If> _250121_elif = *it;
			{
				if ((_250121_elif == nullptr)) {
					return false;
				};
				if ((!(_229a08944_check_scope(&(*_self_), _250121_elif.get()._field_scope)))) {
					return false;
				};
			}
			_iter_next_22d0edca0:;
			++it;
			goto _iter_begin_22d0edca0;
		}
		_iter_end_22d0edca0:;
	};
	return ((_250036_c.get()._field_default != nullptr) && _229a08944_check_scope(&(*_self_), _250036_c.get()._field_default.get()._field_scope));
}



inline jule::Bool _229a08328_check_match(_229a07877_MissingRetChecker* _self_, jule::Ptr<_2299ba8d4_Match> _251230_m) {
	{
		auto &expr = _251230_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_22d101203:;
		if (it != expr.end()) {
			jule::Ptr<_2299bb42e_Case> _251321_c = *it;
			{
				if ((_251321_c == nullptr)) {
					return false;
				};
				jule::I64 _251717_n = (*_self_)._field_breaked.len();;
				jule::Bool _251817_ok = _229a08944_check_scope(&(*_self_), _251321_c.get()._field_scope);;
				{
					
					if ((_251717_n != (*_self_)._field_breaked.len())) {
						_case_begin_22d102e6e:;
						{
							return false;
						}
					}
					else if ((!(_251817_ok))) {
						_case_begin_22d102ee6:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_22d10306d;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_22d10306d:;
						{
							(*_self_)._field_falled=false;
							if ((_251321_c.get()._field_next == nullptr)) {
								return false;
							};
							goto _iter_next_22d101203;
						}
					}
					_match_end_22d102dc5:;
				};
			}
			_iter_next_22d101203:;
			++it;
			goto _iter_begin_22d101203;
		}
		_iter_end_22d101203:;
	};
	return ((_251230_m.get()._field_default != nullptr) && _229a08944_check_scope(&(*_self_), _251230_m.get()._field_default.get()._field_scope));
}



inline jule::Bool _229a08636_check_inf_iter(_229a07877_MissingRetChecker* _self_, jule::Ptr<_2299b79d0_InfIter> _253833_it) {
	jule::I64 _253913_n = (*_self_)._field_breaked.len();;
	if (_229a08944_check_scope(&(*_self_), _253833_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_253913_n);
		return true;
	};
	if ((_253913_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _254517_itaddr = static_cast<jule::Uintptr>(_253833_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_253913_n);
			auto it = expr.begin();
			_iter_begin_22d106cdb:;
			if (it != expr.end()) {
				jule::Uintptr _254620_addr = *it;
				{
					if ((_254517_itaddr == _254620_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_253913_n);
						return false;
					};
				}
				_iter_next_22d106cdb:;
				++it;
				goto _iter_begin_22d106cdb;
			}
			_iter_end_22d106cdb:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_253913_n);
	};
	return true;
}



inline jule::Bool _229a08944_check_scope(_229a07877_MissingRetChecker* _self_, jule::Ptr<_2299b6c10_Scope> _255730_s) {
	if ((_255730_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _255730_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_22d1089be:;
		if (it != expr.end()) {
			jule::Any _256121_st = *it;
			{
				{
					auto &_match_expr{ _256121_st };
					
					if (_match_expr.type_is<jule::Ptr<_2299bb9d4_FallSt>>()) {
						_case_begin_22d1093b5:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2299b90db_BreakSt>>()) {
						_case_begin_22d10945e:;
						{
							jule::Uintptr _256721_addr = _256121_st.operator jule::Ptr<_2299b90db_BreakSt>().get()._field_it;;
							if ((_256721_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_256721_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2299b8c34_ContSt>>()) {
						_case_begin_22d1094c5:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2299b79d0_InfIter>>()) {
						_case_begin_22d10953b:;
						{
							if (_229a08636_check_inf_iter(&(*_self_), _256121_st.operator jule::Ptr<_2299b79d0_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2299bbe57_RetSt>>()) {
						_case_begin_22d1095a2:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2299b6c10_Scope>>()) {
						_case_begin_22d109618:;
						{
							if (_229a08944_check_scope(&(*_self_), _256121_st.operator jule::Ptr<_2299b6c10_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_229a527d4_Data>>()) {
						_case_begin_22d109690:;
						{
							{
								auto &_match_expr{ _256121_st.operator jule::Ptr<_229a527d4_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_228de3824_BuiltinErrorCallExprModel>>()) {
									_case_begin_22d10d2ed:;
									{
										return true;
									}
								}
								_match_end_22d10d056:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2299b76e4_Conditional>>()) {
						_case_begin_22d109717:;
						{
							if (_229a0801a_check_conditional(&(*_self_), _256121_st.operator jule::Ptr<_2299b76e4_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2299ba8d4_Match>>()) {
						_case_begin_22d10978e:;
						{
							if (_229a08328_check_match(&(*_self_), _256121_st.operator jule::Ptr<_2299ba8d4_Match>())) {
								return true;
							};
						}
					}
					_match_end_22d10921c:;
				};
			}
			_iter_next_22d1089be:;
			++it;
			goto _iter_begin_22d1089be;
		}
		_iter_end_22d1089be:;
	};
	return false;
}



inline jule::Bool _229a08c52_check(_229a07877_MissingRetChecker* _self_, jule::Ptr<_2299b6c10_Scope> _260324_s) {
	return _229a08944_check_scope(&(*_self_), _260324_s);
}







std::ostream &operator<<(std::ostream &_Stream, _229a07877_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _229a09538_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _229a0a858_is_initialized(_229a0a4a1_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _229a0aabc_is_type_inferred(_229a0a4a1_Var* _self_) {
	return (((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _229a0a4a1_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__229a0b64a_dispose(jule::Ptr<_228de6cbc_Fn> _1027_f) {
	return (((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _228de722e_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_228de5d21_is_ref(_1027_f.get()._field_params[0LL].ptr()))));
}



inline jule::Bool static__229a0b8e2_to_str(jule::Ptr<_228de6cbc_Fn> _2526_f) {
	if ((((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _228de722e_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _228de5d21_is_ref(_2526_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_228de996d_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];;
	jule::Ptr<_229a82d31_Prim> _4113_prim = _229a8046b_prim(_4017_ins.get()._field_result.ptr());;
	if ((_4113_prim == nullptr)) {
		return false;
	};
	return _229a86065_is_str(_4113_prim.ptr());
}



inline jule::Bool static__229a0bc33_logical(jule::Ptr<_228de6cbc_Fn>& _4824_f, jule::Str _4832_ident) {
	if (((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _228de722e_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _228de5d21_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_228de996d_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];;
	jule::Ptr<_229a82d31_Prim> _6713_prim = _229a8046b_prim(_6617_ins.get()._field_result.ptr());;
	if (((_6713_prim == nullptr) || (!(_229a85d01_is_bool(_6713_prim.ptr()))))) {
		return false;
	};
	return (_6617_ins.get()._field_owner == _229a818bd_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr()));
}



inline jule::Bool static__229a0beca_eq(jule::Ptr<_228de6cbc_Fn> _7522_f) {
	return static__229a0bc33_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__229a0c272_gt(jule::Ptr<_228de6cbc_Fn> _8022_f) {
	return static__229a0bc33_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__229a0c519_gt_eq(jule::Ptr<_228de6cbc_Fn> _8525_f) {
	return static__229a0bc33_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__229a0c7b1_lt(jule::Ptr<_228de6cbc_Fn> _9022_f) {
	return static__229a0bc33_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__229a0ca58_lt_eq(jule::Ptr<_228de6cbc_Fn> _9525_f) {
	return static__229a0bc33_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__229a0cd99_result(jule::Ptr<_228de6cbc_Fn>& _9923_f, jule::Str _9931_ident) {
	if (((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _228de722e_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _228de5d21_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_228de996d_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];;
	return (_229a818bd_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner);
}



inline jule::Bool static__229a0d141_shl(jule::Ptr<_228de6cbc_Fn> _12223_f) {
	return static__229a0cd99_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__229a0d3d8_shr(jule::Ptr<_228de6cbc_Fn> _12723_f) {
	return static__229a0cd99_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__229a0d680_add(jule::Ptr<_228de6cbc_Fn> _13223_f) {
	return static__229a0cd99_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__229a0d927_sub(jule::Ptr<_228de6cbc_Fn> _13723_f) {
	return static__229a0cd99_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__229a0dbbe_div(jule::Ptr<_228de6cbc_Fn> _14223_f) {
	return static__229a0cd99_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__229a0de66_mul(jule::Ptr<_228de6cbc_Fn> _14723_f) {
	return static__229a0cd99_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__229a0e20d_mod(jule::Ptr<_228de6cbc_Fn> _15223_f) {
	return static__229a0cd99_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__229a0e4a5_bit_and(jule::Ptr<_228de6cbc_Fn> _15727_f) {
	return static__229a0cd99_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__229a0e74c_bit_or(jule::Ptr<_228de6cbc_Fn> _16226_f) {
	return static__229a0cd99_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__229a0e9e4_bit_xor(jule::Ptr<_228de6cbc_Fn> _16727_f) {
	return static__229a0cd99_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__229a0ed35_unary(jule::Ptr<_228de6cbc_Fn>& _17122_f, jule::Str _17130_ident) {
	if (((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _228de722e_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _228de5d21_is_ref(_17122_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_228de996d_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];;
	return (_229a818bd_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner);
}



inline jule::Bool static__229a100cc_neg(jule::Ptr<_228de6cbc_Fn> _19223_f) {
	return static__229a0ed35_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__229a10374_pos(jule::Ptr<_228de6cbc_Fn> _19723_f) {
	return static__229a0ed35_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__229a1061b_bit_not(jule::Ptr<_228de6cbc_Fn> _20227_f) {
	return static__229a0ed35_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__229a1095c_assign(jule::Ptr<_228de6cbc_Fn>& _20623_f, jule::Str _20631_ident) {
	if (((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_228de722e_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _228de5d21_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__229a10c04_add_assign(jule::Ptr<_228de6cbc_Fn> _22730_f) {
	return static__229a1095c_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__229a10e9b_sub_assign(jule::Ptr<_228de6cbc_Fn> _23230_f) {
	return static__229a1095c_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__229a11243_div_assign(jule::Ptr<_228de6cbc_Fn> _23730_f) {
	return static__229a1095c_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__229a114da_mul_assign(jule::Ptr<_228de6cbc_Fn> _24230_f) {
	return static__229a1095c_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__229a11782_mod_assign(jule::Ptr<_228de6cbc_Fn> _24730_f) {
	return static__229a1095c_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__229a11a29_shl_assign(jule::Ptr<_228de6cbc_Fn> _25230_f) {
	return static__229a1095c_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__229a11cc1_shr_assign(jule::Ptr<_228de6cbc_Fn> _25730_f) {
	return static__229a1095c_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__229a12068_bit_or_assign(jule::Ptr<_228de6cbc_Fn> _26233_f) {
	return static__229a1095c_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__229a12310_bit_and_assign(jule::Ptr<_228de6cbc_Fn> _26734_f) {
	return static__229a1095c_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__229a125a7_bit_xor_assign(jule::Ptr<_228de6cbc_Fn> _27234_f) {
	return static__229a1095c_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _229a0aec9_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _229a3bb86_push_err(_229a3b669_TypeCompatibilityChecker* _self_, jule::Str _11727_fmt, jule::Slice<jule::Any> _11740_args) {
	_2299e1454_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,jule::Any(_11740_args));
}



inline jule::Bool _229a3bdea_check_trait(_229a3b669_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_229a7e27d_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	};
	jule::Ptr<_22923d1bd_Trait> _12513_trt = _229a81b32_trt((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_229a806d0_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_22d147e09:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_229a806d0_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_229a818bd_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				};
				goto _case_begin_22d147ee7;
			}
		}
		else if ((_229a818bd_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_22d147ee7:;
			{
				jule::Ptr<_228d44c1a_StructIns> _13617_s = _229a818bd_strct((*_self_)._field_src.ptr());;
				if ((!(_228d0a51b_is_implements(_13617_s.get()._field_decl.ptr(), _12513_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				};
				if (((!(_12617_ref)) && _229a2baaa_trait_has_reference_receiver(_12513_trt))) {
					_229a3bb86_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				};
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_229a81b32_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_22d14805d:;
			{
				_12132_ok = (_12513_trt == _229a81b32_trt((*_self_)._field_src.ptr()));
				return _12132_ok;
			}
		}
		else {
			_case_begin_22d147799:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_22d147744:;
	};
}



inline jule::Bool _229a3c15e_check_ptr(_229a3b669_TypeCompatibilityChecker* _self_) {
	jule::Bool _15230_ok = jule::Bool();
	if (_229a7e27d_is_nil((*_self_)._field_src.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	jule::Ptr<_229a89b29_Ptr> _15617_dest = _229a80944_ptr((*_self_)._field_dest.ptr());;
	if (_229a8a5ec_is_unsafe(_15617_dest.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	_15230_ok = _229a7da63_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15230_ok;
}



inline jule::Bool _229a3c3c3_check_prim(_229a3b669_TypeCompatibilityChecker* _self_) {
	jule::Bool _16331_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_229a82d31_Prim> _16517_prim = _229a8046b_prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _229a862c9_is_any(_16517_prim.ptr()))) {
			_16331_ok = true;
			return _16331_ok;
		};
	};
	_16331_ok = _229a7da63_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16331_ok;
}



inline jule::Bool _229a3c77a___type_enum(_229a3b669_TypeCompatibilityChecker* _self_, jule::Ptr<_2292e1e75_TypeEnum>& _17331_e, jule::Ptr<_229a7d359_TypeKind>& _17350_t2) {
	jule::Bool _17367_ok = jule::Bool();
	{
		auto &expr = _17331_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_22d150a8d:;
		if (it != expr.end()) {
			jule::Ptr<_2290786bd_TypeEnumItem> _17421_item = *it;
			{
				if (_229a7da63_equals(_17421_item.get()._field_kind.get()._field_kind, _17350_t2)) {
					_17367_ok = true;
					return _17367_ok;
				};
				jule::Ptr<_2292e1e75_TypeEnum> _17821_ke = _229a80e1c_tenm(_17421_item.get()._field_kind.get()._field_kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_22d150a8d;
				};
				if (_229a3c77a___type_enum(&(*_self_), _17821_ke,_17350_t2)) {
					_17367_ok = true;
					return _17367_ok;
				};
			}
			_iter_next_22d150a8d:;
			++it;
			goto _iter_begin_22d150a8d;
		}
		_iter_end_22d150a8d:;
	};
	_17367_ok = false;
	return _17367_ok;
}



inline jule::Bool _229a3c9de_check_type_enum(_229a3b669_TypeCompatibilityChecker* _self_) {
	jule::Bool _18936_ok = jule::Bool();
	if (_229a7da63_equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18936_ok = true;
		return _18936_ok;
	};
	jule::Ptr<_2292e1e75_TypeEnum> _19317_e = _229a80e1c_tenm((*_self_)._field_dest.ptr());;
	_18936_ok = _229a3c77a___type_enum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18936_ok;
}



inline jule::Bool _229a3cc53_check(_229a3b669_TypeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_229a80944_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _229a3c15e_check_ptr(&(*_self_));
		return _19726_ok;
	};
	if (_229a7e9ba_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_229a7e27d_is_nil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_229a8046b_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_22d155ec2:;
			{
				_19726_ok = _229a3c3c3_check_prim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_229a80e1c_tenm((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_22d156038:;
			{
				_19726_ok = _229a3c9de_check_type_enum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_229a81b32_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_22d156324:;
			{
				_19726_ok = _229a3bdea_check_trait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_22d155158:;
			{
				_19726_ok = _229a7da63_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_22d155015:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _229a3b669_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _229a3d704_push_err(_229a3d292_AssignTypeChecker* _self_, jule::Str _22927_fmt, jule::Slice<jule::Any> _22940_args) {
	_2299e1454_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_22927_fmt,jule::Any(_22940_args));
}



inline jule::Bool _229a3d968_check_validity(_229a3d292_AssignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_229a81659_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d159635:;
			{
				jule::Ptr<_228de996d_FnIns> _23717_f = _229a81659_fnc((*_self_)._field_d.get()._field_kind.ptr());;
				{
					
					if (_228dea6b6_is_builtin(_23717_f.ptr())) {
						_case_begin_22d15ac0d:;
						{
							_229a3d704_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_22d15ac85:;
						{
							_229a3d704_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_228de7493_is_method(_23717_f.get()._field_decl.ptr())) {
						_case_begin_22d15ad0c:;
						{
							_229a3d704_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if ((_23717_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_22d15ad84:;
						{
							_229a3d704_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_22d15ab31:;
				};
			}
		}
		else if ((_229a8210a_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d1596ac:;
			{
				_229a3d704_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_22d15957a:;
	};
	return _23417_valid;
}



inline jule::Bool _229a3dbcc_check_const(_229a3d292_AssignTypeChecker* _self_) {
	if (((((!(_229a53197_is_const((*_self_)._field_d.ptr()))) || (_229a8046b_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_229a8046b_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_2299b6528_is_num(_229a8046b_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant)) {
		return false;
	};
	jule::Str _27313_kind = _229a8046b_prim((*_self_)._field_dest.ptr()).get()._field_kind;;
	{
		
		if (_2299b6281_is_float(_27313_kind)) {
			_case_begin_22d1626b5:;
			{
				if ((!(_229a23ad5_float_assignable(_27313_kind,(*_self_)._field_d)))) {
					_229a3d704_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_2299b5e62_is_int(_27313_kind)) {
			_case_begin_22d161ecd:;
			{
				if ((!(_229a3a437_int_assignable(_27313_kind,(*_self_)._field_d)))) {
					_229a3d704_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_22d161e67:;
			{
				return false;
			}
		}
		_match_end_22d161e12:;
	};
	return true;
}



inline jule::Bool _229a3de41_is_prim(_229a3d292_AssignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic)) {
		return false;
	};
	if ((_229a7e019_cpp_linked((*_self_)._field_dest.ptr()) || _229a7e019_cpp_linked((*_self_)._field_d.get()._field_kind.ptr()))) {
		return false;
	};
	return ((_229a8046b_prim((*_self_)._field_dest.ptr()) != nullptr) && (_229a8046b_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr));
}



inline jule::Bool _229a3e1a5_check_compatibility(_229a3d292_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_22d166268:;
			{
				return false;
			}
		}
		else if ((!(_229a3d968_check_validity(&(*_self_))))) {
			_case_begin_22d1662e0:;
			{
				return false;
			}
		}
		else if (_229a3dbcc_check_const(&(*_self_))) {
			_case_begin_22d166367:;
			{
				return true;
			}
		}
		else if ((_229a80ba8_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d1663de:;
			{
				jule::Ptr<_229a7d359_TypeKind> _31521_dkind = (*_self_)._field_dest;;
				if ((_229a80ba8_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_31521_dkind=_229a80ba8_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_229a8046b_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_22d166147;
				};
				if (_2299b2c94_types_are_compatible(_229a8046b_prim(_229a80ba8_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_229a8046b_prim(_31521_dkind.ptr()).get()._field_kind)) {
					return true;
				};
			}
		}
		else if (_229a3de41_is_prim(&(*_self_))) {
			_case_begin_22d166466:;
			{
				jule::Ptr<_229a82d31_Prim> _32517_dest = _229a8046b_prim((*_self_)._field_dest.ptr());;
				if (_229a862c9_is_any(_32517_dest.ptr())) {
					return true;
				};
				jule::Ptr<_229a82d31_Prim> _32921_src = _229a8046b_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (_2299b2c94_types_are_compatible(_32517_dest.get()._field_kind,_32921_src.get()._field_kind)) {
					return true;
				};
			}
		}
		_match_end_22d166147:;
	};
	return _2299e74d2_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _229a3e419_check(_229a3d292_AssignTypeChecker* _self_) {
	jule::Bool _33813_ok = _229a3e1a5_check_compatibility(&(*_self_));;
	if (_33813_ok) {
		_229a96a6a_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33813_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _229a3d292_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22d180051_annotate_constraint_elem(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _35751_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d2a6a1_ArrTypeDecl>>()) {
			_case_begin_22d1814c5:;
			{
				jule::Ptr<_229a7d359_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_22d182350:;
						{
							_36021_elem=_229a81181_arr(_35751_k.ptr()).get()._field_elem;
						}
					}
					_match_end_22d182295:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_228d2a6a1_ArrTypeDecl>().get()._field_elem;
				return _229a413a5_annotate_constraint(&(*_self_), _36021_elem);
			}
		}
		_match_end_22d18141a:;
	};
	return false;
}

inline jule::Bool _22d180abd_annotate_constraint_elem(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _35751_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d29947_SlcTypeDecl>>()) {
			_case_begin_22d184b38:;
			{
				jule::Ptr<_229a7d359_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_22d185a5c:;
						{
							_36021_elem=_229a813e5_slc(_35751_k.ptr()).get()._field_elem;
						}
					}
					_match_end_22d185908:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_228d29947_SlcTypeDecl>().get()._field_elem;
				return _229a413a5_annotate_constraint(&(*_self_), _36021_elem);
			}
		}
		_match_end_22d184a7d:;
	};
	return false;
}

inline jule::Bool _22d184e13_annotate_constraint_elem(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _35751_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d2a01e_PtrTypeDecl>>()) {
			_case_begin_22d188312:;
			{
				jule::Ptr<_229a7d359_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_22d18929c:;
						{
							_36021_elem=_229a80944_ptr(_35751_k.ptr()).get()._field_elem;
						}
					}
					_match_end_22d1890d2:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_228d2a01e_PtrTypeDecl>().get()._field_elem;
				return _229a413a5_annotate_constraint(&(*_self_), _36021_elem);
			}
		}
		_match_end_22d188257:;
	};
	return false;
}

inline jule::Bool _22d1885dc_annotate_constraint_elem(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _35751_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d2954b_SptrTypeDecl>>()) {
			_case_begin_22d18b656:;
			{
				jule::Ptr<_229a7d359_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_22d18c657:;
						{
							_36021_elem=_229a806d0_sptr(_35751_k.ptr()).get()._field_elem;
						}
					}
					_match_end_22d18c426:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_228d2954b_SptrTypeDecl>().get()._field_elem;
				return _229a413a5_annotate_constraint(&(*_self_), _36021_elem);
			}
		}
		_match_end_22d18b59b:;
	};
	return false;
}



inline jule::Bool _229a405e6_annotate_constraint_map(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _37747_k) {
	jule::Bool _37763_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d2adee_MapTypeDecl>>()) {
			_case_begin_22d16dc65:;
			{
				jule::Ptr<_229a885c8_Map> _38021_m = _229a81d96_map(_37747_k.ptr());;
				jule::Ptr<_228d2adee_MapTypeDecl> _38121_m2 = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_228d2adee_MapTypeDecl>();;
				(*_self_)._field_c=_38121_m2.get()._field_key;
				if (_229a413a5_annotate_constraint(&(*_self_), _38021_m.get()._field_key)) {
					_37763_ok = true;
					return _37763_ok;
				};
				(*_self_)._field_c=_38121_m2.get()._field_val;
				_37763_ok = _229a413a5_annotate_constraint(&(*_self_), _38021_m.get()._field_val);
				return _37763_ok;
			}
		}
		_match_end_22d16dbdd:;
	};
	_37763_ok = false;
	return _37763_ok;
}



inline jule::Bool _229a40937_annotate_constraint_tup(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _39247_k) {
	jule::Bool _39263_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d29c33_TupleTypeDecl>>()) {
			_case_begin_22d17177e:;
			{
				jule::Ptr<_228d29c33_TupleTypeDecl> _39521_tup = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_228d29c33_TupleTypeDecl>();;
				jule::Ptr<_229a87aa0_Tuple> _39621_tup2 = _229a8210a_tup(_39247_k.ptr());;
				{
					auto &expr = _39621_tup2.get()._field_types;
					auto it = expr.begin();
					_iter_begin_22d172c03:;
					if (it != expr.end()) {
						jule::Ptr<_229a7d359_TypeKind> _39725_t2 = *it;
						{
							{
								auto &expr = _39521_tup.get()._field_types;
								auto it = expr.begin();
								_iter_begin_22d17353e:;
								if (it != expr.end()) {
									jule::Ptr<_228d28193_TypeDecl> _39829_t = *it;
									{
										(*_self_)._field_c=_39829_t;
										if (_229a413a5_annotate_constraint(&(*_self_), _39725_t2)) {
											_39263_ok = true;
											return _39263_ok;
										};
									}
									_iter_next_22d17353e:;
									++it;
									goto _iter_begin_22d17353e;
								}
								_iter_end_22d17353e:;
							};
						}
						_iter_next_22d172c03:;
						++it;
						goto _iter_begin_22d172c03;
					}
					_iter_end_22d172c03:;
				};
			}
		}
		_match_end_22d171707:;
	};
	_39263_ok = false;
	return _39263_ok;
}



inline jule::Bool _229a40c56_annotate_constraint_fn(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _40946_k) {
	jule::Bool _40962_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d39ea7_FnDecl>>()) {
			_case_begin_22d1739a1:;
			{
				jule::Ptr<_228d39ea7_FnDecl> _41221_pf = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_228d39ea7_FnDecl>();;
				jule::Ptr<_228de996d_FnIns> _41321_f = _229a81659_fnc(_40946_k.ptr());;
				{
					auto &expr = _41321_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_22d175a2a:;
					if (it != expr.end()) {
						jule::I64 _41418_i = it - expr.begin();
						jule::Ptr<_228de8a9e_ParamIns> _41425_fp = *it;
						{
							(*_self_)._field_c=_41221_pf.get()._field_params[_41418_i].get()._field_kind;
							if (_229a413a5_annotate_constraint(&(*_self_), _41425_fp.get()._field_kind)) {
								_40962_ok = true;
								return _40962_ok;
							};
						}
						_iter_next_22d175a2a:;
						++it;
						_41418_i++;
						goto _iter_begin_22d175a2a;
					}
					_iter_end_22d175a2a:;
				};
				if ((_41221_pf.get()._field_result != nullptr)) {
					(*_self_)._field_c=_41221_pf.get()._field_result.get()._field_kind;
					if (_229a413a5_annotate_constraint(&(*_self_), _41321_f.get()._field_result)) {
						_40962_ok = true;
						return _40962_ok;
					};
				};
			}
		}
		_match_end_22d173451:;
	};
	_40962_ok = false;
	return _40962_ok;
}



inline jule::Bool _229a41086_annotate_constraint_ident(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _43049_k) {
	jule::Ptr<_228d28759_IdentTypeDecl> _43117_ident = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_228d28759_IdentTypeDecl>();;
	jule::Ptr<_228d44c1a_StructIns> _43217_s = _229a818bd_strct(_43049_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22d178940:;
		if (it != expr.end()) {
			jule::I64 _43313_i = it - expr.begin();
			jule::Ptr<_228d35777_GenericDecl> _43316_g = *it;
			{
				if ((_43316_g.get()._field_ident == _43117_ident.get()._field_ident)) {
					jule::Ptr<_229a7bb2c_InsGeneric> _43525_fg = (*_self_)._field_f.get()._field_generics[_43313_i];;
					if ((_43525_fg != nullptr)) {
						return false;
					};
					_229a416c4_push_generic(&(*_self_), _43049_k,_43313_i);
					return true;
				};
				if ((_43217_s == nullptr)) {
					goto _iter_next_22d178940;
				};
				jule::Ptr<_228d28193_TypeDecl> _44521_c = (*_self_)._field_c;;
				{
					auto &expr = _43117_ident.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_22d17b899:;
					if (it != expr.end()) {
						jule::Ptr<_228d28193_TypeDecl> _44625_ig = *it;
						{
							(*_self_)._field_c=_44625_ig;
							{
								auto &expr = _43217_s.get()._field_generics;
								auto it = expr.begin();
								_iter_begin_22d17c614:;
								if (it != expr.end()) {
									jule::Ptr<_229a7bb2c_InsGeneric> _44829_sg = *it;
									{
										if (_229a413a5_annotate_constraint(&(*_self_), _44829_sg.get()._field_kind)) {
											return true;
										};
									}
									_iter_next_22d17c614:;
									++it;
									goto _iter_begin_22d17c614;
								}
								_iter_end_22d17c614:;
							};
						}
						_iter_next_22d17b899:;
						++it;
						goto _iter_begin_22d17b899;
					}
					_iter_end_22d17b899:;
				};
				(*_self_)._field_c=_44521_c;
			}
			_iter_next_22d178940:;
			++it;
			_43313_i++;
			goto _iter_begin_22d178940;
		}
		_iter_end_22d178940:;
	};
	return false;
}



inline jule::Bool _229a413a5_annotate_constraint(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _45943_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d28759_IdentTypeDecl>>()) {
			_case_begin_22d17bdb6:;
			{
				return _229a41086_annotate_constraint_ident(&(*_self_), _45943_k);
			}
		}
		_match_end_22d17cb53:;
	};
	{
		
		if ((_229a81181_arr(_45943_k.ptr()) != nullptr)) {
			_case_begin_22d17d659:;
			{
				return _22d180051_annotate_constraint_elem(&(*_self_), _45943_k);
			}
		}
		else if ((_229a813e5_slc(_45943_k.ptr()) != nullptr)) {
			_case_begin_22d17d6c0:;
			{
				return _22d180abd_annotate_constraint_elem(&(*_self_), _45943_k);
			}
		}
		else if ((_229a80944_ptr(_45943_k.ptr()) != nullptr)) {
			_case_begin_22d17d736:;
			{
				return _22d184e13_annotate_constraint_elem(&(*_self_), _45943_k);
			}
		}
		else if ((_229a806d0_sptr(_45943_k.ptr()) != nullptr)) {
			_case_begin_22d17e00b:;
			{
				return _22d1885dc_annotate_constraint_elem(&(*_self_), _45943_k);
			}
		}
		else if ((_229a81d96_map(_45943_k.ptr()) != nullptr)) {
			_case_begin_22d17e072:;
			{
				return _229a405e6_annotate_constraint_map(&(*_self_), _45943_k);
			}
		}
		else if ((_229a81659_fnc(_45943_k.ptr()) != nullptr)) {
			_case_begin_22d17e0d8:;
			{
				return _229a40c56_annotate_constraint_fn(&(*_self_), _45943_k);
			}
		}
		else if ((_229a8210a_tup(_45943_k.ptr()) != nullptr)) {
			_case_begin_22d17e14e:;
			{
				return _229a40937_annotate_constraint_tup(&(*_self_), _45943_k);
			}
		}
		else {
			_case_begin_22d17de62:;
			{
				return false;
			}
		}
		_match_end_22d17de0c:;
	};
}



inline void _229a416c4_push_generic(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _48436_k, jule::I64 _48450_i) {
	(*_self_)._field_f.get()._field_generics[_48450_i]=jule::new_ptr<_229a7bb2c_InsGeneric>(_229a7bb2c_InsGeneric{._field_kind=_48436_k, });
	jule::Ptr<_228d35777_GenericDecl> _48617_gd = (*_self_)._field_f.get()._field_decl.get()._field_generics[_48450_i];;
	if (((_48617_gd.get()._field_constraint == nullptr) || (_48617_gd.get()._field_constraint.get()._field_mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48617_gd.get()._field_constraint.get()._field_mask[0LL];
	_229a413a5_annotate_constraint(&(*_self_), _48436_k);
}



inline jule::Bool _229a419d2_annotate_prim(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _49444_k) {
	jule::Bool _49460_ok = jule::Bool();
	_49460_ok = _229a43808_annotate_any(&(*_self_), _49444_k);
	return _49460_ok;
}



inline jule::Bool _229a41ce0_annotate_arr(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _49843_k) {
	jule::Bool _49859_ok = jule::Bool();
	jule::Ptr<_229a891bc_Arr> _49917_parr = _229a81181_arr((*((*_self_)._field_k)).ptr());;
	if ((_49917_parr == nullptr)) {
		_49859_ok = false;
		return _49859_ok;
	};
	jule::Ptr<_229a891bc_Arr> _50317_arr = _229a81181_arr(_49843_k.ptr());;
	(*_self_)._field_k=(&(_49917_parr.get()._field_elem));
	_49859_ok = _229a43b16_annotate_kind(&(*_self_), _50317_arr.get()._field_elem);
	return _49859_ok;
}



inline jule::Bool _229a420ed_annotate_slc(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _50843_k) {
	jule::Bool _50859_ok = jule::Bool();
	jule::Ptr<_229a87022_Slc> _50917_pslc = _229a813e5_slc((*((*_self_)._field_k)).ptr());;
	if ((_50917_pslc == nullptr)) {
		_50859_ok = false;
		return _50859_ok;
	};
	jule::Ptr<_229a87022_Slc> _51317_slc = _229a813e5_slc(_50843_k.ptr());;
	(*_self_)._field_k=(&(_50917_pslc.get()._field_elem));
	_50859_ok = _229a43b16_annotate_kind(&(*_self_), _51317_slc.get()._field_elem);
	return _50859_ok;
}



inline jule::Bool _229a424a5_check_map_key(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>* _51843_k, jule::Ptr<_229a7d359_TypeKind>& _51863_ck) {
	jule::Bool _51880_ok = jule::Bool();
	jule::Ptr<_229a7d359_TypeKind>* _51917_old = (*_self_)._field_k;;
	(*_self_)._field_k=_51843_k;
	_51880_ok=_229a43b16_annotate_kind(&(*_self_), _51863_ck);
	(*_self_)._field_k=_51917_old;
	return _51880_ok;
}



inline jule::Bool _229a427b3_annotate_map(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _52643_k) {
	jule::Bool _52659_ok = jule::Bool();
	jule::Ptr<_229a885c8_Map> _52717_pmap = _229a81d96_map((*((*_self_)._field_k)).ptr());;
	if ((_52717_pmap == nullptr)) {
		_52659_ok = false;
		return _52659_ok;
	};
	jule::Ptr<_229a885c8_Map> _53117_m = _229a81d96_map(_52643_k.ptr());;
	_52659_ok = (_229a424a5_check_map_key(&(*_self_), (&(_52717_pmap.get()._field_key)),_53117_m.get()._field_key) && _229a424a5_check_map_key(&(*_self_), (&(_52717_pmap.get()._field_val)),_53117_m.get()._field_val));
	return _52659_ok;
}



inline jule::Bool _229a42ac1_annotate_fn(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _53642_k) {
	jule::Bool _53658_ok = jule::Bool();
	jule::Ptr<_228de996d_FnIns> _53717_pf = _229a81659_fnc((*((*_self_)._field_k)).ptr());;
	if ((_53717_pf == nullptr)) {
		_53658_ok = false;
		return _53658_ok;
	};
	jule::Ptr<_228de996d_FnIns> _54117_f = _229a81659_fnc(_53642_k.ptr());;
	{
		
		if ((_53717_pf.get()._field_params.len() != _54117_f.get()._field_params.len())) {
			_case_begin_22d19b6ee:;
			{
				_53658_ok = false;
				return _53658_ok;
			}
		}
		else if ((_228de722e_is_void(_53717_pf.get()._field_decl.ptr()) != _228de722e_is_void(_54117_f.get()._field_decl.ptr()))) {
			_case_begin_22d19b776:;
			{
				_53658_ok = false;
				return _53658_ok;
			}
		}
		_match_end_22d19b677:;
	};
	_53658_ok=true;
	jule::Ptr<_229a7d359_TypeKind>* _55017_old = (*_self_)._field_k;;
	{
		auto &expr = _54117_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_22d19d15c:;
		if (it != expr.end()) {
			jule::I64 _55114_i = it - expr.begin();
			jule::Ptr<_228de8a9e_ParamIns> _55121_fp = *it;
			{
				(*_self_)._field_k=(&(_53717_pf.get()._field_params[_55114_i].get()._field_kind));
				_53658_ok=(_229a43b16_annotate_kind(&(*_self_), _55121_fp.get()._field_kind) && _53658_ok);
			}
			_iter_next_22d19d15c:;
			++it;
			_55114_i++;
			goto _iter_begin_22d19d15c;
		}
		_iter_end_22d19d15c:;
	};
	if ((!(_228de722e_is_void(_53717_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_53717_pf.get()._field_result));
		_53658_ok=(_229a43b16_annotate_kind(&(*_self_), _54117_f.get()._field_result) && _53658_ok);
	};
	(*_self_)._field_k=_55017_old;
	return _53658_ok;
}



inline jule::Bool _229a42dce_annotate_ptr(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _56543_k) {
	jule::Bool _56559_ok = jule::Bool();
	jule::Ptr<_229a89b29_Ptr> _56617_pptr = _229a80944_ptr((*((*_self_)._field_k)).ptr());;
	if ((_56617_pptr == nullptr)) {
		_56559_ok = false;
		return _56559_ok;
	};
	jule::Ptr<_229a89b29_Ptr> _57017_ptr = _229a80944_ptr(_56543_k.ptr());;
	(*_self_)._field_k=(&(_56617_pptr.get()._field_elem));
	_56559_ok = _229a43b16_annotate_kind(&(*_self_), _57017_ptr.get()._field_elem);
	return _56559_ok;
}



inline jule::Bool _229a431dc_annotate_sptr(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _57544_k) {
	jule::Bool _57560_ok = jule::Bool();
	jule::Ptr<_229a865b5_Sptr> _57617_ssptr = _229a806d0_sptr((*((*_self_)._field_k)).ptr());;
	if ((_57617_ssptr == nullptr)) {
		_57560_ok = false;
		return _57560_ok;
	};
	jule::Ptr<_229a865b5_Sptr> _58017_sptr = _229a806d0_sptr(_57544_k.ptr());;
	(*_self_)._field_k=(&(_57617_ssptr.get()._field_elem));
	_57560_ok = _229a43b16_annotate_kind(&(*_self_), _58017_sptr.get()._field_elem);
	return _57560_ok;
}



inline jule::Bool _229a434ea_annotate_struct(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _58546_k) {
	jule::Bool _58562_ok = jule::Bool();
	jule::Ptr<_228d44c1a_StructIns> _58617_s = _229a818bd_strct((*((*_self_)._field_k)).ptr());;
	if ((_58617_s == nullptr)) {
		_58562_ok = false;
		return _58562_ok;
	};
	jule::Ptr<_228d44c1a_StructIns> _59017_s2 = _229a818bd_strct(_58546_k.ptr());;
	if ((_58617_s.get()._field_generics.len() != _59017_s2.get()._field_generics.len())) {
		_58562_ok = false;
		return _58562_ok;
	};
	{
		auto &expr = _58617_s.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22d1a6a7d:;
		if (it != expr.end()) {
			jule::I64 _59414_i = it - expr.begin();
			jule::Ptr<_229a7bb2c_InsGeneric> _59421_g = *it;
			{
				jule::Ptr<_229a7bb2c_InsGeneric> _59521_g2 = _59017_s2.get()._field_generics[_59414_i];;
				if (_229a7da63_equals(_59421_g.get()._field_kind, _59521_g2.get()._field_kind)) {
					goto _iter_next_22d1a6a7d;
				};
				(*_self_)._field_k=(&(_59421_g.get()._field_kind));
				if ((!(_229a43b16_annotate_kind(&(*_self_), _59521_g2.get()._field_kind)))) {
					_58562_ok = false;
					return _58562_ok;
				};
			}
			_iter_next_22d1a6a7d:;
			++it;
			_59414_i++;
			goto _iter_begin_22d1a6a7d;
		}
		_iter_end_22d1a6a7d:;
	};
	_58562_ok = true;
	return _58562_ok;
}



inline jule::Bool _229a43808_annotate_any(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _60743_k) {
	jule::Bool _60759_ok = jule::Bool();
	jule::Str _60813_kind = _229a7d755_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22d1a99d7:;
		if (it != expr.end()) {
			jule::I64 _60913_i = it - expr.begin();
			jule::Ptr<_228d35777_GenericDecl> _60916_g = *it;
			{
				if ((_60813_kind != _60916_g.get()._field_ident)) {
					goto _iter_next_22d1a99d7;
				};
				jule::Ptr<_229a7bb2c_InsGeneric> _61417_t = (*_self_)._field_f.get()._field_generics[_60913_i];;
				{
					
					if ((_61417_t == nullptr) || (_61417_t.get()._field_kind == nullptr)) {
						_case_begin_22d1ab5bb:;
						{
							_229a416c4_push_generic(&(*_self_), _60743_k,_60913_i);
						}
					}
					else if ((!(_229a7da63_equals(_61417_t.get()._field_kind, _60743_k)))) {
						_case_begin_22d1ab643:;
						{
							_60759_ok = false;
							return _60759_ok;
						}
					}
					_match_end_22d1ab478:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_60743_k.get()._field_kind;
				_60759_ok = true;
				return _60759_ok;
			}
			_iter_next_22d1a99d7:;
			++it;
			_60913_i++;
			goto _iter_begin_22d1a99d7;
		}
		_iter_end_22d1a99d7:;
	};
	_60759_ok = false;
	return _60759_ok;
}



inline jule::Bool _229a43b16_annotate_kind(_229a3ebab_DynamicTypeAnnotation* _self_, jule::Ptr<_229a7d359_TypeKind>& _63044_k) {
	jule::Bool _63060_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63060_ok;
	};
	{
		
		if (_229a43808_annotate_any(&(*_self_), _63044_k)) {
			_case_begin_22d1ae657:;
			{
				_63060_ok = true;
				return _63060_ok;
			}
		}
		else if ((_229a8046b_prim(_63044_k.ptr()) != nullptr)) {
			_case_begin_22d1ae6bd:;
			{
				_63060_ok = _229a419d2_annotate_prim(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_229a81181_arr(_63044_k.ptr()) != nullptr)) {
			_case_begin_22d1ae36b:;
			{
				_63060_ok = _229a41ce0_annotate_arr(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_229a813e5_slc(_63044_k.ptr()) != nullptr)) {
			_case_begin_22d1ae3d2:;
			{
				_63060_ok = _229a420ed_annotate_slc(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_229a81d96_map(_63044_k.ptr()) != nullptr)) {
			_case_begin_22d1ae448:;
			{
				_63060_ok = _229a427b3_annotate_map(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_229a81659_fnc(_63044_k.ptr()) != nullptr)) {
			_case_begin_22d1ade70:;
			{
				_63060_ok = _229a42ac1_annotate_fn(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_229a80944_ptr(_63044_k.ptr()) != nullptr)) {
			_case_begin_22d1aded6:;
			{
				_63060_ok = _229a42dce_annotate_ptr(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_229a806d0_sptr(_63044_k.ptr()) != nullptr)) {
			_case_begin_22d1ae04c:;
			{
				_63060_ok = _229a431dc_annotate_sptr(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else if ((_229a818bd_strct(_63044_k.ptr()) != nullptr)) {
			_case_begin_22d1ae0b3:;
			{
				_63060_ok = _229a434ea_annotate_struct(&(*_self_), _63044_k);
				return _63060_ok;
			}
		}
		else {
			_case_begin_22d1ade09:;
			{
				_63060_ok = false;
				return _63060_ok;
			}
		}
		_match_end_22d1adda4:;
	};
}



inline jule::Bool _229a43d7a_annotate(_229a3ebab_DynamicTypeAnnotation* _self_) {
	jule::Bool _65836_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_65836_ok = _229a43b16_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _65836_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _229a3ebab_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _229a44aa1_push_err_token(_229a44551_FnCallArgChecker* _self_, jule::Ptr<_2276b1a1c_Token> _67433_token, jule::Str _67448_fmt, jule::Slice<jule::Any> _67461_args) {
	_2299e1454_push_err((*_self_)._field_e.get()._field_s.ptr(), _67433_token,_67448_fmt,jule::Any(_67461_args));
}



inline void _229a44dc0_push_err(_229a44551_FnCallArgChecker* _self_, jule::Str _67827_fmt, jule::Slice<jule::Any> _67840_args) {
	_229a44aa1_push_err_token(&(*_self_), (*_self_)._field_error_token,_67827_fmt,jule::Any(_67840_args));
}



inline jule::Slice<jule::Ptr<_228de8a9e_ParamIns>> _229a45134_get_params(_229a44551_FnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _228de5aac_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr()))) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _229a45442_check_counts(_229a44551_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>& _69132_params) {
	jule::Bool _69155_ok = jule::Bool();
	jule::I64 _69217_n = _69132_params.len();;
	if (((_69217_n > 0LL) && _228de5aac_is_self(_69132_params[0LL].get()._field_decl.ptr()))) {
		(_69217_n)--;
	};
	jule::I64 _69717_diff = (_69217_n - (*_self_)._field_args.len());;
	{
		
		if ((_69717_diff == 0LL)) {
			_case_begin_22d1bac07:;
			{
				_69155_ok = true;
				return _69155_ok;
			}
		}
		else if (((_69217_n > 0LL) && _69132_params[(_69217_n - 1LL)].get()._field_decl.get()._field_variadic)) {
			_case_begin_22d1bac6d:;
			{
				_69155_ok = true;
				return _69155_ok;
			}
		}
		else if (((_69717_diff < 0LL) || (_69717_diff > _69132_params.len()))) {
			_case_begin_22d1bacd4:;
			{
				_229a44dc0_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69155_ok = false;
				return _69155_ok;
			}
		}
		_match_end_22d1bab5d:;
	};
	jule::Str _70817_idents = jule::Str();;
	for (; (_69717_diff > 0LL); (_69717_diff)--) {
		{
			_70817_idents+=(jule::Str(", ", 2) + _69132_params[(_69217_n - _69717_diff)].get()._field_decl.get()._field_ident);
		}
	_iter_next_22d1bcd80:;
	}
	_iter_end_22d1bcd80:;;
	(_70817_idents).mut_slice(2LL);;
	_229a44dc0_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_70817_idents)}));
	_69155_ok = false;
	return _69155_ok;
}



inline jule::Bool _229a45893_check_arg(_229a44551_FnCallArgChecker* _self_, jule::Ptr<_228de8a9e_ParamIns>& _71833_p, jule::Ptr<_229a527d4_Data>& _71852_arg, jule::Ptr<_2276b1a1c_Token>& _71869_error_token) {
	jule::Bool _71892_ok = jule::Bool();
	if (((*_self_)._field_dynamic_annotation && _228deb464_parameter_uses_generics(_71833_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics))) {
		_71892_ok=(!(_71833_p.get()._field_decl.get()._field_variadic));
		if (_71892_ok) {
			_229a3ebab_DynamicTypeAnnotation _72225_dta = _229a3ebab_DynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_71833_p, ._field_a=_71852_arg, ._field_error_token=_71869_error_token, };;
			_71892_ok=_229a43d7a_annotate(&_72225_dta);
		};
		if ((!(_71892_ok))) {
			_229a44aa1_push_err_token(&(*_self_), _71869_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_71892_ok = false;
			return _71892_ok;
		};
	};
	if (_2299e9d75_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _71833_p.get()._field_decl.get()._field_mutable,_71833_p.get()._field_decl.get()._field_reference,_71833_p.get()._field_kind,_71852_arg,_71869_error_token)) {
		_2299e705e_check_assign_type((*_self_)._field_e.get()._field_s, _71833_p.get()._field_decl.get()._field_reference,_71833_p.get()._field_kind,_71852_arg,_71869_error_token);
	};
	_71892_ok = true;
	return _71892_ok;
}



inline jule::Bool _229a45c4a_push(_229a44551_FnCallArgChecker* _self_, jule::Ptr<_228de8a9e_ParamIns>& _74528_p, jule::Ptr<_228d2c6b4_Expr> _74546_arg) {
	jule::Bool _74560_ok = jule::Bool();
	jule::Ptr<_229a7d359_TypeKind> _74617_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74713_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_229a527d4_Data> _74817_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74528_p.get()._field_decl.get()._field_mutable));
	if (((!((*_self_)._field_dynamic_annotation)) && (!(_74528_p.get()._field_decl.get()._field_variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74528_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_74817_d=_229a6e405_eval_expr_kind((*_self_)._field_e, _74546_arg.get()._field_kind);
	(*_self_)._field_e.get()._field_prefix=_74617_old;
	(*_self_)._field_e.get()._field_immutable=_74713_old_immut;
	if ((_74817_d == nullptr)) {
		_74560_ok = false;
		return _74560_ok;
	};
	_74560_ok=_229a45893_check_arg(&(*_self_), _74528_p,_74817_d,_74546_arg.get()._field_token);
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(_74817_d.get()._field_model);;
	return _74560_ok;
}



inline jule::Bool _229a46102_push_variadic(_229a44551_FnCallArgChecker* _self_, jule::Ptr<_228de8a9e_ParamIns>& _77037_p, jule::I64 _77055_i) {
	jule::Bool _77065_ok = jule::Bool();
	_77065_ok=true;
	jule::Bool _77217_variadiced = false;;
	jule::Bool _77313_more = ((_77055_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_228de08a9_SliceExprModel> _77417_model = jule::new_ptr<_228de08a9_SliceExprModel>(_228de08a9_SliceExprModel{._field_elem_kind=_77037_p.get()._field_kind, });;
	jule::Ptr<_229a7d359_TypeKind> _77817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78313_variadic = _77037_p.get()._field_kind.get()._field_variadic;;
	_77037_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_77037_p.get()._field_kind.get()._field_variadic=_78313_variadic;
	});;
	for (; (_77055_i < (*_self_)._field_args.len()); (_77055_i)++) {
		{
			jule::Ptr<_228d2c6b4_Expr> _79021_arg = (*_self_)._field_args[_77055_i];;
			{
				auto &_match_expr{ _79021_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_228d302dd_VariadicExpr>>()) {
					_case_begin_22d1cb50e:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_229a87022_Slc>(_229a87022_Slc{._field_elem=_77037_p.get()._field_kind}), 8)});
					}
				}
				else {
					_case_begin_22d1cbe27:;
					{
						(*_self_)._field_e.get()._field_prefix=_77037_p.get()._field_kind;
					}
				}
				_match_end_22d1cbdc2:;
			};
			jule::Ptr<_229a527d4_Data> _80321_d = _229a6e713_eval((*_self_)._field_e, _79021_arg);;
			if ((_80321_d == nullptr)) {
				_77065_ok=false;
				goto _iter_next_22d1ca9e7;
			};
			if (_80321_d.get()._field_kind.get()._field_variadic) {
				_77217_variadiced=true;
				_77037_p.get()._field_kind.get()._field_variadic=true;
				_77065_ok=(_77065_ok && _229a45893_check_arg(&(*_self_), _77037_p,_80321_d,_79021_arg.get()._field_token));
				{
					auto &_match_expr{ _80321_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_228de08a9_SliceExprModel>>()) {
						_case_begin_22d1ce149:;
						{
							_77417_model=_80321_d.get()._field_model.operator jule::Ptr<_228de08a9_SliceExprModel>();
							_77417_model.get()._field_elem_kind=_77037_p.get()._field_kind;
						}
					}
					else {
						_case_begin_22d1cee91:;
						{
							_77417_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(_80321_d.get()._field_model);;
						}
					}
					_match_end_22d1cec2c:;
				};
				(_77055_i)++;
				goto _iter_end_22d1ca9e7;
			};
			_77065_ok=(_77065_ok && _229a45893_check_arg(&(*_self_), _77037_p,_80321_d,_79021_arg.get()._field_token));
			_77417_model.get()._field_elems = jule::alloc_for_append(_77417_model.get()._field_elems,1);_77417_model.get()._field_elems.__push(_80321_d.get()._field_model);;
		}
	_iter_next_22d1ca9e7:;
	}
	_iter_end_22d1ca9e7:;;
	(*_self_)._field_e.get()._field_prefix=_77817_old;
	if ((_77217_variadiced && _77313_more)) {
		_229a44aa1_push_err_token(&(*_self_), (*_self_)._field_args[_77055_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77417_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(static_cast<jule::Any>(_77417_model));;
	};
	return _77065_ok;
}



inline jule::Bool _229a46410_check_args(_229a44551_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>& _84634_params) {
	jule::Bool _84657_ok = jule::Bool();
	jule::Bool _84713_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84657_ok=true;
	jule::I64 _85117_i = 0LL;;
	if (((_84634_params.len() > 0LL) && _228de5aac_is_self(_84634_params[0LL].get()._field_decl.ptr()))) {
		(_85117_i)++;
	};
	_julec_label_iter:;
	while ((_85117_i < _84634_params.len())) {
		{
			jule::Ptr<_228de8a9e_ParamIns> _85821_p = _84634_params[_85117_i];;
			{
				
				if (_85821_p.get()._field_decl.get()._field_variadic) {
					_case_begin_22d1d6c56:;
					{
						_84657_ok=(_229a46102_push_variadic(&(*_self_), _85821_p,_85117_i) && _84657_ok);
						goto _iter_end_22d1d4a89;
					}
				}
				else if (((*_self_)._field_args.len() <= _85117_i)) {
					_case_begin_22d1d6591:;
					{
						_84657_ok=false;
						goto _iter_end_22d1d4a89;
					}
				}
				else {
					_case_begin_22d1d61d9:;
					{
						_84657_ok=(_229a45c4a_push(&(*_self_), _85821_p,(*_self_)._field_args[_85117_i]) && _84657_ok);
					}
				}
				_match_end_22d1d6173:;
			};
			(_85117_i)++;
		}
	_iter_next_22d1d4a89:;
	}
	_iter_end_22d1d4a89:;;
	(*_self_)._field_e.get()._field_arg=_84713_arg;
	return _84657_ok;
}



inline jule::Bool _229a46696_check_dynamic_type_annotation(_229a44551_FnCallArgChecker* _self_) {
	jule::Bool _87750_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22d1d85c6:;
		if (it != expr.end()) {
			jule::Ptr<_229a7bb2c_InsGeneric> _87816_g = *it;
			{
				if ((_87816_g == nullptr)) {
					_229a44dc0_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87750_ok = false;
					return _87750_ok;
				};
			}
			_iter_next_22d1d85c6:;
			++it;
			goto _iter_begin_22d1d85c6;
		}
		_iter_end_22d1d85c6:;
	};
	_87750_ok = true;
	return _87750_ok;
}



inline jule::Bool _229a4691b_check(_229a44551_FnCallArgChecker* _self_) {
	jule::Bool _88726_ok = jule::Bool();
	jule::Slice<jule::Ptr<_228de8a9e_ParamIns>> _88817_params = _229a45134_get_params(&(*_self_));;
	_88726_ok=_229a45442_check_counts(&(*_self_), _88817_params);
	if ((!(_88726_ok))) {
		_88726_ok = false;
		return _88726_ok;
	};
	_88726_ok=_229a46410_check_args(&(*_self_), _88817_params);
	if ((_88726_ok && (*_self_)._field_dynamic_annotation)) {
		_88726_ok=_229a46696_check_dynamic_type_annotation(&(*_self_));
	};
	return _88726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _229a44551_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _229a47466_push_err(_229a46e5a_StructLitChecker* _self_, jule::Ptr<_2276b1a1c_Token> _91127_token, jule::Str _91142_fmt, jule::Slice<jule::Any> _91155_args) {
	_229a5485d_push_err((*_self_)._field_e.ptr(), _91127_token,_91142_fmt,jule::Any(_91155_args));
}



inline void _229a47785_push_suggestion(_229a46e5a_StructLitChecker* _self_, jule::Str _91634_fmt, jule::Slice<jule::Any> _91647_args) {
	_229a54b7c_push_suggestion((*_self_)._field_e.ptr(), _91634_fmt,jule::Any(_91647_args));
}



inline void _229a47b4d_push_match(_229a46e5a_StructLitChecker* _self_, jule::Ptr<_228d21037_FieldIns>& _92034_f, jule::Ptr<_229a527d4_Data>& _92053_d, jule::Ptr<_2276b1a1c_Token>& _92068_error_token) {
	;
	if (_2299e9d75_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_92034_f.get()._field_kind,_92053_d,_92068_error_token)) {
		_2299e705e_check_assign_type((*_self_)._field_e.get()._field_s, false,_92034_f.get()._field_kind,_92053_d,_92068_error_token);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_228ddee19_StructArgExprModel>(_228ddee19_StructArgExprModel{._field_field=_92034_f, ._field_expr=_92053_d.get()._field_model}));;
}



inline void _229a47e6c_check_pair(_229a46e5a_StructLitChecker* _self_, jule::Ptr<_228d32411_FieldExprPair>& _93334_pair, jule::Slice<jule::Ptr<_228d2c6b4_Expr>>& _93361_exprs) {
	jule::Ptr<_228d21037_FieldIns> _93517_f = _228d228a7_find_field((*_self_)._field_s.ptr(), _93334_pair.get()._field_field.get()._field_kind);;
	if ((_93517_f == nullptr)) {
		_229a47466_push_err(&(*_self_), _93334_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93334_pair.get()._field_field.get()._field_kind)}));
		return;;
	};
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _93517_f.get()._field_decl.get()._field_public,_93517_f.get()._field_decl.get()._field_token)))) {
		_229a47466_push_err(&(*_self_), _93334_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93334_pair.get()._field_field.get()._field_kind)}));
		_229a47785_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93361_exprs;
		auto it = expr.begin();
		_iter_begin_22d1e367a:;
		if (it != expr.end()) {
			jule::Ptr<_228d2c6b4_Expr> _94721_expr = *it;
			{
				{
					auto &_match_expr{ _94721_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_228d32411_FieldExprPair>>()) {
						_case_begin_22d1e403d:;
						{
							jule::Ptr<_228d32411_FieldExprPair> _95025_dpair = _94721_expr.get()._field_kind.operator jule::Ptr<_228d32411_FieldExprPair>();;
							{
								
								if ((_93334_pair == _95025_dpair)) {
									_case_begin_22d1e500b:;
									{
										goto _iter_end_22d1e367a;
									}
								}
								else if ((_93334_pair.get()._field_field.get()._field_kind == _95025_dpair.get()._field_field.get()._field_kind)) {
									_case_begin_22d1e5083:;
									{
										_229a47466_push_err(&(*_self_), _93334_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93334_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_22d1e367a;
									}
								}
								_match_end_22d1e4e51:;
							};
						}
					}
					_match_end_22d1e3d84:;
				};
			}
			_iter_next_22d1e367a:;
			++it;
			goto _iter_begin_22d1e367a;
		}
		_iter_end_22d1e367a:;
	};
	jule::Ptr<_229a7d359_TypeKind> _96117_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_96117_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93517_f.get()._field_kind;
	jule::Ptr<_229a527d4_Data> _96517_d = _229a6e405_eval_expr_kind((*_self_)._field_e, _93334_pair.get()._field_expr.get()._field_kind);;
	if ((_96517_d == nullptr)) {
		return;;
	};
	_229a47b4d_push_match(&(*_self_), _93517_f,_96517_d,_93334_pair.get()._field_field);
}



inline jule::Bool _229a4827a_ready_exprs(_229a46e5a_StructLitChecker* _self_, jule::Slice<jule::Ptr<_228d2c6b4_Expr>>& _97235_exprs) {
	jule::Bool _97317_ok = true;;
	{
		auto &expr = _97235_exprs;
		auto it = expr.begin();
		_iter_begin_22d1e8a48:;
		if (it != expr.end()) {
			jule::I64 _97414_i = it - expr.begin();
			jule::Ptr<_228d2c6b4_Expr> _97421_expr = *it;
			{
				{
					auto &_match_expr{ _97421_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_228d33ae9_KeyValPair>>()) {
						_case_begin_22d1e97a2:;
						{
							jule::Ptr<_228d33ae9_KeyValPair> _97725_pair = _97421_expr.get()._field_kind.operator jule::Ptr<_228d33ae9_KeyValPair>();;
							{
								auto &_match_expr{ _97725_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_228d2e72c_IdentExpr>>()) {
									_case_begin_22d1ea143:;
									{
										goto _match_end_22d1ea5c7;
									}
								}
								else {
									_case_begin_22d1ea84c:;
									{
										_229a47466_push_err(&(*_self_), _97725_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97317_ok=false;
										goto _iter_next_22d1e8a48;
									}
								}
								_match_end_22d1ea5c7:;
							};
							_97235_exprs[_97414_i].get()._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d32411_FieldExprPair>(_228d32411_FieldExprPair{._field_field=_97725_pair.get()._field_key.get()._field_token, ._field_expr=_97725_pair.get()._field_val}));
						}
					}
					_match_end_22d1e95e8:;
				};
			}
			_iter_next_22d1e8a48:;
			++it;
			_97414_i++;
			goto _iter_begin_22d1e8a48;
		}
		_iter_end_22d1e8a48:;
	};
	return _97317_ok;
}



inline void _229a48500_check(_229a46e5a_StructLitChecker* _self_, jule::Slice<jule::Ptr<_228d2c6b4_Expr>>& _99629_exprs) {
	if ((_99629_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_229a4827a_ready_exprs(&(*_self_), _99629_exprs)))) {
		return;;
	};
	jule::Bool _100517_paired = false;;
	{
		auto &expr = _99629_exprs;
		auto it = expr.begin();
		_iter_begin_22d1e88d3:;
		if (it != expr.end()) {
			jule::I64 _100614_i = it - expr.begin();
			jule::Ptr<_228d2c6b4_Expr> _100621_expr = *it;
			{
				{
					auto &_match_expr{ _100621_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_228d32411_FieldExprPair>>()) {
						_case_begin_22d203beb:;
						{
							jule::Ptr<_228d32411_FieldExprPair> _100925_pair = _100621_expr.get()._field_kind.operator jule::Ptr<_228d32411_FieldExprPair>();;
							if (((_100614_i > 0LL) && (!(_100517_paired)))) {
								_229a47466_push_err(&(*_self_), _100925_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100517_paired=true;
							_229a47e6c_check_pair(&(*_self_), _100925_pair,_99629_exprs);
						}
					}
					else {
						_case_begin_22d1edad6:;
						{
							if (_100517_paired) {
								_229a47466_push_err(&(*_self_), _100621_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100614_i >= (*_self_)._field_s.get()._field_fields.len())) {
								_229a47466_push_err(&(*_self_), _100621_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_22d1e88d3;
							};
							jule::Ptr<_228d21037_FieldIns> _102425_field = (*_self_)._field_s.get()._field_fields[_100614_i];;
							if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _102425_field.get()._field_decl.get()._field_public,_102425_field.get()._field_decl.get()._field_token)))) {
								_229a47466_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_229a47785_push_suggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_229a7d359_TypeKind> _103225_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_103225_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102425_field.get()._field_kind;
							jule::Ptr<_229a527d4_Data> _103625_d = _229a6e405_eval_expr_kind((*_self_)._field_e, _100621_expr.get()._field_kind);;
							if ((_103625_d == nullptr)) {
								goto _iter_next_22d1e88d3;
							};
							_229a47b4d_push_match(&(*_self_), _102425_field,_103625_d,_100621_expr.get()._field_token);
						}
					}
					_match_end_22d1ed960:;
				};
			}
			_iter_next_22d1e88d3:;
			++it;
			_100614_i++;
			goto _iter_begin_22d1e88d3;
		}
		_iter_end_22d1e88d3:;
	};
	if ((!(_100517_paired))) {
		jule::I64 _104717_n = (*_self_)._field_s.get()._field_fields.len();;
		jule::I64 _104821_diff = (_104717_n - _99629_exprs.len());;
		{
			
			if ((_104821_diff <= 0LL)) {
				_case_begin_22d2065d3:;
				{
					return;;
				}
			}
			_match_end_22d20647e:;
		};
		jule::Str _105421_idents = jule::Str();;
		for (; (_104821_diff > 0LL); (_104821_diff)--) {
			{
				_105421_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[(_104717_n - _104821_diff)].get()._field_decl.get()._field_ident);
			}
		_iter_next_22d20702e:;
		}
		_iter_end_22d20702e:;;
		(_105421_idents).mut_slice(2LL);;
		_229a47466_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105421_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _229a46e5a_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_229a0a4a1_Var> _229a48ed4_build_var(_229a48a3e_RangeChecker* _self_, jule::Ptr<_228d3ae86_VarDecl>& _107329_decl) {
	jule::Ptr<_229a0a4a1_Var> _107417_v = _228e02008_build_var(_107329_decl);;
	return _107417_v;
}



inline void _229a491b0_set_size_key(_229a48a3e_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _2276b42b1_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_a=_229a48ed4_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
			_case_begin_22d20ac25:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_229a09538_IterRelation>(_229a09538_IterRelation{._field_range=(*_self_)._field_d.get()._field_model.operator jule::Ptr<_229a0a4a1_Var>()});
			}
		}
		_match_end_22d20ab6a:;
	};
}



inline void _229a4959a_check_range_expr_validity(_229a48a3e_RangeChecker* _self_, jule::Ptr<_229a527d4_Data>& _110449_d, jule::Ptr<_229a0a4a1_Var>& _110460_key, jule::Ptr<_229a7d359_TypeKind>& _110476_k) {
	jule::Bool _110517__mut = _110460_key.get()._field_mutable;;
	if ((_110517__mut && (!(_229a7e756_mutable(_110476_k.ptr()))))) {
		_110517__mut=false;
	};
	_2299e9d75_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _110517__mut,_110460_key.get()._field_reference,_110460_key.get()._field_kind.get()._field_kind,_110449_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _229a49787_check_slice(_229a48a3e_RangeChecker* _self_) {
	_229a491b0_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _2276b42b1_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_229a87022_Slc> _112317_slc = _229a813e5_slc((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_229a48ed4_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=_112317_slc.get()._field_elem});
	_229a4959a_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_112317_slc.get()._field_elem);
}



inline void _229a49963_check_array(_229a48a3e_RangeChecker* _self_) {
	_229a491b0_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _2276b42b1_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_229a891bc_Arr> _113617_arr = _229a81181_arr((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_229a48ed4_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=_113617_arr.get()._field_elem});
	_229a4959a_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_113617_arr.get()._field_elem);
}



inline void _229a49b3e_check_map_key_a(_229a48a3e_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _2276b42b1_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_229a885c8_Map> _114817_m = _229a81d96_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_a=_229a48ed4_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=_114817_m.get()._field_key});
	jule::Ptr<_229a527d4_Data> _115217_d = jule::new_ptr<_229a527d4_Data>((*((*_self_)._field_d)));;
	_115217_d.get()._field_kind=_114817_m.get()._field_key;
	_229a4959a_check_range_expr_validity(&(*_self_), _115217_d,(*_self_)._field_kind.get()._field_key_a,_114817_m.get()._field_key);
}



inline void _229a49d1a_check_map_key_b(_229a48a3e_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _2276b42b1_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_229a885c8_Map> _116317_m = _229a81d96_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_229a48ed4_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=_116317_m.get()._field_val});
	jule::Ptr<_229a527d4_Data> _116717_d = jule::new_ptr<_229a527d4_Data>((*((*_self_)._field_d)));;
	_116717_d.get()._field_kind=_116317_m.get()._field_val;
	_229a4959a_check_range_expr_validity(&(*_self_), _116717_d,(*_self_)._field_kind.get()._field_key_b,_116317_m.get()._field_val);
}



inline void _229a49ee6_check_map(_229a48a3e_RangeChecker* _self_) {
	_229a49b3e_check_map_key_a(&(*_self_));
	_229a49d1a_check_map_key_b(&(*_self_));
}



inline void _229a4a1c2_check_str(_229a48a3e_RangeChecker* _self_) {
	_229a491b0_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _2276b42b1_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_b=_229a48ed4_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _229a4a436_check(_229a48a3e_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_22d21e7d8:;
		}
		else if ((_229a813e5_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d21dad4:;
			{
				_229a49787_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_229a81181_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d21db4a:;
			{
				_229a49963_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_229a81d96_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d21dbb1:;
			{
				_229a49ee6_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_22d21da6d:;
			{
				jule::Ptr<_229a82d31_Prim> _120617_prim = _229a8046b_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (((_120617_prim != nullptr) && _229a86065_is_str(_120617_prim.ptr()))) {
					_229a4a1c2_check_str(&(*_self_));
					return true;
				};
			}
		}
		_match_end_22d21d991:;
	};
	_2299e1454_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _229a48a3e_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _229a4b17e_prepare_types(_229a4abc8_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_228dea452_types((*_self_)._field_f.ptr());
	};
}



inline void _229a4b404_prepare_exprs(_229a4abc8_RetTypeChecker* _self_, jule::Ptr<_228d2c6b4_Expr>& _123537_e) {
	if ((_123537_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123537_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d2d341_TupleExpr>>()) {
			_case_begin_22d2249db:;
			{
				(*_self_)._field_exprs=_123537_e.get()._field_kind.operator jule::Ptr<_228d2d341_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_22d224656:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123537_e);;
			}
		}
		_match_end_22d224216:;
	};
}



inline void _229a4b5d0_ret_vars(_229a4abc8_RetTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _228de722e_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_229a0a4a1_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len());
	jule::Ptr<_2299bd7e9_ScopeChecker> _125317_root_scope = _2299c190c_get_root((*_self_)._field_sc);;
	jule::I64 _125517_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_22d22c450:;
		if (it != expr.end()) {
			jule::I64 _125613_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _125616_ident = *it;
			{
				if (((!(_2276b42b1_is_ignore_ident(_125616_ident.get()._field_kind))) && (!(_2276b4558_is_anon_ident(_125616_ident.get()._field_kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_125317_root_scope.get()._field_table.get()._field_vars[_125517_j]);;
					(_125517_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_229a0a4a1_Var>(_229a0a4a1_Var{._field_ident=jule::Str("_", 1), ._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=(*_self_)._field_types[_125613_i]}), }));;
				};
			}
			_iter_next_22d22c450:;
			++it;
			_125613_i++;
			goto _iter_begin_22d22c450;
		}
		_iter_end_22d22c450:;
	};
	if ((_125517_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _229a4b7ab_check_exprs(_229a4abc8_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_229a527d4_Data>> _127917_datas = jule::Slice<jule::Ptr<_229a527d4_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_22d2311bd:;
		if (it != expr.end()) {
			jule::I64 _128114_i = it - expr.begin();
			jule::Ptr<_228d2c6b4_Expr> _128121_expr = *it;
			{
				if ((_128114_i >= (*_self_)._field_types.len())) {
					goto _iter_end_22d2311bd;
				};
				jule::Ptr<_229a7d359_TypeKind> _128621_t = (*_self_)._field_types[_128114_i];;
				jule::Ptr<_229a527d4_Data> _128821_d = _229a6ea21_eval_expr(_2299e6756_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_229a98e02_Lookup>((*_self_)._field_sc, 0),_128621_t), _128121_expr);;
				if ((_128821_d == nullptr)) {
					goto _iter_next_22d2311bd;
				};
				_127917_datas = jule::alloc_for_append(_127917_datas,1);_127917_datas.__push(_128821_d);;
				if (((!(_128821_d.get()._field_mutable)) && _229a7e756_mutable(_128821_d.get()._field_kind.ptr()))) {
					_2299e1454_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_229a3d292_AssignTypeChecker _130021_ac = _229a3d292_AssignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_128621_t, ._field_d=_128821_d, ._field_error_token=(*_self_)._field_error_token};;
				_229a3e419_check(&_130021_ac);
			}
			_iter_next_22d2311bd:;
			++it;
			_128114_i++;
			goto _iter_begin_22d2311bd;
		}
		_iter_end_22d2311bd:;
	};
	if ((_127917_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_228de23e4_TupleExprModel>(_228de23e4_TupleExprModel{._field_datas=_127917_datas}));
	} else if ((_127917_datas.len() == 1LL)) {
		(*_self_)._field_model=_127917_datas[0LL].get()._field_model;
	};
}



inline jule::Bool _229a4bab9_check(_229a4abc8_RetTypeChecker* _self_, jule::Ptr<_228d2c6b4_Expr>& _131929_e) {
	_229a4b17e_prepare_types(&(*_self_));
	_229a4b404_prepare_exprs(&(*_self_), _131929_e);
	_229a4b5d0_ret_vars(&(*_self_));
	jule::I64 _132413_n = (*_self_)._field_exprs.len();;
	if (((_132413_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_228de7e44_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_2299e1454_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_132413_n > 0LL) && ((*_self_)._field_f != nullptr)) && _228de722e_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		_2299e1454_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_132413_n > (*_self_)._field_types.len())) {
		_2299e1454_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_132413_n < (*_self_)._field_types.len())) {
		_2299e1454_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_229a4b7ab_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _229a4abc8_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2299d5646_ImportInfo> _229a4d093_find_package(_229a4ca76_SymbolTable* _self_, jule::Str _2635_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_22d23c75c:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_ident == _2635_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_22d23c75c:;
			++it;
			goto _iter_begin_22d23c75c;
		}
		_iter_end_22d23c75c:;
	};
	return nullptr;
}



inline jule::Ptr<_2299d5646_ImportInfo> _229a4d3a1_select_package(_229a4ca76_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)> _3837_selector) {
	if ((_3837_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_22d23d708:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _4321_pkg = *it;
			{
				if (_3837_selector(_4321_pkg)) {
					return _4321_pkg;
				};
			}
			_iter_next_22d23d708:;
			++it;
			goto _iter_begin_22d23d708;
		}
		_iter_end_22d23d708:;
	};
	return nullptr;
}



inline jule::Ptr<_229a0a4a1_Var> _229a4d758_find_var(_229a4ca76_SymbolTable* _self_, jule::Str _5331_ident, jule::Bool _5343_cpp_linked) {
	return _229a5031a___find_var(&(*_self_), _5331_ident,_5343_cpp_linked,false);
}



inline jule::Ptr<_229a7c666_TypeAlias> _229a4db10_find_type_alias(_229a4ca76_SymbolTable* _self_, jule::Str _5938_ident, jule::Bool _5950_cpp_linked) {
	return _229a5076b___find_type_alias(&(*_self_), _5938_ident,_5950_cpp_linked,false);
}



inline jule::Ptr<_228d188c0_Struct> _229a4deb7_find_struct(_229a4ca76_SymbolTable* _self_, jule::Str _6534_ident, jule::Bool _6546_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_22d241233:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> _6621_s = *it;
			{
				if (((_6621_s.get()._field_ident == _6534_ident) && (_6621_s.get()._field_cpp_linked == _6546_cpp_linked))) {
					return _6621_s;
				};
			}
			_iter_next_22d241233:;
			++it;
			goto _iter_begin_22d241233;
		}
		_iter_end_22d241233:;
	};
	return nullptr;
}



inline jule::Ptr<_228de6cbc_Fn> _229a4e36e_find_fn(_229a4ca76_SymbolTable* _self_, jule::Str _7630_ident, jule::Bool _7642_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_22d2426c9:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _7721_f = *it;
			{
				if (((_7721_f.get()._field_ident == _7630_ident) && (_7721_f.get()._field_cpp_linked == _7642_cpp_linked))) {
					return _7721_f;
				};
			}
			_iter_next_22d2426c9:;
			++it;
			goto _iter_begin_22d2426c9;
		}
		_iter_end_22d2426c9:;
	};
	return nullptr;
}



inline jule::Ptr<_22923d1bd_Trait> _229a4e67c_find_trait(_229a4ca76_SymbolTable* _self_, jule::Str _8733_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_22d243950:;
		if (it != expr.end()) {
			jule::Ptr<_22923d1bd_Trait> _8821_t = *it;
			{
				if ((_8821_t.get()._field_ident == _8733_ident)) {
					return _8821_t;
				};
			}
			_iter_next_22d243950:;
			++it;
			goto _iter_begin_22d243950;
		}
		_iter_end_22d243950:;
	};
	return nullptr;
}



inline jule::Ptr<_228e0dcc3_Enum> _229a4e98a_find_enum(_229a4ca76_SymbolTable* _self_, jule::Str _9832_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_22d2448da:;
		if (it != expr.end()) {
			jule::Ptr<_228e0dcc3_Enum> _9921_e = *it;
			{
				if ((_9921_e.get()._field_ident == _9832_ident)) {
					return _9921_e;
				};
			}
			_iter_next_22d2448da:;
			++it;
			goto _iter_begin_22d2448da;
		}
		_iter_end_22d2448da:;
	};
	return nullptr;
}



inline jule::Ptr<_2292e1e75_TypeEnum> _229a4ec98_find_type_enum(_229a4ca76_SymbolTable* _self_, jule::Str _10937_ident) {
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_22d244db3:;
		if (it != expr.end()) {
			jule::Ptr<_2292e1e75_TypeEnum> _11021_e = *it;
			{
				if ((_11021_e.get()._field_ident == _10937_ident)) {
					return _11021_e;
				};
			}
			_iter_next_22d244db3:;
			++it;
			goto _iter_begin_22d244db3;
		}
		_iter_end_22d244db3:;
	};
	return nullptr;
}



inline jule::Ptr<_229a0a4a1_Var> _229a5031a___find_var(_229a4ca76_SymbolTable* _self_, jule::Str _12029_ident, jule::Bool _12041_cpp_linked, jule::Bool _12059_reverse) {
	if (_12059_reverse) {
		jule::I64 _12221_i = ((*_self_)._field_vars.len() - 1LL);;
		for (; (_12221_i >= 0LL); (_12221_i)--) {
			{
				jule::Ptr<_229a0a4a1_Var> _12425_v = (*_self_)._field_vars[_12221_i];;
				if (((_12425_v.get()._field_ident == _12029_ident) && (_12425_v.get()._field_cpp_linked == _12041_cpp_linked))) {
					return _12425_v;
				};
			}
		_iter_next_22d247910:;
		}
		_iter_end_22d247910:;;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_22d24736b:;
			if (it != expr.end()) {
				jule::Ptr<_229a0a4a1_Var> _13025_v = *it;
				{
					if (((_13025_v.get()._field_ident == _12029_ident) && (_13025_v.get()._field_cpp_linked == _12041_cpp_linked))) {
						return _13025_v;
					};
				}
				_iter_next_22d24736b:;
				++it;
				goto _iter_begin_22d24736b;
			}
			_iter_end_22d24736b:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_229a7c666_TypeAlias> _229a5076b___find_type_alias(_229a4ca76_SymbolTable* _self_, jule::Str _13936_ident, jule::Bool _13948_cpp_linked, jule::Bool _13966_reverse) {
	if (_13966_reverse) {
		jule::I64 _14121_i = ((*_self_)._field_type_aliases.len() - 1LL);;
		for (; (_14121_i >= 0LL); (_14121_i)--) {
			{
				jule::Ptr<_229a7c666_TypeAlias> _14325_ta = (*_self_)._field_type_aliases[_14121_i];;
				if (((_14325_ta.get()._field_ident == _13936_ident) && (_14325_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
					return _14325_ta;
				};
			}
		_iter_next_22d24abdd:;
		}
		_iter_end_22d24abdd:;;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_22d24a649:;
			if (it != expr.end()) {
				jule::Ptr<_229a7c666_TypeAlias> _14925_ta = *it;
				{
					if (((_14925_ta.get()._field_ident == _13936_ident) && (_14925_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
						return _14925_ta;
					};
				}
				_iter_next_22d24a649:;
				++it;
				goto _iter_begin_22d24a649;
			}
			_iter_end_22d24a649:;
		};
	};
	return nullptr;
}



inline jule::Any _229a50b23_def_by_ident(_229a4ca76_SymbolTable* _self_, jule::Str _16031_ident, jule::Bool _16043_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_22d24c629:;
		if (it != expr.end()) {
			jule::Ptr<_229a0a4a1_Var> _16121_v = *it;
			{
				if (((_16121_v.get()._field_ident == _16031_ident) && (_16121_v.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16121_v);
				};
			}
			_iter_next_22d24c629:;
			++it;
			goto _iter_begin_22d24c629;
		}
		_iter_end_22d24c629:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_22d24de55:;
		if (it != expr.end()) {
			jule::Ptr<_229a7c666_TypeAlias> _16721_ta = *it;
			{
				if (((_16721_ta.get()._field_ident == _16031_ident) && (_16721_ta.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16721_ta);
				};
			}
			_iter_next_22d24de55:;
			++it;
			goto _iter_begin_22d24de55;
		}
		_iter_end_22d24de55:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_22d24ec47:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> _17321_s = *it;
			{
				if (((_17321_s.get()._field_ident == _16031_ident) && (_17321_s.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17321_s);
				};
			}
			_iter_next_22d24ec47:;
			++it;
			goto _iter_begin_22d24ec47;
		}
		_iter_end_22d24ec47:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_22d250ac2:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _17921_f = *it;
			{
				if (((_17921_f.get()._field_ident == _16031_ident) && (_17921_f.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17921_f);
				};
			}
			_iter_next_22d250ac2:;
			++it;
			goto _iter_begin_22d250ac2;
		}
		_iter_end_22d250ac2:;
	};
	if (_16043_cpp_linked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_22d251e69:;
		if (it != expr.end()) {
			jule::Ptr<_22923d1bd_Trait> _18921_t = *it;
			{
				if ((_18921_t.get()._field_ident == _16031_ident)) {
					return jule::Any(_18921_t);
				};
			}
			_iter_next_22d251e69:;
			++it;
			goto _iter_begin_22d251e69;
		}
		_iter_end_22d251e69:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_22d2528a4:;
		if (it != expr.end()) {
			jule::Ptr<_228e0dcc3_Enum> _19521_e = *it;
			{
				if ((_19521_e.get()._field_ident == _16031_ident)) {
					return jule::Any(_19521_e);
				};
			}
			_iter_next_22d2528a4:;
			++it;
			goto _iter_begin_22d2528a4;
		}
		_iter_end_22d2528a4:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_22d253630:;
		if (it != expr.end()) {
			jule::Ptr<_2292e1e75_TypeEnum> _20121_te = *it;
			{
				if ((_20121_te.get()._field_ident == _16031_ident)) {
					return jule::Any(_20121_te);
				};
			}
			_iter_next_22d253630:;
			++it;
			goto _iter_begin_22d253630;
		}
		_iter_end_22d253630:;
	};
	return nullptr;
}



inline jule::Bool _229a51074_is_duplicated_ident(_229a4ca76_SymbolTable* _self_, jule::Uintptr _21334_itself, jule::Str _21351_ident, jule::Bool _21363_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_22d253c7e:;
		if (it != expr.end()) {
			jule::Ptr<_229a0a4a1_Var> &_21416_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21416_v) != _21334_itself) && (_21416_v.get()._field_ident == _21351_ident)) && (_21416_v.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_22d253c7e:;
			++it;
			goto _iter_begin_22d253c7e;
		}
		_iter_end_22d253c7e:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_22d25590c:;
		if (it != expr.end()) {
			jule::Ptr<_229a7c666_TypeAlias> &_22016_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22016_ta) != _21334_itself) && (_22016_ta.get()._field_ident == _21351_ident)) && (_22016_ta.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_22d25590c:;
			++it;
			goto _iter_begin_22d25590c;
		}
		_iter_end_22d25590c:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_22d2555aa:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> &_22616_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22616_s) != _21334_itself) && (_22616_s.get()._field_ident == _21351_ident)) && (_22616_s.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_22d2555aa:;
			++it;
			goto _iter_begin_22d2555aa;
		}
		_iter_end_22d2555aa:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_22d256721:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> &_23216_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23216_f) != _21334_itself) && (_23216_f.get()._field_ident == _21351_ident)) && (_23216_f.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_22d256721:;
			++it;
			goto _iter_begin_22d256721;
		}
		_iter_end_22d256721:;
	};
	if (_21363_cpp_linked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_22d259328:;
		if (it != expr.end()) {
			jule::Ptr<_22923d1bd_Trait> &_24216_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24216_t) != _21334_itself) && (_24216_t.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_22d259328:;
			++it;
			goto _iter_begin_22d259328;
		}
		_iter_end_22d259328:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_22d259eb6:;
		if (it != expr.end()) {
			jule::Ptr<_228e0dcc3_Enum> &_24816_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24816_e) != _21334_itself) && (_24816_e.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_22d259eb6:;
			++it;
			goto _iter_begin_22d259eb6;
		}
		_iter_end_22d259eb6:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_22d25ae95:;
		if (it != expr.end()) {
			jule::Ptr<_2292e1e75_TypeEnum> &_25416_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25416_te) != _21334_itself) && (_25416_te.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_22d25ae95:;
			++it;
			goto _iter_begin_22d25ae95;
		}
		_iter_end_22d25ae95:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _229a4ca76_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "type_enums:" << _Src._field_type_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _229a52bbe_is_nil(_229a527d4_Data* _self_) {
	return _229a7e27d_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _229a52e33_is_void(_229a527d4_Data* _self_) {
	return _229a7e4e2_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _229a53197_is_const(_229a527d4_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _229a534a5_good_operand(_229a527d4_Data* _self_, jule::Ptr<_229a527d4_Data>& _9636_other) {
	if ((_229a80e1c_tenm(_9636_other.get()._field_kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_229a8046b_prim(_9636_other.get()._field_kind.ptr()) == nullptr) || (!(_229a862c9_is_any(_229a8046b_prim(_9636_other.get()._field_kind.ptr()).ptr())))) && (_229a81b32_trt(_9636_other.get()._field_kind.ptr()) == nullptr)) && (!(_229a7e27d_is_nil((*_self_)._field_kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _229a527d4_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _229a5385c_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _229a5485d_push_err(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _12727_token, jule::Str _12742_fmt, jule::Slice<jule::Any> _12755_args) {
	_2299e1454_push_err((*_self_)._field_s.ptr(), _12727_token,_12742_fmt,jule::Any(_12755_args));
}



inline void _229a54b7c_push_suggestion(_229a54352_Eval* _self_, jule::Str _13234_fmt, jule::Slice<jule::Any> _13247_args) {
	_2299e1773_push_suggestion((*_self_)._field_s.ptr(), _13234_fmt,jule::Any(_13247_args));
}



inline void _229a54d58_allow_builtin(_229a54352_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _229a55034_disallow_builtin(_229a54352_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _229a55298_is_unsafe(_229a54352_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _229a5550c_is_global(_229a54352_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_2299dd792_Sema>>()) {
			_case_begin_22d28b129:;
			{
				return true;
			}
		}
		else {
			_case_begin_22d28b019:;
			{
				return false;
			}
		}
		_match_end_22d28ab2e:;
	};
}



inline jule::Bool _229a557d7_apply_numeric_prefix(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data>& _15944_d) {
	if (((((_15944_d == nullptr) || (!(_229a53197_is_const(_15944_d.ptr())))) || (_229a8046b_prim(_15944_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_229a82d31_Prim> _16613_prim = _229a8046b_prim((*_self_)._field_prefix.ptr());;
	if ((_16613_prim == nullptr)) {
		return false;
	};
	{
		
		if (_2299b6281_is_float(_229a83194_to_str(_16613_prim.ptr()))) {
			_case_begin_22d28d934:;
			{
				_15944_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>((*((*_self_)._field_prefix)));
				_228dd941e_set_f64(_15944_d.get()._field_constant.ptr(), static_cast<jule::F64>(_228dd86a4_as_f64(_15944_d.get()._field_constant.ptr())));
			}
		}
		else if (_2299b58ce_is_sig_int(_229a83194_to_str(_16613_prim.ptr()))) {
			_case_begin_22d28d99a:;
			{
				if ((!(_229a23c17_sig_assignable(_229a83194_to_str(_16613_prim.ptr()),_15944_d)))) {
					return false;
				};
				_15944_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>((*((*_self_)._field_prefix)));
				_228dd8929_set_i64(_15944_d.get()._field_constant.ptr(), static_cast<jule::I64>(_228dd81cb_as_i64(_15944_d.get()._field_constant.ptr())));
			}
		}
		else if (_2299b5bba_is_unsig_int(_229a83194_to_str(_16613_prim.ptr()))) {
			_case_begin_22d28da11:;
			{
				if ((!(_229a3a305_unsig_assignable(_229a83194_to_str(_16613_prim.ptr()),_15944_d)))) {
					return false;
				};
				_15944_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>((*((*_self_)._field_prefix)));
				_228dd8b9e_set_u64(_15944_d.get()._field_constant.ptr(), static_cast<jule::U64>(_228dd8440_as_u64(_15944_d.get()._field_constant.ptr())));
			}
		}
		_match_end_22d28d6e2:;
	};
	return true;
}



inline jule::Ptr<_229a527d4_Data> _229a55a4b_lit_nil(_229a54352_Eval* _self_) {
	jule::Ptr<_228d7b4d2_Const> _19517_constant = static__228dd6dbc_new_nil();;
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=nullptr}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_19517_constant), ._field_decl=false, ._field_constant=_19517_constant});
}



inline jule::Ptr<_229a527d4_Data> _229a55d59_lit_str(_229a54352_Eval* _self_, jule::Ptr<_228d2d6e8_LitExpr>& _20623_l) {
	jule::Str _20717_s = _20623_l.get()._field_value.slice(1LL,(_20623_l.get()._field_value.len() - 1LL));;
	if (_2276b2d70_is_raw_str(_20623_l.get()._field_value)) {
		_20717_s=_229a3a613_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20717_s));
	} else {
		_20717_s=_229a3a8bb_to_str(static_cast<jule::Slice<jule::U8>>(_20717_s));
	};
	jule::Ptr<_228d7b4d2_Const> _21317_constant = static__228dd6927_new_str(_20717_s);;
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("str", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_21317_constant), ._field_decl=false, ._field_constant=_21317_constant});
}



inline jule::Ptr<_229a527d4_Data> _229a56167_lit_bool(_229a54352_Eval* _self_, jule::Ptr<_228d2d6e8_LitExpr>& _22724_l) {
	jule::Ptr<_228d7b4d2_Const> _22817_constant = static__228dd6680_new_bool((_22724_l.get()._field_value == jule::Str("true", 4)));;
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_22817_constant), ._field_decl=false, ._field_constant=_22817_constant});
}



inline jule::Ptr<_229a527d4_Data> _229a56475_lit_rune(_229a54352_Eval* _self_, jule::Ptr<_228d2d6e8_LitExpr>& _24124_l) {
	;
	;
	jule::Str _24513_lt = _24124_l.get()._field_value.slice(1LL,(_24124_l.get()._field_value.len() - 1LL));;
	jule::I32 _24613_r = _229a237e9_to_rune(static_cast<jule::Slice<jule::U8>>(_24513_lt));;
	jule::Ptr<_229a527d4_Data> _24717_data = jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, ._field_constant=static__228dd63b6_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24613_r)))});;
	jule::Bool _25513_is_ascii = _229a236b7_is_ascii(_24613_r);;
	if (_25513_is_ascii) {
		_24717_data.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("u8", 2)), 6)});
	} else {
		_24717_data.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("i32", 3)), 6)});
	};
	_24717_data.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de4171_RuneExprModel>(_228de4171_RuneExprModel{._field_code=_24613_r}));
	_24717_data.get()._field_is_rune=true;
	return _24717_data;
}



inline jule::Ptr<_229a527d4_Data> _229a56783_lit_float(_229a54352_Eval* _self_, jule::Ptr<_228d2d6e8_LitExpr>& _27125_l) {
	;
	jule::F64 _27413_f = ({
		auto except = _2296c5e19_parse_float(_27125_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_228d7b4d2_Const> _27517_constant = static__228dd6bbe_new_f64(_27413_f);;
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_27517_constant), ._field_decl=false, ._field_constant=_27517_constant});
}



inline jule::Ptr<_229a527d4_Data> _229a56a91_lit_int(_229a54352_Eval* _self_, jule::Ptr<_228d2d6e8_LitExpr>& _28927_l) {
	;
	jule::Str _29217_lit = _28927_l.get()._field_value;;
	jule::I64 _29317_base = 0LL;;
	{
		
		if (_2273415c0_has_prefix(_29217_lit,jule::Str("0x", 2))) {
			_case_begin_22d2a05b1:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=16LL;
			}
		}
		else if (_2273415c0_has_prefix(_29217_lit,jule::Str("0b", 2))) {
			_case_begin_22d2a0292:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=2LL;
			}
		}
		else if (_2273415c0_has_prefix(_29217_lit,jule::Str("0o", 2))) {
			_case_begin_22d2a0308:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=8LL;
			}
		}
		else if (((_29217_lit[0LL] == '0') && (_29217_lit.len() > 1LL))) {
			_case_begin_22d29ee84:;
			{
				(_29217_lit).mut_slice(1LL);;
				_29317_base=8LL;
			}
		}
		else {
			_case_begin_22d29ee1d:;
			{
				_29317_base=10LL;
			}
		}
		_match_end_22d29edb8:;
	};
	jule::Ptr<_229a527d4_Data> _31317_d = jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Bool _31917_ok = true;;
	jule::I64 _32013_sig = ({
		auto except = _22963be3a_parse_int(_29217_lit,_29317_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31917_ok=false;
			0LL;
		});
	});;
	if (_31917_ok) {
		_31317_d.get()._field_constant=static__228dd63b6_new_i64(_32013_sig);
		_31317_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _33017_unsig = ({
			auto except = _2295b00de_parse_uint(_29217_lit,_29317_base,64LL);
			(except.ok()) ? (except.result) : ({
				_229a5485d_push_err(&(*_self_), _28927_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_229a54b7c_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_31317_d.get()._field_constant=static__228dd64e8_new_u64(_33017_unsig);
		_31317_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("uint", 4)), 6)});
	};
	_31317_d.get()._field_model=static_cast<jule::Any>(_31317_d.get()._field_constant);
	if ((!(_229a557d7_apply_numeric_prefix(&(*_self_), _31317_d)))) {
		_229a780ce_fit_bitsize(_31317_d);
	};
	return _31317_d;
}



inline jule::Ptr<_229a527d4_Data> _229a56d9e_lit_num(_229a54352_Eval* _self_, jule::Ptr<_228d2d6e8_LitExpr>& _35127_l) {
	{
		
		if (_2276b39ca_is_float(_35127_l.get()._field_value)) {
			_case_begin_22d2a8410:;
			{
				return _229a56783_lit_float(&(*_self_), _35127_l);
			}
		}
		else {
			_case_begin_22d2a7b90:;
			{
				return _229a56a91_lit_int(&(*_self_), _35127_l);
			}
		}
		_match_end_22d2a7ad5:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a571ac_eval_lit(_229a54352_Eval* _self_, jule::Ptr<_228d2d6e8_LitExpr> _36027_lit) {
	{
		
		if (_228d2da4a_is_nil(_36027_lit.ptr())) {
			_case_begin_22d2a95dc:;
			{
				return _229a55a4b_lit_nil(&(*_self_));
			}
		}
		else if (_2276b2ac8_is_str(_36027_lit.get()._field_value)) {
			_case_begin_22d2a8ec1:;
			{
				return _229a55d59_lit_str(&(*_self_), _36027_lit);
			}
		}
		else if (_2276b3733_is_bool(_36027_lit.get()._field_value)) {
			_case_begin_22d2a9048:;
			{
				return _229a56167_lit_bool(&(*_self_), _36027_lit);
			}
		}
		else if (_2276b3117_is_rune(_36027_lit.get()._field_value)) {
			_case_begin_22d2a90c0:;
			{
				return _229a56475_lit_rune(&(*_self_), _36027_lit);
			}
		}
		else if (_2276b3c72_is_num(_36027_lit.get()._field_value)) {
			_case_begin_22d2a92e0:;
			{
				return _229a56d9e_lit_num(&(*_self_), _36027_lit);
			}
		}
		else {
			_case_begin_22d2a8971:;
			{
				return nullptr;
			}
		}
		_match_end_22d2a88b6:;
	};
}



inline jule::Any _229a574ba_find_builtins(_229a54352_Eval* _self_, jule::Str _37732_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_2299d5646_ImportInfo>>()) {
			_case_begin_22d2a98c8:;
			{
				jule::Any _38021_def = _229a77dc0_find_builtins_import(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_2299d5646_ImportInfo>());;
				if ((_38021_def != nullptr)) {
					return jule::Any(_38021_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299dd792_Sema>>()) {
			_case_begin_22d2a993e:;
			{
				jule::Any _38521_def = _229a78a5d_find_builtins_sema(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_2299dd792_Sema>());;
				if ((_38521_def != nullptr)) {
					return jule::Any(_38521_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299bd7e9_ScopeChecker>>()) {
			_case_begin_22d2abb94:;
			{
				jule::Any _39021_def = _229a78a5d_find_builtins_sema(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_2299bd7e9_ScopeChecker>().get()._field_s);;
				if ((_39021_def != nullptr)) {
					return jule::Any(_39021_def);
				};
			}
		}
		_match_end_22d2a9741:;
	};
	if ((*_self_)._field_dis_builtin) {
		return nullptr;
	};
	return jule::Any(_229aa7817_find_builtin_def(_37732_ident));
}



inline jule::Any _229a57872_get_def(_229a54352_Eval* _self_, jule::Str _40126_ident, jule::Bool _40138_cpp_linked) {
	if ((!(_40138_cpp_linked))) {
		jule::Ptr<_228e0dcc3_Enum> _40321_enm = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a989a1_find_enum((*_self_)._field_lookup, _40126_ident);;
		if ((_40321_enm != nullptr)) {
			return jule::Any(_40321_enm);
		};
		jule::Ptr<_2292e1e75_TypeEnum> _40821_tenm = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a98cae_find_type_enum((*_self_)._field_lookup, _40126_ident);;
		if ((_40821_tenm != nullptr)) {
			return jule::Any(_40821_tenm);
		};
	};
	jule::Ptr<_229a0a4a1_Var> _41417_v = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a9776e_find_var((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_41417_v != nullptr)) {
		return jule::Any(_41417_v);
	};
	jule::Ptr<_228de6cbc_Fn> _41917_f = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a98385_find_fn((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_41917_f != nullptr)) {
		return jule::Any(_41917_f);
	};
	jule::Ptr<_228d188c0_Struct> _42417_s = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a97ecd_find_struct((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_42417_s != nullptr)) {
		return jule::Any(_42417_s);
	};
	jule::Ptr<_229a7c666_TypeAlias> _42917_ta = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a97b26_find_type_alias((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_42917_ta != nullptr)) {
		return jule::Any(_42917_ta);
	};
	return jule::Any(_229a574ba_find_builtins(&(*_self_), _40126_ident));
}



inline void _22d2c34c4_push_reference(_229a54352_Eval* _self_, jule::Ptr<_228de996d_FnIns>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_2299bd7e9_ScopeChecker>>()) {
			_case_begin_22d2c51da:;
			{
				jule::Ptr<_2299bd7e9_ScopeChecker> _44021_sc = _2299c1b71_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_2299bd7e9_ScopeChecker>());;
				if ((!(_22d2c5d56_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_228dece38_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_22d2c4a14:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_22d2c5d56_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_228dece38_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_22d2c49ae:;
	};
}

inline void _22d2d8044_push_reference(_229a54352_Eval* _self_, jule::Ptr<_229a0a4a1_Var>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_2299bd7e9_ScopeChecker>>()) {
			_case_begin_22d2d99d5:;
			{
				jule::Ptr<_2299bd7e9_ScopeChecker> _44021_sc = _2299c1b71_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_2299bd7e9_ScopeChecker>());;
				if ((!(_22d2da651_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_228dece38_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_22d2d930e:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_22d2da651_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_228dece38_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_22d2d92a9:;
	};
}

inline void _22d373596_push_reference(_229a54352_Eval* _self_, jule::Ptr<_228d44c1a_StructIns>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_2299bd7e9_ScopeChecker>>()) {
			_case_begin_22d375279:;
			{
				jule::Ptr<_2299bd7e9_ScopeChecker> _44021_sc = _2299c1b71_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_2299bd7e9_ScopeChecker>());;
				if ((!(_22d375de5_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_228dece38_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_22d374aa3:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_22d375de5_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_228dece38_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_22d374a4d:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a57e05___eval_enum(_229a54352_Eval* _self_, jule::Ptr<_228e0dcc3_Enum> _45130_enm) {
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_45130_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_229a527d4_Data> _229a582ac_eval_enum(_229a54352_Eval* _self_, jule::Ptr<_228e0dcc3_Enum> _46332_enm, jule::Ptr<_2276b1a1c_Token> _46344_error_token) {
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _46332_enm.get()._field_public,_46332_enm.get()._field_token)))) {
		_229a5485d_push_err(&(*_self_), _46344_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_46332_enm.get()._field_ident)}));
		_229a54b7c_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _229a57e05___eval_enum(&(*_self_), _46332_enm);
}



inline jule::Ptr<_229a527d4_Data> _229a585ba___eval_type_enum(_229a54352_Eval* _self_, jule::Ptr<_2292e1e75_TypeEnum> _47235_enm) {
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_47235_enm, 4)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_229a527d4_Data> _229a58972_eval_type_enum(_229a54352_Eval* _self_, jule::Ptr<_2292e1e75_TypeEnum> _48437_enm, jule::Ptr<_2276b1a1c_Token> _48453_error_token) {
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _48437_enm.get()._field_public,_48437_enm.get()._field_token)))) {
		_229a5485d_push_err(&(*_self_), _48453_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_48437_enm.get()._field_ident)}));
		_229a54b7c_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _229a585ba___eval_type_enum(&(*_self_), _48437_enm);
}



inline jule::Ptr<_229a527d4_Data> _229a58c80___eval_struct(_229a54352_Eval* _self_, jule::Ptr<_228d44c1a_StructIns> _49332_s) {
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_49332_s, 0)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_49332_s), ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_229a527d4_Data> _229a59137_eval_struct(_229a54352_Eval* _self_, jule::Ptr<_228d44c1a_StructIns> _50634_s, jule::Ptr<_2276b1a1c_Token> _50649_error_token) {
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _50634_s.get()._field_decl.get()._field_public,_50634_s.get()._field_decl.get()._field_token)))) {
		_229a5485d_push_err(&(*_self_), _50649_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_50634_s.get()._field_decl.get()._field_ident)}));
		_229a54b7c_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_229a59764_check_deprecated(&(*_self_), _50634_s.get()._field_decl.get()._field_directives,_50649_error_token);
	return _229a58c80___eval_struct(&(*_self_), _50634_s);
}



inline jule::Ptr<_229a527d4_Data> _229a59445_eval_fn_ins(_229a54352_Eval* _self_, jule::Ptr<_228de996d_FnIns> _51630_f) {
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_51630_f, 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_51630_f), ._field_decl=false, ._field_constant=nullptr});
}



inline void _229a59764_check_deprecated(_229a54352_Eval* _self_, jule::Slice<jule::Ptr<_228ce499a_Directive>>& _52940_directives, jule::Ptr<_2276b1a1c_Token> _52971_tok) {
	if (_229a55298_is_unsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_228ce499a_Directive> _53413_d = _229a77a3a_find_directive(_52940_directives,jule::Str("deprecated", 10));;
	if ((_53413_d != nullptr)) {
		if ((_53413_d.get()._field_args.len() == 0LL)) {
			_229a5485d_push_err(&(*_self_), _52971_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_229a5485d_push_err(&(*_self_), _52971_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_53413_d.get()._field_args[0LL].get()._field_kind)}));
		};
		_229a54b7c_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_229a527d4_Data> _229a59b1b_eval_fn(_229a54352_Eval* _self_, jule::Ptr<_228de6cbc_Fn> _54530_f, jule::Ptr<_2276b1a1c_Token> _54538_error_token) {
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _54530_f.get()._field_public,_54530_f.get()._field_token)))) {
		_229a5485d_push_err(&(*_self_), _54538_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_54530_f.get()._field_ident)}));
		_229a54b7c_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_229a59764_check_deprecated(&(*_self_), _54530_f.get()._field_directives,_54538_error_token);
	jule::Ptr<_228de996d_FnIns> _55417_ins = _228de841c_instance(_54530_f);;
	_22d2c34c4_push_reference(&(*_self_), _55417_ins);
	return _229a59445_eval_fn_ins(&(*_self_), _55417_ins);
}



inline void _229a5a006_push_illegal_cycle_error(_229a54352_Eval* _self_, jule::Ptr<_229a0a4a1_Var>& _55944_v1, jule::Ptr<_229a0a4a1_Var>& _55955_v2, jule::Str& _55970_message) {
	;
	jule::Str _56113_refers_to = _240948be2_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_55944_v1.get()._field_ident),jule::Any(_55955_v2.get()._field_ident)}));;
	(_55970_message).buffer.insert(0, (((_227315ab1_repeat(jule::Str(" ", 1),4LL) + _56113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _229a5a3be_check_cross_cycle(_229a54352_Eval* _self_, jule::Ptr<_229a0a4a1_Var>& _56537_v, jule::Str& _56551_message) {
	{
		auto &expr = _56537_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_22d2cb059:;
		if (it != expr.end()) {
			jule::Ptr<_229a0a4a1_Var> &_56616_d = *it;
			{
				if ((_56616_d == (*_self_)._field_owner)) {
					_229a5a006_push_illegal_cycle_error(&(*_self_), _56537_v,_56616_d,_56551_message);
					return false;
				};
				if ((!(_229a5a3be_check_cross_cycle(&(*_self_), _56616_d,_56551_message)))) {
					_229a5a006_push_illegal_cycle_error(&(*_self_), _56537_v,_56616_d,_56551_message);
					return false;
				};
			}
			_iter_next_22d2cb059:;
			++it;
			goto _iter_begin_22d2cb059;
		}
		_iter_end_22d2cb059:;
	};
	return true;
}



inline jule::Bool _229a5a776_check_illegal_cycles(_229a54352_Eval* _self_, jule::Ptr<_229a0a4a1_Var>& _58444_v, jule::Ptr<_2276b1a1c_Token> _58453_decl_token) {
	jule::Bool _58475_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_58475_ok = true;
		return _58475_ok;
	};
	if (((*_self_)._field_owner == _58444_v)) {
		_229a5485d_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_58475_ok = false;
		return _58475_ok;
	};
	jule::Str _59617_message = jule::Str();;
	if ((!(_229a5a3be_check_cross_cycle(&(*_self_), _58444_v,_59617_message)))) {
		jule::Str _59921_err_msg = _59617_message;;
		_59617_message=jule::Str();
		_229a5a006_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_58444_v,_59617_message);
		_59921_err_msg=(_59921_err_msg + _59617_message);
		_229a5485d_push_err(&(*_self_), _58453_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_59921_err_msg)}));
		_58475_ok = false;
		return _58475_ok;
	};
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_58444_v);;
	_58475_ok = true;
	return _58475_ok;
}



inline jule::Ptr<_229a527d4_Data> _229a5ab2d_eval_var(_229a54352_Eval* _self_, jule::Ptr<_229a0a4a1_Var> _61131_v, jule::Ptr<_2276b1a1c_Token> _61140_error_token) {
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _61131_v.get()._field_public,_61131_v.get()._field_token)))) {
		_229a5485d_push_err(&(*_self_), _61140_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_61131_v.get()._field_ident)}));
		_229a54b7c_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_229a59764_check_deprecated(&(*_self_), _61131_v.get()._field_directives,_61140_error_token);
	_61131_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_2299dd792_Sema>>()) {
			_case_begin_22d2d3c32:;
			{
				jule::Bool _62517_ok = _229a5a776_check_illegal_cycles(&(*_self_), _61131_v,_61140_error_token);;
				if ((!(_62517_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299bd7e9_ScopeChecker>>()) {
			_case_begin_22d2d3cdc:;
			{
				if (((!(_61131_v.get()._field_reference)) || _229a55298_is_unsafe(&(*_self_)))) {
					goto _match_end_22d2d3bcc;
				};
				jule::Ptr<_2299bd7e9_ScopeChecker> _63321_s = (*_self_)._field_lookup.operator jule::Ptr<_2299bd7e9_ScopeChecker>();;
				while (((_63321_s.get()._field_owner == nullptr) && (_63321_s.get()._field_parent != nullptr))) {
					{
						_63321_s=_63321_s.get()._field_parent;
					}
				_iter_next_22d2d5d55:;
				}
				_iter_end_22d2d5d55:;;
				if ((((_63321_s.get()._field_owner != nullptr) && _63321_s.get()._field_owner.get()._field_anon) && (_61131_v.get()._field_scope != _63321_s.get()._field_owner.get()._field_scope))) {
					_229a5485d_push_err(&(*_self_), _61140_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_61131_v.get()._field_ident)}));
				};
			}
		}
		_match_end_22d2d3bcc:;
	};
	if ((_61131_v.get()._field_scope == nullptr)) {
		_22d2d8044_push_reference(&(*_self_), _61131_v);
	};
	if (((!(_61131_v.get()._field_cpp_linked)) && ((_61131_v.get()._field_value == nullptr) || (_61131_v.get()._field_value.get()._field_data == nullptr)))) {
		if (_61131_v.get()._field_constant) {
			_229a03015_check_type_var((*_self_)._field_s, _61131_v,jule::Trait<_229a98e02_Lookup>((*_self_)._field_s, 3));
			if ((_61131_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_61131_v.get()._field_kind == nullptr) || (_61131_v.get()._field_kind.get()._field_kind == nullptr))) {
		if ((_61131_v.get()._field_scope != nullptr)) {
			return nullptr;
		};
		_229a03015_check_type_var((*_self_)._field_s, _61131_v,(*_self_)._field_lookup);
		if (((_61131_v.get()._field_kind == nullptr) || (_61131_v.get()._field_kind.get()._field_kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_229a527d4_Data> _67617_d = jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=_61131_v.get()._field_kind.get()._field_kind, ._field_mutable=_61131_v.get()._field_mutable, ._field_reference=_61131_v.get()._field_reference, ._field_lvalue=(!(_61131_v.get()._field_constant)), ._field_model=static_cast<jule::Any>(_61131_v), });;
	if ((((!(_61131_v.get()._field_cpp_linked)) && _229a0a858_is_initialized(_61131_v.ptr())) && (_61131_v.get()._field_value.get()._field_data != nullptr))) {
		_67617_d.get()._field_is_rune=_61131_v.get()._field_value.get()._field_data.get()._field_is_rune;
	};
	if ((_61131_v.get()._field_constant && (_61131_v.get()._field_value.get()._field_data.get()._field_constant != nullptr))) {
		_67617_d.get()._field_constant=jule::new_ptr<_228d7b4d2_Const>((*(_61131_v.get()._field_value.get()._field_data.get()._field_constant)));
		_67617_d.get()._field_model=static_cast<jule::Any>(_67617_d.get()._field_constant);
	};
	if (_229a53197_is_const(_67617_d.ptr())) {
		_229a557d7_apply_numeric_prefix(&(*_self_), _67617_d);
	};
	return _67617_d;
}



inline jule::Ptr<_229a527d4_Data> _229a5aed5_eval_type_alias(_229a54352_Eval* _self_, jule::Ptr<_229a7c666_TypeAlias> _70038_ta, jule::Ptr<_2276b1a1c_Token> _70054_error_token) {
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _70038_ta.get()._field_public,_70038_ta.get()._field_token)))) {
		_229a5485d_push_err(&(*_self_), _70054_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_70038_ta.get()._field_ident)}));
		_229a54b7c_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_70038_ta.get()._field_used=true;
	jule::Trait<_229a7ce2a_Kind> _70917_kind = _70038_ta.get()._field_kind.get()._field_kind.get()._field_kind;;
	jule::Ptr<_229a527d4_Data> _71017_d = nullptr;;
	{
		auto &_match_expr{ _70917_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d44c1a_StructIns>>()) {
			_case_begin_22d2e8d9b:;
			{
				_71017_d=_229a58c80___eval_struct(&(*_self_), _70917_kind.operator jule::Ptr<_228d44c1a_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228e0dcc3_Enum>>()) {
			_case_begin_22d2e93eb:;
			{
				_71017_d=_229a57e05___eval_enum(&(*_self_), _70917_kind.operator jule::Ptr<_228e0dcc3_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2292e1e75_TypeEnum>>()) {
			_case_begin_22d2e8021:;
			{
				_71017_d=_229a585ba___eval_type_enum(&(*_self_), _70917_kind.operator jule::Ptr<_2292e1e75_TypeEnum>());
			}
		}
		else {
			_case_begin_22d2e7e00:;
			{
				_71017_d=jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=_70038_ta.get()._field_kind.get()._field_kind.get()._field_kind}), ._field_decl=true, });
				if (_70038_ta.get()._field_cpp_linked) {
					_71017_d.get()._field_kind.get()._field_cpp_ident=_70038_ta.get()._field_ident;
				} else {
					_71017_d.get()._field_kind.get()._field_cpp_ident=_70038_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				};
				_71017_d.get()._field_model=static_cast<jule::Any>(_71017_d.get()._field_kind);
			}
		}
		_match_end_22d2e7d9a:;
	};
	_71017_d.get()._field_kind.get()._field_generic=_70038_ta.get()._field_generic;
	return _71017_d;
}



inline jule::Ptr<_229a527d4_Data> _229a5b38c_eval_def(_229a54352_Eval* _self_, jule::Any _73631_def, jule::Ptr<_2276b1a1c_Token> _73641_ident) {
	{
		auto &_match_expr{ _73631_def };
		
		if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
			_case_begin_22d2ebd5a:;
			{
				return _229a5ab2d_eval_var(&(*_self_), _73631_def.operator jule::Ptr<_229a0a4a1_Var>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228e0dcc3_Enum>>()) {
			_case_begin_22d2ebdc1:;
			{
				return _229a582ac_eval_enum(&(*_self_), _73631_def.operator jule::Ptr<_228e0dcc3_Enum>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2292e1e75_TypeEnum>>()) {
			_case_begin_22d2ebe37:;
			{
				return _229a58972_eval_type_enum(&(*_self_), _73631_def.operator jule::Ptr<_2292e1e75_TypeEnum>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
			_case_begin_22d2ebeae:;
			{
				return _229a59137_eval_struct(&(*_self_), _228d00cc5_instance(_73631_def.operator jule::Ptr<_228d188c0_Struct>()),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de6cbc_Fn>>()) {
			_case_begin_22d2ec025:;
			{
				jule::Ptr<_228de6cbc_Fn> _74721_f = _73631_def.operator jule::Ptr<_228de6cbc_Fn>();;
				if ((_74721_f.get()._field_ident != jule::Str("init", 4))) {
					return _229a59b1b_eval_fn(&(*_self_), _74721_f,_73641_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de996d_FnIns>>()) {
			_case_begin_22d2ec09c:;
			{
				return _229a59445_eval_fn_ins(&(*_self_), _73631_def.operator jule::Ptr<_228de996d_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a7c666_TypeAlias>>()) {
			_case_begin_22d2ec124:;
			{
				return _229a5aed5_eval_type_alias(&(*_self_), _73631_def.operator jule::Ptr<_229a7c666_TypeAlias>(),_73641_ident);
			}
		}
		_match_end_22d2ebc6c:;
	};
	_229a5485d_push_err(&(*_self_), _73641_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_73641_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_229a527d4_Data> _229a5b69a_eval_ident(_229a54352_Eval* _self_, jule::Ptr<_228d2e72c_IdentExpr> _76029_ident) {
	jule::Any _76117_def = _229a57872_get_def(&(*_self_), _76029_ident.get()._field_ident,_76029_ident.get()._field_cpp_linked);;
	return _229a5b38c_eval_def(&(*_self_), jule::Any(_76117_def),_76029_ident.get()._field_token);
}



inline jule::Ptr<_229a527d4_Data> _229a5b9a8_eval_unary(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d2ee36_UnaryExpr> _76534_u) {
	_229a6ee94_UnaryEval _76617_unary = static__229a7044a_new(_self_);;
	return _229a716e3_eval(&_76617_unary, _76534_u);
}



inline jule::Ptr<_229a527d4_Data> _229a5bcb6_eval_variadic(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d302dd_VariadicExpr> _77037_v) {
	if ((_77037_v.get()._field_expr == nullptr)) {
		_229a5485d_push_err(_self_.ptr(), _77037_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_229a7d359_TypeKind> _77617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_77617_prefix;
	});;
	jule::Ptr<_229a527d4_Data> _78017_d = _229a6e405_eval_expr_kind(_self_, _77037_v.get()._field_expr.get()._field_kind);;
	if ((_78017_d == nullptr)) {
		return nullptr;
	};
	if ((!(_229a80207_variadicable(_78017_d.get()._field_kind.ptr())))) {
		_229a5485d_push_err(_self_.ptr(), _77037_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_78017_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_229a87022_Slc> _79013_slc = _229a813e5_slc(_78017_d.get()._field_kind.ptr());;
	_78017_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_cpp_ident=_79013_slc.get()._field_elem.get()._field_cpp_ident, ._field_generic=_79013_slc.get()._field_elem.get()._field_generic, ._field_variadic=true, ._field_kind=_79013_slc.get()._field_elem.get()._field_kind});
	return _78017_d;
}



inline jule::Ptr<_229a527d4_Data> _229a5c0c4_eval_unsafe(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d2de02_UnsafeExpr> _80035_u) {
	jule::Bool _80113_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_229a527d4_Data> _80417_d = _229a6e405_eval_expr_kind(_self_, _80035_u.get()._field_expr.get()._field_kind);;
	_self_.get()._field_unsafety=_80113_unsafety;
	return _80417_d;
}



inline jule::Ptr<_229a527d4_Data> _229a5c3d2_eval_arr(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d3406c_SliceExpr> _81132_s) {
	jule::Ptr<_229a891bc_Arr> _81317_pt = _229a81181_arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_229a891bc_Arr> _81517_arr = jule::new_ptr<_229a891bc_Arr>(_229a891bc_Arr{._field_auto=false, ._field_n=0LL, ._field_elem=_81317_pt.get()._field_elem});;
	jule::Bool _82117_filled = false;;
	if ((_81132_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _81132_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_228d302dd_VariadicExpr>>()) {
				_case_begin_22d30b6e9:;
				{
					if ((_81132_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_228d302dd_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_22d30b694;
					};
					if (_81317_pt.get()._field_auto) {
						_229a5485d_push_err(_self_.ptr(), _81132_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_82117_filled=true;
					_81132_s.get()._field_exprs=_81132_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_22d30b694:;
		};
	};
	_81517_arr.get()._field_n=static_cast<jule::I64>(_81132_s.get()._field_exprs.len());
	if ((!(_81317_pt.get()._field_auto))) {
		if ((_81517_arr.get()._field_n > _81317_pt.get()._field_n)) {
			_229a5485d_push_err(_self_.ptr(), _81132_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_81517_arr.get()._field_n < _81317_pt.get()._field_n)) {
			_81517_arr.get()._field_n=_81317_pt.get()._field_n;
		};
	};
	jule::Ptr<_228de1d2d_ArrayExprModel> _85017_model = jule::new_ptr<_228de1d2d_ArrayExprModel>(_228de1d2d_ArrayExprModel{._field_kind=_81517_arr, });;
	if (_82117_filled) {
		_85017_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_85017_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,_81132_s.get()._field_exprs.len());
	};
	jule::Ptr<_229a7d359_TypeKind> _85917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_81517_arr.get()._field_elem;
	{
		auto &expr = _81132_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_22d3114ac:;
		if (it != expr.end()) {
			jule::Ptr<_228d2c6b4_Expr> _86121_elem = *it;
			{
				jule::Ptr<_229a527d4_Data> _86221_d = _229a6e405_eval_expr_kind(_self_, _86121_elem.get()._field_kind);;
				if ((_86221_d == nullptr)) {
					goto _iter_next_22d3114ac;
				};
				_2299e705e_check_assign_type(_self_.get()._field_s, false,_81517_arr.get()._field_elem,_86221_d,_81132_s.get()._field_token);
				_85017_model.get()._field_elems = jule::alloc_for_append(_85017_model.get()._field_elems,1);_85017_model.get()._field_elems.__push(_86221_d.get()._field_model);;
			}
			_iter_next_22d3114ac:;
			++it;
			goto _iter_begin_22d3114ac;
		}
		_iter_end_22d3114ac:;
	};
	_self_.get()._field_prefix=_85917_prefix;
	if (_82117_filled) {
		_85017_model.get()._field_elems = jule::alloc_for_append(_85017_model.get()._field_elems,1);_85017_model.get()._field_elems.__push(nullptr);;
	};
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_81517_arr, 11)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_85017_model), });
}



inline jule::Ptr<_229a527d4_Data> _229a5c833_eval_exp_slc(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d3406c_SliceExpr> _88636_s, jule::Ptr<_229a7d359_TypeKind> _88655_t, jule::Any _88673_first) {
	jule::Ptr<_229a87022_Slc> _88717_slc = jule::new_ptr<_229a87022_Slc>(_229a87022_Slc{._field_elem=_88655_t});;
	jule::Ptr<_228de08a9_SliceExprModel> _89117_model = jule::new_ptr<_228de08a9_SliceExprModel>(_228de08a9_SliceExprModel{._field_elem_kind=_88655_t, ._field_elems=jule::Slice<jule::Any>::alloc(0LL,_88636_s.get()._field_exprs.len())});;
	if ((_88673_first != nullptr)) {
		_89117_model.get()._field_elems = jule::alloc_for_append(_89117_model.get()._field_elems,1);_89117_model.get()._field_elems.__push(_88673_first);;
		_88636_s.get()._field_exprs=_88636_s.get()._field_exprs.slice(1LL);
	};
	jule::Ptr<_229a7d359_TypeKind> _90017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_88717_slc.get()._field_elem;
	{
		auto &expr = _88636_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_22d316c54:;
		if (it != expr.end()) {
			jule::Ptr<_228d2c6b4_Expr> _90221_elem = *it;
			{
				jule::Ptr<_229a527d4_Data> _90321_d = _229a6e405_eval_expr_kind(_self_, _90221_elem.get()._field_kind);;
				if ((_90321_d == nullptr)) {
					goto _iter_next_22d316c54;
				};
				_2299e705e_check_assign_type(_self_.get()._field_s, false,_88717_slc.get()._field_elem,_90321_d,_88636_s.get()._field_token);
				_89117_model.get()._field_elems = jule::alloc_for_append(_89117_model.get()._field_elems,1);_89117_model.get()._field_elems.__push(_90321_d.get()._field_model);;
			}
			_iter_next_22d316c54:;
			++it;
			goto _iter_begin_22d316c54;
		}
		_iter_end_22d316c54:;
	};
	_self_.get()._field_prefix=_90017_prefix;
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_88717_slc, 8)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_89117_model), });
}



inline jule::Ptr<_229a527d4_Data> _229a5cb41_eval_slice_expr(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d3406c_SliceExpr> _92139_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_229a81181_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_22d319cac:;
				{
					return _229a5c3d2_eval_arr(_self_, _92139_s);
				}
			}
			else if ((_229a813e5_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_22d319d34:;
				{
					jule::Ptr<_229a87022_Slc> _92725_pt = _229a813e5_slc(_self_.get()._field_prefix.ptr());;
					return _229a5c833_eval_exp_slc(_self_, _92139_s,_92725_pt.get()._field_elem,nullptr);
				}
			}
			_match_end_22d319b8b:;
		};
	};
	jule::Ptr<_229a7d359_TypeKind> _93217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_92139_s.get()._field_exprs.len() == 0LL)) {
		_229a5485d_push_err(_self_.ptr(), _92139_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_229a527d4_Data> _94017_first_elem = _229a6e405_eval_expr_kind(_self_, _92139_s.get()._field_exprs[0LL].get()._field_kind);;
	if ((_94017_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_229a527d4_Data> _94517_d = _229a5c833_eval_exp_slc(_self_, _92139_s,_94017_first_elem.get()._field_kind,_94017_first_elem.get()._field_model);;
	_self_.get()._field_prefix=_93217_prefix;
	return _94517_d;
}



inline void _229a5ce82_check_integer_indexing_by_data(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data>& _95154_d, jule::Ptr<_2276b1a1c_Token> _95164_token) {
	jule::Str _95213_err_key = _229a79e38_check_data_for_integer_indexing(_95154_d);;
	{
		auto &_match_expr{ _95213_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_22d32009d:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_22d320c4c:;
			{
				_229a5485d_push_err(&(*_self_), _95164_token,_95213_err_key,jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_95154_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_22d320455:;
			{
				_229a5485d_push_err(&(*_self_), _95164_token,_95213_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_22d320378:;
	};
}



inline void _229a5d35b_indexing_ptr(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data>& _96336_d, jule::Ptr<_229a527d4_Data>& _96351_index, jule::Ptr<_228d3490d_IndexingExpr>& _96366_i) {
	_229a5ce82_check_integer_indexing_by_data(&(*_self_), _96351_index,_96366_i.get()._field_token);
	jule::Ptr<_229a89b29_Ptr> _96617_ptr = _229a80944_ptr(_96336_d.get()._field_kind.ptr());;
	{
		
		if (_229a8a5ec_is_unsafe(_96617_ptr.ptr())) {
			_case_begin_22d322db4:;
			{
				_229a5485d_push_err(&(*_self_), _96366_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_229a55298_is_unsafe(&(*_self_))))) {
			_case_begin_22d322e2a:;
			{
				_229a5485d_push_err(&(*_self_), _96366_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_22d322c60:;
	};
	_96336_d.get()._field_kind=_96617_ptr.get()._field_elem;
}



inline void _229a5d724_indexing_arr(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data>& _97836_d, jule::Ptr<_229a527d4_Data>& _97851_index, jule::Ptr<_228d3490d_IndexingExpr>& _97866_i) {
	jule::Ptr<_229a891bc_Arr> _97917_arr = _229a81181_arr(_97836_d.get()._field_kind.ptr());;
	_97836_d.get()._field_kind=_97917_arr.get()._field_elem;
	_229a5ce82_check_integer_indexing_by_data(&(*_self_), _97851_index,_97866_i.get()._field_token);
	if ((_229a53197_is_const(_97851_index.ptr()) && (_228dd86a4_as_f64(_97851_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(_97917_arr.get()._field_n)))) {
		_229a5485d_push_err(&(*_self_), _97866_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _229a5dadc_indexing_slc(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data>& _98736_d, jule::Ptr<_229a527d4_Data>& _98751_index, jule::Ptr<_228d3490d_IndexingExpr>& _98766_i) {
	jule::Ptr<_229a87022_Slc> _98817_slc = _229a813e5_slc(_98736_d.get()._field_kind.ptr());;
	_98736_d.get()._field_kind=_98817_slc.get()._field_elem;
	_229a5ce82_check_integer_indexing_by_data(&(*_self_), _98751_index,_98766_i.get()._field_token);
	if ((!(_229a53197_is_const(_98751_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _98736_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228de08a9_SliceExprModel>>()) {
			_case_begin_22d328606:;
			{
				jule::Ptr<_228de08a9_SliceExprModel> _99821_m = _98736_d.get()._field_model.operator jule::Ptr<_228de08a9_SliceExprModel>();;
				jule::F64 _99917_indx = _228dd86a4_as_f64(_98751_index.get()._field_constant.ptr());;
				if ((_99917_indx >= static_cast<jule::F64>(_99821_m.get()._field_elems.len()))) {
					_229a5485d_push_err(&(*_self_), _98766_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_98736_d.get()._field_model=_99821_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_99917_indx))];
					_98736_d.get()._field_decl=true;
				};
			}
		}
		_match_end_22d328859:;
	};
}



inline void _229a5dea5_indexing_map(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data>& _100936_d, jule::Ptr<_229a527d4_Data>& _100951_index, jule::Ptr<_228d3490d_IndexingExpr>& _100970_i) {
	if ((_100951_index == nullptr)) {
		return;;
	};
	jule::Ptr<_229a885c8_Map> _101417_m = _229a81d96_map(_100936_d.get()._field_kind.ptr());;
	_229a3d292_AssignTypeChecker _101517_atc = _229a3d292_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_101417_m.get()._field_key, ._field_d=_100951_index, ._field_error_token=_100970_i.get()._field_token};;
	_229a3e419_check(&_101517_atc);
	_100936_d.get()._field_kind=_101417_m.get()._field_val;
}



inline void _229a5e36d_indexing_str(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data>& _102636_d, jule::Ptr<_229a527d4_Data>& _102651_index, jule::Ptr<_228d3490d_IndexingExpr>& _102666_i) {
	;
	_102636_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("u8", 2)), 6)});
	if ((_102651_index == nullptr)) {
		return;;
	};
	_229a5ce82_check_integer_indexing_by_data(&(*_self_), _102651_index,_102666_i.get()._field_token);
	if ((!(_229a53197_is_const(_102651_index.ptr())))) {
		_102636_d.get()._field_constant=nullptr;
		return;;
	};
	if (_229a53197_is_const(_102636_d.ptr())) {
		jule::Ptr<_2276b1a1c_Token> _104217_error_token = _102666_i.get()._field_token;;
		jule::I64 _104317_j = _228dd81cb_as_i64(_102651_index.get()._field_constant.ptr());;
		jule::Str _104417_s = _228dd7c03_read_str(_102636_d.get()._field_constant.ptr());;
		if ((static_cast<jule::I64>(_104317_j) >= _104417_s.len())) {
			_229a5485d_push_err(&(*_self_), _104217_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_228dd8b9e_set_u64(_102636_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_104417_s[_104317_j])));
		};
	};
}



inline void _229a5e736_to_indexing(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data>& _105335_d, jule::Ptr<_229a527d4_Data>& _105350_index, jule::Ptr<_228d3490d_IndexingExpr>& _105369_i) {
	{
		
		if ((_229a80944_ptr(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d333743:;
			{
				_229a5d35b_indexing_ptr(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_229a81181_arr(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d3337ba:;
			{
				_229a5d724_indexing_arr(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_229a813e5_slc(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d333842:;
			{
				_229a5dadc_indexing_slc(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_229a81d96_map(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d3338b9:;
			{
				_229a5dea5_indexing_map(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_229a8046b_prim(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d333941:;
			{
				jule::Ptr<_229a82d31_Prim> _106817_prim = _229a8046b_prim(_105335_d.get()._field_kind.ptr());;
				{
					
					if (_229a86065_is_str(_106817_prim.ptr())) {
						_case_begin_22d337a22:;
						{
							_229a5e36d_indexing_str(&(*_self_), _105335_d,_105350_index,_105369_i);
							return;;
						}
					}
					_match_end_22d337978:;
				};
			}
		}
		_match_end_22d3335de:;
	};
	_229a5485d_push_err(&(*_self_), _105369_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_105335_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _229a5ebba_push_generics_from_expr_sub_ident(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d30ec0_SubIdentExpr>& _107858_sexpr, jule::Slice<jule::Ptr<_228d28193_TypeDecl>>& _107914_generics, jule::Ptr<_228d2c6b4_Expr>& _107942_expr) {
	jule::Ptr<_228d28da8_SubIdentTypeDecl> _108017_t = jule::new_ptr<_228d28da8_SubIdentTypeDecl>();;
	if ((!(_229a7ac5d_push_sub_ident_from_expr(static_cast<jule::Any>(_107858_sexpr),_108017_t)))) {
		_229a5485d_push_err(_self_.ptr(), _107942_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_107914_generics = jule::alloc_for_append(_107914_generics,1);_107914_generics.__push(jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_kind=static_cast<jule::Any>(_108017_t)}));;
	return true;
}



inline jule::Bool _229a600c7_push_generics_from_data(jule::Ptr<_229a54352_Eval> _self_, jule::Slice<jule::Ptr<_228d28193_TypeDecl>>& _108948_generics, jule::Ptr<_228d2c6b4_Expr>& _108976_expr) {
	{
		auto &_match_expr{ _108976_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d2ee36_UnaryExpr>>()) {
			_case_begin_22d33b042:;
			{
				jule::Ptr<_229a527d4_Data> _109421_d = _229a5b9a8_eval_unary(_self_, _108976_expr.get()._field_kind.operator jule::Ptr<_228d2ee36_UnaryExpr>());;
				if ((!(_109421_d.get()._field_decl))) {
					_229a5485d_push_err(_self_.ptr(), _108976_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_108948_generics = jule::alloc_for_append(_108948_generics,1);_108948_generics.__push(jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_108976_expr.get()._field_token, ._field_kind=(*(((jule::Any*)((&(_109421_d.get()._field_kind.get()._field_kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d28193_TypeDecl>>()) {
			_case_begin_22d33b0a8:;
			{
				_108948_generics = jule::alloc_for_append(_108948_generics,1);_108948_generics.__push(_108976_expr.get()._field_kind.operator jule::Ptr<_228d28193_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d30ec0_SubIdentExpr>>()) {
			_case_begin_22d33b11e:;
			{
				jule::Ptr<_228d30ec0_SubIdentExpr> _110621_sexpr = _108976_expr.get()._field_kind.operator jule::Ptr<_228d30ec0_SubIdentExpr>();;
				return _229a5ebba_push_generics_from_expr_sub_ident(_self_, _110621_sexpr,_108948_generics,_108976_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2e72c_IdentExpr>>()) {
			_case_begin_22d33b927:;
			{
				jule::Ptr<_228d2e72c_IdentExpr> _110921_ident = _108976_expr.get()._field_kind.operator jule::Ptr<_228d2e72c_IdentExpr>();;
				_108948_generics = jule::alloc_for_append(_108948_generics,1);_108948_generics.__push(jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d28759_IdentTypeDecl>(_228d28759_IdentTypeDecl{._field_token=_110921_ident.get()._field_token, ._field_ident=_110921_ident.get()._field_ident, ._field_cpp_linked=_110921_ident.get()._field_cpp_linked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2d341_TupleExpr>>()) {
			_case_begin_22d33b98d:;
			{
				{
					auto &expr = _108976_expr.get()._field_kind.operator jule::Ptr<_228d2d341_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_22d340d38:;
					if (it != expr.end()) {
						jule::Ptr<_228d2c6b4_Expr> _111825_texpr = *it;
						{
							if ((!(_229a600c7_push_generics_from_data(_self_, _108948_generics,_111825_texpr)))) {
								return false;
							};
						}
						_iter_next_22d340d38:;
						++it;
						goto _iter_begin_22d340d38;
					}
					_iter_end_22d340d38:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d30a4c_NsSelectionExpr>>()) {
			_case_begin_22d33ba04:;
			{
				jule::Ptr<_228d30a4c_NsSelectionExpr> _112421_ns = _108976_expr.get()._field_kind.operator jule::Ptr<_228d30a4c_NsSelectionExpr>();;
				jule::Ptr<_228d28759_IdentTypeDecl> _112521_decl = jule::new_ptr<_228d28759_IdentTypeDecl>(_228d28759_IdentTypeDecl{._field_token=_112421_ns.get()._field_ident, ._field_ident=_112421_ns.get()._field_ident.get()._field_kind, });;
				_108948_generics = jule::alloc_for_append(_108948_generics,1);_108948_generics.__push(jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_112521_decl.get()._field_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d29260_NamespaceTypeDecl>(_228d29260_NamespaceTypeDecl{._field_idents=_112421_ns.get()._field_ns, ._field_kind=jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_112521_decl.get()._field_token, ._field_kind=static_cast<jule::Any>(_112521_decl)})}))}));;
			}
		}
		else {
			_case_begin_22d33ae21:;
			{
				_229a5485d_push_err(_self_.ptr(), _108976_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_22d33ac78:;
	};
	return true;
}



inline jule::Ptr<_229a527d4_Data> _229a603d5_eval_ident_decl_from_indexing(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d3490d_IndexingExpr>& _114654_i) {
	jule::Ptr<_228d28193_TypeDecl> _114717_tdecl = jule::new_ptr<_228d28193_TypeDecl>();;
	jule::Ptr<_228d28759_IdentTypeDecl> _114817_decl = nullptr;;
	{
		auto &_match_expr{ _114654_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d2e72c_IdentExpr>>()) {
			_case_begin_22d34548b:;
			{
				jule::Ptr<_228d2e72c_IdentExpr> _115121_expr = _114654_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_228d2e72c_IdentExpr>();;
				_114817_decl=jule::new_ptr<_228d28759_IdentTypeDecl>(_228d28759_IdentTypeDecl{._field_token=_115121_expr.get()._field_token, ._field_ident=_115121_expr.get()._field_ident, ._field_cpp_linked=_115121_expr.get()._field_cpp_linked, });
				_114717_tdecl.get()._field_kind=static_cast<jule::Any>(_114817_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d30a4c_NsSelectionExpr>>()) {
			_case_begin_22d345502:;
			{
				jule::Ptr<_228d30a4c_NsSelectionExpr> _115921_expr = _114654_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_228d30a4c_NsSelectionExpr>();;
				_114817_decl=jule::new_ptr<_228d28759_IdentTypeDecl>(_228d28759_IdentTypeDecl{._field_token=_115921_expr.get()._field_ident, ._field_ident=_115921_expr.get()._field_ident.get()._field_kind, });
				_114717_tdecl.get()._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d29260_NamespaceTypeDecl>(_228d29260_NamespaceTypeDecl{._field_idents=_115921_expr.get()._field_ns, ._field_kind=jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_114817_decl.get()._field_token, ._field_kind=static_cast<jule::Any>(_114817_decl)})}));
			}
		}
		else {
			_case_begin_22d345425:;
			{
				_229a5485d_push_err(_self_.ptr(), _114654_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22d3453c0:;
	};
	if ((!(_229a600c7_push_generics_from_data(_self_, _114817_decl.get()._field_generics,_114654_i.get()._field_index)))) {
		return nullptr;
	};
	return _229a65e35_eval_type(_self_.ptr(), _114717_tdecl);
}



inline void _229a60737_eval_fn_generic_from_indexing(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_229a527d4_Data>& _118154_d, jule::Ptr<_228d3490d_IndexingExpr>& _118169_i) {
	jule::Slice<jule::Ptr<_228d28193_TypeDecl>> _118217_generics = jule::Slice<jule::Ptr<_228d28193_TypeDecl>>::alloc(0LL,8LL);;
	if ((!(_229a600c7_push_generics_from_data(_self_, _118217_generics,_118169_i.get()._field_index)))) {
		_118154_d=nullptr;
		return;;
	};
	jule::Ptr<_228de996d_FnIns> _118817_f = _229a81659_fnc(_118154_d.get()._field_kind.ptr());;
	jule::I64 _118917_generics_len = 0LL;;
	if ((_118817_f.get()._field_decl != nullptr)) {
		_118917_generics_len=static_cast<jule::I64>(_118817_f.get()._field_decl.get()._field_generics.len());
	};
	if ((!(_2299e27eb_check_generic_quantity(_self_.get()._field_s.ptr(), _118917_generics_len,static_cast<jule::I64>(_118217_generics.len()),_118169_i.get()._field_expr.get()._field_token)))) {
		_118154_d=nullptr;
		return;;
	};
	_118817_f.get()._field_generics=jule::Slice<jule::Ptr<_229a7bb2c_InsGeneric>>::alloc(0LL,_118817_f.get()._field_decl.get()._field_generics.len());
	{
		auto &expr = _118217_generics;
		auto it = expr.begin();
		_iter_begin_22d34d0dc:;
		if (it != expr.end()) {
			jule::Ptr<_228d28193_TypeDecl> _120021_g = *it;
			{
				jule::Ptr<_229a527d4_Data> _120121_k = _229a65e35_eval_type(_self_.ptr(), _120021_g);;
				if ((_120121_k == nullptr)) {
					_118154_d=nullptr;
					return;;
				};
				_118817_f.get()._field_generics = jule::alloc_for_append(_118817_f.get()._field_generics,1);_118817_f.get()._field_generics.__push(jule::new_ptr<_229a7bb2c_InsGeneric>(_229a7bb2c_InsGeneric{._field_kind=_120121_k.get()._field_kind, }));;
			}
			_iter_next_22d34d0dc:;
			++it;
			goto _iter_begin_22d34d0dc;
		}
		_iter_end_22d34d0dc:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a60a56_eval_indexing(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d3490d_IndexingExpr> _121037_i) {
	jule::Ptr<_229a7d359_TypeKind> _121117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_121117_prefix;
	});;
	jule::Ptr<_229a527d4_Data> _121517_d = _229a6e405_eval_expr_kind(_self_, _121037_i.get()._field_expr.get()._field_kind);;
	if ((_121517_d == nullptr)) {
		return nullptr;
	};
	if (_121517_d.get()._field_decl) {
		return _229a603d5_eval_ident_decl_from_indexing(_self_, _121037_i);
	};
	if ((_229a81659_fnc(_121517_d.get()._field_kind.ptr()) != nullptr)) {
		_229a60737_eval_fn_generic_from_indexing(_self_, _121517_d,_121037_i);
		return _121517_d;
	};
	_229a527d4_Data _123017_old_d = (*(_121517_d));;
	jule::Ptr<_229a527d4_Data> _123217_index = _229a6e405_eval_expr_kind(_self_, _121037_i.get()._field_index.get()._field_kind);;
	if ((_123217_index == nullptr)) {
		return nullptr;
	};
	_121517_d.get()._field_decl=false;
	_229a5e736_to_indexing(_self_.ptr(), _121517_d,_123217_index,_121037_i);
	if (_229a53197_is_const(_121517_d.ptr())) {
		_121517_d.get()._field_decl=false;
		_121517_d.get()._field_model=static_cast<jule::Any>(_121517_d.get()._field_constant);
	} else if (_121517_d.get()._field_decl) {
		_121517_d.get()._field_decl=false;
	} else {
		_121517_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de0a96_IndexingExprModel>(_228de0a96_IndexingExprModel{._field_token=_121037_i.get()._field_token, ._field_expr=jule::new_ptr<_229a527d4_Data>(_123017_old_d), ._field_index=_123217_index}));
	};
	return _121517_d;
}



inline std::tuple<jule::Ptr<_229a527d4_Data>,jule::Ptr<_229a527d4_Data>> _229a60d64_eval_slicing_exprs(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d35018_SlicingExpr>& _126343_s) {
	jule::Ptr<_229a7d359_TypeKind> _126417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_126417_prefix;
	});;
	jule::Ptr<_229a527d4_Data> _126817_l = nullptr;;
	jule::Ptr<_229a527d4_Data> _126917_r = nullptr;;
	if ((_126343_s.get()._field_start != nullptr)) {
		_126817_l=_229a6e405_eval_expr_kind(_self_, _126343_s.get()._field_start.get()._field_kind);
		if ((_126817_l != nullptr)) {
			_229a5ce82_check_integer_indexing_by_data(_self_.ptr(), _126817_l,_126343_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_126817_l=jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)}), ._field_constant=static__228dd63b6_new_i64(0LL)});
		_126817_l.get()._field_model=static_cast<jule::Any>(_126817_l.get()._field_constant);
	};
	if ((_126343_s.get()._field_to != nullptr)) {
		_126917_r=_229a6e405_eval_expr_kind(_self_, _126343_s.get()._field_to.get()._field_kind);
		if ((_126917_r != nullptr)) {
			_229a5ce82_check_integer_indexing_by_data(_self_.ptr(), _126917_r,_126343_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_126817_l,_126917_r);
}



inline void _229a610d9_slicing_arr(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data>& _129831_d) {
	jule::Ptr<_229a7d359_TypeKind> _129917_elem_type = _229a81181_arr(_129831_d.get()._field_kind.ptr()).get()._field_elem;;
	_129831_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_229a87022_Slc>(_229a87022_Slc{._field_elem=_129917_elem_type}), 8)});
	_129831_d.get()._field_lvalue=false;
	_129831_d.get()._field_mutable=(_129831_d.get()._field_mutable || (!(_229a7e756_mutable(_129917_elem_type.ptr()))));
}



inline void _229a614a2_slicing_str(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data>& _131331_d, jule::Ptr<_229a527d4_Data>& _131342_l, jule::Ptr<_229a527d4_Data>& _131353_r) {
	_131331_d.get()._field_lvalue=false;
	_131331_d.get()._field_mutable=true;
	if ((!(_229a53197_is_const(_131331_d.ptr())))) {
		return;;
	};
	if (((_131342_l == nullptr) || (_131353_r == nullptr))) {
		_131331_d.get()._field_constant=nullptr;
		return;;
	};
	if ((_229a53197_is_const(_131342_l.ptr()) && _229a53197_is_const(_131353_r.ptr()))) {
		jule::I64 _132617_left = _228dd81cb_as_i64(_131342_l.get()._field_constant.ptr());;
		if ((_132617_left < 0LL)) {
			return;;
		};
		jule::Str _133117_s = _228dd7c03_read_str(_131331_d.get()._field_constant.ptr());;
		jule::I64 _133221_right = 0LL;;
		if ((_131353_r == nullptr)) {
			_133221_right=static_cast<jule::I64>(static_cast<jule::I64>(_133117_s.len()));
		} else {
			_133221_right=static_cast<jule::I64>(_228dd81cb_as_i64(_131353_r.get()._field_constant.ptr()));
		};
		if ((_132617_left > _133221_right)) {
			return;;
		};
		_228dd9199_set_str(_131331_d.get()._field_constant.ptr(), _133117_s.slice(_132617_left,_133221_right));
		_131331_d.get()._field_decl=true;
	} else {
		_131331_d.get()._field_constant=nullptr;
	};
}



inline void _229a61914_check_slicing(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data>& _134937_d, jule::Ptr<_229a527d4_Data>& _134948_l, jule::Ptr<_229a527d4_Data>& _134959_r, jule::Ptr<_228d35018_SlicingExpr>& _134970_s) {
	{
		
		if ((_229a81181_arr(_134937_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d3633cc:;
			{
				_229a610d9_slicing_arr(&(*_self_), _134937_d);
				return;;
			}
		}
		else if ((_229a813e5_slc(_134937_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d363454:;
			{
				return;;
			}
		}
		else if ((_229a8046b_prim(_134937_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d3634cb:;
			{
				jule::Ptr<_229a82d31_Prim> _135717_prim = _229a8046b_prim(_134937_d.get()._field_kind.ptr());;
				{
					
					if (_229a86065_is_str(_135717_prim.ptr())) {
						_case_begin_22d365995:;
						{
							_229a614a2_slicing_str(&(*_self_), _134937_d,_134948_l,_134959_r);
							return;;
						}
					}
					_match_end_22d3658eb:;
				};
			}
		}
		_match_end_22d36329a:;
	};
	_229a5485d_push_err(&(*_self_), _134970_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_134937_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_229a527d4_Data> _229a61c22_eval_slicing(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d35018_SlicingExpr> _136836_s) {
	jule::Ptr<_229a527d4_Data> _136917_d = _229a6e405_eval_expr_kind(_self_, _136836_s.get()._field_expr.get()._field_kind);;
	if ((_136917_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_229a527d4_Data> _137418_l;;
	jule::Ptr<_229a527d4_Data> _137425_r;;
	std::tie(_137418_l,_137425_r) = _229a60d64_eval_slicing_exprs(_self_, _136836_s);
	if ((_137418_l == nullptr)) {
		return _136917_d;
	};
	_136917_d.get()._field_decl=false;
	_229a61914_check_slicing(_self_.ptr(), _136917_d,_137418_l,_137425_r,_136836_s);
	if (_229a53197_is_const(_136917_d.ptr())) {
		_136917_d.get()._field_decl=false;
		_136917_d.get()._field_model=static_cast<jule::Any>(_136917_d.get()._field_constant);
	} else if (_136917_d.get()._field_decl) {
		_136917_d.get()._field_decl=false;
	} else {
		jule::Ptr<_228de1349_SlicingExprModel> _139221_model = jule::new_ptr<_228de1349_SlicingExprModel>(_228de1349_SlicingExprModel{._field_token=_136836_s.get()._field_token, ._field_expr=_136917_d.get()._field_model, ._field_left=_137418_l.get()._field_model, });;
		if ((_137425_r != nullptr)) {
			_139221_model.get()._field_right=_137425_r.get()._field_model;
		};
		_136917_d.get()._field_model=static_cast<jule::Any>(_139221_model);
	};
	return _136917_d;
}



inline void _229a620da_cast_ptr(_229a54352_Eval* _self_, jule::Ptr<_229a7d359_TypeKind> _140531_t, jule::Ptr<_229a527d4_Data> _140549_d, jule::Ptr<_2276b1a1c_Token> _140559_error_token) {
	jule::Ptr<_229a865b5_Sptr> _140613_sptr = _229a806d0_sptr(_140549_d.get()._field_kind.ptr());;
	if ((_140613_sptr != nullptr)) {
		if ((!(_229a7da63_equals(_229a80944_ptr(_140531_t.ptr()).get()._field_elem, _140613_sptr.get()._field_elem)))) {
			_229a5485d_push_err(&(*_self_), _140559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_140549_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_140531_t.ptr()))}));
		};
		return;;
	};
	if ((!(_229a55298_is_unsafe(&(*_self_))))) {
		_229a5485d_push_err(&(*_self_), _140559_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_229a82d31_Prim> _141913_prim = _229a8046b_prim(_140549_d.get()._field_kind.ptr());;
	if (((_229a80944_ptr(_140549_d.get()._field_kind.ptr()) == nullptr) && ((_141913_prim == nullptr) || (!(_2299b5e62_is_int(_229a83194_to_str(_141913_prim.ptr()))))))) {
		_229a5485d_push_err(&(*_self_), _140559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_140549_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_140531_t.ptr()))}));
	};
	_140549_d.get()._field_constant=nullptr;
}



inline void _229a624a3_cast_struct(_229a54352_Eval* _self_, jule::Ptr<_229a7d359_TypeKind> _142734_t, jule::Ptr<_229a527d4_Data> _142752_d, jule::Ptr<_2276b1a1c_Token> _142762_error_token) {
	jule::Ptr<_22923d1bd_Trait> _142817_tr = _229a81b32_trt(_142752_d.get()._field_kind.ptr());;
	if ((_142817_tr == nullptr)) {
		_229a5485d_push_err(&(*_self_), _142762_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_142752_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_142734_t.ptr()))}));
		return;;
	};
	jule::Ptr<_228d44c1a_StructIns> _143417_s = _229a818bd_strct(_142734_t.ptr());;
	_22d373596_push_reference(&(*_self_), _143417_s);
	if ((!(_228d0a51b_is_implements(_143417_s.get()._field_decl.ptr(), _142817_tr)))) {
		_229a5485d_push_err(&(*_self_), _142762_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_142752_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_142734_t.ptr()))}));
	};
}



inline void _229a6286b_cast_ref(_229a54352_Eval* _self_, jule::Ptr<_229a7d359_TypeKind> _144231_t, jule::Ptr<_229a527d4_Data> _144249_d, jule::Ptr<_2276b1a1c_Token> _144259_error_token) {
	jule::Ptr<_229a865b5_Sptr> _144317_sptr = _229a806d0_sptr(_144231_t.ptr());;
	jule::Ptr<_229a89b29_Ptr> _144517_ptr = _229a80944_ptr(_144249_d.get()._field_kind.ptr());;
	if (((_144517_ptr != nullptr) && _229a7da63_equals(_144317_sptr.get()._field_elem, _144517_ptr.get()._field_elem))) {
		if ((!(_229a55298_is_unsafe(&(*_self_))))) {
			_229a5485d_push_err(&(*_self_), _144259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_229a818bd_strct(_144317_sptr.get()._field_elem.ptr()) != nullptr)) {
		_229a624a3_cast_struct(&(*_self_), _144317_sptr.get()._field_elem,_144249_d,_144259_error_token);
		return;;
	};
	_229a5485d_push_err(&(*_self_), _144259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_144249_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_144231_t.ptr()))}));
}



inline void _229a62c34_cast_slc(_229a54352_Eval* _self_, jule::Ptr<_229a7d359_TypeKind> _146331_t, jule::Ptr<_229a527d4_Data> _146349_d, jule::Ptr<_2276b1a1c_Token> _146359_error_token) {
	if ((_229a80ba8_enm(_146349_d.get()._field_kind.ptr()) != nullptr)) {
		if (((_229a8046b_prim(_229a80ba8_enm(_146349_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_229a86065_is_str(_229a8046b_prim(_229a80ba8_enm(_146349_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
			_229a5485d_push_err(&(*_self_), _146359_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_146349_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_146331_t.ptr()))}));
			return;;
		};
	} else if (((_229a8046b_prim(_146349_d.get()._field_kind.ptr()) == nullptr) || (!(_229a86065_is_str(_229a8046b_prim(_146349_d.get()._field_kind.ptr()).ptr()))))) {
		_229a5485d_push_err(&(*_self_), _146359_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_146349_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_146331_t.ptr()))}));
		return;;
	};
	_146331_t=_229a813e5_slc(_146331_t.ptr()).get()._field_elem;
	jule::Ptr<_229a82d31_Prim> _147513_prim = _229a8046b_prim(_146331_t.ptr());;
	if (((_147513_prim == nullptr) || ((!(_229a8463a_is_u8(_147513_prim.ptr()))) && (!(_229a84162_is_i32(_147513_prim.ptr())))))) {
		_229a5485d_push_err(&(*_self_), _146359_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_146349_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_146331_t.ptr()))}));
	};
}



inline void _229a63053_cast_str(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data> _148131_d, jule::Ptr<_2276b1a1c_Token> _148141_error_token) {
	if ((_229a80ba8_enm(_148131_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_228e0dcc3_Enum> _148321_e = _229a80ba8_enm(_148131_d.get()._field_kind.ptr());;
		if (((_229a8046b_prim(_148321_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _229a86065_is_str(_229a8046b_prim(_148321_e.get()._field_kind.get()._field_kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_229a8046b_prim(_148131_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_229a82d31_Prim> _149017_prim = _229a8046b_prim(_148131_d.get()._field_kind.ptr());;
		if (((!(_229a8463a_is_u8(_149017_prim.ptr()))) && (!(_229a84162_is_i32(_149017_prim.ptr()))))) {
			_229a5485d_push_err(&(*_self_), _148141_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_229a7d755_to_str(_148131_d.get()._field_kind.ptr()))}));
		};
		return;;
	};
	if ((_229a813e5_slc(_148131_d.get()._field_kind.ptr()) == nullptr)) {
		_229a5485d_push_err(&(*_self_), _148141_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_229a7d755_to_str(_148131_d.get()._field_kind.ptr()))}));
		return;;
	};
	jule::Ptr<_229a7d359_TypeKind> _150217_t = _229a813e5_slc(_148131_d.get()._field_kind.ptr()).get()._field_elem;;
	jule::Ptr<_229a82d31_Prim> _150313_prim = _229a8046b_prim(_150217_t.ptr());;
	if (((_150313_prim == nullptr) || ((!(_229a8463a_is_u8(_150313_prim.ptr()))) && (!(_229a84162_is_i32(_150313_prim.ptr())))))) {
		_229a5485d_push_err(&(*_self_), _148141_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_229a7d755_to_str(_148131_d.get()._field_kind.ptr()))}));
	};
}



inline void _229a6341b_cast_int(_229a54352_Eval* _self_, jule::Ptr<_229a7d359_TypeKind> _150931_t, jule::Ptr<_229a527d4_Data> _150949_d, jule::Ptr<_2276b1a1c_Token> _150959_error_token) {
	if (_229a53197_is_const(_150949_d.ptr())) {
		jule::Ptr<_229a82d31_Prim> _151117_prim = _229a8046b_prim(_150931_t.ptr());;
		{
			
			if (_2299b58ce_is_sig_int(_151117_prim.get()._field_kind)) {
				_case_begin_22d393121:;
				{
					_228dd8929_set_i64(_150949_d.get()._field_constant.ptr(), static_cast<jule::I64>(_228dd81cb_as_i64(_150949_d.get()._field_constant.ptr())));
				}
			}
			else if (_2299b5bba_is_unsig_int(_151117_prim.get()._field_kind)) {
				_case_begin_22d393198:;
				{
					_228dd8b9e_set_u64(_150949_d.get()._field_constant.ptr(), static_cast<jule::U64>(_228dd8440_as_u64(_150949_d.get()._field_constant.ptr())));
				}
			}
			_match_end_22d393066:;
		};
	};
	if ((_229a80ba8_enm(_150949_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_228e0dcc3_Enum> _152117_e = _229a80ba8_enm(_150949_d.get()._field_kind.ptr());;
		if (_2299b6528_is_num(_229a7d755_to_str(_152117_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	if ((_229a806d0_sptr(_150949_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_229a82d31_Prim> _152817_prim = _229a8046b_prim(_150931_t.ptr());;
		if ((!(_229a85a8c_is_uintptr(_152817_prim.ptr())))) {
			_229a5485d_push_err(&(*_self_), _150959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_150949_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_150931_t.ptr()))}));
		};
		return;;
	};
	if ((_229a80944_ptr(_150949_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_229a82d31_Prim> _153517_prim = _229a8046b_prim(_150931_t.ptr());;
		if (_229a85a8c_is_uintptr(_153517_prim.ptr())) {
		} else if ((!(_229a55298_is_unsafe(&(*_self_))))) {
			_229a5485d_push_err(&(*_self_), _150959_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_229a84162_is_i32(_153517_prim.ptr()))) && (!(_229a843c6_is_i64(_153517_prim.ptr())))) && (!(_229a8489e_is_u16(_153517_prim.ptr())))) && (!(_229a84b13_is_u32(_153517_prim.ptr())))) && (!(_229a84d77_is_u64(_153517_prim.ptr()))))) {
			_229a5485d_push_err(&(*_self_), _150959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_150949_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_150931_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_229a82d31_Prim> _154613_prim = _229a8046b_prim(_150949_d.get()._field_kind.ptr());;
	if (((_154613_prim != nullptr) && _2299b6528_is_num(_229a83194_to_str(_154613_prim.ptr())))) {
		return;;
	};
	_229a5485d_push_err(&(*_self_), _150959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_150949_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_150931_t.ptr()))}));
}



inline void _229a637d4_cast_num(_229a54352_Eval* _self_, jule::Ptr<_229a7d359_TypeKind> _155431_t, jule::Ptr<_229a527d4_Data> _155449_d, jule::Ptr<_2276b1a1c_Token> _155459_error_token) {
	if (_229a53197_is_const(_155449_d.ptr())) {
		jule::Ptr<_229a82d31_Prim> _155617_prim = _229a8046b_prim(_155431_t.ptr());;
		{
			
			if (_2299b6281_is_float(_155617_prim.get()._field_kind)) {
				_case_begin_22d39d58d:;
				{
					_228dd941e_set_f64(_155449_d.get()._field_constant.ptr(), static_cast<jule::F64>(_228dd86a4_as_f64(_155449_d.get()._field_constant.ptr())));
				}
			}
			else if (_2299b58ce_is_sig_int(_155617_prim.get()._field_kind)) {
				_case_begin_22d39d615:;
				{
					_228dd8929_set_i64(_155449_d.get()._field_constant.ptr(), static_cast<jule::I64>(_228dd81cb_as_i64(_155449_d.get()._field_constant.ptr())));
				}
			}
			else if (_2299b5bba_is_unsig_int(_155617_prim.get()._field_kind)) {
				_case_begin_22d39d68c:;
				{
					_228dd8b9e_set_u64(_155449_d.get()._field_constant.ptr(), static_cast<jule::U64>(_228dd8440_as_u64(_155449_d.get()._field_constant.ptr())));
				}
			}
			_match_end_22d39d4c2:;
		};
	};
	if ((_229a80ba8_enm(_155449_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_228e0dcc3_Enum> _156817_e = _229a80ba8_enm(_155449_d.get()._field_kind.ptr());;
		if (_2299b6528_is_num(_229a7d755_to_str(_156817_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_229a82d31_Prim> _157413_prim = _229a8046b_prim(_155449_d.get()._field_kind.ptr());;
	if (((_157413_prim != nullptr) && _2299b6528_is_num(_229a83194_to_str(_157413_prim.ptr())))) {
		return;;
	};
	_229a5485d_push_err(&(*_self_), _155459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_155449_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_155431_t.ptr()))}));
}



inline void _229a63b9c_cast_prim(_229a54352_Eval* _self_, jule::Ptr<_229a7d359_TypeKind> _158232_t, jule::Ptr<_229a527d4_Data> _158250_d, jule::Ptr<_2276b1a1c_Token> _158260_error_token) {
	jule::Ptr<_229a82d31_Prim> _158313_prim = _229a8046b_prim(_158232_t.ptr());;
	{
		
		if (_229a862c9_is_any(_158313_prim.ptr())) {
			_case_begin_22d3a4077:;
		}
		else if (_229a86065_is_str(_158313_prim.ptr())) {
			_case_begin_22d3a45e9:;
			{
				_229a63053_cast_str(&(*_self_), _158250_d,_158260_error_token);
			}
		}
		else if (_2299b5e62_is_int(_229a83194_to_str(_158313_prim.ptr()))) {
			_case_begin_22d3a4660:;
			{
				_229a6341b_cast_int(&(*_self_), _158232_t,_158250_d,_158260_error_token);
			}
		}
		else if (_2299b6528_is_num(_229a83194_to_str(_158313_prim.ptr()))) {
			_case_begin_22d3a46c6:;
			{
				_229a637d4_cast_num(&(*_self_), _158232_t,_158250_d,_158260_error_token);
			}
		}
		else {
			_case_begin_22d3a4583:;
			{
				_229a5485d_push_err(&(*_self_), _158260_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_158232_t.ptr()))}));
			}
		}
		_match_end_22d3a451c:;
	};
}



inline void _229a63ebb_cast_constant(_229a54352_Eval* _self_, jule::Ptr<_229a7d359_TypeKind>& _159837_t, jule::Ptr<_229a527d4_Data>& _159856_d) {
	if (((_159856_d == nullptr) || (!(_229a53197_is_const(_159856_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_229a82d31_Prim> _160213_prim = _229a8046b_prim(_159837_t.ptr());;
	_229a7a4dd_cast_const_by_type(_160213_prim.get()._field_kind,_159856_d);
	_159856_d.get()._field_model=static_cast<jule::Any>(_159856_d.get()._field_constant);
}



inline void _229a64384_cast_type_enum(_229a54352_Eval* _self_, jule::Ptr<_229a7d359_TypeKind>& _160738_t, jule::Ptr<_229a527d4_Data>& _160757_d, jule::Ptr<_2276b1a1c_Token>& _160772_error_token) {
	jule::I64 _160813_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_2299e74d2_check_type_compatibility((*_self_)._field_s, _160757_d.get()._field_kind,_160738_t,_160772_error_token)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_160813_n);
		_229a5485d_push_err(&(*_self_), _160772_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_160757_d.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_160738_t.ptr()))}));
	};
}



inline jule::Ptr<_229a527d4_Data> _229a64807_eval_cast_by_type_n_data(_229a54352_Eval* _self_, jule::Ptr<_229a7d359_TypeKind> _161547_t, jule::Ptr<_229a527d4_Data> _161565_d, jule::Ptr<_2276b1a1c_Token> _161579_error_token) {
	if (((_161565_d != nullptr) && _161565_d.get()._field_decl)) {
		_229a5485d_push_err(&(*_self_), _161579_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_229a8046b_prim(_161565_d.get()._field_kind.ptr()) != nullptr) && _229a862c9_is_any(_229a8046b_prim(_161565_d.get()._field_kind.ptr()).ptr()))) {
			_case_begin_22d3acd3e:;
			{
				if ((_229a80ba8_enm(_161547_t.ptr()) != nullptr)) {
					_229a5485d_push_err(&(*_self_), _161579_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_229a54b7c_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_229a80e1c_tenm(_161547_t.ptr()) != nullptr)) {
					_229a5485d_push_err(&(*_self_), _161579_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_229a80e1c_tenm(_161565_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d3ac1a1:;
			{
				_229a64384_cast_type_enum(&(*_self_), _161547_t,_161565_d,_161579_error_token);
			}
		}
		else if ((_229a80944_ptr(_161547_t.ptr()) != nullptr)) {
			_case_begin_22d3ac217:;
			{
				_229a620da_cast_ptr(&(*_self_), _161547_t,_161565_d,_161579_error_token);
			}
		}
		else if ((_229a806d0_sptr(_161547_t.ptr()) != nullptr)) {
			_case_begin_22d3ac27d:;
			{
				_229a6286b_cast_ref(&(*_self_), _161547_t,_161565_d,_161579_error_token);
			}
		}
		else if ((_229a813e5_slc(_161547_t.ptr()) != nullptr)) {
			_case_begin_22d3ac2e4:;
			{
				_229a62c34_cast_slc(&(*_self_), _161547_t,_161565_d,_161579_error_token);
			}
		}
		else if ((_229a818bd_strct(_161547_t.ptr()) != nullptr)) {
			_case_begin_22d3ace93:;
			{
				_229a624a3_cast_struct(&(*_self_), _161547_t,_161565_d,_161579_error_token);
			}
		}
		else if ((_229a8046b_prim(_161547_t.ptr()) != nullptr)) {
			_case_begin_22d3ad009:;
			{
				_229a63b9c_cast_prim(&(*_self_), _161547_t,_161565_d,_161579_error_token);
				_229a63ebb_cast_constant(&(*_self_), _161547_t,_161565_d);
			}
		}
		else {
			_case_begin_22d3ac13a:;
			{
				_229a5485d_push_err(&(*_self_), _161579_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_161547_t.ptr()))}));
				_161565_d=nullptr;
			}
		}
		_match_end_22d3ac0d5:;
	};
	if ((_161565_d == nullptr)) {
		return nullptr;
	};
	_161565_d.get()._field_mutable=(_161565_d.get()._field_mutable || ((!(_229a7e756_mutable(_161565_d.get()._field_kind.ptr()))) && _229a7e756_mutable(_161547_t.ptr())));
	_161565_d.get()._field_lvalue=false;
	_161565_d.get()._field_decl=false;
	if (((_229a80ba8_enm(_161565_d.get()._field_kind.ptr()) == nullptr) || (!(_229a7da63_equals(_229a80ba8_enm(_161565_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _161547_t))))) {
		_229a79971_apply_cast_kind(_161565_d,_161547_t);
		_161565_d.get()._field_model.operator jule::Ptr<_228de04d0_CastingExprModel>().get()._field_token=_161579_error_token;
	} else {
		_161565_d.get()._field_kind=_161547_t;
	};
	return _161565_d;
}



inline jule::Ptr<_229a527d4_Data> _229a64c69_eval_cast_t(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_229a7d359_TypeKind>& _166836_t, jule::Ptr<_228d2c6b4_Expr>& _166855_e, jule::Ptr<_2276b1a1c_Token>& _166870_et) {
	jule::Ptr<_229a7d359_TypeKind> _166917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_166917_prefix;
	});;
	if ((_229a813e5_slc(_166836_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _166855_e.get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_228d3406c_SliceExpr>>()) {
				_case_begin_22d3b8333:;
				{
					_self_.get()._field_prefix=_166836_t;
				}
			}
			_match_end_22d3b8421:;
		};
	};
	jule::Ptr<_229a527d4_Data> _167817_d = _229a6e405_eval_expr_kind(_self_, _166855_e.get()._field_kind);;
	if (((_167817_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _167817_d;
	};
	return _229a64807_eval_cast_by_type_n_data(_self_.ptr(), _166836_t,_167817_d,_166870_et);
}



inline jule::Ptr<_229a527d4_Data> _229a65077_eval_cast(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d30695_CastExpr> _168533_c) {
	jule::Ptr<_229a824b2_TypeSymbol> _168617_t = _228ded950_build_type(_168533_c.get()._field_kind);;
	jule::Bool _168713_ok = _2299e539d_check_type(_self_.get()._field_s, _168617_t,_self_.get()._field_lookup);;
	if ((!(_168713_ok))) {
		return nullptr;
	};
	return _229a64c69_eval_cast_t(_self_, _168617_t.get()._field_kind,_168533_c.get()._field_expr,_168533_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_229a527d4_Data> _229a65385_eval_ns_selection(_229a54352_Eval* _self_, jule::Ptr<_228d30a4c_NsSelectionExpr> _169436_s) {
	jule::Str _169513_path = _229a95daa_build_link_path_by_tokens(_169436_s.get()._field_ns);;
	jule::Ptr<_2299d5646_ImportInfo> _169617_imp = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a973b7_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)>([=](jule::Ptr<_2299d5646_ImportInfo> _169653_imp) mutable -> jule::Bool {
		if (((_169436_s.get()._field_ns.len() == 1LL) && (_169653_imp.get()._field_alias == _169513_path))) {
			return true;
		};
		return ((_169653_imp.get()._field_link_path == _169513_path) && _2299d82a3_is_accessible_via_selection(_169653_imp.ptr()));
	}));;
	if ((_169617_imp == nullptr)) {
		_229a5485d_push_err(&(*_self_), _169436_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_169513_path)}));
		return nullptr;
	};
	jule::Trait<_229a98e02_Lookup> _170817_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_229a98e02_Lookup>(_169617_imp, 1);
	;
	_229a55034_disallow_builtin(&(*_self_));
	jule::Any _171317_def = _229a57872_get_def(&(*_self_), _169436_s.get()._field_ident.get()._field_kind,false);;
	_229a54d58_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_170817_lookup;
	jule::Ptr<_229a527d4_Data> _171717_d = _229a5b38c_eval_def(&(*_self_), jule::Any(_171317_def),_169436_s.get()._field_ident);;
	return _171717_d;
}



inline jule::Ptr<_229a527d4_Data> _229a65808_eval_struct_lit_explicit(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d44c1a_StructIns> _172248_s, jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _172313_exprs, jule::Ptr<_2276b1a1c_Token> _172333_error_token) {
	jule::Bool _172413_ok = _2299e27eb_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_172248_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_172248_s.get()._field_generics.len()),_172333_error_token);;
	if ((!(_172413_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _172248_s.get()._field_decl))) {
		_229a5485d_push_err(_self_.ptr(), _172333_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_172248_s.get()._field_decl.get()._field_ident)}));
	};
	_22d373596_push_reference(_self_.ptr(), _172248_s);
	_229a59764_check_deprecated(_self_.ptr(), _172248_s.get()._field_decl.get()._field_directives,_172333_error_token);
	_229a46e5a_StructLitChecker _173717_slc = _229a46e5a_StructLitChecker{._field_e=_self_, ._field_error_token=_172333_error_token, ._field_s=_172248_s, };;
	_229a48500_check(&_173717_slc, _172313_exprs);
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_172248_s, 0)}), ._field_mutable=(!(_self_.get()._field_immutable)), ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de0106_StructLitExprModel>(_228de0106_StructLitExprModel{._field_strct=_172248_s, ._field_args=_173717_slc._field_args})), });
}



inline jule::Ptr<_229a527d4_Data> _229a65b27_eval_struct_lit(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d32b5e_StructLit> _175639_lit) {
	jule::Ptr<_229a824b2_TypeSymbol> _175717_t = _228ded950_build_type(_175639_lit.get()._field_kind);;
	jule::Bool _175813_ok = _2299e539d_check_type(_self_.get()._field_s, _175717_t,_self_.get()._field_lookup);;
	if ((!(_175813_ok))) {
		return nullptr;
	};
	jule::Ptr<_228d44c1a_StructIns> _176317_s = _229a818bd_strct(_175717_t.get()._field_kind.ptr());;
	if ((_176317_s == nullptr)) {
		if ((_229a806d0_sptr(_175717_t.get()._field_kind.ptr()) != nullptr)) {
			_176317_s=_229a818bd_strct(_229a806d0_sptr(_175717_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_176317_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_229a5485d_push_err(_self_.ptr(), _175639_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_229a527d4_Data> _177617_d = _229a65808_eval_struct_lit_explicit(_self_, _176317_s,_175639_lit.get()._field_exprs,_175639_lit.get()._field_kind.get()._field_token);;
	if ((_229a806d0_sptr(_175717_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_228de0106_StructLitExprModel> _177821_model = _177617_d.get()._field_model.operator jule::Ptr<_228de0106_StructLitExprModel>();;
		_229a783cb_make_struct_lit_alloc(_177617_d,_177821_model);
	};
	return _177617_d;
}



inline jule::Ptr<_229a527d4_Data> _229a65e35_eval_type(_229a54352_Eval* _self_, jule::Ptr<_228d28193_TypeDecl> _178432_t) {
	jule::Ptr<_229a824b2_TypeSymbol> _178517_tk = _228ded950_build_type(_178432_t);;
	jule::Bool _178613_ok = _2299e539d_check_type((*_self_)._field_s, _178517_tk,(*_self_)._field_lookup);;
	if ((!(_178613_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=_178517_tk.get()._field_kind, ._field_model=static_cast<jule::Any>(_178517_tk.get()._field_kind), ._field_decl=true, });
}



inline void _229a66254_call_type_fn(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d31982_FnCallExpr>& _179737_fc, jule::Ptr<_229a527d4_Data>& _179759_d) {
	if ((_179737_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_self_.ptr(), _179737_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_179737_fc.get()._field_args.len() > 1LL)) {
		_229a5485d_push_err(_self_.ptr(), _179737_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_179737_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_228d2c6b4_Expr> _180521_arg = _179737_fc.get()._field_args[0LL];;
		_179759_d=_229a64c69_eval_cast_t(_self_, _179759_d.get()._field_kind,_180521_arg,_180521_arg.get()._field_token);
		return;;
	};
	if ((_179759_d != nullptr)) {
		_179759_d.get()._field_decl=false;
	};
}



inline void _229a66573_call_builtin_fn(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d31982_FnCallExpr>& _181540_fc, jule::Ptr<_229a527d4_Data>& _181562_d) {
	_181562_d=_229a81659_fnc(_181562_d.get()._field_kind.ptr()).get()._field_caller(_self_,_181540_fc,_181562_d);
	if ((_181562_d == nullptr)) {
		return;;
	};
	_181562_d.get()._field_mutable=true;
}



inline void _229a668b4_check_fn_of_concurrent_call(_229a54352_Eval* _self_, jule::Ptr<_228de996d_FnIns>& _182347_f, jule::Ptr<_2276b1a1c_Token> _182358_error_token) {
	if (_229a55298_is_unsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _182347_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_22d3d6274:;
		if (it != expr.end()) {
			jule::Ptr<_228de8a9e_ParamIns> &_182816_p = *it;
			{
				if (_182816_p.get()._field_decl.get()._field_reference) {
					_229a5485d_push_err(&(*_self_), _182358_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_22d3d6274:;
			++it;
			goto _iter_begin_22d3d6274;
		}
		_iter_end_22d3d6274:;
	};
}



inline void _229a66cb0_process_exceptional_handler(_229a54352_Eval* _self_, jule::Ptr<_228de996d_FnIns>& _183651_f, jule::Ptr<_228d31982_FnCallExpr>& _183667_fc, jule::Ptr<_229a527d4_Data>& _183689_d) {
	jule::Bool _183713_result_needed = ((!(_228de722e_is_void(_183651_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_2299bd7e9_ScopeChecker> _183817_csc = nullptr;;
	jule::Ptr<_2299b6c10_Scope> _183917_ch = nullptr;;
	jule::Ptr<_228de06bc_FnCallExprModel> _184117_model = _183689_d.get()._field_model.operator jule::Ptr<_228de06bc_FnCallExprModel>();;
	jule::Ptr<_2299bd7e9_ScopeChecker> _184517_sc = (*_self_)._field_lookup.operator jule::Ptr<_2299bd7e9_ScopeChecker>();;
	_183817_csc=_2299cdd8c_new_child_checker(_184517_sc);
	if (_183713_result_needed) {
		_183817_csc.get()._field_result=_183651_f;
	};
	_183917_ch=_2299c31b1_get_child(_184517_sc.ptr());
	_183667_fc.get()._field_exception.get()._field_parent=_184517_sc.get()._field_tree;
	_183817_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_183817_csc.get()._field_table.get()._field_vars,1);_183817_csc.get()._field_table.get()._field_vars.__push(_229a7871c_build_error_var(_183917_ch,_183667_fc));;
	_2299c3579_check_child_ssc(_184517_sc, _183667_fc.get()._field_exception,_183917_ch,_183817_csc);
	_184117_model.get()._field_assigned=_183713_result_needed;
	_184117_model.get()._field_except=_183917_ch;
	if ((_183713_result_needed && (_183817_csc.get()._field_result != nullptr))) {
		_229a5485d_push_err(&(*_self_), _183667_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _229a670e0_call_fn(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d31982_FnCallExpr>& _186332_fc, jule::Ptr<_229a527d4_Data>& _186354_d) {
	jule::Ptr<_228de996d_FnIns> _186417_f = _229a81659_fnc(_186354_d.get()._field_kind.ptr());;
	if ((_229a5550c_is_global(_self_.ptr()) && _186417_f.get()._field_decl.get()._field_exceptional)) {
		_229a5485d_push_err(_self_.ptr(), _186332_fc.get()._field_token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_229a54b7c_push_suggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_186354_d=nullptr;
		return;;
	};
	if (_228dea6b6_is_builtin(_186417_f.ptr())) {
		_229a66573_call_builtin_fn(_self_, _186332_fc,_186354_d);
		return;;
	};
	if (((!(_228de7493_is_method(_186417_f.get()._field_decl.ptr()))) && _229a94edb_has_directive(_186417_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		_229a5485d_push_err(_self_.ptr(), _186332_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_186354_d=nullptr;
		return;;
	};
	if (((((!(_186354_d.get()._field_mutable)) && _228de7493_is_method(_186417_f.get()._field_decl.ptr())) && (!(_186417_f.get()._field_decl.get()._field_statically))) && _186417_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable)) {
		_229a5485d_push_err(_self_.ptr(), _186332_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_229a55298_is_unsafe(_self_.ptr()))) && _186417_f.get()._field_decl.get()._field_unsafety)) {
		_229a5485d_push_err(_self_.ptr(), _186332_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _188817_dynamic_annotation = (((_186417_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_186417_f.get()._field_generics.len() == 0LL)) && (_186417_f.get()._field_params.len() > 0LL));;
	if (_188817_dynamic_annotation) {
		_186417_f.get()._field_generics=jule::Slice<jule::Ptr<_229a7bb2c_InsGeneric>>::alloc(_186417_f.get()._field_decl.get()._field_generics.len());
	} else if ((_186417_f.get()._field_generics.len() != _186417_f.get()._field_decl.get()._field_generics.len())) {
		_2299e27eb_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_186417_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_186417_f.get()._field_generics.len()),_186332_fc.get()._field_token);
		_186354_d=nullptr;
		return;;
	};
	jule::Ptr<_2299dd792_Sema> _189717_old = _self_.get()._field_s;;
	if ((_186417_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_186417_f.get()._field_decl.get()._field_owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_189717_old != _self_.get()._field_s)) {
			_189717_old.get()._field_errors=jule::append(_189717_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_189717_old;
	});;
	jule::Ptr<_228de996d_FnIns> _191017_exist_instance = nullptr;;
	if ((!(_188817_dynamic_annotation))) {
		if ((!(_186417_f.get()._field_reloaded))) {
			jule::Bool _191421_ok = _2299e92e7_reload_fn_ins_types(_self_.get()._field_s, _186417_f);;
			_186417_f.get()._field_reloaded=true;
			if ((!(_191421_ok))) {
				_186354_d=nullptr;
				return;;
			};
		};
		_191017_exist_instance=_228de86e7_append_instance(_186417_f.get()._field_decl.ptr(), _186417_f);
		if ((_186417_f.get()._field_generics.len() > 0LL)) {
			if ((!(_2299e8428_check_constraints_fn(_self_.get()._field_s, _186417_f,_186332_fc.get()._field_token,_191017_exist_instance)))) {
				_186354_d=nullptr;
				return;;
			};
		};
	} else if ((_186417_f.get()._field_generics.len() > 0LL)) {
		_2299e7b75_build_fn_non_generic_type_kinds(_self_.get()._field_s, _186417_f);
	};
	_229a44551_FnCallArgChecker _193217_fcac = _229a44551_FnCallArgChecker{._field_e=_self_, ._field_args=_186332_fc.get()._field_args, ._field_error_token=_186332_fc.get()._field_token, ._field_f=_186417_f, ._field_dynamic_annotation=_188817_dynamic_annotation, };;
	jule::Bool _193917_ok = false;;
	if ((_186417_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_189717_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_189717_old);
		_193917_ok=_229a4691b_check(&_193217_fcac);
		std::tie(_189717_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_189717_old);
	} else {
		_193917_ok=_229a4691b_check(&_193217_fcac);
	};
	if (((!(_193917_ok)) && _188817_dynamic_annotation)) {
		_186354_d=nullptr;
		return;;
	};
	if (_188817_dynamic_annotation) {
		_193917_ok=_2299e92e7_reload_fn_ins_types(_self_.get()._field_s, _186417_f);
		_186417_f.get()._field_reloaded=true;
		if ((!(_193917_ok))) {
			_186354_d=nullptr;
			return;;
		};
		_191017_exist_instance=_228de86e7_append_instance(_186417_f.get()._field_decl.ptr(), _186417_f);
		if ((!(_2299e8428_check_constraints_fn(_self_.get()._field_s, _186417_f,_186332_fc.get()._field_token,_191017_exist_instance)))) {
			_186354_d=nullptr;
			return;;
		};
	} else if ((_186417_f.get()._field_generics.len() == 0LL)) {
		_191017_exist_instance=_228de86e7_append_instance(_186417_f.get()._field_decl.ptr(), _186417_f);
	};
	if ((_191017_exist_instance != nullptr)) {
		_186417_f=_191017_exist_instance;
	};
	jule::Any _197217_call_model = _186354_d.get()._field_model;;
	if (_228de722e_is_void(_186417_f.get()._field_decl.ptr())) {
		_186354_d=_229a79b6e_build_void_data();
	} else {
		_186354_d.get()._field_kind=_186417_f.get()._field_result;
		_186354_d.get()._field_lvalue=false;
	};
	jule::Ptr<_228de06bc_FnCallExprModel> _198117_model = jule::new_ptr<_228de06bc_FnCallExprModel>(_228de06bc_FnCallExprModel{._field_token=_186332_fc.get()._field_token, ._field_func=_186417_f, ._field_expr=_197217_call_model, ._field_args=_193217_fcac._field_arg_models, });;
	_186354_d.get()._field_model=static_cast<jule::Any>(_198117_model);
	_186354_d.get()._field_mutable=true;
	if (_186417_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_228d31ce5_unhandled(_186332_fc.ptr())) {
				_case_begin_22d404803:;
				{
					_229a5485d_push_err(_self_.ptr(), _186332_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_229a54b7c_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_228d32059_ignored(_186332_fc.ptr())) {
				_case_begin_22d4041e8:;
				{
					goto _match_end_22d4040a5;
				}
			}
			else {
				_case_begin_22d404182:;
				{
					_229a66cb0_process_exceptional_handler(_self_.ptr(), _186417_f,_186332_fc,_186354_d);
				}
			}
			_match_end_22d4040a5:;
		};
	} else if ((!(_228d31ce5_unhandled(_186332_fc.ptr())))) {
		_229a5485d_push_err(_self_.ptr(), _186332_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if ((_186417_f.get()._field_generics.len() > 0LL)) {
		if ((_191017_exist_instance != nullptr)) {
			_229a7a9e9_update_model_to_generic_ins(_198117_model,_186417_f);
		} else {
			_229a05d1a_check_fn_ins_caller(_self_.get()._field_s, _186417_f,_186332_fc.get()._field_token);
		};
	};
}



inline jule::Ptr<_229a527d4_Data> _229a673ed_eval_fn_call(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d31982_FnCallExpr> _202036_fc) {
	jule::Ptr<_229a7d359_TypeKind> _202117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_202117_prefix;
	});;
	{
		auto &_match_expr{ _202036_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d2e72c_IdentExpr>>()) {
			_case_begin_22d4080cb:;
			{
				if ((_202036_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _229b302c9_builtin_caller_error(_self_,_202036_fc);
				};
			}
		}
		_match_end_22d408076:;
	};
	jule::Ptr<_229a527d4_Data> _203417_d = _229a6e405_eval_expr_kind(_self_, _202036_fc.get()._field_expr.get()._field_kind);;
	if ((_203417_d == nullptr)) {
		return nullptr;
	};
	if (_203417_d.get()._field_decl) {
		_229a66254_call_type_fn(_self_, _202036_fc,_203417_d);
		return _203417_d;
	};
	if ((_229a81659_fnc(_203417_d.get()._field_kind.ptr()) == nullptr)) {
		_229a5485d_push_err(_self_.ptr(), _202036_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_229a670e0_call_fn(_self_, _202036_fc,_203417_d);
	return _203417_d;
}



inline jule::Ptr<_229a527d4_Data> _229a677a5_eval_enum_static(_229a54352_Eval* _self_, jule::Ptr<_228e0dcc3_Enum> _205339_enm, jule::Ptr<_2276b1a1c_Token> _205351_ident) {
	jule::Ptr<_229a527d4_Data> _205417_d = jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_205339_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Ptr<_22908619d_EnumItem> _206317_item = _2290792b2_find_item(_205339_enm.ptr(), _205351_ident.get()._field_kind);;
	if ((_206317_item == nullptr)) {
		_229a5485d_push_err(&(*_self_), _205351_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_205339_enm.get()._field_ident),jule::Any(_205351_ident.get()._field_kind)}));
	} else {
		_205417_d.get()._field_constant=jule::new_ptr<_228d7b4d2_Const>((*(_206317_item.get()._field_value.get()._field_data.get()._field_constant)));
		_205417_d.get()._field_model=static_cast<jule::Any>(_205417_d.get()._field_constant);
		_229a7a224_apply_cast_model_by_enum(_205417_d,_205339_enm);
	};
	return _205417_d;
}



inline jule::Ptr<_229a527d4_Data> _229a67b5c_eval_type_enum_static(_229a54352_Eval* _self_, jule::Ptr<_2292e1e75_TypeEnum> _207544_enm, jule::Ptr<_2276b1a1c_Token> _207560_ident) {
	jule::Ptr<_2290786bd_TypeEnumItem> _207617_item = _22923da09_find_item(_207544_enm.ptr(), _207560_ident.get()._field_kind);;
	if ((_207617_item == nullptr)) {
		_229a5485d_push_err(&(*_self_), _207560_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_207544_enm.get()._field_ident),jule::Any(_207560_ident.get()._field_kind)}));
		return nullptr;
	};
	{
		
		if ((_229a80ba8_enm(_207617_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d411cc7:;
			{
				return _229a57e05___eval_enum(&(*_self_), _229a80ba8_enm(_207617_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_229a80e1c_tenm(_207617_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d411ec5:;
			{
				return _229a585ba___eval_type_enum(&(*_self_), _229a80e1c_tenm(_207617_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_229a818bd_strct(_207617_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d4111e4:;
			{
				return _229a58c80___eval_struct(&(*_self_), _229a818bd_strct(_207617_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else {
			_case_begin_22d410446:;
			{
				jule::Ptr<_229a527d4_Data> _208921_d = jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=_207617_item.get()._field_kind.get()._field_kind, ._field_decl=true, });;
				_208921_d.get()._field_model=static_cast<jule::Any>(_208921_d.get()._field_kind);
				return _208921_d;
			}
		}
		_match_end_22d4103e1:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a68014_eval_struct_static(_229a54352_Eval* _self_, jule::Ptr<_228d44c1a_StructIns> _209841_s, jule::Ptr<_2276b1a1c_Token> _209856_ident) {
	jule::Ptr<_229a527d4_Data> _209917_d = jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	;
	jule::Ptr<_228de6cbc_Fn> _210717_method = _228d1ed8d_find_method(_209841_s.ptr(), _209856_ident.get()._field_kind,true);;
	if ((_210717_method != nullptr)) {
		if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _210717_method.get()._field_public,_210717_method.get()._field_token)))) {
			_229a5485d_push_err(&(*_self_), _209856_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_209856_ident.get()._field_kind)}));
			_229a54b7c_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_228de996d_FnIns> _211421_ins = _228de841c_instance(_210717_method);;
		_211421_ins.get()._field_owner=_209841_s;
		_22d2c34c4_push_reference(&(*_self_), _211421_ins);
		_209917_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de1b41_StructStaticIdentExprModel>(_228de1b41_StructStaticIdentExprModel{._field_structure=_209841_s, ._field_expr=_209917_d.get()._field_model, ._field_method=_211421_ins}));
		_209917_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_211421_ins, 1)});
		return _209917_d;
	};
	jule::Ptr<_229a0a4a1_Var> _212817_sttc = _228d08d00_find_static(_209841_s.get()._field_decl.ptr(), _209856_ident.get()._field_kind);;
	if ((_212817_sttc != nullptr)) {
		return _229a5ab2d_eval_var(&(*_self_), _212817_sttc,_209856_ident);
	};
	_229a5485d_push_err(&(*_self_), _209856_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_209841_s.get()._field_decl.get()._field_ident),jule::Any(_209856_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_229a527d4_Data> _229a68465_eval_trait_sub_ident(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data> _213743_d, jule::Ptr<_22923d1bd_Trait> _213757_trt, jule::Ptr<_2276b1a1c_Token> _213774_ident) {
	jule::Ptr<_228de6cbc_Fn> _213817_f = _228ea37b3_find_method(_213757_trt.ptr(), _213774_ident.get()._field_kind);;
	if ((_213817_f == nullptr)) {
		_229a5485d_push_err(&(*_self_), _213774_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_213757_trt.get()._field_ident),jule::Any(_213774_ident.get()._field_kind)}));
		return nullptr;
	};
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_228de841c_instance(_213817_f), 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de1536_TraitSubIdentExprModel>(_228de1536_TraitSubIdentExprModel{._field_token=_213774_ident, ._field_expr=_213743_d.get()._field_model, ._field_method=_213817_f, ._field_trt=_213757_trt})), ._field_decl=false, });
}



inline jule::Ptr<_229a527d4_Data> _229a68960_eval_struct_sub_ident(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data> _216044_d, jule::Ptr<_228d44c1a_StructIns> _216058_s, jule::Ptr<_228d30ec0_SubIdentExpr> _216077_si, jule::Bool _216096_ref) {
	jule::Ptr<_228d21037_FieldIns> _216117_f = _228d228a7_find_field(_216058_s.ptr(), _216077_si.get()._field_ident.get()._field_kind);;
	if ((_216117_f != nullptr)) {
		if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _216117_f.get()._field_decl.get()._field_public,_216117_f.get()._field_decl.get()._field_token)))) {
			_229a5485d_push_err(&(*_self_), _216077_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_216117_f.get()._field_decl.get()._field_ident)}));
			_229a54b7c_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_228de1954_StructSubIdentExprModel> _216821_model = jule::new_ptr<_228de1954_StructSubIdentExprModel>(_228de1954_StructSubIdentExprModel{._field_token=_216077_si.get()._field_ident, ._field_expr=jule::new_ptr<_229a527d4_Data>((*(_216044_d))), ._field_expr_kind=_216044_d.get()._field_kind, ._field_field=_216117_f});;
		_216044_d.get()._field_model=static_cast<jule::Any>(_216821_model);
		_216044_d.get()._field_kind=_216117_f.get()._field_kind;
		_216044_d.get()._field_lvalue=true;
		if ((_216117_f.get()._field_decl.get()._field_mutable && (!(_216044_d.get()._field_mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_2299bd7e9_ScopeChecker>>()) {
					_case_begin_22d4232a0:;
					{
						jule::Ptr<_2299bd7e9_ScopeChecker> _218225_scope = _2299c190c_get_root((*_self_)._field_lookup.operator jule::Ptr<_2299bd7e9_ScopeChecker>());;
						_216044_d.get()._field_mutable=((_218225_scope.get()._field_owner != nullptr) && (_218225_scope.get()._field_owner.get()._field_owner == _216058_s));
					}
				}
				_match_end_22d42324a:;
			};
		};
		return _216044_d;
	};
	;
	jule::Ptr<_228de6cbc_Fn> _219117_m = _228d1ed8d_find_method(_216058_s.ptr(), _216077_si.get()._field_ident.get()._field_kind,false);;
	if ((_219117_m == nullptr)) {
		_229a5485d_push_err(&(*_self_), _216077_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_216058_s.get()._field_decl.get()._field_ident),jule::Any(_216077_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	};
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _219117_m.get()._field_public,_219117_m.get()._field_token)))) {
		_229a5485d_push_err(&(*_self_), _216077_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_219117_m.get()._field_ident)}));
		_229a54b7c_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_228de5d21_is_ref(_219117_m.get()._field_params[0LL].ptr()) && (!(_216096_ref)))) {
		_229a5485d_push_err(&(*_self_), _216077_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_229a59764_check_deprecated(&(*_self_), _219117_m.get()._field_directives,_216077_si.get()._field_ident);
	jule::Ptr<_228de996d_FnIns> _220717_ins = _228de841c_instance(_219117_m);;
	_220717_ins.get()._field_owner=_216058_s;
	_22d2c34c4_push_reference(&(*_self_), _220717_ins);
	jule::Ptr<_229a527d4_Data> _221017_model = jule::new_ptr<_229a527d4_Data>((*(_216044_d)));;
	_216044_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de1954_StructSubIdentExprModel>(_228de1954_StructSubIdentExprModel{._field_token=_216077_si.get()._field_ident, ._field_expr=_221017_model, ._field_expr_kind=_216044_d.get()._field_kind, ._field_method=_220717_ins, }));
	_216044_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_220717_ins, 1)});
	return _216044_d;
}



inline jule::Ptr<_229a527d4_Data> _229a68d17_eval_slice_sub_ident(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data> _222143_d, jule::Ptr<_2276b1a1c_Token> _222157_ident) {
	{
		auto &_match_expr{ _222157_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_22b48ca8b:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_222143_d.get()._field_kind, ._field_expr=_222143_d.get()._field_model, ._field_token=_222157_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_22b48dd56:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_222143_d.get()._field_kind, ._field_expr=_222143_d.get()._field_model, ._field_token=_222157_ident, ._field_ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_22b48ddbc:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_params=jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>::make({jule::new_ptr<_228de8a9e_ParamIns>(_228de8a9e_ParamIns{._field_decl=jule::new_ptr<_228de5480_Param>(_228de5480_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_228de8a9e_ParamIns>(_228de8a9e_ParamIns{._field_decl=jule::new_ptr<_228de5480_Param>(_228de5480_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b08725_builtin_caller_common_mut), }), 1)}), ._field_mutable=_222143_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_222143_d.get()._field_kind, ._field_expr=_222143_d.get()._field_model, ._field_token=_222157_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_22b48cd66:;
			{
				_229a5485d_push_err(&(*_self_), _222157_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_222143_d.get()._field_kind.ptr())),jule::Any(_222157_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b48cb24:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a691be_eval_array_sub_ident(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data> _228043_d, jule::Ptr<_2276b1a1c_Token> _228057_ident) {
	{
		auto &_match_expr{ _228057_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_22b48deaa:;
			{
				jule::Ptr<_228d7b4d2_Const> _228321_c = static__228dd63b6_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_229a81181_arr(_228043_d.get()._field_kind.ptr()).get()._field_n)));;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(_228321_c), ._field_constant=_228321_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_22b494345:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_params=jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>::make({jule::new_ptr<_228de8a9e_ParamIns>(_228de8a9e_ParamIns{._field_decl=jule::new_ptr<_228de5480_Param>(_228de5480_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_228de8a9e_ParamIns>(_228de8a9e_ParamIns{._field_decl=jule::new_ptr<_228de5480_Param>(_228de5480_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b08725_builtin_caller_common_mut), }), 1)}), ._field_mutable=_228043_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_228043_d.get()._field_kind, ._field_expr=_228043_d.get()._field_model, ._field_token=_228057_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_22b493322:;
			{
				_229a5485d_push_err(&(*_self_), _228057_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_228043_d.get()._field_kind.ptr())),jule::Any(_228057_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b493267:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a69576_eval_map_sub_ident(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data> _232541_d, jule::Ptr<_2276b1a1c_Token> _232555_ident) {
	jule::Ptr<_229a885c8_Map> _232617_map_kind = _229a81d96_map(_232541_d.get()._field_kind.ptr());;
	{
		auto &_match_expr{ _232555_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_22b499339:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_232541_d.get()._field_kind, ._field_expr=_232541_d.get()._field_model, ._field_token=_232555_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_22b4993a0:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b08725_builtin_caller_common_mut), }), 1)}), ._field_mutable=_232541_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_232541_d.get()._field_kind, ._field_expr=_232541_d.get()._field_model, ._field_token=_232555_ident, ._field_ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_22b499218:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_result=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_229a87022_Slc>(_229a87022_Slc{._field_elem=_232617_map_kind.get()._field_key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b08725_builtin_caller_common_mut), }), 1)}), ._field_mutable=_232541_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_232541_d.get()._field_kind, ._field_expr=_232541_d.get()._field_model, ._field_token=_232555_ident, ._field_ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_22b49927e:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_result=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_229a87022_Slc>(_229a87022_Slc{._field_elem=_232617_map_kind.get()._field_val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b08725_builtin_caller_common_mut), }), 1)}), ._field_mutable=_232541_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_232541_d.get()._field_kind, ._field_expr=_232541_d.get()._field_model, ._field_token=_232555_ident, ._field_ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_22b4984d1:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_params=jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>::make({jule::new_ptr<_228de8a9e_ParamIns>(_228de8a9e_ParamIns{._field_decl=jule::new_ptr<_228de5480_Param>(_228de5480_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_232617_map_kind.get()._field_key})}), ._field_result=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b337e9_builtin_caller_common), }), 1)}), ._field_mutable=_232541_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_232541_d.get()._field_kind, ._field_expr=_232541_d.get()._field_model, ._field_token=_232555_ident, ._field_ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_22b498547:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_params=jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>::make({jule::new_ptr<_228de8a9e_ParamIns>(_228de8a9e_ParamIns{._field_decl=jule::new_ptr<_228de5480_Param>(_228de5480_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_232617_map_kind.get()._field_key})}), ._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b08725_builtin_caller_common_mut), }), 1)}), ._field_mutable=_232541_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_232541_d.get()._field_kind, ._field_expr=_232541_d.get()._field_model, ._field_token=_232555_ident, ._field_ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_22b49846a:;
			{
				_229a5485d_push_err(&(*_self_), _232555_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_229a8893b_to_str(_232617_map_kind.ptr())),jule::Any(_232555_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4983c1:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6992d_eval_str_sub_ident(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data> _244841_d, jule::Ptr<_2276b1a1c_Token> _244855_ident) {
	jule::Ptr<_229a7d359_TypeKind> _244917_str_kind = jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _244855_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_22b4a2d8c:;
			{
				jule::Ptr<_229a527d4_Data> _245221_sd = jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_229a53197_is_const(_244841_d.ptr())) {
					_245221_sd.get()._field_constant=static__228dd63b6_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_228dd7c03_read_str(_244841_d.get()._field_constant.ptr()).len())));
					_245221_sd.get()._field_model=static_cast<jule::Any>(_245221_sd.get()._field_constant);
				} else {
					_245221_sd.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_244841_d.get()._field_kind, ._field_expr=_244841_d.get()._field_model, ._field_token=_244855_ident, ._field_ident=jule::Str("len()", 5)}));
				};
				return _245221_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_22b4a2e03:;
			{
				jule::Ptr<_229a527d4_Data> _246821_sd = jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_229a53197_is_const(_244841_d.ptr())) {
					_246821_sd.get()._field_constant=static__228dd63b6_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_228dd7c03_read_str(_244841_d.get()._field_constant.ptr()).cap())));
					_246821_sd.get()._field_model=static_cast<jule::Any>(_246821_sd.get()._field_constant);
				} else {
					_246821_sd.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_244841_d.get()._field_kind, ._field_expr=_244841_d.get()._field_model, ._field_token=_244855_ident, ._field_ident=jule::Str("cap()", 5)}));
				};
				return _246821_sd;
			}
		}
		else {
			_case_begin_22b4a2d26:;
			{
				_229a5485d_push_err(&(*_self_), _244855_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_244917_str_kind.ptr())),jule::Any(_244855_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4a2c7c:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a69c3b_eval_int_type_static(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _248939_ident) {
	;
	{
		auto &_match_expr{ _248939_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4a4a92:;
			{
				jule::Ptr<_228d7b4d2_Const> _249421_c = static__228dd63b6_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_2299b0a83_max(jule::Str("int", 3)))));;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=static_cast<jule::Any>(_249421_c), ._field_constant=_249421_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_22b4a9d0b:;
			{
				jule::Ptr<_228d7b4d2_Const> _250121_c = static__228dd63b6_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_2299b0797_min(jule::Str("int", 3)))));;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=static_cast<jule::Any>(_250121_c), ._field_constant=_250121_c});
			}
		}
		else {
			_case_begin_22b4a905d:;
			{
				_229a5485d_push_err(&(*_self_), _248939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_248939_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4a8db5:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6a049_eval_uint_type_static(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _251340_ident) {
	;
	{
		auto &_match_expr{ _251340_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4ac759:;
			{
				jule::Ptr<_228d7b4d2_Const> _251821_c = static__228dd64e8_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_2299b0a83_max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("uint", 4)), 6)}), ._field_model=static_cast<jule::Any>(_251821_c), ._field_constant=_251821_c});
			}
		}
		else {
			_case_begin_22b4ac9e0:;
			{
				_229a5485d_push_err(&(*_self_), _251340_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_251340_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4ac946:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6a357_eval_i8_type_static(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _253038_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _253038_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4b096b:;
			{
				jule::Ptr<_228d7b4d2_Const> _253721_c = static__228dd63b6_new_i64(127LL);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_253721_c), ._field_constant=_253721_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_22b4b09d2:;
			{
				jule::Ptr<_228d7b4d2_Const> _254421_c = static__228dd63b6_new_i64(-128LL);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_254421_c), ._field_constant=_254421_c});
			}
		}
		else {
			_case_begin_22b4b08b1:;
			{
				_229a5485d_push_err(&(*_self_), _253038_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_253038_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4b085b:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6a665_eval_i16_type_static(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _255639_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _255639_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4b4651:;
			{
				jule::Ptr<_228d7b4d2_Const> _256321_c = static__228dd63b6_new_i64(32767LL);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_256321_c), ._field_constant=_256321_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_22b4b46b7:;
			{
				jule::Ptr<_228d7b4d2_Const> _257021_c = static__228dd63b6_new_i64(-32768LL);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_257021_c), ._field_constant=_257021_c});
			}
		}
		else {
			_case_begin_22b4b4596:;
			{
				_229a5485d_push_err(&(*_self_), _255639_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_255639_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4b4541:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6a973_eval_i32_type_static(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _258239_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _258239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4b8336:;
			{
				jule::Ptr<_228d7b4d2_Const> _258921_c = static__228dd63b6_new_i64(2147483647LL);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_258921_c), ._field_constant=_258921_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_22b4b839c:;
			{
				jule::Ptr<_228d7b4d2_Const> _259621_c = static__228dd63b6_new_i64(-2147483648LL);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_259621_c), ._field_constant=_259621_c});
			}
		}
		else {
			_case_begin_22b4b827b:;
			{
				_229a5485d_push_err(&(*_self_), _258239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_258239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4b8226:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6ac81_eval_i64_type_static(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _260839_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _260839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4bc01b:;
			{
				jule::Ptr<_228d7b4d2_Const> _261521_c = static__228dd63b6_new_i64(jule::MAX_I64);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_261521_c), ._field_constant=_261521_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_22b4bc082:;
			{
				jule::Ptr<_228d7b4d2_Const> _262221_c = static__228dd63b6_new_i64(jule::MIN_I64);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_262221_c), ._field_constant=_262221_c});
			}
		}
		else {
			_case_begin_22b4bbe61:;
			{
				_229a5485d_push_err(&(*_self_), _260839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_260839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4bbe0b:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6b08e_eval_u8_type_static(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _263438_ident) {
	;
	;
	{
		auto &_match_expr{ _263438_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4c077d:;
			{
				jule::Ptr<_228d7b4d2_Const> _264021_c = static__228dd64e8_new_u64(255LLU);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("u8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_264021_c), ._field_constant=_264021_c});
			}
		}
		else {
			_case_begin_22b4bec77:;
			{
				_229a5485d_push_err(&(*_self_), _263438_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_263438_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4c0629:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6b39c_eval_u16_type_static(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _265239_ident) {
	;
	;
	{
		auto &_match_expr{ _265239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4c3132:;
			{
				jule::Ptr<_228d7b4d2_Const> _265821_c = static__228dd64e8_new_u64(65535LLU);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("u16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_265821_c), ._field_constant=_265821_c});
			}
		}
		else {
			_case_begin_22b4c262b:;
			{
				_229a5485d_push_err(&(*_self_), _265239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_265239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4c2ecd:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6b6aa_eval_u32_type_static(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _267039_ident) {
	;
	;
	{
		auto &_match_expr{ _267039_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4c59d6:;
			{
				jule::Ptr<_228d7b4d2_Const> _267621_c = static__228dd64e8_new_u64(4294967295LLU);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("u32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_267621_c), ._field_constant=_267621_c});
			}
		}
		else {
			_case_begin_22b4c4ed0:;
			{
				_229a5485d_push_err(&(*_self_), _267039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_267039_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4c5882:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6b9b8_eval_u64_type_static(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _268839_ident) {
	;
	;
	{
		auto &_match_expr{ _268839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4c838a:;
			{
				jule::Ptr<_228d7b4d2_Const> _269421_c = static__228dd64e8_new_u64(jule::MAX_U64);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("u64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_269421_c), ._field_constant=_269421_c});
			}
		}
		else {
			_case_begin_22b4c7884:;
			{
				_229a5485d_push_err(&(*_self_), _268839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_268839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4c8236:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6bcc6_eval_f32_type_tatic(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _270638_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _270638_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4cb514:;
			{
				jule::Ptr<_228d7b4d2_Const> _271421_c = static__228dd6bbe_new_f64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_271421_c), ._field_constant=_271421_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_22b4cb57a:;
			{
				jule::Ptr<_228d7b4d2_Const> _272121_c = static__228dd6bbe_new_f64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_272121_c), ._field_constant=_272121_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_22b4cb5e1:;
			{
				jule::Ptr<_228d7b4d2_Const> _272821_c = static__228dd6bbe_new_f64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_272821_c), ._field_constant=_272821_c});
			}
		}
		else {
			_case_begin_22b4cb415:;
			{
				_229a5485d_push_err(&(*_self_), _270638_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_270638_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4cb39e:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6c0d4_eval_f64_type_static(_229a54352_Eval* _self_, jule::Ptr<_2276b1a1c_Token> _274039_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _274039_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_22b4d1481:;
			{
				jule::Ptr<_228d7b4d2_Const> _274821_c = static__228dd6bbe_new_f64(jule::MAX_F64);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_274821_c), ._field_constant=_274821_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_22b4d14e7:;
			{
				jule::Ptr<_228d7b4d2_Const> _275521_c = static__228dd6bbe_new_f64(jule::MIN_F64);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_275521_c), ._field_constant=_275521_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_22b4d155d:;
			{
				jule::Ptr<_228d7b4d2_Const> _276221_c = static__228dd6bbe_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_276221_c), ._field_constant=_276221_c});
			}
		}
		else {
			_case_begin_22b4d1382:;
			{
				_229a5485d_push_err(&(*_self_), _274039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_274039_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4d131b:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6c48b_eval_prim_static(_229a54352_Eval* _self_, jule::Str _277435_kind, jule::Ptr<_2276b1a1c_Token> _277446_ident) {
	{
		auto &_match_expr{ _277435_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_22b4d54a7:;
			{
				return _229a69c3b_eval_int_type_static(&(*_self_), _277446_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_22b4d551d:;
			{
				return _229a6a049_eval_uint_type_static(&(*_self_), _277446_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_22b4d5dae:;
			{
				return _229a6a357_eval_i8_type_static(&(*_self_), _277446_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_22b4d5e25:;
			{
				return _229a6a665_eval_i16_type_static(&(*_self_), _277446_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_22b4d5e8b:;
			{
				return _229a6a973_eval_i32_type_static(&(*_self_), _277446_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_22b4d6002:;
			{
				return _229a6ac81_eval_i64_type_static(&(*_self_), _277446_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_22b4d6068:;
			{
				return _229a6b08e_eval_u8_type_static(&(*_self_), _277446_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_22b4d6123:;
			{
				return _229a6b39c_eval_u16_type_static(&(*_self_), _277446_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_22b4d6189:;
			{
				return _229a6b6aa_eval_u32_type_static(&(*_self_), _277446_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_22b4d6200:;
			{
				return _229a6b9b8_eval_u64_type_static(&(*_self_), _277446_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_22b4d6266:;
			{
				return _229a6bcc6_eval_f32_type_tatic(&(*_self_), _277446_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_22b4d62cc:;
			{
				return _229a6c0d4_eval_f64_type_static(&(*_self_), _277446_ident);
			}
		}
		else {
			_case_begin_22b4d49d4:;
			{
				_229a5485d_push_err(&(*_self_), _277446_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_277435_kind),jule::Any(_277446_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b4d5342:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6c843_eval_type_static(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data> _280639_d, jule::Ptr<_228d30ec0_SubIdentExpr> _280653_si) {
	{
		
		if ((_229a8046b_prim(_280639_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b4da8ca:;
			{
				return _229a6c48b_eval_prim_static(&(*_self_), _229a83194_to_str(_229a8046b_prim(_280639_d.get()._field_kind.ptr()).ptr()),_280653_si.get()._field_ident);
			}
		}
		else if ((_229a80ba8_enm(_280639_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b4da941:;
			{
				return _229a677a5_eval_enum_static(&(*_self_), _229a80ba8_enm(_280639_d.get()._field_kind.ptr()),_280653_si.get()._field_ident);
			}
		}
		else if ((_229a80e1c_tenm(_280639_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b4da9a7:;
			{
				return _229a67b5c_eval_type_enum_static(&(*_self_), _229a80e1c_tenm(_280639_d.get()._field_kind.ptr()),_280653_si.get()._field_ident);
			}
		}
		else if ((_229a818bd_strct(_280639_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b4daa1d:;
			{
				return _229a68014_eval_struct_static(&(*_self_), _229a818bd_strct(_280639_d.get()._field_kind.ptr()),_280653_si.get()._field_ident);
			}
		}
		else {
			_case_begin_22b4da864:;
			{
				_229a5485d_push_err(&(*_self_), _280653_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_280639_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22b4d69e7:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6cbea_eval_obj_sub_ident(_229a54352_Eval* _self_, jule::Ptr<_229a527d4_Data> _282241_d, jule::Ptr<_228d30ec0_SubIdentExpr> _282255_si) {
	if (_2276b42b1_is_ignore_ident(_282255_si.get()._field_ident.get()._field_kind)) {
		_229a5485d_push_err(&(*_self_), _282255_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_229a7d359_TypeKind> _282817_kind = _282241_d.get()._field_kind;;
	{
		
		if ((_229a80944_ptr(_282241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b4e1738:;
			{
				jule::Ptr<_229a89b29_Ptr> _283117_ptr = _229a80944_ptr(_282241_d.get()._field_kind.ptr());;
				if (_229a8a5ec_is_unsafe(_283117_ptr.ptr())) {
					goto _match_end_22b4e15d4;
				};
				if (((!(_282255_si.get()._field_is_self)) && (!(_229a55298_is_unsafe(&(*_self_)))))) {
					_229a5485d_push_err(&(*_self_), _282255_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_282817_kind=_229a80944_ptr(_282241_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_229a806d0_sptr(_282241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b4e179e:;
			{
				_282817_kind=_229a806d0_sptr(_282241_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_22b4e15d4:;
	};
	{
		
		if ((_229a81b32_trt(_282241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b4e421e:;
			{
				return _229a68465_eval_trait_sub_ident(&(*_self_), _282241_d,_229a81b32_trt(_282241_d.get()._field_kind.ptr()),_282255_si.get()._field_ident);
			}
		}
		else if ((_229a818bd_strct(_282817_kind.ptr()) != nullptr)) {
			_case_begin_22b4e4296:;
			{
				jule::Ptr<_228d44c1a_StructIns> _284717_s = _229a818bd_strct(_282817_kind.ptr());;
				if (_229a791ac_is_instanced_struct(_284717_s)) {
					jule::Bool _284925_used_reference_elem = (_229a806d0_sptr(_282241_d.get()._field_kind.ptr()) != nullptr);;
					return _229a68960_eval_struct_sub_ident(&(*_self_), _282241_d,_229a818bd_strct(_282817_kind.ptr()),_282255_si,_284925_used_reference_elem);
				};
			}
		}
		else if ((_229a813e5_slc(_282817_kind.ptr()) != nullptr)) {
			_case_begin_22b4e431d:;
			{
				return _229a68d17_eval_slice_sub_ident(&(*_self_), _282241_d,_282255_si.get()._field_ident);
			}
		}
		else if ((_229a81181_arr(_282817_kind.ptr()) != nullptr)) {
			_case_begin_22b4e4395:;
			{
				return _229a691be_eval_array_sub_ident(&(*_self_), _282241_d,_282255_si.get()._field_ident);
			}
		}
		else if ((_229a81d96_map(_282817_kind.ptr()) != nullptr)) {
			_case_begin_22b4e4906:;
			{
				return _229a69576_eval_map_sub_ident(&(*_self_), _282241_d,_282255_si.get()._field_ident);
			}
		}
		else if ((_229a8046b_prim(_282817_kind.ptr()) != nullptr)) {
			_case_begin_22b4e497d:;
			{
				jule::Ptr<_229a82d31_Prim> _285917_p = _229a8046b_prim(_282817_kind.ptr());;
				{
					auto &_match_expr{ _285917_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_22b4ea313:;
						{
							return _229a6992d_eval_str_sub_ident(&(*_self_), _282241_d,_282255_si.get()._field_ident);
						}
					}
					_match_end_22b4ea159:;
				};
			}
		}
		_match_end_22b4e4120:;
	};
	_229a5485d_push_err(&(*_self_), _282255_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_282241_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_229a527d4_Data> _229a6d008_eval_sub_ident(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d30ec0_SubIdentExpr> _286938_si) {
	jule::Ptr<_229a7d359_TypeKind> _287017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_287017_prefix;
	});;
	jule::Ptr<_229a527d4_Data> _287417_d = _229a6e405_eval_expr_kind(_self_, _286938_si.get()._field_expr.get()._field_kind);;
	if ((_287417_d == nullptr)) {
		return nullptr;
	};
	if (_287417_d.get()._field_decl) {
		return _229a6c843_eval_type_static(_self_.ptr(), _287417_d,_286938_si);
	};
	return _229a6cbea_eval_obj_sub_ident(_self_.ptr(), _287417_d,_286938_si);
}



inline jule::Ptr<_229a527d4_Data> _229a6d316_eval_tuple(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d2d341_TupleExpr> _288634_tup) {
	jule::Ptr<_229a87aa0_Tuple> _288717_tup_t = jule::new_ptr<_229a87aa0_Tuple>(_229a87aa0_Tuple{});;
	_288717_tup_t.get()._field_types=jule::Slice<jule::Ptr<_229a7d359_TypeKind>>::alloc(0LL,_288634_tup.get()._field_expr.len());
	jule::Ptr<_228de23e4_TupleExprModel> _289017_model = jule::new_ptr<_228de23e4_TupleExprModel>(_228de23e4_TupleExprModel{._field_datas=jule::Slice<jule::Ptr<_229a527d4_Data>>::alloc(0LL,_288634_tup.get()._field_expr.len())});;
	jule::Bool _289417_ok = true;;
	{
		auto &expr = _288634_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_22b5005e3:;
		if (it != expr.end()) {
			jule::Ptr<_228d2c6b4_Expr> _289521_expr = *it;
			{
				jule::Ptr<_229a527d4_Data> _289621_d = _229a6e405_eval_expr_kind(_self_, _289521_expr.get()._field_kind);;
				if ((_289621_d == nullptr)) {
					_289417_ok=false;
					goto _iter_next_22b5005e3;
				};
				_288717_tup_t.get()._field_types = jule::alloc_for_append(_288717_tup_t.get()._field_types,1);_288717_tup_t.get()._field_types.__push(_289621_d.get()._field_kind);;
				_289017_model.get()._field_datas = jule::alloc_for_append(_289017_model.get()._field_datas,1);_289017_model.get()._field_datas.__push(_289621_d);;
			}
			_iter_next_22b5005e3:;
			++it;
			goto _iter_begin_22b5005e3;
		}
		_iter_end_22b5005e3:;
	};
	if ((!(_289417_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_288717_tup_t, 9)}), ._field_model=static_cast<jule::Any>(_289017_model), });
}



inline jule::Ptr<_229a527d4_Data> _229a6d6bd_eval_map(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_229a885c8_Map> _291532_m, jule::Ptr<_228d330d2_BraceLit> _291545_lit) {
	jule::Ptr<_228de115c_MapExprModel> _291617_model = jule::new_ptr<_228de115c_MapExprModel>(_228de115c_MapExprModel{._field_key_kind=_291532_m.get()._field_key, ._field_val_kind=_291532_m.get()._field_val, });;
	{
		auto &expr = _291545_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_22b5038d2:;
		if (it != expr.end()) {
			jule::Ptr<_228d2c6b4_Expr> _292121_expr = *it;
			{
				{
					auto &_match_expr{ _292121_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_228d33ae9_KeyValPair>>()) {
						_case_begin_22b50441b:;
						{
							goto _match_end_22b5041eb;
						}
					}
					else {
						_case_begin_22b504372:;
						{
							_229a5485d_push_err(_self_.ptr(), _291545_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_22b5041eb:;
				};
				jule::Ptr<_228d33ae9_KeyValPair> _293121_pair = _292121_expr.get()._field_kind.operator jule::Ptr<_228d33ae9_KeyValPair>();;
				jule::Ptr<_229a527d4_Data> _293321_key = _229a6e405_eval_expr_kind(_self_, _293121_pair.get()._field_key.get()._field_kind);;
				if ((_293321_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_229a527d4_Data> _293821_val = _229a6e405_eval_expr_kind(_self_, _293121_pair.get()._field_val.get()._field_kind);;
				if ((_293821_val == nullptr)) {
					return nullptr;
				};
				_2299e705e_check_assign_type(_self_.get()._field_s, false,_291532_m.get()._field_key,_293321_key,_293121_pair.get()._field_colon);
				_2299e705e_check_assign_type(_self_.get()._field_s, false,_291532_m.get()._field_val,_293821_val,_293121_pair.get()._field_colon);
				_291617_model.get()._field_entries = jule::alloc_for_append(_291617_model.get()._field_entries,1);_291617_model.get()._field_entries.__push(jule::new_ptr<_228de0e70_KeyValPairExprModel>(_228de0e70_KeyValPairExprModel{._field_key=_293321_key.get()._field_model, ._field_val=_293821_val.get()._field_model}));;
			}
			_iter_next_22b5038d2:;
			++it;
			goto _iter_begin_22b5038d2;
		}
		_iter_end_22b5038d2:;
	};
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_291532_m, 10)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_291617_model), });
}



inline jule::Ptr<_229a527d4_Data> _229a6d9cb_eval_brace_lit(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d330d2_BraceLit> _295938_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_22b508c28:;
			{
				_229a5485d_push_err(_self_.ptr(), _295938_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_229a81d96_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_22b508c8e:;
			{
				return _229a6d6bd_eval_map(_self_, _229a81d96_map(_self_.get()._field_prefix.ptr()),_295938_lit);
			}
		}
		else if ((_229a818bd_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_22b508d05:;
			{
				return _229a65808_eval_struct_lit_explicit(_self_, _229a818bd_strct(_self_.get()._field_prefix.ptr()),_295938_lit.get()._field_exprs,_295938_lit.get()._field_token);
			}
		}
		else {
			_case_begin_22b508b6d:;
			{
				_229a5485d_push_err(_self_.ptr(), _295938_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22b508ab3:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6dcd9_eval_anon_fn(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d39ea7_FnDecl> _297436_decl) {
	_229a8b7b8_TypeChecker _297517_tc = _229a8b7b8_TypeChecker{._field_s=_self_.get()._field_s, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_228de996d_FnIns> _297917_ins = _229a9310a_build_fn(&_297517_tc, _297436_decl);;
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_2299bd7e9_ScopeChecker>>()) {
			_case_begin_22b50caa6:;
			{
				jule::Ptr<_2299bd7e9_ScopeChecker> _298221_sc = _self_.get()._field_lookup.operator jule::Ptr<_2299bd7e9_ScopeChecker>();;
				jule::Ptr<_2299bd7e9_ScopeChecker> _298321_scc = _2299cdd8c_new_child_checker(_298221_sc);;
				_298321_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2299bc562_ScopeLabel>>>(nullptr);
				_298321_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2299bc9d5_ScopeGoto>>>(nullptr);
				_298321_scc.get()._field_owner=nullptr;
				_298321_scc.get()._field_child_index=0LL;
				_298321_scc.get()._field_it=0LLU;
				_298321_scc.get()._field_cse=0LLU;
				_298321_scc.get()._field_owner=_297917_ins;
				_229a059eb_check_fn_ins_sc(_self_.get()._field_s.ptr(), _297917_ins,_298321_scc);
			}
		}
		else {
			_case_begin_22b50ce91:;
			{
				_229a06090_check_fn_ins(_self_.get()._field_s, _297917_ins);
			}
		}
		_match_end_22b50ce3b:;
	};
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_297917_ins, 1)}), ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de0c83_AnonFnExprModel>(_228de0c83_AnonFnExprModel{._field_func=_297917_ins, ._field_global=_229a5550c_is_global(_self_.ptr())})), });
}



inline jule::Ptr<_229a527d4_Data> _229a6e0e7_eval_binop(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d31443_BinopExpr> _300534_op) {
	_229a71c32_BinaryEval _300617_bs = static__229a722e8_new_plain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_229a82d31_Prim> _301017_prim = _229a8046b_prim(_self_.get()._field_prefix.ptr());;
		if (((_301017_prim == nullptr) || (!(_2299b6528_is_num(_229a83194_to_str(_301017_prim.ptr())))))) {
			jule::Ptr<_229a7d359_TypeKind> _301225_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_301225_prefix;
			});;
			return _229a7763e_eval(&_300617_bs, _300534_op);
		};
	};
	return _229a7763e_eval(&_300617_bs, _300534_op);
}



inline jule::Ptr<_229a527d4_Data> _229a6e405_eval_expr_kind(jule::Ptr<_229a54352_Eval> _self_, jule::Any _302238_kind) {
	{
		auto &_match_expr{ _302238_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d2c9a0_RangeExpr>>()) {
			_case_begin_22b5154b5:;
			{
				jule::Ptr<_228d2c9a0_RangeExpr> _302521_e = _302238_kind.operator jule::Ptr<_228d2c9a0_RangeExpr>();;
				return _229a6e405_eval_expr_kind(_self_, _302521_e.get()._field_expr.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2d6e8_LitExpr>>()) {
			_case_begin_22b51563b:;
			{
				return _229a571ac_eval_lit(_self_.ptr(), _302238_kind.operator jule::Ptr<_228d2d6e8_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2e72c_IdentExpr>>()) {
			_case_begin_22b5156a2:;
			{
				return _229a5b69a_eval_ident(_self_.ptr(), _302238_kind.operator jule::Ptr<_228d2e72c_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2ee36_UnaryExpr>>()) {
			_case_begin_22b515718:;
			{
				return _229a5b9a8_eval_unary(_self_, _302238_kind.operator jule::Ptr<_228d2ee36_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d302dd_VariadicExpr>>()) {
			_case_begin_22b51577e:;
			{
				return _229a5bcb6_eval_variadic(_self_, _302238_kind.operator jule::Ptr<_228d302dd_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2de02_UnsafeExpr>>()) {
			_case_begin_22b5157e5:;
			{
				return _229a5c0c4_eval_unsafe(_self_, _302238_kind.operator jule::Ptr<_228d2de02_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3406c_SliceExpr>>()) {
			_case_begin_22b51586c:;
			{
				return _229a5cb41_eval_slice_expr(_self_, _302238_kind.operator jule::Ptr<_228d3406c_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3490d_IndexingExpr>>()) {
			_case_begin_22b515927:;
			{
				return _229a60a56_eval_indexing(_self_, _302238_kind.operator jule::Ptr<_228d3490d_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d35018_SlicingExpr>>()) {
			_case_begin_22b51598d:;
			{
				return _229a61c22_eval_slicing(_self_, _302238_kind.operator jule::Ptr<_228d35018_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d30695_CastExpr>>()) {
			_case_begin_22b515a04:;
			{
				return _229a65077_eval_cast(_self_, _302238_kind.operator jule::Ptr<_228d30695_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d30a4c_NsSelectionExpr>>()) {
			_case_begin_22b515a6a:;
			{
				return _229a65385_eval_ns_selection(_self_.ptr(), _302238_kind.operator jule::Ptr<_228d30a4c_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d32b5e_StructLit>>()) {
			_case_begin_22b515ae2:;
			{
				return _229a65b27_eval_struct_lit(_self_, _302238_kind.operator jule::Ptr<_228d32b5e_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d28193_TypeDecl>>()) {
			_case_begin_22b515b69:;
			{
				return _229a65e35_eval_type(_self_.ptr(), _302238_kind.operator jule::Ptr<_228d28193_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d31982_FnCallExpr>>()) {
			_case_begin_22b515be1:;
			{
				return _229a673ed_eval_fn_call(_self_, _302238_kind.operator jule::Ptr<_228d31982_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d30ec0_SubIdentExpr>>()) {
			_case_begin_22b515c68:;
			{
				return _229a6d008_eval_sub_ident(_self_, _302238_kind.operator jule::Ptr<_228d30ec0_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2d341_TupleExpr>>()) {
			_case_begin_22b515ce0:;
			{
				return _229a6d316_eval_tuple(_self_, _302238_kind.operator jule::Ptr<_228d2d341_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d330d2_BraceLit>>()) {
			_case_begin_22b515d67:;
			{
				return _229a6d9cb_eval_brace_lit(_self_, _302238_kind.operator jule::Ptr<_228d330d2_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d39ea7_FnDecl>>()) {
			_case_begin_22b515dde:;
			{
				return _229a6dcd9_eval_anon_fn(_self_, _302238_kind.operator jule::Ptr<_228d39ea7_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d31443_BinopExpr>>()) {
			_case_begin_22b515e66:;
			{
				return _229a6e0e7_eval_binop(_self_, _302238_kind.operator jule::Ptr<_228d31443_BinopExpr>());
			}
		}
		else {
			_case_begin_22b5151eb:;
			{
				return nullptr;
			}
		}
		_match_end_22b51510d:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a6e713_eval(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d2c6b4_Expr> _307028_expr) {
	jule::Ptr<_229a527d4_Data> _307117_d = _229a6e405_eval_expr_kind(_self_, _307028_expr.get()._field_kind);;
	if (((_307117_d == nullptr) || (_307117_d.get()._field_kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_229a81659_fnc(_307117_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b52112a:;
			{
				jule::Ptr<_228de996d_FnIns> _307821_f = _229a81659_fnc(_307117_d.get()._field_kind.ptr());;
				if (_228dea6b6_is_builtin(_307821_f.ptr())) {
					goto _match_end_22b520ec6;
				};
				if ((_307821_f.get()._field_generics.len() != _307821_f.get()._field_decl.get()._field_generics.len())) {
					_2299e1454_push_err(_self_.get()._field_s.ptr(), _307028_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (_228de7493_is_method(_307821_f.get()._field_decl.ptr())) {
					_2299e1454_push_err(_self_.get()._field_s.ptr(), _307028_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_22b520ec6:;
	};
	return _307117_d;
}



inline jule::Ptr<_229a527d4_Data> _229a6ea21_eval_expr(jule::Ptr<_229a54352_Eval> _self_, jule::Ptr<_228d2c6b4_Expr> _309633_expr) {
	jule::Ptr<_229a527d4_Data> _309717_d = _229a6e713_eval(_self_, _309633_expr);;
	{
		
		if ((_309717_d == nullptr)) {
			_case_begin_22b524969:;
			{
				return nullptr;
			}
		}
		else if (_309717_d.get()._field_decl) {
			_case_begin_22b5249e1:;
			{
				_229a5485d_push_err(_self_.ptr(), _309633_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_22b5248d1:;
			{
				return _309717_d;
			}
		}
		_match_end_22b52486a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _229a54352_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _229a6ee94_UnaryEval static__229a7044a_new(jule::Ptr<_229a54352_Eval> _311723_e) {
	return _229a6ee94_UnaryEval{._field_e=_311723_e, };
}



inline void _229a70626_minus(_229a6ee94_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_22b5265b4:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_229a8046b_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b526a15:;
			{
				if ((!(_2299b6528_is_num(_229a7d755_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_229a818bd_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b526a7b:;
			{
				if ((_229a818bd_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_22b52622e:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_22b52611e:;
	};
	if (_229a53197_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_228dda310_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_22b529c49:;
				{
					_228dd941e_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(_228dd7e67_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_228dd985e_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_22b529cc1:;
				{
					_228dd8929_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_228dd74b6_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_228dd9ac3_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_22b529d48:;
				{
					_228dd8929_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_228dd81cb_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_22b529b17:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228ddec2c_UnaryExprModel>(_228ddec2c_UnaryExprModel{._field_expr=jule::new_ptr<_229a527d4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _229a70802_plus(_229a6ee94_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_22b52e479:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_229a8046b_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b52e8b9:;
			{
				if ((!(_2299b6528_is_num(_229a7d755_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_229a818bd_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b52e930:;
			{
				if ((_229a818bd_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_22b52e0c2:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_22b52dee5:;
	};
	if (_229a53197_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_228dda310_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_22b532aed:;
				{
					_228dd941e_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(_228dd7e67_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_228dd985e_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_22b532b75:;
				{
					_228dd8929_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_228dd74b6_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_228dd9ac3_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_22b532bec:;
				{
					_228dd8929_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_228dd81cb_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_22b5329bb:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228ddec2c_UnaryExprModel>(_228ddec2c_UnaryExprModel{._field_expr=jule::new_ptr<_229a527d4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _229a709cd_caret(_229a6ee94_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_22b53730b:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_229a8046b_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b53774b:;
			{
				if ((!(_2299b5e62_is_int(_229a7d755_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_229a818bd_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5377b2:;
			{
				if ((_229a818bd_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_22b536e54:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_22b536d77:;
	};
	if (_229a53197_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_228dd985e_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_22b53a96e:;
				{
					_228dd8929_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(_228dd74b6_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_228dd9ac3_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_22b53a9e6:;
				{
					_228dd8b9e_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(_228dd772a_read_u64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_22b53a84d:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228ddec2c_UnaryExprModel>(_228ddec2c_UnaryExprModel{._field_expr=jule::new_ptr<_229a527d4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _229a70ba9_excl(_229a6ee94_UnaryEval* _self_) {
	jule::Ptr<_229a82d31_Prim> _323613_t = _229a8046b_prim((*_self_)._field_d.get()._field_kind.ptr());;
	if (((_323613_t == nullptr) || (!(_229a85d01_is_bool(_323613_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_229a53197_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_228dd9d37_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_22b540523:;
				{
					_228dd8e24_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_228dd798e_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_22b540413:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228ddec2c_UnaryExprModel>(_228ddec2c_UnaryExprModel{._field_expr=jule::new_ptr<_229a527d4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _229a70d85_star(_229a6ee94_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228ddec2c_UnaryExprModel>(_228ddec2c_UnaryExprModel{._field_expr=jule::new_ptr<_229a527d4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
	{
		
		if ((_229a80944_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b543416:;
			{
				if ((!(_229a55298_is_unsafe((*_self_)._field_e.ptr())))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_229a89b29_Ptr> _326821_t = _229a80944_ptr((*_self_)._field_d.get()._field_kind.ptr());;
				if (_229a8a5ec_is_unsafe(_326821_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_kind=_326821_t.get()._field_elem;
			}
		}
		else if ((_229a806d0_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b543867:;
			{
				(*_self_)._field_d.get()._field_kind=_229a806d0_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_22b543070:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_22b543009:;
	};
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _229a71061_amper(_229a6ee94_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228de0106_StructLitExprModel>>()) {
			_case_begin_22b54744d:;
			{
				jule::Ptr<_228de0106_StructLitExprModel> _328821_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_228de0106_StructLitExprModel>();;
				_229a783cb_make_struct_lit_alloc((*_self_)._field_d,_328821_lit);
			}
		}
		else {
			_case_begin_22b5477b1:;
			{
				{
					
					if (_229a95283_can_get_ptr((*_self_)._field_d)) {
						_case_begin_22b5483e9:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_229a89b29_Ptr>(_229a89b29_Ptr{._field_elem=(*_self_)._field_d.get()._field_kind}), 12)});
							(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228ddec2c_UnaryExprModel>(_228ddec2c_UnaryExprModel{._field_expr=jule::new_ptr<_229a527d4_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
						}
					}
					else {
						_case_begin_22b547d55:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_22b547c78:;
				};
			}
		}
		_match_end_22b547739:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	};
}



inline void _229a7123c_type_decl(_229a6ee94_UnaryEval* _self_) {
	_229a8b7b8_TypeChecker _331217_tc = _229a8b7b8_TypeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_error_token=(*_self_)._field_u.get()._field_op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_22b54b584:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a91999_build_ptr_from_type(&_331217_tc, (*_self_)._field_d.get()._field_kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_22b54da09:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a9137d_build_sptr_from_type(&_331217_tc, (*_self_)._field_d.get()._field_kind), 7)});
			}
		}
		else {
			_case_begin_22b54c332:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_22b54c2cc:;
	};
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _229a71418_eval_data(_229a6ee94_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_22b54c398:;
			{
				jule::Ptr<_229a7d359_TypeKind> _333421_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_229a6e405_eval_expr_kind((*_self_)._field_e, (*_self_)._field_u.get()._field_expr.get()._field_kind);
				(*_self_)._field_e.get()._field_prefix=_333421_prefix;
			}
		}
		else {
			_case_begin_22b5509ea:;
			{
				(*_self_)._field_d=_229a6e405_eval_expr_kind((*_self_)._field_e, (*_self_)._field_u.get()._field_expr.get()._field_kind);
			}
		}
		_match_end_22b550940:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a716e3_eval(_229a6ee94_UnaryEval* _self_, jule::Ptr<_228d2ee36_UnaryExpr> _334327_u) {
	(*_self_)._field_u=_334327_u;
	_229a71418_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_decl) {
		_229a7123c_type_decl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_229a7d359_TypeKind> _335413_kind = (*_self_)._field_d.get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_22b5551e7:;
			{
				_229a70626_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_22b554c41:;
			{
				_229a70802_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_22b554ca7:;
			{
				_229a709cd_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_22b554d1d:;
			{
				_229a70ba9_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_22b554d84:;
			{
				_229a70d85_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_22b5553b2:;
			{
				_229a71061_amper(&(*_self_));
			}
		}
		else {
			_case_begin_22b554bca:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_22b554b75:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_22b55721b:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_229a7d755_to_str(_335413_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_229a53197_is_const((*_self_)._field_d.ptr())) {
			_case_begin_22b5556d1:;
			{
				(*_self_)._field_d.get()._field_model=static_cast<jule::Any>((*_self_)._field_d.get()._field_constant);
			}
		}
		_match_end_22b5571a5:;
	};
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _229a6ee94_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _229a71c32_BinaryEval static__229a722e8_new_plain(jule::Ptr<_229a54352_Eval> _339229_e) {
	return _229a71c32_BinaryEval{._field_e=_339229_e, };
}



inline _229a71c32_BinaryEval static__229a72639_new(jule::Ptr<_229a54352_Eval> _339823_e, jule::Ptr<_2276b1a1c_Token> _339837_op) {
	return _229a71c32_BinaryEval{._field_e=_339823_e, ._field_op=_339837_op};
}



inline jule::Bool _229a728c0_check_type_compatibility(_229a71c32_BinaryEval* _self_) {
	return _2299e74d2_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _229a72b78_check_struct_common_operator_compatibility(_229a71c32_BinaryEval* _self_) {
	jule::Ptr<_228de996d_FnIns> _341217_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_22b55bd58:;
			{
				_341217_overload=_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_22b55bdbe:;
			{
				_341217_overload=_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_22b55cde2:;
			{
				_341217_overload=_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_22b55ce58:;
			{
				_341217_overload=_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_22b55cebe:;
			{
				_341217_overload=_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_22b55d035:;
			{
				_341217_overload=_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_22b55d09b:;
			{
				_341217_overload=_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_22b55d112:;
			{
				_341217_overload=_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_22b55d189:;
			{
				_341217_overload=_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_22b55d200:;
			{
				_341217_overload=_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_22b55bc26:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_22b55baa0:;
	};
	if ((_341217_overload == nullptr)) {
		_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	};
	jule::Ptr<_228de8a9e_ParamIns> _344417_p = _341217_overload.get()._field_params[1LL];;
	return _2299e705e_check_assign_type((*_self_)._field_e.get()._field_s, _344417_p.get()._field_decl.get()._field_reference,_344417_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_229a527d4_Data> _229a72e20_eval_nil(_229a71c32_BinaryEval* _self_) {
	if ((!(_229a7e9ba_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_229a7d755_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22b567193:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22b56712c:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_22b567094:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a73184_eval_enum(_229a71c32_BinaryEval* _self_) {
	jule::Ptr<_228e0dcc3_Enum> _346917_enm = _229a80ba8_enm((*_self_)._field_l.get()._field_kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22b56933d:;
			{
				jule::Ptr<_229a7d359_TypeKind> _347321_rkind = (*_self_)._field_r.get()._field_kind;;
				if ((_229a80ba8_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_347321_rkind=_229a80ba8_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				};
				if ((!(_2299e74d2_check_type_compatibility((*_self_)._field_e.get()._field_s, _346917_enm.get()._field_kind.get()._field_kind,_347321_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_22b5692b6:;
	};
	if (((_229a80ba8_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_346917_enm != _229a80ba8_enm((*_self_)._field_r.get()._field_kind.ptr())))) {
		_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_346917_enm.get()._field_ident),jule::Any(_229a7d755_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_22b56d7c6:;
			{
				if ((!(_2299b6528_is_num(_229a7d755_to_str(_346917_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_346917_enm.get()._field_ident)}));
					return nullptr;
				};
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_22b56d83c:;
			{
				if (((_229a8046b_prim(_346917_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_2299b5e62_is_int(_229a83194_to_str(_229a8046b_prim(_346917_enm.get()._field_kind.get()._field_kind.ptr()).ptr())))))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_346917_enm.get()._field_ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_22b56d760:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_346917_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_22b56d672:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a733e8_eval_type_enum(_229a71c32_BinaryEval* _self_) {
	jule::Ptr<_2292e1e75_TypeEnum> _352017_enm = _229a80e1c_tenm((*_self_)._field_l.get()._field_kind.ptr());;
	if ((!(_229a728c0_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22b574854:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22b57405c:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_22916e011_to_str(_352017_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22b5746cd:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a7365c_eval_sptr(_229a71c32_BinaryEval* _self_) {
	if ((!(_229a728c0_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22b5768de:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22b576878:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22b575c95:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a738c1_eval_ptr(_229a71c32_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_22b578836:;
			{
				if ((!(_229a728c0_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_22b57889c:;
			{
				if ((_229a80944_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_229a8a5ec_is_unsafe(_229a80944_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				};
				if ((!(_229a79487_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_22b577ed9:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22b577e2e:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a73b35_eval_arr(_229a71c32_BinaryEval* _self_) {
	if ((!(_229a728c0_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22b57e96e:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22b57e908:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22b57a151:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a73d99_eval_slc(_229a71c32_BinaryEval* _self_) {
	if ((!(_229a728c0_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22b581bb3:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22b581b4c:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22b581069:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a7410d_eval_fn(_229a71c32_BinaryEval* _self_) {
	if ((!(_229a728c0_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22b583e07:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22b583d91:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22b5832ad:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a74372_eval_struct(_229a71c32_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_22b585568:;
			{
				if ((_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_22b5855ce:;
			{
				if ((_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_22b585656:;
			{
				if ((_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_22b585d4e:;
			{
				if ((_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22b585db5:;
			{
				if ((!(_229a728c0_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_22b585447:;
	};
	if ((!(_229a72b78_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_229a527d4_Data> _229a745d6_eval_trait(_229a71c32_BinaryEval* _self_) {
	if ((!(_229a728c0_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22b5902ed:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22b590287:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22b590100:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a7484a_eval_any(_229a71c32_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_22b592245:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22b5918e8:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_22b59183d:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a74aae_eval_bool(_229a71c32_BinaryEval* _self_) {
	if ((!(_229a728c0_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_22b59405a:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_22b593ee4:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_229a7d755_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_22b593411:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a74d23_eval_str(_229a71c32_BinaryEval* _self_) {
	jule::Str _376217_rk = _229a7d755_to_str((*_self_)._field_r.get()._field_kind.ptr());;
	if ((_376217_rk != jule::Str("str", 3))) {
		_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_376217_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_22b597239:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_22b5972a0:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_22b59616c:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_22b59639d:;
	};
}



inline void _229a74eee_set_type_to_greater(_229a71c32_BinaryEval* _self_) {
	if (_229a53197_is_const((*_self_)._field_l.ptr())) {
		if ((!(_229a53197_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_229a53197_is_const((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_2299b489a_is_greater(_229a8046b_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_229a8046b_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	};
}



inline void _229a75241_check_mod_data(_229a71c32_BinaryEval* _self_, jule::Ptr<_229a527d4_Data>& _380538_d) {
	if ((!(_229a53197_is_const(_380538_d.ptr())))) {
		if (((_229a8046b_prim(_380538_d.get()._field_kind.ptr()) == nullptr) || (!(_2299b5e62_is_int(_229a8046b_prim(_380538_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_229a23c17_sig_assignable(jule::Str("i64", 3),_380538_d)) {
			_case_begin_22b59e0a9:;
			{
				_228dd8929_set_i64(_380538_d.get()._field_constant.ptr(), static_cast<jule::I64>(_228dd81cb_as_i64(_380538_d.get()._field_constant.ptr())));
			}
		}
		else if (_229a3a305_unsig_assignable(jule::Str("u64", 3),_380538_d)) {
			_case_begin_22b59dc8a:;
			{
				_228dd8b9e_set_u64(_380538_d.get()._field_constant.ptr(), static_cast<jule::U64>(_228dd8440_as_u64(_380538_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_22b59dc24:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_22b59c5b3:;
	};
}



inline void _229a7541c_mod(_229a71c32_BinaryEval* _self_) {
	_229a75241_check_mod_data(&(*_self_), (*_self_)._field_l);
	_229a75241_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _229a757e6_numbers_are_compatibile(_229a71c32_BinaryEval* _self_, jule::Str& _382739_lk, jule::Str& _382749_rk) {
	if ((!(_2299b6528_is_num(_382749_rk)))) {
		return false;
	};
	if (_229a53197_is_const((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_382739_lk == jule::Str("f32", 3))) {
		if (_229a53197_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_382749_rk == jule::Str("f32", 3));
	};
	if ((_382739_lk == jule::Str("f64", 3))) {
		if (_229a53197_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_382749_rk == jule::Str("f64", 3));
	};
	if (_229a53197_is_const((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_382739_lk == _382749_rk);
}



inline jule::Ptr<_229a527d4_Data> _229a75a6b_eval_float(_229a71c32_BinaryEval* _self_) {
	jule::Str _385713_lk = _229a8046b_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _385813_rk = _229a8046b_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	if ((!(_229a757e6_numbers_are_compatibile(&(*_self_), _385713_lk,_385813_rk)))) {
		_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_385713_lk),jule::Any(_385813_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_22b5a6a95:;
			{
				if (((!(_229a53197_is_const((*_self_)._field_l.ptr()))) || (!(_229a3a437_int_assignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_385713_lk),jule::Any(_385813_rk)}));
					return nullptr;
				};
				if (((!(_229a53197_is_const((*_self_)._field_r.ptr()))) || (!(_229a3a437_int_assignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_385713_lk),jule::Any(_385813_rk)}));
					return nullptr;
				};
				_228dd8929_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_228dd81cb_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_228dd8b9e_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_228dd8440_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_229a78d05_is_ok_for_shifting((*_self_)._field_r)))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_22b5a69b8:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_22b5ab43a:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_22b5ab968:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_22b5ac0d9:;
			{
				_229a74eee_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_22b5ac150:;
			{
				if ((!(_2299b5e62_is_int(_385813_rk)))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_385713_lk),jule::Any(_385813_rk)}));
					return nullptr;
				};
				_229a7541c_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_22b5ac4d5:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b5ac480:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a75cd0_eval_int(_229a71c32_BinaryEval* _self_) {
	jule::Str _392113_lk = _229a8046b_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _392213_rk = _229a8046b_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_22b5ac1b6:;
			{
				if (((!(_2299b5e62_is_int(_392113_lk))) || (!(_2299b5e62_is_int(_392213_rk))))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_392113_lk),jule::Any(_392213_rk)}));
					return nullptr;
				};
				if ((!(_229a78d05_is_ok_for_shifting((*_self_)._field_r)))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_22b5b17d6:;
	};
	if ((!(_229a757e6_numbers_are_compatibile(&(*_self_), _392113_lk,_392213_rk)))) {
		_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_392113_lk),jule::Any(_392213_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_22b5b4960:;
			{
				return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_22b5b490a:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_22b5b5246:;
			{
				_229a74eee_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_22b5b52ac:;
			{
				_229a7541c_mod(&(*_self_));
				_229a74eee_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_22b5b5642:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_22b5b55dc:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a76044_eval_prim(_229a71c32_BinaryEval* _self_) {
	jule::Ptr<_229a82d31_Prim> _398013_prim = _229a8046b_prim((*_self_)._field_l.get()._field_kind.ptr());;
	{
		
		if (_229a85d01_is_bool(_398013_prim.ptr())) {
			_case_begin_22b5b8986:;
			{
				return _229a74aae_eval_bool(&(*_self_));
			}
		}
		else if (_229a86065_is_str(_398013_prim.ptr())) {
			_case_begin_22b5b8a0d:;
			{
				return _229a74d23_eval_str(&(*_self_));
			}
		}
		_match_end_22b5b88cb:;
	};
	if ((_229a8046b_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_229a83194_to_str(_398013_prim.ptr())),jule::Any(_229a7d755_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_2299b6281_is_float(_398013_prim.get()._field_kind)) {
			_case_begin_22b5bb3e5:;
			{
				return _229a75a6b_eval_float(&(*_self_));
			}
		}
		else if (_2299b5e62_is_int(_398013_prim.get()._field_kind)) {
			_case_begin_22b5bac63:;
			{
				return _229a75cd0_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_22b5babec:;
			{
				return nullptr;
			}
		}
		_match_end_22b5baa21:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229a762a8_eval_op(_229a71c32_BinaryEval* _self_) {
	{
		
		if (_229a7e4e2_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_22b5bb67b:;
			{
				_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_229a8046b_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _229a862c9_is_any(_229a8046b_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr()))) {
			_case_begin_22b5bcacd:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_22b5bc836;
			}
		}
		else if (((_229a8046b_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _229a862c9_is_any(_229a8046b_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr()))) {
			_case_begin_22b5bc836:;
			{
				return _229a7484a_eval_any(&(*_self_));
			}
		}
		else if ((_229a80e1c_tenm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bc89c:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_22b5bc913;
			}
		}
		else if ((_229a80e1c_tenm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bc913:;
			{
				return _229a733e8_eval_type_enum(&(*_self_));
			}
		}
		else if (_229a7e27d_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_22b5bc979:;
			{
				return _229a72e20_eval_nil(&(*_self_));
			}
		}
		else if ((_229a80ba8_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bc9e0:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_22b5bcb99;
			}
		}
		else if ((_229a80ba8_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bcb99:;
			{
				return _229a73184_eval_enum(&(*_self_));
			}
		}
		else if ((_229a806d0_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bcc10:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_22b5bcc76;
			}
		}
		else if ((_229a806d0_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bcc76:;
			{
				return _229a7365c_eval_sptr(&(*_self_));
			}
		}
		else if ((_229a80944_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bcced:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_22b5bcd75;
			}
		}
		else if ((_229a80944_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bcd75:;
			{
				return _229a738c1_eval_ptr(&(*_self_));
			}
		}
		else if ((_229a81181_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bcdec:;
			{
				return _229a73b35_eval_arr(&(*_self_));
			}
		}
		else if ((_229a813e5_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bce74:;
			{
				return _229a73d99_eval_slc(&(*_self_));
			}
		}
		else if ((_229a81659_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bceeb:;
			{
				return _229a7410d_eval_fn(&(*_self_));
			}
		}
		else if ((_229a81b32_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bd073:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_22b5bd0ea;
			}
		}
		else if ((_229a81b32_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bd0ea:;
			{
				return _229a745d6_eval_trait(&(*_self_));
			}
		}
		else if ((_229a818bd_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bd172:;
			{
				return _229a74372_eval_struct(&(*_self_));
			}
		}
		else if ((_229a8046b_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22b5bd1e9:;
			{
				return _229a76044_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_22b5bb48e:;
			{
				return nullptr;
			}
		}
		_match_end_22b5bc270:;
	};
}



inline void _229a7652d_eval_const(_229a71c32_BinaryEval* _self_, jule::Ptr<_229a527d4_Data>& _405534_d) {
	{
		
		if ((_405534_d == nullptr)) {
			_case_begin_22b5cbe94:;
			{
				return;;
			}
		}
		else if ((!(_229a53197_is_const((*_self_)._field_l.ptr()))) || (!(_229a53197_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_22b5cc637:;
			{
				_405534_d.get()._field_constant=nullptr;
				return;;
			}
		}
		_match_end_22b5cbd73:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_22b5cdbcc:;
			{
				_405534_d.get()._field_constant=static__228dd6680_new_bool(((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_22b5cdc43:;
			{
				_405534_d.get()._field_constant=static__228dd6680_new_bool(((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_22b5cdca9:;
			{
				_405534_d.get()._field_constant=static__228dd6680_new_bool(_228ddae9d_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_22b5cdd20:;
			{
				_405534_d.get()._field_constant=static__228dd6680_new_bool(_228ddab90_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_22b5cdd86:;
			{
				_405534_d.get()._field_constant=static__228dd6680_new_bool(((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_22b5cddec:;
			{
				_405534_d.get()._field_constant=static__228dd6680_new_bool(((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_22b5cde63:;
			{
				_405534_d.get()._field_constant=static__228dd6680_new_bool(((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_22b5cdec9:;
			{
				_405534_d.get()._field_constant=static__228dd6680_new_bool(((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_22b5ce040:;
			{
				_228ddc301_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_405534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_22b5ce0a6:;
			{
				_228ddc60e_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_405534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_22b5ce11c:;
			{
				_228ddc91c_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_405534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_22b5ce183:;
			{
				jule::Bool _409217_ok = _228ddcc2a_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_409217_ok)) && (_228dd86a4_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_405534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_229a82d31_Prim> _409721_prim = _229a8046b_prim(_405534_d.get()._field_kind.ptr());;
				{
					
					if (_2299b58ce_is_sig_int(_409721_prim.get()._field_kind)) {
						_case_begin_22b5da8ed:;
						{
							_228dd8929_set_i64(_405534_d.get()._field_constant.ptr(), static_cast<jule::I64>(_228dd81cb_as_i64(_405534_d.get()._field_constant.ptr())));
						}
					}
					else if (_2299b5bba_is_unsig_int(_409721_prim.get()._field_kind)) {
						_case_begin_22b5da975:;
						{
							_228dd8b9e_set_u64(_405534_d.get()._field_constant.ptr(), static_cast<jule::U64>(_228dd8440_as_u64(_405534_d.get()._field_constant.ptr())));
						}
					}
					_match_end_22b5da843:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_22b5ce20a:;
			{
				jule::Bool _410517_ok = _228ddd038_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_410517_ok)) && (_228dd86a4_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_405534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_22b5ce282:;
			{
				_228ddd654_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_405534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_22b5ce309:;
			{
				_228ddd346_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_405534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_22b5ce381:;
			{
				_228ddd962_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_405534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_22b5ce408:;
			{
				_228dddc70_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_405534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_22b5ce480:;
			{
				_228dde07d_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_405534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_22b5cd44b:;
	};
	_229a7a224_apply_cast_model_by_enum(_405534_d,_229a80ba8_enm(_405534_d.get()._field_kind.ptr()));
	jule::Ptr<_229a82d31_Prim> _412917_prim = _229a8046b_prim(_405534_d.get()._field_kind.ptr());;
	if (((_412917_prim == nullptr) || (!(_2299b6528_is_num(_229a83194_to_str(_412917_prim.ptr())))))) {
		_405534_d.get()._field_model=static_cast<jule::Any>(_405534_d.get()._field_constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant))) {
			_405534_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_412917_prim=_229a8046b_prim(_405534_d.get()._field_kind.ptr());
		};
	};
	_229a780ce_fit_bitsize(_405534_d);
	_229a7a4dd_cast_const_by_type(_412917_prim.get()._field_kind,_405534_d);
}



inline void _229a767a3_check_data(_229a71c32_BinaryEval* _self_, jule::Ptr<_229a527d4_Data>& _414534_d) {
	jule::Ptr<_228de996d_FnIns> _414613_f = _229a81659_fnc(_414534_d.get()._field_kind.ptr());;
	if ((((_414613_f != nullptr) && (_414613_f.get()._field_decl != nullptr)) && _228de7493_is_method(_414613_f.get()._field_decl.ptr()))) {
		_229a5485d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _229a7697e_check_datas(_229a71c32_BinaryEval* _self_) {
	_229a767a3_check_data(&(*_self_), (*_self_)._field_l);
	_229a767a3_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _229a76c04_set_model(_229a71c32_BinaryEval* _self_, jule::Ptr<_229a527d4_Data>& _415733_d) {
	if (_229a53197_is_const(_415733_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant))) {
			return;;
		};
	};
	jule::Ptr<_229a527d4_Data> _416518_l = (*_self_)._field_l;;
	jule::Ptr<_229a527d4_Data> _416525_r = (*_self_)._field_r;;
	std::tie(_416518_l,_416525_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_229a534a5_good_operand(_416518_l.ptr(), _416525_r)))) {
		std::tie(_416518_l,_416525_r) = std::make_tuple(_416525_r,_416518_l);
	};
	_415733_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228ddea40_BinopExprModel>(_228ddea40_BinopExprModel{._field_left=jule::new_ptr<_228dde853_OperandExprModel>(_228dde853_OperandExprModel{._field_kind=_416518_l.get()._field_kind, ._field_model=_416518_l.get()._field_model}), ._field_right=jule::new_ptr<_228dde853_OperandExprModel>(_228dde853_OperandExprModel{._field_kind=_416525_r.get()._field_kind, ._field_model=_416525_r.get()._field_model}), ._field_op=(*_self_)._field_op}));
}



inline void _229a76e79_post_eval(_229a71c32_BinaryEval* _self_, jule::Ptr<_229a527d4_Data>& _418333_d) {
	_418333_d.get()._field_lvalue=false;
	_229a76c04_set_model(&(*_self_), _418333_d);
}



inline jule::Ptr<_229a527d4_Data> _229a77331_solve_explicit(_229a71c32_BinaryEval* _self_, jule::Ptr<_229a527d4_Data>& _418838_l, jule::Ptr<_229a527d4_Data>& _418853_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_418838_l,_418853_r);
	_229a7697e_check_datas(&(*_self_));
	jule::Ptr<_229a527d4_Data> _419317_d = _229a762a8_eval_op(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_418838_l,_418853_r);
	_229a7652d_eval_const(&(*_self_), _419317_d);
	if ((_419317_d != nullptr)) {
		_419317_d.get()._field_mutable=true;
		_229a76e79_post_eval(&(*_self_), _419317_d);
	};
	return _419317_d;
}



inline jule::Ptr<_229a527d4_Data> _229a7763e_eval(_229a71c32_BinaryEval* _self_, jule::Ptr<_228d31443_BinopExpr>& _420828_op) {
	if ((_420828_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_229a5485d_push_err((*_self_)._field_e.ptr(), _420828_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_229a54b7c_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_229a527d4_Data> _421517_l = _229a6e405_eval_expr_kind((*_self_)._field_e, _420828_op.get()._field_left.get()._field_kind);;
	if (((_421517_l == nullptr) || (_421517_l.get()._field_kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_229a7d359_TypeKind> _422017_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_421517_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_422017_prefix;
	});;
	jule::Ptr<_229a527d4_Data> _422317_r = _229a6e405_eval_expr_kind((*_self_)._field_e, _420828_op.get()._field_right.get()._field_kind);;
	if (((_422317_r == nullptr) || (_422317_r.get()._field_kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_420828_op.get()._field_op;
	jule::Ptr<_229a527d4_Data> _423017_d = _229a77331_solve_explicit(&(*_self_), _421517_l,_422317_r);;
	if ((((_423017_d != nullptr) && _421517_l.get()._field_is_rune) && _422317_r.get()._field_is_rune)) {
		_423017_d.get()._field_is_rune=true;
	};
	return _423017_d;
}







std::ostream &operator<<(std::ostream &_Stream, _229a71c32_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _229a7bb2c_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "constraint:" << _Src._field_constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _229a7c666_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _229a7d755_to_str(_229a7d359_TypeKind* _self_) {
	if (_229a7e27d_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_229a7e019_cpp_linked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_cpp_ident;
	} else {
		_7417_kind+=_229a7ce2a_Kind_mptr_data[((*_self_)._field_kind).type_offset]._229a7c9c9_to_str((*_self_)._field_kind);
	};
	return _7417_kind;
}



inline jule::Bool _229a7da63_equals(jule::Ptr<_229a7d359_TypeKind> _self_, jule::Ptr<_229a7d359_TypeKind> _9026_other) {
	if (_229a7e27d_is_nil(_self_.ptr())) {
		return _229a7e27d_is_nil(_9026_other.ptr());
	};
	if (_229a7e019_cpp_linked(_self_.ptr())) {
		return (_229a7e019_cpp_linked(_9026_other.ptr()) && (_self_.get()._field_cpp_ident == _9026_other.get()._field_cpp_ident));
	};
	return _229a7ce2a_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._229a7ccd7_equals(_self_.get()._field_kind, _9026_other);
}



inline jule::Bool _229a7e019_cpp_linked(_229a7d359_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _229a7e27d_is_nil(_229a7d359_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _229a7e4e2_void(_229a7d359_TypeKind* _self_) {
	jule::Ptr<_229a82d31_Prim> _11313_prim = _229a8046b_prim(&(*_self_));;
	return ((_11313_prim != nullptr) && (_11313_prim.get()._field_kind == jule::Str("void", 4)));
}



inline jule::Bool _229a7e756_mutable(_229a7d359_TypeKind* _self_) {
	{
		_229a7d359_TypeKind* _12021__self = (&((*_self_)));;
		if ((_229a818bd_strct(_12021__self) != nullptr)) {
			return _229a818bd_strct(_12021__self).get()._field_mutable;
		};
		if ((_229a81b32_trt(_12021__self) != nullptr)) {
			return _229a81b32_trt(_12021__self).get()._field_mutable;
		};
		if ((_229a8046b_prim(_12021__self) != nullptr)) {
			jule::Ptr<_229a82d31_Prim> _12921_p = _229a8046b_prim(_12021__self);;
			return _229a862c9_is_any(_12921_p.ptr());
		};
		if ((_229a81181_arr(_12021__self) != nullptr)) {
			return _229a7e756_mutable(_229a81181_arr(_12021__self).get()._field_elem.ptr());
		};
		return (((_229a813e5_slc(_12021__self) != nullptr) || (_229a80944_ptr(_12021__self) != nullptr)) || (_229a806d0_sptr(_12021__self) != nullptr));
	};
}



inline jule::Bool _229a7e9ba_nil_compatible(_229a7d359_TypeKind* _self_) {
	{
		_229a7d359_TypeKind* _14421__self = (&((*_self_)));;
		jule::Ptr<_229a82d31_Prim> _14617_prim = _229a8046b_prim(_14421__self);;
		if (((_14617_prim != nullptr) && _229a862c9_is_any(_14617_prim.ptr()))) {
			return true;
		};
		return (((((((_229a7e27d_is_nil(_14421__self) || (_229a81659_fnc(_14421__self) != nullptr)) || (_229a806d0_sptr(_14421__self) != nullptr)) || (_229a80944_ptr(_14421__self) != nullptr)) || (_229a81b32_trt(_14421__self) != nullptr)) || (_229a813e5_slc(_14421__self) != nullptr)) || (_229a81d96_map(_14421__self) != nullptr)) || (_229a80e1c_tenm(_14421__self) != nullptr));
	};
}



inline jule::Bool _229a7ec2e_performs_rc(_229a7d359_TypeKind* _self_) {
	{
		_229a7d359_TypeKind* _16521__self = (&((*_self_)));;
		return (((_229a806d0_sptr(_16521__self) != nullptr) || (_229a813e5_slc(_16521__self) != nullptr)) || (_229a81b32_trt(_16521__self) != nullptr));
	};
}



inline jule::Bool _229a7ee93_supports_cloning(_229a7d359_TypeKind* _self_) {
	{
		_229a7d359_TypeKind* _17321__self = (&((*_self_)));;
		{
			
			if ((_229a8046b_prim(_17321__self) != nullptr)) {
				_case_begin_22d530ee5:;
				{
					return (!(_229a862c9_is_any(_229a8046b_prim(_17321__self).ptr())));
				}
			}
			else if ((_229a80ba8_enm(_17321__self) != nullptr)) {
				_case_begin_22d53105b:;
				{
					return true;
				}
			}
			else if ((_229a81659_fnc(_17321__self) != nullptr)) {
				_case_begin_22d531358:;
				{
					return true;
				}
			}
			else if ((_229a80944_ptr(_17321__self) != nullptr)) {
				_case_begin_22d5313be:;
				{
					return true;
				}
			}
			else if ((_229a813e5_slc(_17321__self) != nullptr)) {
				_case_begin_22d531435:;
				{
					return _229a7ee93_supports_cloning(_229a813e5_slc(_17321__self).get()._field_elem.ptr());
				}
			}
			else if ((_229a81d96_map(_17321__self) != nullptr)) {
				_case_begin_22d53149b:;
				{
					jule::Ptr<_229a885c8_Map> _18621_m = _229a81d96_map(_17321__self);;
					return (_229a7ee93_supports_cloning(_18621_m.get()._field_key.ptr()) && _229a7ee93_supports_cloning(_18621_m.get()._field_val.ptr()));
				}
			}
			else if ((_229a81181_arr(_17321__self) != nullptr)) {
				_case_begin_22d531512:;
				{
					return _229a7ee93_supports_cloning(_229a81181_arr(_17321__self).get()._field_elem.ptr());
				}
			}
			else if ((_229a806d0_sptr(_17321__self) != nullptr)) {
				_case_begin_22d531578:;
				{
					return _229a7ee93_supports_cloning(_229a806d0_sptr(_17321__self).get()._field_elem.ptr());
				}
			}
			else if ((_229a818bd_strct(_17321__self) != nullptr)) {
				_case_begin_22d531600:;
				{
					jule::Ptr<_228d44c1a_StructIns> _19325_s = _229a818bd_strct(_17321__self);;
					return (((_19325_s.get()._field_decl != nullptr) && (!(_19325_s.get()._field_decl.get()._field_cpp_linked))) && _228d09927_is_derives(_19325_s.get()._field_decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_22d530dc4:;
				{
					return false;
				}
			}
			_match_end_22d530d5d:;
		};
	};
}



inline jule::Bool _229a80207_variadicable(_229a7d359_TypeKind* _self_) {
	{
		_229a7d359_TypeKind* _20621__self = (&((*_self_)));;
		return (_229a813e5_slc(_20621__self) != nullptr);
	};
}



inline jule::Ptr<_229a82d31_Prim> _229a8046b_prim(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_229a82d31_Prim>>()) {
			_case_begin_22d538daa:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_229a82d31_Prim>();
			}
		}
		else {
			_case_begin_22d53876c:;
			{
				return nullptr;
			}
		}
		_match_end_22d538717:;
	};
}



inline jule::Ptr<_229a865b5_Sptr> _229a806d0_sptr(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_229a865b5_Sptr>>()) {
			_case_begin_22d539a9d:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_229a865b5_Sptr>();
			}
		}
		else {
			_case_begin_22d5395a3:;
			{
				return nullptr;
			}
		}
		_match_end_22d53954d:;
	};
}



inline jule::Ptr<_229a89b29_Ptr> _229a80944_ptr(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_229a89b29_Ptr>>()) {
			_case_begin_22d53a818:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_229a89b29_Ptr>();
			}
		}
		else {
			_case_begin_22d53a31d:;
			{
				return nullptr;
			}
		}
		_match_end_22d53a2b8:;
	};
}



inline jule::Ptr<_228e0dcc3_Enum> _229a80ba8_enm(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228e0dcc3_Enum>>()) {
			_case_begin_22d53b561:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_228e0dcc3_Enum>();
			}
		}
		else {
			_case_begin_22d53b066:;
			{
				return nullptr;
			}
		}
		_match_end_22d53b011:;
	};
}



inline jule::Ptr<_2292e1e75_TypeEnum> _229a80e1c_tenm(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_2292e1e75_TypeEnum>>()) {
			_case_begin_22d53c2cb:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_2292e1e75_TypeEnum>();
			}
		}
		else {
			_case_begin_22d53bcd1:;
			{
				return nullptr;
			}
		}
		_match_end_22d53bc7b:;
	};
}



inline jule::Ptr<_229a891bc_Arr> _229a81181_arr(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_229a891bc_Arr>>()) {
			_case_begin_22d53d046:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_229a891bc_Arr>();
			}
		}
		else {
			_case_begin_22d53ca4b:;
			{
				return nullptr;
			}
		}
		_match_end_22d53c9e6:;
	};
}



inline jule::Ptr<_229a87022_Slc> _229a813e5_slc(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_229a87022_Slc>>()) {
			_case_begin_22d53dcb1:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_229a87022_Slc>();
			}
		}
		else {
			_case_begin_22d53d7b6:;
			{
				return nullptr;
			}
		}
		_match_end_22d53d761:;
	};
}



inline jule::Ptr<_228de996d_FnIns> _229a81659_fnc(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228de996d_FnIns>>()) {
			_case_begin_22d53ea09:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_228de996d_FnIns>();
			}
		}
		else {
			_case_begin_22d53e50e:;
			{
				return nullptr;
			}
		}
		_match_end_22d53e4a9:;
	};
}



inline jule::Ptr<_228d44c1a_StructIns> _229a818bd_strct(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d44c1a_StructIns>>()) {
			_case_begin_22d540752:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_228d44c1a_StructIns>();
			}
		}
		else {
			_case_begin_22d540257:;
			{
				return nullptr;
			}
		}
		_match_end_22d540202:;
	};
}



inline jule::Ptr<_22923d1bd_Trait> _229a81b32_trt(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_22923d1bd_Trait>>()) {
			_case_begin_22d5414bc:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_22923d1bd_Trait>();
			}
		}
		else {
			_case_begin_22d540ec2:;
			{
				return nullptr;
			}
		}
		_match_end_22d540e6c:;
	};
}



inline jule::Ptr<_229a885c8_Map> _229a81d96_map(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_229a885c8_Map>>()) {
			_case_begin_22d542237:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_229a885c8_Map>();
			}
		}
		else {
			_case_begin_22d541c3c:;
			{
				return nullptr;
			}
		}
		_match_end_22d541bd7:;
	};
}



inline jule::Ptr<_229a87aa0_Tuple> _229a8210a_tup(_229a7d359_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_229a87aa0_Tuple>>()) {
			_case_begin_22d542ea2:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_229a87aa0_Tuple>();
			}
		}
		else {
			_case_begin_22d5429a7:;
			{
				return nullptr;
			}
		}
		_match_end_22d542952:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _229a7d359_TypeKind _Src) {
	_Stream << _229a7d755_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _229a82869_checked(_229a824b2_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _229a82a45_remove_kind(_229a824b2_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _229a824b2_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _229a83194_to_str(_229a82d31_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _229a834a2_equals(jule::Ptr<_229a82d31_Prim> _self_, jule::Ptr<_229a7d359_TypeKind> _35926_other) {
	jule::Ptr<_229a82d31_Prim> _36013_prim = _229a8046b_prim(_35926_other.ptr());;
	if ((_36013_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_kind == _36013_prim.get()._field_kind);
}



inline jule::Bool _229a83925_is_constraint(_229a82d31_Prim* _self_) {
	return ((((!(_229a86065_is_str(&(*_self_)))) && (!(_229a862c9_is_any(&(*_self_))))) && (!(_229a85d01_is_bool(&(*_self_))))) && (!(_2299b6528_is_num((*_self_)._field_kind))));
}



inline jule::Bool _229a83b89_is_i8(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _229a83ded_is_i16(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _229a84162_is_i32(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _229a843c6_is_i64(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _229a8463a_is_u8(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _229a8489e_is_u16(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _229a84b13_is_u32(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _229a84d77_is_u64(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _229a850db_is_f32(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _229a85350_is_f64(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _229a855b4_is_int(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _229a85828_is_uint(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _229a85a8c_is_uintptr(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _229a85d01_is_bool(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _229a86065_is_str(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _229a862c9_is_any(_229a82d31_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _229a82d31_Prim _Src) {
	_Stream << _229a83194_to_str(&_Src);
	return _Stream;
}



inline jule::Str _229a86928_to_str(_229a865b5_Sptr* _self_) {
	return (jule::Str("&", 1) + _229a7d755_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _229a86c36_equals(jule::Ptr<_229a865b5_Sptr> _self_, jule::Ptr<_229a7d359_TypeKind> _43626_other) {
	jule::Ptr<_229a865b5_Sptr> _43713_sptr = _229a806d0_sptr(_43626_other.ptr());;
	if ((_43713_sptr == nullptr)) {
		return false;
	};
	return _229a7da63_equals(_self_.get()._field_elem, _43713_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _229a865b5_Sptr _Src) {
	_Stream << _229a86928_to_str(&_Src);
	return _Stream;
}



inline jule::Str _229a8752d_to_str(_229a87022_Slc* _self_) {
	return (jule::Str("[]", 2) + _229a7d755_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _229a8783b_equals(jule::Ptr<_229a87022_Slc> _self_, jule::Ptr<_229a7d359_TypeKind> _45526_other) {
	jule::Ptr<_229a87022_Slc> _45613_slc = _229a813e5_slc(_45526_other.ptr());;
	if ((_45613_slc == nullptr)) {
		return false;
	};
	return _229a7da63_equals(_self_.get()._field_elem, _45613_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _229a87022_Slc _Src) {
	_Stream << _229a8752d_to_str(&_Src);
	return _Stream;
}



inline jule::Str _229a87e13_to_str(_229a87aa0_Tuple* _self_) {
	jule::Str _47217_s = jule::Str("(", 1);;
	_47217_s+=_229a7d755_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_22d551b09:;
		if (it != expr.end()) {
			jule::Ptr<_229a7d359_TypeKind> &_47416_t = *it;
			{
				_47217_s+=jule::Str(",", 1);
				_47217_s+=_229a7d755_to_str(_47416_t.ptr());
			}
			_iter_next_22d551b09:;
			++it;
			goto _iter_begin_22d551b09;
		}
		_iter_end_22d551b09:;
	};
	_47217_s+=jule::Str(")", 1);
	return _47217_s;
}



inline jule::Bool _229a88221_equals(jule::Ptr<_229a87aa0_Tuple> _self_, jule::Ptr<_229a7d359_TypeKind> _48326_other) {
	jule::Ptr<_229a87aa0_Tuple> _48413_tup = _229a8210a_tup(_48326_other.ptr());;
	if ((_48413_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_types.len() != _48413_tup.get()._field_types.len())) {
		return false;
	};
	jule::I64 _49317_i = 0LL;;
	for (; (_49317_i < _self_.get()._field_types.len()); (_49317_i)++) {
		{
			if ((!(_229a7da63_equals(_self_.get()._field_types[_49317_i], _48413_tup.get()._field_types[_49317_i])))) {
				return false;
			};
		}
	_iter_next_22d5551e5:;
	}
	_iter_end_22d5551e5:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _229a87aa0_Tuple _Src) {
	_Stream << _229a87e13_to_str(&_Src);
	return _Stream;
}



inline jule::Str _229a8893b_to_str(_229a885c8_Map* _self_) {
	jule::Str _51317_s = jule::Str("[", 1);;
	_51317_s+=_229a7d755_to_str((*_self_)._field_key.ptr());
	_51317_s+=jule::Str(":", 1);
	_51317_s+=_229a7d755_to_str((*_self_)._field_val.ptr());
	_51317_s+=jule::Str("]", 1);
	return _51317_s;
}



inline jule::Bool _229a88c49_equals(jule::Ptr<_229a885c8_Map> _self_, jule::Ptr<_229a7d359_TypeKind> _52226_other) {
	jule::Ptr<_229a885c8_Map> _52313_map = _229a81d96_map(_52226_other.ptr());;
	if ((_52313_map == nullptr)) {
		return false;
	};
	return (_229a7da63_equals(_self_.get()._field_key, _52313_map.get()._field_key) && _229a7da63_equals(_self_.get()._field_val, _52313_map.get()._field_val));
}







std::ostream &operator<<(std::ostream &_Stream, _229a885c8_Map _Src) {
	_Stream << _229a8893b_to_str(&_Src);
	return _Stream;
}



inline jule::Str _229a89530_to_str(_229a891bc_Arr* _self_) {
	jule::Str _54117_s = jule::Str("[", 1);;
	_54117_s+=_2299348d6_itoa((*_self_)._field_n);
	_54117_s+=jule::Str("]", 1);
	_54117_s+=_229a7d755_to_str((*_self_)._field_elem.ptr());
	return _54117_s;
}



inline jule::Bool _229a8983d_equals(jule::Ptr<_229a891bc_Arr> _self_, jule::Ptr<_229a7d359_TypeKind> _54926_other) {
	jule::Ptr<_229a891bc_Arr> _55013_arr = _229a81181_arr(_54926_other.ptr());;
	if ((_55013_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_n == _55013_arr.get()._field_n) && _229a7da63_equals(_self_.get()._field_elem, _55013_arr.get()._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, _229a891bc_Arr _Src) {
	_Stream << _229a89530_to_str(&_Src);
	return _Stream;
}



inline jule::Str _229a89e8c_to_str(_229a89b29_Ptr* _self_) {
	if (_229a8a5ec_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _229a7d755_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _229a8a29a_equals(jule::Ptr<_229a89b29_Ptr> _self_, jule::Ptr<_229a7d359_TypeKind> _57326_other) {
	jule::Ptr<_229a89b29_Ptr> _57413_ptr = _229a80944_ptr(_57326_other.ptr());;
	if ((_57413_ptr == nullptr)) {
		return false;
	};
	return _229a7da63_equals(_self_.get()._field_elem, _57413_ptr.get()._field_elem);
}



inline jule::Bool _229a8a5ec_is_unsafe(_229a89b29_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _229a89b29_Ptr _Src) {
	_Stream << _229a89e8c_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _229a8aa70_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _229a8bec2_push_err(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_2276b1a1c_Token> _65127_token, jule::Str _65142_fmt, jule::Slice<jule::Any> _65155_args) {
	_2299e1454_push_err((*_self_)._field_s.ptr(), _65127_token,_65142_fmt,jule::Any(_65155_args));
}



inline void _229a8c19d_allow_builtin(_229a8b7b8_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _229a8c379_disallow_builtin(_229a8b7b8_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_229a82d31_Prim> _229a8c687_build_prim(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28759_IdentTypeDecl>& _66330_decl) {
	if ((!(_229a967b2_is_prim(_66330_decl.get()._field_ident)))) {
		_229a8bec2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_66330_decl.get()._field_generics.len() > 0LL)) {
		_229a8bec2_push_err(&(*_self_), _66330_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_66330_decl.get()._field_ident)}));
		return nullptr;
	};
	return _229a96273_build_prim_type(_66330_decl.get()._field_ident);
}



inline void _22b7c97e0_push_reference(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d44c1a_StructIns>& _67741_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_22d375de5_exist((*_self_)._field_refers.ptr(), _67741_t)) {
		return;;
	};
	_228dece38_push((*_self_)._field_refers.ptr(), jule::Any(_67741_t));
}

inline void _22b7cc89d_push_reference(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_22923d1bd_Trait>& _67741_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_22b7ce509_exist((*_self_)._field_refers.ptr(), _67741_t)) {
		return;;
	};
	_228dece38_push((*_self_)._field_refers.ptr(), jule::Any(_67741_t));
}



inline void _229a8cb82_push_reference_by_kind(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_229a7d359_TypeKind>& _68746_k) {
	{
		
		if ((_229a818bd_strct(_68746_k.ptr()) != nullptr)) {
			_case_begin_22b7c8448:;
			{
				jule::Ptr<_228d44c1a_StructIns> _69021_t = _229a818bd_strct(_68746_k.ptr());;
				_22b7c97e0_push_reference(&(*_self_), _69021_t);
			}
		}
		else if ((_229a81b32_trt(_68746_k.ptr()) != nullptr)) {
			_case_begin_22b7c84c0:;
			{
				jule::Ptr<_22923d1bd_Trait> _69321_t = _229a81b32_trt(_68746_k.ptr());;
				_22b7cc89d_push_reference(&(*_self_), _69321_t);
			}
		}
		_match_end_22b7c8327:;
	};
}



inline void _229a8d04a_push_cycle_error(_229a8b7b8_TypeChecker* _self_, jule::Any _69831_def1, jule::Any _69842_def2, jule::Str& _69858_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _70113_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70129_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70129_def };
			
			if (_match_expr.type_is<jule::Ptr<_229a7c666_TypeAlias>>()) {
				_case_begin_22b7d285e:;
				{
					return _70129_def.operator jule::Ptr<_229a7c666_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
				_case_begin_22b7d28c5:;
				{
					return _70129_def.operator jule::Ptr<_228d188c0_Struct>().get()._field_ident;
				}
			}
			else {
				_case_begin_22b7d26c7:;
				{
					return jule::Str();
				}
			}
			_match_end_22b7d25ea:;
		};
	});;
	jule::Str _71213_def1_ident = _70113_get_ident(_69831_def1);;
	jule::Str _71313_def2_ident = _70113_get_ident(_69842_def2);;
	jule::Str _71413_refers_to = _240948be2_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_71213_def1_ident),jule::Any(_71313_def2_ident)}));;
	(_69858_message).buffer.insert(0, (((_227315ab1_repeat(jule::Str(" ", 1),4LL) + _71413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _229a8d402_check_cross_cycle(_229a8b7b8_TypeChecker* _self_, jule::Any _71832_decl, jule::Str& _71848_message) {
	{
		auto &_match_expr{ _71832_decl };
		
		if (_match_expr.type_is<jule::Ptr<_229a7c666_TypeAlias>>()) {
			_case_begin_22b7d51e1:;
			{
				jule::Ptr<_229a7c666_TypeAlias> _72117_ta = _71832_decl.operator jule::Ptr<_229a7c666_TypeAlias>();;
				{
					auto &expr = _72117_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_22b7d5ea0:;
					if (it != expr.end()) {
						jule::Any &_72220_d = *it;
						{
							{
								
								if ((_72220_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_22b7d692e:;
									{
										_229a8d04a_push_cycle_error(&(*_self_), jule::Any(_72117_ta),jule::Any(_72220_d),_71848_message);
										return false;
									}
								}
								else if ((!(_229a8d402_check_cross_cycle(&(*_self_), jule::Any(_72220_d),_71848_message)))) {
									_case_begin_22b7d69a6:;
									{
										_229a8d04a_push_cycle_error(&(*_self_), jule::Any(_72117_ta),jule::Any(_72220_d),_71848_message);
										return false;
									}
								}
								_match_end_22b7d680d:;
							};
						}
						_iter_next_22b7d5ea0:;
						++it;
						goto _iter_begin_22b7d5ea0;
					}
					_iter_end_22b7d5ea0:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
			_case_begin_22b7d5257:;
			{
				jule::Ptr<_228d188c0_Struct> _73317_s = _71832_decl.operator jule::Ptr<_228d188c0_Struct>();;
				{
					auto &expr = _73317_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_22b7d7b94:;
					if (it != expr.end()) {
						jule::Ptr<_228d188c0_Struct> &_73420_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _73420_d)) {
									_case_begin_22b7d9019:;
									{
										_229a8d04a_push_cycle_error(&(*_self_), jule::Any(_73317_s),jule::Any(_73420_d),_71848_message);
										return false;
									}
								}
								else if ((!(_229a8d402_check_cross_cycle(&(*_self_), jule::Any(_73420_d),_71848_message)))) {
									_case_begin_22b7d9091:;
									{
										_229a8d04a_push_cycle_error(&(*_self_), jule::Any(_73317_s),jule::Any(_73420_d),_71848_message);
										return false;
									}
								}
								_match_end_22b7d8de8:;
							};
						}
						_iter_next_22b7d7b94:;
						++it;
						goto _iter_begin_22b7d7b94;
					}
					_iter_end_22b7d7b94:;
				};
			}
		}
		_match_end_22b7d5103:;
	};
	return true;
}



inline jule::Bool _229a8d7a9_check_illegal_cycles(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28759_IdentTypeDecl>& _75240_ident, jule::Any _75267_decl) {
	jule::Bool _75280_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_75280_ok = true;
		return _75280_ok;
	};
	{
		auto &_match_expr{ _75267_decl };
		
		if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
			_case_begin_22b7da14c:;
			{
				if (((*_self_)._field_not_plain || _75267_decl.operator jule::Ptr<_228d188c0_Struct>().get()._field_cpp_linked)) {
					_75280_ok = true;
					return _75280_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a7c666_TypeAlias>>()) {
			_case_begin_22b7da290:;
			{
				if (_75267_decl.operator jule::Ptr<_229a7c666_TypeAlias>().get()._field_cpp_linked) {
					_75280_ok = true;
					return _75280_ok;
				};
			}
		}
		_match_end_22b7da0e7:;
	};
	if ((_75267_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_229a8bec2_push_err(&(*_self_), _75240_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_75280_ok = false;
		return _75280_ok;
	};
	jule::Str _77517_message = jule::Str();;
	if ((!(_229a8d402_check_cross_cycle(&(*_self_), jule::Any(_75267_decl),_77517_message)))) {
		jule::Str _77821_err_msg = _77517_message;;
		_77517_message=jule::Str();
		_229a8d04a_push_cycle_error(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_75267_decl),_77517_message);
		_77821_err_msg=(_77821_err_msg + _77517_message);
		_229a8bec2_push_err(&(*_self_), _75240_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_77821_err_msg)}));
		_75280_ok = false;
		return _75280_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_229a7c666_TypeAlias>>()) {
			_case_begin_22b7e0493:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_75267_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
			_case_begin_22b7e055e:;
			{
				{
					auto &_match_expr{ _75267_decl };
					
					if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
						_case_begin_22b7e0cac:;
						{
							jule::Ptr<_228d188c0_Struct> _79425_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_228d188c0_Struct>();;
							_79425_s.get()._field_depends = jule::alloc_for_append(_79425_s.get()._field_depends,1);_79425_s.get()._field_depends.__push(_75267_decl.operator jule::Ptr<_228d188c0_Struct>());;
						}
					}
					_match_end_22b7e0bbe:;
				};
			}
		}
		_match_end_22b7e043d:;
	};
	_75280_ok = true;
	return _75280_ok;
}



inline jule::Trait<_229a7ce2a_Kind> _229a8db61_from_type_alias(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28759_IdentTypeDecl>& _80235_decl, jule::Ptr<_229a7c666_TypeAlias>& _80262_ta) {
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _80262_ta.get()._field_public,_80262_ta.get()._field_token)))) {
		_229a8bec2_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
		return nullptr;
	};
	_80262_ta.get()._field_used=true;
	if ((_80235_decl.get()._field_generics.len() > 0LL)) {
		_229a8bec2_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_22b7e5630:;
			if (it != expr.end()) {
				jule::Ptr<_229a7c666_TypeAlias> _81920_bg = *it;
				{
					if (((_81920_bg == _80262_ta) || ((_80262_ta.get()._field_kind.get()._field_kind != nullptr) && _229a7da63_equals(_80262_ta.get()._field_kind.get()._field_kind, _81920_bg.get()._field_kind.get()._field_kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_22b7e5630;
					};
				}
				_iter_next_22b7e5630:;
				++it;
				goto _iter_begin_22b7e5630;
			}
			_iter_end_22b7e5630:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_22b7e7456:;
			if (it != expr.end()) {
				jule::Ptr<_229a7c666_TypeAlias> _83020_bg = *it;
				{
					if ((_83020_bg == _80262_ta)) {
						_229a8bec2_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
						return nullptr;
					};
					{
						auto &expr = _80262_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_22b7e7de6:;
						if (it != expr.end()) {
							jule::Ptr<_229a7c666_TypeAlias> _83524_dg = *it;
							{
								if ((_83020_bg == _83524_dg)) {
									_229a8bec2_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
									return nullptr;
								};
							}
							_iter_next_22b7e7de6:;
							++it;
							goto _iter_begin_22b7e7de6;
						}
						_iter_end_22b7e7de6:;
					};
				}
				_iter_next_22b7e7456:;
				++it;
				goto _iter_begin_22b7e7456;
			}
			_iter_end_22b7e7456:;
		};
	};
	jule::Bool _84417_ok = _229a8d7a9_check_illegal_cycles(&(*_self_), _80235_decl,jule::Any(_80262_ta));;
	if ((!(_84417_ok))) {
		return nullptr;
	};
	_84417_ok=_2299ea22c_check_type_alias_decl_kind((*_self_)._field_s, _80262_ta,(*_self_)._field_lookup);
	if ((!(_84417_ok))) {
		return nullptr;
	};
	if ((_80262_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr))) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_80262_ta);;
	};
	jule::Ptr<_229a7d359_TypeKind> _86117_tk = jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_generic=_80262_ta.get()._field_generic, ._field_kind=_80262_ta.get()._field_kind.get()._field_kind.get()._field_kind});;
	_229a8cb82_push_reference_by_kind(&(*_self_), _86117_tk);
	if (_80262_ta.get()._field_cpp_linked) {
		_86117_tk.get()._field_cpp_ident=_80262_ta.get()._field_ident;
	} else {
		_86117_tk.get()._field_cpp_ident=_80262_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	};
	return jule::Trait<_229a7ce2a_Kind>(_86117_tk, 5);
}



inline jule::Ptr<_228e0dcc3_Enum> _229a8e018_from_enum(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28759_IdentTypeDecl>& _87429_decl, jule::Ptr<_228e0dcc3_Enum>& _87456_e) {
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _87456_e.get()._field_public,_87456_e.get()._field_token)))) {
		_229a8bec2_push_err(&(*_self_), _87429_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87429_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_87429_decl.get()._field_generics.len() > 0LL)) {
		_229a8bec2_push_err(&(*_self_), _87429_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87429_decl.get()._field_ident)}));
		return nullptr;
	};
	return _87456_e;
}



inline jule::Ptr<_2292e1e75_TypeEnum> _229a8e3c0_from_type_enum(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28759_IdentTypeDecl>& _88634_decl, jule::Ptr<_2292e1e75_TypeEnum>& _88661_e) {
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _88661_e.get()._field_public,_88661_e.get()._field_token)))) {
		_229a8bec2_push_err(&(*_self_), _88634_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88634_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_88634_decl.get()._field_generics.len() > 0LL)) {
		_229a8bec2_push_err(&(*_self_), _88634_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88634_decl.get()._field_ident)}));
		return nullptr;
	};
	return _88661_e;
}



inline jule::Ptr<_22923d1bd_Trait> _229a8e777_from_trait(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28759_IdentTypeDecl>& _89830_decl, jule::Ptr<_22923d1bd_Trait>& _89857_t) {
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _89857_t.get()._field_public,_89857_t.get()._field_token)))) {
		_229a8bec2_push_err(&(*_self_), _89830_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89830_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_89830_decl.get()._field_generics.len() > 0LL)) {
		_229a8bec2_push_err(&(*_self_), _89830_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89830_decl.get()._field_ident)}));
		return nullptr;
	};
	_22b7cc89d_push_reference(&(*_self_), _89857_t);
	return _89857_t;
}



inline jule::Bool _229a8eb2e_check_struct_ins(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d44c1a_StructIns>& _91140_ins, jule::Ptr<_2276b1a1c_Token>& _91162_error_token) {
	jule::Bool _91185_ok = jule::Bool();
	if (_91140_ins.get()._field_checked) {
		_91185_ok = true;
		return _91185_ok;
	};
	_91140_ins.get()._field_checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _91140_ins.get()._field_decl))) {
		_91185_ok = true;
		return _91185_ok;
	};
	if ((!(_229a04577_precheck_struct_ins((*_self_)._field_s, _91140_ins,_91162_error_token)))) {
		_91185_ok = false;
		return _91185_ok;
	};
	if ((_91140_ins.get()._field_generics.len() > 0LL)) {
		_229a04ee5_check_struct_ins_operators((*_self_)._field_s, _91140_ins);
		_229a047ec_check_struct_ins((*_self_)._field_s, _91140_ins);
	};
	_91185_ok = true;
	return _91185_ok;
}



inline void _229a8edc6_append_used_struct_reference(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d188c0_Struct>& _93252_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_228d188c0_Struct>>()) {
			_case_begin_22b80927b:;
			{
				jule::Ptr<_228d188c0_Struct> _93921_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_228d188c0_Struct>();;
				if ((!(_228d0d6c8_is_uses(_93921_ref_s.ptr(), _93252_s)))) {
					_93921_ref_s.get()._field_uses = jule::alloc_for_append(_93921_ref_s.get()._field_uses,1);_93921_ref_s.get()._field_uses.__push(_93252_s);;
				};
			}
		}
		_match_end_22b808e90:;
	};
}



inline jule::Ptr<_228d44c1a_StructIns> _229a9028e_build_struct_instance(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28759_IdentTypeDecl>& _94645_decl, jule::Ptr<_228d188c0_Struct>& _94672_s) {
	jule::Ptr<_229a8aa70_Referencer> _94817_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_229a7c666_TypeAlias>> _95017_banned_generics = (*_self_)._field_banned_generics;;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_2299bd7e9_ScopeChecker>>()) {
				_case_begin_22b80be60:;
				{
					jule::Ptr<_2299bd7e9_ScopeChecker> _95725_sc = (*_self_)._field_lookup.operator jule::Ptr<_2299bd7e9_ScopeChecker>();;
					jule::Ptr<_2299bd7e9_ScopeChecker> _95825_hard = _2299c1b71_get_hard_root(_95725_sc);;
					if (((_95825_hard.get()._field_owner.get()._field_owner == nullptr) || (_95825_hard.get()._field_owner.get()._field_owner.get()._field_decl != _94672_s))) {
						goto _match_end_22b80be0a;
					};
					jule::I64 _96221_n = (_95825_hard.get()._field_owner.get()._field_generics.len() + _95825_hard.get()._field_owner.get()._field_owner.get()._field_generics.len());;
					(*_self_)._field_banned_generics=_95825_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_96221_n);
				}
			}
			_match_end_22b80be0a:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_228d44c1a_StructIns> _97217_ins = _228d00cc5_instance(_94672_s);;
	_97217_ins.get()._field_generics=jule::Slice<jule::Ptr<_229a7bb2c_InsGeneric>>::alloc(0LL,_94645_decl.get()._field_generics.len());
	{
		auto &expr = _94645_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22b810b9a:;
		if (it != expr.end()) {
			jule::Ptr<_228d28193_TypeDecl> _97421_g = *it;
			{
				jule::Ptr<_229a7d359_TypeKind> _97521_kind = _229a93726_build(&(*_self_), _97421_g.get()._field_kind);;
				if ((_97521_kind == nullptr)) {
					return nullptr;
				};
				_97217_ins.get()._field_generics = jule::alloc_for_append(_97217_ins.get()._field_generics,1);_97217_ins.get()._field_generics.__push(jule::new_ptr<_229a7bb2c_InsGeneric>(_229a7bb2c_InsGeneric{._field_kind=_97521_kind, }));;
			}
			_iter_next_22b810b9a:;
			++it;
			goto _iter_begin_22b810b9a;
		}
		_iter_end_22b810b9a:;
	};
	(*_self_)._field_banned_generics=_95017_banned_generics;
	(*_self_)._field_referencer=_94817_referencer;
	return _97217_ins;
}



inline jule::Ptr<_228d44c1a_StructIns> _229a90646_from_struct(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28759_IdentTypeDecl>& _98935_decl, jule::Ptr<_228d188c0_Struct>& _98962_s) {
	if ((!(_2299e1b2a_is_accessible_define((*_self_)._field_s.ptr(), _98962_s.get()._field_public,_98962_s.get()._field_token)))) {
		_229a8bec2_push_err(&(*_self_), _98935_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_98935_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_98935_decl.get()._field_generics.len() > 0LL)) {
			_229a8bec2_push_err(&(*_self_), _98935_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_228d44c1a_StructIns>(_228d44c1a_StructIns{._field_decl=_98962_s, });
	};
	jule::Bool _100717_ok = ((*_self_)._field_not_plain || _229a8d7a9_check_illegal_cycles(&(*_self_), _98935_decl,jule::Any(_98962_s)));;
	if ((!(_100717_ok))) {
		return nullptr;
	};
	_229a8edc6_append_used_struct_reference(&(*_self_), _98962_s);
	jule::Ptr<_228d44c1a_StructIns> _101317_ins = _229a9028e_build_struct_instance(&(*_self_), _98935_decl,_98962_s);;
	if ((_101317_ins == nullptr)) {
		return nullptr;
	};
	_100717_ok=_2299e27eb_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_101317_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_101317_ins.get()._field_generics.len()),_98935_decl.get()._field_token);
	if ((!(_100717_ok))) {
		return nullptr;
	};
	jule::Ptr<_228d44c1a_StructIns> _102317_exist_instance = _228d0503d_append_instance(_98962_s.ptr(), _101317_ins);;
	if ((_102317_exist_instance != nullptr)) {
		if ((!(_2299e889b_check_constraints_struct((*_self_)._field_s, _101317_ins,_98935_decl.get()._field_token,_102317_exist_instance)))) {
			return nullptr;
		};
		_22b7c97e0_push_reference(&(*_self_), _102317_exist_instance);
		return _102317_exist_instance;
	};
	if ((!(_229a8eb2e_check_struct_ins(&(*_self_), _101317_ins,_98935_decl.get()._field_token)))) {
		return nullptr;
	};
	_22b7c97e0_push_reference(&(*_self_), _101317_ins);
	return _101317_ins;
}



inline jule::Trait<_229a7ce2a_Kind> _229a90954_get_def(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28759_IdentTypeDecl>& _104731_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_22b81aa51:;
		if (it != expr.end()) {
			jule::Ptr<_228d35777_GenericDecl> _104816_g = *it;
			{
				if ((_104816_g.get()._field_ident == _104731_decl.get()._field_ident)) {
					return jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(_104816_g.get()._field_ident), 6);
				};
			}
			_iter_next_22b81aa51:;
			++it;
			goto _iter_begin_22b81aa51;
		}
		_iter_end_22b81aa51:;
	};
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_22b81b414:;
		if (it != expr.end()) {
			jule::Ptr<_229a7c666_TypeAlias> _105421_g = *it;
			{
				if ((_105421_g.get()._field_ident == _104731_decl.get()._field_ident)) {
					if ((_104731_decl.get()._field_generics.len() > 0LL)) {
						_229a8bec2_push_err(&(*_self_), _104731_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_104731_decl.get()._field_ident)}));
						return nullptr;
					};
					jule::Ptr<_228d44c1a_StructIns> _106025_st = _229a818bd_strct(_105421_g.get()._field_kind.get()._field_kind.ptr());;
					if ((_106025_st != nullptr)) {
						jule::Bool _106225_ok = _229a8d7a9_check_illegal_cycles(&(*_self_), _104731_decl,jule::Any(_106025_st.get()._field_decl));;
						if ((!(_106225_ok))) {
							return nullptr;
						};
					};
					return _105421_g.get()._field_kind.get()._field_kind.get()._field_kind;
				};
			}
			_iter_next_22b81b414:;
			++it;
			goto _iter_begin_22b81b414;
		}
		_iter_end_22b81b414:;
	};
	if ((!(_104731_decl.get()._field_cpp_linked))) {
		jule::Ptr<_228e0dcc3_Enum> _107221_e = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a989a1_find_enum((*_self_)._field_lookup, _104731_decl.get()._field_ident);;
		if ((_107221_e != nullptr)) {
			return jule::Trait<_229a7ce2a_Kind>(_229a8e018_from_enum(&(*_self_), _104731_decl,_107221_e), 3);
		};
		jule::Ptr<_2292e1e75_TypeEnum> _107721_te = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a98cae_find_type_enum((*_self_)._field_lookup, _104731_decl.get()._field_ident);;
		if ((_107721_te != nullptr)) {
			return jule::Trait<_229a7ce2a_Kind>(_229a8e3c0_from_type_enum(&(*_self_), _104731_decl,_107721_te), 4);
		};
		jule::Ptr<_22923d1bd_Trait> _108221_t = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a98693_find_trait((*_self_)._field_lookup, _104731_decl.get()._field_ident);;
		if (((_108221_t == nullptr) && (!((*_self_)._field_dis_builtin)))) {
			_108221_t=_229aa6d00_find_builtin_trait(_104731_decl.get()._field_ident);
		};
		if ((_108221_t != nullptr)) {
			return jule::Trait<_229a7ce2a_Kind>(_229a8e777_from_trait(&(*_self_), _104731_decl,_108221_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_229a8bec2_push_err(&(*_self_), _104731_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_228d188c0_Struct> _109417_s = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a97ecd_find_struct((*_self_)._field_lookup, _104731_decl.get()._field_ident,_104731_decl.get()._field_cpp_linked);;
	if ((_109417_s != nullptr)) {
		return jule::Trait<_229a7ce2a_Kind>(_229a90646_from_struct(&(*_self_), _104731_decl,_109417_s), 0);
	};
	jule::Ptr<_229a7c666_TypeAlias> _109917_ta = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a97b26_find_type_alias((*_self_)._field_lookup, _104731_decl.get()._field_ident,_104731_decl.get()._field_cpp_linked);;
	if (((_109917_ta == nullptr) && (!((*_self_)._field_dis_builtin)))) {
		_109917_ta=_229aa621c_find_builtin_type_alias(_104731_decl.get()._field_ident);
	};
	if ((_109917_ta != nullptr)) {
		return _229a8db61_from_type_alias(&(*_self_), _104731_decl,_109917_ta);
	};
	_229a8bec2_push_err(&(*_self_), _104731_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_104731_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_229a7ce2a_Kind> _229a90c62_build_ident(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28759_IdentTypeDecl> _111134_decl) {
	{
		
		if (_229a967b2_is_prim(_111134_decl.get()._field_ident)) {
			_case_begin_22b827b6d:;
			{
				return jule::Trait<_229a7ce2a_Kind>(_229a8c687_build_prim(&(*_self_), _111134_decl), 6);
			}
		}
		else {
			_case_begin_22b8273ed:;
			{
				return _229a90954_get_def(&(*_self_), _111134_decl);
			}
		}
		_match_end_22b827321:;
	};
}



inline jule::Trait<_229a7ce2a_Kind> _229a91070_build_sub_ident(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28da8_SubIdentTypeDecl> _112038_decl) {
	jule::Trait<_229a7ce2a_Kind> _112117_ident = _229a90c62_build_ident(&(*_self_), _112038_decl.get()._field_idents[0LL]);;
	if ((_112117_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _112117_ident };
		
		if (_match_expr.type_is<jule::Ptr<_2292e1e75_TypeEnum>>()) {
			_case_begin_22b829653:;
			{
				goto _match_end_22b829576;
			}
		}
		else {
			_case_begin_22b829345:;
			{
				_229a8bec2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22b829576:;
	};
	jule::Ptr<_2292e1e75_TypeEnum> _113317_t = _112117_ident.operator jule::Ptr<_2292e1e75_TypeEnum>();;
	jule::Slice<jule::Ptr<_228d28759_IdentTypeDecl>> _113417_idents = _112038_decl.get()._field_idents.slice(1LL);;
	{
		auto &expr = _113417_idents;
		auto it = expr.begin();
		_iter_begin_22b82a9a6:;
		if (it != expr.end()) {
			jule::I64 _113513_i = it - expr.begin();
			jule::Ptr<_228d28759_IdentTypeDecl> _113516_id = *it;
			{
				jule::Ptr<_2290786bd_TypeEnumItem> _113621_item = _22923da09_find_item(_113317_t.ptr(), _113516_id.get()._field_ident);;
				if ((_113621_item == nullptr)) {
					_229a8bec2_push_err(&(*_self_), _113516_id.get()._field_token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_113317_t.get()._field_ident),jule::Any(_113516_id.get()._field_ident)}));
					return nullptr;
				};
				if (((_113417_idents.len() - _113513_i) == 1LL)) {
					_229a8cb82_push_reference_by_kind(&(*_self_), _113621_item.get()._field_kind.get()._field_kind);
					return jule::Trait<_229a7ce2a_Kind>(_113621_item.get()._field_kind.get()._field_kind, 5);
				};
				_113317_t=_229a80e1c_tenm(_113621_item.get()._field_kind.get()._field_kind.ptr());
				if ((_113317_t == nullptr)) {
					_229a8bec2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_22b82a9a6:;
			++it;
			_113513_i++;
			goto _iter_begin_22b82a9a6;
		}
		_iter_end_22b82a9a6:;
	};
	return nullptr;
}



inline jule::Ptr<_229a865b5_Sptr> _229a9137d_build_sptr_from_type(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_229a7d359_TypeKind>& _115544_elem) {
	{
		
		if ((_115544_elem == nullptr)) {
			_case_begin_22b82b468:;
			{
				return nullptr;
			}
		}
		else if ((_229a818bd_strct(_115544_elem.ptr()) != nullptr)) {
			_case_begin_22b82b4e0:;
			{
				jule::Ptr<_228d44c1a_StructIns> _116117_s = _229a818bd_strct(_115544_elem.ptr());;
				if (((_116117_s.get()._field_decl != nullptr) && _116117_s.get()._field_decl.get()._field_cpp_linked)) {
					_229a8bec2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_229a81181_arr(_115544_elem.ptr()) != nullptr) && _229a81181_arr(_115544_elem.ptr()).get()._field_auto)) {
			_case_begin_22b82b567:;
			{
				_229a8bec2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22b82b336:;
	};
	return jule::new_ptr<_229a865b5_Sptr>(_229a865b5_Sptr{._field_elem=_115544_elem});
}



inline jule::Ptr<_229a865b5_Sptr> _229a9168b_build_sptr(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d2954b_SptrTypeDecl> _117533_decl) {
	jule::Bool _117613_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_117613_not_plain;
	});;
	jule::Ptr<_229a7d359_TypeKind> _118017_elem = _229a93a34_check_decl(&(*_self_), _117533_decl.get()._field_elem);;
	return _229a9137d_build_sptr_from_type(&(*_self_), _118017_elem);
}



inline jule::Ptr<_229a89b29_Ptr> _229a91999_build_ptr_from_type(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_229a7d359_TypeKind>& _118443_elem) {
	{
		
		if ((_118443_elem == nullptr)) {
			_case_begin_22b834ae2:;
			{
				return nullptr;
			}
		}
		else if (((_229a81181_arr(_118443_elem.ptr()) != nullptr) && _229a81181_arr(_118443_elem.ptr()).get()._field_auto)) {
			_case_begin_22b834b69:;
			{
				_229a8bec2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_229a89b29_Ptr>();
			}
		}
		_match_end_22b8349c1:;
	};
	return jule::new_ptr<_229a89b29_Ptr>(_229a89b29_Ptr{._field_elem=_118443_elem});
}



inline jule::Ptr<_229a89b29_Ptr> _229a91ca7_build_ptr(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d2a01e_PtrTypeDecl> _119932_decl) {
	jule::Bool _120013_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_120013_not_plain;
	});;
	jule::Ptr<_229a7d359_TypeKind> _120417_elem = nullptr;;
	if ((!(_228d2a371_is_unsafe(_119932_decl.ptr())))) {
		_120417_elem=_229a93a34_check_decl(&(*_self_), _119932_decl.get()._field_elem);
		return _229a91999_build_ptr_from_type(&(*_self_), _120417_elem);
	};
	return jule::new_ptr<_229a89b29_Ptr>(_229a89b29_Ptr{._field_elem=_120417_elem});
}



inline jule::Ptr<_229a87022_Slc> _229a920b5_build_slc(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d29947_SlcTypeDecl> _121632_decl) {
	jule::Bool _121713_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_121713_not_plain;
	});;
	jule::Ptr<_229a7d359_TypeKind> _122117_elem = _229a93a34_check_decl(&(*_self_), _121632_decl.get()._field_elem);;
	{
		
		if ((_122117_elem == nullptr)) {
			_case_begin_22b839db1:;
			{
				return nullptr;
			}
		}
		else if (((_229a81181_arr(_122117_elem.ptr()) != nullptr) && _229a81181_arr(_122117_elem.ptr()).get()._field_auto)) {
			_case_begin_22b839e38:;
			{
				_229a8bec2_push_err(&(*_self_), _121632_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22b839d06:;
	};
	return jule::new_ptr<_229a87022_Slc>(_229a87022_Slc{._field_elem=_122117_elem});
}



inline jule::Ptr<_229a891bc_Arr> _229a923c3_build_arr(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d2a6a1_ArrTypeDecl> _123732_decl) {
	jule::Bool _123813_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_123813_not_plain;
	});;
	jule::I64 _124217_n = 0LL;;
	if ((!(_228d2aa7a_auto_sized(_123732_decl.ptr())))) {
		jule::Ptr<_229a527d4_Data> _124521_size = _229a6ea21_eval_expr(_2299e6a64_eval((*_self_)._field_s, (*_self_)._field_lookup), _123732_decl.get()._field_size);;
		if ((_124521_size == nullptr)) {
			return nullptr;
		};
		if ((!(_229a53197_is_const(_124521_size.ptr())))) {
			_229a8bec2_push_err(&(*_self_), _123732_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_229a8046b_prim(_124521_size.get()._field_kind.ptr()) == nullptr) || (!(_2299b5e62_is_int(_229a8046b_prim(_124521_size.get()._field_kind.ptr()).get()._field_kind))))) {
			_229a8bec2_push_err(&(*_self_), _123732_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_124217_n=static_cast<jule::I64>(static_cast<jule::I64>(_228dd81cb_as_i64(_124521_size.get()._field_constant.ptr())));
		if ((_124217_n < 0LL)) {
			_229a8bec2_push_err(&(*_self_), _123732_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_22999b134_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_124217_n) > _2299b0a83_max(jule::Str("int", 3))))) {
			_229a8bec2_push_err(&(*_self_), _123732_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_229a7d359_TypeKind> _126817_elem = _229a93a34_check_decl(&(*_self_), _123732_decl.get()._field_elem);;
	{
		
		if ((_126817_elem == nullptr)) {
			_case_begin_22b843a8a:;
			{
				return nullptr;
			}
		}
		else if (((_229a81181_arr(_126817_elem.ptr()) != nullptr) && _229a81181_arr(_126817_elem.ptr()).get()._field_auto)) {
			_case_begin_22b843b01:;
			{
				_229a8bec2_push_err(&(*_self_), _123732_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22b843815:;
	};
	return jule::new_ptr<_229a891bc_Arr>(_229a891bc_Arr{._field_auto=_228d2aa7a_auto_sized(_123732_decl.ptr()), ._field_n=_124217_n, ._field_elem=_126817_elem});
}



inline jule::Ptr<_229a885c8_Map> _229a926d1_build_map(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d2adee_MapTypeDecl> _128632_decl) {
	jule::Bool _128713_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_128713_not_plain;
	});;
	jule::Ptr<_229a7d359_TypeKind> _129117_key = _229a93a34_check_decl(&(*_self_), _128632_decl.get()._field_key);;
	if ((_129117_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_229a7d359_TypeKind> _129617_val = _229a93a34_check_decl(&(*_self_), _128632_decl.get()._field_val);;
	if ((_129617_val == nullptr)) {
		return nullptr;
	};
	if ((_229a80ba8_enm(_129617_val.ptr()) != nullptr)) {
		_229a8bec2_push_err(&(*_self_), _128632_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_229a885c8_Map>(_229a885c8_Map{._field_key=_129117_key, ._field_val=_129617_val});
}



inline jule::Ptr<_229a87aa0_Tuple> _229a929de_build_tuple(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d29c33_TupleTypeDecl> _131034_decl) {
	jule::Slice<jule::Ptr<_229a7d359_TypeKind>> _131117_types = jule::Slice<jule::Ptr<_229a7d359_TypeKind>>::alloc(0LL,_131034_decl.get()._field_types.len());;
	{
		auto &expr = _131034_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_22b8492cc:;
		if (it != expr.end()) {
			jule::Ptr<_228d28193_TypeDecl> _131221_t = *it;
			{
				jule::Ptr<_229a7d359_TypeKind> _131321_kind = _229a93a34_check_decl(&(*_self_), _131221_t);;
				if ((_131321_kind == nullptr)) {
					return nullptr;
				};
				_131117_types = jule::alloc_for_append(_131117_types,1);_131117_types.__push(_131321_kind);;
			}
			_iter_next_22b8492cc:;
			++it;
			goto _iter_begin_22b8492cc;
		}
		_iter_end_22b8492cc:;
	};
	return jule::new_ptr<_229a87aa0_Tuple>(_229a87aa0_Tuple{._field_types=_131117_types});
}



inline jule::Bool _229a92cec_check_fn_types(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228de996d_FnIns>& _132338_f) {
	jule::Bool _132351_ok = jule::Bool();
	{
		auto &expr = _132338_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_22b84b224:;
		if (it != expr.end()) {
			jule::Ptr<_228de8a9e_ParamIns> _132421_p = *it;
			{
				_132421_p.get()._field_kind=_229a93726_build(&(*_self_), _132421_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_132351_ok=(_132421_p.get()._field_kind != nullptr);
				if ((!(_132351_ok))) {
					_132351_ok = false;
					return _132351_ok;
				};
				_2299e8ed9_check_fn_param_kind((*_self_)._field_s, _132421_p);
			}
			_iter_next_22b84b224:;
			++it;
			goto _iter_begin_22b84b224;
		}
		_iter_end_22b84b224:;
	};
	if ((!(_228de722e_is_void(_132338_f.get()._field_decl.ptr())))) {
		_132338_f.get()._field_result=_229a93726_build(&(*_self_), _132338_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_132351_ok = (_132338_f.get()._field_result != nullptr);
		return _132351_ok;
	};
	_132351_ok = true;
	return _132351_ok;
}



inline jule::Ptr<_228de996d_FnIns> _229a9310a_build_fn(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d39ea7_FnDecl> _134131_decl) {
	if ((_134131_decl.get()._field_generics.len() > 0LL)) {
		_229a8bec2_push_err(&(*_self_), _134131_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_228de6cbc_Fn> _134717_f = _228e0049b_build_fn(_134131_decl);;
	jule::I64 _134913_n = (*_self_)._field_s.get()._field_errors.len();;
	_229a010e0_check_fn_decl((*_self_)._field_s, _134717_f);
	if ((_134913_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_228de996d_FnIns> _135517_ins = _228de81a8_instance_force(_134717_f);;
	_135517_ins.get()._field_anon=true;
	jule::Bool _135813_ok = _229a92cec_check_fn_types(&(*_self_), _135517_ins);;
	if ((!(_135813_ok))) {
		return nullptr;
	};
	return _135517_ins;
}



inline jule::Trait<_229a7ce2a_Kind> _229a93418_build_by_namespace(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d29260_NamespaceTypeDecl> _136641_decl) {
	jule::Str _136713_path = _229a95daa_build_link_path_by_tokens(_136641_decl.get()._field_idents);;
	jule::Ptr<_2299d5646_ImportInfo> _136817_imp = _229a98e02_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._229a973b7_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_2299d5646_ImportInfo>)>([=](jule::Ptr<_2299d5646_ImportInfo> _136853_imp) mutable -> jule::Bool {
		if (((_136641_decl.get()._field_idents.len() == 1LL) && (_136853_imp.get()._field_alias == _136713_path))) {
			return true;
		};
		return ((_136853_imp.get()._field_link_path == _136713_path) && _2299d82a3_is_accessible_via_selection(_136853_imp.ptr()));
	}));;
	if (((_136817_imp == nullptr) || (!(_2299d7c0e_is_lookupable(_136817_imp.ptr(), jule::Str("self", 4)))))) {
		_229a8bec2_push_err(&(*_self_), _136641_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_136713_path)}));
		return nullptr;
	};
	_229a8c379_disallow_builtin(&(*_self_));
	jule::Trait<_229a98e02_Lookup> _138117_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_229a98e02_Lookup>(_136817_imp, 1);
	jule::Ptr<_229a7d359_TypeKind> _138317_kind = _229a93a34_check_decl(&(*_self_), _136641_decl.get()._field_kind);;
	(*_self_)._field_lookup=_138117_lookup;
	_229a8c19d_allow_builtin(&(*_self_));
	return jule::Trait<_229a7ce2a_Kind>(_138317_kind, 5);
}



inline jule::Ptr<_229a7d359_TypeKind> _229a93726_build(_229a8b7b8_TypeChecker* _self_, jule::Any& _139029_decl_kind) {
	jule::Trait<_229a7ce2a_Kind> _139117_kind = nullptr;;
	{
		auto &_match_expr{ _139029_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d28759_IdentTypeDecl>>()) {
			_case_begin_22b859a7e:;
			{
				jule::Trait<_229a7ce2a_Kind> _139421_t = _229a90c62_build_ident(&(*_self_), _139029_decl_kind.operator jule::Ptr<_228d28759_IdentTypeDecl>());;
				if ((_139421_t != nullptr)) {
					_139117_kind=_139421_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d28da8_SubIdentTypeDecl>>()) {
			_case_begin_22b85a40e:;
			{
				jule::Trait<_229a7ce2a_Kind> _139921_t = _229a91070_build_sub_ident(&(*_self_), _139029_decl_kind.operator jule::Ptr<_228d28da8_SubIdentTypeDecl>());;
				if ((_139921_t != nullptr)) {
					_139117_kind=_139921_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2954b_SptrTypeDecl>>()) {
			_case_begin_22b85a475:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_229a865b5_Sptr> _140521_t = _229a9168b_build_sptr(&(*_self_), _139029_decl_kind.operator jule::Ptr<_228d2954b_SptrTypeDecl>());;
				if ((_140521_t != nullptr)) {
					_139117_kind=jule::Trait<_229a7ce2a_Kind>(_140521_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2a01e_PtrTypeDecl>>()) {
			_case_begin_22b858c6a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_229a89b29_Ptr> _141121_t = _229a91ca7_build_ptr(&(*_self_), _139029_decl_kind.operator jule::Ptr<_228d2a01e_PtrTypeDecl>());;
				if ((_141121_t != nullptr)) {
					_139117_kind=jule::Trait<_229a7ce2a_Kind>(_141121_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d29947_SlcTypeDecl>>()) {
			_case_begin_22b858cd1:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_229a87022_Slc> _141721_t = _229a920b5_build_slc(&(*_self_), _139029_decl_kind.operator jule::Ptr<_228d29947_SlcTypeDecl>());;
				if ((_141721_t != nullptr)) {
					_139117_kind=jule::Trait<_229a7ce2a_Kind>(_141721_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2a6a1_ArrTypeDecl>>()) {
			_case_begin_22b858d47:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_229a891bc_Arr> _142321_t = _229a923c3_build_arr(&(*_self_), _139029_decl_kind.operator jule::Ptr<_228d2a6a1_ArrTypeDecl>());;
				if ((_142321_t != nullptr)) {
					_139117_kind=jule::Trait<_229a7ce2a_Kind>(_142321_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2adee_MapTypeDecl>>()) {
			_case_begin_22b858dad:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_229a885c8_Map> _142921_t = _229a926d1_build_map(&(*_self_), _139029_decl_kind.operator jule::Ptr<_228d2adee_MapTypeDecl>());;
				if ((_142921_t != nullptr)) {
					_139117_kind=jule::Trait<_229a7ce2a_Kind>(_142921_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d29c33_TupleTypeDecl>>()) {
			_case_begin_22b85ab18:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_229a87aa0_Tuple> _143521_t = _229a929de_build_tuple(&(*_self_), _139029_decl_kind.operator jule::Ptr<_228d29c33_TupleTypeDecl>());;
				if ((_143521_t != nullptr)) {
					_139117_kind=jule::Trait<_229a7ce2a_Kind>(_143521_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d39ea7_FnDecl>>()) {
			_case_begin_22b85ab7e:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_228de996d_FnIns> _144121_t = _229a9310a_build_fn(&(*_self_), _139029_decl_kind.operator jule::Ptr<_228d39ea7_FnDecl>());;
				if ((_144121_t != nullptr)) {
					_139117_kind=jule::Trait<_229a7ce2a_Kind>(_144121_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d29260_NamespaceTypeDecl>>()) {
			_case_begin_22b85abe5:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_229a7ce2a_Kind> _144721_t = _229a93418_build_by_namespace(&(*_self_), _139029_decl_kind.operator jule::Ptr<_228d29260_NamespaceTypeDecl>());;
				if ((_144721_t != nullptr)) {
					_139117_kind=_144721_t;
				};
			}
		}
		else {
			_case_begin_22b858ac2:;
			{
				jule::Any _145221_udecl_kind = (*(((jule::Any*)((&(_139029_decl_kind))))));;
				{
					auto &_match_expr{ _145221_udecl_kind };
					
					if (_match_expr.type_is<jule::Ptr<_229a865b5_Sptr>>()) {
						_case_begin_22b8599a2:;
						{
							_139117_kind=jule::Trait<_229a7ce2a_Kind>(_145221_udecl_kind.operator jule::Ptr<_229a865b5_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_229a89b29_Ptr>>()) {
						_case_begin_22b859a18:;
						{
							_139117_kind=jule::Trait<_229a7ce2a_Kind>(_145221_udecl_kind.operator jule::Ptr<_229a89b29_Ptr>(), 12);
						}
					}
					else {
						_case_begin_22b85984d:;
						{
							_229a8bec2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_22b859760:;
				};
			}
		}
		_match_end_22b858a6c:;
	};
	if ((_139117_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _139117_kind };
		
		if (_match_expr.type_is<jule::Ptr<_229a7d359_TypeKind>>()) {
			_case_begin_22b867d9a:;
			{
				return _139117_kind.operator jule::Ptr<_229a7d359_TypeKind>();
			}
		}
		else {
			_case_begin_22b8676d5:;
			{
				return jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=_139117_kind});
			}
		}
		_match_end_22b85b223:;
	};
}



inline jule::Ptr<_229a7d359_TypeKind> _229a93a34_check_decl(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_228d28193_TypeDecl>& _147634_decl) {
	jule::Ptr<_2276b1a1c_Token> _147817_error_token = (*_self_)._field_error_token;;
	(*_self_)._field_error_token=_147634_decl.get()._field_token;
	jule::Ptr<_229a7d359_TypeKind> _148117_kind = _229a93726_build(&(*_self_), _147634_decl.get()._field_kind);;
	(*_self_)._field_error_token=_147817_error_token;
	return _148117_kind;
}



inline void _229a93ca9_check(_229a8b7b8_TypeChecker* _self_, jule::Ptr<_229a824b2_TypeSymbol>& _148729_t) {
	if ((_148729_t.get()._field_decl == nullptr)) {
		return;;
	};
	jule::Ptr<_229a7d359_TypeKind> _149117_kind = _229a93a34_check_decl(&(*_self_), _148729_t.get()._field_decl);;
	if ((_149117_kind == nullptr)) {
		_229a82a45_remove_kind(_148729_t.ptr());
		return;;
	};
	_148729_t.get()._field_kind=_149117_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _229a8b7b8_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__229a94419___ident_type_decl(jule::Str& _150334_ident, jule::Ptr<_228d28759_IdentTypeDecl> _150346_t) {
	if ((_150346_t.get()._field_ident == _150334_ident)) {
		return true;
	};
	{
		auto &expr = _150346_t.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22b86b8d7:;
		if (it != expr.end()) {
			jule::Ptr<_228d28193_TypeDecl> &_150716_g = *it;
			{
				if (static__229a9475a_exist(_150334_ident,_150716_g.get()._field_kind)) {
					return true;
				};
			}
			_iter_next_22b86b8d7:;
			++it;
			goto _iter_begin_22b86b8d7;
		}
		_iter_end_22b86b8d7:;
	};
	return false;
}



inline jule::Bool static__229a9475a_exist(jule::Str& _151522_ident, jule::Any& _151535_k) {
	{
		auto &_match_expr{ _151535_k };
		
		if (_match_expr.type_is<jule::Ptr<_228d28759_IdentTypeDecl>>()) {
			_case_begin_22b86c9d7:;
			{
				return static__229a94419___ident_type_decl(_151522_ident,_151535_k.operator jule::Ptr<_228d28759_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d28da8_SubIdentTypeDecl>>()) {
			_case_begin_22b86ca4d:;
			{
				jule::Ptr<_228d28da8_SubIdentTypeDecl> _152017_sit = _151535_k.operator jule::Ptr<_228d28da8_SubIdentTypeDecl>();;
				{
					auto &expr = _152017_sit.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_22b86e357:;
					if (it != expr.end()) {
						jule::Ptr<_228d28759_IdentTypeDecl> &_152120_id = *it;
						{
							if (static__229a94419___ident_type_decl(_151522_ident,_152120_id)) {
								return true;
							};
						}
						_iter_next_22b86e357:;
						++it;
						goto _iter_begin_22b86e357;
					}
					_iter_end_22b86e357:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2954b_SptrTypeDecl>>()) {
			_case_begin_22b86cc3a:;
			{
				jule::Ptr<_228d2954b_SptrTypeDecl> _152817_sptr = _151535_k.operator jule::Ptr<_228d2954b_SptrTypeDecl>();;
				return static__229a9475a_exist(_151522_ident,_152817_sptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2a01e_PtrTypeDecl>>()) {
			_case_begin_22b86cca1:;
			{
				jule::Ptr<_228d2a01e_PtrTypeDecl> _153117_ptr = _151535_k.operator jule::Ptr<_228d2a01e_PtrTypeDecl>();;
				return static__229a9475a_exist(_151522_ident,_153117_ptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d29947_SlcTypeDecl>>()) {
			_case_begin_22b86cd17:;
			{
				jule::Ptr<_228d29947_SlcTypeDecl> _153417_slc = _151535_k.operator jule::Ptr<_228d29947_SlcTypeDecl>();;
				return static__229a9475a_exist(_151522_ident,_153417_slc.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2a6a1_ArrTypeDecl>>()) {
			_case_begin_22b86cd7d:;
			{
				jule::Ptr<_228d2a6a1_ArrTypeDecl> _153717_arr = _151535_k.operator jule::Ptr<_228d2a6a1_ArrTypeDecl>();;
				return static__229a9475a_exist(_151522_ident,_153717_arr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2adee_MapTypeDecl>>()) {
			_case_begin_22b86cde4:;
			{
				jule::Ptr<_228d2adee_MapTypeDecl> _154017_map = _151535_k.operator jule::Ptr<_228d2adee_MapTypeDecl>();;
				return (static__229a9475a_exist(_151522_ident,_154017_map.get()._field_key.get()._field_kind) || static__229a9475a_exist(_151522_ident,_154017_map.get()._field_val.get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d39ea7_FnDecl>>()) {
			_case_begin_22b86ce5a:;
			{
				jule::Ptr<_228d39ea7_FnDecl> _154417_f = _151535_k.operator jule::Ptr<_228d39ea7_FnDecl>();;
				{
					auto &expr = _154417_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_22b874703:;
					if (it != expr.end()) {
						jule::Ptr<_228d38b87_ParamDecl> &_154520_p = *it;
						{
							if (_228d38eea_is_self(_154520_p.ptr())) {
								goto _iter_next_22b874703;
							};
							if (static__229a9475a_exist(_151522_ident,_154520_p.get()._field_kind.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_22b874703:;
						++it;
						goto _iter_begin_22b874703;
					}
					_iter_end_22b874703:;
				};
				if ((_154417_f.get()._field_result != nullptr)) {
					return static__229a9475a_exist(_151522_ident,_154417_f.get()._field_result.get()._field_kind.get()._field_kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d29c33_TupleTypeDecl>>()) {
			_case_begin_22b86ced2:;
			{
				jule::Ptr<_228d29c33_TupleTypeDecl> _155817_tup = _151535_k.operator jule::Ptr<_228d29c33_TupleTypeDecl>();;
				{
					auto &expr = _155817_tup.get()._field_types;
					auto it = expr.begin();
					_iter_begin_22b876c44:;
					if (it != expr.end()) {
						jule::Ptr<_228d28193_TypeDecl> &_155920_t = *it;
						{
							if (static__229a9475a_exist(_151522_ident,_155920_t.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_22b876c44:;
						++it;
						goto _iter_begin_22b876c44;
					}
					_iter_end_22b876c44:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d29260_NamespaceTypeDecl>>()) {
			_case_begin_22b86d059:;
			{
				jule::Ptr<_228d29260_NamespaceTypeDecl> _156617_ns = _151535_k.operator jule::Ptr<_228d29260_NamespaceTypeDecl>();;
				return static__229a9475a_exist(_151522_ident,_156617_ns.get()._field_kind.get()._field_kind);
			}
		}
		else {
			_case_begin_22b86c81c:;
			{
				return false;
			}
		}
		_match_end_22b86c7b7:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _229a93ec9_IdentTypeLookup _Src) {
	_Stream << "IdentTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22a422945_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22a4774d3_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _22a478490_stop(_22a477d0d_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _22a478704_stopped(_22a477d0d_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _22a478968_finished(_22a477d0d_ScopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _22a478bcc_is_last_st(_22a477d0d_ScopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _22a478eeb_push_err(_22a477d0d_ScopeParser* _self_, jule::Ptr<_2276b1a1c_Token> _19227_token, jule::Str _19242_fmt) {
	_22a494500_push_err((*_self_)._field_p.ptr(), _19227_token,_19242_fmt,jule::Slice<jule::Any>());
}



inline void _22a47931a_push_suggestion(_22a477d0d_ScopeParser* _self_, jule::Str _19734_fmt, jule::Slice<jule::Any> _19747_args) {
	_22a49481e_push_suggestion((*_self_)._field_p.ptr(), _19734_fmt,jule::Any(_19747_args));
}



inline void _22a479590_insert_as_next(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _20138_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_22a4774d3_stmt>(_22a4774d3_stmt{._field_tokens=_20138_tokens, });
}



inline jule::Ptr<_22a4774d3_stmt> _22a479804_next(_22a477d0d_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_228d384b1_ScopeTree> _22a479bab_build_scope(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _21135_tokens, jule::Ptr<_2276b1a1c_Token> _21157_end) {
	jule::Ptr<_228d384b1_ScopeTree> _21217_s = _22a47637d_new_scope();;
	_21217_s.get()._field_parent=(*_self_)._field_s;
	_21217_s.get()._field_end=_21157_end;
	_22a477d0d_ScopeParser _21517_ssp = _22a477d0d_ScopeParser{._field_p=(*_self_)._field_p, };;
	_22a483830_build(&_21517_ssp, _21135_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_228d3ae86_VarDecl> _22a479eb9_build_var_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _22236_tokens) {
	jule::Ptr<_228d3ae86_VarDecl> _22317_v = _22a496ee7_build_var((*_self_)._field_p, _22236_tokens);;
	_22317_v.get()._field_scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_228d3b33d_RetSt> _22a47a2c7_build_ret_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _22835_tokens) {
	jule::Ptr<_228d3b33d_RetSt> _22917_st = jule::new_ptr<_228d3b33d_RetSt>(_228d3b33d_RetSt{._field_token=_22835_tokens[0LL], });;
	if ((_22835_tokens.len() > 1LL)) {
		_22835_tokens=_22835_tokens.slice(1LL);
		_22917_st.get()._field_expr=_22a494b2c_build_expr((*_self_)._field_p, _22835_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_228d3b99d_Iter> _22a47a5d5_build_while_next_iter(_22a477d0d_ScopeParser* _self_, jule::Ptr<_22a4774d3_stmt>& _23945_s) {
	jule::Ptr<_228d3b99d_Iter> _24017_it = jule::new_ptr<_228d3b99d_Iter>(_228d3b99d_Iter{._field_token=_23945_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _24317_tokens = _23945_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_228d3c273_WhileKind> _24417_kind = jule::new_ptr<_228d3c273_WhileKind>(_228d3c273_WhileKind{});;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_expr=_22a494b2c_build_expr((*_self_)._field_p, _24317_tokens);
	};
	if (_22a478bcc_is_last_st(&(*_self_))) {
		_22a478eeb_push_err(&(*_self_), _24017_it.get()._field_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_22a479804_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _25617_st_tokens = _22a4842ae_get_block_expr(_24317_tokens);;
	if ((_25617_st_tokens.len() > 0LL)) {
		jule::Ptr<_22a4774d3_stmt> _25821_stmt = jule::new_ptr<_22a4774d3_stmt>(_22a4774d3_stmt{._field_tokens=_25617_st_tokens, ._field_terminated=_23945_s.get()._field_terminated});;
		_24417_kind.get()._field_next_token=_25617_st_tokens[0LL];
		_24417_kind.get()._field_next=_22a483511_build_st(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_st_tokens.len();;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _26717_block_tokens = _22a491c4a_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_block_tokens == nullptr)) {
		_22a478490_stop(&(*_self_));
		_22a478eeb_push_err(&(*_self_), _24017_it.get()._field_token,jule::Str("body is not exist", 17));
		_22a47931a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_22a478eeb_push_err(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_scope=_22a479bab_build_scope(&(*_self_), _26717_block_tokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_228d3c273_WhileKind> _22a47a8e3_build_while_iter_kind(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _28445_tokens) {
	return jule::new_ptr<_228d3c273_WhileKind>(_228d3c273_WhileKind{._field_expr=_22a494b2c_build_expr((*_self_)._field_p, _28445_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a47ac23_get_range_kind_keys_tokens(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _29050_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _29118_vars;;
	jule::Slice<_2409487a2_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _22a49283e_parts(_29050_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_228d3ae86_VarDecl> _22a47b042_build_range_kind_key(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _29644_tokens) {
	if ((_29644_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_228d3ae86_VarDecl> _30017_key = jule::new_ptr<_228d3ae86_VarDecl>(_228d3ae86_VarDecl{._field_token=_29644_tokens[0LL], });;
	if ((_30017_key.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_30017_key.get()._field_mutable=true;
		if ((_29644_tokens.len() == 1LL)) {
			_22a478eeb_push_err(&(*_self_), _30017_key.get()._field_token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_token=_29644_tokens[1LL];
	} else if ((_29644_tokens.len() > 1LL)) {
		_22a478eeb_push_err(&(*_self_), _29644_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a478eeb_push_err(&(*_self_), _30017_key.get()._field_token,jule::Str("invalid syntax", 14));
		_22a47931a_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_ident=_30017_key.get()._field_token.get()._field_kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_228d3ae86_VarDecl>> _22a47b350_build_range_kind_keys(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>& _32145_parts) {
	jule::Slice<jule::Ptr<_228d3ae86_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32145_parts;
		auto it = expr.begin();
		_iter_begin_22d77d495:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_22a47b042_build_range_kind_key(&(*_self_), _32321_tokens));;
			}
			_iter_next_22d77d495:;
			++it;
			goto _iter_begin_22d77d495;
		}
		_iter_end_22d77d495:;
	};
	return _32217_keys;
}



inline void _22a47b691_setup_range_kind_keys_plain(_22a477d0d_ScopeParser* _self_, jule::Ptr<_228d3cb14_RangeKind>& _32951_rng, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _32973_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _33017_key_tokens = _22a47ac23_get_range_kind_keys_tokens(&(*_self_), _32973_tokens);;
	if ((_33017_key_tokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_key_tokens.len() > 2LL)) {
		_22a478eeb_push_err(&(*_self_), _32951_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_228d3ae86_VarDecl>> _33717_keys = _22a47b350_build_range_kind_keys(&(*_self_), _33017_key_tokens);;
	_32951_rng.get()._field_key_a=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32951_rng.get()._field_key_b=_33717_keys[1LL];
	};
}



inline void _22a47b9e3_setup_range_kind_keys_explicit(_22a477d0d_ScopeParser* _self_, jule::Ptr<_228d3cb14_RangeKind>& _34454_rng, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _34476_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _34617_rang = _22a491c4a_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34476_tokens);;
	if ((_34517_i < _34476_tokens.len())) {
		_22a478eeb_push_err(&(*_self_), _34454_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	};
	_22a47b691_setup_range_kind_keys_plain(&(*_self_), _34454_rng,_34617_rang);
}



inline void _22a47bd23_setup_range_kind_keys(_22a477d0d_ScopeParser* _self_, jule::Ptr<_228d3cb14_RangeKind>& _35345_rng, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _35367_tokens) {
	if ((_35367_tokens[0LL].get()._field_id == static_cast<jule::U64>(3LLU))) {
		if ((_35367_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_22a478eeb_push_err(&(*_self_), _35367_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_22a47b9e3_setup_range_kind_keys_explicit(&(*_self_), _35345_rng,_35367_tokens);
		return;;
	};
	_22a47b691_setup_range_kind_keys_plain(&(*_self_), _35345_rng,_35367_tokens);
}



inline jule::Ptr<_228d3cb14_RangeKind> _22a47c274_build_range_iter_kind(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _36545_var_tokens, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _36614_expr_tokens, jule::Ptr<_2276b1a1c_Token>& _36642_in_token) {
	jule::Ptr<_228d3cb14_RangeKind> _36717_rng = jule::new_ptr<_228d3cb14_RangeKind>(_228d3cb14_RangeKind{._field_in_token=_36642_in_token, });;
	if ((_36614_expr_tokens.len() == 0LL)) {
		_22a478eeb_push_err(&(*_self_), _36717_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_expr=_22a494b2c_build_expr((*_self_)._field_p, _36614_expr_tokens);
	if ((_36545_var_tokens.len() > 0LL)) {
		_22a47bd23_setup_range_kind_keys(&(*_self_), _36717_rng,_36545_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _22a47c62b_build_common_iter_kind(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _38146_tokens, jule::Ptr<_2276b1a1c_Token>& _38165_err_tok) {
	jule::I64 _38217_brace_n = 0LL;;
	{
		auto &expr = _38146_tokens;
		auto it = expr.begin();
		_iter_begin_22d7890b6:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_22d78a073:;
							{
								(_38217_brace_n)++;
								goto _iter_next_22d7890b6;
							}
						}
						else {
							_case_begin_22d78a34d:;
							{
								(_38217_brace_n)--;
							}
						}
						_match_end_22d78a13e:;
					};
				};
				if ((_38217_brace_n != 0LL)) {
					goto _iter_next_22d7890b6;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_22d789c65:;
						{
							jule::Slice<jule::Ptr<_2276b1a1c_Token>> _40025_decl_tokens = _38146_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_2276b1a1c_Token>> _40125_expr_tokens = _38146_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_22a47c274_build_range_iter_kind(&(*_self_), _40025_decl_tokens,_40125_expr_tokens,_38321_tok));
						}
					}
					_match_end_22d78a815:;
				};
			}
			_iter_next_22d7890b6:;
			++it;
			_38314_i++;
			goto _iter_begin_22d7890b6;
		}
		_iter_end_22d7890b6:;
	};
	return static_cast<jule::Any>(_22a47a8e3_build_while_iter_kind(&(*_self_), _38146_tokens));
}



inline jule::Ptr<_228d3b99d_Iter> _22a47c939_build_common_iter(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _40840_tokens) {
	jule::Ptr<_228d3b99d_Iter> _40917_it = jule::new_ptr<_228d3b99d_Iter>(_228d3b99d_Iter{._field_token=_40840_tokens[0LL], });;
	_40840_tokens=_40840_tokens.slice(1LL);
	if ((_40840_tokens.len() == 0LL)) {
		_22a478490_stop(&(*_self_));
		_22a478eeb_push_err(&(*_self_), _40917_it.get()._field_token,jule::Str("body is not exist", 17));
		_22a47931a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _41917_expr_tokens = _22a4842ae_get_block_expr(_40840_tokens);;
	if ((_41917_expr_tokens.len() > 0LL)) {
		_40917_it.get()._field_kind=_22a47c62b_build_common_iter_kind(&(*_self_), _41917_expr_tokens,_40917_it.get()._field_token);
	};
	jule::I64 _42317_i = _41917_expr_tokens.len();;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _42417_scope_tokens = _22a491c4a_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40840_tokens);;
	if ((_42417_scope_tokens == nullptr)) {
		_22a478490_stop(&(*_self_));
		_22a478eeb_push_err(&(*_self_), _40917_it.get()._field_token,jule::Str("body is not exist", 17));
		_22a47931a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40840_tokens.len())) {
		_22a478eeb_push_err(&(*_self_), _40840_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_scope=_22a479bab_build_scope(&(*_self_), _42417_scope_tokens,_40840_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_228d3b99d_Iter> _22a47cc47_build_iter_st(_22a477d0d_ScopeParser* _self_, jule::Ptr<_22a4774d3_stmt>& _43837_st) {
	if (_43837_st.get()._field_terminated) {
		return _22a47a5d5_build_while_next_iter(&(*_self_), _43837_st);
	};
	return _22a47c939_build_common_iter(&(*_self_), _43837_st.get()._field_tokens);
}



inline jule::Ptr<_228d3cebb_BreakSt> _22a47d055_build_break_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _44538_tokens) {
	jule::Ptr<_228d3cebb_BreakSt> _44617_brk = jule::new_ptr<_228d3cebb_BreakSt>(_228d3cebb_BreakSt{._field_token=_44538_tokens[0LL], });;
	if ((_44538_tokens.len() > 1LL)) {
		if ((_44538_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_22a478eeb_push_err(&(*_self_), _44538_tokens[1LL],jule::Str("invalid syntax", 14));
			_22a47931a_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_label=_44538_tokens[1LL];
			if ((_44538_tokens.len() > 2LL)) {
				_22a478eeb_push_err(&(*_self_), _44538_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_228d3d373_ContSt> _22a47d363_build_cont_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _46337_tokens) {
	jule::Ptr<_228d3d373_ContSt> _46417_cont = jule::new_ptr<_228d3d373_ContSt>(_228d3d373_ContSt{._field_token=_46337_tokens[0LL], });;
	if ((_46337_tokens.len() > 1LL)) {
		if ((_46337_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_22a478eeb_push_err(&(*_self_), _46337_tokens[1LL],jule::Str("invalid syntax", 14));
			_22a47931a_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_label=_46337_tokens[1LL];
			if ((_46337_tokens.len() > 2LL)) {
				_22a478eeb_push_err(&(*_self_), _46337_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_228d3d7e6_If> _22a47d671_build_if(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _48132_tokens) {
	jule::Ptr<_228d3d7e6_If> _48217_model = jule::new_ptr<_228d3d7e6_If>(_228d3d7e6_If{._field_token=_48132_tokens[0LL], });;
	_48132_tokens=_48132_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _48617_expr_tokens = _22a4842ae_get_block_expr(_48132_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_expr_tokens.len() == 0LL)) {
		_22a478eeb_push_err(&(*_self_), _48217_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_expr_tokens.len());
	};
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _49317_scope_tokens = _22a491c4a_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48132_tokens);;
	if ((_49317_scope_tokens == nullptr)) {
		_22a478490_stop(&(*_self_));
		_22a478eeb_push_err(&(*_self_), _48217_model.get()._field_token,jule::Str("body is not exist", 17));
		_22a47931a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2276b1a1c_Token> _50017_end = _48132_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48132_tokens.len())) {
		if ((_48132_tokens[_48717_i].get()._field_id == static_cast<jule::U64>(17LLU))) {
			_48132_tokens=_48132_tokens.slice(_48717_i);
		} else {
			_22a478eeb_push_err(&(*_self_), _48132_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48132_tokens=nullptr;
		};
	};
	_48217_model.get()._field_expr=_22a494b2c_build_expr((*_self_)._field_p, _48617_expr_tokens);
	_48217_model.get()._field_scope=_22a479bab_build_scope(&(*_self_), _49317_scope_tokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_228d3db9d_Else> _22a47d97e_build_else(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _51434_tokens) {
	jule::Ptr<_228d3db9d_Else> _51517_els = jule::new_ptr<_228d3db9d_Else>(_228d3db9d_Else{._field_token=_51434_tokens[0LL], });;
	_51434_tokens=_51434_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _52017_scope_tokens = _22a491c4a_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51434_tokens);;
	if ((_52017_scope_tokens == nullptr)) {
		if ((_51917_i < _51434_tokens.len())) {
			_22a478eeb_push_err(&(*_self_), _51517_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_22a478490_stop(&(*_self_));
			_22a478eeb_push_err(&(*_self_), _51517_els.get()._field_token,jule::Str("body is not exist", 17));
			_22a47931a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51434_tokens.len())) {
		_22a478eeb_push_err(&(*_self_), _51434_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_scope=_22a479bab_build_scope(&(*_self_), _52017_scope_tokens,_51434_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_228d3e121_Conditional> _22a47dc8c_build_if_else_chain(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _53842_tokens) {
	jule::Ptr<_228d3e121_Conditional> _53917_chain = jule::new_ptr<_228d3e121_Conditional>(_228d3e121_Conditional{._field_head=_22a47d671_build_if(&(*_self_), _53842_tokens), });;
	if ((_53917_chain.get()._field_head == nullptr)) {
		return nullptr;
	};
	while ((_53842_tokens.len() != 0LL)) {
		{
			if ((_53842_tokens[0LL].get()._field_id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_22d7ab539;
			};
			if (((_53842_tokens.len() > 1LL) && (_53842_tokens[1LL].get()._field_id == static_cast<jule::U64>(16LLU)))) {
				_53842_tokens=_53842_tokens.slice(1LL);
				jule::Ptr<_228d3d7e6_If> _55125_elif = _22a47d671_build_if(&(*_self_), _53842_tokens);;
				_53917_chain.get()._field_tail = jule::alloc_for_append(_53917_chain.get()._field_tail,1);_53917_chain.get()._field_tail.__push(_55125_elif);;
				goto _iter_next_22d7ab539;
			};
			_53917_chain.get()._field_default=_22a47d97e_build_else(&(*_self_), _53842_tokens);
			goto _iter_end_22d7ab539;
		}
	_iter_next_22d7ab539:;
	}
	_iter_end_22d7ab539:;;
	return _53917_chain;
}



inline jule::Ptr<_228d2e2a9_CoExpr> _22a47e09a_build_co_call_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _56139_tokens) {
	jule::Ptr<_228d2e2a9_CoExpr> _56217_c = jule::new_ptr<_228d2e2a9_CoExpr>(_228d2e2a9_CoExpr{._field_token=_56139_tokens[0LL], });;
	_56139_tokens=_56139_tokens.slice(1LL);
	_56217_c.get()._field_expr=_22a494b2c_build_expr((*_self_)._field_p, _56139_tokens);
	return _56217_c;
}



inline jule::Ptr<_228d35ed6_GotoSt> _22a47e3a8_build_goto_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _57037_tokens) {
	jule::Ptr<_228d35ed6_GotoSt> _57117_gt = jule::new_ptr<_228d35ed6_GotoSt>(_228d35ed6_GotoSt{._field_token=_57037_tokens[0LL], });;
	if ((_57037_tokens.len() == 1LL)) {
		_22a478eeb_push_err(&(*_self_), _57117_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57037_tokens.len() > 2LL)) {
		_22a478eeb_push_err(&(*_self_), _57037_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_2276b1a1c_Token> _58017_ident_token = _57037_tokens[1LL];;
	if ((_58017_ident_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a478eeb_push_err(&(*_self_), _58017_ident_token,jule::Str("invalid syntax", 14));
		_22a47931a_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_label=_58017_ident_token;
	return _57117_gt;
}



inline jule::Ptr<_228d362c2_FallSt> _22a47e6b6_build_fall_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _59037_tokens) {
	jule::Ptr<_228d362c2_FallSt> _59117_fll = jule::new_ptr<_228d362c2_FallSt>(_228d362c2_FallSt{._field_token=_59037_tokens[0LL]});;
	if ((_59037_tokens.len() > 1LL)) {
		_22a478eeb_push_err(&(*_self_), _59037_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_228d3e7e7_TypeAliasDecl> _22a47e9c4_build_type_alias_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _60043_tokens) {
	jule::Ptr<_228d3e7e7_TypeAliasDecl> _60117_tad = _22a496227_build_type_alias_decl((*_self_)._field_p, _60043_tokens);;
	_60117_tad.get()._field_scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _22a47ee36_push_case_expr(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _60637_tokens, jule::Ptr<_2276b1a1c_Token> _60659_token, jule::Bool _6079_type_match, jule::Slice<jule::Ptr<_228d2c6b4_Expr>>& _60732_exprs) {
	if ((_60637_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_type_match) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_228d28193_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _22a495e19_build_type((*_self_)._field_p, _60637_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60732_exprs = jule::alloc_for_append(_60732_exprs,1);_60732_exprs.__push(jule::new_ptr<_228d2c6b4_Expr>(_228d2c6b4_Expr{._field_token=_60637_tokens[0LL], ._field_end=_60637_tokens[(_60637_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60637_tokens.len())) {
				_22a478eeb_push_err(&(*_self_), _60637_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60732_exprs = jule::alloc_for_append(_60732_exprs,1);_60732_exprs.__push(_22a494b2c_build_expr((*_self_)._field_p, _60637_tokens));;
}



inline jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _22a4802dd_build_case_exprs(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _63040_tokens, jule::Bool _63058_type_match) {
	jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_228d2c6b4_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_brace_n = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63040_tokens;
		auto it = expr.begin();
		_iter_begin_22d7bbacc:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_22d7bcb33:;
							{
								(_63317_brace_n)++;
							}
						}
						else {
							_case_begin_22d7bce0d:;
							{
								(_63317_brace_n)--;
							}
						}
						_match_end_22d7bcbee:;
					};
					goto _iter_next_22d7bbacc;
				} else if ((_63317_brace_n != 0LL)) {
					goto _iter_next_22d7bbacc;
				};
				{
					
					if (((_63521_tok.get()._field_id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_kind == jule::Str("|", 1)))) {
						_case_begin_22d7bdb01:;
						{
							jule::Slice<jule::Ptr<_2276b1a1c_Token>> _65121_expr_tokens = _63040_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_expr_tokens.len() == 0LL)) {
								_22a478eeb_push_err(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_22a47ee36_push_case_expr(&(*_self_), _63040_tokens.slice(_63417_j,_63514_i),_63521_tok,_63058_type_match,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_case_begin_22d7bdb67:;
						{
							_22a47ee36_push_case_expr(&(*_self_), _63040_tokens.slice(_63417_j,_63514_i),_63521_tok,_63058_type_match,_63117_exprs);
							_63040_tokens=_63040_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_22d7bd68e:;
				};
			}
			_iter_next_22d7bbacc:;
			++it;
			_63514_i++;
			goto _iter_begin_22d7bbacc;
		}
		_iter_end_22d7bbacc:;
	};
	_22a478eeb_push_err(&(*_self_), _63040_tokens[0LL],jule::Str("invalid syntax", 14));
	_63040_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_228d384b1_ScopeTree> _22a4805eb_build_case_scope(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _66940_tokens) {
	jule::I64 _67017_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67221_i = 0LL;;
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _67322_next;;
			std::tie(_67322_next,std::ignore) = _22a4771d6_skip_st(_67221_i,_66940_tokens.slice(_67017_n));
			if ((_67322_next.len() == 0LL)) {
				goto _iter_end_22d7c26a4;
			};
			jule::Ptr<_2276b1a1c_Token> _67717_tok = _67322_next[0LL];;
			if (((_67717_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_67717_tok.get()._field_kind != jule::Str("|", 1)))) {
				_67017_n+=_67221_i;
				goto _iter_next_22d7c26a4;
			};
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _68221_scope_tokens = _66940_tokens.slice(0LL,_67017_n);;
			jule::Ptr<_228d384b1_ScopeTree> _68321_scope = _22a479bab_build_scope(&(*_self_), _68221_scope_tokens,_66940_tokens[_67017_n]);;
			_66940_tokens=_66940_tokens.slice(_67017_n);
			return _68321_scope;
		}
	_iter_next_22d7c26a4:;
	}
	_iter_end_22d7c26a4:;;
	jule::Ptr<_2276b1a1c_Token> _68717_end = jule::Ptr<_2276b1a1c_Token>();;
	if ((_66940_tokens.len() > 0LL)) {
		_68717_end=_66940_tokens[(_66940_tokens.len() - 1LL)];
	};
	jule::Ptr<_228d384b1_ScopeTree> _69117_scope = _22a479bab_build_scope(&(*_self_), _66940_tokens,_68717_end);;
	_66940_tokens=nullptr;
	return _69117_scope;
}



inline std::tuple<jule::Ptr<_228d3ec6a_Case>,jule::Bool> _22a4809a3_build_case(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _69634_tokens, jule::Bool _69652_type_match) {
	jule::Ptr<_228d3ec6a_Case> _69717_c = jule::new_ptr<_228d3ec6a_Case>(_228d3ec6a_Case{._field_token=_69634_tokens[0LL], });;
	_69634_tokens=_69634_tokens.slice(1LL);
	_69717_c.get()._field_exprs=_22a4802dd_build_case_exprs(&(*_self_), _69634_tokens,_69652_type_match);
	_69717_c.get()._field_scope=_22a4805eb_build_case_scope(&(*_self_), _69634_tokens);
	jule::Bool _70313_is_default = (_69717_c.get()._field_exprs.len() == 0LL);;
	return std::make_tuple(_69717_c,_70313_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_228d3ec6a_Case>>,jule::Ptr<_228d3db9d_Else>> _22a480d5a_build_cases(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _70734_tokens, jule::Bool _70752_type_match) {
	jule::Slice<jule::Ptr<_228d3ec6a_Case>> _70817_cases = nullptr;;
	jule::Ptr<_228d3db9d_Else> _70917_def = nullptr;;
	jule::Bool _71017_def_not_last = false;;
	while ((_70734_tokens.len() > 0LL)) {
		{
			jule::Ptr<_2276b1a1c_Token> _71221_tok = _70734_tokens[0LL];;
			if (((_71221_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_71221_tok.get()._field_kind != jule::Str("|", 1)))) {
				_22a478eeb_push_err(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_22d7ca426;
			};
			jule::Ptr<_228d3ec6a_Case> _71722_c;;
			jule::Bool _71725_is_default;;
			std::tie(_71722_c,_71725_is_default) = _22a4809a3_build_case(&(*_self_), _70734_tokens,_70752_type_match);
			if (_71725_is_default) {
				_71722_c.get()._field_token=_71221_tok;
				if ((_70917_def == nullptr)) {
					_70917_def=jule::new_ptr<_228d3db9d_Else>(_228d3db9d_Else{._field_token=_71722_c.get()._field_token, ._field_scope=_71722_c.get()._field_scope});
				} else {
					_22a478eeb_push_err(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71017_def_not_last=(_71017_def_not_last || (_70917_def != nullptr));
				_70817_cases = jule::alloc_for_append(_70817_cases,1);_70817_cases.__push(_71722_c);;
			};
		}
	_iter_next_22d7ca426:;
	}
	_iter_end_22d7ca426:;;
	if (_71017_def_not_last) {
		_22a478eeb_push_err(&(*_self_), _70917_def.get()._field_token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70817_cases,_70917_def);
}



inline jule::Ptr<_228d40441_MatchCase> _22a481168_build_match_case(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _74139_tokens) {
	jule::Ptr<_228d40441_MatchCase> _74217_m = jule::new_ptr<_228d40441_MatchCase>(_228d40441_MatchCase{._field_token=_74139_tokens[0LL], });;
	_74139_tokens=_74139_tokens.slice(1LL);
	if (((_74139_tokens.len() > 0LL) && (_74139_tokens[0LL].get()._field_id == static_cast<jule::U64>(10LLU)))) {
		_74217_m.get()._field_type_match=true;
		_74139_tokens=_74139_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _75217_expr_tokens = _22a4842ae_get_block_expr(_74139_tokens);;
	if ((_75217_expr_tokens.len() > 0LL)) {
		_74217_m.get()._field_expr=_22a494b2c_build_expr((*_self_)._field_p, _75217_expr_tokens);
	} else if (_74217_m.get()._field_type_match) {
		_22a478eeb_push_err(&(*_self_), _74217_m.get()._field_token,jule::Str("expression missing", 18));
	};
	jule::I64 _75917_i = _75217_expr_tokens.len();;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _76017_block_toks = _22a491c4a_range(_75917_i,jule::Str("{", 1),jule::Str("}", 1),_74139_tokens);;
	if ((_76017_block_toks == nullptr)) {
		_22a478490_stop(&(*_self_));
		_22a478eeb_push_err(&(*_self_), _74217_m.get()._field_token,jule::Str("body is not exist", 17));
		_22a47931a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75917_i < _74139_tokens.len())) {
		_22a478eeb_push_err(&(*_self_), _74139_tokens[_75917_i],jule::Str("invalid syntax", 14));
	};
	_74217_m.get()._field_end=_74139_tokens[(_75917_i - 1LL)];
	std::tie(_74217_m.get()._field_cases,_74217_m.get()._field_default) = _22a480d5a_build_cases(&(*_self_), _76017_block_toks,_74217_m.get()._field_type_match);
	return _74217_m;
}



inline jule::Ptr<_228d384b1_ScopeTree> _22a481476_build_scope_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _77437_tokens) {
	jule::Bool _77517_is_unsafe = false;;
	jule::Bool _77617_is_deferred = false;;
	jule::Ptr<_2276b1a1c_Token> _77717_token = _77437_tokens[0LL];;
	if ((_77717_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_77517_is_unsafe=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if ((_77437_tokens.len() == 0LL)) {
			_22a478eeb_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77717_token=_77437_tokens[0LL];
		if ((_77717_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
			_77617_is_deferred=true;
			_77437_tokens=_77437_tokens.slice(1LL);
			if ((_77437_tokens.len() == 0LL)) {
				_22a478eeb_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77717_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
		_77617_is_deferred=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if ((_77437_tokens.len() == 0LL)) {
			_22a478eeb_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80317_i = 0LL;;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _80417_scope_tokens = _22a491c4a_range(_80317_i,jule::Str("{", 1),jule::Str("}", 1),_77437_tokens);;
	if ((_80417_scope_tokens == nullptr)) {
		_22a478eeb_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80317_i < _77437_tokens.len())) {
		_22a478eeb_push_err(&(*_self_), _77437_tokens[_80317_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_228d384b1_ScopeTree> _81117_scope = _22a479bab_build_scope(&(*_self_), _80417_scope_tokens,_77437_tokens[(_80317_i - 1LL)]);;
	_81117_scope.get()._field_unsafety=_77517_is_unsafe;
	_81117_scope.get()._field_deferred=_77617_is_deferred;
	return _81117_scope;
}



inline jule::Ptr<_228d35b2e_LabelSt> _22a481784_build_label_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _81738_tokens) {
	jule::Ptr<_228d35b2e_LabelSt> _81817_lbl = jule::new_ptr<_228d35b2e_LabelSt>(_228d35b2e_LabelSt{._field_token=_81738_tokens[0LL], ._field_ident=_81738_tokens[0LL].get()._field_kind});;
	if ((_81738_tokens.len() > 2LL)) {
		_81738_tokens=_81738_tokens.slice(2LL);
		_22a479590_insert_as_next(&(*_self_), _81738_tokens);
	};
	return _81817_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _22a481a92_build_id_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _83235_tokens) {
	jule::Bool _83265_ok = jule::Bool();
	if ((_83235_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83265_ok);
	};
	jule::Ptr<_2276b1a1c_Token> _83717_token = _83235_tokens[1LL];;
	{
		auto &_match_expr{ _83717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_22d7e10c9:;
			{
				_83265_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_22a481784_build_label_st(&(*_self_), _83235_tokens)),_83265_ok);
			}
		}
		_match_end_22d7e1c89:;
	};
	return std::make_tuple(jule::Any(),_83265_ok);
}



inline jule::Ptr<_22a49051d_AssignInfo> _22a481da0_build_assign_info(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _84641_tokens) {
	jule::Ptr<_22a49051d_AssignInfo> _84717_info = jule::new_ptr<_22a49051d_AssignInfo>(_22a49051d_AssignInfo{._field_ok=true});;
	jule::I64 _85017_brace_n = 0LL;;
	{
		auto &expr = _84641_tokens;
		auto it = expr.begin();
		_iter_begin_22d7e3ad2:;
		if (it != expr.end()) {
			jule::I64 _85114_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _85121_token = *it;
			{
				if ((_85121_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85121_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_22d7e4ad3:;
							{
								(_85017_brace_n)++;
							}
						}
						else {
							_case_begin_22d7e4dad:;
							{
								(_85017_brace_n)--;
							}
						}
						_match_end_22d7e4b9e:;
					};
				};
				{
					
					if ((_85017_brace_n > 0LL)) {
						_case_begin_22d7e5595:;
						{
							goto _iter_next_22d7e3ad2;
						}
					}
					else if ((_85121_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_22d7e560b:;
						{
							goto _iter_next_22d7e3ad2;
						}
					}
					else if ((!(_2276b6604_is_assign_op(_85121_token.get()._field_kind)))) {
						_case_begin_22d7e5683:;
						{
							goto _iter_next_22d7e3ad2;
						}
					}
					_match_end_22d7e5375:;
				};
				_84717_info.get()._field_l=_84641_tokens.slice(0LL,_85114_i);
				if ((_84717_info.get()._field_l.len() == 0LL)) {
					_84717_info.get()._field_ok=false;
				};
				_84717_info.get()._field_setter=_85121_token;
				if (((_85114_i + 1LL) >= _84641_tokens.len())) {
					_84717_info.get()._field_r=nullptr;
					_84717_info.get()._field_ok=_2276b635c_is_postfix_op(_84717_info.get()._field_setter.get()._field_kind);
					goto _iter_end_22d7e3ad2;
				};
				_84717_info.get()._field_r=_84641_tokens.slice((_85114_i + 1LL));
				if (_2276b635c_is_postfix_op(_84717_info.get()._field_setter.get()._field_kind)) {
					if ((_84717_info.get()._field_r.len() > 0LL)) {
						_22a478eeb_push_err(&(*_self_), _84717_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84717_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_22d7e3ad2;
			}
			_iter_next_22d7e3ad2:;
			++it;
			_85114_i++;
			goto _iter_begin_22d7e3ad2;
		}
		_iter_end_22d7e3ad2:;
	};
	return _84717_info;
}



inline jule::Ptr<_228d368cc_AssignLeft> _22a4821ad_build_assign_l(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _89438_tokens) {
	jule::Ptr<_228d368cc_AssignLeft> _89517_l = jule::new_ptr<_228d368cc_AssignLeft>(_228d368cc_AssignLeft{._field_token=_89438_tokens[0LL], });;
	if ((_89438_tokens[0LL].get()._field_id == static_cast<jule::U64>(2LLU))) {
		_89517_l.get()._field_ident=_89517_l.get()._field_token.get()._field_kind;
	};
	_89517_l.get()._field_expr=_22a494b2c_build_expr((*_self_)._field_p, _89438_tokens);
	return _89517_l;
}



inline jule::Slice<jule::Ptr<_228d368cc_AssignLeft>> _22a4824bb_build_assign_ls(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>& _90739_parts) {
	jule::Slice<jule::Ptr<_228d368cc_AssignLeft>> _90817_lefts = nullptr;;
	{
		auto &expr = _90739_parts;
		auto it = expr.begin();
		_iter_begin_22d7ec2c2:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _90921_part = *it;
			{
				jule::Ptr<_228d368cc_AssignLeft> _91021_l = _22a4821ad_build_assign_l(&(*_self_), _90921_part);;
				_90817_lefts = jule::alloc_for_append(_90817_lefts,1);_90817_lefts.__push(_91021_l);;
			}
			_iter_next_22d7ec2c2:;
			++it;
			goto _iter_begin_22d7ec2c2;
		}
		_iter_end_22d7ec2c2:;
	};
	return _90817_lefts;
}



inline std::tuple<jule::Ptr<_228d36e1b_AssignSt>,jule::Bool> _22a4827c9_build_plain_assign(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _91742_tokens) {
	jule::Ptr<_22a49051d_AssignInfo> _91817_info = _22a481da0_build_assign_info(&(*_self_), _91742_tokens);;
	if ((!(_91817_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_228d36e1b_AssignSt> _92317_assign = jule::new_ptr<_228d36e1b_AssignSt>(_228d36e1b_AssignSt{._field_setter=_91817_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _92718_parts;;
	jule::Slice<_2409487a2_Log> _92725_errs;;
	std::tie(_92718_parts,_92725_errs) = _22a49283e_parts(_91817_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92725_errs);
		return std::make_tuple(nullptr,false);
	};
	_92317_assign.get()._field_left=_22a4824bb_build_assign_ls(&(*_self_), _92718_parts);
	if ((_91817_info.get()._field_r != nullptr)) {
		_92317_assign.get()._field_right=_22a494b2c_build_expr((*_self_)._field_p, _91817_info.get()._field_r);
	};
	return std::make_tuple(_92317_assign,true);
}



inline std::tuple<jule::Ptr<_228d36e1b_AssignSt>,jule::Bool> _22a482ad7_build_decl_assign(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _94140_tokens) {
	if ((_94140_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_94140_tokens=_94140_tokens.slice(1LL);
	jule::Ptr<_2276b1a1c_Token> _94717_token = _94140_tokens[0LL];;
	if (((_94717_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94717_token.get()._field_kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_228d36e1b_AssignSt> _95217_assign = jule::new_ptr<_228d36e1b_AssignSt>(_228d36e1b_AssignSt{._field_declarative=true, });;
	jule::I64 _95617_i = 0LL;;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _95717_rang = _22a491c4a_range(_95617_i,jule::Str("(", 1),jule::Str(")", 1),_94140_tokens);;
	if ((_95717_rang == nullptr)) {
		_22a478eeb_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95617_i + 1LL) < _94140_tokens.len())) {
		_95217_assign.get()._field_setter=_94140_tokens[_95617_i];
		(_95617_i)++;
		jule::Slice<jule::Ptr<_2276b1a1c_Token>> _96421_expr_tokens = _94140_tokens.slice(_95617_i);;
		_95217_assign.get()._field_right=_22a494b2c_build_expr((*_self_)._field_p, _96421_expr_tokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _96918_parts;;
	jule::Slice<_2409487a2_Log> _96925_errs;;
	std::tie(_96918_parts,_96925_errs) = _22a49283e_parts(_95717_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96925_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96925_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96918_parts;
		auto it = expr.begin();
		_iter_begin_22d80818a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _97521_part = *it;
			{
				jule::Bool _97621_is_mut = false;;
				jule::Bool _97721_is_ref = false;;
				_94717_token=_97521_part[0LL];
				if ((_94717_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
					_97621_is_mut=true;
					_97521_part=_97521_part.slice(1LL);
					if ((_97521_part.len() == 0LL)) {
						_22a478eeb_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
						goto _iter_next_22d80818a;
					};
				};
				if (((_97521_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_97521_part[0LL].get()._field_kind == jule::Str("&", 1)))) {
					_97721_is_ref=true;
					_97521_part=_97521_part.slice(1LL);
					if ((_97521_part.len() == 0LL)) {
						_22a478eeb_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
						goto _iter_next_22d80818a;
					};
				};
				if ((((_97521_part[0LL].get()._field_id != static_cast<jule::U64>(2LLU)) && (_97521_part[0LL].get()._field_id != static_cast<jule::U64>(3LLU))) && (_97521_part[0LL].get()._field_kind != jule::Str("(", 1)))) {
					_22a478eeb_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
					goto _iter_next_22d80818a;
				};
				jule::Ptr<_228d368cc_AssignLeft> _100521_l = _22a4821ad_build_assign_l(&(*_self_), _97521_part);;
				_100521_l.get()._field_mutable=_97621_is_mut;
				_100521_l.get()._field_reference=_97721_is_ref;
				_95217_assign.get()._field_left = jule::alloc_for_append(_95217_assign.get()._field_left,1);_95217_assign.get()._field_left.__push(_100521_l);;
			}
			_iter_next_22d80818a:;
			++it;
			goto _iter_begin_22d80818a;
		}
		_iter_end_22d80818a:;
	};
	return std::make_tuple(_95217_assign,true);
}



inline std::tuple<jule::Ptr<_228d36e1b_AssignSt>,jule::Bool> _22a482de5_build_assign_st(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _101439_tokens) {
	jule::Ptr<_228d36e1b_AssignSt> _101459_st = jule::Ptr<_228d36e1b_AssignSt>();
	jule::Bool _101474_ok = jule::Bool();
	if ((!(_22a4908b4_check_assign_tokens(_101439_tokens)))) {
		_101459_st = nullptr;
		_101474_ok = false;
		return std::make_tuple(_101459_st,_101474_ok);
	};
	{
		auto &_match_expr{ _101439_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_22d811e74:;
			{
				std::tie(_101459_st,_101474_ok) = _22a482ad7_build_decl_assign(&(*_self_), _101439_tokens);
			}
		}
		else {
			_case_begin_22d811a67:;
			{
				std::tie(_101459_st,_101474_ok) = _22a4827c9_build_plain_assign(&(*_self_), _101439_tokens);
			}
		}
		_match_end_22d811a12:;
	};
	return std::make_tuple(_101459_st,_101474_ok);
}



inline jule::Ptr<_228d2d055_UseExpr> _22a483203_build_use_expr(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _102938_tokens) {
	if ((_102938_tokens.len() == 1LL)) {
		_22a478eeb_push_err(&(*_self_), _102938_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_228d2d055_UseExpr> _103517_ue = jule::new_ptr<_228d2d055_UseExpr>(_228d2d055_UseExpr{._field_token=_102938_tokens[0LL], });;
	_102938_tokens=_102938_tokens.slice(1LL);
	_103517_ue.get()._field_expr=_22a494b2c_build_expr((*_self_)._field_p, _102938_tokens);
	return _103517_ue;
}



inline jule::Any _22a483511_build_st(_22a477d0d_ScopeParser* _self_, jule::Ptr<_22a4774d3_stmt>& _104432_st) {
	jule::Ptr<_2276b1a1c_Token> _104517_token = _104432_st.get()._field_tokens[0LL];;
	if ((_104517_token.get()._field_id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104722_s;;
		jule::Bool _104725_ok;;
		std::tie(_104722_s,_104725_ok) = _22a481a92_build_id_st(&(*_self_), _104432_st.get()._field_tokens);
		if (_104725_ok) {
			return _104722_s;
		};
	};
	jule::Ptr<_228d36e1b_AssignSt> _105318_s;;
	jule::Bool _105321_ok;;
	std::tie(_105318_s,_105321_ok) = _22a482de5_build_assign_st(&(*_self_), _104432_st.get()._field_tokens);
	if (_105321_ok) {
		return static_cast<jule::Any>(_105318_s);
	};
	{
		auto &_match_expr{ _104517_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_22d8170ab:;
			{
				return static_cast<jule::Any>(_22a483203_build_use_expr(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_22d816d7a:;
			{
				return static_cast<jule::Any>(_22a479eb9_build_var_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_22d817474:;
			{
				return static_cast<jule::Any>(_22a47a2c7_build_ret_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_22d8174da:;
			{
				return static_cast<jule::Any>(_22a47cc47_build_iter_st(&(*_self_), _104432_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_22d817551:;
			{
				return static_cast<jule::Any>(_22a47d055_build_break_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_22d8175b7:;
			{
				return static_cast<jule::Any>(_22a47d363_build_cont_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_22d81762d:;
			{
				return static_cast<jule::Any>(_22a47dc8c_build_if_else_chain(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_22d817694:;
			{
				return static_cast<jule::Any>(_22a47e09a_build_co_call_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_22d81770a:;
			{
				return static_cast<jule::Any>(_22a47e3a8_build_goto_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_22d817771:;
			{
				return static_cast<jule::Any>(_22a47e6b6_build_fall_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_22d8177d7:;
			{
				return static_cast<jule::Any>(_22a47e9c4_build_type_alias_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_22d81784d:;
			{
				return static_cast<jule::Any>(_22a481168_build_match_case(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_22d8178b4:;
			{
				return static_cast<jule::Any>(_22a481476_build_scope_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_22d81792a:;
			{
				if ((_104517_token.get()._field_kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_22a481476_build_scope_st(&(*_self_), _104432_st.get()._field_tokens));
				};
			}
		}
		_match_end_22d817298:;
	};
	jule::Ptr<_228d2c6b4_Expr> _109417_expr = _22a494b2c_build_expr((*_self_)._field_p, _104432_st.get()._field_tokens);;
	if ((_109417_expr != nullptr)) {
		return static_cast<jule::Any>(_109417_expr);
	};
	_22a478eeb_push_err(&(*_self_), _104517_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _22a483830_build(_22a477d0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _110229_tokens, jule::Ptr<_228d384b1_ScopeTree>& _110252_s) {
	if ((_110252_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_22a477879_split_stmts(_110229_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110252_s;
	while (((!(_22a478bcc_is_last_st(&(*_self_)))) && (!(_22a478968_finished(&(*_self_)))))) {
		{
			jule::Ptr<_22a4774d3_stmt> _111121_st = _22a479804_next(&(*_self_));;
			jule::Any _111221_data = _22a483511_build_st(&(*_self_), _111121_st);;
			if ((_111221_data != nullptr)) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_228d37da6_Stmt{._field_token=_111121_st.get()._field_tokens[0LL], ._field_data=_111221_data});;
			};
			if (_22a478704_stopped(&(*_self_))) {
				goto _iter_end_22d820955;
			};
		}
	_iter_next_22d820955:;
	}
	_iter_end_22d820955:;;
}







std::ostream &operator<<(std::ostream &_Stream, _22a477d0d_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _22a4859a8_push_err(_22a4851a0_ExprBuilder* _self_, jule::Ptr<_2276b1a1c_Token> _19827_token, jule::Str _19842_fmt, jule::Slice<jule::Any> _19855_args) {
	_22a494500_push_err((*_self_)._field_p.ptr(), _19827_token,_19842_fmt,jule::Any(_19855_args));
}



inline void _22a485cc7_push_suggestion(_22a4851a0_ExprBuilder* _self_, jule::Str _20334_fmt, jule::Slice<jule::Any> _20347_args) {
	_22a49481e_push_suggestion((*_self_)._field_p.ptr(), _20334_fmt,jule::Any(_20347_args));
}



inline jule::Ptr<_228d2d341_TupleExpr> _22a4860d5_build_tuple(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>& _20735_parts) {
	jule::Ptr<_228d2d341_TupleExpr> _20817_tuple = jule::new_ptr<_228d2d341_TupleExpr>(_228d2d341_TupleExpr{._field_expr=jule::Slice<jule::Ptr<_228d2c6b4_Expr>>::alloc(0LL,_20735_parts.len())});;
	{
		auto &expr = _20735_parts;
		auto it = expr.begin();
		_iter_begin_22d83b520:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _21121_part = *it;
			{
				_20817_tuple.get()._field_expr = jule::alloc_for_append(_20817_tuple.get()._field_expr,1);_20817_tuple.get()._field_expr.__push(_22a48eb38_build_from_tokens(&(*_self_), _21121_part));;
			}
			_iter_next_22d83b520:;
			++it;
			goto _iter_begin_22d83b520;
		}
		_iter_end_22d83b520:;
	};
	return _20817_tuple;
}



inline jule::Ptr<_228d2d6e8_LitExpr> _22a4863e3_build_lit(_22a4851a0_ExprBuilder* _self_, jule::Ptr<_2276b1a1c_Token> _21728_token) {
	return jule::new_ptr<_228d2d6e8_LitExpr>(_228d2d6e8_LitExpr{._field_token=_21728_token, ._field_value=_21728_token.get()._field_kind});
}



inline jule::Ptr<_228d28193_TypeDecl> _22a486701_build_primitive_type(_22a4851a0_ExprBuilder* _self_, jule::Ptr<_2276b1a1c_Token>& _22440_token) {
	return _22a4a4620_build_prim_type(_22440_token);
}



inline jule::Any _22a486a0e_build_single(_22a4851a0_ExprBuilder* _self_, jule::Ptr<_2276b1a1c_Token> _22835_token) {
	{
		auto &_match_expr{ _22835_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_22d83d27a:;
			{
				return static_cast<jule::Any>(_22a4863e3_build_lit(&(*_self_), _22835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_22d83d2e1:;
			{
				if ((_22835_token.get()._field_kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_228d302dd_VariadicExpr>(_228d302dd_VariadicExpr{._field_token=_22835_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_22d83d357:;
			{
				return static_cast<jule::Any>(_22a484bc7_build_ident_expr(_22835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_22d83d3bd:;
			{
				return static_cast<jule::Any>(_22a486701_build_primitive_type(&(*_self_), _22835_token));
			}
		}
		_match_end_22d83c202:;
	};
	_22a4859a8_push_err(&(*_self_), _22835_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_228d2e72c_IdentExpr> _22a486d1c_build_cpp_linked_ident(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _24946_tokens) {
	if ((_24946_tokens[0LL].get()._field_id != static_cast<jule::U64>(31LLU))) {
		return nullptr;
	} else if ((_24946_tokens[1LL].get()._field_id != static_cast<jule::U64>(20LLU))) {
		_22a4859a8_push_err(&(*_self_), _24946_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a485cc7_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2276b1a1c_Token> _25717_token = _24946_tokens[2LL];;
	if ((_25717_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a4859a8_push_err(&(*_self_), _24946_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a485cc7_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_228d2e72c_IdentExpr> _26317_expr = _22a484bc7_build_ident_expr(_25717_token);;
	_26317_expr.get()._field_cpp_linked=true;
	return _26317_expr;
}



inline jule::Ptr<_228d2ee36_UnaryExpr> _22a48712a_build_unary(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _26834_tokens) {
	jule::Ptr<_2276b1a1c_Token> _26917_op = _26834_tokens[0LL];;
	if ((_26834_tokens.len() == 1LL)) {
		_22a4859a8_push_err(&(*_self_), _26917_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_2276b2226_is_unary_op(_26917_op.get()._field_kind)))) {
		_22a4859a8_push_err(&(*_self_), _26917_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_26917_op.get()._field_kind)}));
		return nullptr;
	};
	_26834_tokens=_26834_tokens.slice(1LL);
	return jule::new_ptr<_228d2ee36_UnaryExpr>(_228d2ee36_UnaryExpr{._field_op=_26917_op, ._field_expr=_22a48eb38_build_from_tokens(&(*_self_), _26834_tokens)});
}



inline jule::Ptr<_228d30ec0_SubIdentExpr> _22a487438_build_obj_sub_ident(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _28942_tokens) {
	jule::I64 _29017_i = (_28942_tokens.len() - 1LL);;
	jule::Ptr<_2276b1a1c_Token> _29117_ident_token = _28942_tokens[_29017_i];;
	(_29017_i)--;
	_28942_tokens=_28942_tokens.slice(0LL,_29017_i);
	if ((_28942_tokens.len() == 0LL)) {
		_22a4859a8_push_err(&(*_self_), _29117_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_228d30ec0_SubIdentExpr>(_228d30ec0_SubIdentExpr{._field_expr=_22a48eb38_build_from_tokens(&(*_self_), _28942_tokens), ._field_ident=_29117_ident_token});
}



inline jule::Ptr<_228d30a4c_NsSelectionExpr> _22a487746_build_ns_sub_ident(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _30442_tokens) {
	jule::Ptr<_228d30a4c_NsSelectionExpr> _30517_ns = jule::new_ptr<_228d30a4c_NsSelectionExpr>(_228d30a4c_NsSelectionExpr{});;
	{
		auto &expr = _30442_tokens;
		auto it = expr.begin();
		_iter_begin_22d8492db:;
		if (it != expr.end()) {
			jule::I64 _30614_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _30621_token = *it;
			{
				if (((_30614_i & 1LL) == 0LL)) {
					if ((_30621_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
						_22a4859a8_push_err(&(*_self_), _30621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_22a485cc7_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_30517_ns.get()._field_ns = jule::alloc_for_append(_30517_ns.get()._field_ns,1);_30517_ns.get()._field_ns.__push(_30621_token);;
				} else if ((_30621_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_22a4859a8_push_err(&(*_self_), _30621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_22a485cc7_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_22d8492db:;
			++it;
			_30614_i++;
			goto _iter_begin_22d8492db;
		}
		_iter_end_22d8492db:;
	};
	_30517_ns.get()._field_ident=_30517_ns.get()._field_ns[(_30517_ns.get()._field_ns.len() - 1LL)];
	_30517_ns.get()._field_ns=_30517_ns.get()._field_ns.slice(0LL,(_30517_ns.get()._field_ns.len() - 1LL));
	return _30517_ns;
}



inline jule::Ptr<_228d28193_TypeDecl> _22a487a54_build_type(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _32334_tokens) {
	jule::I64 _32417_i = 0LL;;
	jule::Ptr<_228d28193_TypeDecl> _32518_t;;
	jule::Bool _32521_ok;;
	std::tie(_32518_t,_32521_ok) = _22a495e19_build_type((*_self_)._field_p, _32334_tokens,(&(_32417_i)),false);
	if ((!(_32521_ok))) {
		_22a4859a8_push_err(&(*_self_), _32334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_32417_i < _32334_tokens.len())) {
		_22a4859a8_push_err(&(*_self_), _32334_tokens[_32417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32518_t;
}



inline jule::Any _22a487d62_build_sub_ident(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _33739_tokens) {
	jule::I64 _33813_i = (_33739_tokens.len() - 2LL);;
	jule::Ptr<_2276b1a1c_Token> _33913_token = _33739_tokens[_33813_i];;
	{
		auto &_match_expr{ _33913_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_22d851e4d:;
			{
				return static_cast<jule::Any>(_22a487438_build_obj_sub_ident(&(*_self_), _33739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_22d85247b:;
			{
				return static_cast<jule::Any>(_22a487746_build_ns_sub_ident(&(*_self_), _33739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_22d8524e2:;
			{
				if ((_33913_token.get()._field_kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_22a487a54_build_type(&(*_self_), _33739_tokens));
				};
			}
		}
		_match_end_22d8522d3:;
	};
	_22a4859a8_push_err(&(*_self_), _33913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_228d302dd_VariadicExpr> _22a488170_build_variadic(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _35537_tokens) {
	jule::Ptr<_2276b1a1c_Token> _35617_token = _35537_tokens[(_35537_tokens.len() - 1LL)];;
	_35537_tokens=_35537_tokens.slice(0LL,(_35537_tokens.len() - 1LL));
	return jule::new_ptr<_228d302dd_VariadicExpr>(_228d302dd_VariadicExpr{._field_token=_35617_token, ._field_expr=_22a48eb38_build_from_tokens(&(*_self_), _35537_tokens)});
}



inline jule::Any _22a48847d_build_op_right(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _36438_tokens) {
	jule::Ptr<_2276b1a1c_Token> _36517_token = _36438_tokens[(_36438_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _36517_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_22d85666c:;
			{
				_36438_tokens=_36438_tokens.slice(0LL,(_36438_tokens.len() - 1LL));
				jule::Any _36921_d = _22a48e51c_build(&(*_self_), _36438_tokens);;
				if ((_36921_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _36921_d };
					
					if (_match_expr.type_is<jule::Ptr<_228d31982_FnCallExpr>>()) {
						_case_begin_22d857abe:;
						{
							_36921_d.operator jule::Ptr<_228d31982_FnCallExpr>().get()._field_exception=jule::new_ptr<_228d384b1_ScopeTree>(_228d384b1_ScopeTree{._field_deferred=true, });
							return _36921_d;
						}
					}
					_match_end_22d857a25:;
				};
			}
		}
		_match_end_22d8565c3:;
	};
	_22a4859a8_push_err(&(*_self_), _36517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_228d2c9a0_RangeExpr> _22a4887ad_build_between_parentheses(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _38548_tokens) {
	if ((_38548_tokens.len() == 2LL)) {
		_22a4859a8_push_err(&(*_self_), _38548_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_22a485cc7_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_38548_tokens=_38548_tokens.slice(1LL,(_38548_tokens.len() - 1LL));
	return jule::new_ptr<_228d2c9a0_RangeExpr>(_228d2c9a0_RangeExpr{._field_expr=_22a48eb38_build_from_tokens(&(*_self_), _38548_tokens)});
}



inline jule::Ptr<_228d30695_CastExpr> _22a488acc_try_build_cast(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _39738_tokens) {
	jule::I64 _39817_range_n = 0LL;;
	{
		auto &expr = _39738_tokens;
		auto it = expr.begin();
		_iter_begin_22d85b232:;
		if (it != expr.end()) {
			jule::I64 _39913_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _39916_token = *it;
			{
				if ((_39916_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _39916_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_22d85c145:;
							{
								(_39817_range_n)++;
								goto _iter_next_22d85b232;
							}
						}
						else {
							_case_begin_22d85c420:;
							{
								(_39817_range_n)--;
							}
						}
						_match_end_22d85c211:;
					};
				};
				if ((_39817_range_n > 0LL)) {
					goto _iter_next_22d85b232;
				} else if (((_39913_i + 1LL) == _39738_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_2276b1a1c_Token>> _41821_type_tokens = _39738_tokens.slice(0LL,(_39913_i + 1LL));;
				jule::Slice<jule::Ptr<_2276b1a1c_Token>> _41921_expr_tokens = _39738_tokens.slice((_39913_i + 1LL));;
				if ((_41921_expr_tokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_2276b1a1c_Token> _42617_tok = _41921_expr_tokens[0LL];;
				if (((_42617_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_42617_tok.get()._field_kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_228d30695_CastExpr> _43121_cast = jule::new_ptr<_228d30695_CastExpr>(_228d30695_CastExpr{});;
				if ((_41921_expr_tokens.len() == 2LL)) {
					_22a4859a8_push_err(&(*_self_), _41921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_22a485cc7_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_41821_type_tokens.len() == 2LL)) {
					_22a4859a8_push_err(&(*_self_), _41821_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_22a485cc7_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_41821_type_tokens=_41821_type_tokens.slice(1LL,(_41821_type_tokens.len() - 1LL));
					jule::I64 _44525_type_index = 0LL;;
					jule::Ptr<_228d28193_TypeDecl> _44626_t;;
					jule::Bool _44629_ok;;
					std::tie(_44626_t,_44629_ok) = _22a495e19_build_type((*_self_)._field_p, _41821_type_tokens,(&(_44525_type_index)),true);
					if ((_44629_ok && (_44525_type_index < _41821_type_tokens.len()))) {
						_22a4859a8_push_err(&(*_self_), _41821_type_tokens[_44525_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_44629_ok))) {
						return _43121_cast;
					};
					_43121_cast.get()._field_kind=_44626_t;
					if ((_41921_expr_tokens.len() > 2LL)) {
						jule::I64 _45629_j = 0LL;;
						_22a491c4a_range(_45629_j,jule::Str("(", 1),jule::Str(")", 1),_41921_expr_tokens);
						if ((_45629_j < _41921_expr_tokens.len())) {
							return nullptr;
						};
						_41921_expr_tokens=_41921_expr_tokens.slice(0LL,_45629_j);
						_43121_cast.get()._field_expr=_22a48eb38_build_from_tokens(&(*_self_), _41921_expr_tokens);
					};
				};
				return _43121_cast;
			}
			_iter_next_22d85b232:;
			++it;
			_39913_i++;
			goto _iter_begin_22d85b232;
		}
		_iter_end_22d85b232:;
	};
	return nullptr;
}



inline void _22a488e95_push_arg(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_228d2c6b4_Expr>>& _47132_args, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _47151_tokens, jule::Ptr<_2276b1a1c_Token> _47169_err_token) {
	if ((_47151_tokens.len() == 0LL)) {
		_22a4859a8_push_err(&(*_self_), _47169_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a485cc7_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_47132_args = jule::alloc_for_append(_47132_args,1);_47132_args.__push(_22a48eb38_build_from_tokens(&(*_self_), _47151_tokens));;
}



inline jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _22a4892a3_build_args(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _48033_tokens) {
	if ((_48033_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _48617_args = nullptr;;
	jule::I64 _48717_last = 0LL;;
	jule::I64 _48817_range_n = 0LL;;
	_48033_tokens=_48033_tokens.slice(1LL,(_48033_tokens.len() - 1LL));
	{
		auto &expr = _48033_tokens;
		auto it = expr.begin();
		_iter_begin_22d86a791:;
		if (it != expr.end()) {
			jule::I64 _49013_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _49016_token = *it;
			{
				if ((_49016_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _49016_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_22d86b583:;
							{
								(_48817_range_n)++;
							}
						}
						else {
							_case_begin_22d86b85d:;
							{
								(_48817_range_n)--;
							}
						}
						_match_end_22d86b64e:;
					};
				};
				if (((_48817_range_n > 0LL) || (_49016_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_22d86a791;
				};
				_22a488e95_push_arg(&(*_self_), _48617_args,_48033_tokens.slice(_48717_last,_49013_i),_49016_token);
				_48717_last=static_cast<jule::I64>((_49013_i + 1LL));
			}
			_iter_next_22d86a791:;
			++it;
			_49013_i++;
			goto _iter_begin_22d86a791;
		}
		_iter_end_22d86a791:;
	};
	if ((_48717_last < _48033_tokens.len())) {
		if ((_48717_last == 0LL)) {
			if ((_48033_tokens.len() > 0LL)) {
				_22a488e95_push_arg(&(*_self_), _48617_args,_48033_tokens.slice(_48717_last),_48033_tokens[_48717_last]);
			};
		} else {
			_22a488e95_push_arg(&(*_self_), _48617_args,_48033_tokens.slice(_48717_last),_48033_tokens[(_48717_last - 1LL)]);
		};
	};
	return _48617_args;
}



inline jule::Slice<jule::Ptr<_228d28193_TypeDecl>> _22a4895b1_build_call_generics(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _52242_tokens) {
	if ((_52242_tokens.len() == 0LL)) {
		return nullptr;
	};
	_52242_tokens=_52242_tokens.slice(1LL,(_52242_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _52818_parts;;
	jule::Slice<_2409487a2_Log> _52825_errs;;
	std::tie(_52818_parts,_52825_errs) = _22a49283e_parts(_52242_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_228d28193_TypeDecl>> _52917_generics = jule::Slice<jule::Ptr<_228d28193_TypeDecl>>::alloc(0LL,_52818_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_52825_errs);
	{
		auto &expr = _52818_parts;
		auto it = expr.begin();
		_iter_begin_22d871bc6:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _53121_part = *it;
			{
				if ((_53121_part.len() == 0LL)) {
					goto _iter_next_22d871bc6;
				};
				jule::I64 _53521_j = 0LL;;
				jule::Ptr<_228d28193_TypeDecl> _53622_generic;;
				std::tie(_53622_generic,std::ignore) = _22a495e19_build_type((*_self_)._field_p, _53121_part,(&(_53521_j)),true);
				if ((_53521_j < _53121_part.len())) {
					_22a4859a8_push_err(&(*_self_), _53121_part[_53521_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_52917_generics = jule::alloc_for_append(_52917_generics,1);_52917_generics.__push(_53622_generic);;
			}
			_iter_next_22d871bc6:;
			++it;
			goto _iter_begin_22d871bc6;
		}
		_iter_end_22d871bc6:;
	};
	return _52917_generics;
}



inline jule::Ptr<_228d31982_FnCallExpr> _22a489a12_build_fn_call(_22a4851a0_ExprBuilder* _self_, jule::Ptr<_2276b1a1c_Token>& _54637_token, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _54657_expr, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _54678_args) {
	return jule::new_ptr<_228d31982_FnCallExpr>(_228d31982_FnCallExpr{._field_token=_54637_token, ._field_expr=_22a48eb38_build_from_tokens(&(*_self_), _54657_expr), ._field_args=_22a4892a3_build_args(&(*_self_), _54678_args), });
}



inline jule::Any _22a489d42_build_parentheses_range(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _55447_tokens) {
	jule::Ptr<_2276b1a1c_Token> _55517_token = _55447_tokens[0LL];;
	{
		auto &_match_expr{ _55517_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_22d876093:;
			{
				{
					auto &_match_expr{ _55517_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_22d876835:;
						{
							jule::Ptr<_228d30695_CastExpr> _56025_expr = _22a488acc_try_build_cast(&(*_self_), _55447_tokens);;
							if ((_56025_expr != nullptr)) {
								return static_cast<jule::Any>(_56025_expr);
							};
						}
					}
					_match_end_22d87666a:;
				};
			}
		}
		_match_end_22d875ee9:;
	};
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _56618_expr_tokens;;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _56635_args_tokens;;
	std::tie(_56618_expr_tokens,_56635_args_tokens) = _22a491ee2_range_last(_55447_tokens);
	if ((_56618_expr_tokens.len() == 0LL)) {
		return static_cast<jule::Any>(_22a4887ad_build_between_parentheses(&(*_self_), _56635_args_tokens));
	};
	return static_cast<jule::Any>(_22a489a12_build_fn_call(&(*_self_), _55517_token,_56618_expr_tokens,_56635_args_tokens));
}



inline jule::Ptr<_228d2de02_UnsafeExpr> _22a48a161_build_unsafe_expr(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _57540_tokens) {
	jule::Ptr<_2276b1a1c_Token> _57617_token = _57540_tokens[0LL];;
	_57540_tokens=_57540_tokens.slice(1LL);
	jule::I64 _57817_i = 0LL;;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _57917_range_tokens = _22a491c4a_range(_57817_i,jule::Str("{", 1),jule::Str("}", 1),_57540_tokens);;
	if ((_57917_range_tokens.len() == 0LL)) {
		_22a4859a8_push_err(&(*_self_), _57540_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_228d2de02_UnsafeExpr>(_228d2de02_UnsafeExpr{._field_token=_57617_token, ._field_expr=_22a48eb38_build_from_tokens(&(*_self_), _57917_range_tokens)});
}



inline jule::Ptr<_228d39ea7_FnDecl> _22a48a46e_build_anon_fn(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _59037_tokens) {
	jule::Ptr<_228d39ea7_FnDecl> _59117_f = _22a49a01c_build_fn((*_self_)._field_p, _59037_tokens,false,false);;
	if ((!(_228d3a309_is_anon(_59117_f.ptr())))) {
		_22a4859a8_push_err(&(*_self_), _59117_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a485cc7_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _59117_f;
}



inline jule::Any _22a48a77c_build_unsafe(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _59936_tokens) {
	{
		auto &_match_expr{ _59936_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_22d87cd03:;
			{
				return static_cast<jule::Any>(_22a48a46e_build_anon_fn(&(*_self_), _59936_tokens));
			}
		}
		else {
			_case_begin_22d87d2ed:;
			{
				return static_cast<jule::Any>(_22a48a161_build_unsafe_expr(&(*_self_), _59936_tokens));
			}
		}
		_match_end_22d87d243:;
	};
}



inline void _22a48ab45_push_range_lit_part(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _60942_part, jule::Ptr<_2276b1a1c_Token> _6109_error_token, jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>& _61035_parts) {
	if ((_60942_part.len() == 0LL)) {
		_22a4859a8_push_err(&(*_self_), _6109_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a485cc7_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_61035_parts = jule::alloc_for_append(_61035_parts,1);_61035_parts.__push(_60942_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a48ae75_get_brace_range_lit_expr_parts(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _62053_tokens) {
	if ((_62053_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _62617_parts = nullptr;;
	jule::I64 _62817_last = 0LL;;
	jule::I64 _62917_range_n = 0LL;;
	_62053_tokens=_62053_tokens.slice(1LL,(_62053_tokens.len() - 1LL));
	{
		auto &expr = _62053_tokens;
		auto it = expr.begin();
		_iter_begin_22d882973:;
		if (it != expr.end()) {
			jule::I64 _63113_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _63116_token = *it;
			{
				if ((_63116_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63116_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_22d883765:;
							{
								(_62917_range_n)++;
							}
						}
						else {
							_case_begin_22d883a40:;
							{
								(_62917_range_n)--;
							}
						}
						_match_end_22d883831:;
					};
				};
				if (((_62917_range_n > 0LL) || (_63116_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_22d882973;
				};
				_22a48ab45_push_range_lit_part(&(*_self_), _62053_tokens.slice(_62817_last,_63113_i),_63116_token,_62617_parts);
				_62817_last=static_cast<jule::I64>((_63113_i + 1LL));
			}
			_iter_next_22d882973:;
			++it;
			_63113_i++;
			goto _iter_begin_22d882973;
		}
		_iter_end_22d882973:;
	};
	if ((_62817_last < _62053_tokens.len())) {
		if ((_62817_last == 0LL)) {
			if ((_62053_tokens.len() > 0LL)) {
				_22a48ab45_push_range_lit_part(&(*_self_), _62053_tokens.slice(_62817_last),_62053_tokens[_62817_last],_62617_parts);
			};
		} else {
			_22a48ab45_push_range_lit_part(&(*_self_), _62053_tokens.slice(_62817_last),_62053_tokens[(_62817_last - 1LL)],_62617_parts);
		};
	};
	return _62617_parts;
}



inline jule::Ptr<_228d32411_FieldExprPair> _22a48b294_build_field_expr_pair(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _66244_tokens) {
	if (((_66244_tokens.len() - 2LL) == 0LL)) {
		_22a4859a8_push_err(&(*_self_), _66244_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_228d32411_FieldExprPair> _66717_pair = jule::new_ptr<_228d32411_FieldExprPair>(_228d32411_FieldExprPair{._field_field=_66244_tokens[0LL], });;
	_66244_tokens=_66244_tokens.slice(2LL);
	_66717_pair.get()._field_expr=_22a48eb38_build_from_tokens(&(*_self_), _66244_tokens);
	return _66717_pair;
}



inline jule::Ptr<_228d2c6b4_Expr> _22a48b5a2_build_struct_lit_expr(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _67545_tokens) {
	jule::Ptr<_2276b1a1c_Token> _67617_token = _67545_tokens[0LL];;
	if (((_67617_token.get()._field_id == static_cast<jule::U64>(2LLU)) && (_67545_tokens.len() > 1LL))) {
		_67617_token=_67545_tokens[1LL];
		if ((_67617_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_228d2c6b4_Expr>(_228d2c6b4_Expr{._field_token=_67617_token, ._field_end=_67545_tokens[(_67545_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(_22a48b294_build_field_expr_pair(&(*_self_), _67545_tokens))});
		};
	};
	return _22a48eb38_build_from_tokens(&(*_self_), _67545_tokens);
}



inline jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _22a48b8b0_build_struct_lit_exprs(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _69046_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _69117_parts = _22a48ae75_get_brace_range_lit_expr_parts(&(*_self_), _69046_tokens);;
	if ((_69117_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_228d2c6b4_Expr>> _69617_pairs = jule::Slice<jule::Ptr<_228d2c6b4_Expr>>::alloc(0LL,_69117_parts.len());;
	{
		auto &expr = _69117_parts;
		auto it = expr.begin();
		_iter_begin_22d88d286:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _69721_part = *it;
			{
				_69617_pairs = jule::alloc_for_append(_69617_pairs,1);_69617_pairs.__push(_22a48b5a2_build_struct_lit_expr(&(*_self_), _69721_part));;
			}
			_iter_next_22d88d286:;
			++it;
			goto _iter_begin_22d88d286;
		}
		_iter_end_22d88d286:;
	};
	return _69617_pairs;
}



inline jule::Ptr<_228d32b5e_StructLit> _22a48bbe0_build_typed_struct_literal(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _70349_tokens) {
	jule::I64 _70417_i = 0LL;;
	jule::Ptr<_228d28193_TypeDecl> _70518_t;;
	jule::Bool _70521_ok;;
	std::tie(_70518_t,_70521_ok) = _22a495e19_build_type((*_self_)._field_p, _70349_tokens,(&(_70417_i)),true);
	if ((!(_70521_ok))) {
		return nullptr;
	} else if ((_70417_i >= _70349_tokens.len())) {
		_22a4859a8_push_err(&(*_self_), _70349_tokens[_70417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_70349_tokens=_70349_tokens.slice(_70417_i);
	jule::Ptr<_2276b1a1c_Token> _71413_token = _70349_tokens[0LL];;
	if (((_71413_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_71413_token.get()._field_kind != jule::Str("{", 1)))) {
		_22a4859a8_push_err(&(*_self_), _71413_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_228d32b5e_StructLit>(_228d32b5e_StructLit{._field_end=_70349_tokens[(_70349_tokens.len() - 1LL)], ._field_kind=_70518_t, ._field_exprs=_22a48b8b0_build_struct_lit_exprs(&(*_self_), _70349_tokens)});
}



inline jule::Ptr<_228d2c6b4_Expr> _22a48c00e_build_brace_lit_part(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _72744_tokens) {
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _72818_l;;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _72825_r;;
	std::tie(_72818_l,_72825_r) = _22a484611_split_delim(_72744_tokens,static_cast<jule::U64>(11LLU));
	if ((_72818_l != nullptr)) {
		return jule::new_ptr<_228d2c6b4_Expr>(_228d2c6b4_Expr{._field_token=_72744_tokens[0LL], ._field_end=_72744_tokens[(_72744_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d33ae9_KeyValPair>(_228d33ae9_KeyValPair{._field_key=_22a48eb38_build_from_tokens(&(*_self_), _72818_l), ._field_val=_22a48eb38_build_from_tokens(&(*_self_), _72825_r), ._field_colon=_72744_tokens[_72818_l.len()]}))});
	};
	return _22a48eb38_build_from_tokens(&(*_self_), _72744_tokens);
}



inline jule::Ptr<_228d330d2_BraceLit> _22a48c31c_build_brace_lit(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _74439_tokens) {
	jule::Ptr<_228d330d2_BraceLit> _74517_lit = jule::new_ptr<_228d330d2_BraceLit>(_228d330d2_BraceLit{._field_token=_74439_tokens[0LL], ._field_end=_74439_tokens[(_74439_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _75017_parts = _22a48ae75_get_brace_range_lit_expr_parts(&(*_self_), _74439_tokens);;
	if ((_75017_parts == nullptr)) {
		return _74517_lit;
	};
	_74517_lit.get()._field_exprs=jule::Slice<jule::Ptr<_228d2c6b4_Expr>>::alloc(0LL,_75017_parts.len());
	{
		auto &expr = _75017_parts;
		auto it = expr.begin();
		_iter_begin_22d897339:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _75621_part = *it;
			{
				_74517_lit.get()._field_exprs = jule::alloc_for_append(_74517_lit.get()._field_exprs,1);_74517_lit.get()._field_exprs.__push(_22a48c00e_build_brace_lit_part(&(*_self_), _75621_part));;
			}
			_iter_next_22d897339:;
			++it;
			goto _iter_begin_22d897339;
		}
		_iter_end_22d897339:;
	};
	return _74517_lit;
}



inline jule::Any _22a48c62a_build_brace_range(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _76341_tokens) {
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _76418_expr_tokens;;
	jule::I64 _76431_range_n;;
	std::tie(_76418_expr_tokens,_76431_range_n) = _22a484e6e_get_range_expr_tokens(_76341_tokens);
	{
		
		if ((_76418_expr_tokens.len() == 0LL)) {
			_case_begin_22d898add:;
			{
				return static_cast<jule::Any>(_22a48c31c_build_brace_lit(&(*_self_), _76341_tokens));
			}
		}
		else if ((_76431_range_n > 0LL)) {
			_case_begin_22d898b65:;
			{
				_22a4859a8_push_err(&(*_self_), _76341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22d898a55:;
	};
	jule::Ptr<_2276b1a1c_Token> _77513_else_token = _76418_expr_tokens[(_76418_expr_tokens.len() - 1LL)];;
	if ((_76418_expr_tokens[(_76418_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U64>(17LLU))) {
		_76418_expr_tokens=_76418_expr_tokens.slice(0LL,(_76418_expr_tokens.len() - 1LL));
		jule::Any _77821_d = _22a48e51c_build(&(*_self_), _76418_expr_tokens);;
		if ((_77821_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _77821_d };
			
			if (_match_expr.type_is<jule::Ptr<_228d31982_FnCallExpr>>()) {
				_case_begin_22d89c152:;
				{
					_76341_tokens=_76341_tokens.slice((_76418_expr_tokens.len() + 1LL));
					jule::I64 _78525_i = 0LL;;
					jule::Slice<jule::Ptr<_2276b1a1c_Token>> _78625_range_tokens = _22a491c4a_range(_78525_i,jule::Str("{", 1),jule::Str("}", 1),_76341_tokens);;
					jule::Ptr<_228d31982_FnCallExpr> _78725_model = _77821_d.operator jule::Ptr<_228d31982_FnCallExpr>();;
					if (_228d32059_ignored(_78725_model.ptr())) {
						_22a4859a8_push_err(&(*_self_), _77513_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_22a485cc7_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_78725_model.get()._field_exception=_22a495567_build_scope((*_self_)._field_p, _78625_range_tokens,_76341_tokens[(_78525_i - 1LL)]);
					return _77821_d;
				}
			}
			else {
				_case_begin_22d89c075:;
				{
					_22a4859a8_push_err(&(*_self_), _76418_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_22d89bd33:;
		};
	};
	{
		auto &_match_expr{ _76418_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_22d8a10e0:;
			{
				return _22a48a77c_build_unsafe(&(*_self_), _76341_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_22d8a1156:;
			{
				return static_cast<jule::Any>(_22a48a46e_build_anon_fn(&(*_self_), _76341_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_22d8a11bc:;
			{
				return static_cast<jule::Any>(_22a48bbe0_build_typed_struct_literal(&(*_self_), _76341_tokens));
			}
		}
		else {
			_case_begin_22d89c1b8:;
			{
				_22a4859a8_push_err(&(*_self_), _76418_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22d89ab01:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a48c938_get_enumerable_parts(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _81543_tokens) {
	_81543_tokens=_81543_tokens.slice(1LL,(_81543_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _81718_parts;;
	jule::Slice<_2409487a2_Log> _81725_errors;;
	std::tie(_81718_parts,_81725_errors) = _22a49283e_parts(_81543_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_81725_errors);
	return _81718_parts;
}



inline jule::Ptr<_228d3406c_SliceExpr> _22a48cc46_build_slice(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _82234_tokens) {
	jule::Ptr<_228d3406c_SliceExpr> _82317_slc = jule::new_ptr<_228d3406c_SliceExpr>(_228d3406c_SliceExpr{._field_token=_82234_tokens[0LL], ._field_end=_82234_tokens[(_82234_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _82817_parts = _22a48c938_get_enumerable_parts(&(*_self_), _82234_tokens);;
	if ((_82817_parts.len() == 0LL)) {
		return _82317_slc;
	};
	_82317_slc.get()._field_exprs=jule::Slice<jule::Ptr<_228d2c6b4_Expr>>::alloc(0LL,_82817_parts.len());
	{
		auto &expr = _82817_parts;
		auto it = expr.begin();
		_iter_begin_22d8a68a9:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _83421_p = *it;
			{
				if ((_83421_p.len() == 0LL)) {
					goto _iter_next_22d8a68a9;
				};
				_82317_slc.get()._field_exprs = jule::alloc_for_append(_82317_slc.get()._field_exprs,1);_82317_slc.get()._field_exprs.__push(_22a48eb38_build_from_tokens(&(*_self_), _83421_p));;
			}
			_iter_next_22d8a68a9:;
			++it;
			goto _iter_begin_22d8a68a9;
		}
		_iter_end_22d8a68a9:;
	};
	return _82317_slc;
}



inline jule::Ptr<_228d3490d_IndexingExpr> _22a48d197_build_indexing(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _84437_expr_tokens, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _84513_tokens, jule::Ptr<_2276b1a1c_Token> _84535_error_token) {
	jule::Ptr<_2276b1a1c_Token> _84617_end = _84513_tokens[(_84513_tokens.len() - 1LL)];;
	_84513_tokens=_84513_tokens.slice(1LL,(_84513_tokens.len() - 1LL));
	if ((_84513_tokens.len() == 0LL)) {
		_22a4859a8_push_err(&(*_self_), _84535_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_228d2c6b4_Expr> _85217_expr = _22a48eb38_build_from_tokens(&(*_self_), _84437_expr_tokens);;
	if ((_85217_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_228d2c6b4_Expr> _85617_index = _22a48eb38_build_from_tokens(&(*_self_), _84513_tokens);;
	if ((_85617_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_228d3490d_IndexingExpr>(_228d3490d_IndexingExpr{._field_token=_84535_error_token, ._field_end=_84617_end, ._field_expr=_85217_expr, ._field_index=_85617_index});
}



inline jule::Ptr<_228d35018_SlicingExpr> _22a48d73b_build_slicing(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _86837_expr_tokens, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _86865_start, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _86914_to, jule::Ptr<_2276b1a1c_Token>& _86933_error_token, jule::Ptr<_2276b1a1c_Token> _86958_end) {
	jule::Ptr<_228d35018_SlicingExpr> _87017_slc = jule::new_ptr<_228d35018_SlicingExpr>(_228d35018_SlicingExpr{._field_token=_86933_error_token, ._field_end=_86958_end, ._field_expr=_22a48eb38_build_from_tokens(&(*_self_), _86837_expr_tokens), });;
	if ((_86865_start.len() > 0LL)) {
		_87017_slc.get()._field_start=_22a48eb38_build_from_tokens(&(*_self_), _86865_start);
	};
	if ((_86914_to.len() > 0LL)) {
		_87017_slc.get()._field_to=_22a48eb38_build_from_tokens(&(*_self_), _86914_to);
	};
	return _87017_slc;
}



inline jule::Any _22a48da49_build_bracket_range(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _88442_tokens) {
	jule::Ptr<_2276b1a1c_Token> _88517_error_token = _88442_tokens[0LL];;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _88618_expr_tokens;;
	jule::I64 _88631_range_n;;
	std::tie(_88618_expr_tokens,_88631_range_n) = _22a484e6e_get_range_expr_tokens(_88442_tokens);
	if ((_88618_expr_tokens.len() == 0LL)) {
		return static_cast<jule::Any>(_22a48cc46_build_slice(&(*_self_), _88442_tokens));
	} else if ((_88631_range_n > 0LL)) {
		_22a4859a8_push_err(&(*_self_), _88517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_88442_tokens=_88442_tokens.slice(_88618_expr_tokens.len());
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _90117_split_tokens = _88442_tokens.slice(1LL,(_88442_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _90218_start;;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _90229_to;;
	std::tie(_90218_start,_90229_to) = _22a484611_split_delim(_90117_split_tokens,static_cast<jule::U64>(11LLU));
	if (((_90218_start != nullptr) || (_90229_to != nullptr))) {
		return static_cast<jule::Any>(_22a48d73b_build_slicing(&(*_self_), _88618_expr_tokens,_90218_start,_90229_to,_88517_error_token,_88442_tokens[(_88442_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_22a48d197_build_indexing(&(*_self_), _88618_expr_tokens,_88442_tokens,_88517_error_token));
}



inline jule::Any _22a48dd57_build_data(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _90934_tokens) {
	{
		auto _match_expr{ _90934_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_22d8b37b7:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_22d8b383e:;
			{
				return _22a486a0e_build_single(&(*_self_), _90934_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_22d8b38b6:;
			{
				if ((_90934_tokens[0LL].get()._field_id == static_cast<jule::U64>(31LLU))) {
					return static_cast<jule::Any>(_22a486d1c_build_cpp_linked_ident(&(*_self_), _90934_tokens));
				};
			}
		}
		_match_end_22d8b3553:;
	};
	jule::Ptr<_2276b1a1c_Token> _92117_token = _90934_tokens[(_90934_tokens.len() - 1LL)];;
	if (((_92117_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_92117_token.get()._field_kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_22a488170_build_variadic(&(*_self_), _90934_tokens));
	};
	_92117_token=_90934_tokens[0LL];
	{
		auto &_match_expr{ _92117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_22d8b6b94:;
			{
				if (((_90934_tokens.len() > 1LL) && (_92117_token.get()._field_kind == jule::Str("*", 1)))) {
					_92117_token=_90934_tokens[1LL];
					if (((_92117_token.get()._field_id == static_cast<jule::U64>(1LLU)) || (_92117_token.get()._field_id == static_cast<jule::U64>(35LLU)))) {
						return static_cast<jule::Any>(_22a487a54_build_type(&(*_self_), _90934_tokens));
					};
				};
				return static_cast<jule::Any>(_22a48712a_build_unary(&(*_self_), _90934_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_22d8b6c1b:;
			{
				if ((_90934_tokens.len() < 3LL)) {
					goto _match_end_22d8b6ab7;
				};
				if ((_90934_tokens.len() > 3LL)) {
					jule::Ptr<_2276b1a1c_Token> _94321_t = _90934_tokens[(_90934_tokens.len() - 1LL)];;
					if (((_94321_t.get()._field_id == static_cast<jule::U64>(3LLU)) && (_94321_t.get()._field_kind == jule::Str(")", 1)))) {
						goto _match_end_22d8b6ab7;
					};
				};
				jule::Ptr<_2276b1a1c_Token> _94917_next = _90934_tokens[1LL];;
				if (((_94917_next.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94917_next.get()._field_kind != jule::Str("]", 1)))) {
					jule::I64 _95225_delim = 0LL;;
					_95225_delim=static_cast<jule::I64>(_22a4a4961_map_colon(_90934_tokens,_95225_delim));
					if ((_95225_delim == -1LL)) {
						goto _match_end_22d8b6ab7;
					};
				};
				return static_cast<jule::Any>(_22a487a54_build_type(&(*_self_), _90934_tokens));
			}
		}
		_match_end_22d8b6ab7:;
	};
	_92117_token=_90934_tokens[(_90934_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _92117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_22d8b7216:;
			{
				return _22a487d62_build_sub_ident(&(*_self_), _90934_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_22d8bd3c6:;
			{
				return static_cast<jule::Any>(_22a487a54_build_type(&(*_self_), _90934_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_22d8bd43c:;
			{
				return _22a48847d_build_op_right(&(*_self_), _90934_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_22d8bd4a3:;
			{
				{
					auto &_match_expr{ _92117_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_22d8bece0:;
						{
							return _22a489d42_build_parentheses_range(&(*_self_), _90934_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_22d8bed56:;
						{
							return _22a48c62a_build_brace_range(&(*_self_), _90934_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_22d8bedcd:;
						{
							return _22a48da49_build_bracket_range(&(*_self_), _90934_tokens);
						}
					}
					_match_end_22d8be729:;
				};
			}
		}
		_match_end_22d8b71b1:;
	};
	if ((_92117_token.get()._field_id == static_cast<jule::U64>(33LLU))) {
		return static_cast<jule::Any>(_22a487a54_build_type(&(*_self_), _90934_tokens));
	};
	_22a4859a8_push_err(&(*_self_), _92117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_228d31443_BinopExpr> _22a48e20e_build_binop(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _99035_tokens, jule::I64 _99053_i) {
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _99117_left_tokens = _99035_tokens.slice(0LL,_99053_i);;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _99217_right_tokens = _99035_tokens.slice((_99053_i + 1LL));;
	if ((_99117_left_tokens.len() == 0LL)) {
		_22a4859a8_push_err(&(*_self_), _99035_tokens[_99053_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a485cc7_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_99217_right_tokens.len() == 0LL)) {
		_22a4859a8_push_err(&(*_self_), _99035_tokens[_99053_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a485cc7_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_228d31443_BinopExpr>(_228d31443_BinopExpr{._field_left=_22a48eb38_build_from_tokens(&(*_self_), _99117_left_tokens), ._field_right=_22a48eb38_build_from_tokens(&(*_self_), _99217_right_tokens), ._field_op=_99035_tokens[_99053_i]});
}



inline jule::Any _22a48e51c_build(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _101029_tokens) {
	jule::I64 _101113_i = _22a4848a8_find_lowest_prec_op(_101029_tokens);;
	if ((_101113_i == -1LL)) {
		return _22a48dd57_build_data(&(*_self_), _101029_tokens);
	};
	return static_cast<jule::Any>(_22a48e20e_build_binop(&(*_self_), _101029_tokens,_101113_i));
}



inline jule::Any _22a48e82a_build_kind(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _101834_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _101918_parts;;
	jule::Slice<_2409487a2_Log> _101925_errors;;
	std::tie(_101918_parts,_101925_errors) = _22a49283e_parts(_101834_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_101925_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_101925_errors);
		return nullptr;
	} else if ((_101918_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_22a4860d5_build_tuple(&(*_self_), _101918_parts));
	};
	return _22a48e51c_build(&(*_self_), _101834_tokens);
}



inline jule::Ptr<_228d2c6b4_Expr> _22a48eb38_build_from_tokens(_22a4851a0_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _102940_tokens) {
	if ((_102940_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_228d2c6b4_Expr>(_228d2c6b4_Expr{._field_token=_102940_tokens[0LL], ._field_end=_102940_tokens[(_102940_tokens.len() - 1LL)], ._field_kind=_22a48e82a_build_kind(&(*_self_), _102940_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _22a4851a0_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22a49051d_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _22a493dc3_stop(_22a493a93_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _22a494137_stopped(_22a493a93_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _22a494500_push_err(_22a493a93_Parser* _self_, jule::Ptr<_2276b1a1c_Token> _28727_token, jule::Str _28742_fmt, jule::Slice<jule::Any> _28755_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_22a492ec1_compiler_err(_28727_token,_28742_fmt,jule::Any(_28755_args)));;
}



inline void _22a49481e_push_suggestion(_22a493a93_Parser* _self_, jule::Str _29234_fmt, jule::Slice<jule::Any> _29247_args) {
	{
		_22a493433_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29234_fmt,jule::Any(_29247_args));
	};
}



inline jule::Ptr<_228d2c6b4_Expr> _22a494b2c_build_expr(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _29635_tokens) {
	jule::Ptr<_22a4851a0_ExprBuilder> _29717_ep = jule::new_ptr<_22a4851a0_ExprBuilder>(_22a4851a0_ExprBuilder{._field_p=_self_});;
	jule::Ptr<_228d2c6b4_Expr> _30017_expr = _22a48eb38_build_from_tokens(_29717_ep.ptr(), _29635_tokens);;
	return _30017_expr;
}



inline jule::Ptr<_228ce499a_Directive> _22a494e3a_build_directive(_22a493a93_Parser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _30438_tokens) {
	if ((_30438_tokens.len() == 1LL)) {
		_22a494500_push_err(&(*_self_), _30438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_30438_tokens[1LL].get()._field_column != (_30438_tokens[0LL].get()._field_column + 1LL))) {
		_22a494500_push_err(&(*_self_), _30438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_228ce499a_Directive>(_228ce499a_Directive{._field_tag=_30438_tokens[1LL], ._field_args=_30438_tokens.slice(2LL)});
}



inline void _22a4951b0_push_directive(_22a493a93_Parser* _self_, jule::Ptr<_228ce499a_Directive> _32137_d) {
	if ((_32137_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_22d903b48:;
		if (it != expr.end()) {
			jule::Ptr<_228ce499a_Directive> _32716_pd = *it;
			{
				if ((_32137_d.get()._field_tag.get()._field_kind == _32716_pd.get()._field_tag.get()._field_kind)) {
					return;;
				};
			}
			_iter_next_22d903b48:;
			++it;
			goto _iter_begin_22d903b48;
		}
		_iter_end_22d903b48:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_32137_d);;
}



inline jule::Ptr<_228d384b1_ScopeTree> _22a495567_build_scope(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _33536_tokens, jule::Ptr<_2276b1a1c_Token> _33558_end) {
	jule::Ptr<_228d384b1_ScopeTree> _33617_s = _22a47637d_new_scope();;
	_33617_s.get()._field_end=_33558_end;
	_22a477d0d_ScopeParser _33817_sp = _22a477d0d_ScopeParser{._field_p=_self_, };;
	_22a483830_build(&_33817_sp, _33536_tokens,_33617_s);
	return _33617_s;
}



inline std::tuple<jule::Ptr<_228d28193_TypeDecl>,jule::Bool> _22a4959b8___build_type(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _34544_tokens, jule::I64* _34613_i, jule::Bool _34622_err) {
	_22a4a4e6c_TypeBuilder _34717_tb = _22a4a4e6c_TypeBuilder{._field_p=_self_, ._field_tokens=_34544_tokens, ._field_i=_34613_i, ._field_err=_34622_err};;
	jule::Ptr<_228d28193_TypeDecl> _35318_decl;;
	jule::Bool _35324_ok;;
	std::tie(_35318_decl,_35324_ok) = _22a4a8327_build(&_34717_tb);
	return std::make_tuple(_35318_decl,_35324_ok);
}



inline std::tuple<jule::Ptr<_228d28193_TypeDecl>,jule::Bool> _22a495e19_build_type(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _35842_tokens, jule::I64* _35913_i, jule::Bool _35922_err) {
	jule::Ptr<_2276b1a1c_Token> _36013_token = _35842_tokens[(*(_35913_i))];;
	jule::Ptr<_228d28193_TypeDecl> _36118_t;;
	jule::Bool _36121_ok;;
	std::tie(_36118_t,_36121_ok) = _22a4959b8___build_type(_self_, _35842_tokens,_35913_i,_35922_err);
	if ((_35922_err && (!(_36121_ok)))) {
		_22a494500_push_err(_self_.ptr(), _36013_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_36118_t,_36121_ok);
}



inline jule::Ptr<_228d3e7e7_TypeAliasDecl> _22a496227_build_type_alias_decl(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _36846_tokens) {
	jule::I64 _36917_i = 1LL;;
	if ((_36917_i >= _36846_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_228d3e7e7_TypeAliasDecl> _37417_tad = jule::new_ptr<_228d3e7e7_TypeAliasDecl>(_228d3e7e7_TypeAliasDecl{._field_token=_36846_tokens[1LL], ._field_ident=_36846_tokens[1LL].get()._field_kind, });;
	jule::Ptr<_2276b1a1c_Token> _37817_token = _36846_tokens[_36917_i];;
	if ((_37817_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a494500_push_err(_self_.ptr(), _37817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36917_i)++;
	if ((_36917_i >= _36846_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _37417_tad;
	};
	_37817_token=_36846_tokens[_36917_i];
	if ((_37817_token.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_22a494500_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _37417_tad;
	};
	(_36917_i)++;
	if ((_36917_i >= _36846_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _37417_tad;
	};
	jule::Ptr<_228d28193_TypeDecl> _39918_t;;
	jule::Bool _39921_ok;;
	std::tie(_39918_t,_39921_ok) = _22a495e19_build_type(_self_, _36846_tokens,(&(_36917_i)),true);
	_37417_tad.get()._field_kind=_39918_t;
	if ((_39921_ok && (_36917_i < _36846_tokens.len()))) {
		_22a494500_push_err(_self_.ptr(), _36846_tokens[_36917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _37417_tad;
}



inline void _22a496568_build_var_type_and_expr(jule::Ptr<_22a493a93_Parser> _self_, jule::Ptr<_228d3ae86_VarDecl>& _40748_v, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _40766_tokens) {
	jule::I64 _40817_i = 0LL;;
	jule::Ptr<_2276b1a1c_Token> _40917_tok = _40766_tokens[_40817_i];;
	if ((_40917_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_40817_i)++;
		if (((_40817_i >= _40766_tokens.len()) || ((_40766_tokens[_40817_i].get()._field_id == static_cast<jule::U64>(7LLU)) && (_40766_tokens[_40817_i].get()._field_kind == jule::Str("=", 1))))) {
			_22a494500_push_err(_self_.ptr(), _40917_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_228d28193_TypeDecl> _41722_t;;
		jule::Bool _41725_ok;;
		std::tie(_41722_t,_41725_ok) = _22a495e19_build_type(_self_, _40766_tokens,(&(_40817_i)),true);
		if (_41725_ok) {
			_40748_v.get()._field_kind=_41722_t;
			if ((_40817_i >= _40766_tokens.len())) {
				return;;
			};
			_40917_tok=_40766_tokens[_40817_i];
		};
	};
	if ((_40917_tok.get()._field_id == static_cast<jule::U64>(7LLU))) {
		if ((_40917_tok.get()._field_kind != jule::Str("=", 1))) {
			_22a494500_push_err(_self_.ptr(), _40917_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_2276b1a1c_Token>> _43221_expr_tokens = _40766_tokens.slice((_40817_i + 1LL));;
		if ((_43221_expr_tokens.len() == 0LL)) {
			_22a494500_push_err(_self_.ptr(), _40917_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_40748_v.get()._field_expr=_22a494b2c_build_expr(_self_, _43221_expr_tokens);
	} else {
		_22a494500_push_err(_self_.ptr(), _40917_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _22a496821_build_var_common(jule::Ptr<_22a493a93_Parser> _self_, jule::Ptr<_228d3ae86_VarDecl>& _44341_v, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _44358_tokens) {
	_44341_v.get()._field_token=_44358_tokens[0LL];
	if ((_44341_v.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a494500_push_err(_self_.ptr(), _44341_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_44341_v.get()._field_ident=_44341_v.get()._field_token.get()._field_kind;
	_44341_v.get()._field_kind=nullptr;
	if ((_44358_tokens.len() > 1LL)) {
		_44358_tokens=_44358_tokens.slice(1LL);
		_22a496568_build_var_type_and_expr(_self_, _44341_v,_44358_tokens);
	};
}



inline void _22a496bd9_build_var_begin(_22a493a93_Parser* _self_, jule::Ptr<_228d3ae86_VarDecl>& _45839_v, jule::I64& _45857_i, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _45866_tokens) {
	jule::Ptr<_2276b1a1c_Token> _45913_tok = _45866_tokens[_45857_i];;
	{
		auto &_match_expr{ _45913_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_22d923519:;
			{
				_45839_v.get()._field_statically=true;
				goto _case_begin_22d923580;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_22d923580:;
			{
				(_45857_i)++;
				if ((_45857_i >= _45866_tokens.len())) {
					_22a494500_push_err(&(*_self_), _45913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45866_tokens[_45857_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
					_45839_v.get()._field_mutable=true;
					(_45857_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_22d922c11:;
			{
				(_45857_i)++;
				_45839_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_22d922b45:;
			{
				_22a494500_push_err(&(*_self_), _45913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_22d92299c:;
	};
	if ((_45857_i >= _45866_tokens.len())) {
		_22a494500_push_err(&(*_self_), _45913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_228d3ae86_VarDecl> _22a496ee7_build_var(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _48833_tokens) {
	jule::I64 _48917_i = 0LL;;
	jule::Ptr<_228d3ae86_VarDecl> _49017_v = jule::new_ptr<_228d3ae86_VarDecl>(_228d3ae86_VarDecl{._field_token=_48833_tokens[0LL], });;
	_22a496bd9_build_var_begin(_self_.ptr(), _49017_v,_48917_i,_48833_tokens);
	if ((_48917_i >= _48833_tokens.len())) {
		return nullptr;
	};
	_48833_tokens=_48833_tokens.slice(_48917_i);
	if (((_48833_tokens[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_48833_tokens[0LL].get()._field_kind == jule::Str("&", 1)))) {
		_49017_v.get()._field_reference=true;
		if ((_48833_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48833_tokens=_48833_tokens.slice(1LL);
	};
	_22a496821_build_var_common(_self_, _49017_v,_48833_tokens);
	return _49017_v;
}



inline jule::Ptr<_228d35777_GenericDecl> _22a497305_build_generic(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _51038_tokens) {
	jule::Ptr<_228d35777_GenericDecl> _51117_g = jule::new_ptr<_228d35777_GenericDecl>(_228d35777_GenericDecl{._field_token=_51038_tokens[0LL], });;
	if ((_51117_g.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a494500_push_err(_self_.ptr(), _51117_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_51117_g.get()._field_ident=_51117_g.get()._field_token.get()._field_kind;
	if ((_51038_tokens.len() > 1LL)) {
		if ((_51038_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
			_22a494500_push_err(_self_.ptr(), _51038_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_51038_tokens.len() == 2LL)) {
			_22a494500_push_err(_self_.ptr(), _51038_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_2276b1a1c_Token>> _52821_constraint_tokens = _51038_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _52922_parts;;
		jule::Slice<_2409487a2_Log> _52929_errors;;
		std::tie(_52922_parts,_52929_errors) = _22a492454_parts_kind(_52821_constraint_tokens,jule::Str("|", 1),true);
		if ((_52929_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52929_errors);
			return nullptr;
		};
		_51117_g.get()._field_constraint=jule::new_ptr<_228d35304_Constraint>(_228d35304_Constraint{._field_mask=jule::Slice<jule::Ptr<_228d28193_TypeDecl>>::alloc(0LL,_52922_parts.len())});
		{
			auto &expr = _52922_parts;
			auto it = expr.begin();
			_iter_begin_22d92ec51:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_2276b1a1c_Token>> _53525_part = *it;
				{
					jule::I64 _53625_i = 0LL;;
					jule::Ptr<_228d28193_TypeDecl> _53726_kind;;
					std::tie(_53726_kind,std::ignore) = _22a495e19_build_type(_self_, _53525_part,(&(_53625_i)),true);
					_51117_g.get()._field_constraint.get()._field_mask = jule::alloc_for_append(_51117_g.get()._field_constraint.get()._field_mask,1);_51117_g.get()._field_constraint.get()._field_mask.__push(_53726_kind);;
					if ((_53625_i < _53525_part.len())) {
						_22a494500_push_err(_self_.ptr(), _53525_part[_53625_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_22d92ec51:;
				++it;
				goto _iter_begin_22d92ec51;
			}
			_iter_end_22d92ec51:;
		};
	};
	return _51117_g;
}



inline jule::Slice<jule::Ptr<_228d35777_GenericDecl>> _22a4976ac_build_generics(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _54739_tokens, jule::Ptr<_2276b1a1c_Token>& _54758_error_token) {
	if ((_54739_tokens.len() == 0LL)) {
		_22a494500_push_err(_self_.ptr(), _54758_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _55318_parts;;
	jule::Slice<_2409487a2_Log> _55325_errors;;
	std::tie(_55318_parts,_55325_errors) = _22a49283e_parts(_54739_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_55325_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_55325_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_228d35777_GenericDecl>> _55917_generics = jule::Slice<jule::Ptr<_228d35777_GenericDecl>>::alloc(0LL,_55318_parts.len());;
	{
		auto &expr = _55318_parts;
		auto it = expr.begin();
		_iter_begin_22d935361:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _56021_part = *it;
			{
				_55917_generics = jule::alloc_for_append(_55917_generics,1);_55917_generics.__push(_22a497305_build_generic(_self_, _56021_part));;
			}
			_iter_next_22d935361:;
			++it;
			goto _iter_begin_22d935361;
		}
		_iter_end_22d935361:;
	};
	return _55917_generics;
}



inline jule::Ptr<_228d38b87_ParamDecl> _22a4979ba_build_self_param(_22a493a93_Parser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _56739_tokens) {
	if ((_56739_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_228d38b87_ParamDecl> _57217_param = jule::new_ptr<_228d38b87_ParamDecl>();;
	jule::I64 _57517_i = 0LL;;
	if ((_56739_tokens[_57517_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
		_57217_param.get()._field_mutable=true;
		(_57517_i)++;
		if ((_57517_i >= _56739_tokens.len())) {
			_22a494500_push_err(&(*_self_), _56739_tokens[(_57517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56739_tokens[_57517_i].get()._field_kind == jule::Str("&", 1))) {
		_57217_param.get()._field_ident=jule::Str("&", 1);
		(_57517_i)++;
		if ((_57517_i >= _56739_tokens.len())) {
			_22a494500_push_err(&(*_self_), _56739_tokens[(_57517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56739_tokens[_57517_i].get()._field_id == static_cast<jule::U64>(28LLU))) {
		_57217_param.get()._field_ident+=jule::Str("self", 4);
		_57217_param.get()._field_token=_56739_tokens[_57517_i];
		(_57517_i)++;
		if ((_57517_i < _56739_tokens.len())) {
			_22a494500_push_err(&(*_self_), _56739_tokens[_57517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _57217_param;
}



inline void _22a497d83_param_type_begin(_22a493a93_Parser* _self_, jule::Ptr<_228d38b87_ParamDecl>& _60640_param, jule::I64& _60664_i, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _60673_tokens) {
	for (; (_60664_i < _60673_tokens.len()); (_60664_i)++) {
		{
			jule::Ptr<_2276b1a1c_Token> _60817_token = _60673_tokens[_60664_i];;
			if ((_60817_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60817_token.get()._field_kind != jule::Str("...", 3))) {
				return;;
			};
			if (_60640_param.get()._field_variadic) {
				_22a494500_push_err(&(*_self_), _60817_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_22d93bd5c;
			};
			_60640_param.get()._field_variadic=true;
		}
	_iter_next_22d93bd5c:;
	}
	_iter_end_22d93bd5c:;;
}



inline void _22a4981a2_build_param_type(jule::Ptr<_22a493a93_Parser> _self_, jule::Ptr<_228d38b87_ParamDecl>& _62341_param, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _62365_tokens) {
	jule::I64 _62417_i = 0LL;;
	_22a497d83_param_type_begin(_self_.ptr(), _62341_param,_62417_i,_62365_tokens);
	if ((_62417_i >= _62365_tokens.len())) {
		return;;
	};
	std::tie(_62341_param.get()._field_kind,std::ignore) = _22a495e19_build_type(_self_, _62365_tokens,(&(_62417_i)),true);
	if ((_62417_i < _62365_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _62365_tokens[_62417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _22a4984c1_build_param_body(jule::Ptr<_22a493a93_Parser> _self_, jule::Ptr<_228d38b87_ParamDecl>& _63641_param, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _63664_tokens) {
	jule::Ptr<_2276b1a1c_Token> _63717_tok = _63664_tokens[0LL];;
	_63641_param.get()._field_ident=_63717_tok.get()._field_kind;
	if ((_63664_tokens.len() == 1LL)) {
		return;;
	} else if ((_63664_tokens.len() < 3LL)) {
		_22a494500_push_err(_self_.ptr(), _63717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_63664_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_22a4981a2_build_param_type(_self_, _63641_param,_63664_tokens);
		return;;
	};
	_63664_tokens=_63664_tokens.slice(2LL);
	_22a4981a2_build_param_type(_self_, _63641_param,_63664_tokens);
}



inline jule::Ptr<_228d38b87_ParamDecl> _22a4987ce_build_param(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _65435_tokens) {
	jule::Ptr<_228d38b87_ParamDecl> _65517_param = jule::new_ptr<_228d38b87_ParamDecl>(_228d38b87_ParamDecl{._field_token=_65435_tokens[0LL], });;
	if ((_65517_param.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_65517_param.get()._field_mutable=true;
		if ((_65435_tokens.len() == 1LL)) {
			_22a494500_push_err(_self_.ptr(), _65435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_65435_tokens=_65435_tokens.slice(1LL);
		_65517_param.get()._field_token=_65435_tokens[0LL];
	};
	if ((_65435_tokens.len() >= 3LL)) {
		if (((_65517_param.get()._field_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_65517_param.get()._field_token.get()._field_kind == jule::Str("&", 1)))) {
			if ((_65435_tokens.len() == 1LL)) {
				_22a494500_push_err(_self_.ptr(), _65435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_65435_tokens[1LL].get()._field_id == static_cast<jule::U64>(2LLU)) && (_65435_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_65517_param.get()._field_reference=true;
				_65435_tokens=_65435_tokens.slice(1LL);
				_65517_param.get()._field_token=_65435_tokens[0LL];
			};
		};
	};
	if ((_65517_param.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_65517_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_22a4981a2_build_param_type(_self_, _65517_param,_65435_tokens);
	} else {
		_22a4984c1_build_param_body(_self_, _65517_param,_65435_tokens);
	};
	return _65517_param;
}



inline void _22a498a54_check_params(_22a493a93_Parser* _self_, jule::Slice<jule::Ptr<_228d38b87_ParamDecl>>& _69736_params) {
	{
		auto &expr = _69736_params;
		auto it = expr.begin();
		_iter_begin_22d94b311:;
		if (it != expr.end()) {
			jule::Ptr<_228d38b87_ParamDecl> _69821_param = *it;
			{
				if ((_228d38eea_is_self(_69821_param.ptr()) || (_69821_param.get()._field_kind != nullptr))) {
					goto _iter_next_22d94b311;
				};
				if ((_69821_param.get()._field_token == nullptr)) {
					_22a494500_push_err(&(*_self_), _69821_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69821_param.get()._field_kind=jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_69821_param.get()._field_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d28759_IdentTypeDecl>(_228d28759_IdentTypeDecl{._field_token=_69821_param.get()._field_token, ._field_ident=_69821_param.get()._field_token.get()._field_kind, }))});
					_69821_param.get()._field_ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_22d94b311:;
			++it;
			goto _iter_begin_22d94b311;
		}
		_iter_end_22d94b311:;
	};
}



inline jule::Slice<jule::Ptr<_228d38b87_ParamDecl>> _22a498e0b_build_params(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _71737_tokens, jule::Bool _71755_method) {
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _71818_parts;;
	jule::Slice<_2409487a2_Log> _71825_errs;;
	std::tie(_71818_parts,_71825_errs) = _22a49283e_parts(_71737_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71825_errs);
	if ((_71818_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_228d38b87_ParamDecl>> _72417_params = nullptr;;
	if ((_71755_method && (_71818_parts.len() > 0LL))) {
		jule::Ptr<_228d38b87_ParamDecl> _72621_param = _22a4979ba_build_self_param(_self_.ptr(), _71818_parts[0LL]);;
		if (((_72621_param != nullptr) && _228d38eea_is_self(_72621_param.ptr()))) {
			_72417_params = jule::alloc_for_append(_72417_params,1);_72417_params.__push(_72621_param);;
			_71818_parts=_71818_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71818_parts;
		auto it = expr.begin();
		_iter_begin_22d950b0c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _73321_part = *it;
			{
				jule::Ptr<_228d38b87_ParamDecl> _73421_param = _22a4987ce_build_param(_self_, _73321_part);;
				if ((_73421_param != nullptr)) {
					_72417_params = jule::alloc_for_append(_72417_params,1);_72417_params.__push(_73421_param);;
				};
			}
			_iter_next_22d950b0c:;
			++it;
			goto _iter_begin_22d950b0c;
		}
		_iter_end_22d950b0c:;
	};
	_22a498a54_check_params(_self_.ptr(), _72417_params);
	return _72417_params;
}



inline std::tuple<jule::Ptr<_228d2b2a6_RetTypeDecl>,jule::Bool> _22a4992b3_build_multi_ret_type(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _74445_tokens, jule::I64& _74468_i) {
	jule::Ptr<_228d2b2a6_RetTypeDecl> _74478_t = jule::Ptr<_228d2b2a6_RetTypeDecl>();
	jule::Bool _74495_ok = jule::Bool();
	_74478_t=jule::new_ptr<_228d2b2a6_RetTypeDecl>();
	(_74468_i)++;
	if ((_74468_i >= _74445_tokens.len())) {
		(_74468_i)--;
		std::tie(_74478_t.get()._field_kind,_74495_ok) = _22a495e19_build_type(_self_, _74445_tokens,(&(_74468_i)),false);
		return std::make_tuple(_74478_t,_74495_ok);
	};
	(_74468_i)--;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _75417_range_tokens = _22a491c4a_range(_74468_i,jule::Str("(", 1),jule::Str(")", 1),_74445_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _75618_parts;;
	jule::Slice<_2409487a2_Log> _75625_errs;;
	std::tie(_75618_parts,_75625_errs) = _22a49283e_parts(_75417_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75625_errs);
	if ((_75618_parts.len() == 0LL)) {
		return std::make_tuple(_74478_t,_74495_ok);
	};
	jule::Slice<jule::Ptr<_228d28193_TypeDecl>> _76217_types = jule::Slice<jule::Ptr<_228d28193_TypeDecl>>::alloc(0LL,_75618_parts.len());;
	_74478_t.get()._field_idents=jule::Slice<jule::Ptr<_2276b1a1c_Token>>::alloc(0LL,_75618_parts.len());
	{
		auto &expr = _75618_parts;
		auto it = expr.begin();
		_iter_begin_22d957284:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _76421_part = *it;
			{
				jule::Ptr<_2276b1a1c_Token> _76521_token = _76421_part[0LL];;
				jule::I64 _76621_offset = 0LL;;
				if ((_76421_part.len() > 1LL)) {
					_76521_token=_76421_part[1LL];
					if ((_76521_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_76621_offset=2LL;
						if ((_76421_part.len() < 3LL)) {
							_22a494500_push_err(_self_.ptr(), _76521_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_22d957284;
						};
					};
				};
				_76521_token=_76421_part[0LL];
				if ((_76621_offset != 2LL)) {
					jule::Ptr<_2276b1a1c_Token> _78225_new_token = jule::new_ptr<_2276b1a1c_Token>((*(_76521_token)));;
					_78225_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_74478_t.get()._field_idents = jule::alloc_for_append(_74478_t.get()._field_idents,1);_74478_t.get()._field_idents.__push(_78225_new_token);;
				} else {
					_74478_t.get()._field_idents = jule::alloc_for_append(_74478_t.get()._field_idents,1);_74478_t.get()._field_idents.__push(_76521_token);;
				};
				jule::Ptr<_228d28193_TypeDecl> _78922_tk;;
				std::tie(_78922_tk,std::ignore) = _22a495e19_build_type(_self_, _76421_part,(&(_76621_offset)),true);
				if ((_76621_offset < _76421_part.len())) {
					_22a494500_push_err(_self_.ptr(), _76421_part[_76621_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_76217_types = jule::alloc_for_append(_76217_types,1);_76217_types.__push(_78922_tk);;
			}
			_iter_next_22d957284:;
			++it;
			goto _iter_begin_22d957284;
		}
		_iter_end_22d957284:;
	};
	if ((_76217_types.len() > 1LL)) {
		_74478_t.get()._field_kind=jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_74445_tokens[0LL], ._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d29c33_TupleTypeDecl>(_228d29c33_TupleTypeDecl{._field_types=_76217_types}))});
	} else {
		_74478_t.get()._field_kind=_76217_types[0LL];
	};
	_74495_ok=true;
	return std::make_tuple(_74478_t,_74495_ok);
}



inline std::tuple<jule::Ptr<_228d2b2a6_RetTypeDecl>,jule::Bool> _22a49966a_build_ret_type(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _81239_tokens, jule::I64& _81262_i) {
	jule::Ptr<_228d2b2a6_RetTypeDecl> _81272_t = jule::Ptr<_228d2b2a6_RetTypeDecl>();
	jule::Bool _81289_ok = jule::Bool();
	_81272_t=jule::new_ptr<_228d2b2a6_RetTypeDecl>();
	if ((_81262_i >= _81239_tokens.len())) {
		return std::make_tuple(_81272_t,_81289_ok);
	};
	jule::Ptr<_2276b1a1c_Token> _81817_token = _81239_tokens[_81262_i];;
	{
		auto &_match_expr{ _81817_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_22d960c93:;
			{
				if ((_81817_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_81272_t,_81289_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_22d960d09:;
			{
				if ((_81817_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_81272_t,_81289_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_22d960d70:;
			{
				if (((_81262_i + 1LL) >= _81239_tokens.len())) {
					_22a494500_push_err(_self_.ptr(), _81817_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_81272_t,_81289_ok);
				};
				(_81262_i)++;
				_81817_token=_81239_tokens[_81262_i];
				if ((_81817_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81817_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_22d9638ab:;
							{
								std::tie(_81272_t,_81289_ok) = _22a4992b3_build_multi_ret_type(_self_, _81239_tokens,_81262_i);
								return std::make_tuple(_81272_t,_81289_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_22d963922:;
							{
								_22a494500_push_err(_self_.ptr(), _81817_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_81272_t,_81289_ok);
							}
						}
						_match_end_22d963801:;
					};
				};
				std::tie(_81272_t.get()._field_kind,_81289_ok) = _22a495e19_build_type(_self_, _81239_tokens,(&(_81262_i)),true);
				return std::make_tuple(_81272_t,_81289_ok);
			}
		}
		_match_end_22d960bd8:;
	};
	(_81262_i)++;
	_22a494500_push_err(_self_.ptr(), _81817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_81272_t,_81289_ok);
}



inline jule::Ptr<_228d39ea7_FnDecl> _22a499abb_build_fn_prototype(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _85743_tokens, jule::I64& _85766_i, jule::Bool _85774_method) {
	jule::Ptr<_228d39ea7_FnDecl> _85817_f = jule::new_ptr<_228d39ea7_FnDecl>(_228d39ea7_FnDecl{._field_token=_85743_tokens[_85766_i], });;
	if ((_85817_f.get()._field_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		_85817_f.get()._field_statically=true;
		(_85766_i)++;
		if ((_85766_i >= _85743_tokens.len())) {
			_22a494500_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85817_f.get()._field_token=_85743_tokens[_85766_i];
	};
	if ((_85817_f.get()._field_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_85817_f.get()._field_unsafety=true;
		(_85766_i)++;
		if ((_85766_i >= _85743_tokens.len())) {
			_22a494500_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85817_f.get()._field_token=_85743_tokens[_85766_i];
	};
	(_85766_i)++;
	if ((_85766_i >= _85743_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2276b1a1c_Token> _89113_tok = _85743_tokens[_85766_i];;
	if ((_89113_tok.get()._field_id == static_cast<jule::U64>(2LLU))) {
		(_85766_i)++;
		if ((_85766_i >= _85743_tokens.len())) {
			_22a494500_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85817_f.get()._field_ident=_89113_tok.get()._field_kind;
	} else {
		_85817_f.get()._field_ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_2276b1a1c_Token> _90313_error_token = _85743_tokens[_85766_i];;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _90417_generics_tokens = _22a491c4a_range(_85766_i,jule::Str("[", 1),jule::Str("]", 1),_85743_tokens);;
	if ((_90417_generics_tokens != nullptr)) {
		_85817_f.get()._field_generics=_22a4976ac_build_generics(_self_, _90417_generics_tokens,_90313_error_token);
	};
	if ((_85743_tokens[_85766_i].get()._field_kind != jule::Str("(", 1))) {
		_22a494500_push_err(_self_.ptr(), _85743_tokens[_85766_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _91417_params_toks = _22a491c4a_range(_85766_i,jule::Str("(", 1),jule::Str(")", 1),_85743_tokens);;
	if ((_91417_params_toks.len() > 0LL)) {
		_85817_f.get()._field_params=_22a498e0b_build_params(_self_, _91417_params_toks,_85774_method);
	};
	if ((_85766_i < _85743_tokens.len())) {
		jule::Ptr<_2276b1a1c_Token> _92017_token = _85743_tokens[_85766_i];;
		if (((_92017_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_92017_token.get()._field_kind == jule::Str("!", 1)))) {
			_85817_f.get()._field_exceptional=true;
			(_85766_i)++;
		};
	};
	std::tie(_85817_f.get()._field_result,std::ignore) = _22a49966a_build_ret_type(_self_, _85743_tokens,_85766_i);
	return _85817_f;
}



inline jule::Ptr<_228d39ea7_FnDecl> _22a49a01c_build_fn(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _93333_tokens, jule::Bool _93351_method, jule::Bool _93365_prototype) {
	jule::I64 _93417_i = 0LL;;
	jule::Ptr<_228d39ea7_FnDecl> _93517_f = _22a499abb_build_fn_prototype(_self_, _93333_tokens,_93417_i,_93351_method);;
	if (_93365_prototype) {
		if ((_93417_i < _93333_tokens.len())) {
			_22a494500_push_err(_self_.ptr(), _93333_tokens[(_93417_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _93517_f;
	} else if ((_93517_f == nullptr)) {
		return _93517_f;
	};
	if ((_93417_i >= _93333_tokens.len())) {
		_22a493dc3_stop(_self_.ptr());
		_22a494500_push_err(_self_.ptr(), _93517_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _95117_block_tokens = _22a491c4a_range(_93417_i,jule::Str("{", 1),jule::Str("}", 1),_93333_tokens);;
	if ((_95117_block_tokens != nullptr)) {
		_93517_f.get()._field_scope=_22a495567_build_scope(_self_, _95117_block_tokens,_93333_tokens[(_93417_i - 1LL)]);
		_93517_f.get()._field_scope.get()._field_unsafety=_93517_f.get()._field_unsafety;
		if ((_93417_i < _93333_tokens.len())) {
			_22a494500_push_err(_self_.ptr(), _93333_tokens[_93417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_22a493dc3_stop(_self_.ptr());
		_22a494500_push_err(_self_.ptr(), _93517_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _93517_f;
}



inline jule::Slice<jule::Ptr<_2276b1a1c_Token>> _22a49a32a_get_use_decl_selectors(_22a493a93_Parser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _96745_tokens) {
	jule::I64 _96817_i = 0LL;;
	_96745_tokens=_22a491c4a_range(_96817_i,jule::Str("{", 1),jule::Str("}", 1),_96745_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _97018_parts;;
	jule::Slice<_2409487a2_Log> _97025_errs;;
	std::tie(_97018_parts,_97025_errs) = _22a49283e_parts(_96745_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_97025_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_97025_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _97617_selectors = jule::Slice<jule::Ptr<_2276b1a1c_Token>>::alloc(0LL,_97018_parts.len());;
	{
		auto &expr = _97018_parts;
		auto it = expr.begin();
		_iter_begin_22d979c9b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _97721_part = *it;
			{
				if ((_97721_part.len() > 1LL)) {
					_22a494500_push_err(&(*_self_), _97721_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_2276b1a1c_Token> _98121_tok = _97721_part[0LL];;
				if (((_98121_tok.get()._field_id != static_cast<jule::U64>(2LLU)) && (_98121_tok.get()._field_id != static_cast<jule::U64>(28LLU)))) {
					_22a494500_push_err(&(*_self_), _98121_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_22a49481e_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_22d979c9b;
				};
				_97617_selectors = jule::alloc_for_append(_97617_selectors,1);_97617_selectors.__push(_98121_tok);;
			}
			_iter_next_22d979c9b:;
			++it;
			goto _iter_begin_22d979c9b;
		}
		_iter_end_22d979c9b:;
	};
	return _97617_selectors;
}



inline void _22a49a649_build_cpp_use_decl(_22a493a93_Parser* _self_, jule::Ptr<_228d40bd3_UseDecl>& _99242_decl, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _99259_tokens) {
	if ((_99259_tokens.len() > 1LL)) {
		_22a494500_push_err(&(*_self_), _99259_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_2276b1a1c_Token> _99613_token = _99259_tokens[0LL];;
	if (((_99613_token.get()._field_id != static_cast<jule::U64>(6LLU)) || ((_99613_token.get()._field_kind[0LL] != '`') && (_99613_token.get()._field_kind[0LL] != '\"')))) {
		_22a494500_push_err(&(*_self_), _99613_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_99242_decl.get()._field_cpp_linked=true;
	_99242_decl.get()._field_link_path=_99613_token.get()._field_kind.slice(1LL,(_99613_token.get()._field_kind.len() - 1LL));
}



inline void _22a49a968_build_std_use_decl(_22a493a93_Parser* _self_, jule::Ptr<_228d40bd3_UseDecl>& _100542_decl, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _100562_tokens) {
	_100542_decl.get()._field_std=true;
	jule::Ptr<_2276b1a1c_Token> _100817_token = _100562_tokens[0LL];;
	if ((_100562_tokens.len() < 3LL)) {
		_22a494500_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_100562_tokens=_100562_tokens.slice(2LL);
	_100817_token=_100562_tokens[(_100562_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100817_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_22d983a63:;
			{
				_22a494500_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_22d983ada:;
			{
				if ((_100817_token.get()._field_kind != jule::Str("}", 1))) {
					_22a494500_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_2276b1a1c_Token>> _102521_selectors = nullptr;;
				std::tie(_100562_tokens,_102521_selectors) = _22a491ee2_range_last(_100562_tokens);
				_100542_decl.get()._field_selected=_22a49a32a_get_use_decl_selectors(&(*_self_), _102521_selectors);
				if ((_100562_tokens.len() == 0LL)) {
					_22a494500_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100562_tokens[(_100562_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_22a494500_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100562_tokens=_100562_tokens.slice(0LL,(_100562_tokens.len() - 1LL));
				if ((_100562_tokens.len() == 0LL)) {
					_22a494500_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_22d983b62:;
			{
				if ((_100817_token.get()._field_kind != jule::Str("*", 1))) {
					_22a494500_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100562_tokens=_100562_tokens.slice(0LL,(_100562_tokens.len() - 1LL));
				if ((_100562_tokens.len() == 0LL)) {
					_22a494500_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100562_tokens[(_100562_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_22a494500_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100562_tokens=_100562_tokens.slice(0LL,(_100562_tokens.len() - 1LL));
				if ((_100562_tokens.len() == 0LL)) {
					_22a494500_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100542_decl.get()._field_full=true;
			}
		}
		_match_end_22d9839db:;
	};
	_100542_decl.get()._field_link_path=(jule::Str("std::", 5) + _22a4936ca_tokstoa(_100562_tokens));
}



inline void _22a49ac87_build_ident_use_decl(_22a493a93_Parser* _self_, jule::Ptr<_228d40bd3_UseDecl>& _106744_decl, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _106764_tokens) {
	_106744_decl.get()._field_std=false;
	jule::Ptr<_2276b1a1c_Token> _107017_token = _106764_tokens[(_106764_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _107017_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_22d98dae5:;
			{
				_22a494500_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_22d98dcc1:;
			{
				if ((_107017_token.get()._field_kind != jule::Str("}", 1))) {
					_22a494500_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_2276b1a1c_Token>> _108121_selectors = nullptr;;
				std::tie(_106764_tokens,_108121_selectors) = _22a491ee2_range_last(_106764_tokens);
				_106744_decl.get()._field_selected=_22a49a32a_get_use_decl_selectors(&(*_self_), _108121_selectors);
				if ((_106764_tokens.len() == 0LL)) {
					_22a494500_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106764_tokens[(_106764_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_22a494500_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106764_tokens=_106764_tokens.slice(0LL,(_106764_tokens.len() - 1LL));
				if ((_106764_tokens.len() == 0LL)) {
					_22a494500_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_22d98dd37:;
			{
				if ((_107017_token.get()._field_kind != jule::Str("*", 1))) {
					_22a494500_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106764_tokens=_106764_tokens.slice(0LL,(_106764_tokens.len() - 1LL));
				if ((_106764_tokens.len() == 0LL)) {
					_22a494500_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106764_tokens[(_106764_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_22a494500_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106764_tokens=_106764_tokens.slice(0LL,(_106764_tokens.len() - 1LL));
				if ((_106764_tokens.len() == 0LL)) {
					_22a494500_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106744_decl.get()._field_full=true;
			}
		}
		_match_end_22d98da90:;
	};
	_106744_decl.get()._field_link_path=_22a4936ca_tokstoa(_106764_tokens);
}



inline void _22a49b0a6_parse_use_decl(_22a493a93_Parser* _self_, jule::Ptr<_228d40bd3_UseDecl>& _113038_decl, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _113058_tokens) {
	if (_113038_decl.get()._field_cpp_linked) {
		_22a49a649_build_cpp_use_decl(&(*_self_), _113038_decl,_113058_tokens);
		return;;
	};
	jule::Ptr<_2276b1a1c_Token> _113617_token = _113058_tokens[0LL];;
	if ((_113617_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a494500_push_err(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_113058_tokens.len() > 2LL) && (_113058_tokens[1LL].get()._field_id == static_cast<jule::U64>(12LLU)))) {
		_113038_decl.get()._field_alias=_113617_token.get()._field_kind;
		if ((_113058_tokens[2LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_22a494500_push_err(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_22a49481e_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_113058_tokens=_113058_tokens.slice(2LL);
		_113617_token=_113058_tokens[0LL];
	};
	;
	{
		
		if ((_113617_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_22d99a43c:;
			{
				_22a49a968_build_std_use_decl(&(*_self_), _113038_decl,_113058_tokens);
			}
		}
		else {
			_case_begin_22d99c50a:;
			{
				_22a49ac87_build_ident_use_decl(&(*_self_), _113038_decl,_113058_tokens);
			}
		}
		_match_end_22d99c494:;
	};
}



inline jule::Ptr<_228d40bd3_UseDecl> _22a49b45d_build_use_decl(_22a493a93_Parser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _116437_tokens, jule::Bool _116455_cpp_linked) {
	jule::Ptr<_228d40bd3_UseDecl> _116517_decl = jule::new_ptr<_228d40bd3_UseDecl>(_228d40bd3_UseDecl{._field_token=_116437_tokens[0LL], ._field_cpp_linked=_116455_cpp_linked, });;
	if ((_116437_tokens.len() < 2LL)) {
		_22a494500_push_err(&(*_self_), _116517_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_116437_tokens=_116437_tokens.slice(1LL);
	_22a49b0a6_parse_use_decl(&(*_self_), _116517_decl,_116437_tokens);
	return _116517_decl;
}



inline jule::Ptr<_228d28193_TypeDecl> _22a49b837_build_type_enum_item_kind(jule::Ptr<_22a493a93_Parser> _self_, jule::I64& _117850_i, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _117863_tokens) {
	jule::I64 _117917_brace_n = 0LL;;
	jule::I64 _118013_expr_start = _117850_i;;
	for (; (_117850_i < _117863_tokens.len()); (_117850_i)++) {
		{
			jule::Ptr<_2276b1a1c_Token> _118217_t = _117863_tokens[_117850_i];;
			if ((_118217_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _118217_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_22d9a1a2b:;
						{
							(_117917_brace_n)++;
							goto _iter_next_22d9a1366;
						}
					}
					else {
						_case_begin_22d9a23de:;
						{
							(_117917_brace_n)--;
						}
					}
					_match_end_22d9a21d0:;
				};
			};
			if ((_117917_brace_n > 0LL)) {
				goto _iter_next_22d9a1366;
			};
			if (((_118217_t.get()._field_id == static_cast<jule::U64>(8LLU)) || ((_117850_i + 1LL) >= _117863_tokens.len()))) {
				jule::Slice<jule::Ptr<_2276b1a1c_Token>> _119825_kind_tokens = nullptr;;
				if ((_118217_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_119825_kind_tokens=_117863_tokens.slice(_118013_expr_start,_117850_i);
				} else {
					_119825_kind_tokens=_117863_tokens.slice(_118013_expr_start);
				};
				jule::I64 _120425_j = 0LL;;
				jule::Ptr<_228d28193_TypeDecl> _120526_kind;;
				std::tie(_120526_kind,std::ignore) = _22a495e19_build_type(_self_, _119825_kind_tokens,(&(_120425_j)),true);
				if ((_120425_j < _119825_kind_tokens.len())) {
					_22a494500_push_err(_self_.ptr(), _119825_kind_tokens[_120425_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _120526_kind;
			};
		}
	_iter_next_22d9a1366:;
	}
	_iter_end_22d9a1366:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_228d42685_TypeEnumItemDecl>> _22a49bb56_build_type_enum_items(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _121546_tokens) {
	jule::Slice<jule::Ptr<_228d42685_TypeEnumItemDecl>> _121617_items = jule::Slice<jule::Ptr<_228d42685_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121717_i = 0LL;;
	for (; (_121717_i < _121546_tokens.len()); (_121717_i)++) {
		{
			jule::Ptr<_2276b1a1c_Token> _121921_t = _121546_tokens[_121717_i];;
			jule::Ptr<_228d42685_TypeEnumItemDecl> _122021_item = jule::new_ptr<_228d42685_TypeEnumItemDecl>();;
			_122021_item.get()._field_token=_121921_t;
			if (((_122021_item.get()._field_token.get()._field_id == static_cast<jule::U64>(2LLU)) && ((_121546_tokens.len() - _121717_i) > 2LL))) {
				_122021_item.get()._field_ident=_122021_item.get()._field_token.get()._field_kind;
				_121921_t=_121546_tokens[(_121717_i + 1LL)];
				if ((_121921_t.get()._field_id == static_cast<jule::U64>(11LLU))) {
					_121717_i+=2LL;
					if (((_121717_i >= _121546_tokens.len()) || (_121546_tokens[_121717_i].get()._field_id == static_cast<jule::U64>(8LLU)))) {
						_22a494500_push_err(_self_.ptr(), _121921_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_22d9a7339;
					};
				};
			};
			_122021_item.get()._field_kind=_22a49b837_build_type_enum_item_kind(_self_, _121717_i,_121546_tokens);
			_121617_items = jule::alloc_for_append(_121617_items,1);_121617_items.__push(_122021_item);;
		}
	_iter_next_22d9a7339:;
	}
	_iter_end_22d9a7339:;;
	return _121617_items;
}



inline jule::Ptr<_228d42883_TypeEnumDecl> _22a49be64_build_type_enum_decl(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _123945_tokens) {
	jule::I64 _124017_i = 1LL;;
	jule::Ptr<_228d42883_TypeEnumDecl> _124117_e = jule::new_ptr<_228d42883_TypeEnumDecl>(_228d42883_TypeEnumDecl{._field_token=_123945_tokens[_124017_i], });;
	if ((_124117_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a494500_push_err(_self_.ptr(), _124117_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_ident=_124117_e.get()._field_token.get()._field_kind;
	_124017_i+=3LL;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _125017_item_tokens = _22a491c4a_range(_124017_i,jule::Str("{", 1),jule::Str("}", 1),_123945_tokens);;
	if ((_125017_item_tokens == nullptr)) {
		_22a493dc3_stop(_self_.ptr());
		_22a494500_push_err(_self_.ptr(), _124117_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _124117_e;
	} else if ((_124017_i < _123945_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _123945_tokens[_124017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_end=_123945_tokens[(_124017_i - 1LL)];
	_124117_e.get()._field_items=_22a49bb56_build_type_enum_items(_self_, _125017_item_tokens);
	return _124117_e;
}



inline jule::Ptr<_228d2c6b4_Expr> _22a49c31b_build_enum_item_expr(jule::Ptr<_22a493a93_Parser> _self_, jule::I64& _126445_i, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _126458_tokens) {
	jule::I64 _126517_brace_n = 0LL;;
	jule::I64 _126613_expr_start = _126445_i;;
	for (; (_126445_i < _126458_tokens.len()); (_126445_i)++) {
		{
			jule::Ptr<_2276b1a1c_Token> _126817_t = _126458_tokens[_126445_i];;
			if ((_126817_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126817_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_22d9b2be6:;
						{
							(_126517_brace_n)++;
							goto _iter_next_22d9b2531;
						}
					}
					else {
						_case_begin_22d9b35a9:;
						{
							(_126517_brace_n)--;
						}
					}
					_match_end_22d9b339a:;
				};
			};
			if ((_126517_brace_n > 0LL)) {
				goto _iter_next_22d9b2531;
			};
			if (((_126817_t.get()._field_id == static_cast<jule::U64>(8LLU)) || ((_126445_i + 1LL) >= _126458_tokens.len()))) {
				jule::Slice<jule::Ptr<_2276b1a1c_Token>> _128425_expr_tokens = nullptr;;
				if ((_126817_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_128425_expr_tokens=_126458_tokens.slice(_126613_expr_start,_126445_i);
				} else {
					_128425_expr_tokens=_126458_tokens.slice(_126613_expr_start);
				};
				return _22a494b2c_build_expr(_self_, _128425_expr_tokens);
			};
		}
	_iter_next_22d9b2531:;
	}
	_iter_end_22d9b2531:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_228d41156_EnumItemDecl>> _22a49c629_build_enum_items(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _129641_tokens) {
	jule::Slice<jule::Ptr<_228d41156_EnumItemDecl>> _129717_items = jule::Slice<jule::Ptr<_228d41156_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _129817_i = 0LL;;
	for (; (_129817_i < _129641_tokens.len()); (_129817_i)++) {
		{
			jule::Ptr<_2276b1a1c_Token> _130021_t = _129641_tokens[_129817_i];;
			jule::Ptr<_228d41156_EnumItemDecl> _130121_item = jule::new_ptr<_228d41156_EnumItemDecl>();;
			_130121_item.get()._field_token=_130021_t;
			if ((_130121_item.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
				_22a494500_push_err(_self_.ptr(), _130121_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_22a49481e_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_130121_item.get()._field_ident=_130121_item.get()._field_token.get()._field_kind;
			if ((((_129817_i + 1LL) >= _129641_tokens.len()) || (_129641_tokens[(_129817_i + 1LL)].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				if (((_129817_i + 1LL) < _129641_tokens.len())) {
					(_129817_i)++;
				};
				_129717_items = jule::alloc_for_append(_129717_items,1);_129717_items.__push(_130121_item);;
				goto _iter_next_22d9b705d;
			};
			(_129817_i)++;
			_130021_t=_129641_tokens[_129817_i];
			(_129817_i)++;
			if ((_130021_t.get()._field_id != static_cast<jule::U64>(11LLU))) {
				_22a494500_push_err(_self_.ptr(), _130021_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_22d9b705d;
			};
			if (((_129817_i >= _129641_tokens.len()) || (_129641_tokens[_129817_i].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				_22a494500_push_err(_self_.ptr(), _130021_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_22d9b705d;
			};
			_130121_item.get()._field_expr=_22a49c31b_build_enum_item_expr(_self_, _129817_i,_129641_tokens);
			_129717_items = jule::alloc_for_append(_129717_items,1);_129717_items.__push(_130121_item);;
		}
	_iter_next_22d9b705d:;
	}
	_iter_end_22d9b705d:;;
	return _129717_items;
}



inline jule::Ptr<_228d41b7e_EnumDecl> _22a49c937_build_enum_decl(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _133340_tokens) {
	if ((_133340_tokens.len() < 3LL)) {
		_22a494500_push_err(_self_.ptr(), _133340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_228d41b7e_EnumDecl> _133817_e = jule::new_ptr<_228d41b7e_EnumDecl>(_228d41b7e_EnumDecl{._field_token=_133340_tokens[1LL], });;
	if ((_133817_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a494500_push_err(_self_.ptr(), _133817_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133817_e.get()._field_ident=_133817_e.get()._field_token.get()._field_kind;
	jule::I64 _134617_i = 2LL;;
	if ((_133340_tokens[_134617_i].get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_134617_i)++;
		if ((_134617_i >= _133340_tokens.len())) {
			_22a494500_push_err(_self_.ptr(), _133340_tokens[(_134617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133817_e;
		};
		std::tie(_133817_e.get()._field_kind,std::ignore) = _22a495e19_build_type(_self_, _133340_tokens,(&(_134617_i)),true);
		if ((_134617_i >= _133340_tokens.len())) {
			_22a493dc3_stop(_self_.ptr());
			_22a494500_push_err(_self_.ptr(), _133817_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133817_e;
		};
	} else {
		_133817_e.get()._field_kind=nullptr;
	};
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _136317_item_tokens = _22a491c4a_range(_134617_i,jule::Str("{", 1),jule::Str("}", 1),_133340_tokens);;
	if ((_136317_item_tokens == nullptr)) {
		_22a493dc3_stop(_self_.ptr());
		_22a494500_push_err(_self_.ptr(), _133817_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133817_e;
	} else if ((_134617_i < _133340_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _133340_tokens[_134617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133817_e.get()._field_end=_133340_tokens[(_134617_i - 1LL)];
	_133817_e.get()._field_items=_22a49c629_build_enum_items(_self_, _136317_item_tokens);
	return _133817_e;
}



inline jule::Any _22a49cc45_build_node_enum_decl(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _137745_tokens) {
	if (((_137745_tokens.len() > 3LL) && (_137745_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
		if ((_137745_tokens[3LL].get()._field_id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_22a49be64_build_type_enum_decl(_self_, _137745_tokens));
		};
	};
	return static_cast<jule::Any>(_22a49c937_build_enum_decl(_self_, _137745_tokens));
}



inline jule::Ptr<_228d42dd3_FieldDecl> _22a49d053_build_field(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _138635_tokens) {
	jule::Ptr<_228d42dd3_FieldDecl> _138717_f = jule::new_ptr<_228d42dd3_FieldDecl>(_228d42dd3_FieldDecl{});;
	_138717_f.get()._field_public=(_138635_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU));
	if (_138717_f.get()._field_public) {
		if ((_138635_tokens.len() == 1LL)) {
			_22a494500_push_err(_self_.ptr(), _138635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138635_tokens=_138635_tokens.slice(1LL);
	};
	_138717_f.get()._field_mutable=(_138635_tokens[0LL].get()._field_id == static_cast<jule::U64>(36LLU));
	if (_138717_f.get()._field_mutable) {
		if ((_138635_tokens.len() == 1LL)) {
			_22a494500_push_err(_self_.ptr(), _138635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138635_tokens=_138635_tokens.slice(1LL);
	};
	_138717_f.get()._field_token=_138635_tokens[0LL];
	if ((_138717_f.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a494500_push_err(_self_.ptr(), _138717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138717_f.get()._field_ident=_138717_f.get()._field_token.get()._field_kind;
	if ((_138635_tokens.len() == 1LL)) {
		_22a494500_push_err(_self_.ptr(), _138635_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138635_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_22a494500_push_err(_self_.ptr(), _138635_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138635_tokens=_138635_tokens.slice(2LL);
	jule::I64 _142417_i = 0LL;;
	std::tie(_138717_f.get()._field_kind,std::ignore) = _22a495e19_build_type(_self_, _138635_tokens,(&(_142417_i)),true);
	if ((_142417_i < _138635_tokens.len())) {
		jule::Ptr<_2276b1a1c_Token> _142717_token = _138635_tokens[_142417_i];;
		if (((_142717_token.get()._field_id != static_cast<jule::U64>(7LLU)) || (_142717_token.get()._field_kind != jule::Str("=", 1)))) {
			_22a494500_push_err(_self_.ptr(), _138635_tokens[_142417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_142417_i)++;
		if ((_142417_i >= _138635_tokens.len())) {
			_22a494500_push_err(_self_.ptr(), _142717_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138635_tokens=_138635_tokens.slice(_142417_i);
		_138717_f.get()._field_default=_22a494b2c_build_expr(_self_, _138635_tokens);
	};
	return _138717_f;
}



inline jule::Slice<jule::Ptr<_228d42dd3_FieldDecl>> _22a49d383_build_struct_decl_fields(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _144448_tokens) {
	jule::Slice<jule::Ptr<_228d42dd3_FieldDecl>> _144517_fields = nullptr;;
	jule::Slice<jule::Ptr<_22a4774d3_stmt>> _144617_stmts = _22a477879_split_stmts(_144448_tokens);;
	{
		auto &expr = _144617_stmts;
		auto it = expr.begin();
		_iter_begin_22d9d5268:;
		if (it != expr.end()) {
			jule::Ptr<_22a4774d3_stmt> _144721_stmt = *it;
			{
				_144448_tokens=_144721_stmt.get()._field_tokens;
				jule::Ptr<_228d42dd3_FieldDecl> _144921_f = _22a49d053_build_field(_self_, _144448_tokens);;
				_144517_fields = jule::alloc_for_append(_144517_fields,1);_144517_fields.__push(_144921_f);;
			}
			_iter_next_22d9d5268:;
			++it;
			goto _iter_begin_22d9d5268;
		}
		_iter_end_22d9d5268:;
	};
	return _144517_fields;
}



inline jule::Ptr<_228d43741_StructDecl> _22a49d6a2_build_struct_decl(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _145542_tokens) {
	if ((_145542_tokens.len() < 3LL)) {
		_22a494500_push_err(_self_.ptr(), _145542_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _146117_i = 1LL;;
	jule::Ptr<_228d43741_StructDecl> _146217_s = jule::new_ptr<_228d43741_StructDecl>(_228d43741_StructDecl{._field_token=_145542_tokens[_146117_i], });;
	if ((_146217_s.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a494500_push_err(_self_.ptr(), _146217_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_146117_i)++;
	if ((_146117_i >= _145542_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _145542_tokens[_146117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _146217_s;
	};
	_146217_s.get()._field_ident=_146217_s.get()._field_token.get()._field_kind;
	jule::Ptr<_2276b1a1c_Token> _147613_error_token = _145542_tokens[_146117_i];;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _147717_generics_tokens = _22a491c4a_range(_146117_i,jule::Str("[", 1),jule::Str("]", 1),_145542_tokens);;
	if ((_147717_generics_tokens != nullptr)) {
		_146217_s.get()._field_generics=_22a4976ac_build_generics(_self_, _147717_generics_tokens,_147613_error_token);
	};
	if ((_146117_i >= _145542_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _145542_tokens[(_146117_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _146217_s;
	};
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _148717_body_tokens = _22a491c4a_range(_146117_i,jule::Str("{", 1),jule::Str("}", 1),_145542_tokens);;
	if ((_148717_body_tokens == nullptr)) {
		_22a493dc3_stop(_self_.ptr());
		_22a494500_push_err(_self_.ptr(), _146217_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _146217_s;
	};
	if ((_146117_i < _145542_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _145542_tokens[_146117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_146217_s.get()._field_fields=_22a49d383_build_struct_decl_fields(_self_, _148717_body_tokens);
	_146217_s.get()._field_end=_145542_tokens[(_146117_i - 1LL)];
	return _146217_s;
}



inline void _22a49d927_check_method_receiver(_22a493a93_Parser* _self_, jule::Ptr<_228d39ea7_FnDecl>& _150241_f) {
	if (_150241_f.get()._field_statically) {
		if (((_150241_f.get()._field_params.len() > 0LL) && _228d38eea_is_self(_150241_f.get()._field_params[0LL].ptr()))) {
			_22a494500_push_err(&(*_self_), _150241_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_150241_f.get()._field_params.len() == 0LL)) {
		_22a494500_push_err(&(*_self_), _150241_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_228d38b87_ParamDecl> _151513_param = _150241_f.get()._field_params[0LL];;
	if ((!(_228d38eea_is_self(_151513_param.ptr())))) {
		_22a494500_push_err(&(*_self_), _150241_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_228d39ea7_FnDecl>> _22a49dc35_build_trait_methods(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _152243_tokens) {
	jule::Slice<jule::Ptr<_228d39ea7_FnDecl>> _152317_methods = nullptr;;
	jule::Slice<jule::Ptr<_22a4774d3_stmt>> _152417_stmts = _22a477879_split_stmts(_152243_tokens);;
	{
		auto &expr = _152417_stmts;
		auto it = expr.begin();
		_iter_begin_22d9e4651:;
		if (it != expr.end()) {
			jule::Ptr<_22a4774d3_stmt> _152521_stmt = *it;
			{
				_152243_tokens=_152521_stmt.get()._field_tokens;
				if ((_152243_tokens.len() == 0LL)) {
					goto _iter_next_22d9e4651;
				};
				jule::Bool _153121_is_pub = false;;
				if ((_152243_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
					_153121_is_pub=true;
					if ((_152243_tokens.len() == 1LL)) {
						_22a494500_push_err(_self_.ptr(), _152243_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_22d9e4651;
					};
					_152243_tokens=_152243_tokens.slice(1LL);
				};
				jule::Ptr<_228d39ea7_FnDecl> _154121_f = _22a49a01c_build_fn(_self_, _152243_tokens,true,true);;
				if ((_154121_f != nullptr)) {
					if (_228d3a309_is_anon(_154121_f.ptr())) {
						_22a494500_push_err(_self_.ptr(), _154121_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_22a49d927_check_method_receiver(_self_.ptr(), _154121_f);
					if ((_154121_f.get()._field_generics.len() > 0LL)) {
						_22a494500_push_err(_self_.ptr(), _154121_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_154121_f.get()._field_public=_153121_is_pub;
					_152317_methods = jule::alloc_for_append(_152317_methods,1);_152317_methods.__push(_154121_f);;
				};
			}
			_iter_next_22d9e4651:;
			++it;
			goto _iter_begin_22d9e4651;
		}
		_iter_end_22d9e4651:;
	};
	return _152317_methods;
}



inline jule::Ptr<_228d43d4b_TraitDecl> _22a49e043_build_trait_decl(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _155741_tokens) {
	if ((_155741_tokens.len() < 3LL)) {
		_22a494500_push_err(_self_.ptr(), _155741_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_228d43d4b_TraitDecl> _156217_t = jule::new_ptr<_228d43d4b_TraitDecl>(_228d43d4b_TraitDecl{._field_token=_155741_tokens[1LL], });;
	if ((_156217_t.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a494500_push_err(_self_.ptr(), _156217_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_156217_t.get()._field_ident=_156217_t.get()._field_token.get()._field_kind;
	jule::I64 _157017_i = 2LL;;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _157117_body_tokens = _22a491c4a_range(_157017_i,jule::Str("{", 1),jule::Str("}", 1),_155741_tokens);;
	if ((_157117_body_tokens == nullptr)) {
		_22a493dc3_stop(_self_.ptr());
		_22a494500_push_err(_self_.ptr(), _156217_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_157017_i < _155741_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _155741_tokens[_157017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_156217_t.get()._field_methods=_22a49dc35_build_trait_methods(_self_, _157117_body_tokens);
	_156217_t.get()._field_end=_155741_tokens[(_157017_i - 1LL)];
	return _156217_t;
}



inline jule::Ptr<_228d39ea7_FnDecl> _22a49e351_build_cpp_link_fn(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _158641_tokens) {
	_158641_tokens=_158641_tokens.slice(1LL);
	jule::Ptr<_228d39ea7_FnDecl> _158817_f = _22a49a01c_build_fn(_self_, _158641_tokens,false,true);;
	if ((_158817_f != nullptr)) {
		if (_228d3a309_is_anon(_158817_f.ptr())) {
			_22a494500_push_err(_self_.ptr(), _158817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_158817_f.get()._field_cpp_linked=true;
	};
	return _158817_f;
}



inline jule::Ptr<_228d3ae86_VarDecl> _22a49e65e_build_cpp_link_var(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _159842_tokens) {
	_159842_tokens=_159842_tokens.slice(1LL);
	jule::Ptr<_228d3ae86_VarDecl> _160017_v = _22a496ee7_build_var(_self_, _159842_tokens);;
	if ((_160017_v != nullptr)) {
		_160017_v.get()._field_cpp_linked=true;
		if ((_160017_v.get()._field_expr != nullptr)) {
			_22a494500_push_err(_self_.ptr(), _160017_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _160017_v;
}



inline jule::Ptr<_228d43741_StructDecl> _22a49e96c_build_cpp_link_struct(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _161045_tokens) {
	_161045_tokens=_161045_tokens.slice(1LL);
	jule::Ptr<_228d43741_StructDecl> _161217_s = _22a49d6a2_build_struct_decl(_self_, _161045_tokens);;
	if ((_161217_s != nullptr)) {
		_161217_s.get()._field_cpp_linked=true;
	};
	return _161217_s;
}



inline jule::Ptr<_228d3e7e7_TypeAliasDecl> _22a49ec9c_build_cpp_link_type_alias(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _161949_tokens) {
	_161949_tokens=_161949_tokens.slice(1LL);
	jule::Ptr<_228d3e7e7_TypeAliasDecl> _162117_t = _22a496227_build_type_alias_decl(_self_, _161949_tokens);;
	if ((_162117_t != nullptr)) {
		_162117_t.get()._field_cpp_linked=true;
	};
	return _162117_t;
}



inline jule::Ptr<_228d40bd3_UseDecl> _22a4a00bb_build_cpp_link_use(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _162842_tokens) {
	if ((_162842_tokens.len() == 1LL)) {
		_22a494500_push_err(_self_.ptr(), _162842_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_162842_tokens=_162842_tokens.slice(1LL);
	;
	return _22a49b45d_build_use_decl(_self_.ptr(), _162842_tokens,true);
}



inline jule::Any _22a4a03c9_build_cpp_link(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _163939_tokens) {
	jule::Ptr<_2276b1a1c_Token> _164017_token = _163939_tokens[0LL];;
	if ((_163939_tokens.len() == 1LL)) {
		_22a494500_push_err(_self_.ptr(), _164017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_164017_token=_163939_tokens[1LL];
	{
		auto &_match_expr{ _164017_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_22da09556:;
			{
				return static_cast<jule::Any>(_22a49e351_build_cpp_link_fn(_self_, _163939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_22da0a26b:;
			{
				return static_cast<jule::Any>(_22a49e65e_build_cpp_link_var(_self_, _163939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_22da0a2d2:;
			{
				return static_cast<jule::Any>(_22a49e96c_build_cpp_link_struct(_self_, _163939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_22da0a348:;
			{
				return static_cast<jule::Any>(_22a49ec9c_build_cpp_link_type_alias(_self_, _163939_tokens));
			}
		}
		else {
			_case_begin_22da0a17d:;
			{
				_22a494500_push_err(_self_.ptr(), _164017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_22da0a117:;
	};
	return nullptr;
}



inline jule::Ptr<_228d39ea7_FnDecl> _22a4a06d7_get_method(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _166335_tokens) {
	jule::I64 _166417_i = 0LL;;
	jule::Ptr<_2276b1a1c_Token> _166517_token = _166335_tokens[_166417_i];;
	if ((_166517_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		if (((_166417_i + 1LL) >= _166335_tokens.len())) {
			_22a494500_push_err(_self_.ptr(), _166517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_166417_i)++;
		_166517_token=_166335_tokens[_166417_i];
	};
	if ((_166517_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		if (((_166417_i + 1LL) >= _166335_tokens.len())) {
			_22a494500_push_err(_self_.ptr(), _166517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_166417_i)++;
		_166517_token=_166335_tokens[_166417_i];
	};
	if ((_166517_token.get()._field_id != static_cast<jule::U64>(33LLU))) {
		_22a494500_push_err(_self_.ptr(), _166517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_228d39ea7_FnDecl> _168917_f = _22a49a01c_build_fn(_self_, _166335_tokens,true,false);;
	if (((_168917_f != nullptr) && _228d3a309_is_anon(_168917_f.ptr()))) {
		_22a494500_push_err(_self_.ptr(), _168917_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _168917_f;
}



inline void _22a4a0a06_parse_impl_body(jule::Ptr<_22a493a93_Parser> _self_, jule::Ptr<_228d44456_Impl>& _169640_ipl, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _169657_tokens) {
	jule::Slice<jule::Ptr<_22a4774d3_stmt>> _169717_stmts = _22a477879_split_stmts(_169657_tokens);;
	{
		auto &expr = _169717_stmts;
		auto it = expr.begin();
		_iter_begin_22da13670:;
		if (it != expr.end()) {
			jule::Ptr<_22a4774d3_stmt> _169821_stmt = *it;
			{
				_169657_tokens=_169821_stmt.get()._field_tokens;
				jule::Ptr<_2276b1a1c_Token> _170021_token = _169657_tokens[0LL];;
				jule::Bool _170121_is_pub = false;;
				{
					auto &_match_expr{ _170021_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_22da14dd0:;
						{
							_22a4951b0_push_directive(_self_.ptr(), _22a494e3a_build_directive(_self_.ptr(), _169657_tokens));
							goto _iter_next_22da13670;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_22da14e79:;
						{
							_170121_is_pub=true;
							if ((_169657_tokens.len() == 1LL)) {
								_22a494500_push_err(_self_.ptr(), _169657_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_22da13670;
							};
							_169657_tokens=_169657_tokens.slice(1LL);
							if ((_169657_tokens.len() > 0LL)) {
								_170021_token=_169657_tokens[0LL];
							};
						}
					}
					_match_end_22da14d69:;
				};
				{
					auto &_match_expr{ _170021_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_22da13e56:;
						{
							jule::Ptr<_228d3ae86_VarDecl> _172025_v = _22a496ee7_build_var(_self_, _169657_tokens);;
							if ((_172025_v != nullptr)) {
								_172025_v.get()._field_public=_170121_is_pub;
								_169640_ipl.get()._field_statics = jule::alloc_for_append(_169640_ipl.get()._field_statics,1);_169640_ipl.get()._field_statics.__push(_172025_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_22da15bc2:;
						{
							jule::Ptr<_228d39ea7_FnDecl> _172825_f = _22a4a06d7_get_method(_self_, _169657_tokens);;
							if ((_172825_f != nullptr)) {
								_22a49d927_check_method_receiver(_self_.ptr(), _172825_f);
								_22a4a1441_apply_fn_meta(_self_.ptr(), _172825_f,_170121_is_pub);
								_169640_ipl.get()._field_methods = jule::alloc_for_append(_169640_ipl.get()._field_methods,1);_169640_ipl.get()._field_methods.__push(_172825_f);;
							};
						}
					}
					else {
						_case_begin_22da15375:;
						{
							_22a494500_push_err(_self_.ptr(), _170021_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_22da13670;
						}
					}
					_match_end_22da171ac:;
				};
			}
			_iter_next_22da13670:;
			++it;
			goto _iter_begin_22da13670;
		}
		_iter_end_22da13670:;
	};
}



inline jule::Ptr<_228d44456_Impl> _22a4a0d14_build_impl(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _174134_tokens) {
	jule::Ptr<_2276b1a1c_Token> _174217_token = _174134_tokens[0LL];;
	if ((_174134_tokens.len() < 2LL)) {
		_22a494500_push_err(_self_.ptr(), _174217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _174817_i = 1LL;;
	jule::Ptr<_228d28193_TypeDecl> _175018_base;;
	jule::Bool _175028_ok;;
	std::tie(_175018_base,_175028_ok) = _22a495e19_build_type(_self_, _174134_tokens,(&(_174817_i)),true);
	if ((!(_175028_ok))) {
		return nullptr;
	};
	if ((_174817_i >= _174134_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _174217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_228d44456_Impl> _175917_ipl = jule::new_ptr<_228d44456_Impl>(_228d44456_Impl{._field_base=_175018_base, });;
	_174217_token=_174134_tokens[_174817_i];
	if ((_174217_token.get()._field_id != static_cast<jule::U64>(12LLU))) {
		if (((_174217_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_174217_token.get()._field_kind == jule::Str("{", 1)))) {
			std::tie(_175917_ipl.get()._field_base,_175917_ipl.get()._field_dest) = std::make_tuple(_175917_ipl.get()._field_dest,_175917_ipl.get()._field_base);
			goto _julec_label_body;
		};
		_22a493dc3_stop(_self_.ptr());
		_22a494500_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_174817_i)++;
	if ((_174817_i >= _174134_tokens.len())) {
		_22a493dc3_stop(_self_.ptr());
		_22a494500_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_175917_ipl.get()._field_dest,_175028_ok) = _22a495e19_build_type(_self_, _174134_tokens,(&(_174817_i)),true);
	if ((!(_175028_ok))) {
		return nullptr;
	};
	if ((_174817_i >= _174134_tokens.len())) {
		_22a493dc3_stop(_self_.ptr());
		_22a494500_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _179917_body_tokens = _22a491c4a_range(_174817_i,jule::Str("{", 1),jule::Str("}", 1),_174134_tokens);;
	if ((_179917_body_tokens == nullptr)) {
		_22a493dc3_stop(_self_.ptr());
		_22a494500_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_174817_i < _174134_tokens.len())) {
		_22a494500_push_err(_self_.ptr(), _174134_tokens[_174817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_175917_ipl.get()._field_end=_174134_tokens[(_174817_i - 1LL)];
	_22a4a0a06_parse_impl_body(_self_, _175917_ipl,_179917_body_tokens);
	return _175917_ipl;
}



inline jule::Any _22a4a1122_build_node_data(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _181440_tokens) {
	jule::Ptr<_2276b1a1c_Token> _181517_token = _181440_tokens[0LL];;
	{
		auto &_match_expr{ _181517_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_22da28102:;
			{
				jule::Ptr<_228d39ea7_FnDecl> _181921_f = _22a49a01c_build_fn(_self_, _181440_tokens,false,false);;
				if ((_181921_f != nullptr)) {
					_181921_f.get()._field_global=true;
					if (_228d3a309_is_anon(_181921_f.ptr())) {
						_22a494500_push_err(_self_.ptr(), _181921_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_181921_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_22da28168:;
			{
				return static_cast<jule::Any>(_22a496ee7_build_var(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_22da28872:;
			{
				return static_cast<jule::Any>(_22a496227_build_type_alias_decl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_22da288d8:;
			{
				return _22a49cc45_build_node_enum_decl(_self_, _181440_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_22da2894e:;
			{
				return static_cast<jule::Any>(_22a49d6a2_build_struct_decl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_22da289b5:;
			{
				return static_cast<jule::Any>(_22a49e043_build_trait_decl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_22da28a2b:;
			{
				return static_cast<jule::Any>(_22a4a0d14_build_impl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_22da28aa3:;
			{
				return _22a4a03c9_build_cpp_link(_self_, _181440_tokens);
			}
		}
		else {
			_case_begin_22da27ee2:;
			{
				_22a494500_push_err(_self_.ptr(), _181517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22da27e48:;
	};
}



inline void _22a4a1441_apply_fn_meta(_22a493a93_Parser* _self_, jule::Ptr<_228d39ea7_FnDecl>& _185037_f, jule::Bool _185049_is_pub) {
	_185037_f.get()._field_public=_185049_is_pub;
	_185037_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _22a4a1760_apply_meta(_22a493a93_Parser* _self_, _228ce459e_Node& _185634_node, jule::Bool _185646_is_pub) {
	{
		auto &_match_expr{ _185634_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_228d3ae86_VarDecl>>()) {
			_case_begin_22da3057c:;
			{
				jule::Ptr<_228d3ae86_VarDecl> _185921_v = _185634_node._field_data.operator jule::Ptr<_228d3ae86_VarDecl>();;
				if ((_185921_v == nullptr)) {
					return;;
				};
				_185921_v.get()._field_public=_185646_is_pub;
				_185921_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d39ea7_FnDecl>>()) {
			_case_begin_22da2ebca:;
			{
				jule::Ptr<_228d39ea7_FnDecl> _186721_f = _185634_node._field_data.operator jule::Ptr<_228d39ea7_FnDecl>();;
				if ((_186721_f == nullptr)) {
					return;;
				};
				_22a4a1441_apply_fn_meta(&(*_self_), _186721_f,_185646_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d3e7e7_TypeAliasDecl>>()) {
			_case_begin_22da2ec52:;
			{
				jule::Ptr<_228d3e7e7_TypeAliasDecl> _187321_tad = _185634_node._field_data.operator jule::Ptr<_228d3e7e7_TypeAliasDecl>();;
				if ((_187321_tad == nullptr)) {
					return;;
				};
				_187321_tad.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d41b7e_EnumDecl>>()) {
			_case_begin_22da2ecc9:;
			{
				jule::Ptr<_228d41b7e_EnumDecl> _187921_ed = _185634_node._field_data.operator jule::Ptr<_228d41b7e_EnumDecl>();;
				if ((_187921_ed == nullptr)) {
					return;;
				};
				_187921_ed.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d42883_TypeEnumDecl>>()) {
			_case_begin_22da300d7:;
			{
				jule::Ptr<_228d42883_TypeEnumDecl> _188521_ted = _185634_node._field_data.operator jule::Ptr<_228d42883_TypeEnumDecl>();;
				if ((_188521_ted == nullptr)) {
					return;;
				};
				_188521_ted.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d43741_StructDecl>>()) {
			_case_begin_22da3014d:;
			{
				jule::Ptr<_228d43741_StructDecl> _189121_sd = _185634_node._field_data.operator jule::Ptr<_228d43741_StructDecl>();;
				if ((_189121_sd == nullptr)) {
					return;;
				};
				_189121_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_189121_sd.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d43d4b_TraitDecl>>()) {
			_case_begin_22da301b4:;
			{
				jule::Ptr<_228d43d4b_TraitDecl> _189921_td = _185634_node._field_data.operator jule::Ptr<_228d43d4b_TraitDecl>();;
				if ((_189921_td == nullptr)) {
					return;;
				};
				_189921_td.get()._field_public=_185646_is_pub;
			}
		}
		else {
			_case_begin_22da2eb31:;
			{
				if (_185646_is_pub) {
					_22a494500_push_err(&(*_self_), _185634_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_22da2e988:;
	};
}



inline std::tuple<jule::Bool,jule::Any> _22a4a1a90_build_general_scope_node_data(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _191153_st) {
	jule::Bool _191169_is_pub = jule::Bool();
	jule::Any _191183_data = jule::Any();
	if ((_191153_st[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
		_191169_is_pub=true;
		_191153_st=_191153_st.slice(1LL);
		if ((_191153_st.len() == 0LL)) {
			_22a494500_push_err(_self_.ptr(), _191153_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_191169_is_pub,_191183_data);
		};
	};
	_191183_data=_22a4a1122_build_node_data(_self_, _191153_st);
	return std::make_tuple(_191169_is_pub,_191183_data);
}



inline void _22a4a1d26_push_use_decl(jule::Ptr<_22a493a93_Parser> _self_, jule::Ptr<_228d40bd3_UseDecl>& _192638_decl) {
	_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_192638_decl);;
	if ((_self_.get()._field_ast.get()._field_nodes.len() > 0LL)) {
		_22a494500_push_err(_self_.ptr(), _192638_decl.get()._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_22a49481e_push_suggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _22a4a2134_push_meta_nodes(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _193440_tokens) {
	{
		auto &_match_expr{ _193440_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_22da3cad9:;
			{
				;
				jule::Ptr<_228d40bd3_UseDecl> _193821_decl = _22a49b45d_build_use_decl(_self_.ptr(), _193440_tokens,false);;
				_22a4a1d26_push_use_decl(_self_, _193821_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_22da3cb50:;
			{
				if (((_193440_tokens.len() > 1LL) && (_193440_tokens[1LL].get()._field_id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_228d40bd3_UseDecl> _194325_decl = _22a4a00bb_build_cpp_link_use(_self_, _193440_tokens);;
					_22a4a1d26_push_use_decl(_self_, _194325_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_22da3cbc7:;
			{
				_22a4951b0_push_directive(_self_.ptr(), _22a494e3a_build_directive(_self_.ptr(), _193440_tokens));
				return true;
			}
		}
		_match_end_22da3c9da:;
	};
	return false;
}



inline _228ce459e_Node _22a4a2442_parse_node(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _195435_st) {
	_228ce459e_Node _195517_node = _228ce459e_Node{._field_token=_195435_st[0LL], };;
	if (_22a4a2134_push_meta_nodes(_self_, _195435_st)) {
		return _195517_node;
	};
	jule::Bool _196314_is_pub;;
	jule::Any _196326_data;;
	std::tie(_196314_is_pub,_196326_data) = _22a4a1a90_build_general_scope_node_data(_self_, _195435_st);
	if ((_196326_data == nullptr)) {
		return _195517_node;
	};
	_195517_node._field_data=_196326_data;
	_22a4a1760_apply_meta(_self_.ptr(), _195517_node,_196314_is_pub);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_22a494500_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _195517_node;
}



inline void _22a4a26b7_append_node(jule::Ptr<_22a493a93_Parser> _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _197836_st) {
	if ((_197836_st.len() == 0LL)) {
		return;;
	};
	_228ce459e_Node _198317_node = _22a4a2442_parse_node(_self_, _197836_st);;
	if (((_198317_node._field_data == nullptr) || _22a494137_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_198317_node);;
}



inline void _22a4a2b29_remove_range(_22a493a93_Parser* _self_, jule::I64 _199031_i, jule::Str _199039_kind, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _199051_tokens, jule::Slice<jule::I64>& _199074_ranges) {
	jule::Str _199113_close = _22a492b08_get_close_kind_of_brace(_199039_kind);;
	for (; (_199031_i >= 0LL); (_199031_i)--) {
		{
			jule::Ptr<_2276b1a1c_Token> _199317_tok = _199051_tokens[_199074_ranges[_199031_i]];;
			if ((_199317_tok.get()._field_kind != _199113_close)) {
				goto _iter_next_22da476d7;
			};
			_199074_ranges=jule::append(_199074_ranges.slice(0LL,_199031_i),_199074_ranges.slice((_199031_i + 1LL)));
			goto _iter_end_22da476d7;
		}
	_iter_next_22da476d7:;
	}
	_iter_end_22da476d7:;;
}



inline void _22a4a3014_push_wrong_order_close_err(_22a493a93_Parser* _self_, jule::Ptr<_2276b1a1c_Token>& _200246_t, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _200258_tokens, jule::Slice<jule::I64>& _200277_ranges) {
	{
		auto &_match_expr{ _200258_tokens[_200277_ranges[(_200277_ranges.len() - 1LL)]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_22da4983d:;
			{
				_22a494500_push_err(&(*_self_), _200246_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_22da498b5:;
			{
				_22a494500_push_err(&(*_self_), _200246_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_22da4993c:;
			{
				_22a494500_push_err(&(*_self_), _200246_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_22da4970b:;
	};
}



inline void _22a4a3487_push_range_close(_22a493a93_Parser* _self_, jule::Ptr<_2276b1a1c_Token> _201335_t, jule::Str _201346_left, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _201358_tokens, jule::Slice<jule::I64>& _201381_ranges) {
	jule::I64 _201413_n = _201381_ranges.len();;
	if ((_201413_n == 0LL)) {
		{
			auto &_match_expr{ _201335_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_22da4c4cd:;
				{
					_22a494500_push_err(&(*_self_), _201335_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_22da4c544:;
				{
					_22a494500_push_err(&(*_self_), _201335_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_22da4c5bb:;
				{
					_22a494500_push_err(&(*_self_), _201335_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_22da4c27a:;
		};
		return;;
	} else if ((_201358_tokens[_201381_ranges[(_201413_n - 1LL)]].get()._field_kind != _201346_left)) {
		_22a4a3014_push_wrong_order_close_err(&(*_self_), _201335_t,_201358_tokens,_201381_ranges);
	};
	_22a4a2b29_remove_range(&(*_self_), static_cast<jule::I64>((_201413_n - 1LL)),_201335_t.get()._field_kind,_201358_tokens,_201381_ranges);
}



inline void _22a4a370c_check_ranges(_22a493a93_Parser* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _203132_tokens) {
	jule::Slice<jule::I64> _203217_ranges = nullptr;;
	{
		auto &expr = _203132_tokens;
		auto it = expr.begin();
		_iter_begin_22da507cd:;
		if (it != expr.end()) {
			jule::I64 _203413_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> &_203416_token = *it;
			{
				if ((_203416_token.get()._field_id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_22da507cd;
				};
				{
					auto &_match_expr{ _203416_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_22da51a65:;
						{
							_203217_ranges = jule::alloc_for_append(_203217_ranges,1);_203217_ranges.__push(_203413_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_22da51b0e:;
						{
							_22a4a3487_push_range_close(&(*_self_), _203416_token,jule::Str("(", 1),_203132_tokens,_203217_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_22da51b75:;
						{
							_22a4a3487_push_range_close(&(*_self_), _203416_token,jule::Str("{", 1),_203132_tokens,_203217_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_22da51bdb:;
						{
							_22a4a3487_push_range_close(&(*_self_), _203416_token,jule::Str("[", 1),_203132_tokens,_203217_ranges);
						}
					}
					_match_end_22da515e2:;
				};
			}
			_iter_next_22da507cd:;
			++it;
			_203413_i++;
			goto _iter_begin_22da507cd;
		}
		_iter_end_22da507cd:;
	};
	{
		auto &expr = _203217_ranges;
		auto it = expr.begin();
		_iter_begin_22da53517:;
		if (it != expr.end()) {
			jule::I64 _205216_i = *it;
			{
				jule::Ptr<_2276b1a1c_Token> _205317_token = _203132_tokens[_205216_i];;
				{
					auto &_match_expr{ _205317_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_22da54381:;
						{
							_22a494500_push_err(&(*_self_), _205317_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_22da54408:;
						{
							_22a494500_push_err(&(*_self_), _205317_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_22da54480:;
						{
							_22a494500_push_err(&(*_self_), _205317_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_22da542b5:;
				};
			}
			_iter_next_22da53517:;
			++it;
			goto _iter_begin_22da53517;
		}
		_iter_end_22da53517:;
	};
}



inline void _22a4a3982_parse(jule::Ptr<_22a493a93_Parser> _self_, jule::Ptr<_2276b6da7_File>& _206530_f) {
	_self_.get()._field_ast=jule::new_ptr<_228ce3900_Ast>(_228ce3900_Ast{._field_file=_206530_f, });
	_22a4a370c_check_ranges(_self_.ptr(), _206530_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_22a4774d3_stmt>> _207517_stmts = _22a477879_split_stmts(_206530_f.get()._field_tokens);;
	jule::I64 _207817_i = 0LL;;
	for (; (_207817_i < _207517_stmts.len()); (_207817_i)++) {
		{
			jule::Ptr<_22a4774d3_stmt> _208021_stmt = _207517_stmts[_207817_i];;
			if ((_208021_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_208021_stmt.get()._field_tokens[0LL].get()._field_id != static_cast<jule::U64>(39LLU))) {
				goto _iter_end_22da5752c;
			};
			if ((!(_24094a6c7_is_top_directive(_208021_stmt.get()._field_tokens[1LL].get()._field_kind)))) {
				goto _iter_end_22da5752c;
			};
			_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_22a494e3a_build_directive(_self_.ptr(), _208021_stmt.get()._field_tokens));;
		}
	_iter_next_22da5752c:;
	}
	_iter_end_22da5752c:;;
	_self_.get()._field_errors=nullptr;
	for (; (_207817_i < _207517_stmts.len()); (_207817_i)++) {
		{
			jule::Ptr<_22a4774d3_stmt> _209721_stmt = _207517_stmts[_207817_i];;
			_22a4a26b7_append_node(_self_, _209721_stmt.get()._field_tokens);
			if (_22a494137_stopped(_self_.ptr())) {
				goto _iter_end_22da5a112;
			};
		}
	_iter_next_22da5a112:;
	}
	_iter_end_22da5a112:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_22a494500_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22a493a93_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _22a4a5511_push_err(_22a4a4e6c_TypeBuilder* _self_, jule::Ptr<_2276b1a1c_Token> _7327_token, jule::Str _7342_fmt) {
	if ((*_self_)._field_err) {
		_22a494500_push_err((*_self_)._field_p.ptr(), _7327_token,_7342_fmt,jule::Slice<jule::Any>());
	};
}



inline void _22a4a5830_push_suggestion(_22a4a4e6c_TypeBuilder* _self_, jule::Str _8034_fmt, jule::Slice<jule::Any> _8047_args) {
	if ((*_self_)._field_err) {
		_22a49481e_push_suggestion((*_self_)._field_p.ptr(), _8034_fmt,jule::Any(_8047_args));
	};
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a5a94_build_prim(_22a4a4e6c_TypeBuilder* _self_) {
	jule::Ptr<_228d28193_TypeDecl> _8717_t = _22a4a4620_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _8717_t;
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a5d08_build_namespace(_22a4a4e6c_TypeBuilder* _self_) {
	jule::Ptr<_228d28193_TypeDecl> _9317_t = jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_228d29260_NamespaceTypeDecl> _9717_nst = jule::new_ptr<_228d29260_NamespaceTypeDecl>();;
	jule::I64 _9817_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_2276b1a1c_Token> _10021_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_9817_n & 1LL) == 0LL)) {
				if ((_10021_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
					_22a4a5511_push_err(&(*_self_), _10021_token,jule::Str("invalid syntax", 14));
					_22a4a5830_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_9717_nst.get()._field_idents = jule::alloc_for_append(_9717_nst.get()._field_idents,1);_9717_nst.get()._field_idents.__push(_10021_token);;
			} else if ((_10021_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
				goto _iter_end_22da64e74;
			};
			(_9817_n)++;
		}
	_iter_next_22da64e74:;
	}
	_iter_end_22da64e74:;;
	_9717_nst.get()._field_idents=_9717_nst.get()._field_idents.slice(0LL,(_9717_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_9717_nst.get()._field_kind=_22a4a6545_build_ident(&(*_self_));
	_9317_t.get()._field_kind=static_cast<jule::Any>(_9717_nst);
	return _9317_t;
}



inline jule::Slice<jule::Ptr<_228d28193_TypeDecl>> _22a4a606c_build_generics(_22a4a4e6c_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_2276b1a1c_Token> _12613_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_12613_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12613_token.get()._field_kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _13117_parts = _22a4a62d1_ident_generics(&(*_self_));;
	if ((_13117_parts.len() == 0LL)) {
		_22a4a5511_push_err(&(*_self_), _12613_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_228d28193_TypeDecl>> _13717_types = jule::Slice<jule::Ptr<_228d28193_TypeDecl>>::alloc(0LL,_13117_parts.len());;
	{
		auto &expr = _13117_parts;
		auto it = expr.begin();
		_iter_begin_22da72921:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _13821_part = *it;
			{
				jule::I64 _13921_j = 0LL;;
				jule::Ptr<_228d28193_TypeDecl> _14022_t;;
				std::tie(_14022_t,std::ignore) = _22a495e19_build_type((*_self_)._field_p, _13821_part,(&(_13921_j)),true);
				if ((_13921_j < _13821_part.len())) {
					_22a4a5511_push_err(&(*_self_), _13821_part[_13921_j],jule::Str("invalid syntax", 14));
				};
				_13717_types = jule::alloc_for_append(_13717_types,1);_13717_types.__push(_14022_t);;
			}
			_iter_next_22da72921:;
			++it;
			goto _iter_begin_22da72921;
		}
		_iter_end_22da72921:;
	};
	return _13717_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a4a62d1_ident_generics(_22a4a4e6c_TypeBuilder* _self_) {
	jule::I64 _15013_first = (*((*_self_)._field_i));;
	jule::I64 _15117_range_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_2276b1a1c_Token> _15317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15317_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15317_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_22da765e5:;
						{
							(_15117_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_22da7666c:;
						{
							(_15117_range_n)--;
						}
					}
					_match_end_22da763b4:;
				};
			};
			if ((_15117_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_22da7525e;
			};
		}
	_iter_next_22da7525e:;
	}
	_iter_end_22da7525e:;;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _16717_tokens = (*_self_)._field_tokens.slice((_15013_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _16818_parts;;
	jule::Slice<_2409487a2_Log> _16825_errors;;
	std::tie(_16818_parts,_16825_errors) = _22a49283e_parts(_16717_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_16825_errors);
	};
	return _16818_parts;
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a6545_build_ident(_22a4a4e6c_TypeBuilder* _self_) {
	jule::Bool _17617_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_17617_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return _22a4a5d08_build_namespace(&(*_self_));
	};
	jule::Ptr<_2276b1a1c_Token> _18017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_228d28759_IdentTypeDecl> _18117_it = jule::new_ptr<_228d28759_IdentTypeDecl>(_228d28759_IdentTypeDecl{._field_token=_18017_token, ._field_ident=_18017_token.get()._field_kind, ._field_cpp_linked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_228d28193_TypeDecl> _18717_itd = jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_18017_token, ._field_kind=static_cast<jule::Any>(_18117_it)});;
	if (((!(_17617_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_18117_it.get()._field_generics=_22a4a606c_build_generics(&(*_self_));
		return _18717_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_22a4a5511_push_err(&(*_self_), _18017_token,jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U64>(2LLU))) {
		_22a4a5511_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	jule::Ptr<_228d28da8_SubIdentTypeDecl> _20417_sit = jule::new_ptr<_228d28da8_SubIdentTypeDecl>();;
	_20417_sit.get()._field_idents = jule::alloc_for_append(_20417_sit.get()._field_idents,1);_20417_sit.get()._field_idents.__push(_18117_it);;
	jule::Ptr<_228d28193_TypeDecl> _20617_ident = _22a4a6545_build_ident(&(*_self_));;
	{
		auto &_match_expr{ _20617_ident.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_228d28759_IdentTypeDecl>>()) {
			_case_begin_22da8180e:;
			{
				_20417_sit.get()._field_idents = jule::alloc_for_append(_20417_sit.get()._field_idents,1);_20417_sit.get()._field_idents.__push(_20617_ident.get()._field_kind.operator jule::Ptr<_228d28759_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d28da8_SubIdentTypeDecl>>()) {
			_case_begin_22da818ca:;
			{
				_20417_sit.get()._field_idents=jule::append(_20417_sit.get()._field_idents,_20617_ident.get()._field_kind.operator jule::Ptr<_228d28da8_SubIdentTypeDecl>().get()._field_idents);
			}
		}
		_match_end_22da817a9:;
	};
	return jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_18017_token, ._field_kind=static_cast<jule::Any>(_20417_sit)});
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a67a9_build_cpp_link(_22a4a4e6c_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_22a4a5511_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_228d28193_TypeDecl> _22517_t = _22a4a6545_build_ident(&(*_self_));;
	_22517_t.get()._field_kind.operator jule::Ptr<_228d28759_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _22517_t;
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a6a1d_build_fn(_22a4a4e6c_TypeBuilder* _self_) {
	jule::Ptr<_2276b1a1c_Token> _23117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_228d39ea7_FnDecl> _23217_f = _22a499abb_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23217_f == nullptr)) {
		return nullptr;
	};
	if ((!(_228d3a309_is_anon(_23217_f.ptr())))) {
		_22a4a5511_push_err(&(*_self_), _23217_f.get()._field_token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_23117_token, ._field_kind=static_cast<jule::Any>(_23217_f)});
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a6c82_build_ptr(_22a4a4e6c_TypeBuilder* _self_) {
	jule::Ptr<_2276b1a1c_Token> _24617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_22a4a5511_push_err(&(*_self_), _24617_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U64>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_24617_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d2a01e_PtrTypeDecl>(_228d2a01e_PtrTypeDecl{._field_elem=nullptr}))});
	};
	jule::Ptr<_228d28193_TypeDecl> _26317_elem = _22a4a80b3_step(&(*_self_));;
	if ((_26317_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_24617_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d2a01e_PtrTypeDecl>(_228d2a01e_PtrTypeDecl{._field_elem=_26317_elem}))});
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a6ee6_build_sptr(_22a4a4e6c_TypeBuilder* _self_) {
	jule::Ptr<_2276b1a1c_Token> _27717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_22a4a5511_push_err(&(*_self_), _27717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_228d28193_TypeDecl> _28417_elem = _22a4a80b3_step(&(*_self_));;
	if ((_28417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_27717_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d2954b_SptrTypeDecl>(_228d2954b_SptrTypeDecl{._field_elem=_28417_elem}))});
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a725a_build_op(_22a4a4e6c_TypeBuilder* _self_) {
	jule::Ptr<_2276b1a1c_Token> _29817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _29817_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_22da8ee16:;
			{
				return _22a4a6c82_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_22da8ee7c:;
			{
				return _22a4a6ee6_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_22da8eee3:;
			{
				return jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d2954b_SptrTypeDecl>(_228d2954b_SptrTypeDecl{._field_elem=_22a4a6ee6_build_sptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_22da8ed5b:;
			{
				_22a4a5511_push_err(&(*_self_), _29817_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_22da8ecb2:;
	};
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a74be_build_slc(_22a4a4e6c_TypeBuilder* _self_) {
	jule::Ptr<_2276b1a1c_Token> _31717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_228d28193_TypeDecl> _31917_elem = _22a4a80b3_step(&(*_self_));;
	if ((_31917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_31717_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d29947_SlcTypeDecl>(_228d29947_SlcTypeDecl{._field_elem=_31917_elem}))});
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a7733_build_arr(_22a4a4e6c_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_22a4a5511_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _34013_expr_delta = (*((*_self_)._field_i));;
	jule::Ptr<_228d28193_TypeDecl> _34217_elem = _22a4a80b3_step(&(*_self_));;
	if ((_34217_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_228d2a6a1_ArrTypeDecl> _34717_arrt = jule::new_ptr<_228d2a6a1_ArrTypeDecl>(_228d2a6a1_ArrTypeDecl{._field_elem=_34217_elem, });;
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _35117_expr_tokens = (*_self_)._field_tokens.slice(0LL,_34013_expr_delta);;
	std::tie(std::ignore,_35117_expr_tokens) = _22a491ee2_range_last(_35117_expr_tokens);
	_35117_expr_tokens=_35117_expr_tokens.slice(1LL,(_35117_expr_tokens.len() - 1LL));
	jule::Ptr<_2276b1a1c_Token> _35417_token = _35117_expr_tokens[0LL];;
	if ((((_35117_expr_tokens.len() == 1LL) && (_35417_token.get()._field_id == static_cast<jule::U64>(7LLU))) && (_35417_token.get()._field_kind == jule::Str("...", 3)))) {
	} else {
		_34717_arrt.get()._field_size=_22a494b2c_build_expr((*_self_)._field_p, _35117_expr_tokens);
	};
	return jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_35417_token, ._field_kind=static_cast<jule::Any>(_34717_arrt)});
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a7ada_build_map(_22a4a4e6c_TypeBuilder* _self_, jule::I64 _36735_start, jule::I64 _36747_delim) {
	jule::Ptr<_2276b1a1c_Token> _36817_delim_token = (*_self_)._field_tokens[_36747_delim];;
	if (((_36747_delim == 0LL) || ((_36747_delim + 1LL) >= (*_self_)._field_tokens.len()))) {
		_22a4a5511_push_err(&(*_self_), _36817_delim_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _37517_key_tokens = (*_self_)._field_tokens.slice((_36735_start + 1LL),(_36747_delim - 1LL));;
	if ((_37517_key_tokens.len() == 0LL)) {
		_22a4a5511_push_err(&(*_self_), _36817_delim_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_228d2adee_MapTypeDecl> _38117_mapt = jule::new_ptr<_228d2adee_MapTypeDecl>();;
	jule::I64 _38317_j = 0LL;;
	jule::Ptr<_228d28193_TypeDecl> _38418_keyt;;
	jule::Bool _38428_ok;;
	std::tie(_38418_keyt,_38428_ok) = _22a495e19_build_type((*_self_)._field_p, _37517_key_tokens,(&(_38317_j)),(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	} else if ((_38317_j < _37517_key_tokens.len())) {
		_22a4a5511_push_err(&(*_self_), _37517_key_tokens[_38317_j],jule::Str("invalid syntax", 14));
	};
	_38117_mapt.get()._field_key=_38418_keyt;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_228d28193_TypeDecl> _39318_valt;;
	std::tie(_39318_valt,_38428_ok) = _22a495e19_build_type((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	};
	_38117_mapt.get()._field_val=_39318_valt;
	return jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_36817_delim_token, ._field_kind=static_cast<jule::Any>(_38117_mapt)});
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a7d4e_build_enumerable(_22a4a4e6c_TypeBuilder* _self_) {
	jule::Ptr<_2276b1a1c_Token> _40517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40517_token.get()._field_id != static_cast<jule::U64>(3LLU))) || (_40517_token.get()._field_kind != jule::Str("[", 1)))) {
		_22a4a5511_push_err(&(*_self_), _40517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40517_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40517_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_40517_token.get()._field_kind == jule::Str("]", 1)))) {
		return _22a4a74be_build_slc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::I64 _41913_i = (*((*_self_)._field_i));;
	jule::I64 _42017_delim = _22a4a4961_map_colon((*_self_)._field_tokens,(*((*_self_)._field_i)));;
	((*((*_self_)._field_i)))++;
	if ((_42017_delim == -1LL)) {
		return _22a4a7733_build_arr(&(*_self_));
	};
	return _22a4a7ada_build_map(&(*_self_), _41913_i,_42017_delim);
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a80b3_step(_22a4a4e6c_TypeBuilder* _self_) {
	jule::Ptr<_2276b1a1c_Token> _42913_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _42913_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_22daa626d:;
			{
				return _22a4a5a94_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_22daa615d:;
			{
				return _22a4a6545_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_22daa61c4:;
			{
				return _22a4a67a9_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_22daa558b:;
			{
				return _22a4a6a1d_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_22daa5602:;
			{
				return _22a4a725a_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_22daa5668:;
			{
				return _22a4a7d4e_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_22daa5525:;
			{
				((*((*_self_)._field_i)))++;
				_22a4a5511_push_err(&(*_self_), _42913_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_22daa539e:;
	};
}



inline std::tuple<jule::Ptr<_228d28193_TypeDecl>,jule::Bool> _22a4a8327_build(_22a4a4e6c_TypeBuilder* _self_) {
	jule::Bool _45244_ok = jule::Bool();
	jule::Ptr<_228d28193_TypeDecl> _45317_root = _22a4a80b3_step(&(*_self_));;
	if ((_45317_root == nullptr)) {
		_45244_ok = false;
		return std::make_tuple(_22a4a43ab_build_void_type(),_45244_ok);
	};
	_45244_ok = true;
	return std::make_tuple(_45317_root,_45244_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _22a4a4e6c_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _229cdd256_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _229cdeb09_push_err(_229cde5a9_DirectiveEval* _self_, jule::Ptr<_2276b1a1c_Token> _2127_t, jule::Str _2138_fmt, jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_2409487a2_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_2127_t.get()._field_row, ._field_column=_2127_t.get()._field_column, ._field_path=_2127_t.get()._field_file.get()._field_path, ._field_text=_240948be2_logf(_2138_fmt,jule::Any(_2151_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _229cdeeb1_split_operans(_229cde5a9_DirectiveEval* _self_, jule::Str _3332_op, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_range_n = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3352_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_2276b1a1c_Token> _4017_b = _3352_tokens[_3617_i];;
			if ((_4017_b.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_22dacc706:;
						{
							(_3717_range_n)++;
							goto _iter_next_22dacb606;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_22dacc76c:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_22dacc4e7:;
				};
			};
			if (((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_22dacb606;
			};
			if ((_4017_b.get()._field_kind == _3332_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_22dacb606:;
	}
	_iter_end_22dacb606:;;
	if ((_3817_last < _3352_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));;
	} else {
		_229cdeb09_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _229ce02be_eval_directive_ident(_229cde5a9_DirectiveEval* _self_, jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_22dad0c7b:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7335_ident)) {
					return true;
				};
			}
			_iter_next_22dad0c7b:;
			++it;
			goto _iter_begin_22dad0c7b;
		}
		_iter_end_22dad0c7b:;
	};
	return false;
}



inline jule::Bool _229ce05cc_eval_directive_part(_229cde5a9_DirectiveEval* _self_, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _8742_part) {
	jule::Bool _8813_logical_not = ((_8742_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1)));;
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	};
	if ((_8742_part.len() > 1LL)) {
		_229cdeb09_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _229ce02be_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);;
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _229ce0841_eval(_229cde5a9_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_229cdeb09_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _11317_logical_or_parts = _229cdeeb1_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);;
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_22dad6ea2:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _12021_logical_and_parts = _229cdeeb1_split_operans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_22dad838d:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_2276b1a1c_Token>> _12525_and_part = *it;
						{
							jule::Ptr<_2276b1a1c_Token> _12621_first = _12525_and_part[0LL];;
							if (((_12621_first.get()._field_id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1)))) {
								jule::Ptr<_2276b1a1c_Token> _12825_end = _12525_and_part[(_12525_and_part.len() - 1LL)];;
								if (((_12825_end.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1)))) {
									_229cdeb09_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_and_part=_12525_and_part.slice(1LL,(_12525_and_part.len() - 1LL));
							};
							_11921_and=(_11921_and && _229ce05cc_eval_directive_part(&(*_self_), _12525_and_part));
						}
						_iter_next_22dad838d:;
						++it;
						goto _iter_begin_22dad838d;
					}
					_iter_end_22dad838d:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_22dad6ea2:;
			++it;
			goto _iter_begin_22dad6ea2;
		}
		_iter_end_22dad6ea2:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _229cde5a9_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_229dd6cbc_JuleImporter> static__229dea781_new(_229cdd256_CompileInfo _5823_info) {
	jule::Ptr<_229dd6cbc_JuleImporter> _5917_imp = jule::new_ptr<_229dd6cbc_JuleImporter>(_229dd6cbc_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_2273c7c61_PATH_STDLIB}), });;
	_229cdda70_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_2299d5646_ImportInfo>> _229e4081a_all_packages(_229dd6cbc_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _229e509b2_set_mod_path(_229dd6cbc_JuleImporter* _self_, jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _229e5abba_get_mod_path(_229dd6cbc_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _229e80bbd_mod_by_id(_229dd6cbc_JuleImporter* _self_, jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_2299d5646_ImportInfo> _22a03c4e9_get_import(_229dd6cbc_JuleImporter* _self_, jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_22dae083a:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_path == _8733_path)) {
					return _8821_p;
				};
			}
			_iter_next_22dae083a:;
			++it;
			goto _iter_begin_22dae083a;
		}
		_iter_end_22dae083a:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_228ce3900_Ast>>,jule::Slice<_2409487a2_Log>> _22a0442d1_import_package(_229dd6cbc_JuleImporter* _self_, jule::Str _9637_path, jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_23e89737d_DirEntry>> _9717_dirents = ({
		auto except = static__22738b8d4_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_2409487a2_Log>::make({_229dd147b_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
		} jule::Slice<jule::Ptr<_23e89737d_DirEntry>>();});
	});;
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _229cee4cb_find_module_file_deep(_9637_path);;
		if ((_10217_new_mod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_2409487a2_Log> _10525_errs = _229cee762_check_module_file((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_228ce3900_Ast>> _11217_asts = jule::Slice<jule::Ptr<_228ce3900_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_22dae4a81:;
		if (it != expr.end()) {
			jule::Ptr<_23e89737d_DirEntry> _11316_dirent = *it;
			{
				if ((_23e7eb755_is_dir(_11316_dirent.get()._field_stat.ptr()) || (!(_227352092_has_suffix(_11316_dirent.get()._field_name,jule::Str(".jule", 5)))))) {
					goto _iter_next_22dae4a81;
				};
				jule::Str _11917__path = _227388947_join(jule::Slice<jule::Str>::make({_9637_path,_11316_dirent.get()._field_name}));;
				jule::Ptr<_2276b6da7_File> _12021_file = _2276b83d6_new_file_set(_11917__path);;
				_2276b7539_fill(_12021_file.ptr(), _229daee93_read_buff(_12021_file.get()._field_path));
				jule::Slice<_2409487a2_Log> _12221_errors = _2276c3d4d_lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_22a422945_FileInfo> _12721_finfo = _22a4295ea_parse_file(_12021_file);;
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				};
				if ((!(_229cdc365_is_pass_file_annotation(_11316_dirent.get()._field_name)))) {
					goto _iter_next_22dae4a81;
				};
				jule::Bool _13718_r;;
				jule::Slice<_2409487a2_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _22a063e27_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_22dae4a81;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);;
			}
			_iter_next_22dae4a81:;
			++it;
			goto _iter_begin_22dae4a81;
		}
		_iter_end_22dae4a81:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _22a052d6c_imported(_229dd6cbc_JuleImporter* _self_, jule::Ptr<_2299d5646_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_22daea614:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_15516_p.get()._field_link_path == _15335_imp.get()._field_link_path))) {
					return;;
				};
			}
			_iter_next_22daea614:;
			++it;
			goto _iter_begin_22daea614;
		}
		_iter_end_22daea614:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_22daebeea:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_mod_id=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_22daebeea:;
				++it;
				_16217_i++;
				goto _iter_begin_22daebeea;
			}
			_iter_end_22daebeea:;
		};
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_2409487a2_Log>> _22a063e27_is_pass_build_directives(_229dd6cbc_JuleImporter* _self_, jule::Ptr<_228ce3900_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_22db00273:;
		if (it != expr.end()) {
			jule::Ptr<_228ce499a_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_22db00273;
				};
				_229cde5a9_DirectiveEval _18421_de = _229cde5a9_DirectiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _229ce0841_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_22db00273:;
			++it;
			goto _iter_begin_22db00273;
		}
		_iter_end_22db00273:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _229dd6cbc_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _229c7d8bc_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22db22592_is_common_ordered(jule::Slice<jule::Ptr<_228d188c0_Struct>>& _1837_s, jule::Ptr<_228d188c0_Struct> _1846_t) {
	jule::Ptr<_228d188c0_Struct>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_228d188c0_Struct>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_22db2552e:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_22db2552e;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_22db2552e:;
			++it;
			goto _iter_begin_22db2552e;
		}
		_iter_end_22db2552e:;
	};
	return false;
}

inline jule::Bool _22db2a952_is_common_ordered(jule::Slice<jule::Ptr<_229a0a4a1_Var>>& _1837_s, jule::Ptr<_229a0a4a1_Var> _1846_t) {
	jule::Ptr<_229a0a4a1_Var>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_229a0a4a1_Var>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_22db2d89a:;
		if (it != expr.end()) {
			jule::Ptr<_229a0a4a1_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_22db2d89a;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_22db2d89a:;
			++it;
			goto _iter_begin_22db2d89a;
		}
		_iter_end_22db2d89a:;
	};
	return false;
}



inline void _22db1d604_order_common(jule::Slice<jule::Ptr<_228d188c0_Struct>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_22db1e935:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_228d188c0_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_22db1e935:;
			++it;
			_4114_j++;
			goto _iter_begin_22db1e935;
		}
		_iter_end_22db1e935:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_22db22592_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_22db21ea9:;
			}
			_iter_end_22db21ea9:;;
		}
	_iter_next_22db1e8ad:;
	}
	_iter_end_22db1e8ad:;;
}

inline void _22db1de95_order_common(jule::Slice<jule::Ptr<_229a0a4a1_Var>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_22db27ce5:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_229a0a4a1_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_22db27ce5:;
			++it;
			_4114_j++;
			goto _iter_begin_22db27ce5;
		}
		_iter_end_22db27ce5:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_22db2a952_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_22db2a369:;
			}
			_iter_end_22db2a369:;;
		}
	_iter_next_22db27c6d:;
	}
	_iter_end_22db27c6d:;;
}



inline void static__22a26e880_order_structures(jule::Slice<jule::Ptr<_228d188c0_Struct>>& _6141_structs) {
	_22db1d604_order_common(_6141_structs);
}



inline void static__22a28051c_order_vars(jule::Slice<jule::Ptr<_229a0a4a1_Var>>& _6735_vars) {
	_22db1de95_order_common(_6735_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _22a424eec_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22a56c4a7_LiveTable _Src) {
	_Stream << "LiveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _22a59e550_optimize_child(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299b6c10_Scope>& _3939_s) {
	jule::Ptr<_22a59e077_ScopeDeadCode> _4017_sdc = jule::new_ptr<_22a59e077_ScopeDeadCode>(_22a59e077_ScopeDeadCode{._field_parent=_self_, ._field_s=_3939_s, ._field_stmts=(&(_3939_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_22a5a1b90_optimize_stmts(_4017_sdc);
	};
}



inline void _22a59e7e7_optimize_body_child_exceptional(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299b6c10_Scope>& _5056_s) {
	jule::Ptr<_22a59e077_ScopeDeadCode> _5117_sdc = jule::new_ptr<_22a59e077_ScopeDeadCode>(_22a59e077_ScopeDeadCode{._field_s=_5056_s, ._field_stmts=(&(_5056_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_22a5a1b90_optimize_stmts(_5117_sdc);
	};
}



inline void _22a59ea7d_optimize_body_child(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299b6c10_Scope>& _6144_s) {
	jule::Ptr<_22a59e077_ScopeDeadCode> _6217_sdc = jule::new_ptr<_22a59e077_ScopeDeadCode>(_22a59e077_ScopeDeadCode{._field_s=_6144_s, ._field_stmts=(&(_6144_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_22a5a1b90_optimize_stmts(_6217_sdc);
	};
}



inline void _22a59ed03_optimize_expr_model(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Any& _7144_model) {
	_22a5a3015_ExprDeadCode _7213_edc = static__22a5a360e_new(_self_);;
	_22a5a8aa9_optimize(&_7213_edc, _7144_model);
}



inline void _22a59eece_eliminate_followed(_22a59e077_ScopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_22a59e077_ScopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_22db9d73e:;
	}
	_iter_end_22db9d73e:;;
}



inline void _22a5a0254_push_goto(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299b96b3_GotoSt> _9233_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < _self_.get()._field_labels.get().len()); (_9317_i)++) {
		{
			if ((_9233_gt.get()._field_ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_ident)) {
				return;;
			};
		}
	_iter_next_22dba116a:;
	}
	_iter_end_22dba116a:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_2299b96b3_GotoSt>>::make({_9233_gt}));
}



inline void _22a5a04c9_push_label(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299b93c7_Label> _10234_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_10234_l.get()._field_ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_22dba2dd6;
			};
			(_10317_i)++;
		}
	_iter_next_22dba2dd6:;
	}
	_iter_end_22dba2dd6:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_2299b93c7_Label>>::make({_10234_l}));
}



inline void _22a5a074e_optimize_range_iter(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299b8838_RangeIter> _11543_it) {
	_22a59ed03_optimize_expr_model(_self_, _11543_it.get()._field_expr.get()._field_model);
	_22a59ea7d_optimize_body_child(_self_, _11543_it.get()._field_scope);
}



inline void _22a5a09c4_optimize_while_iter(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299b7e53_WhileIter> _12043_it) {
	_22a59ed03_optimize_expr_model(_self_, _12043_it.get()._field_expr);
	if ((_12043_it.get()._field_next != nullptr)) {
		_22a5a19b4_optimize_stmt(_self_, _12043_it.get()._field_next);
	};
	_22a59ea7d_optimize_body_child(_self_, _12043_it.get()._field_scope);
}



inline void _22a5a0c49_optimize_inf_iter(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299b79d0_InfIter> _12841_it) {
	_22a59ea7d_optimize_body_child(_self_, _12841_it.get()._field_scope);
}



inline void _22a5a0ebe_optimize_conditional(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299b76e4_Conditional> _13244_c) {
	{
		auto &expr = _13244_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_22dba8936:;
		if (it != expr.end()) {
			jule::Ptr<_2299b700c_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_22a59ed03_optimize_expr_model(_self_, _13321_case.get()._field_expr);
					_22a59ea7d_optimize_body_child(_self_, _13321_case.get()._field_scope);
				};
			}
			_iter_next_22dba8936:;
			++it;
			goto _iter_begin_22dba8936;
		}
		_iter_end_22dba8936:;
	};
	if ((_13244_c.get()._field_default != nullptr)) {
		if ((_13244_c.get()._field_elifs.len() == 0LL)) {
			_22a59e550_optimize_child(_self_, _13244_c.get()._field_default.get()._field_scope);
		} else {
			_22a59ea7d_optimize_body_child(_self_, _13244_c.get()._field_default.get()._field_scope);
		};
	};
}



inline void _22a5a1244_optimize_match(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299ba8d4_Match> _15038_m) {
	{
		auto &expr = _15038_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_22dbab593:;
		if (it != expr.end()) {
			jule::Ptr<_2299bb42e_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_22dbabe12:;
					if (it != expr.end()) {
						jule::Ptr<_229a527d4_Data> _15225_expr = *it;
						{
							_22a59ed03_optimize_expr_model(_self_, _15225_expr.get()._field_model);
						}
						_iter_next_22dbabe12:;
						++it;
						goto _iter_begin_22dbabe12;
					}
					_iter_end_22dbabe12:;
				};
				_22a59ea7d_optimize_body_child(_self_, _15121_case.get()._field_scope);
			}
			_iter_next_22dbab593:;
			++it;
			goto _iter_begin_22dbab593;
		}
		_iter_end_22dbab593:;
	};
	if ((_15038_m.get()._field_default != nullptr)) {
		if ((_15038_m.get()._field_cases.len() == 0LL)) {
			_22a59e550_optimize_child(_self_, _15038_m.get()._field_default.get()._field_scope);
		} else {
			_22a59ea7d_optimize_body_child(_self_, _15038_m.get()._field_default.get()._field_scope);
		};
	};
}



inline void _22a5a14b9_optimize_assign(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299b9edd_Assign> _16839_assign) {
	_22a59ed03_optimize_expr_model(_self_, _16839_assign.get()._field_l.get()._field_model);
	_22a59ed03_optimize_expr_model(_self_, _16839_assign.get()._field_r.get()._field_model);
}



inline void _22a5a173e_optimize_multi_assign(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Ptr<_2299ba395_MultiAssign> _17345_assign) {
	{
		auto &expr = _17345_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_22dbb03aa:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_22a59ed03_optimize_expr_model(_self_, _17421_l);
				};
			}
			_iter_next_22dbb03aa:;
			++it;
			goto _iter_begin_22dbb03aa;
		}
		_iter_end_22dbb03aa:;
	};
	_22a59ed03_optimize_expr_model(_self_, _17345_assign.get()._field_r);
}



inline void _22a5a19b4_optimize_stmt(jule::Ptr<_22a59e077_ScopeDeadCode> _self_, jule::Any _18237_st) {
	{
		auto &_match_expr{ _18237_st };
		
		if (_match_expr.type_is<jule::Ptr<_2299b6c10_Scope>>()) {
			_case_begin_22dbb19e9:;
			{
				jule::Ptr<_2299b6c10_Scope> _18521_scope = _18237_st.operator jule::Ptr<_2299b6c10_Scope>();;
				if (_18521_scope.get()._field_deferred) {
					_22a5a1e7b_eliminate_dead_code_of_scope(_18521_scope);
				} else {
					_22a59e550_optimize_child(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b8838_RangeIter>>()) {
			_case_begin_22dbb1b70:;
			{
				_22a5a074e_optimize_range_iter(_self_, _18237_st.operator jule::Ptr<_2299b8838_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b7e53_WhileIter>>()) {
			_case_begin_22dbb1bd6:;
			{
				_22a5a09c4_optimize_while_iter(_self_, _18237_st.operator jule::Ptr<_2299b7e53_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b79d0_InfIter>>()) {
			_case_begin_22dbb1c4c:;
			{
				_22a5a0c49_optimize_inf_iter(_self_, _18237_st.operator jule::Ptr<_2299b79d0_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b76e4_Conditional>>()) {
			_case_begin_22dbb1cc4:;
			{
				_22a5a0ebe_optimize_conditional(_self_, _18237_st.operator jule::Ptr<_2299b76e4_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299ba8d4_Match>>()) {
			_case_begin_22dbb1d4b:;
			{
				_22a5a1244_optimize_match(_self_, _18237_st.operator jule::Ptr<_2299ba8d4_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b9edd_Assign>>()) {
			_case_begin_22dbb1dc3:;
			{
				_22a5a14b9_optimize_assign(_self_, _18237_st.operator jule::Ptr<_2299b9edd_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299ba395_MultiAssign>>()) {
			_case_begin_22dbb1e4a:;
			{
				_22a5a173e_optimize_multi_assign(_self_, _18237_st.operator jule::Ptr<_2299ba395_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a527d4_Data>>()) {
			_case_begin_22dbb1ec2:;
			{
				jule::Ptr<_229a527d4_Data> _20621_d = _18237_st.operator jule::Ptr<_229a527d4_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_22dbb1b09;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_228de3824_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>>()) {
						_case_begin_22dbb715e:;
						{
							_22a59eece_eliminate_followed(_self_.ptr());
						}
					}
					else {
						_case_begin_22dbb767b:;
						{
							_22a59ed03_optimize_expr_model(_self_, _20621_d.get()._field_model);
						}
					}
					_match_end_22dbb7626:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299bbe57_RetSt>>()) {
			_case_begin_22dbb2049:;
			{
				_22a59eece_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b96b3_GotoSt>>()) {
			_case_begin_22dbb20c1:;
			{
				_22a5a0254_push_goto(_self_, _18237_st.operator jule::Ptr<_2299b96b3_GotoSt>());
				_22a59eece_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b93c7_Label>>()) {
			_case_begin_22dbb2148:;
			{
				_22a5a04c9_push_label(_self_, _18237_st.operator jule::Ptr<_2299b93c7_Label>());
			}
		}
		_match_end_22dbb1b09:;
	};
}



inline void _22a5a1b90_optimize_stmts(jule::Ptr<_22a59e077_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_22a5a19b4_optimize_stmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_22dbb6d0c:;
	}
	_iter_end_22dbb6d0c:;;
}







std::ostream &operator<<(std::ostream &_Stream, _22a59e077_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _22a5a3015_ExprDeadCode static__22a5a360e_new(jule::Ptr<_22a59e077_ScopeDeadCode>& _4724_s) {
	return _22a5a3015_ExprDeadCode{._field_s=_4724_s};
}



inline void _22a5a3884_binary(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228ddea40_BinopExprModel> _5325_m) {
	_22a5a8aa9_optimize(&(*_self_), _5325_m.get()._field_left.get()._field_model);
	_22a5a8aa9_optimize(&(*_self_), _5325_m.get()._field_right.get()._field_model);
}



inline void _22a5a3b09_unary(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228ddec2c_UnaryExprModel> _5824_m) {
	_22a5a8aa9_optimize(&(*_self_), _5824_m.get()._field_expr.get()._field_model);
}



inline void _22a5a3d7e_structure_lit(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de0106_StructLitExprModel> _6232_m) {
	{
		auto &expr = _6232_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_22dbbcc58:;
		if (it != expr.end()) {
			jule::Ptr<_228ddee19_StructArgExprModel> _6321_arg = *it;
			{
				_22a5a8aa9_optimize(&(*_self_), _6321_arg.get()._field_expr);
			}
			_iter_next_22dbbcc58:;
			++it;
			goto _iter_begin_22dbbcc58;
		}
		_iter_end_22dbbcc58:;
	};
}



inline void _22a5a4104_alloc_structure(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de02e3_AllocStructLitExprModel> _6834_m) {
	_22a5a3d7e_structure_lit(&(*_self_), _6834_m.get()._field_lit);
}



inline void _22a5a4379_casting(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de04d0_CastingExprModel> _7226_m) {
	_22a5a8aa9_optimize(&(*_self_), _7226_m.get()._field_expr);
}



inline void _22a5a45ee_args(_22a5a3015_ExprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_22dbbeed0:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_22a5a8aa9_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_22dbbeed0:;
			++it;
			goto _iter_begin_22dbbeed0;
		}
		_iter_end_22dbbeed0:;
	};
}



inline void _22a5a4874_func_call(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de06bc_FnCallExprModel> _8228_m) {
	_22a5a8aa9_optimize(&(*_self_), _8228_m.get()._field_expr);
	_22a5a45ee_args(&(*_self_), _8228_m.get()._field_args);
	if ((_8228_m.get()._field_except != nullptr)) {
		_22a59e7e7_optimize_body_child_exceptional((*_self_)._field_s, _8228_m.get()._field_except);
	};
}



inline void _22a5a4ae9_slice(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de08a9_SliceExprModel> _9024_m) {
	_22a5a45ee_args(&(*_self_), _9024_m.get()._field_elems);
}



inline void _22a5a4d6e_array(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de1d2d_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_elems.len() == 2LL) && (_9424_m.get()._field_elems[1LL] == nullptr))) {
		_22a5a8aa9_optimize(&(*_self_), _9424_m.get()._field_elems[0LL]);
	};
	_22a5a45ee_args(&(*_self_), _9424_m.get()._field_elems);
}



inline void _22a5a50e4_indexing(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de0a96_IndexingExprModel> _10127_m) {
	_22a5a8aa9_optimize(&(*_self_), _10127_m.get()._field_expr.get()._field_model);
	_22a5a8aa9_optimize(&(*_self_), _10127_m.get()._field_index.get()._field_model);
}



inline void _22a5a5369_anon_func(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de0c83_AnonFnExprModel> _10628_m) {
	_22a5a1e7b_eliminate_dead_code_of_scope(_10628_m.get()._field_func.get()._field_scope);
}



inline void _22a5a55de_map(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de115c_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_22dbc5e1a:;
		if (it != expr.end()) {
			jule::Ptr<_228de0e70_KeyValPairExprModel> _11121_pair = *it;
			{
				_22a5a8aa9_optimize(&(*_self_), _11121_pair.get()._field_key);
				_22a5a8aa9_optimize(&(*_self_), _11121_pair.get()._field_val);
			}
			_iter_next_22dbc5e1a:;
			++it;
			goto _iter_begin_22dbc5e1a;
		}
		_iter_end_22dbc5e1a:;
	};
}



inline void _22a5a5864_slicing(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de1349_SlicingExprModel> _11726_m) {
	_22a5a8aa9_optimize(&(*_self_), _11726_m.get()._field_expr);
	_22a5a8aa9_optimize(&(*_self_), _11726_m.get()._field_left);
	if ((_11726_m.get()._field_right != nullptr)) {
		_22a5a8aa9_optimize(&(*_self_), _11726_m.get()._field_right);
	};
}



inline void _22a5a5ad9_trait_sub(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de1536_TraitSubIdentExprModel> _12528_m) {
	_22a5a8aa9_optimize(&(*_self_), _12528_m.get()._field_expr);
}



inline void _22a5a5d5e_structure_sub(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de1954_StructSubIdentExprModel> _12932_m) {
	_22a5a8aa9_optimize(&(*_self_), _12932_m.get()._field_expr.get()._field_model);
}



inline void _22a5a60d4_common_sub(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de2207_CommonSubIdentExprModel> _13329_m) {
	_22a5a8aa9_optimize(&(*_self_), _13329_m.get()._field_expr);
}



inline void _22a5a6359_tuple(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de23e4_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_22dbd0265:;
		if (it != expr.end()) {
			jule::Ptr<_229a527d4_Data> _13821_d = *it;
			{
				_22a5a8aa9_optimize(&(*_self_), _13821_d.get()._field_model);
			}
			_iter_next_22dbd0265:;
			++it;
			goto _iter_begin_22dbd0265;
		}
		_iter_end_22dbd0265:;
	};
}



inline void _22a5a65ce_new_call(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de2b97_BuiltinNewCallExprModel> _14327_m) {
	if ((_14327_m.get()._field_init != nullptr)) {
		_22a5a8aa9_optimize(&(*_self_), _14327_m.get()._field_init);
	};
}



inline void _22a5a6854_out_call(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de25d1_BuiltinOutCallExprModel> _14927_m) {
	_22a5a8aa9_optimize(&(*_self_), _14927_m.get()._field_expr);
}



inline void _22a5a6ac9_outln_call(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel> _15329_m) {
	_22a5a8aa9_optimize(&(*_self_), _15329_m.get()._field_expr);
}



inline void _22a5a6d4e_panic_call(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de2d84_BuiltinPanicCallExprModel> _15729_m) {
	_22a5a8aa9_optimize(&(*_self_), _15729_m.get()._field_expr);
}



inline void _22a5a70c4_assert_call(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de3071_BuiltinAssertCallExprModel> _16130_m) {
	_22a5a8aa9_optimize(&(*_self_), _16130_m.get()._field_expr);
}



inline void _22a5a7349_error_call(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de3824_BuiltinErrorCallExprModel> _16529_m) {
	_22a5a8aa9_optimize(&(*_self_), _16529_m.get()._field_err);
}



inline void _22a5a75be_make_call(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de325d_BuiltinMakeCallExprModel> _16928_m) {
	if ((_16928_m.get()._field_len != nullptr)) {
		_22a5a8aa9_optimize(&(*_self_), _16928_m.get()._field_len);
	};
	if ((_16928_m.get()._field_cap != nullptr)) {
		_22a5a8aa9_optimize(&(*_self_), _16928_m.get()._field_cap);
	};
}



inline void _22a5a7844_append_call(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de344a_BuiltinAppendCallExprModel> _17830_m) {
	_22a5a8aa9_optimize(&(*_self_), _17830_m.get()._field_dest);
	_22a5a8aa9_optimize(&(*_self_), _17830_m.get()._field_elements);
}



inline void _22a5a7ab9_clone_call(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de29aa_BuiltinCloneCallExprModel> _18329_m) {
	_22a5a8aa9_optimize(&(*_self_), _18329_m.get()._field_expr);
}



inline void _22a5a7d3e_sizeof(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de1723_SizeofExprModel> _18725_m) {
	_22a5a8aa9_optimize(&(*_self_), _18725_m.get()._field_expr);
}



inline void _22a5a80b4_alignof(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de3e84_AlignofExprModel> _19126_m) {
	_22a5a8aa9_optimize(&(*_self_), _19126_m.get()._field_expr);
}



inline void _22a5a8339_integrated_to_str(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de435d_IntegratedToStrExprModel> _19536_m) {
	_22a5a8aa9_optimize(&(*_self_), _19536_m.get()._field_expr);
}



inline void _22a5a85ae_free(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de4737_FreeExprModel> _19923_m) {
	_22a5a8aa9_optimize(&(*_self_), _19923_m.get()._field_expr);
}



inline void _22a5a8834_backend_emit(_22a5a3015_ExprDeadCode* _self_, jule::Ptr<_228de454a_BackendEmitExprModel> _20331_m) {
	_22a5a45ee_args(&(*_self_), _20331_m.get()._field_exprs);
}



inline void _22a5a8aa9_optimize(_22a5a3015_ExprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_228ddea40_BinopExprModel>>()) {
			_case_begin_22dbda43a:;
			{
				_22a5a3884_binary(&(*_self_), _20728_model.operator jule::Ptr<_228ddea40_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228ddec2c_UnaryExprModel>>()) {
			_case_begin_22dbda4b2:;
			{
				_22a5a3b09_unary(&(*_self_), _20728_model.operator jule::Ptr<_228ddec2c_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de0106_StructLitExprModel>>()) {
			_case_begin_22dbda539:;
			{
				_22a5a3d7e_structure_lit(&(*_self_), _20728_model.operator jule::Ptr<_228de0106_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de02e3_AllocStructLitExprModel>>()) {
			_case_begin_22dbda8d0:;
			{
				_22a5a4104_alloc_structure(&(*_self_), _20728_model.operator jule::Ptr<_228de02e3_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de04d0_CastingExprModel>>()) {
			_case_begin_22dbda946:;
			{
				_22a5a4379_casting(&(*_self_), _20728_model.operator jule::Ptr<_228de04d0_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de06bc_FnCallExprModel>>()) {
			_case_begin_22dbda9bd:;
			{
				_22a5a4874_func_call(&(*_self_), _20728_model.operator jule::Ptr<_228de06bc_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de08a9_SliceExprModel>>()) {
			_case_begin_22dbdaa45:;
			{
				_22a5a4ae9_slice(&(*_self_), _20728_model.operator jule::Ptr<_228de08a9_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1d2d_ArrayExprModel>>()) {
			_case_begin_22dbdaabc:;
			{
				_22a5a4d6e_array(&(*_self_), _20728_model.operator jule::Ptr<_228de1d2d_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de0a96_IndexingExprModel>>()) {
			_case_begin_22dbdab44:;
			{
				_22a5a50e4_indexing(&(*_self_), _20728_model.operator jule::Ptr<_228de0a96_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de0c83_AnonFnExprModel>>()) {
			_case_begin_22dbdabbb:;
			{
				_22a5a5369_anon_func(&(*_self_), _20728_model.operator jule::Ptr<_228de0c83_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de115c_MapExprModel>>()) {
			_case_begin_22dbdac43:;
			{
				_22a5a55de_map(&(*_self_), _20728_model.operator jule::Ptr<_228de115c_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1349_SlicingExprModel>>()) {
			_case_begin_22dbdacba:;
			{
				_22a5a5864_slicing(&(*_self_), _20728_model.operator jule::Ptr<_228de1349_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1536_TraitSubIdentExprModel>>()) {
			_case_begin_22dbdad42:;
			{
				_22a5a5ad9_trait_sub(&(*_self_), _20728_model.operator jule::Ptr<_228de1536_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1954_StructSubIdentExprModel>>()) {
			_case_begin_22dbdadb9:;
			{
				_22a5a5d5e_structure_sub(&(*_self_), _20728_model.operator jule::Ptr<_228de1954_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de2207_CommonSubIdentExprModel>>()) {
			_case_begin_22dbdae41:;
			{
				_22a5a60d4_common_sub(&(*_self_), _20728_model.operator jule::Ptr<_228de2207_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de23e4_TupleExprModel>>()) {
			_case_begin_22dbdaeb8:;
			{
				_22a5a6359_tuple(&(*_self_), _20728_model.operator jule::Ptr<_228de23e4_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de25d1_BuiltinOutCallExprModel>>()) {
			_case_begin_22dbdb040:;
			{
				_22a5a6854_out_call(&(*_self_), _20728_model.operator jule::Ptr<_228de25d1_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel>>()) {
			_case_begin_22dbdb0b7:;
			{
				_22a5a6ac9_outln_call(&(*_self_), _20728_model.operator jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de2b97_BuiltinNewCallExprModel>>()) {
			_case_begin_22dbdb13e:;
			{
				_22a5a65ce_new_call(&(*_self_), _20728_model.operator jule::Ptr<_228de2b97_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>>()) {
			_case_begin_22dbdb1b6:;
			{
				_22a5a6d4e_panic_call(&(*_self_), _20728_model.operator jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de3071_BuiltinAssertCallExprModel>>()) {
			_case_begin_22dbdb23d:;
			{
				_22a5a70c4_assert_call(&(*_self_), _20728_model.operator jule::Ptr<_228de3071_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de3824_BuiltinErrorCallExprModel>>()) {
			_case_begin_22dbdb2b5:;
			{
				_22a5a7349_error_call(&(*_self_), _20728_model.operator jule::Ptr<_228de3824_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de325d_BuiltinMakeCallExprModel>>()) {
			_case_begin_22dbdb33c:;
			{
				_22a5a75be_make_call(&(*_self_), _20728_model.operator jule::Ptr<_228de325d_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de344a_BuiltinAppendCallExprModel>>()) {
			_case_begin_22dbdb3b4:;
			{
				_22a5a7844_append_call(&(*_self_), _20728_model.operator jule::Ptr<_228de344a_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de29aa_BuiltinCloneCallExprModel>>()) {
			_case_begin_22dbdb43b:;
			{
				_22a5a7ab9_clone_call(&(*_self_), _20728_model.operator jule::Ptr<_228de29aa_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1723_SizeofExprModel>>()) {
			_case_begin_22dbdb4b3:;
			{
				_22a5a7d3e_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_228de1723_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de3e84_AlignofExprModel>>()) {
			_case_begin_22dbdb53a:;
			{
				_22a5a80b4_alignof(&(*_self_), _20728_model.operator jule::Ptr<_228de3e84_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de435d_IntegratedToStrExprModel>>()) {
			_case_begin_22dbdb5b2:;
			{
				_22a5a8339_integrated_to_str(&(*_self_), _20728_model.operator jule::Ptr<_228de435d_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de4737_FreeExprModel>>()) {
			_case_begin_22dbdb639:;
			{
				_22a5a85ae_free(&(*_self_), _20728_model.operator jule::Ptr<_228de4737_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de454a_BackendEmitExprModel>>()) {
			_case_begin_22dbdb6b1:;
			{
				_22a5a8834_backend_emit(&(*_self_), _20728_model.operator jule::Ptr<_228de454a_BackendEmitExprModel>());
			}
		}
		_match_end_22dbda638:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22a5a3015_ExprDeadCode _Src) {
	_Stream << "ExprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2276dd395_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228203294_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2285ee7d3_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _228aa0a20_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22772aa42_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22772b9bb_ScopeOptimizer> static__2276d60c4_new(jule::Ptr<_2299b6c10_Scope> _4527_scope) {
	return jule::new_ptr<_22772b9bb_ScopeOptimizer>(_22772b9bb_ScopeOptimizer{._field_scope=_4527_scope});
}



inline void _2276e3dd4_set_current_stmt(_22772b9bb_ScopeOptimizer* _self_, jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5139_stmt))))));
}



inline void _2276ee076_optimize_data(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_229a527d4_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228de06bc_FnCallExprModel>>()) {
			_case_begin_22dc26003:;
			{
				jule::Ptr<_228de06bc_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_228de06bc_FnCallExprModel>();;
				if (_23e74dd17_PRODUCTION) {
					if (((!(_228dea6b6_is_builtin(_5821_m.get()._field_func.ptr()))) && _227829943_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5)))) {
						_2276e3dd4_set_current_stmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_22dc25ce4:;
	};
	static__227856c28_optimize(_5536_d.get()._field_model);
}



inline void _22770b32a_optimize_var(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_229a0a4a1_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__227856c28_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _227728743_optimize_conditional(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299b76e4_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_22dc2904a:;
		if (it != expr.end()) {
			jule::Ptr<_2299b700c_If> _7721_elif = *it;
			{
				static__227856c28_optimize(_7721_elif.get()._field_expr);
				_227824894_optimize_child(&(*_self_), _7721_elif.get()._field_scope);
			}
			_iter_next_22dc2904a:;
			++it;
			goto _iter_begin_22dc2904a;
		}
		_iter_end_22dc2904a:;
	};
	if ((_7643_c.get()._field_default != nullptr)) {
		_227824894_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	};
	if ((!(_22772ae4e_COND))) {
		return;;
	};
	jule::Bool _8917_const_case = false;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_22dc2b080:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_2299b700c_If> _9221_elif = *it;
			{
				if ((!(_22782c4a1_is_constant_valid_conditional_case(_9221_elif)))) {
					goto _iter_next_22dc2b080;
				};
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_9214_i);
				_7643_c.get()._field_default=jule::new_ptr<_2299b72e8_Else>(_2299b72e8_Else{._field_scope=_9221_elif.get()._field_scope});
				goto _iter_end_22dc2b080;
			}
			_iter_next_22dc2b080:;
			++it;
			_9214_i++;
			goto _iter_begin_22dc2b080;
		}
		_iter_end_22dc2b080:;
	};
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_2299b700c_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));;
	jule::Ptr<_2299b700c_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_22783286e_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_22dc2e3c4:;
	}
	_iter_end_22dc2e3c4:;;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_const_case))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_22dc30b34:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_2299b700c_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_22dc30b34:;
			++it;
			_12913_j++;
			goto _iter_begin_22dc30b34;
		}
		_iter_end_22dc30b34:;
	};
	if ((_12817_only != -1LL)) {
		_2276e3dd4_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	};
}



inline void _22772c69d_build_default_constat_true_case(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299bb42e_Case> _14554_case, jule::I64& _14572_i, jule::Ptr<_2299ba8d4_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I64 _14713_start = _14572_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_22dc3332e;
			};
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_2299bb9d4_FallSt>>()) {
					_case_begin_22dc33be2:;
					{
						(_14572_i)++;
						if ((_14572_i >= _14585_m.get()._field_cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_22dc3332e;
						};
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=static_cast<jule::Any>(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_22dc35232:;
					{
						goto _iter_end_22dc3332e;
					}
				}
				_match_end_22dc35144:;
			};
		}
	_iter_next_22dc3332e:;
	}
	_iter_end_22dc3332e:;;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _22772d1c6_optimize_match(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299ba8d4_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_22dc372de:;
		if (it != expr.end()) {
			jule::Ptr<_2299bb42e_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_22dc37b80:;
					if (it != expr.end()) {
						jule::Ptr<_229a527d4_Data> _17325_expr = *it;
						{
							static__227856c28_optimize(_17325_expr.get()._field_model);
						}
						_iter_next_22dc37b80:;
						++it;
						goto _iter_begin_22dc37b80;
					}
					_iter_end_22dc37b80:;
				};
				_227824894_optimize_child(&(*_self_), _17221_case.get()._field_scope);
			}
			_iter_next_22dc372de:;
			++it;
			goto _iter_begin_22dc372de;
		}
		_iter_end_22dc372de:;
	};
	if ((_17137_m.get()._field_default != nullptr)) {
		_227824894_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	};
	if ((!(_22772ae4e_COND))) {
		return;;
	};
	jule::Bool _18617_const_case = false;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_22dc3990c:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_2299bb42e_Case> _18925_case = *it;
			{
				if ((!(_22783161a_is_constant_valid_match_case(_18925_case)))) {
					goto _iter_next_22dc3990c;
				};
				_18617_const_case=true;
				_22772c69d_build_default_constat_true_case(&(*_self_), _18925_case,_18918_i,_17137_m);
				goto _iter_end_22dc3990c;
			}
			_iter_next_22dc3990c:;
			++it;
			_18918_i++;
			goto _iter_begin_22dc3990c;
		}
		_iter_end_22dc3990c:;
	};
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_2299bb42e_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));;
	jule::Ptr<_2299bb42e_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_22783a657_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_22dc3c7ab:;
	}
	_iter_end_22dc3c7ab:;;
	if ((!(_18617_const_case))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_22dc3d955:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_2299bb42e_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_22dc3d955:;
			++it;
			_21913_j++;
			goto _iter_begin_22dc3d955;
		}
		_iter_end_22dc3d955:;
	};
	if ((_21817_only != -1LL)) {
		_2276e3dd4_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	};
}



inline void _227730948_optimize_range_iter(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299b8838_RangeIter> _23542_it) {
	static__227856c28_optimize(_23542_it.get()._field_expr.get()._field_model);
	_227824894_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _227732395_optimize_while_iter(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299b7e53_WhileIter> _24042_it) {
	static__227856c28_optimize(_24042_it.get()._field_expr);
	_227820098_optimize_stmt(&(*_self_), _24042_it.get()._field_next);
	_227824894_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _227732c25_substr(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299b9edd_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228de1349_SlicingExprModel>>()) {
			_case_begin_22dc42b57:;
			{
				jule::Ptr<_228de1349_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_228de1349_SlicingExprModel>();;
				if ((_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model)) {
					_2276e3dd4_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_228aa0a20_MutSlicingExprModel>(_228aa0a20_MutSlicingExprModel{._field_token=_24921_sem.get()._field_token, ._field_expr=_24921_sem.get()._field_expr, ._field_left=_24921_sem.get()._field_left, ._field_right=_24921_sem.get()._field_right})));
					return true;
				};
			}
		}
		_match_end_22dc42b02:;
	};
	return false;
}



inline jule::Bool _2277686c8_str_insert(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299b9edd_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228ddea40_BinopExprModel>>()) {
			_case_begin_22dc45066:;
			{
				jule::Ptr<_228ddea40_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_228ddea40_BinopExprModel>();;
				if ((_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model)) {
					_2276e3dd4_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_22772aa42_StrInsertBeginExprModel>(_22772aa42_StrInsertBeginExprModel{._field_dest=_26333_a.get()._field_l.get()._field_model, ._field_expr=_26621_m.get()._field_left.get()._field_model})));
					return true;
				};
			}
		}
		_match_end_22dc45011:;
	};
	return false;
}



inline jule::Bool _22776907a_str_assign(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299b9edd_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_229a82d31_Prim> _28213_lp = _229a8046b_prim(_27833_a.get()._field_l.get()._field_kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_229a86065_is_str(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_227732c25_substr(&(*_self_), _27833_a) || _2277686c8_str_insert(&(*_self_), _27833_a)) {
			_case_begin_22dc48993:;
			{
				return true;
			}
		}
		_match_end_22dc4890a:;
	};
	return false;
}



inline void _227812475_optimize_assign(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299b9edd_Assign> _29438_assign) {
	if ((_2276e7547_COPY && _22776907a_str_assign(&(*_self_), _29438_assign))) {
		return;;
	};
	static__227856c28_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__227856c28_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_22dc4a984:;
			{
				if ((_227703465_MATH && (_229a818bd_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr))) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_228ddea40_BinopExprModel>(_228ddea40_BinopExprModel{._field_left=_29438_assign.get()._field_l, ._field_right=_29438_assign.get()._field_r, ._field_op=_29438_assign.get()._field_op}));;
					static__227856c28_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_228ddea40_BinopExprModel>>()) {
							_case_begin_22dc4d0c4:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_228dde853_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=_30725_model;
								return;;
							}
						}
						_match_end_22dc4ce3c:;
					};
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_22dc4a92e:;
	};
	if (_2276d77ce_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_228de344a_BuiltinAppendCallExprModel>>()) {
				_case_begin_22dc4e9bb:;
				{
					jule::Ptr<_228de344a_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_228de344a_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_228de08a9_SliceExprModel>>()) {
							_case_begin_22dc50a33:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>() || _match_expr.type_is<jule::Ptr<_228de1954_StructSubIdentExprModel>>()) {
										_case_begin_22dc51319:;
										{
											_2276e3dd4_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_2285ee7d3_PushToSliceExprModel>(_2285ee7d3_PushToSliceExprModel{._field_dest=_32825_m.get()._field_dest, ._field_elems=_32825_m.get()._field_elements.operator jule::Ptr<_228de08a9_SliceExprModel>()})));
										}
									}
									_match_end_22dc512b4:;
								};
							}
						}
						_match_end_22dc50879:;
					};
				}
			}
			_match_end_22dc4b4e0:;
		};
	};
}



inline void _22781a659_optimize_multi_assign(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299ba395_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_22dc4adb3:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__227856c28_optimize(_34521_l);
					_34444_assign.get()._field_l[_34514_i]=_34521_l;
				};
			}
			_iter_next_22dc4adb3:;
			++it;
			_34514_i++;
			goto _iter_begin_22dc4adb3;
		}
		_iter_end_22dc4adb3:;
	};
	static__227856c28_optimize(_34444_assign.get()._field_r);
}



inline void _22781d77d_optimize_ret(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299bbe57_RetSt> _35435_r) {
	static__227856c28_optimize(_35435_r.get()._field_expr);
}



inline void _227820098_optimize_stmt(_22772b9bb_ScopeOptimizer* _self_, jule::Any _35836_stmt) {
	{
		auto &_match_expr{ _35836_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_2299b6c10_Scope>>()) {
			_case_begin_22dc53edc:;
			{
				_227824894_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_2299b6c10_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a527d4_Data>>()) {
			_case_begin_22dc54053:;
			{
				_2276ee076_optimize_data(&(*_self_), _35836_stmt.operator jule::Ptr<_229a527d4_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
			_case_begin_22dc540b9:;
			{
				_22770b32a_optimize_var(&(*_self_), _35836_stmt.operator jule::Ptr<_229a0a4a1_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b76e4_Conditional>>()) {
			_case_begin_22dc54130:;
			{
				_227728743_optimize_conditional(&(*_self_), _35836_stmt.operator jule::Ptr<_2299b76e4_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b8838_RangeIter>>()) {
			_case_begin_22dc54196:;
			{
				_227730948_optimize_range_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_2299b8838_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b7e53_WhileIter>>()) {
			_case_begin_22dc5420c:;
			{
				_227732395_optimize_while_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_2299b7e53_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b79d0_InfIter>>()) {
			_case_begin_22dc54273:;
			{
				_227824894_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_2299b79d0_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b9edd_Assign>>()) {
			_case_begin_22dc542d9:;
			{
				_227812475_optimize_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_2299b9edd_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299ba395_MultiAssign>>()) {
			_case_begin_22dc54350:;
			{
				_22781a659_optimize_multi_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_2299ba395_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299ba8d4_Match>>()) {
			_case_begin_22dc543c7:;
			{
				_22772d1c6_optimize_match(&(*_self_), _35836_stmt.operator jule::Ptr<_2299ba8d4_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299bbe57_RetSt>>()) {
			_case_begin_22dc5444e:;
			{
				_22781d77d_optimize_ret(&(*_self_), _35836_stmt.operator jule::Ptr<_2299bbe57_RetSt>());
			}
		}
		_match_end_22dc53d88:;
	};
}



inline void _227824894_optimize_child(_22772b9bb_ScopeOptimizer* _self_, jule::Ptr<_2299b6c10_Scope> _38537_child) {
	jule::Ptr<_22772b9bb_ScopeOptimizer> _38617_so = static__2276d60c4_new(_38537_child);;
	_22781a3b2_optimize(_38617_so.ptr());
}



inline void _22781a3b2_optimize(_22772b9bb_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_22dc5a4aa:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_227820098_optimize_stmt(&(*_self_), _39221_stmt);
			}
			_iter_next_22dc5a4aa:;
			++it;
			_39214_i++;
			goto _iter_begin_22dc5a4aa;
		}
		_iter_end_22dc5a4aa:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22772b9bb_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__227856c28_optimize(jule::Any& _5533_model) {
	if (_22a4ae4c6_expr_enabled) {
		jule::Ptr<_2278cc8e7_ExprOptimizer> _5821_exop = jule::new_ptr<_2278cc8e7_ExprOptimizer>(_2278cc8e7_ExprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5533_model))))});;
		_227c2ba15_do(_5821_exop.ptr());
	};
}



inline jule::Bool _22785a479_str_cond(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228ddea40_BinopExprModel> _6527_m) {
	jule::Ptr<_229a82d31_Prim> _6613_lp = _229a8046b_prim(_6527_m.get()._field_left.get()._field_kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_229a86065_is_str(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6527_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6527_m.get()._field_op.get()._field_kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228d7b4d2_Const>>()) {
			_case_begin_22dc649ae:;
			{
				std::tie(_6527_m.get()._field_left,_6527_m.get()._field_right) = std::make_tuple(_6527_m.get()._field_right,_6527_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_22dc64959:;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228d7b4d2_Const>>()) {
			_case_begin_22dc659b0:;
			{
				goto _match_end_22dc658c2;
			}
		}
		else {
			_case_begin_22dc65938:;
			{
				return true;
			}
		}
		_match_end_22dc658c2:;
	};
	_julec_label_opt:;
	jule::Ptr<_228d7b4d2_Const> _8513_c = _6527_m.get()._field_right.get()._field_model.operator jule::Ptr<_228d7b4d2_Const>();;
	if ((!(_228dd7c03_read_str(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_22dc67275:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=_6527_m.get()._field_left.get()._field_model, ._field_ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_22dc672db:;
			{
				jule::Ptr<_2276b1a1c_Token> _9721_op = _6527_m.get()._field_op;;
				_9721_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_228ddec2c_UnaryExprModel>(_228ddec2c_UnaryExprModel{._field_expr=jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2207_CommonSubIdentExprModel>(_228de2207_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=_6527_m.get()._field_left.get()._field_model, ._field_ident=jule::Str("empty()", 7)})), }), ._field_op=_9721_op}));
			}
		}
		_match_end_22dc67154:;
	};
	return true;
}



inline void _22785ad3c_binary(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228ddea40_BinopExprModel> _11325_m) {
	static__227856c28_optimize(_11325_m.get()._field_left.get()._field_model);
	static__227856c28_optimize(_11325_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11325_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228d7b4d2_Const>>()) {
			_case_begin_22dc6b279:;
			{
				goto _match_end_22dc6ac4b;
			}
		}
		else {
			_case_begin_22dc6ace5:;
			{
				return;;
			}
		}
		_match_end_22dc6ac4b:;
	};
	if ((_22772ae4e_COND && _22785a479_str_cond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_227703465_MATH))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_22dc6be4a:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _227c2e782_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_13318_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_228d7b4d2_Const> _13625_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_228d7b4d2_Const>();;
					_228dd8b9e_set_u64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_22dc6beb1:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _227c2e782_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_14118_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_228d7b4d2_Const> _14425_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_228d7b4d2_Const>();;
					_228dd8b9e_set_u64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_22dc6c038:;
			{
				jule::Ptr<_228d7b4d2_Const> _14921_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_228d7b4d2_Const>();;
				jule::F64 _15017_d = _228dd86a4_as_f64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_228dd8929_set_i64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_22dc6bde5:;
	};
	jule::Any _15617_model = jule::Any(jule::new_ptr<_2276dd395_UnsafeBinopExprModel>(_2276dd395_UnsafeBinopExprModel{._field_node=_11325_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15617_model))))));
}



inline void _22786297b_unary(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228ddec2c_UnaryExprModel> _16024_m) {
	static__227856c28_optimize(_16024_m.get()._field_expr.get()._field_model);
	if ((_2277290c3_PTR && (_16024_m.get()._field_op.get()._field_kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16024_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_228ddec2c_UnaryExprModel>>()) {
				_case_begin_22dc742e8:;
				{
					jule::Ptr<_228ddec2c_UnaryExprModel> _16525_um = _16024_m.get()._field_expr.get()._field_model.operator jule::Ptr<_228ddec2c_UnaryExprModel>();;
					if ((_16525_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16525_um.get()._field_expr.get()._field_model;
					};
				}
			}
			_match_end_22dc74293:;
		};
	};
}



inline void _22786a357_structure_lit(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de0106_StructLitExprModel> _17332_m) {
	{
		auto &expr = _17332_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_22dc75d44:;
		if (it != expr.end()) {
			jule::Ptr<_228ddee19_StructArgExprModel> _17421_arg = *it;
			{
				static__227856c28_optimize(_17421_arg.get()._field_expr);
			}
			_iter_next_22dc75d44:;
			++it;
			goto _iter_begin_22dc75d44;
		}
		_iter_end_22dc75d44:;
	};
}



inline void _22786ba51_alloc_structure(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de02e3_AllocStructLitExprModel> _17934_m) {
	_22786a357_structure_lit(&(*_self_), _17934_m.get()._field_lit);
}



inline void _2278794ed_casting(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de04d0_CastingExprModel> _18326_m) {
	static__227856c28_optimize(_18326_m.get()._field_expr);
}



inline void _22788b114_args(_2278cc8e7_ExprOptimizer* _self_, jule::Slice<jule::Any>& _18724_args) {
	{
		auto &expr = _18724_args;
		auto it = expr.begin();
		_iter_begin_22dc778c3:;
		if (it != expr.end()) {
			jule::I64 _18814_i = it - expr.begin();
			jule::Any _18821_arg = *it;
			{
				static__227856c28_optimize(_18821_arg);
				_18724_args[_18814_i]=_18821_arg;
			}
			_iter_next_22dc778c3:;
			++it;
			_18814_i++;
			goto _iter_begin_22dc778c3;
		}
		_iter_end_22dc778c3:;
	};
}



inline void _2278c17cb_scope(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_2299b6c10_Scope>& _19425_s) {
	jule::Ptr<_22772b9bb_ScopeOptimizer> _19517_scopt = static__2276d60c4_new(_19425_s);;
	_22781a3b2_optimize(_19517_scopt.ptr());
}



inline void _2278c52b3_func_call(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de06bc_FnCallExprModel> _19928_m) {
	static__227856c28_optimize(_19928_m.get()._field_expr);
	_22788b114_args(&(*_self_), _19928_m.get()._field_args);
	if ((_19928_m.get()._field_except != nullptr)) {
		_2278c17cb_scope(&(*_self_), _19928_m.get()._field_except);
	};
}



inline void _2278ce146_slice(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de08a9_SliceExprModel> _20724_m) {
	_22788b114_args(&(*_self_), _20724_m.get()._field_elems);
}



inline void _227a26942_array(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de1d2d_ArrayExprModel> _21124_m) {
	if (((_21124_m.get()._field_elems.len() == 2LL) && (_21124_m.get()._field_elems[1LL] == nullptr))) {
		jule::Any _21321_elem = _21124_m.get()._field_elems[0LL];;
		static__227856c28_optimize(_21321_elem);
		_21124_m.get()._field_elems[0LL]=_21321_elem;
	};
	_22788b114_args(&(*_self_), _21124_m.get()._field_elems);
}



inline void _227a3a99a_indexing(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de0a96_IndexingExprModel> _22027_m) {
	static__227856c28_optimize(_22027_m.get()._field_expr.get()._field_model);
	static__227856c28_optimize(_22027_m.get()._field_index.get()._field_model);
	if ((!(_2277088bb_ACCESS))) {
		return;;
	};
	jule::Bool _22613_array = (_229a81181_arr(_22027_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);;
	if ((_22613_array && _229a53197_is_const(_22027_m.get()._field_index.ptr()))) {
		jule::Any _22921_model = jule::Any(jule::new_ptr<_228203294_UnsafeIndexingExprModel>(_228203294_UnsafeIndexingExprModel{._field_node=_22027_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_22921_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22027_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
			_case_begin_22dc8148c:;
			{
				jule::Ptr<_229a0a4a1_Var> _23517_i = _22027_m.get()._field_index.get()._field_model.operator jule::Ptr<_229a0a4a1_Var>();;
				if ((_23517_i.get()._field_mutable || (_23517_i.get()._field_iter_relation == nullptr))) {
					goto _match_end_22dc81338;
				};
				{
					auto &_match_expr{ _22027_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
						_case_begin_22dc82c52:;
						{
							jule::Ptr<_229a0a4a1_Var> _24121_r = _22027_m.get()._field_expr.get()._field_model.operator jule::Ptr<_229a0a4a1_Var>();;
							if ((_23517_i.get()._field_iter_relation.get()._field_range == _24121_r)) {
								jule::Any _24429_model = jule::Any(jule::new_ptr<_228203294_UnsafeIndexingExprModel>(_228203294_UnsafeIndexingExprModel{._field_node=_22027_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24429_model))))));
							};
						}
					}
					_match_end_22dc82bec:;
				};
			}
		}
		_match_end_22dc81338:;
	};
}



inline void _227a4a933_anon_func(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de0c83_AnonFnExprModel> _25128_m) {
	_2278c17cb_scope(&(*_self_), _25128_m.get()._field_func.get()._field_scope);
}



inline void _227a4b9ab_map(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de115c_MapExprModel> _25522_m) {
	{
		auto &expr = _25522_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_22dc853d6:;
		if (it != expr.end()) {
			jule::Ptr<_228de0e70_KeyValPairExprModel> _25621_pair = *it;
			{
				static__227856c28_optimize(_25621_pair.get()._field_key);
				static__227856c28_optimize(_25621_pair.get()._field_val);
			}
			_iter_next_22dc853d6:;
			++it;
			goto _iter_begin_22dc853d6;
		}
		_iter_end_22dc853d6:;
	};
}



inline void _227a3a3a1_slicing(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de1349_SlicingExprModel> _26226_m) {
	static__227856c28_optimize(_26226_m.get()._field_expr);
	static__227856c28_optimize(_26226_m.get()._field_left);
	if ((_26226_m.get()._field_right != nullptr)) {
		static__227856c28_optimize(_26226_m.get()._field_right);
	};
}



inline void _227a5085b_trait_sub(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de1536_TraitSubIdentExprModel> _27028_m) {
	static__227856c28_optimize(_27028_m.get()._field_expr);
}



inline void _227a5cc97_structure_sub(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de1954_StructSubIdentExprModel> _27432_m) {
	static__227856c28_optimize(_27432_m.get()._field_expr.get()._field_model);
}



inline void _227a628a1_common_sub(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de2207_CommonSubIdentExprModel> _27829_m) {
	static__227856c28_optimize(_27829_m.get()._field_expr);
}



inline void _227a6807c_tuple(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de23e4_TupleExprModel> _28224_m) {
	{
		auto &expr = _28224_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_22dc88890:;
		if (it != expr.end()) {
			jule::Ptr<_229a527d4_Data> _28321_d = *it;
			{
				static__227856c28_optimize(_28321_d.get()._field_model);
			}
			_iter_next_22dc88890:;
			++it;
			goto _iter_begin_22dc88890;
		}
		_iter_end_22dc88890:;
	};
}



inline void _227a6948a_new_call(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de2b97_BuiltinNewCallExprModel> _28827_m) {
	if ((_28827_m.get()._field_init != nullptr)) {
		static__227856c28_optimize(_28827_m.get()._field_init);
	};
}



inline void _227a6a744_out_call(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de25d1_BuiltinOutCallExprModel> _29427_m) {
	static__227856c28_optimize(_29427_m.get()._field_expr);
}



inline void _227a6bed7_outln_call(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel> _29829_m) {
	static__227856c28_optimize(_29829_m.get()._field_expr);
}



inline void _227a70a24_panic_call(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de2d84_BuiltinPanicCallExprModel> _30229_m) {
	static__227856c28_optimize(_30229_m.get()._field_expr);
}



inline void _227a7c877_assert_call(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de3071_BuiltinAssertCallExprModel> _30630_m) {
	static__227856c28_optimize(_30630_m.get()._field_expr);
}



inline void _227a88e5a_error_call(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de3824_BuiltinErrorCallExprModel> _31029_m) {
	static__227856c28_optimize(_31029_m.get()._field_err);
}



inline void _227a93c78_make_call(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de325d_BuiltinMakeCallExprModel> _31428_m) {
	if ((_31428_m.get()._field_len != nullptr)) {
		static__227856c28_optimize(_31428_m.get()._field_len);
	};
	if ((_31428_m.get()._field_cap != nullptr)) {
		static__227856c28_optimize(_31428_m.get()._field_cap);
	};
}



inline void _227ab9aa1_append_call(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de344a_BuiltinAppendCallExprModel> _32330_m) {
	static__227856c28_optimize(_32330_m.get()._field_dest);
	static__227856c28_optimize(_32330_m.get()._field_elements);
}



inline void _227abc378_clone_call(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de29aa_BuiltinCloneCallExprModel> _32829_m) {
	static__227856c28_optimize(_32829_m.get()._field_expr);
}



inline void _227ac1987_sizeof(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de1723_SizeofExprModel> _33225_m) {
	static__227856c28_optimize(_33225_m.get()._field_expr);
}



inline void _227ace742_alignof(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de3e84_AlignofExprModel> _33626_m) {
	static__227856c28_optimize(_33626_m.get()._field_expr);
}



inline void _227ae2942_integrated_to_str(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de435d_IntegratedToStrExprModel> _34036_m) {
	static__227856c28_optimize(_34036_m.get()._field_expr);
}



inline void _227b337c9_free(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de4737_FreeExprModel> _34423_m) {
	static__227856c28_optimize(_34423_m.get()._field_expr);
}



inline void _227b7c339_backend_emit(_2278cc8e7_ExprOptimizer* _self_, jule::Ptr<_228de454a_BackendEmitExprModel> _34831_m) {
	_22788b114_args(&(*_self_), _34831_m.get()._field_exprs);
}



inline void _227c2ba15_do(_2278cc8e7_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_228ddea40_BinopExprModel>>()) {
			_case_begin_22dc9114a:;
			{
				_22785ad3c_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228ddea40_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228ddec2c_UnaryExprModel>>()) {
			_case_begin_22dc91414:;
			{
				_22786297b_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228ddec2c_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de0106_StructLitExprModel>>()) {
			_case_begin_22dc9147a:;
			{
				_22786a357_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de0106_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de02e3_AllocStructLitExprModel>>()) {
			_case_begin_22dc914e1:;
			{
				_22786ba51_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de02e3_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de04d0_CastingExprModel>>()) {
			_case_begin_22dc91557:;
			{
				_2278794ed_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de04d0_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de06bc_FnCallExprModel>>()) {
			_case_begin_22dc915ce:;
			{
				_2278c52b3_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de06bc_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de08a9_SliceExprModel>>()) {
			_case_begin_22dc91656:;
			{
				_2278ce146_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de08a9_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1d2d_ArrayExprModel>>()) {
			_case_begin_22dc916cd:;
			{
				_227a26942_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de1d2d_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de0a96_IndexingExprModel>>()) {
			_case_begin_22dc91755:;
			{
				_227a3a99a_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de0a96_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de0c83_AnonFnExprModel>>()) {
			_case_begin_22dc917cc:;
			{
				_227a4a933_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de0c83_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de115c_MapExprModel>>()) {
			_case_begin_22dc91854:;
			{
				_227a4b9ab_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de115c_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1349_SlicingExprModel>>()) {
			_case_begin_22dc918cb:;
			{
				_227a3a3a1_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de1349_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1536_TraitSubIdentExprModel>>()) {
			_case_begin_22dc91953:;
			{
				_227a5085b_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de1536_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1954_StructSubIdentExprModel>>()) {
			_case_begin_22dc919ca:;
			{
				_227a5cc97_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de1954_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de2207_CommonSubIdentExprModel>>()) {
			_case_begin_22dc91a52:;
			{
				_227a628a1_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de2207_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de23e4_TupleExprModel>>()) {
			_case_begin_22dc91ac9:;
			{
				_227a6807c_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de23e4_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de25d1_BuiltinOutCallExprModel>>()) {
			_case_begin_22dc91b51:;
			{
				_227a6a744_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de25d1_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel>>()) {
			_case_begin_22dc91bc8:;
			{
				_227a6bed7_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de2b97_BuiltinNewCallExprModel>>()) {
			_case_begin_22dc91c50:;
			{
				_227a6948a_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de2b97_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>>()) {
			_case_begin_22dc91cc7:;
			{
				_227a70a24_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de3071_BuiltinAssertCallExprModel>>()) {
			_case_begin_22dc91d4e:;
			{
				_227a7c877_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de3071_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de3824_BuiltinErrorCallExprModel>>()) {
			_case_begin_22dc91dc6:;
			{
				_227a88e5a_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de3824_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de325d_BuiltinMakeCallExprModel>>()) {
			_case_begin_22dc91e4d:;
			{
				_227a93c78_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de325d_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de344a_BuiltinAppendCallExprModel>>()) {
			_case_begin_22dc91ec5:;
			{
				_227ab9aa1_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de344a_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de29aa_BuiltinCloneCallExprModel>>()) {
			_case_begin_22dc9204c:;
			{
				_227abc378_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de29aa_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1723_SizeofExprModel>>()) {
			_case_begin_22dc920c4:;
			{
				_227ac1987_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de1723_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de3e84_AlignofExprModel>>()) {
			_case_begin_22dc9214b:;
			{
				_227ace742_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de3e84_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de435d_IntegratedToStrExprModel>>()) {
			_case_begin_22dc921c3:;
			{
				_227ae2942_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de435d_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de4737_FreeExprModel>>()) {
			_case_begin_22dc9224a:;
			{
				_227b337c9_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de4737_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de454a_BackendEmitExprModel>>()) {
			_case_begin_22dc922c2:;
			{
				_227b7c339_backend_emit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_228de454a_BackendEmitExprModel>());
			}
		}
		_match_end_22dc910e5:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2278cc8e7_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22a577836_Optimizer> static__22a4dae81_new(jule::Ptr<_22a0e7571_IR>& _2528_ir) {
	return jule::new_ptr<_22a577836_Optimizer>(_22a577836_Optimizer{._field_ir=_2528_ir});
}



inline void _22a4aebbe_optimize_global(_22a577836_Optimizer* _self_, jule::Ptr<_229a0a4a1_Var>& _3139_v) {
	if ((!(_3139_v.get()._field_cpp_linked))) {
		static__227856c28_optimize(_3139_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _22a519b19_optimize_function(_22a577836_Optimizer* _self_, jule::Ptr<_228de6cbc_Fn>& _3741_func) {
	if (_3741_func.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _3741_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_22dca8074:;
		if (it != expr.end()) {
			jule::Ptr<_228de996d_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_22772b9bb_ScopeOptimizer> _4221_so = static__2276d60c4_new(_4121_ins.get()._field_scope);;
				_22781a3b2_optimize(_4221_so.ptr());
			}
			_iter_next_22dca8074:;
			++it;
			goto _iter_begin_22dca8074;
		}
		_iter_end_22dca8074:;
	};
}



inline void _22a51de5e_optimize_struct(_22a577836_Optimizer* _self_, jule::Ptr<_228d188c0_Struct>& _4739_s) {
	if (_4739_s.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _4739_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_22dca94d7:;
		if (it != expr.end()) {
			jule::Ptr<_228d44c1a_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_22dca9b7a:;
					if (it != expr.end()) {
						jule::Ptr<_228d21037_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_default != nullptr)) {
								static__227856c28_optimize(_5225_f.get()._field_default.get()._field_model);
							};
						}
						_iter_next_22dca9b7a:;
						++it;
						goto _iter_begin_22dca9b7a;
					}
					_iter_end_22dca9b7a:;
				};
				{
					auto &expr = _5121_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_22dcaaa8d:;
					if (it != expr.end()) {
						jule::Ptr<_228de6cbc_Fn> _5725_m = *it;
						{
							_22a519b19_optimize_function(&(*_self_), _5725_m);
						}
						_iter_next_22dcaaa8d:;
						++it;
						goto _iter_begin_22dcaaa8d;
					}
					_iter_end_22dcaaa8d:;
				};
			}
			_iter_next_22dca94d7:;
			++it;
			goto _iter_begin_22dca94d7;
		}
		_iter_end_22dca94d7:;
	};
}



inline void _22a522aab_optimize_globals(_22a577836_Optimizer* _self_, jule::Ptr<_2299d85a0_Package>& _6340_p) {
	{
		auto &expr = _6340_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22dcab154:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_22dcabd9c:;
					if (it != expr.end()) {
						jule::Ptr<_229a0a4a1_Var> _6525_v = *it;
						{
							_22a4aebbe_optimize_global(&(*_self_), _6525_v);
						}
						_iter_next_22dcabd9c:;
						++it;
						goto _iter_begin_22dcabd9c;
					}
					_iter_end_22dcabd9c:;
				};
			}
			_iter_next_22dcab154:;
			++it;
			goto _iter_begin_22dcab154;
		}
		_iter_end_22dcab154:;
	};
}



inline void _22a528e14_optimize_functions(_22a577836_Optimizer* _self_, jule::Ptr<_2299d85a0_Package>& _7142_p) {
	{
		auto &expr = _7142_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22dcac4da:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_22dcad233:;
					if (it != expr.end()) {
						jule::Ptr<_228de6cbc_Fn> _7325_func = *it;
						{
							_22a519b19_optimize_function(&(*_self_), _7325_func);
						}
						_iter_next_22dcad233:;
						++it;
						goto _iter_begin_22dcad233;
					}
					_iter_end_22dcad233:;
				};
			}
			_iter_next_22dcac4da:;
			++it;
			goto _iter_begin_22dcac4da;
		}
		_iter_end_22dcac4da:;
	};
}



inline void _22a532071_optimize_structs(_22a577836_Optimizer* _self_, jule::Ptr<_2299d85a0_Package>& _7940_p) {
	{
		auto &expr = _7940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22dcad871:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_22dcae5b9:;
					if (it != expr.end()) {
						jule::Ptr<_228d188c0_Struct> _8125_s = *it;
						{
							_22a51de5e_optimize_struct(&(*_self_), _8125_s);
						}
						_iter_next_22dcae5b9:;
						++it;
						goto _iter_begin_22dcae5b9;
					}
					_iter_end_22dcae5b9:;
				};
			}
			_iter_next_22dcad871:;
			++it;
			goto _iter_begin_22dcad871;
		}
		_iter_end_22dcad871:;
	};
}



inline void _22a53c675_optimize_package(_22a577836_Optimizer* _self_, jule::Ptr<_2299d85a0_Package>& _8740_p) {
	_22a522aab_optimize_globals(&(*_self_), _8740_p);
	_22a528e14_optimize_functions(&(*_self_), _8740_p);
	_22a532071_optimize_structs(&(*_self_), _8740_p);
}



inline void _22a541ca6_optimize(_22a577836_Optimizer* _self_) {
	_22a5434d3_detect_enabled();
	if (_2276eba79_DEADCODE) {
		_22a59cb58_eliminate_defines((*_self_)._field_ir);
	};
	if ((_22a4b062b_scope_enabled || _22a4ae4c6_expr_enabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_used;
			auto it = expr.begin();
			_iter_begin_22dcaebb3:;
			if (it != expr.end()) {
				jule::Ptr<_2299d5646_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_cpp_linked))) {
						_22a53c675_optimize_package(&(*_self_), _10325_u.get()._field_package);
					};
				}
				_iter_next_22dcaebb3:;
				++it;
				goto _iter_begin_22dcaebb3;
			}
			_iter_end_22dcaebb3:;
		};
		_22a53c675_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
	};
	if (_2276eba79_DEADCODE) {
		_22a5a290a_eliminate_scopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22a577836_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__22a5c15b6_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__22a5c2881_print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__22a5c15b6_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _22a5c2694_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__22a5c4036_log_flat(_2409487a2_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__22a5c4245_log_error(_2409487a2_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__22a5c15b6_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	};
	if (((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_2299348d6_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_2299348d6_itoa(_1930_l._field_column));
	};
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _227385c41_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_old_len = _3621_line.len();;
		_3621_line=_227385c41_trim_left(_3621_line,jule::Str("\t", 1));
		if ((_3821_old_len != _3621_line.len())) {
			_3721_offset+=((_3821_old_len - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _2299348d6_itoa(_1930_l._field_row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_227315ab1_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_227315ab1_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1930_l._field_column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_227315ab1_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__22a5c2881_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__22a5c4454_log(_2409487a2_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_22dcc17c9:;
			{
				static__22a5c4036_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_22dcc1840:;
			{
				static__22a5c4245_log_error(_6524_l);
			}
		}
		_match_end_22dcc1675:;
	};
}



inline void static__22a5c4663_print_logs(jule::Slice<_2409487a2_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_22dcb6604:;
		if (it != expr.end()) {
			_2409487a2_Log &_7616_l = *it;
			{
				static__22a5c4454_log(_7616_l);
			}
			_iter_next_22dcb6604:;
			++it;
			goto _iter_begin_22dcb6604;
		}
		_iter_end_22dcb6604:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_2299348d6_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _22a5c3c7d_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _22ab96e66_unix(_22ab96aae_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _22ab9c07b_unix_year_to_seconds(_5717_y,_5617_leap);;
	_6817_t+=_22ab9c411_unix_month_to_seconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_hour);
	_6817_t+=(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _22ab96aae_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _22ab97252_Time static__22ab975e8_unix(jule::U64 _9124_sec) {
	return _22ab97252_Time{._field_sec=_9124_sec};
}



inline _22ab97252_Time static__22ab977e6_now(void) {
	return static__22ab975e8_unix(static_cast<jule::U64>(_22ab9bc3a_unix()));
}



inline jule::U64 _22ab97c47_unix(_22ab97252_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _22ab97eab_day(_22ab97252_Time* _self_) {
	return _22ab98e35_abs(&(*_self_))._field_day;
}



inline jule::U64 _22ab98220_month(_22ab97252_Time* _self_) {
	return _22ab98e35_abs(&(*_self_))._field_month;
}



inline jule::U64 _22ab98484_year(_22ab97252_Time* _self_) {
	return _22ab98e35_abs(&(*_self_))._field_year;
}



inline jule::U64 _22ab986e8_second(_22ab97252_Time* _self_) {
	return _22ab98e35_abs(&(*_self_))._field_second;
}



inline jule::U64 _22ab9895c_minute(_22ab97252_Time* _self_) {
	return _22ab98e35_abs(&(*_self_))._field_minute;
}



inline jule::U64 _22ab98bc1_hour(_22ab97252_Time* _self_) {
	return _22ab98e35_abs(&(*_self_))._field_hour;
}



inline _22ab96aae_AbsTime _22ab98e35_abs(_22ab97252_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);;
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);;
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	};
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);;
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	};
	_13617_rem_days-=(_14217_c_cycles * 36524LLU);
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);;
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	};
	_13617_rem_days-=(_14817_q_cycles * 1461LLU);
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);;
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	};
	_13617_rem_days-=(_15417_rem_years * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_y_day = (((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_y_day >= (365LLU + _16017_leap))) {
		_16417_y_day-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_22ab96152_MDAYS[static_cast<jule::I64>(_16917_months)] <= _13617_rem_days); (_16917_months)++) {
		{
			_13617_rem_days-=_22ab96152_MDAYS[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_22dced76d:;
	}
	_iter_end_22dced76d:;;
	_22ab96aae_AbsTime _17417_t = _22ab96aae_AbsTime{};;
	_17417_t._field_year=static_cast<jule::U64>(((((_15417_rem_years + (4LLU * _14817_q_cycles)) + (100LLU * _14217_c_cycles)) + (400LLU * _13517_qc_cycles)) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	};
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	};
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>(((_12917_rem_secs / 60LLU) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _22ab97252_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22ab1ae84_ScopeCoder> static__22ab1b5a0_new(jule::Ptr<_22ab9c950_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_22ab1ae84_ScopeCoder>(_22ab1ae84_ScopeCoder{._field_oc=_5524_oc});
}



inline void _22ab1b825_range_index_iter(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b8838_RangeIter>& _6141_it) {
	jule::Str _6213_begin = static__22ab37731_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it)));;
	jule::Str _6313_next = static__22ab37c70_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it)));;
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_22ab81549_add_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_2276e7547_COPY && _22ab214d9_is_copy_optimizable(_6141_it.get()._field_expr))) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_22ab2ddcb_model(_self_.get()._field_oc.get()._field_ec, _6141_it.get()._field_expr.get()._field_model);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, _6213_begin);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_22ab81549_add_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	if ((_6141_it.get()._field_key_a != nullptr)) {
		_22ab9e5de_var_init_expr(_self_.get()._field_oc, _6141_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_22ab82c87_indent(_self_.get()._field_oc);
	};
	if ((_6141_it.get()._field_key_b != nullptr)) {
		if (_2276e7547_COPY) {
			_6141_it.get()._field_key_b.get()._field_reference=_22ab21891_is_iter_copy_optimizable(_6141_it.get()._field_expr,_6141_it.get()._field_key_b);
		};
		_22ab9e5de_var_init_expr(_self_.get()._field_oc, _6141_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_22ab82c87_indent(_self_.get()._field_oc);
	};
	_22ab20e12_scope(_self_, _6141_it.get()._field_scope);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, _6313_next);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_22ab82c87_indent(_self_.get()._field_oc);
	if ((_6141_it.get()._field_key_a != nullptr)) {
		_22ab80ca7_write(_self_.get()._field_oc, static__22ab37489_var(_6141_it.get()._field_key_a));
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_22ab82c87_indent(_self_.get()._field_oc);
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_22ab80ca7_write(_self_.get()._field_oc, _6213_begin);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab379c8_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it))));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _22ab1ba9a_range_hashmap_iter(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b8838_RangeIter>& _12943_it) {
	jule::Str _13013_begin = static__22ab37731_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it)));;
	jule::Str _13113_next = static__22ab37c70_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it)));;
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_22ab81549_add_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_2276e7547_COPY && _22ab214d9_is_copy_optimizable(_12943_it.get()._field_expr))) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_22ab2ddcb_model(_self_.get()._field_oc.get()._field_ec, _12943_it.get()._field_expr.get()._field_model);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, _13013_begin);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_22ab81549_add_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	if ((_12943_it.get()._field_key_a != nullptr)) {
		if (_2276e7547_COPY) {
			_12943_it.get()._field_key_a.get()._field_reference=_22ab21891_is_iter_copy_optimizable(_12943_it.get()._field_expr,_12943_it.get()._field_key_a);
		};
		_22ab9e5de_var_init_expr(_self_.get()._field_oc, _12943_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_22ab82c87_indent(_self_.get()._field_oc);
	};
	if ((_12943_it.get()._field_key_b != nullptr)) {
		if (_2276e7547_COPY) {
			_12943_it.get()._field_key_b.get()._field_reference=_22ab21891_is_iter_copy_optimizable(_12943_it.get()._field_expr,_12943_it.get()._field_key_b);
		};
		_22ab9e5de_var_init_expr(_self_.get()._field_oc, _12943_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_22ab82c87_indent(_self_.get()._field_oc);
	};
	_22ab20e12_scope(_self_, _12943_it.get()._field_scope);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, _13113_next);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_22ab80ca7_write(_self_.get()._field_oc, _13013_begin);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab379c8_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it))));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _22ab1bd20_if_case(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b700c_If> _19531_i) {
	if ((_19531_i.get()._field_expr != nullptr)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _19531_i.get()._field_expr);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_22ab20e12_scope(_self_, _19531_i.get()._field_scope);
}



inline void _22ab1c095_conditional(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b76e4_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_22dd97570:;
		if (it != expr.end()) {
			jule::Ptr<_2299b700c_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_22dd97570;
				};
				if (_20517_writed) {
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_22ab1bd20_if_case(_self_, _20621_elif);
			}
			_iter_next_22dd97570:;
			++it;
			goto _iter_begin_22dd97570;
		}
		_iter_end_22dd97570:;
	};
	if ((_20435_c.get()._field_default != nullptr)) {
		if (_20517_writed) {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_22ab20e12_scope(_self_, _20435_c.get()._field_default.get()._field_scope);
	};
}



inline void _22ab1c31a_inf_iter(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b79d0_InfIter> _22432_it) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_22ab81549_add_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab20e12_scope(_self_, _22432_it.get()._field_scope);
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab37c70_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22432_it))));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab379c8_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22432_it))));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _22ab1c590_while_iter(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b7e53_WhileIter> _24134_it) {
	if (((_24134_it.get()._field_expr != nullptr) && (_24134_it.get()._field_next == nullptr))) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _24134_it.get()._field_expr);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24134_it.get()._field_expr != nullptr)) {
			_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _24134_it.get()._field_expr);
		};
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24134_it.get()._field_next != nullptr)) {
			_22ab20917_st(_self_, _24134_it.get()._field_next);
		};
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_22ab81549_add_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab20e12_scope(_self_, _24134_it.get()._field_scope);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab37c70_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24134_it))));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab379c8_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24134_it))));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _22ab1c815_range_iter(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b8838_RangeIter> _27434_it) {
	{
		
		if ((_229a813e5_slc(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22dda7a36:;
			{
				_22ab1b825_range_index_iter(_self_, _27434_it);
			}
		}
		else if ((_229a81181_arr(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22dda7706:;
			{
				_22ab1b825_range_index_iter(_self_, _27434_it);
			}
		}
		else if ((_229a81d96_map(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22dda776c:;
			{
				_22ab1ba9a_range_hashmap_iter(_self_, _27434_it);
			}
		}
		else {
			_case_begin_22dda7690:;
			{
				_22ab1b825_range_index_iter(_self_, _27434_it);
			}
		}
		_match_end_22dda75b3:;
	};
}



inline void _22ab1ca8a_cont(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b8c34_ContSt> _28724_c) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab37c70_iter_next(_28724_c.get()._field_it));
}



inline void _22ab1cd10_label(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b93c7_Label> _29225_l) {
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab38017_label(_29225_l.get()._field_ident));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _22ab1d085_goto_st(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b96b3_GotoSt> _29727_gt) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab38017_label(_29727_gt.get()._field_ident));
}



inline void _22ab1d30a_postfix(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b9a6a_Postfix> _30231_p) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
	_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
	_22ab80ca7_write(_self_.get()._field_oc, _30231_p.get()._field_op);
}



inline void _22ab1d580_assign(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b9edd_Assign> _30930_a) {
	_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_l.get()._field_model);
	_22ab80ca7_write(_self_.get()._field_oc, _30930_a.get()._field_op.get()._field_kind);
	_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_r.get()._field_model);
}



inline void _22ab1d805_multi_assign(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299ba395_MultiAssign> _31536_a) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _31536_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_22ddb1c3d:;
		if (it != expr.end()) {
			jule::I64 _31714_i = it - expr.begin();
			jule::Any _31721_l = *it;
			{
				if ((_31721_l == nullptr)) {
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _31721_l);
				};
				if (((_31536_a.get()._field_l.len() - _31714_i) > 1LL)) {
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_22ddb1c3d:;
			++it;
			_31714_i++;
			goto _iter_begin_22ddb1c3d;
		}
		_iter_end_22ddb1c3d:;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _31536_a.get()._field_r);
}



inline jule::Fn<void(void)> _22ab1db13_match_expr(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299ba8d4_Match> _33134_m) {
	if ((!(_229a53197_is_const(_33134_m.get()._field_expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_228dd9d37_is_bool(_33134_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_228dd798e_read_bool(_33134_m.get()._field_expr.get()._field_constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_22ab2ddcb_model(_self_.get()._field_oc.get()._field_ec, _33134_m.get()._field_expr.get()._field_model);
		});
	};
	return nullptr;
}



inline void _22ab1de32_case(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299ba8d4_Match> _34128_m, jule::Ptr<_2299bb42e_Case> _34143_c) {
	if (((_34143_c.get()._field_exprs.len() != 0LL) && (!(_2299bade0_is_generic_type_match(_34128_m.ptr()))))) {
		if (((_34128_m.get()._field_cases.len() > 0LL) && (_34128_m.get()._field_cases[0LL] == _34143_c))) {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _34143_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_22ddb9cce:;
			if (it != expr.end()) {
				jule::I64 _34818_i = it - expr.begin();
				jule::Ptr<_229a527d4_Data> _34825_expr = *it;
				{
					{
						
						if ((!(_34128_m.get()._field_type_match))) {
							_case_begin_22ddbc188:;
							{
								jule::Fn<void(void)> _35125_case_expr = _22ab1db13_match_expr(_self_, _34128_m);;
								if (_229a534a5_good_operand(_34128_m.get()._field_expr.ptr(), _34825_expr)) {
									if ((_35125_case_expr != nullptr)) {
										_35125_case_expr();
										_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
								} else {
									_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
									if ((_35125_case_expr != nullptr)) {
										_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_35125_case_expr();
									};
								};
							}
						}
						else {
							_case_begin_22ddbaae3:;
							{
								_22ab80ca7_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
								_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_22ddbaa16:;
					};
					if (((_34143_c.get()._field_exprs.len() - _34818_i) > 1LL)) {
						_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_22ddb9cce:;
				++it;
				_34818_i++;
				goto _iter_begin_22ddb9cce;
			}
			_iter_end_22ddb9cce:;
		};
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_34128_m.get()._field_default == _34143_c) && (_34128_m.get()._field_cases.len() != 0LL))) {
		_22ab82c87_indent(_self_.get()._field_oc);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_22ab81549_add_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab38556_case_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_34143_c))));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_34143_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_22ab82c87_indent(_self_.get()._field_oc);
		_22ab20e12_scope(_self_, _34143_c.get()._field_scope);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _22ab1e1a7_match_st(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299ba8d4_Match> _40032_m) {
	if (((_40032_m.get()._field_cases.len() == 0LL) && (_40032_m.get()._field_default == nullptr))) {
		return;;
	};
	jule::Bool _40513_generic_type_match = _2299bade0_is_generic_type_match(_40032_m.ptr());;
	if ((_40513_generic_type_match && ((_40032_m.get()._field_default == nullptr) || (_40032_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL)))) {
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_22ab81549_add_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	if (((!(_40513_generic_type_match)) && (!(_229a53197_is_const(_40032_m.get()._field_expr.ptr()))))) {
		if ((_2276e7547_COPY && _22ab214d9_is_copy_optimizable(_40032_m.get()._field_expr))) {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _40032_m.get()._field_expr.get()._field_model);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_22ab82c87_indent(_self_.get()._field_oc);
	};
	if ((_40032_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _40032_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_22ddcbac1:;
			if (it != expr.end()) {
				jule::Ptr<_2299bb42e_Case> _42925_c = *it;
				{
					if ((_42925_c == nullptr)) {
						goto _iter_next_22ddcbac1;
					};
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_22ab82c87_indent(_self_.get()._field_oc);
					_22ab1de32_case(_self_, _40032_m,_42925_c);
				}
				_iter_next_22ddcbac1:;
				++it;
				goto _iter_begin_22ddcbac1;
			}
			_iter_end_22ddcbac1:;
		};
	};
	if ((_40032_m.get()._field_default != nullptr)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_22ab1de32_case(_self_, _40032_m,_40032_m.get()._field_default);
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab382ae_match_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40032_m))));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _22ab1e42c_fall_st(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299bb9d4_FallSt> _45627_f) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab38556_case_begin(_45627_f.get()._field_dest_case));
}



inline void _22ab1e6a2_break_st(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b90db_BreakSt> _46128_b) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_46128_b.get()._field_it != 0LLU)) {
		_22ab80ca7_write(_self_.get()._field_oc, static__22ab379c8_iter_end(_46128_b.get()._field_it));
	} else {
		_22ab80ca7_write(_self_.get()._field_oc, static__22ab382ae_match_end(_46128_b.get()._field_mtch));
	};
}



inline void _22ab1e927_ret_with_vars(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299bbe57_RetSt> _47037_r) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_47037_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_47037_r.get()._field_func.get()._field_result));
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_47037_r.get()._field_vars.len() > 1LL)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _47037_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_22ddd7219:;
		if (it != expr.end()) {
			jule::I64 _48014_i = it - expr.begin();
			jule::Ptr<_229a0a4a1_Var> _48021_v = *it;
			{
				if (_2276b42b1_is_ignore_ident(_48021_v.get()._field_ident)) {
					_22ab2e64b_init_expr(_self_.get()._field_oc.get()._field_ec, _48021_v.get()._field_kind.get()._field_kind);
				} else {
					_22ab80ca7_write(_self_.get()._field_oc, static__22ab37489_var(_48021_v));
				};
				if (((_47037_r.get()._field_vars.len() - _48014_i) > 1LL)) {
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_22ddd7219:;
			++it;
			_48014_i++;
			goto _iter_begin_22ddd7219;
		}
		_iter_end_22ddd7219:;
	};
	if ((_47037_r.get()._field_vars.len() > 1LL)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_47037_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _22ab1eb9c_ret_tuple(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299bbe57_RetSt> _50033_r) {
	jule::Slice<jule::Ptr<_229a527d4_Data>> _50117_datas = _50033_r.get()._field_expr.operator jule::Ptr<_228de23e4_TupleExprModel>().get()._field_datas;;
	{
		auto &expr = _50033_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_22dddb6e6:;
		if (it != expr.end()) {
			jule::I64 _50214_i = it - expr.begin();
			jule::Ptr<_229a0a4a1_Var> _50221_v = *it;
			{
				if (_2276b42b1_is_ignore_ident(_50221_v.get()._field_ident)) {
					goto _iter_next_22dddb6e6;
				};
				jule::Any _50621_model = _50117_datas[_50214_i].get()._field_model;;
				if ((_50621_model == _50221_v)) {
					goto _iter_next_22dddb6e6;
				};
				_22ab80ca7_write(_self_.get()._field_oc, static__22ab37489_var(_50221_v));
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _50621_model);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_22ab82c87_indent(_self_.get()._field_oc);
			}
			_iter_next_22dddb6e6:;
			++it;
			_50214_i++;
			goto _iter_begin_22dddb6e6;
		}
		_iter_end_22dddb6e6:;
	};
	if (_50033_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_50033_r.get()._field_func.get()._field_result));
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _50117_datas;
		auto it = expr.begin();
		_iter_begin_22dde1773:;
		if (it != expr.end()) {
			jule::I64 _52714_i = it - expr.begin();
			jule::Ptr<_229a527d4_Data> _52721_d = *it;
			{
				jule::Ptr<_229a0a4a1_Var> _52821_v = _50033_r.get()._field_vars[_52714_i];;
				if (_2276b42b1_is_ignore_ident(_52821_v.get()._field_ident)) {
					_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _52721_d.get()._field_model);
				} else {
					_22ab80ca7_write(_self_.get()._field_oc, static__22ab37489_var(_52821_v));
				};
				if (((_50117_datas.len() - _52714_i) > 1LL)) {
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_22dde1773:;
			++it;
			_52714_i++;
			goto _iter_begin_22dde1773;
		}
		_iter_end_22dde1773:;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_50033_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _22ab1ee22_ret_with_exprs(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299bbe57_RetSt> _54538_r) {
	if ((_54538_r.get()._field_vars.len() > 1LL)) {
		_22ab1eb9c_ret_tuple(_self_, _54538_r);
		return;;
	};
	if ((_54538_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_229a0a4a1_Var> _55321_v = _54538_r.get()._field_vars[0LL];;
		if (((!(_2276b42b1_is_ignore_ident(_55321_v.get()._field_ident))) && (_54538_r.get()._field_expr != _55321_v))) {
			jule::Str _55521_ident = static__22ab37489_var(_55321_v);;
			_22ab80ca7_write(_self_.get()._field_oc, _55521_ident);
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_22ab82c87_indent(_self_.get()._field_oc);
			if (_54538_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_54538_r.get()._field_func.get()._field_result));
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_22ab80ca7_write(_self_.get()._field_oc, _55521_ident);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_22ab80ca7_write(_self_.get()._field_oc, _55521_ident);
			};
			return;;
		};
	};
	if (_54538_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_54538_r.get()._field_func.get()._field_result));
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
	return;;
}



inline void _22ab20197_ret_st(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299bbe57_RetSt> _58930_r) {
	if (((_58930_r.get()._field_expr == nullptr) && (_58930_r.get()._field_vars.len() == 0LL))) {
		if (_58930_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58930_r.get()._field_expr == nullptr)) {
		_22ab1e927_ret_with_vars(_self_, _58930_r);
		return;;
	};
	_22ab1ee22_ret_with_exprs(_self_, _58930_r);
}



inline void _22ab20692_var(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_229a0a4a1_Var> _62427_v) {
	if ((!(_62427_v.get()._field_constant))) {
		_22ab9e864_var(_self_.get()._field_oc, _62427_v);
	};
}



inline void _22ab20917_st(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Any _63126_st) {
	if ((_63126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63126_st };
		
		if (_match_expr.type_is<jule::Ptr<_2299b6c10_Scope>>()) {
			_case_begin_22de07b1e:;
			{
				_22ab20e12_scope(_self_, _63126_st.operator jule::Ptr<_2299b6c10_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
			_case_begin_22de077cd:;
			{
				_22ab20692_var(_self_, _63126_st.operator jule::Ptr<_229a0a4a1_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a527d4_Data>>()) {
			_case_begin_22de0823a:;
			{
				_22ab2e151_expr(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_229a527d4_Data>().get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b76e4_Conditional>>()) {
			_case_begin_22de082a1:;
			{
				_22ab1c095_conditional(_self_, _63126_st.operator jule::Ptr<_2299b76e4_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b79d0_InfIter>>()) {
			_case_begin_22de08317:;
			{
				_22ab1c31a_inf_iter(_self_, _63126_st.operator jule::Ptr<_2299b79d0_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b7e53_WhileIter>>()) {
			_case_begin_22de0837d:;
			{
				_22ab1c590_while_iter(_self_, _63126_st.operator jule::Ptr<_2299b7e53_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b8838_RangeIter>>()) {
			_case_begin_22de083e4:;
			{
				_22ab1c815_range_iter(_self_, _63126_st.operator jule::Ptr<_2299b8838_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b8c34_ContSt>>()) {
			_case_begin_22de0845a:;
			{
				_22ab1ca8a_cont(_self_, _63126_st.operator jule::Ptr<_2299b8c34_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b93c7_Label>>()) {
			_case_begin_22de084c1:;
			{
				_22ab1cd10_label(_self_, _63126_st.operator jule::Ptr<_2299b93c7_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b96b3_GotoSt>>()) {
			_case_begin_22de08537:;
			{
				_22ab1d085_goto_st(_self_, _63126_st.operator jule::Ptr<_2299b96b3_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b9a6a_Postfix>>()) {
			_case_begin_22de0859d:;
			{
				_22ab1d30a_postfix(_self_, _63126_st.operator jule::Ptr<_2299b9a6a_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b9edd_Assign>>()) {
			_case_begin_22de08614:;
			{
				_22ab1d580_assign(_self_, _63126_st.operator jule::Ptr<_2299b9edd_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299ba395_MultiAssign>>()) {
			_case_begin_22de0868b:;
			{
				_22ab1d805_multi_assign(_self_, _63126_st.operator jule::Ptr<_2299ba395_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299ba8d4_Match>>()) {
			_case_begin_22de08713:;
			{
				_22ab1e1a7_match_st(_self_, _63126_st.operator jule::Ptr<_2299ba8d4_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299bb9d4_FallSt>>()) {
			_case_begin_22de0878a:;
			{
				_22ab1e42c_fall_st(_self_, _63126_st.operator jule::Ptr<_2299bb9d4_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b90db_BreakSt>>()) {
			_case_begin_22de08812:;
			{
				_22ab1e6a2_break_st(_self_, _63126_st.operator jule::Ptr<_2299b90db_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299bbe57_RetSt>>()) {
			_case_begin_22de08889:;
			{
				_22ab20197_ret_st(_self_, _63126_st.operator jule::Ptr<_2299bbe57_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2285ee7d3_PushToSliceExprModel>>()) {
			_case_begin_22de08911:;
			{
				_22ab2bd63_push_to_slice(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_2285ee7d3_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228aa0a20_MutSlicingExprModel>>()) {
			_case_begin_22de08988:;
			{
				_22ab2d8d1_mut_slicing(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_228aa0a20_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_22772aa42_StrInsertBeginExprModel>>()) {
			_case_begin_22de08a10:;
			{
				_22ab2db56_str_insert_begin(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_22772aa42_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_22de07525:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_22de074c0:;
	};
}



inline void _22ab20b8c_scope_stmts(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b6c10_Scope>& _68136_s) {
	{
		auto &expr = _68136_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_22de13960:;
		if (it != expr.end()) {
			jule::Any _68221_st = *it;
			{
				_22ab82c87_indent(_self_.get()._field_oc);
				_22ab20917_st(_self_, _68221_st);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_22de13960:;
			++it;
			goto _iter_begin_22de13960;
		}
		_iter_end_22de13960:;
	};
}



inline void _22ab20e12_scope(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_2299b6c10_Scope> _69029_s) {
	_22ab81549_add_indent(_self_.get()._field_oc);
	if (_69029_s.get()._field_deferred) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_22ab20b8c_scope_stmts(_self_, _69029_s);
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69029_s.get()._field_deferred) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _22ab21187_func_scope(jule::Ptr<_22ab1ae84_ScopeCoder> _self_, jule::Ptr<_228de996d_FnIns> _70634_f) {
	if ((_70634_f.get()._field_scope == nullptr)) {
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_22ab81549_add_indent(_self_.get()._field_oc);
	if ((!(_228de722e_is_void(_70634_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_229a7d359_TypeKind>> _71321_types = _228dea452_types(_70634_f.ptr());;
		{
			auto &expr = _70634_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_22de19724:;
			if (it != expr.end()) {
				jule::I64 _71417_i = it - expr.begin();
				jule::Ptr<_2276b1a1c_Token> _71420_ident = *it;
				{
					if ((_2276b42b1_is_ignore_ident(_71420_ident.get()._field_kind) || _2276b4558_is_anon_ident(_71420_ident.get()._field_kind))) {
						goto _iter_next_22de19724;
					};
					_22ab82c87_indent(_self_.get()._field_oc);
					_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_71321_types[_71417_i]));
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_22ab80ca7_write(_self_.get()._field_oc, static__22ab35d7d_to_local(_71420_ident.get()._field_row,_71420_ident.get()._field_column,_71420_ident.get()._field_kind));
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_22ab2e64b_init_expr(_self_.get()._field_oc.get()._field_ec, _71321_types[_71417_i]);
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_22de19724:;
				++it;
				_71417_i++;
				goto _iter_begin_22de19724;
			}
			_iter_end_22de19724:;
		};
	};
	_22ab20b8c_scope_stmts(_self_, _70634_f.get()._field_scope);
	if ((_70634_f.get()._field_decl.get()._field_exceptional && _228de722e_is_void(_70634_f.get()._field_decl.ptr()))) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _22ab1ae84_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22ab23a08_ExprCoder> static__22ab23e04_new(jule::Ptr<_22ab9c950_ObjectCoder>& _9724_oc) {
	return jule::new_ptr<_22ab23a08_ExprCoder>(_22ab23a08_ExprCoder{._field_oc=_9724_oc});
}



inline void _22ab24179_string(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228d7b4d2_Const>& _10327_c) {
	jule::Str _10413_content = _228dd7c03_read_str(_10327_c.ptr());;
	if ((_10413_content.len() == 0LL)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10913_bytes = static_cast<jule::Slice<jule::U8>>(_10413_content);;
	jule::Str _11013_len = _2299347a4_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10913_bytes.len())),10LL);;
	jule::Str _11113_lit = _22ab30350_cstr_lit(_10913_bytes);;
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
	_22ab80ca7_write(_self_.get()._field_oc, _11113_lit);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_22ab80ca7_write(_self_.get()._field_oc, _11013_len);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab243ee_boolean(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228d7b4d2_Const>& _12028_c) {
	if (_228dd798e_read_bool(_12028_c.ptr())) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _22ab245ca_nil_lit(jule::Ptr<_22ab23a08_ExprCoder> _self_) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _22ab248d8_ftoa_special_cases(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::F64& _13239_x) {
	{
		
		if (_22987ec4e_is_nan(_13239_x)) {
			_case_begin_22de3916c:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_229887053_is_inf(_13239_x,1LL)) {
			_case_begin_22de38930:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_229887053_is_inf(_13239_x,-1LL)) {
			_case_begin_22de38996:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_22de388b9:;
			{
				return false;
			}
		}
		_match_end_22de387dc:;
	};
	return true;
}



inline void _22ab24b5d_float32(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228d7b4d2_Const>& _14628_c) {
	jule::F64 _14713_x = _228dd86a4_as_f64(_14628_c.ptr());;
	if (_22ab248d8_ftoa_special_cases(_self_, _14713_x)) {
		return;;
	};
	{
		
		if ((_14713_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_22de3bb42:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14713_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_22de3b845:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_22de3b1b3:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, _22ab3065d_ftoa(_14713_x,32LL));
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_22de3b57b:;
	};
}



inline void _22ab24dd3_float64(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228d7b4d2_Const>& _16528_c) {
	jule::F64 _16613_x = _228dd86a4_as_f64(_16528_c.ptr());;
	if (_22ab248d8_ftoa_special_cases(_self_, _16613_x)) {
		return;;
	};
	{
		
		if ((_16613_x == jule::MAX_F64)) {
			_case_begin_22de3eb89:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_16613_x == jule::MIN_F64)) {
			_case_begin_22de402e9:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_22de3e20a:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, _22ab3065d_ftoa(_16613_x,64LL));
			}
		}
		_match_end_22de3e5c3:;
	};
}



inline void _22ab25202_constant(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228d7b4d2_Const> _18432_c, jule::Bool _18443_fx32) {
	{
		
		if (_228dda09b_is_str(_18432_c.ptr())) {
			_case_begin_22de41b03:;
			{
				_22ab24179_string(_self_, _18432_c);
			}
		}
		else if (_228dd9d37_is_bool(_18432_c.ptr())) {
			_case_begin_22de41b69:;
			{
				_22ab243ee_boolean(_self_, _18432_c);
			}
		}
		else if (_228dda310_is_f64(_18432_c.ptr())) {
			_case_begin_22de41bd0:;
			{
				{
					
					if (_18443_fx32) {
						_case_begin_22de43dbe:;
						{
							_22ab24b5d_float32(_self_, _18432_c);
						}
					}
					else {
						_case_begin_22de43a28:;
						{
							_22ab24dd3_float64(_self_, _18432_c);
						}
					}
					_match_end_22de4394b:;
				};
			}
		}
		else if (_228dd985e_is_i64(_18432_c.ptr())) {
			_case_begin_22de41c46:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, _22ab30905_itoa(static_cast<jule::I64>(_228dd74b6_read_i64(_18432_c.ptr()))));
			}
		}
		else if (_228dd9ac3_is_u64(_18432_c.ptr())) {
			_case_begin_22de42593:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, _22ab30b9c_utoa(static_cast<jule::U64>(_228dd772a_read_u64(_18432_c.ptr()))));
			}
		}
		else if (_228dda574_is_nil(_18432_c.ptr())) {
			_case_begin_22de42609:;
			{
				_22ab245ca_nil_lit(_self_);
			}
		}
		else {
			_case_begin_22de41a8c:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_22de419b0:;
	};
}



inline void _22ab255ba_div_by_zero_binary(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_2276b1a1c_Token>& _20839_op, jule::Ptr<_228dde853_OperandExprModel>& _20856_l, jule::Ptr<_228dde853_OperandExprModel>& _20883_r) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20839_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_22de46ec1:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_22de47037:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_22de46dc2:;
	};
	if ((!(_23e74dd17_PRODUCTION))) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_22ab84173_loc_info(_self_.get()._field_oc, _20839_op);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_22ab2e151_expr(_self_, _20856_l.get()._field_model);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
	_22ab2e151_expr(_self_, _20883_r.get()._field_model);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab25840_unsafe_binary(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228ddea40_BinopExprModel> _23037_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
	_22ab2ddcb_model(_self_, _23037_m.get()._field_left.get()._field_model);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_22ab80ca7_write(_self_.get()._field_oc, _23037_m.get()._field_op.get()._field_kind);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_22ab2ddcb_model(_self_, _23037_m.get()._field_right.get()._field_model);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab25ab5_binary(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228ddea40_BinopExprModel> _24030_m) {
	{
		auto &_match_expr{ _24030_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_22de4d615:;
			{
				if ((_229a818bd_strct(_24030_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					_22ab255ba_div_by_zero_binary(_self_, _24030_m.get()._field_op,_24030_m.get()._field_left,_24030_m.get()._field_right);
					return;;
				};
			}
		}
		_match_end_22de4d55a:;
	};
	_22ab25840_unsafe_binary(_self_, _24030_m);
}



inline void _22ab25d3a_var(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_229a0a4a1_Var> _25227_m) {
	if (_25227_m.get()._field_cpp_linked) {
		jule::Ptr<_228ce499a_Directive> _25417_d = _22abaabd3_find_directive(_25227_m.get()._field_directives,jule::Str("namespace", 9));;
		if ((_25417_d != nullptr)) {
			_22ab80ca7_write(_self_.get()._field_oc, _22aba27ac_concat_all_parts(_25417_d.get()._field_args));
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab37489_var(_25227_m));
}



inline void _22ab260b0_structure_ins(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228d44c1a_StructIns> _26337_m) {
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba6c67_structure_ins(_26337_m));
}



inline void _22ab26335_unary(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228ddec2c_UnaryExprModel> _26729_m) {
	{
		auto &_match_expr{ _26729_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_22de53197:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_22ab2e151_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_22de5320d:;
			{
				if ((_23e74dd17_PRODUCTION || (_229a806d0_sptr(_26729_m.get()._field_expr.get()._field_kind.ptr()) == nullptr))) {
					goto _match_end_22de530dc;
				};
				_22ab2e151_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_22ab84173_loc_info(_self_.get()._field_oc, _26729_m.get()._field_op);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_22de530dc:;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
	_22ab80ca7_write(_self_.get()._field_oc, _26729_m.get()._field_op.get()._field_kind);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
	_22ab2e151_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _22ab265aa_structure_lit(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de0106_StructLitExprModel> _29137_m) {
	if (_29137_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab36e4a_structure_ins(_29137_m.get()._field_strct));
	if (_29137_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29137_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29137_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_22de5a7ed:;
			if (it != expr.end()) {
				jule::I64 _30417_i = it - expr.begin();
				jule::Ptr<_228d21037_FieldIns> _30420_f = *it;
				{
					{
						auto &expr = _29137_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_22de5b3c0:;
						if (it != expr.end()) {
							jule::Ptr<_228ddee19_StructArgExprModel> _30529_arg = *it;
							{
								if ((_30529_arg.get()._field_field == _30420_f)) {
									_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".", 1));
									_22ab80ca7_write(_self_.get()._field_oc, static__22ab371e2_field(_30529_arg.get()._field_field.get()._field_decl));
									_22ab80ca7_write(_self_.get()._field_oc, jule::Str("=", 1));
									_22ab2e151_expr(_self_, _30529_arg.get()._field_expr);
									if (((_29137_m.get()._field_strct.get()._field_fields.len() - _30417_i) > 1LL)) {
										_22ab80ca7_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_22de5a7ed;
								};
							}
							_iter_next_22de5b3c0:;
							++it;
							goto _iter_begin_22de5b3c0;
						}
						_iter_end_22de5b3c0:;
					};
				}
				_iter_next_22de5a7ed:;
				++it;
				_30417_i++;
				goto _iter_begin_22de5a7ed;
			}
			_iter_end_22de5a7ed:;
		};
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _22ab26830_alloc_structure(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de02e3_AllocStructLitExprModel> _32239_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab36e4a_structure_ins(_32239_m.get()._field_lit.get()._field_strct));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_22ab265aa_structure_lit(_self_, _32239_m.get()._field_lit);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab26aa5_casting(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de04d0_CastingExprModel> _33031_m) {
	{
		
		if (((_229a8046b_prim(_33031_m.get()._field_kind.ptr()) != nullptr) && _229a862c9_is_any(_229a8046b_prim(_33031_m.get()._field_kind.ptr()).ptr()))) {
			_case_begin_22de62272:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_33031_m.get()._field_kind));
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
				_22ab2ddcb_model(_self_, _33031_m.get()._field_expr);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_229a80944_ptr(_33031_m.get()._field_expr_kind.ptr()) != nullptr) || (_229a80944_ptr(_33031_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22de61e42:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("((", 2));
				_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_33031_m.get()._field_kind));
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_22ab2e151_expr(_self_, _33031_m.get()._field_expr);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_229a81b32_trt(_33031_m.get()._field_expr_kind.ptr()) != nullptr) || ((_229a8046b_prim(_33031_m.get()._field_expr_kind.ptr()) != nullptr) && _229a862c9_is_any(_229a8046b_prim(_33031_m.get()._field_expr_kind.ptr()).ptr())) || (_229a80e1c_tenm(_33031_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_22de61ea8:;
			{
				_22ab2ddcb_model(_self_, _33031_m.get()._field_expr);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_23e74dd17_PRODUCTION) {
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_33031_m.get()._field_kind));
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_229a806d0_sptr(_33031_m.get()._field_kind.ptr()) != nullptr)) {
						_22ab80ca7_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_229a806d0_sptr(_33031_m.get()._field_kind.ptr()).get()._field_elem));
					} else {
						_22ab80ca7_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_33031_m.get()._field_kind));
					};
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_22ab84173_loc_info(_self_.get()._field_oc, _33031_m.get()._field_token);
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_229a81b32_trt(_33031_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22de6201e:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_33031_m.get()._field_kind));
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
				_22ab2e151_expr(_self_, _33031_m.get()._field_expr);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_22ab80ca7_write(_self_.get()._field_oc, _2299348d6_itoa(static_cast<jule::I64>(_22ab7210b_find_type_offset(_self_.get()._field_oc.ptr(), _229a81b32_trt(_33031_m.get()._field_kind.ptr()),_33031_m.get()._field_expr_kind))));
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_22de61dcb:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_33031_m.get()._field_kind));
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_22ab2e151_expr(_self_, _33031_m.get()._field_expr);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_22de61cee:;
	};
}



inline void _22ab26d2a_args(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Slice<jule::Any> _38128_args) {
	if ((_38128_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38128_args;
		auto it = expr.begin();
		_iter_begin_22de72848:;
		if (it != expr.end()) {
			jule::I64 _38514_i = it - expr.begin();
			jule::Any _38521_a = *it;
			{
				_22ab2e151_expr(_self_, _38521_a);
				if (((_38128_args.len() - _38514_i) > 1LL)) {
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_22de72848:;
			++it;
			_38514_i++;
			goto _iter_begin_22de72848;
		}
		_iter_end_22de72848:;
	};
}



inline void _22ab270a0_model_for_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Any _39338_expr) {
	{
		auto &_match_expr{ _39338_expr };
		
		if (_match_expr.type_is<jule::Ptr<_228de996d_FnIns>>()) {
			_case_begin_22de74817:;
			{
				_22ab29d83_func_ins(_self_, _39338_expr.operator jule::Ptr<_228de996d_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1954_StructSubIdentExprModel>>()) {
			_case_begin_22de7488e:;
			{
				jule::Ptr<_228de1954_StructSubIdentExprModel> _39921_ssie = _39338_expr.operator jule::Ptr<_228de1954_StructSubIdentExprModel>();;
				if ((_39921_ssie.get()._field_method != nullptr)) {
					_22ab29d83_func_ins(_self_, _39921_ssie.get()._field_method);
					return;;
				};
			}
		}
		_match_end_22de74707:;
	};
	_22ab2ddcb_model(_self_, _39338_expr);
}



inline void _22ab27325_push_call_inf(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de06bc_FnCallExprModel>& _40834_m) {
	if ((_23e74dd17_PRODUCTION || ((!(_40834_m.get()._field_func.get()._field_anon)) && (!(_22ab3131d_is_builtin_call_has_debuginf(_40834_m)))))) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40834_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _40834_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_228de1954_StructSubIdentExprModel>>()) {
				_case_begin_22de77be4:;
				{
					if (_40834_m.get()._field_expr.operator jule::Ptr<_228de1954_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_22de77dc0;
				}
			}
			else {
				_case_begin_22de77dc0:;
				{
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_22de77c9e:;
		};
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_22ab84173_loc_info(_self_.get()._field_oc, _40834_m.get()._field_token);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40834_m.get()._field_args.len() != 0LL)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _22ab27633_is_wrapped(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de06bc_FnCallExprModel>& _43335_m) {
	if ((((!(_228dea6b6_is_builtin(_43335_m.get()._field_func.ptr()))) && (_43335_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _228de5aac_is_self(_43335_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43335_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_228de1954_StructSubIdentExprModel>>()) {
				_case_begin_22de7b92e:;
				{
					jule::Ptr<_228de1954_StructSubIdentExprModel> _43725_ssie = _43335_m.get()._field_expr.operator jule::Ptr<_228de1954_StructSubIdentExprModel>();;
					{
						
						if (_228de5d21_is_ref(_43335_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()) || (_229a806d0_sptr(_43725_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_22de7c259:;
							{
								goto _match_end_22de7c7dc;
							}
						}
						else {
							_case_begin_22de7c853:;
							{
								if ((_229a818bd_strct(_43725_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									if ((!(_43725_ssie.get()._field_expr.get()._field_lvalue))) {
										_22ab80ca7_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_22ab2ddcb_model(_self_, _43725_ssie.get()._field_expr.get()._field_model);
										_22ab80ca7_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_22de7c7dc:;
					};
				}
			}
			_match_end_22de7b720:;
		};
	};
	return false;
}



inline void _22ab278a8_pure_func_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de06bc_FnCallExprModel>& _45739_m) {
	jule::Bool _45813_wrapped = _22ab27633_is_wrapped(_self_, _45739_m);;
	if (_45739_m.get()._field_is_co) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_22ab270a0_model_for_call(_self_, _45739_m.get()._field_expr);
	if ((!(_228dea6b6_is_builtin(_45739_m.get()._field_func.ptr())))) {
		if ((_45739_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_45739_m.get()._field_func.get()._field_generics.len() > 0LL))) {
			if ((!(_22abab068_has_directive(_45739_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45739_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_22de83b78:;
					if (it != expr.end()) {
						jule::I64 _46726_i = it - expr.begin();
						jule::Ptr<_229a7bb2c_InsGeneric> _46733_g = *it;
						{
							_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_46733_g.get()._field_kind));
							if (((_45739_m.get()._field_func.get()._field_generics.len() - _46726_i) > 1LL)) {
								_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_22de83b78:;
						++it;
						_46726_i++;
						goto _iter_begin_22de83b78;
					}
					_iter_end_22de83b78:;
				};
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_22ab27325_push_call_inf(_self_, _45739_m);
	jule::Bool _47817_locinfo = false;;
	if ((((!(_228dea6b6_is_builtin(_45739_m.get()._field_func.ptr()))) && (_45739_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _228de5aac_is_self(_45739_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45739_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_228de1954_StructSubIdentExprModel>>()) {
				_case_begin_22de8288b:;
				{
					jule::Ptr<_228de1954_StructSubIdentExprModel> _48225_ssie = _45739_m.get()._field_expr.operator jule::Ptr<_228de1954_StructSubIdentExprModel>();;
					{
						
						if (_228de5d21_is_ref(_45739_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_22de8984e:;
							{
								_22ab2ddcb_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
							}
						}
						else if ((_229a806d0_sptr(_48225_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_22de89db0:;
							{
								_22ab2ddcb_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
								_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_23e74dd17_PRODUCTION))) {
									_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_22ab84173_loc_info(_self_.get()._field_oc, _45739_m.get()._field_token);
									_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_22de884a7:;
							{
								if ((_229a818bd_strct(_48225_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_22ab80ca7_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45813_wrapped) {
									_22ab80ca7_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_22ab2ddcb_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
								};
							}
						}
						_match_end_22de88441:;
					};
					if ((_45739_m.get()._field_args.len() > 0LL)) {
						_22ab80ca7_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_228de1536_TraitSubIdentExprModel>>()) {
				_case_begin_22de8752d:;
				{
					_22ab2ddcb_model(_self_, _45739_m.get()._field_expr.operator jule::Ptr<_228de1536_TraitSubIdentExprModel>().get()._field_expr);
					if ((!(_23e74dd17_PRODUCTION))) {
						_47817_locinfo=true;
					};
					if ((_45739_m.get()._field_args.len() > 0LL)) {
						_22ab80ca7_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_22de873b8:;
		};
	};
	_22ab26d2a_args(_self_, _45739_m.get()._field_args);
	if (_47817_locinfo) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_22ab84173_loc_info(_self_.get()._field_oc, _45739_m.get()._field_token);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45813_wrapped) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45739_m.get()._field_is_co) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _22ab27b2d_func_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de06bc_FnCallExprModel> _53633_m) {
	if (((_228dea6b6_is_builtin(_53633_m.get()._field_func.ptr()) || (!(_53633_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_53633_m.get()._field_except != nullptr) && (_53633_m.get()._field_except.get()._field_stmts.len() == 0LL)))) {
		_22ab278a8_pure_func_call(_self_, _53633_m);
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_22ab81549_add_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_22ab278a8_pure_func_call(_self_, _53633_m);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_22ab82c87_indent(_self_.get()._field_oc);
	if ((_53633_m.get()._field_except != nullptr)) {
		if (((_53633_m.get()._field_func.get()._field_result == nullptr) || (!(_53633_m.get()._field_assigned)))) {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_22ab20e12_scope(_self_.get()._field_oc.get()._field_sc, _53633_m.get()._field_except);
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55821_forwarded = _22ab31054_is_forwarded(_53633_m.get()._field_except);;
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55821_forwarded) {
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_22ab20e12_scope(_self_.get()._field_oc.get()._field_sc, _53633_m.get()._field_except);
			if (_55821_forwarded) {
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_22ab2e64b_init_expr(_self_, _53633_m.get()._field_func.get()._field_result);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_22ab82539_done_indent(_self_.get()._field_oc);
	} else {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_22ab84173_loc_info(_self_.get()._field_oc, _53633_m.get()._field_token);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_228de722e_is_void(_53633_m.get()._field_func.get()._field_decl.ptr())))) {
			_22ab82c87_indent(_self_.get()._field_oc);
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_22ab82539_done_indent(_self_.get()._field_oc);
	};
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _22ab27da3_slice(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de08a9_SliceExprModel> _58729_m) {
	if ((_58729_m.get()._field_elems.len() == 0LL)) {
		_22ab80ca7_write(_self_.get()._field_oc, static__22aba5b9a_as_slice(_58729_m.get()._field_elem_kind));
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba5b9a_as_slice(_58729_m.get()._field_elem_kind));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_22ab26d2a_args(_self_, _58729_m.get()._field_elems);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _22ab28128_indexing(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de0a96_IndexingExprModel> _59932_m) {
	_22ab2ddcb_model(_self_, _59932_m.get()._field_expr.get()._field_model);
	{
		
		if (_23e74dd17_PRODUCTION || (_229a80944_ptr(_59932_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_229a81d96_map(_59932_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22dea7ecc:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("[", 1));
				_22ab2e151_expr(_self_, _59932_m.get()._field_index.get()._field_model);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_22dea876e:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_22ab84173_loc_info(_self_.get()._field_oc, _59932_m.get()._field_token);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_22ab2e151_expr(_self_, _59932_m.get()._field_index.get()._field_model);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_22dea8708:;
	};
}



inline void _22ab2839d_unsafe_indexing(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228203294_UnsafeIndexingExprModel> _61839_m) {
	_22ab2ddcb_model(_self_, _61839_m.get()._field_node.get()._field_expr.get()._field_model);
	{
		
		if (_23e74dd17_PRODUCTION || (_229a80944_ptr(_61839_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_229a81d96_map(_61839_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22deab376:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("[", 1));
				_22ab2e151_expr(_self_, _61839_m.get()._field_node.get()._field_index.get()._field_model);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_22deacc5c:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_22ab2e151_expr(_self_, _61839_m.get()._field_node.get()._field_index.get()._field_model);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_22deacbe6:;
	};
}



inline void _22ab28623_anon_func(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de0c83_AnonFnExprModel> _63533_m) {
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba80cb_func(_63533_m.get()._field_func));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_22ab9e2c0_params_ins(_self_.get()._field_oc, _63533_m.get()._field_func.get()._field_params);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba7a8c_func_ins_result(_63533_m.get()._field_func));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_22ab21187_func_scope(_self_.get()._field_oc.get()._field_sc, _63533_m.get()._field_func);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab28898_map(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de115c_MapExprModel> _64627_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_64627_m.get()._field_key_kind));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_64627_m.get()._field_val_kind));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64627_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _64627_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_22deb6727:;
			if (it != expr.end()) {
				jule::I64 _65318_i = it - expr.begin();
				jule::Ptr<_228de0e70_KeyValPairExprModel> _65325_pair = *it;
				{
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str("{", 1));
					_22ab2e151_expr(_self_, _65325_pair.get()._field_key);
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
					_22ab2e151_expr(_self_, _65325_pair.get()._field_val);
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64627_m.get()._field_entries.len() - _65318_i) > 1LL)) {
						_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_22deb6727:;
				++it;
				_65318_i++;
				goto _iter_begin_22deb6727;
			}
			_iter_end_22deb6727:;
		};
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _22ab28b1d_slicing(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de1349_SlicingExprModel> _66731_m) {
	_22ab2ddcb_model(_self_, _66731_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_23e74dd17_PRODUCTION))) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_22ab84173_loc_info(_self_.get()._field_oc, _66731_m.get()._field_token);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_22ab2e151_expr(_self_, _66731_m.get()._field_left);
	if ((_66731_m.get()._field_right != nullptr)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
		_22ab2e151_expr(_self_, _66731_m.get()._field_right);
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab28d93_trait_sub(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de1536_TraitSubIdentExprModel> _68333_m) {
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab36664_trait_decl(_68333_m.get()._field_trt));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_22ab2ddcb_model(_self_, _68333_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab36125_func(_68333_m.get()._field_method));
}



inline void _22ab29118_structure_sub(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de1954_StructSubIdentExprModel> _69237_m) {
	_22ab2ddcb_model(_self_, _69237_m.get()._field_expr.get()._field_model);
	if ((_69237_m.get()._field_field != nullptr)) {
		if ((_229a80944_ptr(_69237_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_229a806d0_sptr(_69237_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_23e74dd17_PRODUCTION))) {
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_22ab84173_loc_info(_self_.get()._field_oc, _69237_m.get()._field_token);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_22ab80ca7_write(_self_.get()._field_oc, static__22ab371e2_field(_69237_m.get()._field_field.get()._field_decl));
	};
}



inline void _22ab2938d_common_ident(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de201a_CommonIdentExprModel> _71232_m) {
	_22ab80ca7_write(_self_.get()._field_oc, _71232_m.get()._field_ident);
}



inline void _22ab29613_common_sub(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de2207_CommonSubIdentExprModel> _71634_m) {
	_22ab2ddcb_model(_self_, _71634_m.get()._field_expr);
	{
		
		if ((_229a80944_ptr(_71634_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_22dec5acc:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_229a806d0_sptr(_71634_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_22dec6308:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_23e74dd17_PRODUCTION))) {
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_22ab84173_loc_info(_self_.get()._field_oc, _71634_m.get()._field_token);
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_22dec6292:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_22dec622b:;
	};
	_22ab80ca7_write(_self_.get()._field_oc, _71634_m.get()._field_ident);
}



inline void _22ab29888_array(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de1d2d_ArrayExprModel> _73529_m) {
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba700e_array(_73529_m.get()._field_kind));
	if ((_73529_m.get()._field_elems.len() == 0LL)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73529_m.get()._field_elems.len() == 2LL) && (_73529_m.get()._field_elems[1LL] == nullptr))) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
		_22ab2e151_expr(_self_, _73529_m.get()._field_elems[0LL]);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("({", 2));
	_22ab26d2a_args(_self_, _73529_m.get()._field_elems);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _22ab29b0d_func_ins_common(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de996d_FnIns> _75839_m) {
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba80cb_func(_75839_m));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
	_22ab29d83_func_ins(_self_, _75839_m);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab29d83_func_ins(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de996d_FnIns> _76532_m) {
	if (((_76532_m.get()._field_decl != nullptr) && _76532_m.get()._field_decl.get()._field_cpp_linked)) {
		jule::Ptr<_228ce499a_Directive> _76717_d = _22abaabd3_find_directive(_76532_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_76717_d != nullptr)) {
			_22ab80ca7_write(_self_.get()._field_oc, _22aba27ac_concat_all_parts(_76717_d.get()._field_args));
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab363bc_func_ins(_76532_m));
}



inline void _22ab2a108_tuple(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de23e4_TupleExprModel> _77629_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77629_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_22ded3953:;
		if (it != expr.end()) {
			jule::I64 _77814_i = it - expr.begin();
			jule::Ptr<_229a527d4_Data> _77821_d = *it;
			{
				_22ab2e151_expr(_self_, _77821_d.get()._field_model);
				if (((_77629_m.get()._field_datas.len() - _77814_i) > 1LL)) {
					_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_22ded3953:;
			++it;
			_77814_i++;
			goto _iter_begin_22ded3953;
		}
		_iter_end_22ded3953:;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2a37d_new_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de2b97_BuiltinNewCallExprModel> _78732_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_78732_m.get()._field_kind));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78732_m.get()._field_init != nullptr)) {
		_22ab2e151_expr(_self_, _78732_m.get()._field_init);
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2a603_out_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de25d1_BuiltinOutCallExprModel> _79732_m) {
	if ((_79732_m.get()._field_debug && _23e74dd17_PRODUCTION)) {
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_22ab2e151_expr(_self_, _79732_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2a878_outln_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel> _80634_m) {
	if ((_80634_m.get()._field_debug && _23e74dd17_PRODUCTION)) {
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_22ab2e151_expr(_self_, _80634_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2aaed_panic_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de2d84_BuiltinPanicCallExprModel> _81534_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_22ab2e151_expr(_self_, _81534_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_22ab84173_loc_info(_self_.get()._field_oc, _81534_m.get()._field_token);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _22ab2ad73_assert_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de3071_BuiltinAssertCallExprModel> _82335_m) {
	if (_23e74dd17_PRODUCTION) {
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_22ab2e151_expr(_self_, _82335_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_22ab80ca7_write(_self_.get()._field_oc, _22ab30350_cstr_lit(static_cast<jule::Slice<jule::U8>>(_82335_m.get()._field_log)));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_22ab84173_loc_info(_self_.get()._field_oc, _82335_m.get()._field_token);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _22ab2b0e8_error_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de3824_BuiltinErrorCallExprModel> _83634_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_228de722e_is_void(_83634_m.get()._field_func.get()._field_decl.ptr())) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_83634_m.get()._field_func.get()._field_result));
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_22ab2e151_expr(_self_, _83634_m.get()._field_err);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2b36d_copy_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de3637_BuiltinCopyCallExprModel> _84933_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_22ab2ddcb_model(_self_, _84933_m.get()._field_dest.get()._field_model);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_229a8046b_prim(_84933_m.get()._field_dest.get()._field_kind.ptr()) != nullptr)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_22ab2ddcb_model(_self_, _84933_m.get()._field_src.get()._field_model);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_229a8046b_prim(_84933_m.get()._field_src.get()._field_kind.ptr()) != nullptr)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2b5e3_make_call_slice(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de325d_BuiltinMakeCallExprModel>& _86540_m) {
	jule::Ptr<_229a87022_Slc> _86617_slice = _229a813e5_slc(_86540_m.get()._field_kind.ptr());;
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_86540_m.get()._field_kind));
	if ((_229a80ba8_enm(_86617_slice.get()._field_elem.ptr()) != nullptr)) {
		if ((_86540_m.get()._field_cap != nullptr)) {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_22ab80ca7_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_22ab2e151_expr(_self_, _86540_m.get()._field_len);
	if ((_86540_m.get()._field_cap != nullptr)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
		_22ab2e151_expr(_self_, _86540_m.get()._field_cap);
	};
	if ((_229a80ba8_enm(_86617_slice.get()._field_elem.ptr()) != nullptr)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
		_22ab2e64b_init_expr(_self_, _86617_slice.get()._field_elem);
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2b868_make_call_str(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de325d_BuiltinMakeCallExprModel>& _89138_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_22ab2e151_expr(_self_, _89138_m.get()._field_len);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2badd_make_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de325d_BuiltinMakeCallExprModel> _89833_m) {
	if ((_229a813e5_slc(_89833_m.get()._field_kind.ptr()) != nullptr)) {
		_22ab2b5e3_make_call_slice(_self_, _89833_m);
		return;;
	};
	_22ab2b868_make_call_str(_self_, _89833_m);
}



inline void _22ab2bd63_push_to_slice(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_2285ee7d3_PushToSliceExprModel> _90637_m) {
	jule::I64 _90713_n = _self_.get()._field_oc.get()._field_obj.len();;
	_22ab2ddcb_model(_self_, _90637_m.get()._field_dest);
	jule::Str _90913_dest = _self_.get()._field_oc.get()._field_obj.slice(_90713_n);;
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_22ab80ca7_write(_self_.get()._field_oc, _90913_dest);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
	_22ab80ca7_write(_self_.get()._field_oc, _2299348d6_itoa(static_cast<jule::I64>(_90637_m.get()._field_elems.get()._field_elems.len())));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90637_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_22e0038a7:;
		if (it != expr.end()) {
			jule::Any _91621_e = *it;
			{
				_22ab80ca7_write(_self_.get()._field_oc, _90913_dest);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_22ab2ddcb_model(_self_, _91621_e);
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_22e0038a7:;
			++it;
			goto _iter_begin_22e0038a7;
		}
		_iter_end_22e0038a7:;
	};
}



inline void _22ab2c0d8_append_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de344a_BuiltinAppendCallExprModel> _92535_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_22ab2ddcb_model(_self_, _92535_m.get()._field_dest);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
	_22ab2ddcb_model(_self_, _92535_m.get()._field_elements);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2c35d_clone_call(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de29aa_BuiltinCloneCallExprModel> _93334_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_22ab2ddcb_model(_self_, _93334_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2c5d3_sizeof(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de1723_SizeofExprModel> _93930_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_22ab2ddcb_model(_self_, _93930_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2c858_alignof(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de3e84_AlignofExprModel> _94531_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_22ab2ddcb_model(_self_, _94531_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _22ab2cb66_rune_lit(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de4171_RuneExprModel> _95128_m) {
	if ((_95128_m.get()._field_code <= 127LL)) {
		jule::Str _95321_b = _22ab2ec89_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95128_m.get()._field_code)));;
		if ((_95321_b == jule::Str("'", 1))) {
			_95321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95321_b) + jule::Str("'", 1));
	};
	return _22ab30905_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95128_m.get()._field_code)));
}



inline void _22ab2cddb_structure_static(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de1b41_StructStaticIdentExprModel> _96240_m) {
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab363bc_func_ins(_96240_m.get()._field_method));
}



inline void _22ab2d161_integrated_to_str(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de435d_IntegratedToStrExprModel> _96641_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_22ab2ddcb_model(_self_, _96641_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _22ab2d3d6_backend_emit(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de454a_BackendEmitExprModel> _97236_m) {
	if ((_97236_m.get()._field_exprs.len() == 0LL)) {
		_22ab80ca7_write(_self_.get()._field_oc, _97236_m.get()._field_code);
		return;;
	};
	jule::I64 _97713_n = _self_.get()._field_oc.get()._field_obj.len();;
	jule::Slice<jule::Any> _97817_args = jule::Slice<jule::Any>::alloc(_97236_m.get()._field_exprs.len());;
	{
		auto &expr = _97236_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_22e011343:;
		if (it != expr.end()) {
			jule::I64 _97914_i = it - expr.begin();
			jule::Any _97921_expr = *it;
			{
				_22ab2e151_expr(_self_, _97921_expr);
				_97817_args[_97914_i]=jule::Any(_self_.get()._field_oc.get()._field_obj.slice(_97713_n));
				_self_.get()._field_oc.get()._field_obj=_self_.get()._field_oc.get()._field_obj.slice(0LL,_97713_n);
			}
			_iter_next_22e011343:;
			++it;
			_97914_i++;
			goto _iter_begin_22e011343;
		}
		_iter_end_22e011343:;
	};
	_22ab80ca7_write(_self_.get()._field_oc, _229b35026_format(_97236_m.get()._field_code,jule::Any(_97817_args)));
}



inline void _22ab2d65b_free(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228de4737_FreeExprModel> _98728_m) {
	_22ab2e151_expr(_self_, _98728_m.get()._field_expr);
	if (_23e74d5db_RC) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _22ab2d8d1_mut_slicing(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_228aa0a20_MutSlicingExprModel> _99635_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
	_22ab2ddcb_model(_self_, _99635_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_23e74dd17_PRODUCTION))) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_22ab84173_loc_info(_self_.get()._field_oc, _99635_m.get()._field_token);
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_22ab2e151_expr(_self_, _99635_m.get()._field_left);
	if ((_99635_m.get()._field_right != nullptr)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str(",", 1));
		_22ab2e151_expr(_self_, _99635_m.get()._field_right);
	};
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _22ab2db56_str_insert_begin(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_22772aa42_StrInsertBeginExprModel> _101340_m) {
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(", 1));
	_22ab2ddcb_model(_self_, _101340_m.get()._field_dest);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_22ab2ddcb_model(_self_, _101340_m.get()._field_expr);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _22ab2ddcb_model(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Any _102129_m) {
	{
		auto &_match_expr{ _102129_m };
		
		if (_match_expr.type_is<jule::Ptr<_229a7d359_TypeKind>>()) {
			_case_begin_22e01a3d5:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_102129_m.operator jule::Ptr<_229a7d359_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d7b4d2_Const>>()) {
			_case_begin_22e01a6b0:;
			{
				_22ab25202_constant(_self_, _102129_m.operator jule::Ptr<_228d7b4d2_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
			_case_begin_22e01a726:;
			{
				_22ab25d3a_var(_self_, _102129_m.operator jule::Ptr<_229a0a4a1_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d44c1a_StructIns>>()) {
			_case_begin_22e01a78c:;
			{
				_22ab260b0_structure_ins(_self_, _102129_m.operator jule::Ptr<_228d44c1a_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de996d_FnIns>>()) {
			_case_begin_22e01a803:;
			{
				_22ab29b0d_func_ins_common(_self_, _102129_m.operator jule::Ptr<_228de996d_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2276dd395_UnsafeBinopExprModel>>()) {
			_case_begin_22e01b31a:;
			{
				_22ab25840_unsafe_binary(_self_, _102129_m.operator jule::Ptr<_2276dd395_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228ddea40_BinopExprModel>>()) {
			_case_begin_22e01b381:;
			{
				_22ab25ab5_binary(_self_, _102129_m.operator jule::Ptr<_228ddea40_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228ddec2c_UnaryExprModel>>()) {
			_case_begin_22e01b3e7:;
			{
				_22ab26335_unary(_self_, _102129_m.operator jule::Ptr<_228ddec2c_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de0106_StructLitExprModel>>()) {
			_case_begin_22e01b45d:;
			{
				_22ab265aa_structure_lit(_self_, _102129_m.operator jule::Ptr<_228de0106_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de02e3_AllocStructLitExprModel>>()) {
			_case_begin_22e01b4c4:;
			{
				_22ab26830_alloc_structure(_self_, _102129_m.operator jule::Ptr<_228de02e3_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de04d0_CastingExprModel>>()) {
			_case_begin_22e01b53a:;
			{
				_22ab26aa5_casting(_self_, _102129_m.operator jule::Ptr<_228de04d0_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de06bc_FnCallExprModel>>()) {
			_case_begin_22e01b5a1:;
			{
				_22ab27b2d_func_call(_self_, _102129_m.operator jule::Ptr<_228de06bc_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de08a9_SliceExprModel>>()) {
			_case_begin_22e01b617:;
			{
				_22ab27da3_slice(_self_, _102129_m.operator jule::Ptr<_228de08a9_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1d2d_ArrayExprModel>>()) {
			_case_begin_22e01b67d:;
			{
				_22ab29888_array(_self_, _102129_m.operator jule::Ptr<_228de1d2d_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228203294_UnsafeIndexingExprModel>>()) {
			_case_begin_22e01b6e4:;
			{
				_22ab2839d_unsafe_indexing(_self_, _102129_m.operator jule::Ptr<_228203294_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de0a96_IndexingExprModel>>()) {
			_case_begin_22e01b75a:;
			{
				_22ab28128_indexing(_self_, _102129_m.operator jule::Ptr<_228de0a96_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de0c83_AnonFnExprModel>>()) {
			_case_begin_22e01b7c1:;
			{
				_22ab28623_anon_func(_self_, _102129_m.operator jule::Ptr<_228de0c83_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de115c_MapExprModel>>()) {
			_case_begin_22e01b837:;
			{
				_22ab28898_map(_self_, _102129_m.operator jule::Ptr<_228de115c_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1349_SlicingExprModel>>()) {
			_case_begin_22e01b89d:;
			{
				_22ab28b1d_slicing(_self_, _102129_m.operator jule::Ptr<_228de1349_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1536_TraitSubIdentExprModel>>()) {
			_case_begin_22e01b914:;
			{
				_22ab28d93_trait_sub(_self_, _102129_m.operator jule::Ptr<_228de1536_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1954_StructSubIdentExprModel>>()) {
			_case_begin_22e01b98b:;
			{
				_22ab29118_structure_sub(_self_, _102129_m.operator jule::Ptr<_228de1954_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de201a_CommonIdentExprModel>>()) {
			_case_begin_22e01ba13:;
			{
				_22ab2938d_common_ident(_self_, _102129_m.operator jule::Ptr<_228de201a_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de2207_CommonSubIdentExprModel>>()) {
			_case_begin_22e01ba8a:;
			{
				_22ab29613_common_sub(_self_, _102129_m.operator jule::Ptr<_228de2207_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de23e4_TupleExprModel>>()) {
			_case_begin_22e01bb12:;
			{
				_22ab2a108_tuple(_self_, _102129_m.operator jule::Ptr<_228de23e4_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de25d1_BuiltinOutCallExprModel>>()) {
			_case_begin_22e01bb89:;
			{
				_22ab2a603_out_call(_self_, _102129_m.operator jule::Ptr<_228de25d1_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel>>()) {
			_case_begin_22e01bc11:;
			{
				_22ab2a878_outln_call(_self_, _102129_m.operator jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de2b97_BuiltinNewCallExprModel>>()) {
			_case_begin_22e01bc88:;
			{
				_22ab2a37d_new_call(_self_, _102129_m.operator jule::Ptr<_228de2b97_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>>()) {
			_case_begin_22e01bd10:;
			{
				_22ab2aaed_panic_call(_self_, _102129_m.operator jule::Ptr<_228de2d84_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de3071_BuiltinAssertCallExprModel>>()) {
			_case_begin_22e01bd87:;
			{
				_22ab2ad73_assert_call(_self_, _102129_m.operator jule::Ptr<_228de3071_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de3824_BuiltinErrorCallExprModel>>()) {
			_case_begin_22e01be0e:;
			{
				_22ab2b0e8_error_call(_self_, _102129_m.operator jule::Ptr<_228de3824_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de325d_BuiltinMakeCallExprModel>>()) {
			_case_begin_22e01be86:;
			{
				_22ab2badd_make_call(_self_, _102129_m.operator jule::Ptr<_228de325d_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de344a_BuiltinAppendCallExprModel>>()) {
			_case_begin_22e01c00d:;
			{
				_22ab2c0d8_append_call(_self_, _102129_m.operator jule::Ptr<_228de344a_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de29aa_BuiltinCloneCallExprModel>>()) {
			_case_begin_22e01c085:;
			{
				_22ab2c35d_clone_call(_self_, _102129_m.operator jule::Ptr<_228de29aa_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de3637_BuiltinCopyCallExprModel>>()) {
			_case_begin_22e01c10c:;
			{
				_22ab2b36d_copy_call(_self_, _102129_m.operator jule::Ptr<_228de3637_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1723_SizeofExprModel>>()) {
			_case_begin_22e01c184:;
			{
				_22ab2c5d3_sizeof(_self_, _102129_m.operator jule::Ptr<_228de1723_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de3e84_AlignofExprModel>>()) {
			_case_begin_22e01c20b:;
			{
				_22ab2c858_alignof(_self_, _102129_m.operator jule::Ptr<_228de3e84_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de4171_RuneExprModel>>()) {
			_case_begin_22e01c283:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, _22ab2cb66_rune_lit(_self_, _102129_m.operator jule::Ptr<_228de4171_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1b41_StructStaticIdentExprModel>>()) {
			_case_begin_22e01c30a:;
			{
				_22ab2cddb_structure_static(_self_, _102129_m.operator jule::Ptr<_228de1b41_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de435d_IntegratedToStrExprModel>>()) {
			_case_begin_22e01c382:;
			{
				_22ab2d161_integrated_to_str(_self_, _102129_m.operator jule::Ptr<_228de435d_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de454a_BackendEmitExprModel>>()) {
			_case_begin_22e01c409:;
			{
				_22ab2d3d6_backend_emit(_self_, _102129_m.operator jule::Ptr<_228de454a_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de4737_FreeExprModel>>()) {
			_case_begin_22e01c481:;
			{
				_22ab2d65b_free(_self_, _102129_m.operator jule::Ptr<_228de4737_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228aa0a20_MutSlicingExprModel>>()) {
			_case_begin_22e01c508:;
			{
				_22ab2d8d1_mut_slicing(_self_, _102129_m.operator jule::Ptr<_228aa0a20_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_22772aa42_StrInsertBeginExprModel>>()) {
			_case_begin_22e01c580:;
			{
				_22ab2db56_str_insert_begin(_self_, _102129_m.operator jule::Ptr<_22772aa42_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_22e01a55b:;
			{
				_22ab80ca7_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_22e01a47e:;
	};
}



inline void _22ab2e151_expr(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Any _111428_e) {
	_22ab2ddcb_model(_self_, _111428_e);
}



inline void _22ab2e3c6_val(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_229a5385c_Value> _111827_v) {
	if (_229a53197_is_const(_111827_v.get()._field_data.ptr())) {
		_22ab25202_constant(_self_, _111827_v.get()._field_data.get()._field_constant,((_111827_v.get()._field_data.get()._field_kind != nullptr) && _229a850db_is_f32(_229a8046b_prim(_111827_v.get()._field_data.get()._field_kind.ptr()).ptr())));
		return;;
	};
	_22ab2e151_expr(_self_, _111827_v.get()._field_data.get()._field_model);
}



inline void _22ab2e64b_init_expr(jule::Ptr<_22ab23a08_ExprCoder> _self_, jule::Ptr<_229a7d359_TypeKind> _112633_t) {
	if ((_229a80944_ptr(_112633_t.ptr()) != nullptr)) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_228e0dcc3_Enum> _113117_enm = _229a80ba8_enm(_112633_t.ptr());;
	if ((_113117_enm != nullptr)) {
		_22ab2e3c6_val(_self_, _113117_enm.get()._field_items[0LL].get()._field_value);
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba8373_kind(_112633_t));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _22ab23a08_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__22ab31bae_clone_func_decl(jule::Ptr<_228d188c0_Struct>& _1032_s) {
	jule::Str _1117_obj = static__22aba69c0_structure(_1032_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__22ab31e56_clone_func_def(jule::Ptr<_228d188c0_Struct>& _1631_s) {
	jule::Str _1717_obj = static__22aba69c0_structure(_1631_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _22ab31906_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22ab32d36_TestCoder> static__22ab332a9_new(jule::Ptr<_22ab9c950_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_22ab32d36_TestCoder>(_22ab32d36_TestCoder{._field_oc=_2828_oc});
}



inline jule::Ptr<_2299d5646_ImportInfo> _22ab3351d_find_testing_package(jule::Ptr<_22ab32d36_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_22e0397de:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_22e0397de:;
			++it;
			goto _iter_begin_22e0397de;
		}
		_iter_end_22e0397de:;
	};
	return nullptr;
}



inline void _22ab33793_append_test(jule::Ptr<_22ab32d36_TestCoder> _self_, jule::Ptr<_228de996d_FnIns> _4335_f) {
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab33e58_call_tm_reset(_self_);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_22ab80ca7_write(_self_.get()._field_oc, _22ab30350_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4335_f.get()._field_decl.get()._field_ident)));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab363bc_func_ins(_4335_f));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _22ab33a18_append_package_tests(jule::Ptr<_22ab32d36_TestCoder> _self_, jule::Ptr<_2299d85a0_Package>& _6045_p) {
	{
		auto &expr = _6045_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22e040581:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_22e040e22:;
					if (it != expr.end()) {
						jule::Ptr<_228de6cbc_Fn> _6225_f = *it;
						{
							if (_22abab068_has_directive(_6225_f.get()._field_directives,jule::Str("test", 4))) {
								_22ab33793_append_test(_self_, _6225_f.get()._field_instances[0LL]);
							};
						}
						_iter_next_22e040e22:;
						++it;
						goto _iter_begin_22e040e22;
					}
					_iter_end_22e040e22:;
				};
			}
			_iter_next_22e040581:;
			++it;
			goto _iter_begin_22e040581;
		}
		_iter_end_22e040581:;
	};
}



inline jule::Bool _22ab33c7c_ready_testing_package(jule::Ptr<_22ab32d36_TestCoder> _self_) {
	jule::Ptr<_2299d5646_ImportInfo> _7117_p = _22ab3351d_find_testing_package(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_2299d6a87_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	_self_.get()._field_tm_reset=_228d1ed8d_find_method(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tm_failed=_228d1ed8d_find_method(_self_.get()._field_t.ptr(), jule::Str("failed", 6),false);
	_self_.get()._field_tm_skipped=_228d1ed8d_find_method(_self_.get()._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline void _22ab33e58_call_tm_reset(jule::Ptr<_22ab32d36_TestCoder> _self_) {
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab36125_func(_self_.get()._field_tm_reset));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _22ab34134_call_tm_failed(jule::Ptr<_22ab32d36_TestCoder> _self_) {
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab36125_func(_self_.get()._field_tm_failed));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _22ab34310_call_tm_skipped(jule::Ptr<_22ab32d36_TestCoder> _self_) {
	_22ab80ca7_write(_self_.get()._field_oc, static__22ab36125_func(_self_.get()._field_tm_skipped));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _22ab344db_serialize(jule::Ptr<_22ab32d36_TestCoder> _self_) {
	_22aba1c73_serialize_head(_self_.get()._field_oc);
	__JULE_DEFER({
		_22aba1a97_end(_self_.get()._field_oc);
	});;
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_22ab81549_add_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	if ((!(_22ab33c7c_ready_testing_package(_self_)))) {
		_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}", 1));
		_22ab82539_done_indent(_self_.get()._field_oc);
		return;;
	};
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba4acd_as_sptr(static__22aba6c67_structure_ins(_self_.get()._field_t)));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_22ab80ca7_write(_self_.get()._field_oc, static__22aba6c67_structure_ins(_self_.get()._field_t));
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_22ab81549_add_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_22ab34134_call_tm_failed(_self_);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_22ab34310_call_tm_skipped(_self_);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_22ab33a18_append_package_tests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_main);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_22ab82539_done_indent(_self_.get()._field_oc);
	_22ab82c87_indent(_self_.get()._field_oc);
	_22ab80ca7_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _22ab32d36_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__22ab35993_to_out(jule::Str& _3323_ident, jule::Uintptr _3335_addr) {
	if ((_3335_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_229934672_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3335_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3323_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3323_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3323_ident;
	return _4217_obj;
}



inline jule::Str static__22ab35d7d_to_local(jule::I64 _5424_row, jule::I64 _5434_col, jule::Str& _5445_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_2299348d6_itoa(_5424_row);
	_5517_obj+=_2299348d6_itoa(_5434_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5445_ident;
	return _5517_obj;
}



inline jule::Str static__22ab36125_func(jule::Ptr<_228de6cbc_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_cpp_linked) {
			_case_begin_22e0586ed:;
			{
				return _6521_f.get()._field_ident;
			}
		}
		else if ((_6521_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_22e058764:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_228de7493_is_method(_6521_f.ptr())) {
			_case_begin_22e057ac6:;
			{
				jule::Str _7221_obj = static__22ab35993_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_22e057a0a:;
			{
				return static__22ab35993_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_22e05792d:;
	};
}



inline jule::Str static__22ab363bc_func_ins(jule::Ptr<_228de996d_FnIns>& _8425_f) {
	if (_228dea6b6_is_builtin(_8425_f.ptr())) {
		return (jule::Str("jule::", 6) + _8425_f.get()._field_decl.get()._field_ident);
	};
	if ((_8425_f.get()._field_decl.get()._field_cpp_linked || (_8425_f.get()._field_generics.len() == 0LL))) {
		return static__22ab36125_func(_8425_f.get()._field_decl);
	};
	return static__22ab35993_to_out(_8425_f.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8425_f)));
}



inline jule::Str static__22ab36664_trait_decl(jule::Ptr<_22923d1bd_Trait> _9526_t) {
	if (_228e7e52a_is_builtin(_9526_t.ptr())) {
		return (jule::Str("jule::", 6) + _9526_t.get()._field_ident);
	};
	return static__22ab35993_to_out(_9526_t.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9526_t)));
}



inline jule::Str static__22ab3690b_param(jule::Ptr<_228de5480_Param>& _10322_p) {
	if ((_2276b4558_is_anon_ident(_10322_p.get()._field_ident) || _2276b42b1_is_ignore_ident(_10322_p.get()._field_ident))) {
		return jule::Str();
	};
	if (_228de5aac_is_self(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_token == nullptr)) {
		return static__22ab35d7d_to_local(0LL,0LL,_10322_p.get()._field_ident);
	};
	return static__22ab35d7d_to_local(_10322_p.get()._field_token.get()._field_row,_10322_p.get()._field_token.get()._field_column,_10322_p.get()._field_ident);
}



inline jule::Str static__22ab36ba3_structure(jule::Ptr<_228d188c0_Struct>& _11726_s) {
	if (_11726_s.get()._field_cpp_linked) {
		if (_22abab068_has_directive(_11726_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_ident);
	};
	return static__22ab35993_to_out(_11726_s.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__22ab36e4a_structure_ins(jule::Ptr<_228d44c1a_StructIns>& _12830_s) {
	if ((_12830_s.get()._field_decl.get()._field_cpp_linked || (_12830_s.get()._field_generics.len() == 0LL))) {
		return static__22ab36ba3_structure(_12830_s.get()._field_decl);
	};
	return static__22ab35993_to_out(_12830_s.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12830_s)));
}



inline jule::Str static__22ab371e2_field(jule::Ptr<_228d0ad8a_Field>& _13622_f) {
	if (_13622_f.get()._field_owner.get()._field_cpp_linked) {
		return _13622_f.get()._field_ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_ident);
}



inline jule::Str static__22ab37489_var(jule::Ptr<_229a0a4a1_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_cpp_linked) {
			_case_begin_22e0639d3:;
			{
				return _14423_v.get()._field_ident;
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_22e063a49:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_22e062d67:;
			{
				if ((_229a806d0_sptr(_14423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_scope != nullptr)) {
			_case_begin_22e062dcd:;
			{
				return static__22ab35d7d_to_local(_14423_v.get()._field_token.get()._field_row,_14423_v.get()._field_token.get()._field_column,_14423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_22e062d01:;
			{
				return static__22ab35993_to_out(_14423_v.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_22e062c46:;
	};
}



inline jule::Str static__22ab37731_iter_begin(jule::Uintptr _16326_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_229934672_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_16326_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__22ab379c8_iter_end(jule::Uintptr _17124_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_229934672_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17124_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__22ab37c70_iter_next(jule::Uintptr _17925_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_229934672_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17925_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__22ab38017_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__22ab382ae_match_end(jule::Uintptr _19525_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_229934672_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19525_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__22ab38556_case_begin(jule::Uintptr _20326_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_229934672_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20326_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _22ab35487_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22ab9c576_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22ab9c763_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _22aba378b_to_str(_22aba34c2_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _22aba3a99_equals(jule::Ptr<_22aba34c2_CustomType> _self_, jule::Ptr<_229a7d359_TypeKind> _3926_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _22aba34c2_CustomType _Src) {
	_Stream << _22aba378b_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__22aba42e7_to_type(jule::Str _6027_id) {
	if ((_6027_id != jule::Str("uintptr", 7))) {
		_6027_id=_2299a4417_real_kind_of(_6027_id);
	};
	if (((97LL <= _6027_id[0LL]) && (_6027_id[0LL] <= 122LLU))) {
		_6027_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6027_id);
}



inline jule::Str static__22aba458e_prim(jule::Ptr<_229a82d31_Prim> _7120_p) {
	return static__22aba42e7_to_type(_229a83194_to_str(_7120_p.ptr()));
}



inline jule::Str static__22aba4836_tuple(jule::Ptr<_229a87aa0_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_22d476a62:;
		if (it != expr.end()) {
			jule::Ptr<_229a7d359_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__22aba8373_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_22d476a62:;
			++it;
			goto _iter_begin_22d476a62;
		}
		_iter_end_22d476a62:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__22aba4acd_as_sptr(jule::Str _8823_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8823_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__22aba4d75_as_ptr(jule::Str _9622_elem) {
	return (_9622_elem + jule::Str("*", 1));
}



inline jule::Str static__22aba511c_sptr(jule::Ptr<_229a865b5_Sptr> _10124_sptr) {
	return static__22aba4acd_as_sptr(static__22aba8373_kind(_10124_sptr.get()._field_elem));
}



inline jule::Str static__22aba53b4_ptr(jule::Ptr<_229a89b29_Ptr> _10623_p) {
	;
	if (_229a8a5ec_is_unsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__22aba8373_kind(_10623_p.get()._field_elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__22aba565b_enum_decl(jule::Ptr<_228e0dcc3_Enum> _11729_e) {
	return static__22aba8373_kind(_11729_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__22aba5903_type_enum_decl(jule::Ptr<_2292e1e75_TypeEnum> _12234_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__22aba5b9a_as_slice(jule::Ptr<_229a7d359_TypeKind> _12628_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__22aba8373_kind(_12628_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__22aba5e42_slice(jule::Ptr<_229a87022_Slc> _13425_s) {
	return static__22aba5b9a_as_slice(_13425_s.get()._field_elem);
}



inline jule::Str static__22aba61d9_map(jule::Ptr<_229a885c8_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__22aba8373_kind(_13923_m.get()._field_key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__22aba8373_kind(_13923_m.get()._field_val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__22aba6481_trait_ident(jule::Str _14827_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14827_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__22aba6728_trait_decl(jule::Ptr<_22923d1bd_Trait> _15626_t) {
	return static__22aba6481_trait_ident(static__22ab36664_trait_decl(_15626_t));
}



inline jule::Str static__22aba69c0_structure(jule::Ptr<_228d188c0_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_cpp_linked && (!(_22abab068_has_directive(_16125_s.get()._field_directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__22ab36ba3_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__22aba6c67_structure_ins(jule::Ptr<_228d44c1a_StructIns> _17133_s) {
	if (_17133_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _17321_ident = static__22ab36e4a_structure_ins(_17133_s);;
		if ((_17133_s.get()._field_generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17133_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_22d481dd0:;
				if (it != expr.end()) {
					jule::Ptr<_229a7bb2c_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__22aba8373_kind(_17629_g.get()._field_kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_22d481dd0:;
					++it;
					goto _iter_begin_22d481dd0;
				}
				_iter_end_22d481dd0:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_228ce499a_Directive> _18317_d = _22abaabd3_find_directive(_17133_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_22aba27ac_concat_all_parts(_18317_d.get()._field_args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__22ab36e4a_structure_ins(_17133_s);
}



inline jule::Str static__22aba700e_array(jule::Ptr<_229a891bc_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__22aba8373_kind(_19325_a.get()._field_elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_2299348d6_itoa(_19325_a.get()._field_n);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__22aba754d_param_ins(jule::Ptr<_228de8a9e_ParamIns>& _21930_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21930_p.get()._field_decl.get()._field_variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__22aba8373_kind(_21930_p.get()._field_kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__22aba8373_kind(_21930_p.get()._field_kind);
	};
	if (_21930_p.get()._field_decl.get()._field_reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__22aba7a8c_func_ins_result(jule::Ptr<_228de996d_FnIns>& _24936_f) {
	if (_228de722e_is_void(_24936_f.get()._field_decl.ptr())) {
		if (_24936_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24936_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__22aba8373_kind(_24936_f.get()._field_result)) + jule::Str(">", 1));
	};
	return static__22aba8373_kind(_24936_f.get()._field_result);
}



inline jule::Str static__22aba7d34_anon_func(jule::Ptr<_228de996d_FnIns> _26229_f) {
	jule::Str _26317_decl = static__22aba7a8c_func_ins_result(_26229_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26229_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _26229_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_22d48d738:;
			if (it != expr.end()) {
				jule::Ptr<_228de8a9e_ParamIns> _26625_param = *it;
				{
					if (_228de5aac_is_self(_26625_param.get()._field_decl.ptr())) {
						goto _iter_next_22d48d738;
					};
					_26317_decl+=static__22aba754d_param_ins(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_22d48d738:;
				++it;
				goto _iter_begin_22d48d738;
			}
			_iter_end_22d48d738:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__22aba80cb_func(jule::Ptr<_228de996d_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__22aba7d34_anon_func(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__22aba8373_kind(jule::Ptr<_229a7d359_TypeKind> _29024_k) {
	{
		
		if (_229a7e019_cpp_linked(_29024_k.ptr())) {
			_case_begin_22d491263:;
			{
				return _29024_k.get()._field_cpp_ident;
			}
		}
		else if ((_229a8046b_prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d4913ea:;
			{
				return static__22aba458e_prim(_229a8046b_prim(_29024_k.ptr()));
			}
		}
		else if ((_229a8210a_tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d491461:;
			{
				return static__22aba4836_tuple(_229a8210a_tup(_29024_k.ptr()));
			}
		}
		else if ((_229a806d0_sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d4914d8:;
			{
				return static__22aba511c_sptr(_229a806d0_sptr(_29024_k.ptr()));
			}
		}
		else if ((_229a80944_ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d491560:;
			{
				return static__22aba53b4_ptr(_229a80944_ptr(_29024_k.ptr()));
			}
		}
		else if ((_229a80ba8_enm(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d4915d7:;
			{
				return static__22aba565b_enum_decl(_229a80ba8_enm(_29024_k.ptr()));
			}
		}
		else if ((_229a80e1c_tenm(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d49165e:;
			{
				return static__22aba5903_type_enum_decl(_229a80e1c_tenm(_29024_k.ptr()));
			}
		}
		else if ((_229a813e5_slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d4916d6:;
			{
				return static__22aba5e42_slice(_229a813e5_slc(_29024_k.ptr()));
			}
		}
		else if ((_229a81d96_map(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d49175d:;
			{
				return static__22aba61d9_map(_229a81d96_map(_29024_k.ptr()));
			}
		}
		else if ((_229a81b32_trt(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d4917d5:;
			{
				return static__22aba6728_trait_decl(_229a81b32_trt(_29024_k.ptr()));
			}
		}
		else if ((_229a818bd_strct(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d49185c:;
			{
				return static__22aba6c67_structure_ins(_229a818bd_strct(_29024_k.ptr()));
			}
		}
		else if ((_229a81181_arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d4918d4:;
			{
				return static__22aba700e_array(_229a81181_arr(_29024_k.ptr()));
			}
		}
		else if ((_229a81659_fnc(_29024_k.ptr()) != nullptr)) {
			_case_begin_22d49195b:;
			{
				return static__22aba80cb_func(_229a81659_fnc(_29024_k.ptr()));
			}
		}
		_match_end_22d491175:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_22aba34c2_CustomType>>()) {
			_case_begin_22d491a38:;
			{
				return _29024_k.get()._field_kind.operator jule::Ptr<_22aba34c2_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_22d498105:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_22d4980a0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22aba3cb9_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _22d4999db_name(_22d49a13a_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _22d49a525_what(_22d49a13a_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _22d49a657_reset(_22d49a13a_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _22d49a789_short(_22d49a13a_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _22d49a13a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _22d49d847_name(_22d49dced_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _22d49e0b7_what(_22d49dced_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _22d49e1e9_reset(_22d49dced_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _22d49e32b_short(_22d49dced_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _22d49dced_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _22d4a232e_name(_22d4a27d5_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _22d4a2a9e_what(_22d4a27d5_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _22d4a2bd1_reset(_22d4a27d5_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _22d4a2d13_short(_22d4a27d5_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _22d4a27d5_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _22d4a5d5a_name(_22d4a6311_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _22d4a65ca_what(_22d4a6311_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _22d4a670c_reset(_22d4a6311_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _22d4a683e_short(_22d4a6311_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _22d4a6311_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _22d4a9842_name(_22d4a9ce8_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _22d4aa0b2_what(_22d4a9ce8_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _22d4aa1e4_reset(_22d4a9ce8_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _22d4aa326_short(_22d4a9ce8_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _22d4a9ce8_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22abd95b3_FlagSet> static__22abd989e_new(void) {
	return jule::new_ptr<_22abd95b3_FlagSet>(_22abd95b3_FlagSet{._field__flags=jule::Slice<jule::Trait<_22a7c4874_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_22a7c4874_CommonFlag> _22abd9d33_find_flag(_22abd95b3_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_22d4b5991:;
		if (it != expr.end()) {
			jule::Trait<_22a7c4874_CommonFlag> _7221_flag = *it;
			{
				if ((_22a7c4874_CommonFlag_mptr_data[(_7221_flag).type_offset]._22a7c4742_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_22d4b5991:;
			++it;
			goto _iter_begin_22d4b5991;
		}
		_iter_end_22d4b5991:;
	};
	return nullptr;
}



inline jule::Trait<_22a7c4874_CommonFlag> _22abda141_find_flag_short(_22abd95b3_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_22d4b5e03:;
		if (it != expr.end()) {
			jule::Trait<_22a7c4874_CommonFlag> _8221_flag = *it;
			{
				if ((_22a7c4874_CommonFlag_mptr_data[(_8221_flag).type_offset]._22abbb672_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_22d4b5e03:;
			++it;
			goto _iter_begin_22d4b5e03;
		}
		_iter_end_22d4b5e03:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_22a7c4874_CommonFlag>> _22abda3a5_flags(_22abd95b3_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _22abda6b3_parse(_22abd95b3_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_22abdbc8b_ArgParser _11617_ap = _22abdbc8b_ArgParser{._field_set=(*_self_), ._field_args=_11528_args, };;
	({
		auto except = _22abdd177_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _22abda88e_reset(_22abd95b3_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_22d4b929c:;
		if (it != expr.end()) {
			jule::Trait<_22a7c4874_CommonFlag> _12616_f = *it;
			{
				_22a7c4874_CommonFlag_mptr_data[(_12616_f).type_offset]._22abd7c65_reset(_12616_f);
			}
			_iter_next_22d4b929c:;
			++it;
			goto _iter_begin_22d4b929c;
		}
		_iter_end_22d4b929c:;
	};
}



inline jule::Ptr<_22d4a9ce8_Flag> _22e13e6c4_add_flag_common(_22abd95b3_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_22e141110:;
			{
				goto _match_end_22e140c47;
			}
		}
		_match_end_22e140c47:;
	};
	if ((_22abd9d33_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_22abda141_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_22d4a9ce8_Flag> _14817_flag = jule::new_ptr<_22d4a9ce8_Flag>(_22d4a9ce8_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_22a7c4874_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_22d4a6311_Flag> _22e1482e3_add_flag_common(_22abd95b3_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_22e149ba7:;
			{
				goto _match_end_22e149adb;
			}
		}
		_match_end_22e149adb:;
	};
	if ((_22abd9d33_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_22abda141_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_22d4a6311_Flag> _14817_flag = jule::new_ptr<_22d4a6311_Flag>(_22d4a6311_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_22a7c4874_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _22e13c150_add_var(_22abd95b3_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_22d4a9ce8_Flag> _17617_flag = _22e13e6c4_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _22e145c80_add_var(_22abd95b3_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_22d4a6311_Flag> _17617_flag = _22e1482e3_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _22abd95b3_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_22a0e7571_IR>,jule::Slice<_2409487a2_Log>> static__229c983ed_build(jule::Str _2825_path, jule::I64 _2836_flags) {
	jule::Ptr<_229dd6cbc_JuleImporter> _2917_importer = static__229dea781_new(_22a24bb15_build_compile_info());;
	jule::Slice<jule::Ptr<_228ce3900_Ast>> _3018_files;;
	jule::Slice<_2409487a2_Log> _3029_logs;;
	std::tie(_3018_files,_3029_logs) = _22a0442d1_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Str _3413_root = _2825_path;;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_2299d85a0_Package> _4018_pkg;;
	std::tie(_4018_pkg,_3029_logs) = _229a9a277_analyze_package(_3018_files,jule::Trait<_2299d2d4c_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Ptr<_22a0e7571_IR> _4517_ir = jule::new_ptr<_22a0e7571_IR>(_22a0e7571_IR{._field_root=_3413_root, ._field_main=_4018_pkg, ._field_used=_229e4081a_all_packages(_2917_importer.ptr()), });;
	_4517_ir.get()._field_passes=_22a2428db_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _229ca1abb_append_structs(_22a0e7571_IR* _self_, jule::Ptr<_2299d85a0_Package>& _5734_p, jule::Slice<jule::Ptr<_228d188c0_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22db1583d:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _5821_f = *it;
			{
				{
					auto &expr = _5821_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_22db161ce:;
					if (it != expr.end()) {
						jule::Ptr<_228d188c0_Struct> _5925_s = *it;
						{
							if ((!(_5925_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_5925_s);;
							};
						}
						_iter_next_22db161ce:;
						++it;
						goto _iter_begin_22db161ce;
					}
					_iter_end_22db161ce:;
				};
			}
			_iter_next_22db1583d:;
			++it;
			goto _iter_begin_22db1583d;
		}
		_iter_end_22db1583d:;
	};
}



inline jule::Slice<jule::Ptr<_228d188c0_Struct>> _229cc4308_get_all_structures(_22a0e7571_IR* _self_) {
	jule::Slice<jule::Ptr<_228d188c0_Struct>> _7017_buffer = nullptr;;
	_229ca1abb_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_22db16b4c:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _7221_u = *it;
			{
				if ((!(_7221_u.get()._field_cpp_linked))) {
					_229ca1abb_append_structs(&(*_self_), _7221_u.get()._field_package,_7017_buffer);
				};
			}
			_iter_next_22db16b4c:;
			++it;
			goto _iter_begin_22db16b4c;
		}
		_iter_end_22db16b4c:;
	};
	return _7017_buffer;
}



inline void _22a06e2a6_append_globals(_22a0e7571_IR* _self_, jule::Ptr<_2299d85a0_Package>& _8034_p, jule::Slice<jule::Ptr<_229a0a4a1_Var>>& _8058_buffer) {
	{
		auto &expr = _8034_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22db189c8:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _8121_f = *it;
			{
				{
					auto &expr = _8121_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_22db19325:;
					if (it != expr.end()) {
						jule::Ptr<_229a0a4a1_Var> _8225_v = *it;
						{
							if ((((_8225_v.get()._field_token != nullptr) && (!(_8225_v.get()._field_cpp_linked))) && (!(_8225_v.get()._field_constant)))) {
								_8058_buffer = jule::alloc_for_append(_8058_buffer,1);_8058_buffer.__push(_8225_v);;
							};
						}
						_iter_next_22db19325:;
						++it;
						goto _iter_begin_22db19325;
					}
					_iter_end_22db19325:;
				};
			}
			_iter_next_22db189c8:;
			++it;
			goto _iter_begin_22db189c8;
		}
		_iter_end_22db189c8:;
	};
}



inline jule::Slice<jule::Ptr<_229a0a4a1_Var>> _22a0b9e39_get_all_globals(_22a0e7571_IR* _self_) {
	jule::Slice<jule::Ptr<_229a0a4a1_Var>> _9317_buffer = nullptr;;
	_22a06e2a6_append_globals(&(*_self_), (*_self_)._field_main,_9317_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_22db1ad1b:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _9521_u = *it;
			{
				if ((!(_9521_u.get()._field_cpp_linked))) {
					_22a06e2a6_append_globals(&(*_self_), _9521_u.get()._field_package,_9317_buffer);
				};
			}
			_iter_next_22db1ad1b:;
			++it;
			goto _iter_begin_22db1ad1b;
		}
		_iter_end_22db1ad1b:;
	};
	return _9317_buffer;
}



inline void _22a0bc06d_order(_22a0e7571_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_229cc4308_get_all_structures(&(*_self_));
	(*_self_)._field_ordered._field_globals=_22a0b9e39_get_all_globals(&(*_self_));
	static__22a26e880_order_structures((*_self_)._field_ordered._field_structs);
	static__22a28051c_order_vars((*_self_)._field_ordered._field_globals);
}







std::ostream &operator<<(std::ostream &_Stream, _22a0e7571_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _228d1a5a3_to_str(_228d44c1a_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_22cba4bec:;
			if (it != expr.end()) {
				jule::Ptr<_229a7bb2c_InsGeneric> &_24720_g = *it;
				{
					_24317_kind+=_229a7d755_to_str(_24720_g.get()._field_kind.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_22cba4bec:;
				++it;
				goto _iter_begin_22cba4bec;
			}
			_iter_end_22cba4bec:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _228d1b719_equals(jule::Ptr<_228d44c1a_StructIns> _self_, jule::Ptr<_229a7d359_TypeKind> _25826_other) {
	jule::Ptr<_228d44c1a_StructIns> _25913_s = _229a818bd_strct(_25826_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl != _25913_s.get()._field_decl)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _25913_s.get()._field_generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_generics.len()); (_27217_i)++) {
		{
			if ((!(_229a7da63_equals(_self_.get()._field_generics[_27217_i].get()._field_kind, _25913_s.get()._field_generics[_27217_i].get()._field_kind)))) {
				return false;
			};
		}
	_iter_next_22cba842b:;
	}
	_iter_end_22cba842b:;;
	return true;
}



inline jule::Bool _228d1da6d_same(_228d44c1a_StructIns* _self_, jule::Ptr<_228d44c1a_StructIns> _28623_s) {
	if ((((*_self_)._field_decl != _28623_s.get()._field_decl) || (_28623_s.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_22cbaa8a1:;
		if (it != expr.end()) {
			jule::I64 _29113_i = it - expr.begin();
			jule::Ptr<_229a7bb2c_InsGeneric> &_29116_g = *it;
			{
				if ((!(_229a7da63_equals(_29116_g.get()._field_kind, _28623_s.get()._field_generics[_29113_i].get()._field_kind)))) {
					return false;
				};
			}
			_iter_next_22cbaa8a1:;
			++it;
			_29113_i++;
			goto _iter_begin_22cbaa8a1;
		}
		_iter_end_22cbaa8a1:;
	};
	return true;
}



inline jule::Ptr<_228de6cbc_Fn> _228d1ed8d_find_method(_228d44c1a_StructIns* _self_, jule::Str _30134_ident, jule::Bool _30146_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_22cbac386:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _30221_f = *it;
			{
				if (((_30221_f.get()._field_statically == _30146_statically) && (_30221_f.get()._field_ident == _30134_ident))) {
					return _30221_f;
				};
			}
			_iter_next_22cbac386:;
			++it;
			goto _iter_begin_22cbac386;
		}
		_iter_end_22cbac386:;
	};
	return nullptr;
}



inline jule::Ptr<_228d21037_FieldIns> _228d228a7_find_field(_228d44c1a_StructIns* _self_, jule::Str _31233_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_22cbad60c:;
		if (it != expr.end()) {
			jule::Ptr<_228d21037_FieldIns> _31321_f = *it;
			{
				if ((_31321_f.get()._field_decl.get()._field_ident == _31233_ident)) {
					return _31321_f;
				};
			}
			_iter_next_22cbad60c:;
			++it;
			goto _iter_begin_22cbad60c;
		}
		_iter_end_22cbad60c:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _228d44c1a_StructIns _Src) {
	_Stream << _228d1a5a3_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_22a56c771_ObjectDeadCode> static__22a56cbc2_new(jule::Ptr<_22a0e7571_IR>& _3424_ir) {
	return jule::new_ptr<_22a56c771_ObjectDeadCode>(_22a56c771_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _22db55be1_is_live(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_22923d1bd_Trait>& _4031_t) {
	jule::Slice<jule::Ptr<_22923d1bd_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_22db57c26:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_22db5793a:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_22db583ec:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_22db583ec:;
			++it;
			_5213_i++;
			goto _iter_begin_22db583ec;
		}
		_iter_end_22db583ec:;
	};
	return false;
}

inline jule::Bool _22db5b840_is_live(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_228de996d_FnIns>& _4031_t) {
	jule::Slice<jule::Ptr<_228de996d_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_22db5d29d:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_22db5d1e3:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_22db5d853:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_22db5d853:;
			++it;
			_5213_i++;
			goto _iter_begin_22db5d853;
		}
		_iter_end_22db5d853:;
	};
	return false;
}

inline jule::Bool _22db64d21_is_live(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_228d44c1a_StructIns>& _4031_t) {
	jule::Slice<jule::Ptr<_228d44c1a_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_22db6721e:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_22db66e99:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_22db672eb:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_22db672eb:;
			++it;
			_5213_i++;
			goto _iter_begin_22db672eb;
		}
		_iter_end_22db672eb:;
	};
	return false;
}

inline jule::Bool _22db69a5c_is_live(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_229a0a4a1_Var>& _4031_t) {
	jule::Slice<jule::Ptr<_229a0a4a1_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_22db6b883:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_22db6b762:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_22db6c28a:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_22db6c28a:;
			++it;
			_5213_i++;
			goto _iter_begin_22db6c28a;
		}
		_iter_end_22db6c28a:;
	};
	return false;
}



inline void _22db56719_push_live(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_22923d1bd_Trait> _6036_t) {
	{
		
{
			_case_begin_22db59ed1:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6036_t);;
			}
		}
		_match_end_22db59b7e:;
	};
}

inline void _22db600a2_push_live(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_228de996d_FnIns> _6036_t) {
	{
		
{
			_case_begin_22db60cc8:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6036_t);;
			}
		}
		_match_end_22db60a53:;
	};
}

inline void _22db631b5_push_live(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_228d44c1a_StructIns> _6036_t) {
	{
		
{
			_case_begin_22db64abd:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6036_t);;
			}
		}
		_match_end_22db647d2:;
	};
}

inline void _22db6d401_push_live(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_229a0a4a1_Var> _6036_t) {
	{
		
{
			_case_begin_22db6de7e:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6036_t);;
			}
		}
		_match_end_22db6dda2:;
	};
}



inline void _22a59ad21_set_references_as_live(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_228dec234_ReferenceStack>& _7347_rs) {
	if ((_7347_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _228dec8a5_len(_7347_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _228decbb3_at(_7347_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_22923d1bd_Trait>>()) {
					_case_begin_22db54c56:;
					{
						jule::Ptr<_22923d1bd_Trait> _8225_t = _7921_ref.operator jule::Ptr<_22923d1bd_Trait>();;
						if (_22db55be1_is_live(_self_, _8225_t)) {
							goto _iter_next_22db54041;
						};
						_22db56719_push_live(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_22db59772:;
							if (it != expr.end()) {
								jule::Ptr<_228de6cbc_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_22db59c8e:;
										if (it != expr.end()) {
											jule::Ptr<_228de996d_FnIns> _8833_mins = *it;
											{
												if (_22db5b840_is_live(_self_, _8833_mins)) {
													goto _iter_next_22db59c8e;
												};
												_22db600a2_push_live(_self_, _8833_mins);
												_22a59ad21_set_references_as_live(_self_, _8833_mins.get()._field_refers);
											}
											_iter_next_22db59c8e:;
											++it;
											goto _iter_begin_22db59c8e;
										}
										_iter_end_22db59c8e:;
									};
								}
								_iter_next_22db59772:;
								++it;
								goto _iter_begin_22db59772;
							}
							_iter_end_22db59772:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_228de996d_FnIns>>()) {
					_case_begin_22db54cbc:;
					{
						jule::Ptr<_228de996d_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_228de996d_FnIns>();;
						if (_22db5b840_is_live(_self_, _9725_f)) {
							goto _match_end_22db548d2;
						};
						if (((_9725_f.get()._field_owner != nullptr) && (!(_9725_f.get()._field_decl.get()._field_statically)))) {
							if ((!(_22db64d21_is_live(_self_, _9725_f.get()._field_owner)))) {
								_22db631b5_push_live(_self_, _9725_f.get()._field_owner);
								_22a59ad21_set_references_as_live(_self_, _9725_f.get()._field_owner.get()._field_refers);
							};
						};
						_22db600a2_push_live(_self_, _9725_f);
						_22a59ad21_set_references_as_live(_self_, _9725_f.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
					_case_begin_22db54daa:;
					{
						jule::Ptr<_229a0a4a1_Var> _11025_v = _7921_ref.operator jule::Ptr<_229a0a4a1_Var>();;
						if (_22db69a5c_is_live(_self_, _11025_v)) {
							goto _match_end_22db548d2;
						};
						_22db6d401_push_live(_self_, _11025_v);
						_22a59ad21_set_references_as_live(_self_, _11025_v.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_228d44c1a_StructIns>>()) {
					_case_begin_22db54e21:;
					{
						jule::Ptr<_228d44c1a_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_228d44c1a_StructIns>();;
						if (_22db64d21_is_live(_self_, _11725_s)) {
							goto _match_end_22db548d2;
						};
						_22db631b5_push_live(_self_, _11725_s);
						_22a59ad21_set_references_as_live(_self_, _11725_s.get()._field_refers);
						{
							auto &expr = _11725_s.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_22db723b1:;
							if (it != expr.end()) {
								jule::Ptr<_228de6cbc_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_22db72b0e:;
										if (it != expr.end()) {
											jule::Ptr<_228de996d_FnIns> _12433_mins = *it;
											{
												if (_22db5b840_is_live(_self_, _12433_mins)) {
													goto _iter_next_22db72b0e;
												};
												_22db600a2_push_live(_self_, _12433_mins);
												_22a59ad21_set_references_as_live(_self_, _12433_mins.get()._field_refers);
											}
											_iter_next_22db72b0e:;
											++it;
											goto _iter_begin_22db72b0e;
										}
										_iter_end_22db72b0e:;
									};
								}
								_iter_next_22db723b1:;
								++it;
								goto _iter_begin_22db723b1;
							}
							_iter_end_22db723b1:;
						};
					}
				}
				_match_end_22db548d2:;
			};
		}
	_iter_next_22db54041:;
	}
	_iter_end_22db54041:;;
}



inline void _22a59b096_inits(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_2299d85a0_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22db54409:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_22db7333a:;
					if (it != expr.end()) {
						jule::Ptr<_228de6cbc_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_ident == jule::Str("init", 4))) {
								jule::Ptr<_228de996d_FnIns> _14029_ins = _13825_f.get()._field_instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_22a59ad21_set_references_as_live(_self_, _14029_ins.get()._field_refers);
							};
						}
						_iter_next_22db7333a:;
						++it;
						goto _iter_begin_22db7333a;
					}
					_iter_end_22db7333a:;
				};
			}
			_iter_next_22db54409:;
			++it;
			goto _iter_begin_22db54409;
		}
		_iter_end_22db54409:;
	};
}



inline void _22a59b31b_collect_live_package(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_2299d85a0_Package>& _14845_pkg) {
	_22a59b096_inits(_self_, _14845_pkg);
	if (_23e74d2cd_TEST) {
		{
			auto &expr = _14845_pkg.get()._field_files;
			auto it = expr.begin();
			_iter_begin_22db7785b:;
			if (it != expr.end()) {
				jule::Ptr<_229a4ca76_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_funcs;
						auto it = expr.begin();
						_iter_begin_22db781ec:;
						if (it != expr.end()) {
							jule::Ptr<_228de6cbc_Fn> _15529_f = *it;
							{
								if (_22a59d32e_has_directive(_15529_f.get()._field_directives,jule::Str("test", 4))) {
									jule::Ptr<_228de996d_FnIns> _15733_ins = _15529_f.get()._field_instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_22a59ad21_set_references_as_live(_self_, _15733_ins.get()._field_refers);
								};
							}
							_iter_next_22db781ec:;
							++it;
							goto _iter_begin_22db781ec;
						}
						_iter_end_22db781ec:;
					};
				}
				_iter_next_22db7785b:;
				++it;
				goto _iter_begin_22db7785b;
			}
			_iter_end_22db7785b:;
		};
	};
}



inline void _22a59b4e7_collect_live(jule::Ptr<_22a56c771_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_22db78b59:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_cpp_linked))) {
					_22a59b31b_collect_live_package(_self_, _16721_used.get()._field_package);
				};
			}
			_iter_next_22db78b59:;
			++it;
			goto _iter_begin_22db78b59;
		}
		_iter_end_22db78b59:;
	};
	_22a59b31b_collect_live_package(_self_, _self_.get()._field_ir.get()._field_main);
	jule::Ptr<_228de6cbc_Fn> _17517_main = _2299d9d54_find_fn(_self_.get()._field_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_228de996d_FnIns> _17617_ins = _17517_main.get()._field_instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_22a59ad21_set_references_as_live(_self_, _17617_ins.get()._field_refers);
}



inline void _22a59b76c_remove_dead_globals(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_229a0a4a1_Var>>& _18144_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18144_vars.len())) {
		{
			jule::Ptr<_229a0a4a1_Var> _18417_v = _18144_vars[_18217_i];;
			if (_22db69a5c_is_live(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_22db7d059;
			};
			_18144_vars=jule::append(_18144_vars.slice(0LL,_18217_i),_18144_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_22db7d059:;
	}
	_iter_end_22db7d059:;;
}



inline void _22a59b9e2_remove_dead_fns(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_228de6cbc_Fn>>& _19340_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19340_funcs.len())) {
		{
			jule::Ptr<_228de6cbc_Fn> _19621_f = _19340_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_instances.len())) {
				{
					jule::Ptr<_228de996d_FnIns> _19921_ins = _19621_f.get()._field_instances[_19721_j];;
					if (_22db5b840_is_live(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_22db81689;
					};
					_19621_f.get()._field_instances=jule::append(_19621_f.get()._field_instances.slice(0LL,_19721_j),_19621_f.get()._field_instances.slice((_19721_j + 1LL)));
				}
			_iter_next_22db81689:;
			}
			_iter_end_22db81689:;;
			if ((_19621_f.get()._field_instances.len() == 0LL)) {
				_19340_funcs=jule::append(_19340_funcs.slice(0LL,_19417_i),_19340_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_22db7ee5c;
			};
			(_19417_i)++;
		}
	_iter_next_22db7ee5c:;
	}
	_iter_end_22db7ee5c:;;
}



inline void _22a59bc67_remove_dead_structs(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_228d188c0_Struct>>& _21444_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21444_structs.len())) {
		{
			jule::Ptr<_228d188c0_Struct> _21721_s = _21444_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_instances.len())) {
				{
					jule::Ptr<_228d44c1a_StructIns> _22025_ins = _21721_s.get()._field_instances[_21821_j];;
					_22a59b9e2_remove_dead_fns(_self_, _22025_ins.get()._field_methods);
					if (((_22025_ins.get()._field_methods.len() != 0LL) || _22db64d21_is_live(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_22db858ad;
					};
					_21721_s.get()._field_instances=jule::append(_21721_s.get()._field_instances.slice(0LL,_21821_j),_21721_s.get()._field_instances.slice((_21821_j + 1LL)));
				}
			_iter_next_22db858ad:;
			}
			_iter_end_22db858ad:;;
			if ((_21721_s.get()._field_instances.len() == 0LL)) {
				_21444_structs=jule::append(_21444_structs.slice(0LL,_21517_i),_21444_structs.slice((_21517_i + 1LL)));
				goto _iter_next_22db8358c;
			};
			(_21517_i)++;
		}
	_iter_next_22db8358c:;
	}
	_iter_end_22db8358c:;;
}



inline void _22a59bedc_remove_dead_traits(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_22923d1bd_Trait>>& _23643_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23643_traits.len())) {
		{
			jule::Ptr<_22923d1bd_Trait> _23921_t = _23643_traits[_23717_i];;
			if ((!(_22db55be1_is_live(_self_, _23921_t)))) {
				_23643_traits=jule::append(_23643_traits.slice(0LL,_23717_i),_23643_traits.slice((_23717_i + 1LL)));
				goto _iter_next_22db8932e;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_implemented.len())) {
				{
					jule::Ptr<_228d188c0_Struct> _24621_s = _23921_t.get()._field_implemented[_24421_j];;
					if ((_24621_s.get()._field_instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_22db89ebc;
					};
					_23921_t.get()._field_implemented=jule::append(_23921_t.get()._field_implemented.slice(0LL,_24421_j),_23921_t.get()._field_implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_22db89ebc:;
			}
			_iter_end_22db89ebc:;;
			(_23717_i)++;
		}
	_iter_next_22db8932e:;
	}
	_iter_end_22db8932e:;;
}



inline void _22a59c262_remove_deads_file(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_229a4ca76_SymbolTable>& _25742_file) {
	_22a59b9e2_remove_dead_fns(_self_, _25742_file.get()._field_funcs);
	_22a59bc67_remove_dead_structs(_self_, _25742_file.get()._field_structs);
	_22a59bedc_remove_dead_traits(_self_, _25742_file.get()._field_traits);
	_22a59b76c_remove_dead_globals(_self_, _25742_file.get()._field_vars);
}



inline void _22a59c4d7_remove_deads_package(jule::Ptr<_22a56c771_ObjectDeadCode> _self_, jule::Ptr<_2299d85a0_Package>& _26445_pkg) {
	{
		auto &expr = _26445_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22db8ea2c:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _26521_file = *it;
			{
				_22a59c262_remove_deads_file(_self_, _26521_file);
			}
			_iter_next_22db8ea2c:;
			++it;
			goto _iter_begin_22db8ea2c;
		}
		_iter_end_22db8ea2c:;
	};
}



inline void _22a59c6b3_remove_deads(jule::Ptr<_22a56c771_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_22db90951:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_cpp_linked))) {
					_22a59c4d7_remove_deads_package(_self_, _27121_used.get()._field_package);
				};
			}
			_iter_next_22db90951:;
			++it;
			goto _iter_begin_22db90951;
		}
		_iter_end_22db90951:;
	};
	_22a59c4d7_remove_deads_package(_self_, _self_.get()._field_ir.get()._field_main);
}



inline void _22a59c88e_elimanate(jule::Ptr<_22a56c771_ObjectDeadCode> _self_) {
	_22a59b4e7_collect_live(_self_);
	_22a59c6b3_remove_deads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _22a56c771_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22ab9c950_ObjectCoder> static__22ab80977_new(jule::Ptr<_22a0e7571_IR>& _7228_ir, _22ab9c576_SerializationInfo _7237_info) {
	jule::Ptr<_22ab9c950_ObjectCoder> _7317_oc = jule::new_ptr<_22ab9c950_ObjectCoder>(_22ab9c950_ObjectCoder{._field_ir=_7228_ir, ._field_info=_7237_info, });;
	_7317_oc.get()._field_ec=static__22ab23e04_new(_7317_oc);
	_7317_oc.get()._field_sc=static__22ab1b5a0_new(_7317_oc);
	return _7317_oc;
}



inline void _22ab80ca7_write(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_obj+=_8225_s;
}



inline void _22ab81549_add_indent(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	;
	_self_.get()._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _22ab82539_done_indent(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_self_.get()._field_indent_buffer=_self_.get()._field_indent_buffer.slice(0LL,(_self_.get()._field_indent_buffer.len() - 1LL));
}



inline void _22ab82c87_indent(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_self_.get()._field_obj+=_self_.get()._field_indent_buffer;
}



inline jule::I64 _22ab7210b_find_type_offset(_22ab9c950_ObjectCoder* _self_, jule::Ptr<_22923d1bd_Trait> _10231_t, jule::Ptr<_229a7d359_TypeKind> _10246_k) {
	if ((_10231_t.get()._field_implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_228d44c1a_StructIns> _10617_s = nullptr;;
	if ((_229a806d0_sptr(_10246_k.ptr()) != nullptr)) {
		_10246_k=_229a806d0_sptr(_10246_k.ptr()).get()._field_elem;
	};
	if ((_229a818bd_strct(_10246_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_229a818bd_strct(_10246_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_22e078498:;
		if (it != expr.end()) {
			jule::Ptr<_22ab9c763_TraitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10231_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_22e078498:;
			++it;
			goto _iter_begin_22e078498;
		}
		_iter_end_22e078498:;
	};
	return -1LL;
}



inline void _22ab84173_loc_info(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_2276b1a1c_Token>& _12329_t) {
	jule::Str &_12414_loc = _12329_t.get()._field_file.get()._field_path;;
	if (_23e74dd17_PRODUCTION) {
		{
			
			if (_2273415c0_has_prefix(_12414_loc,_2273c7c61_PATH_STDLIB)) {
				_case_begin_22e07a8eb:;
				{
					_22ab80ca7_write(_self_, _22ab30031_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_2273895a2_dir(_2273c7c61_PATH_STDLIB).len() + 1LL)))));
				}
			}
			else if (_2273415c0_has_prefix(_12414_loc,_self_.get()._field_ir.get()._field_root)) {
				_case_begin_22e07a5bb:;
				{
					_22ab80ca7_write(_self_, _22ab30031_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_2273895a2_dir(_self_.get()._field_ir.get()._field_root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_22e07a555:;
				{
					_22ab80ca7_write(_self_, _22ab30031_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_22e07a478:;
		};
	} else {
		_22ab80ca7_write(_self_, _22ab30031_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_22ab80ca7_write(_self_, jule::Str(":", 1));
	_22ab80ca7_write(_self_, _2299348d6_itoa(_12329_t.get()._field_row));
	_22ab80ca7_write(_self_, jule::Str(":", 1));
	_22ab80ca7_write(_self_, _2299348d6_itoa(_12329_t.get()._field_column));
}



inline void _22ab637a1_head(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_22ab97252_Time _15013_time = static__22ab977e6_now();;
	_22ab96aae_AbsTime _15113_abs = _22ab98e35_abs(&_15013_time);;
	_22ab80ca7_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_22ab80ca7_write(_self_, jule::Str("// JuleC version: ", 18));
	_22ab80ca7_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_22ab80ca7_write(_self_, jule::Str("\n", 1));
	_22ab80ca7_write(_self_, jule::Str("// Date: ", 9));
	_22ab80ca7_write(_self_, _229934672_fmt_uint(_15113_abs._field_day,10LL));
	_22ab80ca7_write(_self_, jule::Str("/", 1));
	_22ab80ca7_write(_self_, _229934672_fmt_uint(_15113_abs._field_month,10LL));
	_22ab80ca7_write(_self_, jule::Str("/", 1));
	_22ab80ca7_write(_self_, _229934672_fmt_uint(_15113_abs._field_year,10LL));
	_22ab80ca7_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_22ab80ca7_write(_self_, _self_.get()._field_info._field_compiler);
	_22ab80ca7_write(_self_, jule::Str(" ", 1));
	_22ab80ca7_write(_self_, _self_.get()._field_info._field_compiler_command);
	_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
	if (_23e74dd17_PRODUCTION) {
		_22ab80ca7_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_23e74d5db_RC))) {
		_22ab80ca7_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_23e74da09_SAFETY))) {
		_22ab80ca7_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_22ab80ca7_write(_self_, jule::Str("\n\n#include \"", 12));
	_22ab80ca7_write(_self_, _2273d7b83_PATH_API);
	_22ab80ca7_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _22ab81c97_links(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_22e08683b:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_cpp_linked))) {
						_case_begin_22e0882ee:;
						{
							goto _iter_next_22e08683b;
						}
					}
					else if (_24093bb4c_is_std_header_path(_18316_used.get()._field_path)) {
						_case_begin_22e08770a:;
						{
							_22ab80ca7_write(_self_, jule::Str("#include ", 9));
							_22ab80ca7_write(_self_, _18316_used.get()._field_path);
							_22ab80ca7_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_22e087364:;
						{
							_22ab80ca7_write(_self_, jule::Str("#include \"", 10));
							_22ab80ca7_write(_self_, _18316_used.get()._field_path);
							_22ab80ca7_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_22e087287:;
				};
			}
			_iter_next_22e08683b:;
			++it;
			goto _iter_begin_22e08683b;
		}
		_iter_end_22e08683b:;
	};
}



inline void _22ab670ce_prepare_structures(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_22e087056:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_token != nullptr)) {
					_22aba2515_prepare_structure(_20021_s);
				};
			}
			_iter_next_22e087056:;
			++it;
			goto _iter_begin_22e087056;
		}
		_iter_end_22e087056:;
	};
}



inline void _22ab6de1b_iter_packages(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_2299d85a0_Package>&)> _20733_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_22e08a004:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_cpp_linked))) {
					_20733_f(_20821_used.get()._field_package);
				};
			}
			_iter_next_22e08a004:;
			++it;
			goto _iter_begin_22e08a004;
		}
		_iter_end_22e08a004:;
	};
	_20733_f(_self_.get()._field_ir.get()._field_main);
}



inline void _22ab6e49e_build_trait_map(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_22ab6de1b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_2299d85a0_Package>&)>([=](jule::Ptr<_2299d85a0_Package>& _21736_pkg) mutable -> void {
		_22aba22b2_iter_files(_21736_pkg,jule::Fn<void(jule::Ptr<_229a4ca76_SymbolTable>&)>([=](jule::Ptr<_229a4ca76_SymbolTable>& _21837_file) mutable -> void {
			{
				auto &expr = _21837_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_22e08dd60:;
				if (it != expr.end()) {
					jule::Ptr<_22923d1bd_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_22ab9c763_TraitHash>(_22ab9c763_TraitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_22e08dd60;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_implemented;
							auto it = expr.begin();
							_iter_begin_22e09014c:;
							if (it != expr.end()) {
								jule::Ptr<_228d188c0_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_22e08e921:;
										if (it != expr.end()) {
											jule::Ptr<_228d44c1a_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_22ab9c763_TraitHash>(_22ab9c763_TraitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_22e08e921:;
											++it;
											goto _iter_begin_22e08e921;
										}
										_iter_end_22e08e921:;
									};
								}
								_iter_next_22e09014c:;
								++it;
								goto _iter_begin_22e09014c;
							}
							_iter_end_22e09014c:;
						};
					}
					_iter_next_22e08dd60:;
					++it;
					goto _iter_begin_22e08dd60;
				}
				_iter_end_22e08dd60:;
			};
		}));
	}));
}



inline void _22ab7036d_trait_decls(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_22ab6de1b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_2299d85a0_Package>&)>([=](jule::Ptr<_2299d85a0_Package>& _24836_pkg) mutable -> void {
		_22aba22b2_iter_files(_24836_pkg,jule::Fn<void(jule::Ptr<_229a4ca76_SymbolTable>&)>([=](jule::Ptr<_229a4ca76_SymbolTable>& _24937_file) mutable -> void {
			{
				auto &expr = _24937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_22e093925:;
				if (it != expr.end()) {
					jule::Ptr<_22923d1bd_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_token == nullptr)) {
							return;;
						};
						_22ab82c87_indent(_self_);
						_22ab80ca7_write(_self_, jule::Str("struct ", 7));
						_22ab80ca7_write(_self_, static__22ab36664_trait_decl(_25029_t));
						_22ab80ca7_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_22e093925:;
					++it;
					goto _iter_begin_22e093925;
				}
				_iter_end_22e093925:;
			};
		}));
	}));
}



inline void _22ab70a33_structure_plain_decl(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d188c0_Struct>& _26345_s) {
	{
		auto &expr = _26345_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_22e093518:;
		if (it != expr.end()) {
			jule::Ptr<_228d44c1a_StructIns> _26421_ins = *it;
			{
				_22ab80ca7_write(_self_, jule::Str("struct ", 7));
				_22ab80ca7_write(_self_, static__22ab36e4a_structure_ins(_26421_ins));
				_22ab80ca7_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_22e093518:;
			++it;
			goto _iter_begin_22e093518;
		}
		_iter_end_22e093518:;
	};
}



inline void _22ab711e8_structure_plain_decls(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_22e095bad:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_token != nullptr)) {
					_22ab70a33_structure_plain_decl(_self_, _27221_s);
				};
			}
			_iter_next_22e095bad:;
			++it;
			goto _iter_begin_22e095bad;
		}
		_iter_end_22e095bad:;
	};
}



inline void _22ab718ad_field_decl(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d21037_FieldIns>& _27935_f) {
	_22ab80ca7_write(_self_, static__22aba8373_kind(_27935_f.get()._field_kind));
	_22ab80ca7_write(_self_, jule::Str(" ", 1));
	_22ab80ca7_write(_self_, static__22ab371e2_field(_27935_f.get()._field_decl));
	_22ab80ca7_write(_self_, jule::Str(" = ", 3));
	if ((_27935_f.get()._field_default == nullptr)) {
		_22ab2e64b_init_expr(_self_.get()._field_ec, _27935_f.get()._field_kind);
	} else {
		_22ab2e151_expr(_self_.get()._field_ec, _27935_f.get()._field_default.get()._field_model);
	};
	_22ab80ca7_write(_self_, jule::Str(";", 1));
}



inline void _22ab68498_structure_destructor(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d44c1a_StructIns>& _29445_s) {
	;
	jule::Ptr<_228de6cbc_Fn> _29613_dispose_method = _228d1ed8d_find_method(_29445_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29717_disposed = static__229a0b64a_dispose(_29613_dispose_method);;
	if ((!(_29717_disposed))) {
		return;;
	};
	_22ab80ca7_write(_self_, jule::Str("~", 1));
	_22ab80ca7_write(_self_, static__22ab36e4a_structure_ins(_29445_s));
	_22ab80ca7_write(_self_, jule::Str("(void) { ", 9));
	_22ab80ca7_write(_self_, static__22ab36125_func(_29613_dispose_method));
	_22ab80ca7_write(_self_, jule::Str("(this); }", 9));
}



inline void _22ab9cee4_structure_derive_defs_decls(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d44c1a_StructIns>& _30948_s) {
	if (_228d09927_is_derives(_30948_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_22ab82c87_indent(_self_);
		_22ab80ca7_write(_self_, static__22ab31bae_clone_func_decl(_30948_s.get()._field_decl));
		_22ab80ca7_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _22ab9d126_structure_operator_eq(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Str& _31742_ident, jule::Ptr<_228d44c1a_StructIns>& _31759_s) {
	if ((_31759_s.get()._field_operators._field_eq != nullptr)) {
		_22ab9d38a_structure_operator(_self_, _31742_ident,_31759_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;;
	};
	_22ab82c87_indent(_self_);
	if (_2277218c3_INLINE) {
		_22ab80ca7_write(_self_, jule::Str("inline ", 7));
	};
	_22ab80ca7_write(_self_, jule::Str("bool operator==(", 16));
	_22ab80ca7_write(_self_, _31742_ident);
	_22ab80ca7_write(_self_, jule::Str(" _other) {", 10));
	if ((_31759_s.get()._field_fields.len() > 0LL)) {
		_22ab81549_add_indent(_self_);
		_22ab80ca7_write(_self_, jule::Str("\n", 1));
		_22ab82c87_indent(_self_);
		_22ab80ca7_write(_self_, jule::Str("return ", 7));
		_22ab81549_add_indent(_self_);
		jule::Bool _33721_writed = false;;
		{
			auto &expr = _31759_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_22e0a413e:;
			if (it != expr.end()) {
				jule::Ptr<_228d21037_FieldIns> _33825_f = *it;
				{
					jule::Ptr<_228d44c1a_StructIns> _34021_strct = _229a818bd_strct(_33825_f.get()._field_kind.ptr());;
					if ((((_34021_strct != nullptr) && (_34021_strct.get()._field_decl != nullptr)) && _34021_strct.get()._field_decl.get()._field_cpp_linked)) {
						goto _iter_next_22e0a413e;
					};
					if (_33721_writed) {
						_22ab80ca7_write(_self_, jule::Str(" &&", 3));
					};
					_33721_writed=true;
					_22ab80ca7_write(_self_, jule::Str("\n", 1));
					_22ab82c87_indent(_self_);
					_22ab80ca7_write(_self_, jule::Str("this->", 6));
					jule::Str _35221_f_ident = static__22ab371e2_field(_33825_f.get()._field_decl);;
					_22ab80ca7_write(_self_, _35221_f_ident);
					_22ab80ca7_write(_self_, jule::Str(" == _other.", 11));
					_22ab80ca7_write(_self_, _35221_f_ident);
				}
				_iter_next_22e0a413e:;
				++it;
				goto _iter_begin_22e0a413e;
			}
			_iter_end_22e0a413e:;
		};
		_22ab82539_done_indent(_self_);
		if ((!(_33721_writed))) {
			_22ab80ca7_write(_self_, jule::Str("true", 4));
		};
		_22ab80ca7_write(_self_, jule::Str(";\n", 2));
		_22ab82539_done_indent(_self_);
		_22ab82c87_indent(_self_);
		_22ab80ca7_write(_self_, jule::Str("}", 1));
	} else {
		_22ab80ca7_write(_self_, jule::Str(" return true; }", 15));
	};
	_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
}



inline void _22ab9d258_structure_operator_not_eq(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Str& _37146_ident, jule::Ptr<_228d44c1a_StructIns>& _37163_s) {
	_22ab82c87_indent(_self_);
	if (_2277218c3_INLINE) {
		_22ab80ca7_write(_self_, jule::Str("inline ", 7));
	};
	_22ab80ca7_write(_self_, jule::Str("bool operator!=(", 16));
	_22ab80ca7_write(_self_, _37146_ident);
	_22ab80ca7_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _22ab9d38a_structure_operator(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Str& _38239_ident, jule::Ptr<_228de996d_FnIns>& _38256_f, jule::Str _38267_op) {
	if ((_38256_f == nullptr)) {
		return;;
	};
	jule::Bool _38713_unary = (_38256_f.get()._field_params.len() == 1LL);;
	jule::Bool _38813_assignment = _228de722e_is_void(_38256_f.get()._field_decl.ptr());;
	_22ab82c87_indent(_self_);
	if (_2277218c3_INLINE) {
		_22ab80ca7_write(_self_, jule::Str("inline ", 7));
	};
	if (_38813_assignment) {
		_22ab80ca7_write(_self_, _38239_ident);
		_22ab80ca7_write(_self_, jule::Str("&", 1));
	} else {
		if ((_229a8046b_prim(_38256_f.get()._field_result.ptr()) == nullptr)) {
			_22ab80ca7_write(_self_, _38239_ident);
		} else {
			_22ab80ca7_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_22ab80ca7_write(_self_, jule::Str(" operator", 9));
	_22ab80ca7_write(_self_, _38267_op);
	_22ab80ca7_write(_self_, jule::Str("(", 1));
	if ((!(_38713_unary))) {
		jule::Ptr<_228de8a9e_ParamIns> _41021_p = _38256_f.get()._field_params[1LL];;
		_22ab80ca7_write(_self_, static__22aba754d_param_ins(_41021_p));
		_22ab80ca7_write(_self_, jule::Str(" _other", 7));
	};
	_22ab80ca7_write(_self_, jule::Str(") { ", 4));
	if ((!(_38813_assignment))) {
		_22ab80ca7_write(_self_, jule::Str("return ", 7));
	};
	_22ab80ca7_write(_self_, static__22ab363bc_func_ins(_38256_f));
	if ((!(_38713_unary))) {
		_22ab80ca7_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38813_assignment) {
			_22ab80ca7_write(_self_, jule::Str("return *this; ", 14));
		};
		_22ab80ca7_write(_self_, jule::Str("}", 1));
	} else {
		_22ab80ca7_write(_self_, jule::Str("(this); }", 9));
	};
	_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
}



inline void _22ab9d4bc_structure_operators(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d44c1a_StructIns>& _43144_s) {
	jule::Str _43213_ident = static__22ab36e4a_structure_ins(_43144_s);;
	_22ab9d126_structure_operator_eq(_self_, _43213_ident,_43144_s);
	_22ab9d258_structure_operator_not_eq(_self_, _43213_ident,_43144_s);
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add,jule::Str("+", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div,jule::Str("/", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_22ab9d38a_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
}



inline void _22ab9d5ee_structure_ins_decl(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d44c1a_StructIns>& _47043_s) {
	if ((_47043_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _47043_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_22e0c202a:;
			if (it != expr.end()) {
				jule::Ptr<_228de6cbc_Fn> _47225_m = *it;
				{
					_22ab9dc09_func_decl(_self_, _47225_m,false);
				}
				_iter_next_22e0c202a:;
				++it;
				goto _iter_begin_22e0c202a;
			}
			_iter_end_22e0c202a:;
		};
	};
	_22ab80ca7_write(_self_, jule::Str("struct ", 7));
	jule::Str _47813_out_ident = static__22ab36e4a_structure_ins(_47043_s);;
	_22ab80ca7_write(_self_, _47813_out_ident);
	_22ab80ca7_write(_self_, jule::Str(" {\n", 3));
	_22ab81549_add_indent(_self_);
	{
		auto &expr = _47043_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_22e0c402c:;
		if (it != expr.end()) {
			jule::Ptr<_228d21037_FieldIns> _48421_f = *it;
			{
				_22ab82c87_indent(_self_);
				_22ab718ad_field_decl(_self_, _48421_f);
				_22ab80ca7_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_22e0c402c:;
			++it;
			goto _iter_begin_22e0c402c;
		}
		_iter_end_22e0c402c:;
	};
	_22ab82c87_indent(_self_);
	_22ab68498_structure_destructor(_self_, _47043_s);
	_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
	_22ab82c87_indent(_self_);
	_22ab80ca7_write(_self_, _47813_out_ident);
	_22ab80ca7_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_22ab9cee4_structure_derive_defs_decls(_self_, _47043_s);
	_22ab9d4bc_structure_operators(_self_, _47043_s);
	_22ab80ca7_write(_self_, jule::Str("\n", 1));
	_22ab82539_done_indent(_self_);
	_22ab82c87_indent(_self_);
	_22ab80ca7_write(_self_, jule::Str("};", 2));
}



inline void _22ab9d731_structure_decl(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d188c0_Struct>& _50939_s) {
	{
		auto &expr = _50939_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_22e0c80a8:;
		if (it != expr.end()) {
			jule::Ptr<_228d44c1a_StructIns> _51021_ins = *it;
			{
				_22ab9d5ee_structure_ins_decl(_self_, _51021_ins);
			}
			_iter_next_22e0c80a8:;
			++it;
			goto _iter_begin_22e0c80a8;
		}
		_iter_end_22e0c80a8:;
	};
}



inline void _22ab9d863_structure_decls(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_22e0c8ecc:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> _51621_s = *it;
			{
				if ((_51621_s.get()._field_token != nullptr)) {
					_22ab9d731_structure_decl(_self_, _51621_s);
					_22ab80ca7_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_22e0c8ecc:;
			++it;
			goto _iter_begin_22e0c8ecc;
		}
		_iter_end_22e0c8ecc:;
	};
}



inline void _22ab9d995_params_decls(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>& _52437_params) {
	if ((_52437_params.len() == 0LL)) {
		_22ab80ca7_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_22ab80ca7_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52437_params;
		auto it = expr.begin();
		_iter_begin_22e0cb09a:;
		if (it != expr.end()) {
			jule::I64 _53114_i = it - expr.begin();
			jule::Ptr<_228de8a9e_ParamIns> _53121_p = *it;
			{
				_22ab80ca7_write(_self_, static__22aba754d_param_ins(_53121_p));
				if (((_52437_params.len() - _53114_i) > 1LL)) {
					_22ab80ca7_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_22e0cb09a:;
			++it;
			_53114_i++;
			goto _iter_begin_22e0cb09a;
		}
		_iter_end_22e0cb09a:;
	};
	_22ab80ca7_write(_self_, jule::Str(")", 1));
}



inline void _22ab9dac7_func_head(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228de996d_FnIns>& _54134_f, jule::Bool _54145_ptr) {
	if ((((!(_54145_ptr)) && _2277218c3_INLINE) && (!(_228de7707_is_entry_point(_54134_f.get()._field_decl.ptr()))))) {
		_22ab80ca7_write(_self_, jule::Str("inline ", 7));
	};
	_22ab80ca7_write(_self_, static__22aba7a8c_func_ins_result(_54134_f));
	if (_54145_ptr) {
		_22ab80ca7_write(_self_, jule::Str("(*", 2));
		_22ab80ca7_write(_self_, static__22ab363bc_func_ins(_54134_f));
		_22ab80ca7_write(_self_, jule::Str(")", 1));
	} else {
		_22ab80ca7_write(_self_, jule::Str(" ", 1));
		_22ab80ca7_write(_self_, static__22ab363bc_func_ins(_54134_f));
	};
}



inline void _22ab9dc09_func_decl(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228de6cbc_Fn>& _55634_f, jule::Bool _55642_ptr) {
	{
		auto &expr = _55634_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_22e0d1512:;
		if (it != expr.end()) {
			jule::Ptr<_228de996d_FnIns> _55721_c = *it;
			{
				_22ab82c87_indent(_self_);
				_22ab9dac7_func_head(_self_, _55721_c,_55642_ptr);
				_22ab9d995_params_decls(_self_, _55721_c.get()._field_params);
				_22ab80ca7_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_22e0d1512:;
			++it;
			goto _iter_begin_22e0d1512;
		}
		_iter_end_22e0d1512:;
	};
}



inline void _22ab9dd3b_func_decls(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_22ab6de1b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_2299d85a0_Package>&)>([=](jule::Ptr<_2299d85a0_Package>& _56636_pkg) mutable -> void {
		_22aba22b2_iter_files(_56636_pkg,jule::Fn<void(jule::Ptr<_229a4ca76_SymbolTable>&)>([=](jule::Ptr<_229a4ca76_SymbolTable>& _56737_file) mutable -> void {
			{
				auto &expr = _56737_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_22e0d4adc:;
				if (it != expr.end()) {
					jule::Ptr<_228de6cbc_Fn> _56829_f = *it;
					{
						if (((!(_56829_f.get()._field_cpp_linked)) && (_56829_f.get()._field_token != nullptr))) {
							_22ab9dc09_func_decl(_self_, _56829_f,false);
						};
					}
					_iter_next_22e0d4adc:;
					++it;
					goto _iter_begin_22e0d4adc;
				}
				_iter_end_22e0d4adc:;
			};
		}));
	}));
}



inline void _22ab9de6d_trait_data_types(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_22ab6de1b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_2299d85a0_Package>&)>([=](jule::Ptr<_2299d85a0_Package>& _57836_pkg) mutable -> void {
		_22aba22b2_iter_files(_57836_pkg,jule::Fn<void(jule::Ptr<_229a4ca76_SymbolTable>&)>([=](jule::Ptr<_229a4ca76_SymbolTable>& _57937_file) mutable -> void {
			{
				auto &expr = _57937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_22e0d78c0:;
				if (it != expr.end()) {
					jule::Ptr<_22923d1bd_Trait> _58029_t = *it;
					{
						if ((_58029_t.get()._field_token == nullptr)) {
							return;;
						};
						_22ab80ca7_write(_self_, jule::Str("struct ", 7));
						_22ab80ca7_write(_self_, static__22ab36664_trait_decl(_58029_t));
						_22ab80ca7_write(_self_, jule::Str("MptrData", 8));
						_22ab80ca7_write(_self_, jule::Str(" {\n", 3));
						_22ab81549_add_indent(_self_);
						{
							auto &expr = _58029_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_22e0d9680:;
							if (it != expr.end()) {
								jule::Ptr<_228de6cbc_Fn> _58933_m = *it;
								{
									jule::Ptr<_228de996d_FnIns> _59033_ins = _58933_m.get()._field_instances[0LL];;
									jule::Ptr<_228de8a9e_ParamIns> _59133_p = _59033_ins.get()._field_params[0LL];;
									_59133_p.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_58029_t, 2)});
									{
										auto expr = _59033_ins.get()._field_params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_22e0dbae4:;
										if (it != expr.end()) {
											jule::I64 _59530_i = it - expr.begin();
											jule::Ptr<_228de8a9e_ParamIns> _59537_ip = *it;
											{
												if (_2276b4558_is_anon_ident(_59537_ip.get()._field_decl.get()._field_ident)) {
													_59537_ip.get()._field_decl.get()._field_ident=(jule::Str("_", 1) + _2299348d6_itoa(_59530_i));
												};
											}
											_iter_next_22e0dbae4:;
											++it;
											_59530_i++;
											goto _iter_begin_22e0dbae4;
										}
										_iter_end_22e0dbae4:;
									};
									if ((!(_23e74dd17_PRODUCTION))) {
										_59033_ins.get()._field_params = jule::alloc_for_append(_59033_ins.get()._field_params,1);_59033_ins.get()._field_params.__push(jule::new_ptr<_228de8a9e_ParamIns>(_228de8a9e_ParamIns{._field_decl=jule::new_ptr<_228de5480_Param>(_228de5480_Param{._field_ident=jule::Str("__file", 6)}), ._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_22aba34c2_CustomType>(_22aba34c2_CustomType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_22ab9dc09_func_decl(_self_, _58933_m,true);
								}
								_iter_next_22e0d9680:;
								++it;
								goto _iter_begin_22e0d9680;
							}
							_iter_end_22e0d9680:;
						};
						_22ab82539_done_indent(_self_);
						_22ab82c87_indent(_self_);
						_22ab80ca7_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_22e0d78c0:;
					++it;
					goto _iter_begin_22e0d78c0;
				}
				_iter_end_22e0d78c0:;
			};
		}));
	}));
}



inline void _22ab9e0a0_param_ins(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228de8a9e_ParamIns>& _62234_p) {
	_22ab80ca7_write(_self_, static__22aba754d_param_ins(_62234_p));
	_22ab80ca7_write(_self_, jule::Str(" ", 1));
	_22ab80ca7_write(_self_, static__22ab3690b_param(_62234_p.get()._field_decl));
}



inline void _22ab9e2c0_params_ins(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>& _62835_params) {
	if ((_62835_params.len() == 0LL)) {
		_22ab80ca7_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_22ab80ca7_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62835_params;
		auto it = expr.begin();
		_iter_begin_22cb5c765:;
		if (it != expr.end()) {
			jule::I64 _63414_i = it - expr.begin();
			jule::Ptr<_228de8a9e_ParamIns> _63421_p = *it;
			{
				_22ab9e0a0_param_ins(_self_, _63421_p);
				if (((_62835_params.len() - _63414_i) > 1LL)) {
					_22ab80ca7_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_22cb5c765:;
			++it;
			_63414_i++;
			goto _iter_begin_22cb5c765;
		}
		_iter_end_22cb5c765:;
	};
	_22ab80ca7_write(_self_, jule::Str(")", 1));
}



inline void _22ab9e5de_var_init_expr(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_229a0a4a1_Var>& _64338_v, jule::Fn<void(void)> _64347_init) {
	if (_64338_v.get()._field_statically) {
		_22ab80ca7_write(_self_, jule::Str("static ", 7));
	};
	_22ab80ca7_write(_self_, static__22aba8373_kind(_64338_v.get()._field_kind.get()._field_kind));
	_22ab80ca7_write(_self_, jule::Str(" ", 1));
	if (_64338_v.get()._field_reference) {
		_22ab80ca7_write(_self_, jule::Str("&", 1));
	};
	_22ab80ca7_write(_self_, static__22ab37489_var(_64338_v));
	if ((_64347_init != nullptr)) {
		_22ab80ca7_write(_self_, jule::Str(" = ", 3));
		_64347_init();
	};
	_22ab80ca7_write(_self_, jule::Str(";", 1));
}



inline void _22ab9e864_var(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_229a0a4a1_Var> _66127_v) {
	if (_2276b42b1_is_ignore_ident(_66127_v.get()._field_ident)) {
		return;;
	};
	if (((_66127_v.get()._field_value != nullptr) && (_66127_v.get()._field_value.get()._field_expr != nullptr))) {
		if ((_66127_v.get()._field_value.get()._field_data.get()._field_model != nullptr)) {
			_22ab9e5de_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_22ab2e3c6_val(_self_.get()._field_ec, _66127_v.get()._field_value);
			}));
			return;;
		};
		_22ab9e5de_var_init_expr(_self_, _66127_v,nullptr);
		return;;
	};
	_22ab9e5de_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_22ab2e64b_init_expr(_self_.get()._field_ec, _66127_v.get()._field_kind.get()._field_kind);
	}));
}



inline void _22ab9ead9_func(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228de6cbc_Fn>& _67629_f) {
	{
		auto &expr = _67629_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_22d43139b:;
		if (it != expr.end()) {
			jule::Ptr<_228de996d_FnIns> _67721_ins = *it;
			{
				_22ab9dac7_func_head(_self_, _67721_ins,false);
				_22ab9e2c0_params_ins(_self_, _67721_ins.get()._field_params);
				_22ab80ca7_write(_self_, jule::Str(" ", 1));
				_22ab21187_func_scope(_self_.get()._field_sc, _67721_ins);
				if ((_67721_ins.get()._field_scope != nullptr)) {
					_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_22d43139b:;
			++it;
			goto _iter_begin_22d43139b;
		}
		_iter_end_22d43139b:;
	};
}



inline void _22ab9ecb5_trait_wrappers(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_22d431ad8:;
		if (it != expr.end()) {
			jule::Ptr<_22ab9c763_TraitHash> _68921_hash = *it;
			{
				{
					auto &expr = _68921_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_22d433e3c:;
					if (it != expr.end()) {
						jule::Ptr<_228de6cbc_Fn> _69025_m = *it;
						{
							jule::Str _69121_ident = _69025_m.get()._field_ident;;
							_69025_m.get()._field_instances[0LL].get()._field_scope=nullptr;
							_69025_m.get()._field_ident=((_69121_ident + jule::Str("_", 1)) + _2299348d6_itoa(_68921_hash.get()._field_i));
							_22ab9ead9_func(_self_, _69025_m);
							_69025_m.get()._field_ident=_69121_ident;
							if ((_68921_hash.get()._field_s == nullptr)) {
								if (_23e74dd17_PRODUCTION) {
									_22ab80ca7_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_22ab80ca7_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_22d433e3c;
							};
							jule::Bool _70721_ptr = (!(_228de5d21_is_ref(_69025_m.get()._field_params[0LL].ptr())));;
							jule::Ptr<_228de6cbc_Fn> _70925_sm = _228d1ed8d_find_method(_68921_hash.get()._field_s.ptr(), _69025_m.get()._field_ident,false);;
							if (((_70925_sm == nullptr) || (_70925_sm.get()._field_instances.len() == 0LL))) {
								goto _iter_next_22d433e3c;
							};
							_22ab81549_add_indent(_self_);
							_22ab80ca7_write(_self_, jule::Str("{\n", 2));
							_22ab82c87_indent(_self_);
							if ((!(_228de722e_is_void(_70925_sm.ptr())))) {
								_22ab80ca7_write(_self_, jule::Str("return ", 7));
							};
							_22ab80ca7_write(_self_, static__22ab36125_func(_70925_sm));
							_22ab80ca7_write(_self_, jule::Str("(", 1));
							if (_70721_ptr) {
								_22ab80ca7_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_22ab80ca7_write(_self_, static__22aba6c67_structure_ins(_68921_hash.get()._field_s));
								_22ab80ca7_write(_self_, jule::Str(">(", 2));
								if ((!(_23e74dd17_PRODUCTION))) {
									_22ab80ca7_write(_self_, jule::Str("_00___file", 10));
								};
								_22ab80ca7_write(_self_, jule::Str(")", 1));
							} else {
								_22ab80ca7_write(_self_, jule::Str("_self_.data.as<", 15));
								_22ab80ca7_write(_self_, static__22aba69c0_structure(_70925_sm.get()._field_owner));
								_22ab80ca7_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69025_m.get()._field_params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_22d43d41e:;
								if (it != expr.end()) {
									jule::Ptr<_228de5480_Param> _73524_mp = *it;
									{
										_22ab80ca7_write(_self_, jule::Str(", ", 2));
										_22ab80ca7_write(_self_, static__22ab3690b_param(_73524_mp));
									}
									_iter_next_22d43d41e:;
									++it;
									goto _iter_begin_22d43d41e;
								}
								_iter_end_22d43d41e:;
							};
							_22ab80ca7_write(_self_, jule::Str(");\n}\n", 5));
							_22ab82539_done_indent(_self_);
						}
						_iter_next_22d433e3c:;
						++it;
						goto _iter_begin_22d433e3c;
					}
					_iter_end_22d433e3c:;
				};
			}
			_iter_next_22d431ad8:;
			++it;
			goto _iter_begin_22d431ad8;
		}
		_iter_end_22d431ad8:;
	};
}



inline void _22ab9ee91_trait_datas(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	jule::Ptr<_22923d1bd_Trait> _74617_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_22d43ecb1:;
		if (it != expr.end()) {
			jule::Ptr<_22ab9c763_TraitHash> _74721_hash = *it;
			{
				jule::Str _74817_ident = static__22ab36664_trait_decl(_74721_hash.get()._field_t);;
				if ((_74721_hash.get()._field_t != _74617_old)) {
					if ((_74617_old != nullptr)) {
						_22ab82539_done_indent(_self_);
						_22ab82c87_indent(_self_);
						_22ab80ca7_write(_self_, jule::Str("};\n", 3));
					};
					_22ab80ca7_write(_self_, jule::Str("static ", 7));
					_22ab80ca7_write(_self_, _74817_ident);
					_22ab80ca7_write(_self_, jule::Str("MptrData ", 9));
					_22ab80ca7_write(_self_, _74817_ident);
					_22ab80ca7_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74617_old=_74721_hash.get()._field_t;
					_22ab81549_add_indent(_self_);
				};
				_22ab82c87_indent(_self_);
				_22ab80ca7_write(_self_, jule::Str("{\n", 2));
				_22ab81549_add_indent(_self_);
				{
					auto &expr = _74721_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_22d443a51:;
					if (it != expr.end()) {
						jule::Ptr<_228de6cbc_Fn> _76625_m = *it;
						{
							jule::Str _76721_m_ident = static__22ab36125_func(_76625_m);;
							_22ab82c87_indent(_self_);
							_22ab80ca7_write(_self_, jule::Str(".", 1));
							_22ab80ca7_write(_self_, _76721_m_ident);
							_22ab80ca7_write(_self_, jule::Str("=", 1));
							_22ab80ca7_write(_self_, _76721_m_ident);
							_22ab80ca7_write(_self_, jule::Str("_", 1));
							_22ab80ca7_write(_self_, _2299348d6_itoa(_74721_hash.get()._field_i));
							_22ab80ca7_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_22d443a51:;
						++it;
						goto _iter_begin_22d443a51;
					}
					_iter_end_22d443a51:;
				};
				_22ab82539_done_indent(_self_);
				_22ab82c87_indent(_self_);
				_22ab80ca7_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_22d43ecb1:;
			++it;
			goto _iter_begin_22d43ecb1;
		}
		_iter_end_22d43ecb1:;
	};
	if ((_74617_old != nullptr)) {
		_22ab82539_done_indent(_self_);
		_22ab82c87_indent(_self_);
		_22ab80ca7_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _22aba016c_globals(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_globals;
		auto it = expr.begin();
		_iter_begin_22d447758:;
		if (it != expr.end()) {
			jule::Ptr<_229a0a4a1_Var> _78921_v = *it;
			{
				_22ab80ca7_write(_self_, static__22aba8373_kind(_78921_v.get()._field_kind.get()._field_kind));
				_22ab80ca7_write(_self_, jule::Str(" ", 1));
				if (_78921_v.get()._field_reference) {
					_22ab80ca7_write(_self_, jule::Str("&", 1));
				};
				_22ab80ca7_write(_self_, static__22ab37489_var(_78921_v));
				_22ab80ca7_write(_self_, jule::Str(" = ", 3));
				_22ab2e3c6_val(_self_.get()._field_ec, _78921_v.get()._field_value);
				_22ab80ca7_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_22d447758:;
			++it;
			goto _iter_begin_22d447758;
		}
		_iter_end_22d447758:;
	};
}



inline void _22aba0348_decls(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_22ab7036d_trait_decls(_self_);
	_22ab711e8_structure_plain_decls(_self_);
	_22ab9d863_structure_decls(_self_);
	_22ab9dd3b_func_decls(_self_);
	_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
	_22ab9de6d_trait_data_types(_self_);
	_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
	_22ab9ecb5_trait_wrappers(_self_);
	_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
	_22ab9ee91_trait_datas(_self_);
	_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
	_22aba016c_globals(_self_);
}



inline void _22aba05bd_structure_methods(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d44c1a_StructIns>& _81742_s) {
	{
		auto &expr = _81742_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_22d44ddd0:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _81821_f = *it;
			{
				_22ab9ead9_func(_self_, _81821_f);
				_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_22d44ddd0:;
			++it;
			goto _iter_begin_22d44ddd0;
		}
		_iter_end_22d44ddd0:;
	};
}



inline void _22aba0843_structure_derive_defs(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d44c1a_StructIns>& _82446_s) {
	if (_228d09927_is_derives(_82446_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_22ab80ca7_write(_self_, static__22ab31e56_clone_func_def(_82446_s.get()._field_decl));
		_22ab80ca7_write(_self_, jule::Str("{\n", 2));
		_22ab81549_add_indent(_self_);
		_22ab82c87_indent(_self_);
		_22ab80ca7_write(_self_, static__22aba6c67_structure_ins(_82446_s));
		_22ab80ca7_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82446_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_22d451b2a:;
			if (it != expr.end()) {
				jule::Ptr<_228d21037_FieldIns> _83220_f = *it;
				{
					jule::Str _83321_ident = static__22ab371e2_field(_83220_f.get()._field_decl);;
					_22ab82c87_indent(_self_);
					_22ab80ca7_write(_self_, jule::Str("clone.", 6));
					_22ab80ca7_write(_self_, _83321_ident);
					_22ab80ca7_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_22ab80ca7_write(_self_, _83321_ident);
					_22ab80ca7_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_22d451b2a:;
				++it;
				goto _iter_begin_22d451b2a;
			}
			_iter_end_22d451b2a:;
		};
		_22ab82c87_indent(_self_);
		_22ab80ca7_write(_self_, jule::Str("return clone;\n", 14));
		_22ab82539_done_indent(_self_);
		_22ab80ca7_write(_self_, jule::Str("}", 1));
	};
}



inline void _22aba0ab8_structure_ostream(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d44c1a_StructIns>& _84842_s) {
	_22ab82c87_indent(_self_);
	_22ab80ca7_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_22ab80ca7_write(_self_, static__22ab36e4a_structure_ins(_84842_s));
	_22ab80ca7_write(_self_, jule::Str(" _Src) {\n", 9));
	_22ab81549_add_indent(_self_);
	_22ab82c87_indent(_self_);
	jule::Ptr<_228de6cbc_Fn> _85617_fts = _228d1ed8d_find_method(_84842_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__229a0b8e2_to_str(_85617_fts)) {
		_22ab80ca7_write(_self_, jule::Str("_Stream << ", 11));
		_22ab80ca7_write(_self_, static__22ab36125_func(_85617_fts));
		_22ab80ca7_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_22ab80ca7_write(_self_, jule::Str("_Stream << \"", 12));
		_22ab80ca7_write(_self_, _84842_s.get()._field_decl.get()._field_ident);
		_22ab80ca7_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84842_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_22d459517:;
			if (it != expr.end()) {
				jule::I64 _86618_i = it - expr.begin();
				jule::Ptr<_228d21037_FieldIns> _86625_f = *it;
				{
					_22ab82c87_indent(_self_);
					_22ab80ca7_write(_self_, jule::Str("_Stream << \"", 12));
					_22ab80ca7_write(_self_, _86625_f.get()._field_decl.get()._field_ident);
					_22ab80ca7_write(_self_, jule::Str(":", 1));
					jule::Ptr<_228d44c1a_StructIns> _87321_strct = _229a818bd_strct(_86625_f.get()._field_kind.ptr());;
					if ((((_87321_strct != nullptr) && (_87321_strct.get()._field_decl != nullptr)) && _87321_strct.get()._field_decl.get()._field_cpp_linked)) {
						_22ab80ca7_write(_self_, jule::Str(" cpp.", 5));
						_22ab80ca7_write(_self_, static__22ab371e2_field(_86625_f.get()._field_decl));
						_22ab80ca7_write(_self_, jule::Str("\"", 1));
					} else {
						_22ab80ca7_write(_self_, jule::Str("\" << _Src.", 10));
						_22ab80ca7_write(_self_, static__22ab371e2_field(_86625_f.get()._field_decl));
					};
					if (((_86618_i + 1LL) < _84842_s.get()._field_fields.len())) {
						_22ab80ca7_write(_self_, jule::Str(" << \", \"", 8));
					};
					_22ab80ca7_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_22d459517:;
				++it;
				_86618_i++;
				goto _iter_begin_22d459517;
			}
			_iter_end_22d459517:;
		};
		_22ab82c87_indent(_self_);
		_22ab80ca7_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_22ab82c87_indent(_self_);
	_22ab80ca7_write(_self_, jule::Str("return _Stream;\n", 16));
	_22ab82539_done_indent(_self_);
	_22ab80ca7_write(_self_, jule::Str("}", 1));
}



inline void _22aba0d3d_structure_ins(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d44c1a_StructIns>& _89938_s) {
	_22aba05bd_structure_methods(_self_, _89938_s);
	_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
	_22aba0843_structure_derive_defs(_self_, _89938_s);
	_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
	_22aba0ab8_structure_ostream(_self_, _89938_s);
}



inline void _22aba10b3_structure(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_228d188c0_Struct>& _90734_s) {
	{
		auto &expr = _90734_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_22d462696:;
		if (it != expr.end()) {
			jule::Ptr<_228d44c1a_StructIns> _90821_ins = *it;
			{
				_22aba0d3d_structure_ins(_self_, _90821_ins);
				_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_22d462696:;
			++it;
			goto _iter_begin_22d462696;
		}
		_iter_end_22d462696:;
	};
}



inline void _22aba128e_structures(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_22d462e27:;
		if (it != expr.end()) {
			jule::Ptr<_228d188c0_Struct> _91521_s = *it;
			{
				if ((_91521_s.get()._field_token != nullptr)) {
					_22aba10b3_structure(_self_, _91521_s);
					_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_22d462e27:;
			++it;
			goto _iter_begin_22d462e27;
		}
		_iter_end_22d462e27:;
	};
}



inline void _22aba146a_funcs(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_22ab6de1b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_2299d85a0_Package>&)>([=](jule::Ptr<_2299d85a0_Package>& _92436_pkg) mutable -> void {
		_22aba22b2_iter_files(_92436_pkg,jule::Fn<void(jule::Ptr<_229a4ca76_SymbolTable>&)>([=](jule::Ptr<_229a4ca76_SymbolTable>& _92537_file) mutable -> void {
			{
				auto &expr = _92537_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_22d466c0b:;
				if (it != expr.end()) {
					jule::Ptr<_228de6cbc_Fn> _92629_f = *it;
					{
						if (((!(_23e74d2cd_TEST)) && _22abab068_has_directive(_92629_f.get()._field_directives,jule::Str("test", 4)))) {
							goto _iter_next_22d466c0b;
						};
						if (((!(_92629_f.get()._field_cpp_linked)) && (_92629_f.get()._field_token != nullptr))) {
							_22ab9ead9_func(_self_, _92629_f);
							_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_22d466c0b:;
					++it;
					goto _iter_begin_22d466c0b;
				}
				_iter_end_22d466c0b:;
			};
		}));
	}));
}



inline void _22aba16e0_push_init(jule::Ptr<_22ab9c950_ObjectCoder> _self_, jule::Ptr<_2299d85a0_Package>& _93934_pkg) {
	_22aba22b2_iter_files(_93934_pkg,jule::Fn<void(jule::Ptr<_229a4ca76_SymbolTable>&)>([=](jule::Ptr<_229a4ca76_SymbolTable>& _94033_file) mutable -> void {
		{
			auto &expr = _94033_file.get()._field_funcs;
			auto it = expr.begin();
			_iter_begin_22d4695b0:;
			if (it != expr.end()) {
				jule::Ptr<_228de6cbc_Fn> _94120_f = *it;
				{
					if ((_94120_f.get()._field_ident == jule::Str("init", 4))) {
						_22ab82c87_indent(_self_);
						_22ab80ca7_write(_self_, static__22ab36125_func(_94120_f));
						_22ab80ca7_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_22d4695b0:;
				++it;
				goto _iter_begin_22d4695b0;
			}
			_iter_end_22d4695b0:;
		};
	}));
}



inline void _22aba18bb_init_caller(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_22ab80ca7_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_22ab81549_add_indent(_self_);
	_22ab6de1b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_2299d85a0_Package>&)>([=](jule::Ptr<_2299d85a0_Package>& _95436_pkg) mutable -> void {
		_22aba16e0_push_init(_self_, _95436_pkg);
	}));
	_22ab82539_done_indent(_self_);
	_22ab80ca7_write(_self_, jule::Str("\n}", 2));
}



inline void _22aba1a97_end(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_22ab80ca7_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_23e74d2cd_TEST) {
		_22ab80ca7_write(_self_, jule::Str("test_point();", 13));
	} else {
		_22ab80ca7_write(_self_, jule::Str("entry_point();", 14));
	};
	_22ab80ca7_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _22aba1c73_serialize_head(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_22ab670ce_prepare_structures(_self_);
	_22ab6e49e_build_trait_map(_self_);
	_22ab637a1_head(_self_);
	_22ab81c97_links(_self_);
	_22ab80ca7_write(_self_, jule::Str("\n", 1));
	_22aba0348_decls(_self_);
	_22ab80ca7_write(_self_, jule::Str("\n", 1));
	_22aba128e_structures(_self_);
	_22aba146a_funcs(_self_);
	_22aba18bb_init_caller(_self_);
	_22ab80ca7_write(_self_, jule::Str("\n\n", 2));
}



inline void _22aba1e4e_serialize(jule::Ptr<_22ab9c950_ObjectCoder> _self_) {
	_22aba1c73_serialize_head(_self_);
	_22aba1a97_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _22ab9c950_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "obj:" << _Src._field_obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _22d4bde61_parse_integer(_22abdbc8b_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_22d4c34e8:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_2273415c0_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_22d4c39c1:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_2273415c0_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_22d4c385b:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_2273415c0_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_22d4c3aae:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_22d4c3b25:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_22d4c3152:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_22d4c3075:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _22d4c6d04_parse_integer(_22abdbc8b_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_22d4cb567:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_2273415c0_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_22d4cba40:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_2273415c0_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_22d4cb8ca:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_2273415c0_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_22d4cbb2d:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_22d4cbb94:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_22d4cb1c1:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_22d4cb0e4:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _22abdc583_get_data(_22abdbc8b_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _22abdc7c5_process_flag(_22abdbc8b_ArgParser* _self_, jule::Trait<_22a7c4874_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_22d4a6311_Flag>>()) {
			_case_begin_22d4bae5d:;
			{
				jule::Ptr<_22d4a6311_Flag> _22021_bf = _21736_flag.operator jule::Ptr<_22d4a6311_Flag>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_22d4bade7:;
	};
	jule::Str _22513_data = _22abdc583_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _22a7c4874_CommonFlag_mptr_data[(_21736_flag).type_offset]._22a7c4742_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_22d49a13a_Flag>>()) {
			_case_begin_22d4bc613:;
			{
				jule::Ptr<_22d49a13a_Flag> _23221_intf = _21736_flag.operator jule::Ptr<_22d49a13a_Flag>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _22d4bde61_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s, jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _22963be3a_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _22a7c4874_CommonFlag_mptr_data[(_21736_flag).type_offset]._22a7c4742_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_22d49dced_Flag>>()) {
			_case_begin_22d4bd04d:;
			{
				jule::Ptr<_22d49dced_Flag> _24021_uintf = _21736_flag.operator jule::Ptr<_22d49dced_Flag>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _22d4c6d04_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s, jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _2295b00de_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _22a7c4874_CommonFlag_mptr_data[(_21736_flag).type_offset]._22a7c4742_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_22d4a27d5_Flag>>()) {
			_case_begin_22d4bd0b4:;
			{
				jule::Ptr<_22d4a27d5_Flag> _24821_ff = _21736_flag.operator jule::Ptr<_22d4a27d5_Flag>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _2296c5e19_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _22a7c4874_CommonFlag_mptr_data[(_21736_flag).type_offset]._22a7c4742_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_22d4a9ce8_Flag>>()) {
			_case_begin_22d4bd12a:;
			{
				(*(_21736_flag.operator jule::Ptr<_22d4a9ce8_Flag>().get()._field__data))=_22513_data;
			}
		}
		_match_end_22d4bced7:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _22abdca4a_single_dash(_22abdbc8b_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_22d4d1e1e:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_22a7c4874_CommonFlag> _26321_flag = _22abda141_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _22abdc7c5_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_22d4d1e1e:;
			++it;
			goto _iter_begin_22d4d1e1e;
		}
		_iter_end_22d4d1e1e:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _22abdccc0_double_dash(_22abdbc8b_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_22a7c4874_CommonFlag> _27617_flag = _22abd9d33_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _22abdc7c5_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _22abdce9b_try_arg(_22abdbc8b_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _22abdccc0_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _22abdca4a_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _22abdd177_parse(_22abdbc8b_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _22abdce9b_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_22d4d9ee3:;
	}
	_iter_end_22d4d9ee3:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _22abdbc8b_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _23e93bda1_free(void* _4524_ptr) {
	free(_4524_ptr);
}



inline jule::Str _240576776_byte_ptr_to_str(jule::U8* _6931_s) {
	if ((_6931_s == nullptr)) {
		return jule::Str();
	};
	{
		return static_cast<jule::Str>(_6931_s);
	};
}



inline jule::I64 _23e7d0a36_get_last_errno(void) {
	return errno;
}



inline jule::I64 _240577007_stat(jule::U8* _3920_path, struct stat* _3937_stat) {
	return static_cast<jule::I64>(stat(((char*)(_3920_path)), _3937_stat));
}



inline jule::I64 _240577139_open(jule::U8* _4420_path, jule::I64 _4433_flag, jule::I64 _4444_mode) {
	return static_cast<jule::I64>(open(((char*)(_4420_path)),_4433_flag,_4444_mode));
}



inline jule::U8* _24057726b_getcwd(jule::U8* _5022_buff, jule::U64 _5035_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5022_buff)),_5035_bufflen)));
}



inline DIR* _24057739d_opendir(jule::U8* _5523_path) {
	return opendir(((char*)(_5523_path)));
}



inline struct dirent* _2405774d0_readdir(DIR* _5827_dir) {
	return readdir(_5827_dir);
}



inline jule::I64 _240577843_closedir(DIR* _6128_dir) {
	return static_cast<jule::I64>(closedir(_6128_dir));
}



inline jule::I64 _240577bd9_mkdir(jule::U8* _7021_path, jule::I64 _7034_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7021_path)),_7034_mode));
}



inline jule::I64 _240577d1b_rmdir(jule::U8* _7521_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_7521_path))));
}



inline jule::I64 _240577e4d_unlink(jule::U8* _7822_path) {
	return static_cast<jule::I64>(unlink(((char*)(_7822_path))));
}



inline jule::I64 _240579900_seek(jule::I64 _2613_handle, jule::I64 _2626_offset, jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _240579cda_read(jule::I64 _3120_handle, void* _3137_buff, jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _24057a15e_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _24057a549_write(jule::I64 _3921_handle, void* _3934_buff, jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _24057a758_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline jule::I64 _240619a4a_get_last_os_error(void) {
	jule::I64 _309_err = _23e7d0a36_get_last_errno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_22ac4c68c:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_22ac4c703:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_22ac4c769:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_22ac4c7d0:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_22ac4ca22:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_22ac4ca88:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_22ac4caee:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_22ac4c505:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_22ac4c4a0:;
	};
}



inline jule::Slice<jule::Str> _240641335_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _2406417a8_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _24064216b___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _24064216b___getwd(void) {
	jule::U8* _1113_buff = _24057726b_getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_240619a4a_get_last_os_error());
	};
	jule::Str _159_pwd = _240576776_byte_ptr_to_str(_1113_buff);;
	{
		_23e93bda1_free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Slice<jule::U8> _2406ce813_stobs(jule::Str& _1315_s) {
	return _1315_s.fake_slice();
}



inline jule::Bool _227245a02_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_2272b4db2__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	};
	return _2272bd86b_is_excluding_latin(_227250974_LETTER,_7618_r);
}



inline jule::Bool _2272bcc88_is16(jule::Slice<_2272bb1c6_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_22b3a9788:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_2272bb1c6_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_hi)) {
							return ((_19417_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_lo),_19417_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_22b3a9788:;
				++it;
				_19313_i++;
				goto _iter_begin_22b3a9788;
			}
			_iter_end_22b3a9788:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_2272bb1c6_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi))) {
					return ((_21213_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_lo),_21213_range->_field_stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_22b3a8116:;
	}
	_iter_end_22b3a8116:;;
	return false;
}



inline jule::Bool _2272bd0c9_is32(jule::Slice<_2272bb649_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_22b3b0e21:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_2272bb649_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_hi)) {
							return ((_23117_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_lo),_23117_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_22b3b0e21:;
				++it;
				_23013_i++;
				goto _iter_begin_22b3b0e21;
			}
			_iter_end_22b3b0e21:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_2272bb649_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi))) {
					return ((_24913_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_lo),_24913_range->_field_stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_22b3acaaa:;
	}
	_iter_end_22b3acaaa:;;
	return false;
}



inline jule::Bool _2272bd86b_is_excluding_latin(jule::Ptr<_2272bbabc_RangeTable> _27823_range_tab, jule::I32 _27847_r) {
	{
		jule::Slice<_2272bb1c6_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;;
		if (((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi)))) {
			return _2272bcc88_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		};
	};
	jule::Slice<_2272bb649_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;;
	if (((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo)))) {
		return _2272bd0c9_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	};
	return false;
}



inline std::tuple<jule::I32,jule::I64> _22737e344_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _1869_p0 = _18220_p[0LL];;
	jule::U8 _1879_x = _22737d1de_FIRST[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_22737d761_accept_range _1969_accept = _22737dac4_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18220_p.len() < _1959_sz)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2009_b1 = _18220_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2079_b2 = _18220_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2149_b3 = _18220_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	_18233_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _22737e90a_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _2809_end = _27625_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_2273812d0_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_22b40796d;
			};
		}
	_iter_next_22b40796d:;
	}
	_iter_end_22b40796d:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27638_r,_27647_size) = _22737e344_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27647_size) != _2809_end)) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::Slice<jule::U8> _2273806a8_append_rune(jule::Slice<jule::U8> _40524_p, jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	};
	return _2273809e9_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _2273809e9_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p, jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_22b41d18c:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41245_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_22b41b82d:;
			{
				_41245_r=65533LL;
				goto _case_begin_22b41b894;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_22b41b894:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41245_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_22b41ad16:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41245_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		_match_end_22b41acb1:;
	};
}



inline jule::I64 _227381038_rune_count_str(jule::Str _47323_s) {
	jule::I64 _47333_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47323_s.len()); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_22b4255d4;
			};
			jule::U8 _48213_x = _22737d1de_FIRST[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_22b4255d4;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47323_s.len())) {
				(_47413_i)++;
				goto _iter_next_22b4255d4;
			};
			_22737d761_accept_range _49213_accept = _22737dac4_ACCEPT_RANGES[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_22b4255d4:;
	}
	_iter_end_22b4255d4:;;
	return _47333_n;
}



inline jule::Bool _2273812d0_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::Str _227315ab1_repeat(jule::Str _1415_s, jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1415_s.len() > jule::div(jule::MAX_I64,_1427_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:19:9"));;
	};
	jule::Str _2213_ss = jule::Str::alloc((_1415_s.len() * _1427_n));;
	for (; (_1427_n > 0LL); (_1427_n)--) {
		{
			_2213_ss+=_1415_s;
		}
	_iter_next_22b45a718:;
	}
	_iter_end_22b45a718:;;
	return _2213_ss;
}



inline jule::Bool _227316d59__has_prefix(jule::Str& _2917_s, jule::Str& _2926_sub, jule::I64 _2940_start) {
	if (((_2926_sub.len() == 0LL) || ((_2917_s.len() - _2940_start) < _2926_sub.len()))) {
		return false;
	};
	jule::I64 _3413_i = 0LL;;
	for (; (_3413_i < _2926_sub.len()); std::tie(_3413_i,_2940_start) = std::make_tuple(static_cast<jule::I64>((_3413_i + 1LL)),static_cast<jule::I64>((_2940_start + 1LL)))) {
		{
			if ((_2917_s[_2940_start] != _2926_sub[_3413_i])) {
				return false;
			};
		}
	_iter_next_22b45d7d7:;
	}
	_iter_end_22b45d7d7:;;
	return true;
}



inline jule::Bool _2273415c0_has_prefix(jule::Str _4419_s, jule::Str _4427_sub) {
	return _227316d59__has_prefix(_4419_s,_4427_sub,0LL);
}



inline jule::Bool _2273497d7__has_suffix(jule::Str& _4817_s, jule::Str& _4826_sub, jule::I64 _4840_start) {
	if (((_4826_sub.len() == 0LL) || ((_4817_s.len() - _4840_start) < _4826_sub.len()))) {
		return false;
	};
	_4840_start=static_cast<jule::I64>((_4817_s.len() - _4840_start));
	jule::I64 _5413_i = 0LL;;
	for (; (_5413_i < _4826_sub.len()); (_5413_i)++) {
		{
			if ((_4817_s[((_4840_start - _5413_i) - 1LL)] != _4826_sub[((_4826_sub.len() - _5413_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_22b4607ea:;
	}
	_iter_end_22b4607ea:;;
	return true;
}



inline jule::Bool _227352092_has_suffix(jule::Str _6419_s, jule::Str _6427_sub) {
	return _2273497d7__has_suffix(_6419_s,_6427_sub,0LL);
}



inline jule::I64 _22731e67a_find_at(jule::Str _7216_s, jule::Str _7224_sub, jule::I64 _7238_i) {
	if ((((_7238_i < 0LL) || (_7216_s.len() < _7224_sub.len())) || (_7224_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7238_i < _7216_s.len()); (_7238_i)++) {
		{
			if (_227316d59__has_prefix(_7216_s,_7224_sub,_7238_i)) {
				return _7238_i;
			};
		}
	_iter_next_22b46428d:;
	}
	_iter_end_22b46428d:;;
	return -1LL;
}



inline jule::I64 _227338c27_find_last_at(jule::Str _9521_s, jule::Str _9529_sub, jule::I64 _9539_i) {
	jule::I64 _9613_j = ((_9539_i - _9529_sub.len()) + 1LL);;
	if (((((_9529_sub.len() == 0LL) || (_9539_i < 0LL)) || (_9539_i >= _9521_s.len())) || (_9613_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9613_j >= 0LL); (_9613_j)--) {
		{
			jule::I64 _10217_k = _9613_j;;
			jule::I64 _10317_z = 0LL;;
			for (; (_10317_z < _9529_sub.len()); std::tie(_10217_k,_10317_z) = std::make_tuple(static_cast<jule::I64>((_10217_k + 1LL)),static_cast<jule::I64>((_10317_z + 1LL)))) {
				{
					if ((_9521_s[_10217_k] != _9529_sub[_10317_z])) {
						goto _iter_next_22b466955;
					};
				}
			_iter_next_22b468935:;
			}
			_iter_end_22b468935:;;
			return _9613_j;
		}
	_iter_next_22b466955:;
	}
	_iter_end_22b466955:;;
	return -1LL;
}



inline jule::I64 _227381da2_find_last(jule::Str _11718_s, jule::Str _11726_sub) {
	return static_cast<jule::I64>(_227338c27_find_last_at(_11718_s,_11726_sub,static_cast<jule::I64>((_11718_s.len() - 1LL))));
}



inline jule::I64 _2273824ac__find_rune(jule::Slice<jule::U8>& _17316_s, jule::I32 _17327_r) {
	jule::I64 _17413_i = 0LL;;
	while ((_17413_i < _17316_s.len())) {
		{
			jule::I32 _17614_br;;
			jule::I64 _17618_n;;
			std::tie(_17614_br,_17618_n) = _22737e344_decode_rune(_17316_s.slice(_17413_i));
			if ((_17327_r == _17614_br)) {
				return _17413_i;
			};
			_17413_i+=_17618_n;
		}
	_iter_next_22b4713ee:;
	}
	_iter_end_22b4713ee:;;
	return -1LL;
}



inline jule::I64 _227382952_find_last_byte(jule::Str _20023_s, jule::U8 _20031_b) {
	jule::I64 _20113_i = (_20023_s.len() - 1LL);;
	for (; (_20113_i >= 0LL); (_20113_i)--) {
		{
			if ((_20023_s[_20113_i] == _20031_b)) {
				return _20113_i;
			};
		}
	_iter_next_22b474457:;
	}
	_iter_end_22b474457:;;
	return -1LL;
}



inline jule::I64 _227382e2a_find_any(jule::Str _24117_s, jule::Str _24125_runes) {
	jule::Slice<jule::U8> _2429_sb = _2406ce813_stobs(_24117_s);;
	jule::Slice<jule::U8> _24313_rb = _2406ce813_stobs(_24125_runes);;
	jule::I64 _24413_i = 0LL;;
	while ((_24413_i < _2429_sb.len())) {
		{
			jule::I32 _24614_r;;
			jule::I64 _24617_n;;
			std::tie(_24614_r,_24617_n) = _22737e344_decode_rune(_2429_sb.slice(_24413_i));
			if ((_2273824ac__find_rune(_24313_rb,_24614_r) != -1LL)) {
				return _24413_i;
			};
			_24413_i+=_24617_n;
		}
	_iter_next_22b478d63:;
	}
	_iter_end_22b478d63:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _22738359b_split(jule::Str _27514_s, jule::Str _27522_sub, jule::I64 _27536_n) {
	jule::I64 _27613_cap = _27536_n;;
	if ((_27536_n < 0LL)) {
		_27613_cap=16LL;
	};
	jule::Slice<jule::Str> _28013_parts = jule::Slice<jule::Str>::alloc(0LL,_27613_cap);;
	if ((_27536_n == 0LL)) {
		return _28013_parts;
	};
	if ((_27536_n < 0LL)) {
		_27536_n=static_cast<jule::I64>(_27514_s.len());
	};
	jule::I64 _28713_i = 0LL;;
	for (; (_27536_n > 0LL); (_27536_n)--) {
		{
			jule::I64 _28913_j = _22731e67a_find_at(_27514_s,_27522_sub,_28713_i);;
			if ((_28913_j == -1LL)) {
				goto _iter_end_22b480a3a;
			};
			_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i,_28913_j));;
			_28713_i=static_cast<jule::I64>((_28913_j + _27522_sub.len()));
		}
	_iter_next_22b480a3a:;
	}
	_iter_end_22b480a3a:;;
	if (((_27536_n > 0LL) && (_28713_i < _27514_s.len()))) {
		_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i));;
	};
	return _28013_parts;
}



inline jule::Bool _2273838dc_contains(jule::Str _30317_s, jule::Str _30325_sub) {
	return (_22731e67a_find_at(_30317_s,_30325_sub,0LL) != -1LL);
}



inline jule::Bool _2273843b0_contains_any(jule::Str _31921_s, jule::Str _31929_runes) {
	return (_227382e2a_find_any(_31921_s,_31929_runes) != -1LL);
}



inline jule::I64 _227384701_count(jule::Str _32514_s, jule::Str _32522_sub) {
	if ((_32522_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _32913_n = 0LL;;
	jule::I64 _33013_i = 0LL;;
	for (;;) {
		{
			jule::I64 _33213_j = _22731e67a_find_at(_32514_s,_32522_sub,_33013_i);;
			if ((_33213_j == -1LL)) {
				goto _iter_end_22b48b2b5;
			};
			(_32913_n)++;
			_33013_i=static_cast<jule::I64>((_33213_j + _32522_sub.len()));
		}
	_iter_next_22b48b2b5:;
	}
	_iter_end_22b48b2b5:;;
	return _32913_n;
}



inline jule::Str _227384b85_replace(jule::Str _34516_s, jule::Str _34524_sub, jule::Str _34534_new, jule::I64 _34548_n) {
	if (((_34548_n == 0LL) || (_34524_sub == _34534_new))) {
		return _34516_s;
	};
	jule::I64 _3509_m = _227384701_count(_34516_s,_34524_sub);;
	if ((_3509_m == 0LL)) {
		return _34516_s;
	};
	if (((_34548_n < 0LL) || (_3509_m < _34548_n))) {
		_34548_n=_3509_m;
	};
	jule::Str _35813_ss = jule::Str::alloc((_34516_s.len() + (_34548_n * (_34534_new.len() - _34524_sub.len()))));;
	jule::I64 _35913_i = 0LL;;
	for (; (_34548_n > 0LL); (_34548_n)--) {
		{
			jule::I64 _36113_j = _22731e67a_find_at(_34516_s,_34524_sub,_35913_i);;
			if ((_36113_j == -1LL)) {
				goto _iter_end_22b2b8c2a;
			};
			_35813_ss+=_34516_s.slice(_35913_i,_36113_j);
			_35813_ss+=_34534_new;
			_35913_i=static_cast<jule::I64>((_36113_j + _34524_sub.len()));
		}
	_iter_next_22b2b8c2a:;
	}
	_iter_end_22b2b8c2a:;;
	_35813_ss+=_34516_s.slice(_35913_i);
	return _35813_ss;
}



inline void _227382776__trim_left(jule::Slice<jule::U8>& _40120_s, jule::Slice<jule::U8>& _40132_cutset) {
	jule::I64 _40213_i = 0LL;;
	while ((_40213_i < _40120_s.len())) {
		{
			jule::I32 _40414_r;;
			jule::I64 _40417_n;;
			std::tie(_40414_r,_40417_n) = _22737e344_decode_rune(_40120_s.slice(_40213_i));
			if ((_2273824ac__find_rune(_40132_cutset,_40414_r) == -1LL)) {
				_40120_s=_40120_s.slice(_40213_i);
				return;;
			};
			_40213_i+=_40417_n;
		}
	_iter_next_22b2bdadc:;
	}
	_iter_end_22b2bdadc:;;
	_40120_s=nullptr;
}



inline jule::Str _227385c41_trim_left(jule::Str _41618_s, jule::Str _41626_cutset) {
	jule::Slice<jule::U8> _41713_bytes = _2406ce813_stobs(_41618_s);;
	jule::Slice<jule::U8> _4189_bcutset = _2406ce813_stobs(_41626_cutset);;
	_227382776__trim_left(_41713_bytes,_4189_bcutset);
	return static_cast<jule::Str>(_41713_bytes);
}



inline void _227385ee9__trim_right(jule::Slice<jule::U8>& _42321_s, jule::Slice<jule::U8>& _42333_cutset) {
	jule::I64 _42413_i = _42321_s.len();;
	while ((_42413_i > 0LL)) {
		{
			jule::I32 _42614_r;;
			jule::I64 _42617_n;;
			std::tie(_42614_r,_42617_n) = _22737e90a_decode_last_rune(_42321_s.slice(0LL,_42413_i));
			if ((_2273824ac__find_rune(_42333_cutset,_42614_r) == -1LL)) {
				_42321_s=_42321_s.slice(0LL,_42413_i);
				return;;
			};
			_42413_i-=_42617_n;
		}
	_iter_next_22b2c2041:;
	}
	_iter_end_22b2c2041:;;
	_42321_s=nullptr;
}



inline jule::Str _22738667b_trim(jule::Str _44713_s, jule::Str _44721_cutset) {
	jule::Slice<jule::U8> _44813_bytes = _2406ce813_stobs(_44713_s);;
	jule::Slice<jule::U8> _4499_bcutset = _2406ce813_stobs(_44721_cutset);;
	_227382776__trim_left(_44813_bytes,_4499_bcutset);
	_227385ee9__trim_right(_44813_bytes,_4499_bcutset);
	return static_cast<jule::Str>(_44813_bytes);
}



inline jule::Str _2273869bc_join(jule::Slice<jule::Str> _45713_parts, jule::Str _45727_sep) {
	{
		auto _match_expr{ _45713_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_22b2c6452:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_22b2c64c9:;
			{
				return _45713_parts[0LL];
			}
		}
		_match_end_22b2c62ba:;
	};
	jule::Str _46413_s = _45713_parts[0LL];;
	{
		auto expr = _45713_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_22b2c7640:;
		if (it != expr.end()) {
			jule::Str &_46512_part = *it;
			{
				_46413_s+=_45727_sep;
				_46413_s+=_46512_part;
			}
			_iter_next_22b2c7640:;
			++it;
			goto _iter_begin_22b2c7640;
		}
		_iter_end_22b2c7640:;
	};
	return _46413_s;
}



inline jule::Str _227388095_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;;
	jule::I64 _1109_vol_len = _22738acbd_volume_name_len(_10818_path);;
	(_10818_path).mut_slice(_1109_vol_len);;
	if (_10818_path.empty()) {
		if ((((_1109_vol_len > 1LL) && _22738a73a_is_path_sep(_1099_original_path[0LL])) && _22738a73a_is_path_sep(_1099_original_path[1LL]))) {
			return _227388628_from_slash(_1099_original_path);
		};
		return (_1099_original_path + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _22738a73a_is_path_sep(_10818_path[0LL]);;
	jule::I64 _1269_n = _10818_path.len();;
	_2273872d6_LazyBuff _12713_out = _2273872d6_LazyBuff{._field_path=_10818_path, ._field_vol_and_path=_1099_original_path, ._field_vol_len=_1109_vol_len};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_2273879ce_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_22738a73a_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_22b2d6a8e:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _22738a73a_is_path_sep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_22b2d9784:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _22738a73a_is_path_sep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_22b2d97ea:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_22b2dc743:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_22738a73a_is_path_sep(static_cast<jule::U8>(_227387759_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_22b2dca40:;
									}
									_iter_end_22b2dca40:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_22b2dc7a9:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_2273879ce_append(&_12713_out, 47LLU);
									};
									_2273879ce_append(&_12713_out, '.');
									_2273879ce_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_22b2dc37a:;
						};
					}
				}
				else {
					_case_begin_22b2d4e11:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_2273879ce_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_22738a73a_is_path_sep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_2273879ce_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_22b2d6550:;
						}
						_iter_end_22b2d6550:;;
					}
				}
				_match_end_22b2d4d34:;
			};
		}
	_iter_next_22b2d4493:;
	}
	_iter_end_22b2d4493:;;
	if ((_12713_out._field_w == 0LL)) {
		_2273879ce_append(&_12713_out, '.');
	};
	return _227388628_from_slash(_227387c43_string(&_12713_out));
}



inline jule::Str _227388628_from_slash(jule::Str _21119_path) {
	if ((47LL == '/')) {
		return _21119_path;
	};
	return _227384b85_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _227388947_join(jule::Slice<jule::Str> _22513_elem) {
	return _22738b384___join(_22513_elem);
}



inline jule::Str _227388bde_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_22738a73a_is_path_sep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_22b2e26c1:;
	}
	_iter_end_22b2e26c1:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _227388e86_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _22738b0dc___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _22738922d_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _22738a73a_is_path_sep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_22b2e44a3:;
	}
	_iter_end_22b2e44a3:;;
	(_25417_path).mut_slice(_227389849_volume_name(_25417_path).len());;
	jule::I64 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_22738a73a_is_path_sep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_22b2e6472:;
	}
	_iter_end_22b2e6472:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(47LL);
	};
	return _25417_path;
}



inline jule::Str _2273895a2_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _227389849_volume_name(_28512_path);;
	jule::I64 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_22738a73a_is_path_sep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_22b2e88e7:;
	}
	_iter_end_22b2e88e7:;;
	jule::Str _2919_dir = _227388095_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _227389849_volume_name(jule::Str _30320_path) {
	return _227388628_from_slash(_30320_path.slice(0LL,_22738acbd_volume_name_len(_30320_path)));
}



inline jule::Bool _22738a73a_is_path_sep(jule::U8 _4820_c) {
	return (47LL == _4820_c);
}



inline jule::Bool _22738aa26_is_abs(jule::Str _5315_path) {
	return _2273415c0_has_prefix(_5315_path,jule::Str("/", 1));
}



inline jule::I64 _22738acbd_volume_name_len(jule::Str _5920_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _22738b0dc___abs(jule::Str _6310_path) {
	jule::Bool _6328_ok = jule::Bool();
	if (_22738aa26_is_abs(_6310_path)) {
		_6328_ok = true;
		return std::make_tuple(_227388095_clean(_6310_path),_6328_ok);
	};
	jule::Str _679_wd = ({
		auto except = _2406417a8_working_dir();
		(except.ok()) ? (except.result) : ({{
			_6328_ok = false;
			return std::make_tuple(jule::Str(),_6328_ok);
		} jule::Str();});
	});;
	_6328_ok = true;
	return std::make_tuple(_22738b384___join(jule::Slice<jule::Str>::make({_679_wd,_6310_path})),_6328_ok);
}



inline jule::Str _22738b384___join(jule::Slice<jule::Str> _7311_elem) {
	{
		auto &expr = _7311_elem;
		auto it = expr.begin();
		_iter_begin_22b30369e:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _227388095_clean(_2273869bc_join(_7311_elem.slice(_749_i),static_cast<jule::Str>(47LL)));
				};
			}
			_iter_next_22b30369e:;
			++it;
			_749_i++;
			goto _iter_begin_22b30369e;
		}
		_iter_end_22b30369e:;
	};
	return jule::Str();
}



inline jule::I64 _23e7ece3d_get_last_fs_error(void) {
	jule::I64 _729_err = _23e7d0a36_get_last_errno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_22b3115d0:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_22b310ab8:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_22b31103b:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_22b3110a2:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_22b311118:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_22b31117e:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_22b3117de:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_22b311855:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_22b3118bb:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_22b311932:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_22b311998:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_22b311a0e:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_22b311a75:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_22b311aec:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_22b311b74:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_22b311beb:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_22b311c73:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_22b311cea:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_22b311d72:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_22b311de9:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_22b311e71:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_22b311ee8:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_22b312070:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_22b3120e7:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_22b31216e:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_22b3121e6:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_22b31226d:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_22b3122e5:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_22b310da4:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_22b310d4e:;
	};
}



inline jule::I64 _2273d90a2_get_last_process_error(void) {
	jule::I64 _429_err = _23e7d0a36_get_last_errno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_22b604a16:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_22b604e89:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_22b605000:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_22b605066:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_22b6050cc:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_22b60531e:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_22b605385:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_22b6053eb:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_22b605462:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 67LL) {
			_case_begin_22b6054c8:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_22b60553e:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_22b604d02:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_22b604c9c:;
	};
}



inline jule::Slice<char*> _2273dc32a_str_slice_to_cstr_slice(jule::Slice<jule::Str> _2028_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL,(_2028_s.len() + 1LL));;
	{
		auto &expr = _2028_s;
		auto it = expr.begin();
		_iter_begin_22b611ec9:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2028_s[_229_i][0LL])))));;
			}
			_iter_next_22b611ec9:;
			++it;
			_229_i++;
			goto _iter_begin_22b611ec9;
		}
		_iter_end_22b611ec9:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;
}



inline jule::I64 _2273dc78c_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _2273dc32a_str_slice_to_cstr_slice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));
	};
}



inline jule::I64 _2273dcb77_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _2273dc32a_str_slice_to_cstr_slice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _2273dc32a_str_slice_to_cstr_slice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));
	};
}



inline void _2273dd78d_exit(jule::I64 _1213_code) {
	_24057a758_exit(_1213_code);
}



inline jule::Str _2273dd98b_executable(void) {
	return jule::executable();
}



inline jule::Bool _24093bb4c_is_std_header_path(jule::Str _2627_p) {
	return ((_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>'));
}



inline jule::Bool _24093be05_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _24093a1cd_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_22b645c00:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3128_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_22b645c00:;
			++it;
			goto _iter_begin_22b645c00;
		}
		_iter_end_22b645c00:;
	};
	return false;
}



inline jule::Bool _24093c19c_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _24093b586_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_22b647be1:;
		if (it != expr.end()) {
			jule::Str &_4712_e = *it;
			{
				if ((_4225_ext == _4712_e)) {
					return true;
				};
			}
			_iter_next_22b647be1:;
			++it;
			goto _iter_begin_22b647be1;
		}
		_iter_end_22b647be1:;
	};
	{
		auto &expr = _24093b872_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_22b648939:;
		if (it != expr.end()) {
			jule::Str &_5312_e = *it;
			{
				if ((_4225_ext == _5312_e)) {
					return true;
				};
			}
			_iter_next_22b648939:;
			++it;
			goto _iter_begin_22b648939;
		}
		_iter_end_22b648939:;
	};
	return false;
}



inline jule::Str _240948be2_logf(jule::Str _29313_fmt, jule::Slice<jule::Any> _29326_args) {
	return _24094960a_apply_fmt(_29313_fmt,jule::Any(_29326_args));
}



inline jule::Str _240948ecd_arg_to_str(jule::Any _29715_arg) {
	{
		auto &_match_expr{ _29715_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_22b649b16:;
			{
				return _29715_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_22b649b7c:;
			{
				return static_cast<jule::Str>(_29715_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_22b649be3:;
			{
				return static_cast<jule::Str>(_29715_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_22b648cad:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_22b649709:;
	};
}



inline jule::I64 _240949275_find_next_fmt(jule::Str _31018_fmt) {
	{
		auto &expr = _31018_fmt;
		auto it = expr.begin();
		_iter_begin_22b64ae47:;
		if (it != expr.end()) {
			jule::I64 _3119_i = it - expr.begin();
			jule::U8 &_31112_b = *it;
			{
				if ((_31112_b == '@')) {
					return _3119_i;
				};
			}
			_iter_next_22b64ae47:;
			++it;
			_3119_i++;
			goto _iter_begin_22b64ae47;
		}
		_iter_end_22b64ae47:;
	};
	return -1LL;
}



inline jule::Str _24094960a_apply_fmt(jule::Str _31918_fmt, jule::Slice<jule::Any> _31928_args) {
	jule::Str _32013_s = jule::Str();;
	{
		auto &expr = _31928_args;
		auto it = expr.begin();
		_iter_begin_22b64c773:;
		if (it != expr.end()) {
			jule::Any &_32212_arg = *it;
			{
				jule::I64 _32313_i = _240949275_find_next_fmt(_31918_fmt);;
				if ((_32313_i == -1LL)) {
					goto _iter_end_22b64c773;
				};
				_32013_s+=_31918_fmt.slice(0LL,_32313_i);
				_32013_s+=_240948ecd_arg_to_str(jule::Any(_32212_arg));
				(_31918_fmt).mut_slice((_32313_i + 1LL));;
			}
			_iter_next_22b64c773:;
			++it;
			goto _iter_begin_22b64c773;
		}
		_iter_end_22b64c773:;
	};
	_32013_s+=_31918_fmt;
	return _32013_s;
}



inline jule::Bool _24094a6c7_is_top_directive(jule::Str _2825_directive) {
	return ((_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5)));
}



inline jule::Bool _24094c29a_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _24094c586_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _24094c82d_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _24094cb4c_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _24094cde4_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _24094d18b_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _24094d433_is_unix(jule::Str _6916_os) {
	return (_24094c586_is_darwin(_6916_os) || _24094c82d_is_linux(_6916_os));
}



inline jule::Bool _24094d7a7_is_32bit(jule::Str _7217_arch) {
	return _24094cb4c_is_i386(_7217_arch);
}



inline jule::Bool _24094da4e_is_64bit(jule::Str _7517_arch) {
	return (_24094cde4_is_amd64(_7517_arch) || _24094d18b_is_arm64(_7517_arch));
}



inline void _24095ae13_init(void) {
	jule::Str _2513_path = _2273dd98b_executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_2273cc2a4_PATH_WD=({
			auto except = _2406417a8_working_dir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_2273c9b53_PATH_EXEC=_2273895a2_dir(_2513_path);
		_2273c7c61_PATH_STDLIB=_227388947_join(jule::Slice<jule::Str>::make({_2273c9b53_PATH_EXEC,jule::Str("..", 2),jule::Str("std", 3)}));
		_2273d7b83_PATH_API=_227388947_join(jule::Slice<jule::Str>::make({_2273c9b53_PATH_EXEC,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _2276b2226_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _2276126c6_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_22b6967ab:;
		if (it != expr.end()) {
			jule::Str &_31412_op = *it;
			{
				if ((_31320_kind == _31412_op)) {
					return true;
				};
			}
			_iter_next_22b6967ab:;
			++it;
			goto _iter_begin_22b6967ab;
		}
		_iter_end_22b6967ab:;
	};
	return false;
}



inline jule::Bool _2276b2512_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _227612a17_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_22b6971b3:;
		if (it != expr.end()) {
			jule::Str &_32512_op = *it;
			{
				if ((_32418_kind == _32512_op)) {
					return true;
				};
			}
			_iter_next_22b6971b3:;
			++it;
			goto _iter_begin_22b6971b3;
		}
		_iter_end_22b6971b3:;
	};
	return false;
}



inline jule::Bool _2276b2ac8_is_str(jule::Str _34615_k) {
	return ((!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _2276b2d70_is_raw_str(_34615_k)));
}



inline jule::Bool _2276b2d70_is_raw_str(jule::Str _34919_k) {
	return ((!(_34919_k.empty())) && (_34919_k[0LL] == '`'));
}



inline jule::Bool _2276b3117_is_rune(jule::Str _35316_k) {
	return ((!(_35316_k.empty())) && (_35316_k[0LL] == '\''));
}



inline jule::Bool _2276b3733_is_bool(jule::Str _35916_k) {
	return ((_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5)));
}



inline jule::Bool _2276b39ca_is_float(jule::Str _36217_k) {
	if (_2273415c0_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _2273843b0_contains_any(_36217_k,jule::Str(".pP", 3));
	};
	return _2273843b0_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _2276b3c72_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	};
	jule::U8 _3759_b = _37015_k[0LL];;
	return ((_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9')));
}



inline jule::Bool _2276b42b1_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _2276b4558_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _2276b4a97_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _227612462_SPACES;
		auto it = expr.begin();
		_iter_begin_22b6a108a:;
		if (it != expr.end()) {
			jule::I32 &_40312_cr = *it;
			{
				if ((_40217_r == _40312_cr)) {
					return true;
				};
			}
			_iter_next_22b6a108a:;
			++it;
			goto _iter_begin_22b6a108a;
		}
		_iter_end_22b6a108a:;
	};
	return false;
}



inline jule::Bool _2276b4ee8_is_letter(jule::I32 _41318_r) {
	return _227245a02_is_letter(_41318_r);
}



inline jule::Bool _2276b5537_is_decimal(jule::U8 _43519_b) {
	return (('0' <= _43519_b) && (_43519_b <= '9'));
}



inline jule::Bool _2276b57ce_is_binary(jule::U8 _43818_b) {
	return ((_43818_b == '0') || (_43818_b == '1'));
}



inline jule::Bool _2276b5a76_is_octal(jule::U8 _44117_b) {
	return (('0' <= _44117_b) && (_44117_b <= '7'));
}



inline jule::Bool _2276b5d1d_is_hex(jule::U8 _44415_b) {
	{
		
		if ((('0' <= _44415_b) && (_44415_b <= '9'))) {
			_case_begin_22b6a5de7:;
			{
				return true;
			}
		}
		else if ((('a' <= _44415_b) && (_44415_b <= 'f'))) {
			_case_begin_22b6a56cc:;
			{
				return true;
			}
		}
		else if ((('A' <= _44415_b) && (_44415_b <= 'F'))) {
			_case_begin_22b6a5743:;
			{
				return true;
			}
		}
		else {
			_case_begin_22b6a5666:;
			{
				return false;
			}
		}
		_match_end_22b6a55ab:;
	};
}



inline jule::Bool _2276b60b5_is_assign(jule::U64 _45918_id) {
	return (((((((_45918_id == static_cast<jule::U64>(2LLU)) || (_45918_id == static_cast<jule::U64>(31LLU))) || (_45918_id == static_cast<jule::U64>(34LLU))) || (_45918_id == static_cast<jule::U64>(20LLU))) || (_45918_id == static_cast<jule::U64>(28LLU))) || (_45918_id == static_cast<jule::U64>(3LLU))) || (_45918_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _2276b635c_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _2276aaede_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_22b6a7844:;
		if (it != expr.end()) {
			jule::Str &_47112_op = *it;
			{
				if ((_47022_kind == _47112_op)) {
					return true;
				};
			}
			_iter_next_22b6a7844:;
			++it;
			goto _iter_begin_22b6a7844;
		}
		_iter_end_22b6a7844:;
	};
	return false;
}



inline jule::Bool _2276b6604_is_assign_op(jule::Str _48121_kind) {
	if (_2276b635c_is_postfix_op(_48121_kind)) {
		return true;
	};
	{
		auto &expr = _2276ab330_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_22b6aa34c:;
		if (it != expr.end()) {
			jule::Str &_48612_op = *it;
			{
				if ((_48121_kind == _48612_op)) {
					return true;
				};
			}
			_iter_next_22b6aa34c:;
			++it;
			goto _iter_begin_22b6aa34c;
		}
		_iter_end_22b6aa34c:;
	};
	return false;
}



inline jule::Ptr<_2276b6da7_File> _2276b83d6_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_2276b6da7_File>(_2276b6da7_File{._field_path=_6321_path, });
}



inline _2409487a2_Log _2276b9c12_make_err(jule::I64 _11113_row, jule::I64 _11123_col, jule::Ptr<_2276b6da7_File>& _11134_f, jule::Str _11144_fmt, jule::Slice<jule::Any> _11157_args) {
	return _2409487a2_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_11113_row, ._field_column=_11123_col, ._field_path=_11134_f.get()._field_path, ._field_text=_240948be2_logf(_11144_fmt,jule::Any(_11157_args)), };
}



inline jule::Bool _2276ba097_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes, jule::Str _12137_prefix) {
	if ((_12122_bytes.len() < _12137_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_22b6b5962:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12122_bytes[_1259_i] != _12137_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_22b6b5962:;
			++it;
			_1259_i++;
			goto _iter_begin_22b6b5962;
		}
		_iter_end_22b6b5962:;
	};
	return true;
}



inline jule::Str _2276ba3d8_float_fmt_e(jule::Slice<jule::U8>& _13317_txt, jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if ((_13334_i >= _13317_txt.len())) {
		return _13344_lit;
	};
	jule::U8 _13913_b = _13317_txt[_13334_i];;
	if ((_13913_b == '_')) {
		return _13344_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13334_i)++;
		if ((_13334_i >= _13317_txt.len())) {
			return _13344_lit;
		};
		if ((_13317_txt[_13334_i] == '_')) {
			return _13344_lit;
		};
	};
	jule::I64 _1539_first = _13334_i;;
	for (; (_13334_i < _13317_txt.len()); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if (((_13913_b != '_') && (!(_2276b5537_is_decimal(_13913_b))))) {
				goto _iter_end_22b6b91c4;
			};
		}
	_iter_next_22b6b91c4:;
	}
	_iter_end_22b6b91c4:;;
	if ((_13334_i == _1539_first)) {
		_13344_lit = jule::Str();
		return _13344_lit;
	};
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _2276ba76d_float_fmt_p(jule::Slice<jule::U8>& _16717_txt, jule::I64 _16730_i) {
	return _2276ba3d8_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _2276baaae_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt, jule::I64 _17138_i) {
	if ((_17121_txt[_17138_i] != '.')) {
		return jule::Str();
	};
	(_17138_i)++;
	_julec_label_loop:;
	for (; (_17138_i < _17121_txt.len()); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];;
			{
				
				if ((_17913_b == '_') || _2276b5537_is_decimal(_17913_b)) {
					_case_begin_22b6bc491:;
					{
						goto _iter_next_22b6baba9;
					}
				}
				else if (_2276bc363_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_22b6bc507:;
					{
						return _2276ba76d_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_22b6bc42a:;
					{
						goto _iter_end_22b6baba9;
					}
				}
				_match_end_22b6bc3b4:;
			};
		}
	_iter_next_22b6baba9:;
	}
	_iter_end_22b6baba9:;;
	return jule::Str();
}



inline jule::Str _2276bae00_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt, jule::I64 _19238_i) {
	_19238_i+=2LL;
	return _2276ba3d8_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _2276bb241_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt, jule::I64 _19737_i) {
	(_19737_i)++;
	return _2276ba3d8_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _2276bb692_float_num(jule::Slice<jule::U8>& _20215_txt, jule::I64 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if ((_20232_i >= _20215_txt.len())) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	};
	if ((_20215_txt[_20232_i] == '_')) {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	};
	for (; (_20232_i < _20215_txt.len()); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];;
			if (((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20242_lit = _2276ba3d8_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			};
			if (((_21213_b != '_') && (!(_2276b5537_is_decimal(_21213_b))))) {
				goto _iter_end_22b6becac;
			};
		}
	_iter_next_22b6becac:;
	}
	_iter_end_22b6becac:;;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	};
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _2276bb939_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22716_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_22b6c44ed:;
					{
						_22731_lit = _2276bb692_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_22b6c4575:;
					{
						goto _iter_next_22b6c3783;
					}
				}
				else if (_2276bc022_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_22b6c45ec:;
					{
						_22731_lit = _2276ba3d8_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_2276b5537_is_decimal(_23113_b)))) {
					_case_begin_22b6c4674:;
					{
						goto _iter_end_22b6c3783;
					}
				}
				_match_end_22b6c4421:;
			};
		}
	_iter_next_22b6c3783:;
	}
	_iter_end_22b6c3783:;;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	};
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _2276bbbd1_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_2276ba097_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	};
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25016_txt.len()); (_25913_i)++) {
		{
			if (((_25016_txt[_25913_i] != '_') && (!(_2276b57ce_is_binary(_25016_txt[_25913_i]))))) {
				goto _iter_end_22b6c7c93;
			};
		}
	_iter_next_22b6c7c93:;
	}
	_iter_end_22b6c7c93:;;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	};
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _2276bc022_is_float_fmt_e(jule::U8 _27219_b, jule::I64 _27228_i) {
	return ((_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E')));
}



inline jule::Bool _2276bc363_is_float_fmt_p(jule::U8 _27619_b, jule::I64 _27628_i) {
	return ((_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P')));
}



inline jule::Bool _2276bc6a4_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt, jule::I64 _28041_i) {
	if ((_28024_txt[_28041_i] != '.')) {
		return false;
	};
	(_28041_i)++;
	_julec_label_loop:;
	for (; (_28041_i < _28024_txt.len()); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];;
			{
				
				if ((_28713_b == '_') || _2276b5537_is_decimal(_28713_b)) {
					_case_begin_22b6cc65a:;
					{
						goto _iter_next_22b6ca67a;
					}
				}
				else if (_2276bc363_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_22b6cc6c1:;
					{
						return true;
					}
				}
				else {
					_case_begin_22b6cc5e4:;
					{
						goto _iter_end_22b6ca67a;
					}
				}
				_match_end_22b6cc57d:;
			};
		}
	_iter_next_22b6ca67a:;
	}
	_iter_end_22b6ca67a:;;
	return false;
}



inline jule::Bool _2276bc9e5_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt, jule::I64 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_22b6ce45e:;
			{
				goto _case_begin_22b6cdc22;
			}
		}
		else if ((_30123_txt[_30136_i] != '.')) {
			_case_begin_22b6cdc22:;
			{
				goto _case_begin_22b6cdc88;
			}
		}
		else if (((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P'))) {
			_case_begin_22b6cdc88:;
			{
				return false;
			}
		}
		else {
			_case_begin_22b6cdbab:;
			{
				return true;
			}
		}
		_match_end_22b6cdace:;
	};
}



inline jule::Bool _2276bcd36_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt, jule::I64 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_22b6d176e:;
			{
				goto _case_begin_22b6d10a9;
			}
		}
		else if ((_31424_txt[_31437_i] != '.')) {
			_case_begin_22b6d10a9:;
			{
				goto _case_begin_22b6d1120;
			}
		}
		else if (((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F'))) {
			_case_begin_22b6d1120:;
			{
				goto _case_begin_22b6d1186;
			}
		}
		else if (((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P'))) {
			_case_begin_22b6d1186:;
			{
				return false;
			}
		}
		else {
			_case_begin_22b6d0a6a:;
			{
				return true;
			}
		}
		_match_end_22b6d098d:;
	};
}



inline jule::Str _2276bd287_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if ((_32915_txt[0LL] != '0')) {
		_32930_lit = jule::Str();
		return _32930_lit;
	};
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	};
	jule::I64 _33713_octal_start = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32915_txt[1LL] == 'o')) {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		};
		(_33713_octal_start)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octal_start;;
	for (; (_34813_i < _32915_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				};
				_32930_lit = _2276bb692_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (_2276bc022_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _2276ba3d8_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (((_35013_b != '_') && (!(_2276b5a76_is_octal(_35013_b))))) {
				goto _iter_end_22b6d6598;
			};
		}
	_iter_next_22b6d6598:;
	}
	_iter_end_22b6d6598:;;
	if ((_34813_i == _33713_octal_start)) {
		return _32930_lit;
	};
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _2276bd52e_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	};
	if (((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X')))) {
		return _37128_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37113_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];;
			{
				
				if (_2276bc9e5_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_22b6dc1e7:;
					{
						_37128_lit = _2276bb241_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_2276bcd36_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_22b6dc26e:;
					{
						_37128_lit = _2276bae00_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_2276bc363_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_22b6dc2e6:;
					{
						_37128_lit = _2276ba76d_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_2276bc6a4_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_22b6dc36d:;
					{
						_37128_lit = _2276baaae_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_2276b5d1d_is_hex(_38313_b))))) {
					_case_begin_22b6dc3e5:;
					{
						goto _iter_end_22b6db58c;
					}
				}
				_match_end_22b6dc109:;
			};
		}
	_iter_next_22b6db58c:;
	}
	_iter_end_22b6db58c:;;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	};
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _2276bd870_hex_escape(jule::Slice<jule::U8>& _40416_txt, jule::I64 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if ((_40416_txt.len() < _40429_n)) {
		return _40439_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40429_n); (_41013_i)++) {
		{
			if ((!(_2276b5d1d_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			};
		}
	_iter_next_22b6e000d:;
	}
	_iter_end_22b6e000d:;;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _2276bdb39_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _2276bd870_hex_escape(_42230_txt,10LL);
}



inline jule::Str _2276bdd04_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _2276bd870_hex_escape(_42733_txt,6LL);
}



inline jule::Str _2276be0ac_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _2276bd870_hex_escape(_43221_txt,4LL);
}



inline jule::Str _2276be354_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	};
	if ((((!(_2276b5a76_is_octal(_43717_txt[1LL]))) || (!(_2276b5a76_is_octal(_43717_txt[2LL])))) || (!(_2276b5a76_is_octal(_43717_txt[3LL]))))) {
		return _43732_seq;
	};
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_2409487a2_Log> _2276c3d4d_lex(jule::Ptr<_2276b6da7_File> _83216_f, jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	};
	_2276bea3b_Lex _83713_lex = _2276bea3b_Lex{._field_mode=_83226_mode, ._field_file=_83216_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_2276c25cc_new_line(&_83713_lex);
	_2276c05ca_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	};
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline void _228dde3e1_lshift_unsig(_228d7b4d2_Const& _58722_c, _228d7b4d2_Const& _58733_x) {
	jule::U64 _5889_l = _228dd8440_as_u64(&_58722_c);;
	jule::U64 _5899_r = _228dd8440_as_u64(&_58733_x);;
	_228dd8b9e_set_u64(&_58722_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _228dde6dd_rshift_unsig(_228d7b4d2_Const& _59322_c, _228d7b4d2_Const& _59333_x) {
	jule::U64 _5949_l = _228dd8440_as_u64(&_59322_c);;
	jule::U64 _5959_r = _228dd8440_as_u64(&_59333_x);;
	_228dd8b9e_set_u64(&_59322_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::I64 _2298e22de_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>((64LL - _2298e9a00_len64(_6124_x)));
}



inline jule::I64 _2298e3345_trailing_zeros(jule::U64 _8323_x) {
	;
	return static_cast<jule::I64>(_2298e3ed3_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _2298e3c3b_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_2298e2993_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & (-(_10525_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _2298e3ed3_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_2298e30e2_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & (-(_11425_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _2298e9758_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I64>((_35228_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)])));
	return _35228_n;
}



inline jule::I64 _2298e9a00_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I64>((_36628_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _2298ea6b0_add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _2298ebd43_mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _229817401_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _2298176dc_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _229817984_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _229817ca3_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _22981a3b0_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_229be2e2a:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_229887053_is_inf(_4718_f,0LL) || _22987ec4e_is_nan(_4718_f)) {
			_case_begin_229be2ea2:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_229be2d3c:;
	};
	std::tie(_4718_f,_4739_exp) = _22988865e_normalize(_4718_f);
	jule::U64 _5613_x = _229817984_f64_bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_229817ca3_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _22987dd19_nan(void) {
	return static_cast<jule::F64>(_229817ca3_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _22987ec4e_is_nan(jule::F64 _5215_f) {
	return (_5215_f != _5215_f);
}



inline jule::F64 _2298816e0_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_229817ca3_f64_from_bits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_229817ca3_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _229887053_is_inf(jule::F64 _7215_f, jule::I64 _7223_sign) {
	return (((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _22988865e_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_2298a029c_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _229898828_log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_22987ec4e_is_nan(_11112_x) || _229887053_is_inf(_11112_x,1LL)) {
			_case_begin_229c3617c:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_229c36204:;
			{
				return static_cast<jule::F64>(_22987dd19_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_229c3627b:;
			{
				return static_cast<jule::F64>(_2298816e0_inf(-1LL));
			}
		}
		_match_end_229c360b1:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _22981a3b0_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _2298a029c_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_229817ca3_f64_from_bits(static_cast<jule::U64>((_229817984_f64_bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _2299056dc_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_abs_f = _2298a029c_abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_abs_f)) {
			{
				(_4713_i)--;
			}
		_iter_next_22b8e151c:;
		}
		_iter_end_22b8e151c:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _229905ea1_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _22981a3b0_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_229898828_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _22936259a_fmt_float(jule::F64 _7818_f, jule::U8 _7826_fmt, jule::I64 _7837_prec, jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_229376d0c_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,_22950bc50_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL)),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _229376d0c_generic_ftoa(jule::Slice<jule::U8> _8221_dst, jule::F64 _8234_val, jule::U8 _8244_fmt, jule::I64 _8259_prec, jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_22950581a_FloatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_22bb04a3d:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_229817401_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_22950581a_FloatInfo>)((&(_229352359_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_22bb04c2a:;
			{
				_8313_bits=static_cast<jule::U64>(_229817984_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_22950581a_FloatInfo>)((&(_229357848_F64_INFO))));
			}
		}
		else {
			_case_begin_22bb04411:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_22bb030be:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_22bb083c1:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_22bb0a8ac:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_22bb0aa44:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_22bb098ab:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_22bb097ce:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_22bb08e1b:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_22bb0481d:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_22bb0836b:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8244_fmt == 'b')) {
		return _229419344_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8244_fmt == 'x') || (_8244_fmt == 'X'))) {
		return _2294d3089_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_229407123_DecimalSlice _13213_digs = _229407123_DecimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_2293bcbdd_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_22bb0ea6a:;
				{
					_8259_prec=static_cast<jule::I64>(_22950bc50_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_22bb0ead1:;
				{
					_8259_prec=static_cast<jule::I64>(_22950bc50_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_22bb0eb8b:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_22bb0dd55:;
		};
	} else if ((_8244_fmt != 'f')) {
		jule::I64 _15217_digits = _8259_prec;;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_22bb121dd:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_22bb11a4a:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					};
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_22bb11c26:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_22bb11ad3:;
		};
		if (((_8270_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_22979ade0_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_22980281a_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _2293cebab_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _2294067c6_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _2293cebab_big_ftoa(jule::Slice<jule::U8> _18217_dst, jule::I64 _18234_prec, jule::U8 _18245_fmt, jule::Bool _18256_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _22950581a_FloatInfo& _18327_flt) {
	_229932ab0_Decimal _18413_d = _229932ab0_Decimal{};;
	_229932c9c_assign(&_18413_d, _1835_mant);
	_229932dce_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_229407123_DecimalSlice _18713_digs = _229407123_DecimalSlice{};;
	jule::Bool _1889_shortest = (_18234_prec < 0LL);;
	if (_1889_shortest) {
		_229408993_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_229407123_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_22bb16e5c:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_22bb197ab:;
				{
					_18234_prec=static_cast<jule::I64>(_22950bc50_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_22bb19822:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_22bb18e2b:;
		};
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_22bb18843:;
				{
					_229933275_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_22bb188a9:;
				{
					_229933275_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18234_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_22bb18931:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					};
					_229933275_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_22bb18788:;
		};
		_18713_digs=_229407123_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _2294067c6_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _2294067c6_fmt_digits(jule::Slice<jule::U8> _21919_dst, jule::Bool _21932_shortest, jule::Bool _21948_neg, _229407123_DecimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_22bb1e838:;
			{
				return _229417c05_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_22bb1e89e:;
			{
				return _2294183a9_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_22bb1e915:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21932_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _229417c05_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _2294183a9_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>(_22950bc50_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_22bb1e6e5:;
	};
	return jule::append(_21919_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _229408993_round_shortest(_229932ab0_Decimal& _25724_d, jule::U64 _25736_mant, jule::I64 _25747_exp, _22950581a_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);;
	if (((_25747_exp > _2789_minexp) && ((332LL * (_25724_d._field_dp - _25724_d._field_nd)) >= (100LL * (_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)))))) {
		return;;
	};
	_229932ab0_Decimal _28713_upper = _229932ab0_Decimal{};;
	_229932c9c_assign(&_28713_upper, static_cast<jule::U64>(((_25736_mant << 1LLU) + 1LLU)));
	_229932dce_shift(&_28713_upper, static_cast<jule::I64>(((_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25736_mant > (1LLU << _25758_flt._field_mantbits)) || (_25747_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25736_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	};
	_229932ab0_Decimal _30613_lower = _229932ab0_Decimal{};;
	_229932c9c_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_229932dce_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp);;
			if ((_33513_mi >= _25724_d._field_nd)) {
				goto _iter_end_22bb2c912;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_22bb32c58:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_22bb32cd0:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_22bb32d57:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_22bb32b8c:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_22bb36003:;
					{
						_229933275_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_22bb36069:;
					{
						_229933011_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_22bb360e1:;
					{
						_229933143_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_22bb35e59:;
			};
		}
	_iter_next_22bb2c912:;
	}
	_iter_end_22bb2c912:;;
}



inline jule::Slice<jule::U8> _229417c05_fmt_e(jule::Slice<jule::U8> _39614_dst, jule::Bool _39627_neg, _229407123_DecimalSlice _39638_d, jule::I64 _39655_prec, jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _229506871_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39655_prec); (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');;
			}
		_iter_next_22bb3ade8:;
		}
		_iter_end_22bb3ade8:;;
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);;
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);;
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_22bb3d9bc:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_22bb3ec87:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_22bb3d109:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_22bb3b569:;
	};
	return _39614_dst;
}



inline jule::Slice<jule::U8> _2294183a9_fmt_f(jule::Slice<jule::U8> _45114_dst, jule::Bool _45127_neg, _229407123_DecimalSlice _45138_d, jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');;
	};
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _229506871_min(_45138_d._field_nd,_45138_d._field_dp);;
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45138_d._field_dp); (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
			}
		_iter_next_22bb428d3:;
		}
		_iter_end_22bb428d3:;;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
	};
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45155_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45138_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd))) {
					_47221_ch=_45138_d._field_d[_47317_j];
				};
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);;
			}
		_iter_next_22bb44143:;
		}
		_iter_end_22bb44143:;;
	};
	return _45114_dst;
}



inline jule::Slice<jule::U8> _229419344_fmt_b(jule::Slice<jule::U8> _48414_dst, jule::Bool _48427_neg, jule::U64 _48438_mant, jule::I64 _48453_exp, _22950581a_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');;
	};
	std::tie(_48414_dst,std::ignore) = _229934c7c_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');;
	_48453_exp-=static_cast<jule::I64>(_48464_flt._field_mantbits);
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');;
	};
	std::tie(_48414_dst,std::ignore) = _229934c7c_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _2294d3089_fmt_x(jule::Slice<jule::U8> _50614_dst, jule::I64 _50627_prec, jule::U8 _50638_fmt, jule::Bool _50649_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _22950581a_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_22bb493e0:;
	}
	_iter_end_22bb493e0:;;
	if (((_50627_prec >= 0LL) && (_50627_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50627_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50638_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');;
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50627_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_22bb4e2c4:;
		}
		_iter_end_22bb4e2c4:;;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50627_prec); (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_22bb51ae0:;
		}
		_iter_end_22bb51ae0:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50638_fmt == _229567be0_lower(_50638_fmt))) {
		_56613_ch='p';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_22bb54032:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_22bb566e9:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_22bb54296:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_22bb5221c:;
	};
	return _50614_dst;
}



inline jule::I64 _229506871_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _22950bc50_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _229567be0_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _22958c990___parse_uint(jule::Str _5121_s, jule::I64 _5133_base, jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5133_base) && (_5133_base <= 36LL))) {
			_case_begin_22bb5b4ce:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_22bb5b37a:;
			{
				_5133_base=10LL;
				if ((_5121_s[0LL] == '0')) {
					{
						
						if (((_5121_s.len() >= 3LL) && (_229567be0_lower(_5121_s[1LL]) == 'b'))) {
							_case_begin_22bb5d24a:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_229567be0_lower(_5121_s[1LL]) == 'o'))) {
							_case_begin_22bb5d05d:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_229567be0_lower(_5121_s[1LL]) == 'x'))) {
							_case_begin_22bb5d0d5:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_22bb5cbb7:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);;
							}
						}
						_match_end_22bb5cada:;
					};
				};
			}
		}
		else {
			_case_begin_22bb5a5cc:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_22bb5a577:;
	};
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if (((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_22bb62e20:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_22bb6255c:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_22bb62826:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5133_base)) + 1LLU));
			}
		}
		_match_end_22bb626a0:;
	};
	jule::U64 _10013_max_val = 0LLU;;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_22bb62914:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_22bb640b9:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_22bb64064:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_22bb650cb:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_22bb6672b:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _229567be0_lower(_10912_c)) && (_229567be0_lower(_10912_c) <= 'z'))) {
						_case_begin_22bb665e9:;
						{
							_11017_d=static_cast<jule::U8>(((_229567be0_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_22bb66660:;
						{
							goto _iter_next_22bb650cb;
						}
					}
					else {
						_case_begin_22bb66165:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_22bb660ee:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5133_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5133_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val))) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_22bb650cb:;
			++it;
			goto _iter_begin_22bb650cb;
		}
		_iter_end_22bb650cb:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _2295b00de_parse_uint(jule::Str _14623_s, jule::I64 _14635_base, jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _22958c990___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _22963be3a_parse_int(jule::Str _17222_s, jule::I64 _17230_base, jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17222_s[0LL] == '+')) {
		(_17222_s).mut_slice(1LL);;
	} else if ((_17222_s[0LL] == '-')) {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _22958c990___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17245_bit_size - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _229353437_eisel_lemire64(jule::U64 _4123_man, jule::I64 _4133_exp10, jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_229817ca3_f64_from_bits(9223372036854775808LLU));
		};
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	if (((_4133_exp10 < -348LL) || (347LL < _4133_exp10))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::I64 _579_clz = _2298e22de_leading_zeros64(_4123_man);;
	_4123_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_x_hi;;
	jule::U64 _6324_x_lo;;
	std::tie(_6314_x_hi,_6324_x_lo) = _2298ebd43_mul64(_4123_man,_2293e2be1_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if ((((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man))) {
		jule::U64 _6714_y_hi;;
		jule::U64 _6720_y_lo;;
		std::tie(_6714_y_hi,_6720_y_lo) = _2298ebd43_mul64(_4123_man,_2293e2be1_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;;
		jule::U64 _6829_merged_lo = (_6324_x_lo + _6714_y_hi);;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,(_6324_x_lo + _6714_y_hi));
		if ((_6829_merged_lo < _6324_x_lo)) {
			(_6818_merged_hi)++;
		};
		if (((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man))) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		};
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	};
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);;
	jule::U64 _8013_ret_mantissa = (_6314_x_hi >> (_799_msb + 9LLU));;
	_6013_ret_exp2-=(1LLU ^ _799_msb);
	if ((((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	_8013_ret_mantissa+=(_8013_ret_mantissa & 1LLU);
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	};
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::U64 _10313_ret_bits = ((_6013_ret_exp2 << 52LLU) | (_8013_ret_mantissa & 4503599627370495LLU));;
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	};
	_4158_f = static_cast<jule::F64>(_229817ca3_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _22970c22a_eisel_lemire32(jule::U64 _11023_man, jule::I64 _11033_exp10, jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_2298176dc_f32_from_bits(2147483648LLU));
		};
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	if (((_11033_exp10 < -348LL) || (347LL < _11033_exp10))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::I64 _1329_clz = _2298e22de_leading_zeros64(_11023_man);;
	_11023_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _2298ebd43_mul64(_11023_man,_2293e2be1_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _2298ebd43_mul64(_11023_man,_2293e2be1_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man))) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_ret_mantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_ret_exp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	_15513_ret_mantissa+=(_15513_ret_mantissa & 1LLU);
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	};
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::U64 _17813_ret_bits = ((_13513_ret_exp2 << 23LLU) | (_15513_ret_mantissa & 8388607LLU));;
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	};
	_11058_f = static_cast<jule::F32>(_2298176dc_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _2295ec4a0_common_prefix_len_ignore_case(jule::Str _4534_s, jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();;
	if ((_4613_n > _4534_s.len())) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4542_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_22bb93a11:;
	}
	_iter_end_22bb93a11:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _229416b6b_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_22bb9841c:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_22bb98494;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_22bb98494:;
			{
				jule::I64 _8317_case_n = _2295ec4a0_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_case_n) && (_8317_case_n < 8LL))) {
					_8317_case_n=3LL;
				};
				if (((_8317_case_n == 3LL) || (_8317_case_n == 8LL))) {
					_6826_f = static_cast<jule::F64>(_2298816e0_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_22bb9851b:;
			{
				if ((_2295ec4a0_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_22987dd19_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_22bb98351:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _22974a774_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I64 _10385_i = jule::I64();
	jule::Bool _10393_ok = jule::Bool();
	if ((_10385_i >= _10315_s.len())) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	{
		
		if ((_10315_s[_10385_i] == '+')) {
			_case_begin_22bb9e665:;
			{
				(_10385_i)++;
			}
		}
		else if ((_10315_s[_10385_i] == '-')) {
			_case_begin_22bb9e6cb:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_22bb9e489:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_max_mant_digits = 19LL;;
	jule::U8 _11913_exp_char = 'e';;
	if (((((_10385_i + 2LL) < _10315_s.len()) && (_10315_s[_10385_i] == '0')) && (_229567be0_lower(_10315_s[(_10385_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_nd_mant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10385_i < _10315_s.len()); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_22bba5ade:;
					{
						goto _iter_next_22bba4ed9;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_22bba5b66:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_22bba4ed9;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_22bba5bdd:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_22bba4ed9;
						};
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if ((_13313_c != '0')) {
							_10361_trunc=true;
						};
						goto _iter_next_22bba4ed9;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _229567be0_lower(_13313_c))) && (_229567be0_lower(_13313_c) <= 'f'))) {
					_case_begin_22bba5c65:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(((_229567be0_lower(_13313_c) - 'a') + 10LLU));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						};
						goto _iter_next_22bba4ed9;
					}
				}
				_match_end_22bba5a12:;
			};
			goto _iter_end_22bba4ed9;
		}
	_iter_next_22bba4ed9:;
	}
	_iter_end_22bba4ed9:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	};
	if (((_10385_i < _10315_s.len()) && (_229567be0_lower(_10315_s[_10385_i]) == _11913_exp_char))) {
		(_10385_i)++;
		if ((_10385_i >= _10315_s.len())) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10315_s[_10385_i] == '+')) {
			(_10385_i)++;
		} else if ((_10315_s[_10385_i] == '-')) {
			(_10385_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10385_i >= _10315_s.len()) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9'))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10385_i < _10315_s.len()) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_'))); (_10385_i)++) {
			{
				if ((_10315_s[_10385_i] == '_')) {
					goto _iter_next_22bbb070e;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10315_s[_10385_i])) - '0'));
				};
			}
		_iter_next_22bbb070e:;
		}
		_iter_end_22bbb070e:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>((_13113_dp - _13013_nd_mant));
	};
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _2293990a4_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _229357848_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_22bbbad9b:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_22bbbae23:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_22944b2ee_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _22944b2ee_F64_POW10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_22bbbae9a:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_22944b2ee_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_22bbbace1:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _2293dcd62_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _229352359_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_22bbc0ec2:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_22bbc1049:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_2294630c4_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _2294630c4_F32_POW10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_22bbc10c1:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_2294630c4_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_22bbc0e17:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _229442c0d_atof_hex(jule::Str _55113_s, _22950581a_FloatInfo& _55122_flt, jule::U64 _55142_mantissa, jule::I64 _55161_exp, jule::Bool _55171_neg, jule::Bool _55182_trunc) {
	jule::I64 _5529_max_exp = ((static_cast<jule::I64>((1LL << _55122_flt._field_expbits)) + _55122_flt._field_bias) - 2LL);;
	jule::I64 _5539_min_exp = (_55122_flt._field_bias + 1LL);;
	_55161_exp+=static_cast<jule::I64>(_55122_flt._field_mantbits);
	while (((_55142_mantissa != 0LLU) && ((_55142_mantissa >> (_55122_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_22bbc6a22:;
	}
	_iter_end_22bbc6a22:;;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	};
	while (((_55142_mantissa >> ((1LLU + _55122_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_22bbc6ed9:;
	}
	_iter_end_22bbc6ed9:;;
	while (((_55142_mantissa > 1LLU) && (_55161_exp < (_5539_min_exp - 2LL)))) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_22bbc8b23:;
	}
	_iter_end_22bbc8b23:;;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);;
	_55142_mantissa>>=2LLU;
	_58313_round|=(_55142_mantissa & 1LLU);
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if ((_55142_mantissa == (1LLU << (1LLU + _55122_flt._field_mantbits)))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		};
	};
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55161_exp > _5529_max_exp)) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55122_flt._field_mantbits)));
		_55161_exp=static_cast<jule::I64>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55142_mantissa & ((1LLU << _55122_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I64>(((1LL << _55122_flt._field_expbits) - 1LL)))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=((1LLU << _55122_flt._field_mantbits) << _55122_flt._field_expbits);
	};
	if ((_55122_flt == _229352359_F32_INFO)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_2298176dc_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_229817ca3_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _2295b6887_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _229416b6b_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _22974a774_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _229442c0d_atof_hex(_61611_s.slice(0LL,_61629_n),_229352359_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _2293dcd62_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _22970c22a_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_f_up = 0LL;;
			std::tie(_65321_f_up,_62450_ok) = _22970c22a_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_f_up))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_229932ab0_Decimal _66213_d = _229932ab0_Decimal{};;
	if ((!(_229799251_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _2294174da_float_bits(&_66213_d, _229352359_F32_INFO);
	_61621_f=static_cast<jule::F32>(_2298176dc_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _22963c556_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _229416b6b_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _22974a774_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _229442c0d_atof_hex(_67411_s.slice(0LL,_67429_n),_229357848_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _2293990a4_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _229353437_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_f_up = 0LL;;
			std::tie(_71021_f_up,_68250_ok) = _229353437_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_f_up))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_229932ab0_Decimal _71913_d = _229932ab0_Decimal{};;
	if ((!(_229799251_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _2294174da_float_bits(&_71913_d, _229357848_F64_INFO);
	_67421_f=static_cast<jule::F64>(_229817ca3_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _2296880da_parse_float_prefix(jule::Str _73123_s, jule::I64 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _2295b6887_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _22963c556_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _2296c5e19_parse_float(jule::Str _76520_s, jule::I64 _76528_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _2296880da_parse_float_prefix(_76520_s,_76528_bit_size);
	if (((_76613_n != _76520_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _22979ade0_ryu_ftoa_fixed32(_229407123_DecimalSlice& _4926_d, jule::U32 _4947_mant, jule::I64 _4958_exp, jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4958_exp;;
	jule::I64 _639_b = _2298e9758_len32(_4947_mant);;
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_2294a6535_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _229931c9b_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _229932010_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extra_mask)));
	jule::Bool _9913_round_up = false;;
	if (_7913_exact) {
		_9913_round_up=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_round_up=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_229809217_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _22980281a_ryu_ftoa_fixed64(_229407123_DecimalSlice& _12126_d, jule::U64 _12147_mant, jule::I64 _12158_exp, jule::I64 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12158_exp;;
	jule::I64 _1329_b = _2298e9a00_len64(_12147_mant);;
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>((_12147_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_2294a6535_mul_by_log2_log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _229931dcd_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _229932010_divisible_by_pow5(_12147_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extra_mask)));
	jule::Bool _17113_round_up = false;;
	if (_15113_exact) {
		_17113_round_up=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_round_up=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_229809217_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _229809217_format_decimal(_229407123_DecimalSlice& _20024_d, jule::U64 _20045_m, jule::Bool _20057_trunc, jule::Bool _20074_round_up, jule::I64 _20090_prec) {
	jule::U64 _2019_max = _2294c48c7_U64_POW10[_20090_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20045_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);;
			jule::U64 _20417_b = (_20045_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=(_20057_trunc || ((_20045_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			};
		}
	_iter_next_22bc1171b:;
	}
	_iter_end_22bc1171b:;;
	if (_20074_round_up) {
		(_20045_m)++;
	};
	if ((_20045_m >= _2019_max)) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20090_prec);;
	_20024_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20090_prec));
	jule::U64 _23113_v = _20045_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_22bc15214:;
	}
	_iter_end_22bc15214:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0')) {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_22bc1a857:;
	}
	_iter_end_22bc1a857:;;
	_20024_d._field_dp=static_cast<jule::I64>((_20024_d._field_nd + _20213_trimmed));
}



inline void _2293bcbdd_ryu_ftoa_shortest(_229407123_DecimalSlice& _26127_d, jule::U64 _26148_mant, jule::I64 _26159_exp, _22950581a_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26159_exp <= 0LL) && (_2298e3ed3_trailing_zeros64(_26148_mant) >= (-(_26159_exp))))) {
		_26148_mant>>=static_cast<jule::U64>((-(_26159_exp)));
		_229931a37_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _2299317e5_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_229931a37_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_2294a6535_mul_by_log2_log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26170_flt == _229352359_F32_INFO)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _229931c9b_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _229931c9b_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _229931c9b_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _229931dcd_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _229931dcd_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _229931dcd_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_229932010_divisible_by_pow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_229932010_divisible_by_pow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_229932010_divisible_by_pow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extra_mask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extra_mask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extra_mask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_229931a37_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I64 _2294a6535_mul_by_log2_log10(jule::I64 _37722_x) {
	return static_cast<jule::I64>(((_37722_x * 78913LL) >> 18LL));
}



inline jule::I64 _229533848_mul_by_log10_log2(jule::I64 _38722_x) {
	return static_cast<jule::I64>(((_38722_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _2299317e5_compute_bounds(jule::U64 _39519_mant, jule::I64 _39530_exp, _22950581a_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39519_mant != (1LLU << _3966_flt._field_mantbits)) || (_39530_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39519_mant)),static_cast<jule::U64>(((2LLU * _39519_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39519_mant)),static_cast<jule::U64>(((4LLU * _39519_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _229931a37_ryu_digits(_229407123_DecimalSlice& _40920_d, jule::U64 _40937_lower, jule::U64 _40949_central, jule::U64 _40963_upper, jule::Bool _40979_c0, jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _229932142_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _229932142_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _229932142_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_229931b69_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40979_c0=(_40979_c0 && (_41115_clo == 0LLU));
		_40993_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup));
		_229931b69_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_22bc3b0e7:;
		}
		_iter_end_22bc3b0e7:;;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_229931b69_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I64>((_40920_d._field_nd + 8LL)));
	};
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0'))) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_22bc3d3d5:;
	}
	_iter_end_22bc3d3d5:;;
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0'))) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_22bc3ad72:;
	}
	_iter_end_22bc3ad72:;;
}



inline void _229931b69_ryu_digits32(_229407123_DecimalSlice& _45422_d, jule::U32 _45443_lower, jule::U32 _45459_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_c_next_digit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45459_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45459_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_22bc41cac;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_c_next_digit == 0LL));
			_46313_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_22bc41cac:;
	}
	_iter_end_22bc41cac:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU)));
	};
	if (((_45459_central < _4559_upper) && _45539_cup)) {
		(_45459_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45422_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_22bc488da:;
	}
	_iter_end_22bc488da:;;
	if ((_51013_n == _45422_d._field_nd)) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45422_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I64>((_45422_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _229931c9b_mult64bit_pow10(jule::U32 _53420_m, jule::I64 _53432_e2, jule::I64 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I64 _53462_resE = jule::I64();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I64>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	};
	if (((_53441_q < -348LL) || (347LL < _53441_q))) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _2293e2be1_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];;
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _2298ebd43_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=((_229533848_mul_by_log10_log2(_53441_q) - 63LL) + 57LL);
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _229931dcd_mult128bit_pow10(jule::U64 _56221_m, jule::I64 _56233_e2, jule::I64 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I64 _56263_resE = jule::I64();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I64>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	};
	if (((_56242_q < -348LL) || (347LL < _56242_q))) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _2293e2be1_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];;
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56233_e2+=((_229533848_mul_by_log10_log2(_56242_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _2298ebd43_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _2298ebd43_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _2298ea6b0_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56263_resE = _56233_e2;
	_56274_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _229932010_divisible_by_pow5(jule::U64 _58626_m, jule::I64 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58634_k); (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			};
			_58626_m/=5LLU;
		}
	_iter_next_22bc58378:;
	}
	_iter_end_22bc58378:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _229932142_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _22993361b_trim(_229932ab0_Decimal& _33314_a) {
	while (((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0'))) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_22bc5c8bb:;
	}
	_iter_end_22bc5c8bb:;;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	};
}



inline void _22993374d_right_shift(_229932ab0_Decimal& _34321_a, jule::U64 _34333_k) {
	jule::I64 _34413_r = 0LL;;
	jule::I64 _34513_w = 0LL;;
	jule::U64 _34813_n = 0LLU;;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if ((_34413_r >= _34321_a._field_nd)) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;;
				};
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_22bc60c65:;
				}
				_iter_end_22bc60c65:;;
				goto _iter_end_22bc5e6e2;
			};
			jule::U64 _36213_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _36213_c) - '0'));
		}
	_iter_next_22bc5e6e2:;
	}
	_iter_end_22bc5e6e2:;;
	_34321_a._field_dp-=(_34413_r - 1LL);
	jule::U64 _3679_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _34333_k)) - 1LLU));;
	for (; (_34413_r < _34321_a._field_nd); (_34413_r)++) {
		{
			jule::U64 _37113_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			jule::U64 _37213_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_37213_dig + '0')));
			(_34513_w)++;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _37113_c) - '0'));
		}
	_iter_next_22bc6353c:;
	}
	_iter_end_22bc6353c:;;
	while ((_34813_n > 0LLU)) {
		{
			jule::U64 _38113_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38113_dig + '0')));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			};
			_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
		}
	_iter_next_22bc64197:;
	}
	_iter_end_22bc64197:;;
	_34321_a._field_nd=_34513_w;
	_22993361b_trim(_34321_a);
}



inline jule::Bool _229933880_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b, jule::I64 _39738_end, jule::Str _39748_s) {
	jule::I64 _39813_i = 0LL;;
	for (; (_39813_i < _39748_s.len()); (_39813_i)++) {
		{
			if ((_39813_i >= _39738_end)) {
				return true;
			};
			if ((_39724_b[_39813_i] != _39748_s[_39813_i])) {
				return (_39724_b[_39813_i] < _39748_s[_39813_i]);
			};
		}
	_iter_next_22bc67ec0:;
	}
	_iter_end_22bc67ec0:;;
	return false;
}



inline void _2299339b2_left_shift(_229932ab0_Decimal& _41120_a, jule::U64 _41132_k) {
	jule::I64 _41213_delta = _229511947_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_delta;;
	if (_229933880_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_229511947_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	};
	jule::I64 _41713_r = _41120_a._field_nd;;
	jule::I64 _41813_w = (_41120_a._field_nd + _41213_delta);;
	jule::U64 _42113_n = 0LLU;;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=((static_cast<jule::U64>(_41120_a._field_d[_41713_r]) - '0') << _41132_k);
			jule::U64 _42513_quo = (_42113_n / 10LLU);;
			jule::U64 _42613_rem = (_42113_n - (10LLU * _42513_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_42613_rem + '0')));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_42513_quo;
		}
	_iter_next_22bc6b875:;
	}
	_iter_end_22bc6b875:;;
	while ((_42113_n > 0LLU)) {
		{
			jule::U64 _43813_quo = (_42113_n / 10LLU);;
			jule::U64 _43913_rem = (_42113_n - (10LLU * _43813_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_43913_rem + '0')));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_43813_quo;
		}
	_iter_next_22bc6de93:;
	}
	_iter_end_22bc6de93:;;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	};
	_41120_a._field_dp+=_41213_delta;
	_22993361b_trim(_41120_a);
}



inline jule::Bool _229933ae4_should_round_up(_229932ab0_Decimal& _45821_a, jule::I64 _45833_nd) {
	if (((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd))) {
		return false;
	};
	if (((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd))) {
		if (_45821_a._field_trunc) {
			return true;
		};
		return ((_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_45821_a._field_d[_45833_nd] >= '5');
}



inline jule::Str _229934672_fmt_uint(jule::U64 _6017_i, jule::I64 _6025_base) {
	if (((true && (_6017_i < 100LLU)) && (_6025_base == 10LL))) {
		return _229934a18_small(static_cast<jule::I64>(static_cast<jule::I64>(_6017_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _229934c7c_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _2299347a4_fmt_int(jule::I64 _7116_i, jule::I64 _7124_base) {
	if ((((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL))) {
		return _229934a18_small(static_cast<jule::I64>(static_cast<jule::I64>(_7116_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _229934c7c_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _2299348d6_itoa(jule::I64 _8013_i) {
	return _2299347a4_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _229934a18_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _229934b4a_is_power_of_two(jule::I64 _9220_x) {
	return ((_9220_x & (_9220_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _229934c7c_fmt_bits(jule::Slice<jule::U8> _10117_dst, jule::U64 _10134_u, jule::I64 _10142_base, jule::Bool _10153_neg, jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if (((_10142_base < 2LL) || (_10142_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	};
	if ((_10142_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10134_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_22bcad378:;
		}
		_iter_end_22bcad378:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_229934b4a_is_power_of_two(_10142_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_2298e3345_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10142_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10142_base) - 1LLU);;
		while ((_10134_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10134_u) & _17613_m))]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_22bcb6e97:;
		}
		_iter_end_22bcb6e97:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);;
		while ((_10134_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10134_u - (_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_22bcb9c36:;
		}
		_iter_end_22bcb9c36:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	};
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	};
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline jule::Str _2299a4417_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_22bcda493:;
			{
				return _2299a3b0e_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_22bcda509:;
			{
				return _2299a3d73_SYS_UINT;
			}
		}
		else {
			_case_begin_22bcda372:;
			{
				return _4521_kind;
			}
		}
		_match_end_22bcda2b7:;
	};
}



inline jule::I64 _2299a46ae_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_22bcdbc25:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_22bcdbc8b:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_22bcdb582:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_22bcdb5e8:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_22bcdb65e:;
			{
				return _22999b134_BIT_SIZE;
			}
		}
		else {
			_case_begin_22bcdb51b:;
			{
				return -1LL;
			}
		}
		_match_end_22bcdb274:;
	};
}



inline jule::Str _2299a49cd_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_22bcdd83c:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_22bcdd8a3:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_22bcdd919:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_22bcdda29:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_22bcdcbc1:;
			{
				return jule::Str();
			}
		}
		_match_end_22bcdd71b:;
	};
}



inline jule::Str _2299a4c75_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_22bcdebb2:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_22bcdec28:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_22bcdec8e:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_22bce008b:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_22bcde233:;
			{
				return jule::Str();
			}
		}
		_match_end_22bcde0e0:;
	};
}



inline jule::Str _2299a501c_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_22bce119c:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_22bce1213:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_22bce0773:;
			{
				return jule::Str();
			}
		}
		_match_end_22bce0630:;
	};
}



inline jule::Bool _2299aaa06_check_bit_float(jule::Str _15024_val, jule::I64 _15034_bit) {
	({
		auto except = _2296c5e19_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _2299aabc1_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_22bce4c83:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_22bce5b85:;
			{
				return 64LL;
			}
		}
		_match_end_22bce5ed7:;
	};
}



inline jule::I64 _2299aae68_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if (((-128LL <= _17623_x) && (_17623_x <= 127LL))) {
			_case_begin_22bce7192:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17623_x) && (_17623_x <= 32767LL))) {
			_case_begin_22bce7208:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL))) {
			_case_begin_22bce7280:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_22bce6e61:;
			{
				return 64LL;
			}
		}
		_match_end_22bce6d84:;
	};
}



inline jule::I64 _2299ab210_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_22bce900c:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_22bce9073:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_22bce90ea:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_22bce8e52:;
			{
				return 64LL;
			}
		}
		_match_end_22bce957e:;
	};
}



inline void _2299ab375_update_target(void) {
	{
		{
			auto &_match_expr{ _2273c78cb_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_22bce9e75:;
				{
					_22999b134_BIT_SIZE=64LL;
					_2299a3b0e_SYS_INT=jule::Str("i64", 3);
					_2299a3d73_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_22bcea78e:;
				{
					_22999b134_BIT_SIZE=32LL;
					_2299a3b0e_SYS_INT=jule::Str("i32", 3);
					_2299a3d73_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_22bce9d98:;
		};
	};
}



inline void _2299ab4da_init(void) {
	_2299ab375_update_target();
}



inline jule::F64 _2299b0797_min(jule::Str _6116_k) {
	_6116_k=_2299a4417_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_22bced5d8:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_22bced64e:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_22bced088:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_22bced110:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_22bced187:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_22bced20e:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_22bceb0db:;
			{
				return 0LL;
			}
		}
		_match_end_22bceadee:;
	};
}



inline jule::F64 _2299b0a83_max(jule::Str _8316_k) {
	_8316_k=_2299a4417_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_22bced385:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_22bceecd2:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_22bceed48:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_22bceedae:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_22bceee25:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_22bd00189:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_22bd00200:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_22bd00266:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_22bd002dd:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_22bd00365:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_22bceeb4a:;
			{
				return 0LL;
			}
		}
		_match_end_22bcedaa0:;
	};
}



inline jule::Bool _2299b0e07_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _2299b11e3_is_i16_compatible(jule::Str _1130_k) {
	return ((_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3)));
}



inline jule::Bool _2299b148a_is_i32_compatible(jule::Str _1730_k) {
	return ((((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2)));
}



inline jule::Bool _2299b17a9_is_i64_compatible(jule::Str _2530_k) {
	return ((((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3)));
}



inline jule::Bool _2299b1a51_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _2299b1ce8_is_u16_compatible(jule::Str _3830_k) {
	return ((_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3)));
}



inline jule::Bool _2299b2090_is_u32_compatible(jule::Str _4330_k) {
	return (((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3)));
}



inline jule::Bool _2299b2414_is_u64_compatible(jule::Str _5030_k) {
	return ((((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3)));
}



inline jule::Bool _2299b26ab_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _2299b2953_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _2299b2c94_types_are_compatible(jule::Str _7033_k1, jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_22bd08857:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_22bd08abb:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_22bd08b32:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_22bd08b98:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_22bd08c0e:;
			{
				return _2299b0e07_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_22bd08c75:;
			{
				return _2299b11e3_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_22bd08cdb:;
			{
				return _2299b148a_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_22bd08d52:;
			{
				return _2299b17a9_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_22bd08dc9:;
			{
				return _2299b1a51_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_22bd08e40:;
			{
				return _2299b1ce8_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_22bd08eb7:;
			{
				return _2299b2090_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_22bd0903e:;
			{
				return _2299b2414_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_22bd090b6:;
			{
				return _2299b26ab_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_22bd0913d:;
			{
				return _2299b2953_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_22bd091b5:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_22bd0923c:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_22bd08615:;
			{
				return false;
			}
		}
		_match_end_22bd08549:;
	};
}



inline jule::Bool _2299b303b_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _2299b32d3_is_i32_greater(jule::Str _11527_k) {
	return ((_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3)));
}



inline jule::Bool _2299b357a_is_i64_greater(jule::Str _12027_k) {
	return (((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3)));
}



inline jule::Bool _2299b3822_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _2299b3c73_is_u32_greater(jule::Str _13227_k) {
	return ((_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3)));
}



inline jule::Bool _2299b401a_is_u64_greater(jule::Str _13827_k) {
	return (((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3)));
}



inline jule::Bool _2299b42b2_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _2299b4559_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _2299b489a_is_greater(jule::Str _15523_k1, jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_22bd12157:;
			{
				return _2299b58ce_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_22bd121bd:;
			{
				return _2299b5bba_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_22bd123bb:;
			{
				return _2299b5bba_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_22bd12432:;
			{
				return _2299b303b_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_22bd12498:;
			{
				return _2299b32d3_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_22bd12520:;
			{
				return _2299b357a_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_22bd12597:;
			{
				return _2299b3822_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_22bd1261e:;
			{
				return _2299b3c73_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_22bd126eb:;
			{
				return _2299b401a_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_22bd12762:;
			{
				return _2299b42b2_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_22bd127c8:;
			{
				return _2299b4559_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_22bd1283e:;
			{
				return true;
			}
		}
		else {
			_case_begin_22bd11e15:;
			{
				return false;
			}
		}
		_match_end_22bd117e9:;
	};
}



inline jule::Bool _2299b58ce_is_sig_int(jule::Str _2723_k) {
	return (((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3)));
}



inline jule::Bool _2299b5bba_is_unsig_int(jule::Str _3625_k) {
	return ((((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _2299b5e62_is_int(jule::Str _4615_k) {
	return (_2299b58ce_is_sig_int(_4615_k) || _2299b5bba_is_unsig_int(_4615_k));
}



inline jule::Bool _2299b6281_is_float(jule::Str _5117_k) {
	return ((_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3)));
}



inline jule::Bool _2299b6528_is_num(jule::Str _5615_k) {
	return (_2299b5e62_is_int(_5615_k) || _2299b6281_is_float(_5615_k));
}



inline jule::Bool _2299b67c0_is_sig_num(jule::Str _6119_k) {
	return (_2299b58ce_is_sig_int(_6119_k) || _2299b6281_is_float(_6119_k));
}



inline jule::Bool _229a236b7_is_ascii(jule::I32 _1017_r) {
	;
	return (_1017_r <= 127LL);
}



inline jule::I32 _229a237e9_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_229a3ae71_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _22737e344_decode_rune(_1816_bytes);
	};
	return _2313_r;
}



inline jule::Str _229a3a613_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _229a3a8bb_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4215_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4215_bytes.len())) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_229a3b2b2_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _22737e344_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_2273806a8_append_rune(_4713_s,_5418_r);
			};
		}
	_iter_next_22bd20374:;
	}
	_iter_end_22bd20374:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _229a3ab63_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if (((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6241_seq,_6252_ok);
	};
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_22bd24e8e:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_22bd25005:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_22bd2506b:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_22bd250d2:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_22bd25159:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_22bd251d1:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_22bd25258:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_22bd252d0:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_22bd25357:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_22bd253ce:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_22bd24d6d:;
	};
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _229a3ae71_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes, jule::I64& _9442_i) {
	jule::U8 _9510_b;;
	jule::Bool _9513_ok;;
	std::tie(_9510_b,_9513_ok) = _229a3ab63_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	};
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_22bd2aa66:;
			{
				;
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _2295b00de_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));;
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_22bd29878:;
			{
				;
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _2295b00de_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));;
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_22bd2b34c:;
			{
				;
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _2295b00de_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_22bd29a43:;
			{
				;
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _2295b00de_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_22bd299dd:;
	};
}



inline jule::Slice<jule::U8> _229a3b2b2_str_esq_seq(jule::Slice<jule::U8> _12616_bytes, jule::I64& _12636_i) {
	jule::I32 _1279_r = _229a3ae71_rune_from_esq_seq(_12616_bytes,_12636_i);;
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1279_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I64 _229b11244_find_format_prefix(jule::Slice<jule::U8>& _924_bytes, jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;;
	while ((_1013_i < _924_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _22737e344_decode_rune(_924_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_22bd6bcb6:;
	}
	_iter_end_22bd6bcb6:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _229b16865_get_format_range(jule::I64& _2630_i, jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2630_i < _2643_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _22737e344_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_22bd6eadd:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_22bd6eb65:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						};
					}
				}
				_match_end_22bd6e6d1:;
			};
		}
	_iter_next_22bd6dc30:;
	}
	_iter_end_22bd6dc30:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _229ae755a_fmt_by_default(jule::Any& _4520_arg) {
	if ((_4520_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_22bd71b34:;
			{
				return static_cast<jule::Slice<jule::U8>>(_22936259a_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_22bd717d2:;
			{
				return static_cast<jule::Slice<jule::U8>>(_22936259a_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_22bd6eeea:;
			{
				return static_cast<jule::Slice<jule::U8>>(_2299347a4_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_22bd70061:;
			{
				return static_cast<jule::Slice<jule::U8>>(_2299347a4_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_22bd714c4:;
			{
				return static_cast<jule::Slice<jule::U8>>(_2299347a4_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_22bd7153a:;
			{
				return static_cast<jule::Slice<jule::U8>>(_2299347a4_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_22bd715a1:;
			{
				return static_cast<jule::Slice<jule::U8>>(_229934672_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_22bd71617:;
			{
				return static_cast<jule::Slice<jule::U8>>(_229934672_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_22bd7167d:;
			{
				return static_cast<jule::Slice<jule::U8>>(_229934672_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_22bd71bab:;
			{
				return static_cast<jule::Slice<jule::U8>>(_229934672_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_22bd71c22:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_22bd71c88:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_22bd6ddd9:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_22bd6dd84:;
	};
}



inline jule::Slice<jule::U8> _229ae6d40_apply_fmt_by_default(jule::I64& _8330_j, jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];;
	(_8330_j)++;
	return _229ae755a_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _229aea618_apply_fmt(jule::Slice<jule::U8>& _9119_fmt, jule::I64& _9137_j, jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _229ae6d40_apply_fmt_by_default(_9137_j,_9146_args);
	};
	if (((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _229b08170_format_bytes(jule::Str _10517_fmt, jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);;
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10517_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _229b11244_find_format_prefix(_10613_fmt_bytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_229b11244_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _229b16865_get_format_range(_11613_i,_10613_fmt_bytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_22bd7b8ec;
			};
			_11213_bytes=jule::append(_11213_bytes,_229aea618_apply_fmt(_11917_format,_11413_j,_10527_args));
			if ((_11413_j >= _10527_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmt_bytes.len());
				goto _iter_end_22bd7b8ec;
			};
			_11513_last=_11613_i;
		}
	_iter_next_22bd7b8ec:;
	}
	_iter_end_22bd7b8ec:;;
	if ((_11513_last < _10613_fmt_bytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _229b35026_format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_229b08170_format_bytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _228deb464_parameter_uses_generics(jule::Ptr<_228de5480_Param>& _39329_p, jule::Slice<jule::Ptr<_228d35777_GenericDecl>>& _39341_generics) {
	if (_228de5aac_is_self(_39329_p.ptr())) {
		return false;
	};
	return _229a94b56_kind_uses_generics(_39329_p.get()._field_kind.get()._field_decl.get()._field_kind,_39341_generics);
}



inline jule::Ptr<_229a824b2_TypeSymbol> _228ded950_build_type(jule::Ptr<_228d28193_TypeDecl> _9419_t) {
	if ((_9419_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_decl=_9419_t, });
}



inline jule::Ptr<_229a5385c_Value> _228dedc3b_build_expr(jule::Ptr<_228d2c6b4_Expr> _10319_expr) {
	if ((_10319_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_229a5385c_Value>(_229a5385c_Value{._field_expr=_10319_expr, });
}



inline jule::Ptr<_229a7c666_TypeAlias> _228deded3_build_type_alias(jule::Ptr<_228d3e7e7_TypeAliasDecl> _11225_decl) {
	return jule::new_ptr<_229a7c666_TypeAlias>(_229a7c666_TypeAlias{._field_scope=_11225_decl.get()._field_scope, ._field_public=_11225_decl.get()._field_public, ._field_cpp_linked=_11225_decl.get()._field_cpp_linked, ._field_token=_11225_decl.get()._field_token, ._field_ident=_11225_decl.get()._field_ident, ._field_kind=_228ded950_build_type(_11225_decl.get()._field_kind), });
}



inline jule::Ptr<_228d0ad8a_Field> _228dee302_build_field(jule::Ptr<_228d42dd3_FieldDecl> _12320_decl) {
	return jule::new_ptr<_228d0ad8a_Field>(_228d0ad8a_Field{._field_token=_12320_decl.get()._field_token, ._field_public=_12320_decl.get()._field_public, ._field_mutable=_12320_decl.get()._field_mutable, ._field_ident=_12320_decl.get()._field_ident, ._field_kind=_228ded950_build_type(_12320_decl.get()._field_kind), ._field_default=_12320_decl.get()._field_default});
}



inline jule::Slice<jule::Ptr<_228d0ad8a_Field>> _228dee599_build_fields(jule::Slice<jule::Ptr<_228d42dd3_FieldDecl>>& _13422_decls) {
	jule::Slice<jule::Ptr<_228d0ad8a_Field>> _13513_fields = jule::Slice<jule::Ptr<_228d0ad8a_Field>>::alloc(0LL,_13422_decls.len());;
	{
		auto &expr = _13422_decls;
		auto it = expr.begin();
		_iter_begin_22cbdd20d:;
		if (it != expr.end()) {
			jule::Ptr<_228d42dd3_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_228dee302_build_field(_13617_decl));;
			}
			_iter_next_22cbdd20d:;
			++it;
			goto _iter_begin_22cbdd20d;
		}
		_iter_end_22cbdd20d:;
	};
	return _13513_fields;
}



inline jule::Ptr<_228d188c0_Struct> _228dee841_build_struct(jule::Ptr<_228d43741_StructDecl> _14221_decl) {
	return jule::new_ptr<_228d188c0_Struct>(_228d188c0_Struct{._field_token=_14221_decl.get()._field_token, ._field_ident=_14221_decl.get()._field_ident, ._field_fields=_228dee599_build_fields(_14221_decl.get()._field_fields), ._field_public=_14221_decl.get()._field_public, ._field_cpp_linked=_14221_decl.get()._field_cpp_linked, ._field_directives=_14221_decl.get()._field_directives, ._field_generics=_14221_decl.get()._field_generics, });
}



inline jule::Ptr<_228de5480_Param> _228deead8_build_param(jule::Ptr<_228d38b87_ParamDecl> _15420_decl) {
	return jule::new_ptr<_228de5480_Param>(_228de5480_Param{._field_token=_15420_decl.get()._field_token, ._field_mutable=_15420_decl.get()._field_mutable, ._field_variadic=_15420_decl.get()._field_variadic, ._field_reference=_15420_decl.get()._field_reference, ._field_kind=_228ded950_build_type(_15420_decl.get()._field_kind), ._field_ident=_15420_decl.get()._field_ident});
}



inline jule::Slice<jule::Ptr<_228de5480_Param>> _228deee5c_build_params(jule::Slice<jule::Ptr<_228d38b87_ParamDecl>>& _16522_decls) {
	jule::Slice<jule::Ptr<_228de5480_Param>> _16613_params = jule::Slice<jule::Ptr<_228de5480_Param>>::alloc(0LL,_16522_decls.len());;
	{
		auto &expr = _16522_decls;
		auto it = expr.begin();
		_iter_begin_22cbe109b:;
		if (it != expr.end()) {
			jule::Ptr<_228d38b87_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_228deead8_build_param(_16717_decl));;
			}
			_iter_next_22cbe109b:;
			++it;
			goto _iter_begin_22cbe109b;
		}
		_iter_end_22cbe109b:;
	};
	return _16613_params;
}



inline jule::Ptr<_228de4cba_RetType> _228e00204_build_ret_type(jule::Ptr<_228d2b2a6_RetTypeDecl> _17323_decl) {
	if (((_17323_decl.get()._field_idents == nullptr) && (_17323_decl.get()._field_kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_228de4cba_RetType>(_228de4cba_RetType{._field_kind=_228ded950_build_type(_17323_decl.get()._field_kind), ._field_idents=_17323_decl.get()._field_idents});
}



inline jule::Ptr<_228de6cbc_Fn> _228e0049b_build_fn(jule::Ptr<_228d39ea7_FnDecl> _18317_decl) {
	return jule::new_ptr<_228de6cbc_Fn>(_228de6cbc_Fn{._field_token=_18317_decl.get()._field_token, ._field_global=_18317_decl.get()._field_global, ._field_unsafety=_18317_decl.get()._field_unsafety, ._field_public=_18317_decl.get()._field_public, ._field_cpp_linked=_18317_decl.get()._field_cpp_linked, ._field_statically=_18317_decl.get()._field_statically, ._field_exceptional=_18317_decl.get()._field_exceptional, ._field_ident=_18317_decl.get()._field_ident, ._field_directives=_18317_decl.get()._field_directives, ._field_scope=_18317_decl.get()._field_scope, ._field_generics=_18317_decl.get()._field_generics, ._field_result=_228e00204_build_ret_type(_18317_decl.get()._field_result), ._field_params=_228deee5c_build_params(_18317_decl.get()._field_params), });
}



inline jule::Slice<jule::Ptr<_228de6cbc_Fn>> _228e00743_build_methods(jule::Slice<jule::Ptr<_228d39ea7_FnDecl>>& _20123_decls) {
	jule::Slice<jule::Ptr<_228de6cbc_Fn>> _20213_methods = jule::Slice<jule::Ptr<_228de6cbc_Fn>>::alloc(0LL,_20123_decls.len());;
	{
		auto &expr = _20123_decls;
		auto it = expr.begin();
		_iter_begin_22cbe4a3e:;
		if (it != expr.end()) {
			jule::Ptr<_228d39ea7_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_228e0049b_build_fn(_20317_decl));;
			}
			_iter_next_22cbe4a3e:;
			++it;
			goto _iter_begin_22cbe4a3e;
		}
		_iter_end_22cbe4a3e:;
	};
	return _20213_methods;
}



inline jule::Ptr<_22923d1bd_Trait> _228e009da_build_trait(jule::Ptr<_228d43d4b_TraitDecl> _20920_decl) {
	return jule::new_ptr<_22923d1bd_Trait>(_22923d1bd_Trait{._field_token=_20920_decl.get()._field_token, ._field_ident=_20920_decl.get()._field_ident, ._field_public=_20920_decl.get()._field_public, ._field_methods=_228e00743_build_methods(_20920_decl.get()._field_methods), });
}



inline jule::Ptr<_22908619d_EnumItem> _228e00c82_build_enum_item(jule::Ptr<_228d41156_EnumItemDecl> _21824_decl) {
	return jule::new_ptr<_22908619d_EnumItem>(_22908619d_EnumItem{._field_token=_21824_decl.get()._field_token, ._field_ident=_21824_decl.get()._field_ident, ._field_value=_228dedc3b_build_expr(_21824_decl.get()._field_expr)});
}



inline jule::Slice<jule::Ptr<_22908619d_EnumItem>> _228e01029_build_enum_items(jule::Slice<jule::Ptr<_228d41156_EnumItemDecl>>& _22626_decls) {
	jule::Slice<jule::Ptr<_22908619d_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_22908619d_EnumItem>>::alloc(0LL,_22626_decls.len());;
	{
		auto &expr = _22626_decls;
		auto it = expr.begin();
		_iter_begin_22cbe70c4:;
		if (it != expr.end()) {
			jule::Ptr<_228d41156_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_228e00c82_build_enum_item(_22817_decl));;
			}
			_iter_next_22cbe70c4:;
			++it;
			goto _iter_begin_22cbe70c4;
		}
		_iter_end_22cbe70c4:;
	};
	return _22713_items;
}



inline jule::Ptr<_228e0dcc3_Enum> _228e012c1_build_enum(jule::Ptr<_228d41b7e_EnumDecl> _23419_decl) {
	return jule::new_ptr<_228e0dcc3_Enum>(_228e0dcc3_Enum{._field_token=_23419_decl.get()._field_token, ._field_public=_23419_decl.get()._field_public, ._field_ident=_23419_decl.get()._field_ident, ._field_kind=_228ded950_build_type(_23419_decl.get()._field_kind), ._field_items=_228e01029_build_enum_items(_23419_decl.get()._field_items)});
}



inline jule::Ptr<_2290786bd_TypeEnumItem> _228e01722_build_type_enum_item(jule::Ptr<_228d42685_TypeEnumItemDecl> _24429_decl) {
	return jule::new_ptr<_2290786bd_TypeEnumItem>(_2290786bd_TypeEnumItem{._field_token=_24429_decl.get()._field_token, ._field_ident=_24429_decl.get()._field_ident, ._field_kind=_228ded950_build_type(_24429_decl.get()._field_kind)});
}



inline jule::Slice<jule::Ptr<_2290786bd_TypeEnumItem>> _228e019b9_build_type_enum_items(jule::Slice<jule::Ptr<_228d42685_TypeEnumItemDecl>>& _25231_decls) {
	jule::Slice<jule::Ptr<_2290786bd_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_2290786bd_TypeEnumItem>>::alloc(0LL,_25231_decls.len());;
	{
		auto &expr = _25231_decls;
		auto it = expr.begin();
		_iter_begin_22cbe989b:;
		if (it != expr.end()) {
			jule::Ptr<_228d42685_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_228e01722_build_type_enum_item(_25417_decl));;
			}
			_iter_next_22cbe989b:;
			++it;
			goto _iter_begin_22cbe989b;
		}
		_iter_end_22cbe989b:;
	};
	return _25313_items;
}



inline jule::Ptr<_2292e1e75_TypeEnum> _228e01c61_build_type_enum(jule::Ptr<_228d42883_TypeEnumDecl> _26024_decl) {
	return jule::new_ptr<_2292e1e75_TypeEnum>(_2292e1e75_TypeEnum{._field_token=_26024_decl.get()._field_token, ._field_public=_26024_decl.get()._field_public, ._field_ident=_26024_decl.get()._field_ident, ._field_items=_228e019b9_build_type_enum_items(_26024_decl.get()._field_items)});
}



inline jule::Ptr<_229a0a4a1_Var> _228e02008_build_var(jule::Ptr<_228d3ae86_VarDecl> _26918_decl) {
	return jule::new_ptr<_229a0a4a1_Var>(_229a0a4a1_Var{._field_token=_26918_decl.get()._field_token, ._field_ident=_26918_decl.get()._field_ident, ._field_cpp_linked=_26918_decl.get()._field_cpp_linked, ._field_constant=_26918_decl.get()._field_constant, ._field_mutable=_26918_decl.get()._field_mutable, ._field_public=_26918_decl.get()._field_public, ._field_statically=_26918_decl.get()._field_statically, ._field_reference=_26918_decl.get()._field_reference, ._field_kind=_228ded950_build_type(_26918_decl.get()._field_kind), ._field_value=_228dedc3b_build_expr(_26918_decl.get()._field_expr), ._field_refers=static__228dec520_new(), ._field_directives=_26918_decl.get()._field_directives, });
}



inline jule::Slice<jule::Ptr<_229a0a4a1_Var>> _228e022a0_build_vars(jule::Slice<jule::Ptr<_228d3ae86_VarDecl>> _28619_decls) {
	jule::Slice<jule::Ptr<_229a0a4a1_Var>> _28713_vars = jule::Slice<jule::Ptr<_229a0a4a1_Var>>::alloc(0LL,_28619_decls.len());;
	{
		auto &expr = _28619_decls;
		auto it = expr.begin();
		_iter_begin_22cbecb57:;
		if (it != expr.end()) {
			jule::Ptr<_228d3ae86_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_228e02008_build_var(_28817_decl));;
			}
			_iter_next_22cbecb57:;
			++it;
			goto _iter_begin_22cbecb57;
		}
		_iter_end_22cbecb57:;
	};
	return _28713_vars;
}



inline jule::Ptr<_2299a3504_Impl> _228e02547_build_impl(jule::Ptr<_228d44456_Impl> _29419_decl) {
	return jule::new_ptr<_2299a3504_Impl>(_2299a3504_Impl{._field_base=_29419_decl.get()._field_base, ._field_dest=_29419_decl.get()._field_dest, ._field_methods=_228e00743_build_methods(_29419_decl.get()._field_methods), ._field_statics=_228e022a0_build_vars(_29419_decl.get()._field_statics)});
}



inline jule::Bool _229980437_match_constraint(jule::Str& _13522_c, jule::Ptr<_229a7d359_TypeKind>& _13535_g) {
	{
		auto &_match_expr{ _13522_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_22cc58c7e:;
			{
				jule::Ptr<_229a82d31_Prim> _13813_prim = _229a8046b_prim(_13535_g.ptr());;
				if ((_13813_prim == nullptr)) {
					return false;
				};
				return _2299b67c0_is_sig_num(_13813_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_22cc58ce5:;
			{
				jule::Ptr<_229a82d31_Prim> _14413_prim = _229a8046b_prim(_13535_g.ptr());;
				if ((_14413_prim == nullptr)) {
					return false;
				};
				return _2299b5bba_is_unsig_int(_14413_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_22cc58e27:;
			{
				jule::Ptr<_229a82d31_Prim> _15013_prim = _229a8046b_prim(_13535_g.ptr());;
				if ((_15013_prim == nullptr)) {
					return false;
				};
				return _2299b6281_is_float(_15013_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_22cc58e8d:;
			{
				jule::Ptr<_229a82d31_Prim> _15613_prim = _229a8046b_prim(_13535_g.ptr());;
				if ((_15613_prim == nullptr)) {
					return false;
				};
				return _2299b6528_is_num(_15613_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_22cc59004:;
			{
				return _229a7e756_mutable(_13535_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_22cc5906a:;
			{
				return (!(_229a7e756_mutable(_13535_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_22cc590d1:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_22cc59147:;
			{
				jule::Ptr<_229a82d31_Prim> _16813_prim = _229a8046b_prim(_13535_g.ptr());;
				if ((_16813_prim != nullptr)) {
					return (_2299b6528_is_num(_16813_prim.get()._field_kind) || _229a86065_is_str(_16813_prim.ptr()));
				};
				if ((_229a80944_ptr(_13535_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_228d44c1a_StructIns> _17513_s = _229a818bd_strct(_13535_g.ptr());;
				if ((_17513_s != nullptr)) {
					return ((((_17513_s.get()._field_operators._field_gt != nullptr) && (_17513_s.get()._field_operators._field_gt_eq != nullptr)) && (_17513_s.get()._field_operators._field_lt != nullptr)) && (_17513_s.get()._field_operators._field_lt_eq != nullptr));
				};
				jule::Ptr<_228e0dcc3_Enum> _18213_enm = _229a80ba8_enm(_13535_g.ptr());;
				if ((_18213_enm != nullptr)) {
					return _2299b6528_is_num(_229a7d755_to_str(_18213_enm.get()._field_kind.get()._field_kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_22cc589a4:;
			{
				return false;
			}
		}
		_match_end_22cc588e9:;
	};
}



inline jule::Bool _22998202c_is_builtin_constraint(jule::Str& _19227_ident) {
	{
		auto &expr = _22993980e_BUILTIN_CONSTRAINTS;
		auto it = expr.begin();
		_iter_begin_22cc5ec0d:;
		if (it != expr.end()) {
			jule::Str &_19312_bc = *it;
			{
				if ((_19227_ident == _19312_bc)) {
					return true;
				};
			}
			_iter_next_22cc5ec0d:;
			++it;
			goto _iter_begin_22cc5ec0d;
		}
		_iter_end_22cc5ec0d:;
	};
	return false;
}



inline jule::Ptr<_2299bd7e9_ScopeChecker> _22998bd7d_new_scope_checker_base(jule::Ptr<_2299dd792_Sema>& _5932_s, jule::Ptr<_228de996d_FnIns> _5946_owner) {
	return jule::new_ptr<_2299bd7e9_ScopeChecker>(_2299bd7e9_ScopeChecker{._field_s=_5932_s, ._field_owner=_5946_owner, ._field_table=jule::new_ptr<_229a4ca76_SymbolTable>(), });
}



inline jule::Ptr<_2299bd7e9_ScopeChecker> _22998cc3b_new_scope_checker(jule::Ptr<_2299dd792_Sema>& _6727_s, jule::Ptr<_228de996d_FnIns> _6741_owner) {
	jule::Ptr<_2299bd7e9_ScopeChecker> _6813_base = _22998bd7d_new_scope_checker_base(_6727_s,_6741_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2299bc562_ScopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2299bc9d5_ScopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_2299bc562_ScopeLabel> _229981d84_find_label_parent(jule::Str _7722_ident, jule::Ptr<_2299bd7e9_ScopeChecker> _7738_scope) {
	jule::Ptr<_2299bc562_ScopeLabel> _7813_label = _2299c228c_find_label_scope(_7738_scope, _7722_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7738_scope.get()._field_parent == nullptr) || (_7738_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7738_scope=_7738_scope.get()._field_parent;
			_7813_label=_2299c228c_find_label_scope(_7738_scope, _7722_ident);
		}
	_iter_next_22cc78386:;
	}
	_iter_end_22cc78386:;;
	return _7813_label;
}



inline jule::Bool _22998dc09_model_is_goto_scope(jule::Any _9124_model, jule::Ptr<_2299b6c10_Scope>& _9137_sc) {
	{
		auto &_match_expr{ _9124_model };
		
		if (_match_expr.type_is<jule::Ptr<_228de06bc_FnCallExprModel>>()) {
			_case_begin_22cc7a278:;
			{
				jule::Ptr<_228de06bc_FnCallExprModel> _9413_fcem = _9124_model.operator jule::Ptr<_228de06bc_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_except == _9137_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a527d4_Data>>()) {
			_case_begin_22cc7a300:;
			{
				jule::Ptr<_229a527d4_Data> _9913_d = _9124_model.operator jule::Ptr<_229a527d4_Data>();;
				return _22998dc09_model_is_goto_scope(jule::Any(_9913_d.get()._field_model),_9137_sc);
			}
		}
		_match_end_22cc7a168:;
	};
	return false;
}



inline jule::Bool _22998eab7_stmt_is_goto_scope(jule::Any& _10524_stmt, jule::Ptr<_2299b6c10_Scope>& _10537_sc) {
	{
		auto &_match_expr{ _10524_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_2299b6c10_Scope>>()) {
			_case_begin_22cc7c445:;
			{
				return (_10524_stmt.operator jule::Ptr<_2299b6c10_Scope>() == _10537_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b79d0_InfIter>>()) {
			_case_begin_22cc7c4ab:;
			{
				return (_10524_stmt.operator jule::Ptr<_2299b79d0_InfIter>().get()._field_scope == _10537_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b8838_RangeIter>>()) {
			_case_begin_22cc7c522:;
			{
				jule::Ptr<_2299b8838_RangeIter> _11213_it = _10524_stmt.operator jule::Ptr<_2299b8838_RangeIter>();;
				return ((_11213_it.get()._field_scope == _10537_sc) || _22998dc09_model_is_goto_scope(jule::Any(_11213_it.get()._field_expr.get()._field_model),_10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b7e53_WhileIter>>()) {
			_case_begin_22cc7c610:;
			{
				jule::Ptr<_2299b7e53_WhileIter> _11513_it = _10524_stmt.operator jule::Ptr<_2299b7e53_WhileIter>();;
				return (((_11513_it.get()._field_scope == _10537_sc) || _22998dc09_model_is_goto_scope(jule::Any(_11513_it.get()._field_expr),_10537_sc)) || _22998dc09_model_is_goto_scope(jule::Any(_11513_it.get()._field_next),_10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299ba8d4_Match>>()) {
			_case_begin_22cc7c687:;
			{
				jule::Ptr<_2299ba8d4_Match> _12013_m = _10524_stmt.operator jule::Ptr<_2299ba8d4_Match>();;
				{
					auto &expr = _12013_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_22cc8125c:;
					if (it != expr.end()) {
						jule::Ptr<_2299bb42e_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_scope == _10537_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_exprs;
								auto it = expr.begin();
								_iter_begin_22cc8222a:;
								if (it != expr.end()) {
									jule::Ptr<_229a527d4_Data> &_12520_expr = *it;
									{
										if (_22998dc09_model_is_goto_scope(jule::Any(_12520_expr.get()._field_model),_10537_sc)) {
											return true;
										};
									}
									_iter_next_22cc8222a:;
									++it;
									goto _iter_begin_22cc8222a;
								}
								_iter_end_22cc8222a:;
							};
						}
						_iter_next_22cc8125c:;
						++it;
						goto _iter_begin_22cc8125c;
					}
					_iter_end_22cc8125c:;
				};
				return ((_12013_m.get()._field_default != nullptr) && (_12013_m.get()._field_default.get()._field_scope == _10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2299b76e4_Conditional>>()) {
			_case_begin_22cc7c70e:;
			{
				jule::Ptr<_2299b76e4_Conditional> _13313_c = _10524_stmt.operator jule::Ptr<_2299b76e4_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_22cc83814:;
					if (it != expr.end()) {
						jule::Ptr<_2299b700c_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_scope == _10537_sc) || _22998dc09_model_is_goto_scope(jule::Any(_13416_elif.get()._field_expr),_10537_sc))) {
								return true;
							};
						}
						_iter_next_22cc83814:;
						++it;
						goto _iter_begin_22cc83814;
					}
					_iter_end_22cc83814:;
				};
				return ((_13313_c.get()._field_default != nullptr) && (_13313_c.get()._field_default.get()._field_scope == _10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a527d4_Data>>()) {
			_case_begin_22cc7c786:;
			{
				jule::Ptr<_229a527d4_Data> _14113_d = _10524_stmt.operator jule::Ptr<_229a527d4_Data>();;
				return _22998dc09_model_is_goto_scope(jule::Any(_14113_d.get()._field_model),_10537_sc);
			}
		}
		else {
			_case_begin_22cc7a72e:;
			{
				return false;
			}
		}
		_match_end_22cc7a6c9:;
	};
}



inline jule::I64 _22999cae7_count_match_type(jule::Ptr<_2299ba8d4_Match>& _14822_m, jule::Ptr<_229a7d359_TypeKind>& _14834_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _229a7d755_to_str(_14834_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14822_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_22cc86839:;
		if (it != expr.end()) {
			jule::Ptr<_2299bb42e_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_22cc86839;
				};
				{
					auto &expr = _15212_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_22cc871ca:;
					if (it != expr.end()) {
						jule::Ptr<_229a527d4_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_22cc86839;
							};
							if ((_1509_kind == _229a7d755_to_str(_15716_expr.get()._field_model.operator jule::Ptr<_229a7d359_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_22cc871ca:;
						++it;
						goto _iter_begin_22cc871ca;
					}
					_iter_end_22cc871ca:;
				};
			}
			_iter_next_22cc86839:;
			++it;
			goto _iter_begin_22cc86839;
		}
		_iter_end_22cc86839:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_229a527d4_Data>> _2299a0a40_get_datas_from_tuple_data(jule::Ptr<_229a527d4_Data>& _17235_d) {
	if ((_229a8210a_tup(_17235_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17235_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_228de23e4_TupleExprModel>>()) {
				_case_begin_22cc8b421:;
				{
					return _17235_d.get()._field_model.operator jule::Ptr<_228de23e4_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_22cc88d25:;
				{
					jule::Ptr<_229a87aa0_Tuple> _17821_t = _229a8210a_tup(_17235_d.get()._field_kind.ptr());;
					jule::Slice<jule::Ptr<_229a527d4_Data>> _17921_r = jule::Slice<jule::Ptr<_229a527d4_Data>>::alloc(0LL,_17821_t.get()._field_types.len());;
					{
						auto &expr = _17821_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_22cc8a343:;
						if (it != expr.end()) {
							jule::Ptr<_229a7d359_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=_18025_kind, ._field_mutable=true, }));;
							}
							_iter_next_22cc8a343:;
							++it;
							goto _iter_begin_22cc8a343;
						}
						_iter_end_22cc8a343:;
					};
					return _17921_r;
				}
			}
			_match_end_22cc88b9e:;
		};
	} else {
		return jule::Slice<jule::Ptr<_229a527d4_Data>>::make({_17235_d});
	};
}



inline jule::Slice<jule::Any> _2299a1579_get_expr_models(jule::Any& _19325_m) {
	{
		auto &_match_expr{ _19325_m };
		
		if (_match_expr.type_is<jule::Ptr<_228d2d341_TupleExpr>>()) {
			_case_begin_22cc8b850:;
			{
				jule::Ptr<_228d2d341_TupleExpr> _19617_tup = _19325_m.operator jule::Ptr<_228d2d341_TupleExpr>();;
				jule::Slice<jule::Any> _19717_models = jule::Slice<jule::Any>::alloc(0LL,_19617_tup.get()._field_expr.len());;
				{
					auto &expr = _19617_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_22cc8cdd4:;
					if (it != expr.end()) {
						jule::Ptr<_228d2c6b4_Expr> _19821_expr = *it;
						{
							_19717_models = jule::alloc_for_append(_19717_models,1);_19717_models.__push(_19821_expr.get()._field_kind);;
						}
						_iter_next_22cc8cdd4:;
						++it;
						goto _iter_begin_22cc8cdd4;
					}
					_iter_end_22cc8cdd4:;
				};
				return _19717_models;
			}
		}
		else {
			_case_begin_22cc88e24:;
			{
				return jule::Slice<jule::Any>::make({_19325_m});
			}
		}
		_match_end_22cc8b6da:;
	};
}



inline jule::Bool _2299a2107_check_mut(jule::Ptr<_2299dd792_Sema>& _20719_s, jule::Ptr<_229a527d4_Data>& _20730_left, jule::Ptr<_229a527d4_Data> _20747_right, jule::Ptr<_2276b1a1c_Token> _20761_op) {
	jule::Bool _20775_ok = jule::Bool();
	{
		
		if ((!(_20730_left.get()._field_mutable))) {
			_case_begin_22cc8e666:;
			{
				_2299e1454_push_err(_20719_s.ptr(), _20761_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20775_ok = false;
				return _20775_ok;
			}
		}
		else if ((((_20747_right != nullptr) && (!(_20747_right.get()._field_mutable))) && _229a7e756_mutable(_20747_right.get()._field_kind.ptr()))) {
			_case_begin_22cc8e776:;
			{
				if (((_20761_op.get()._field_kind != jule::Str("=", 1)) && (_229a818bd_strct(_20747_right.get()._field_kind.ptr()) != nullptr))) {
					_20775_ok = true;
					return _20775_ok;
				};
				_2299e1454_push_err(_20719_s.ptr(), _20761_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_20747_right.get()._field_kind.ptr()))}));
				_20775_ok = false;
				return _20775_ok;
			}
		}
		else {
			_case_begin_22cc8e039:;
			{
				_20775_ok = true;
				return _20775_ok;
			}
		}
		_match_end_22cc8d5ee:;
	};
}



inline jule::Bool _22999c773_check_assign(jule::Ptr<_2299dd792_Sema>& _22622_s, jule::Ptr<_229a527d4_Data>& _22637_left, jule::Ptr<_229a527d4_Data> _22654_right, jule::Ptr<_2276b1a1c_Token> _22668_op) {
	jule::Bool _22682_ok = jule::Bool();
	jule::Ptr<_228de996d_FnIns> _2279_f = _229a81659_fnc(_22637_left.get()._field_kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_decl != nullptr)) && _2279_f.get()._field_decl.get()._field_global)) {
		_2299e1454_push_err(_22622_s.ptr(), _22668_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22682_ok = false;
		return _22682_ok;
	};
	{
		
		if (_229a53197_is_const(_22637_left.ptr())) {
			_case_begin_22cc9467c:;
			{
				_2299e1454_push_err(_22622_s.ptr(), _22668_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_2299e1773_push_suggestion(_22622_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else if ((!(_22637_left.get()._field_lvalue))) {
			_case_begin_22cc94759:;
			{
				_2299e1454_push_err(_22622_s.ptr(), _22668_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else if ((!(_2299a2107_check_mut(_22622_s,_22637_left,_22654_right,_22668_op)))) {
			_case_begin_22cc947d1:;
			{
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else {
			_case_begin_22cc9402d:;
			{
				_22682_ok = true;
				return _22682_ok;
			}
		}
		_match_end_22cc93dc9:;
	};
}



inline jule::Bool _22994d3c2_is_valid_ast_st_for_next_st(jule::Any& _24837_n) {
	{
		auto &_match_expr{ _24837_n };
		
		if (_match_expr.type_is<jule::Ptr<_228d36e1b_AssignSt>>()) {
			_case_begin_22cc9488b:;
			{
				return (!(_24837_n.operator jule::Ptr<_228d36e1b_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d2c6b4_Expr>>()) {
			_case_begin_22cc94902:;
			{
				return true;
			}
		}
		else {
			_case_begin_22cc96173:;
			{
				return false;
			}
		}
		_match_end_22cc9645e:;
	};
}



inline jule::Bool _22998aab3_is_valid_st_for_next_st(jule::Any& _25929_st) {
	{
		auto &_match_expr{ _25929_st };
		
		if (_match_expr.type_is<jule::Ptr<_2299b9a6a_Postfix>>() || _match_expr.type_is<jule::Ptr<_2299b9edd_Assign>>() || _match_expr.type_is<jule::Ptr<_2299ba395_MultiAssign>>()) {
			_case_begin_22cc972c8:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_229a527d4_Data>>()) {
			_case_begin_22cc9733e:;
			{
				{
					auto &_match_expr{ _25929_st.operator jule::Ptr<_229a527d4_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_228de06bc_FnCallExprModel>>()) {
						_case_begin_22cc9872a:;
						{
							return true;
						}
					}
					else {
						_case_begin_22cc986b4:;
						{
							return false;
						}
					}
					_match_end_22cc98450:;
				};
			}
		}
		else {
			_case_begin_22cc96be0:;
			{
				return false;
			}
		}
		_match_end_22cc96b02:;
	};
}



inline jule::Bool _2299b6acd_stmt_is_def(jule::Any& _27717_st) {
	{
		auto &_match_expr{ _27717_st };
		
		if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
			_case_begin_22cc993b8:;
			{
				return true;
			}
		}
		else {
			_case_begin_22cc98351:;
			{
				return false;
			}
		}
		_match_end_22cc982eb:;
	};
}



inline jule::Ptr<_229a0a4a1_Var> _2299d31d2_find_var_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>& _4629_files, jule::Str _4652_ident, jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_22ce0955b:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_229a0a4a1_Var> _4817_v = _229a4d758_find_var(_4717_f.ptr(), _4652_ident,_4664_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_22ce0955b:;
			++it;
			goto _iter_begin_22ce0955b;
		}
		_iter_end_22ce0955b:;
	};
	return nullptr;
}



inline jule::Ptr<_229a7c666_TypeAlias> _2299d3633_find_type_alias_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>& _5836_files, jule::Str _5859_ident, jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_22ce0ab12:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_229a7c666_TypeAlias> _6017_ta = _229a4db10_find_type_alias(_5917_f.ptr(), _5859_ident,_5871_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_22ce0ab12:;
			++it;
			goto _iter_begin_22ce0ab12;
		}
		_iter_end_22ce0ab12:;
	};
	return nullptr;
}



inline jule::Ptr<_228d188c0_Struct> _2299d3a2e_find_struct_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>& _7032_files, jule::Str _7055_ident, jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_22ce0c1a7:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_228d188c0_Struct> _7217_s = _229a4deb7_find_struct(_7117_f.ptr(), _7055_ident,_7067_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_22ce0c1a7:;
			++it;
			goto _iter_begin_22ce0c1a7;
		}
		_iter_end_22ce0c1a7:;
	};
	return nullptr;
}



inline jule::Ptr<_228de6cbc_Fn> _2299d3e91_find_fn_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>& _8228_files, jule::Str _8251_ident, jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_22ce0d74c:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_228de6cbc_Fn> _8417_f = _229a4e36e_find_fn(_8317_file.ptr(), _8251_ident,_8263_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_22ce0d74c:;
			++it;
			goto _iter_begin_22ce0d74c;
		}
		_iter_end_22ce0d74c:;
	};
	return nullptr;
}



inline jule::Ptr<_22923d1bd_Trait> _2299d429e_find_trait_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>& _9431_files, jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_22ce0dd46:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_22923d1bd_Trait> _9617_t = _229a4e67c_find_trait(_9517_f.ptr(), _9454_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_22ce0dd46:;
			++it;
			goto _iter_begin_22ce0dd46;
		}
		_iter_end_22ce0dd46:;
	};
	return nullptr;
}



inline jule::Ptr<_228e0dcc3_Enum> _2299d45e0_find_enum_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>& _10630_files, jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_22ce101ee:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_228e0dcc3_Enum> _10817_e = _229a4e98a_find_enum(_10717_f.ptr(), _10653_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_22ce101ee:;
			++it;
			goto _iter_begin_22ce101ee;
		}
		_iter_end_22ce101ee:;
	};
	return nullptr;
}



inline jule::Ptr<_2292e1e75_TypeEnum> _2299d4953_find_type_enum_in_package(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>& _11835_files, jule::Str _11858_ident) {
	{
		auto &expr = _11835_files;
		auto it = expr.begin();
		_iter_begin_22ce115b8:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_2292e1e75_TypeEnum> _12017_e = _229a4ec98_find_type_enum(_11917_f.ptr(), _11858_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_22ce115b8:;
			++it;
			goto _iter_begin_22ce115b8;
		}
		_iter_end_22ce115b8:;
	};
	return nullptr;
}



inline jule::Bool _2299dab79_is_std_package(jule::Str _35019_f, jule::Str _35027_p) {
	return _2273415c0_has_prefix(_35019_f,_227388947_join(jule::Slice<jule::Str>::make({_2273c7c61_PATH_STDLIB,_35027_p})));
}



inline jule::Bool _2299db8d3_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_229a0a4a1_Var>>()) {
			_case_begin_22ce237c8:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1954_StructSubIdentExprModel>>()) {
			_case_begin_22ce2383e:;
			{
				jule::Ptr<_228de1954_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_228de1954_StructSubIdentExprModel>();;
				return _2299db8d3_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1536_TraitSubIdentExprModel>>()) {
			_case_begin_22ce238a5:;
			{
				jule::Ptr<_228de1536_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_228de1536_TraitSubIdentExprModel>();;
				return _2299db8d3_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228ddec2c_UnaryExprModel>>()) {
			_case_begin_22ce23a5e:;
			{
				jule::Ptr<_228ddec2c_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_228ddec2c_UnaryExprModel>();;
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_229a80944_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_229a806d0_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				};
				return _2299db8d3_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_22ce23113:;
			{
				return false;
			}
		}
		_match_end_22ce2309c:;
	};
}



inline _2409487a2_Log _2299dbd78_compiler_err(jule::Ptr<_2276b1a1c_Token>& _4118_token, jule::Bool _4133_line, jule::Str _4145_fmt, jule::Slice<jule::Any> _4158_args) {
	_2409487a2_Log _4213_log = _2409487a2_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_4118_token.get()._field_row, ._field_column=_4118_token.get()._field_column, ._field_path=_4118_token.get()._field_file.get()._field_path, ._field_text=_240948be2_logf(_4145_fmt,jule::Any(_4158_args)), };;
	if (_4133_line) {
		_4213_log._field_line=_2276b8084_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	};
	return _4213_log;
}



inline jule::Bool _2299dc1b9_imp_is_lookupable(jule::Ptr<_2299d5646_ImportInfo>& _5523_i, jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	};
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _2299d801c_exist_ident(_5523_i.ptr(), _5539_ident);
		};
	};
	return _5523_i.get()._field_import_all;
}



inline void _2299dc4b6_append_ret_vars(jule::Slice<jule::Ptr<_229a0a4a1_Var>>& _6825_dest, jule::Ptr<_228de996d_FnIns>& _6844_f) {
	if ((_228de722e_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_229a7d359_TypeKind>> _7313_types = _228dea452_types(_6844_f.ptr());;
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_22ce2c1e9:;
		if (it != expr.end()) {
			jule::I64 _7410_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _7417_ident = *it;
			{
				if ((_2276b42b1_is_ignore_ident(_7417_ident.get()._field_kind) || _2276b4558_is_anon_ident(_7417_ident.get()._field_kind))) {
					goto _iter_next_22ce2c1e9;
				};
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_229a0a4a1_Var>(_229a0a4a1_Var{._field_scope=_6844_f.get()._field_scope, ._field_token=_7417_ident, ._field_ident=_7417_ident.get()._field_kind, ._field_mutable=true, ._field_used=true, ._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=_7313_types[_7410_i]}), ._field_value=jule::new_ptr<_229a5385c_Value>(_229a5385c_Value{._field_data=jule::new_ptr<_229a527d4_Data>()}), }));;
			}
			_iter_next_22ce2c1e9:;
			++it;
			_7410_i++;
			goto _iter_begin_22ce2c1e9;
		}
		_iter_end_22ce2c1e9:;
	};
}



inline void _2299dc76e_append_param_vars(jule::Slice<jule::Ptr<_229a0a4a1_Var>>& _9427_dest, jule::Ptr<_228de996d_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_22ce2d87c:;
		if (it != expr.end()) {
			jule::Ptr<_228de8a9e_ParamIns> _9917_p = *it;
			{
				if ((_2276b42b1_is_ignore_ident(_9917_p.get()._field_decl.get()._field_ident) || _2276b4558_is_anon_ident(_9917_p.get()._field_decl.get()._field_ident))) {
					goto _iter_next_22ce2d87c;
				};
				jule::Ptr<_229a0a4a1_Var> _10417_v = jule::new_ptr<_229a0a4a1_Var>(_229a0a4a1_Var{._field_scope=_9446_f.get()._field_scope, ._field_token=_9917_p.get()._field_decl.get()._field_token, ._field_ident=_9917_p.get()._field_decl.get()._field_ident, ._field_mutable=_9917_p.get()._field_decl.get()._field_mutable, ._field_used=true, ._field_reference=_9917_p.get()._field_decl.get()._field_reference, ._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(), ._field_value=jule::new_ptr<_229a5385c_Value>(_229a5385c_Value{._field_data=jule::new_ptr<_229a527d4_Data>()}), });;
				{
					
					if (_228de5aac_is_self(_9917_p.get()._field_decl.ptr())) {
						_case_begin_22ce32650:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_229a7ce2a_Kind>(_9446_f.get()._field_owner, 0)});
							_10417_v.get()._field_reference=(!(_228de5d21_is_ref(_9917_p.get()._field_decl.ptr())));
							if (_228de5d21_is_ref(_9917_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_229a865b5_Sptr>(_229a865b5_Sptr{._field_elem=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_cpp_ident=_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident, ._field_kind=_10417_v.get()._field_kind.get()._field_kind.get()._field_kind})}), 7);
							};
						}
					}
					else if (_9917_p.get()._field_decl.get()._field_variadic) {
						_case_begin_22ce32342:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_229a87022_Slc>(_229a87022_Slc{._field_elem=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_cpp_ident=_9917_p.get()._field_kind.get()._field_cpp_ident, ._field_kind=_9917_p.get()._field_kind.get()._field_kind})}), 8)});
						}
					}
					else {
						_case_begin_22ce30eab:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_9917_p.get()._field_kind;
						}
					}
					_match_end_22ce321dd:;
				};
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);;
			}
			_iter_next_22ce2d87c:;
			++it;
			goto _iter_begin_22ce2d87c;
		}
		_iter_end_22ce2d87c:;
	};
}



inline void _2299dca49_append_generic_type_aliases(jule::Slice<jule::Ptr<_229a7c666_TypeAlias>>& _15437_dest, jule::Ptr<_228de996d_FnIns>& _15462_f) {
	jule::I64 _15513_size = _15462_f.get()._field_generics.len();;
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	if ((_15513_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_22ce37820:;
		if (it != expr.end()) {
			jule::I64 _16410_i = it - expr.begin();
			jule::Ptr<_229a7bb2c_InsGeneric> _16417_g = *it;
			{
				jule::Ptr<_228d35777_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_16410_i];;
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_229a7c666_TypeAlias>(_229a7c666_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_16517_decl.get()._field_token, ._field_ident=_16517_decl.get()._field_ident, ._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=_16417_g.get()._field_kind}), }));;
			}
			_iter_next_22ce37820:;
			++it;
			_16410_i++;
			goto _iter_begin_22ce37820;
		}
		_iter_end_22ce37820:;
	};
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_228d44c1a_StructIns> _17717_owner = _15462_f.get()._field_owner;;
		{
			auto &expr = _17717_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_22ce39190:;
			if (it != expr.end()) {
				jule::I64 _17814_i = it - expr.begin();
				jule::Ptr<_229a7bb2c_InsGeneric> _17821_g = *it;
				{
					jule::Ptr<_228d35777_GenericDecl> _17921_decl = _17717_owner.get()._field_decl.get()._field_generics[_17814_i];;
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_229a7c666_TypeAlias>(_229a7c666_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_17921_decl.get()._field_token, ._field_ident=_17921_decl.get()._field_ident, ._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=_17821_g.get()._field_kind}), }));;
				}
				_iter_next_22ce39190:;
				++it;
				_17814_i++;
				goto _iter_begin_22ce39190;
			}
			_iter_end_22ce39190:;
		};
	};
}



inline jule::Ptr<_229a4ca76_SymbolTable> _2299dcd9b_find_file(jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>& _19219_files, jule::Ptr<_2276b6da7_File>& _19243_handler) {
	{
		auto &expr = _19219_files;
		auto it = expr.begin();
		_iter_begin_22ce3817d:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _19317_fl = *it;
			{
				if ((_19317_fl.get()._field_file == _19243_handler)) {
					return _19317_fl;
				};
			}
			_iter_next_22ce3817d:;
			++it;
			goto _iter_begin_22ce3817d;
		}
		_iter_end_22ce3817d:;
	};
	return nullptr;
}



inline void _2299dd30d_push_suggestion(_2409487a2_Log* _20131_log, jule::Str _20142_fmt, jule::Slice<jule::Any> _20155_args) {
	_20131_log->_field_suggestion=_240948be2_logf(_20142_fmt,jule::Any(_20155_args));
}



inline jule::Bool _229a2baaa_trait_has_reference_receiver(jule::Ptr<_22923d1bd_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_22d1331ad:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_statically) {
					goto _iter_next_22d1331ad;
				};
				jule::Ptr<_228de5480_Param> _3313_p = _2712_f.get()._field_params[0LL];;
				if ((_228de5d21_is_ref(_3313_p.ptr()) && _228de5aac_is_self(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_22d1331ad:;
			++it;
			goto _iter_begin_22d1331ad;
		}
		_iter_end_22d1331ad:;
	};
	return false;
}



inline jule::Bool _229a23ad5_float_assignable(jule::Str _4121_kind, jule::Ptr<_229a527d4_Data>& _4133_d) {
	jule::Str _429_value = _22936259a_fmt_float(static_cast<jule::F64>(_228dd86a4_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);;
	return _2299aaa06_check_bit_float(_429_value,static_cast<jule::I64>(_2299a46ae_bitsize_of(_4121_kind)));
}



inline jule::Bool _229a23c17_sig_assignable(jule::Str _4619_kind, jule::Ptr<_229a527d4_Data>& _4631_d) {
	jule::F64 _479_min = _2299b0797_min(_4619_kind);;
	jule::F64 _489_max = _2299b0a83_max(_4619_kind);;
	{
		
		if (_228dda310_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_22d139dc9:;
			{
				jule::F64 _5113_x = _228dd7e67_read_f64(_4631_d.get()._field_constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _2299056dc_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_228dd9ac3_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_22d139e40:;
			{
				jule::F64 _5813_x = _228dd86a4_as_f64(_4631_d.get()._field_constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_228dd985e_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_22d139ea6:;
			{
				jule::F64 _6313_x = _228dd86a4_as_f64(_4631_d.get()._field_constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_22d139c86:;
	};
	return false;
}



inline jule::Bool _229a3a305_unsig_assignable(jule::Str _6921_kind, jule::Ptr<_229a527d4_Data>& _6933_d) {
	jule::F64 _709_max = _2299b0a83_max(_6921_kind);;
	if ((_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2)))) {
		return _229a236b7_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_228dd74b6_read_i64(_6933_d.get()._field_constant.ptr()))));
	};
	{
		
		if (_228dda310_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_22d13e593:;
			{
				jule::F64 _7713_x = _228dd7e67_read_f64(_6933_d.get()._field_constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _2299056dc_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_228dd9ac3_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_22d140132:;
			{
				jule::F64 _8713_x = _228dd86a4_as_f64(_6933_d.get()._field_constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_228dd985e_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_22d1401a9:;
			{
				jule::F64 _9213_x = _228dd86a4_as_f64(_6933_d.get()._field_constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_22d13e4e9:;
	};
	return false;
}



inline jule::Bool _229a3a437_int_assignable(jule::Str _9819_kind, jule::Ptr<_229a527d4_Data>& _9831_d) {
	{
		
		if (_2299b58ce_is_sig_int(_9819_kind)) {
			_case_begin_22d144b5e:;
			{
				return _229a23c17_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_2299b5bba_is_unsig_int(_9819_kind)) {
			_case_begin_22d1444cc:;
			{
				return _229a3a305_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_22d140819:;
			{
				return false;
			}
		}
		_match_end_22d14073c:;
	};
}



inline jule::Ptr<_228ce499a_Directive> _229a77a3a_find_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>& _424224_directives, jule::Str _424255_d) {
	{
		auto &expr = _424224_directives;
		auto it = expr.begin();
		_iter_begin_22d25beeb:;
		if (it != expr.end()) {
			jule::Ptr<_228ce499a_Directive> _424317_dr = *it;
			{
				if ((_424317_dr.get()._field_tag.get()._field_kind == _424255_d)) {
					return _424317_dr;
				};
			}
			_iter_next_22d25beeb:;
			++it;
			goto _iter_begin_22d25beeb;
		}
		_iter_end_22d25beeb:;
	};
	return nullptr;
}



inline jule::Any _229a77dc0_find_builtins_import(jule::Str _425125_ident, jule::Ptr<_2299d5646_ImportInfo> _425137_imp) {
	return jule::Any(_229b07a76_find_package_builtin_def(_425137_imp.get()._field_link_path,_425125_ident));
}



inline void _229a780ce_fit_bitsize(jule::Ptr<_229a527d4_Data>& _425821_d) {
	jule::Ptr<_229a82d31_Prim> _425913_prim = _229a8046b_prim(_425821_d.get()._field_kind.ptr());;
	jule::I64 _42609_z = _2299a46ae_bitsize_of(_229a83194_to_str(_425913_prim.ptr()));;
	if ((_42609_z == 64LL)) {
		return;;
	};
	jule::I64 _426513_k = 0LL;;
	{
		
		if (_228dd985e_is_i64(_425821_d.get()._field_constant.ptr())) {
			_case_begin_22d25edab:;
			{
				_426513_k=static_cast<jule::I64>(_2299aae68_bitsize_of_int(static_cast<jule::I64>(_228dd74b6_read_i64(_425821_d.get()._field_constant.ptr()))));
				if ((_426513_k > _42609_z)) {
					_425913_prim.get()._field_kind=_2299a49cd_int_from_bits(_426513_k);
				};
			}
		}
		else if (_228dd9ac3_is_u64(_425821_d.get()._field_constant.ptr())) {
			_case_begin_22d25ee33:;
			{
				_426513_k=static_cast<jule::I64>(_2299ab210_bitsize_of_uint(static_cast<jule::U64>(_228dd772a_read_u64(_425821_d.get()._field_constant.ptr()))));
				if ((_426513_k > _42609_z)) {
					_425913_prim.get()._field_kind=_2299a4c75_uint_from_bits(_426513_k);
				};
			}
		}
		else if (_228dda310_is_f64(_425821_d.get()._field_constant.ptr())) {
			_case_begin_22d25eeaa:;
			{
				_426513_k=static_cast<jule::I64>(_2299aabc1_bitsize_of_float(static_cast<jule::F64>(_228dd7e67_read_f64(_425821_d.get()._field_constant.ptr()))));
				if ((_426513_k > _42609_z)) {
					_425913_prim.get()._field_kind=_2299a501c_float_from_bits(_426513_k);
				};
			}
		}
		_match_end_22d25ece0:;
	};
}



inline void _229a783cb_make_struct_lit_alloc(jule::Ptr<_229a527d4_Data>& _428531_d, jule::Ptr<_228de0106_StructLitExprModel>& _428546_lit) {
	_428531_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_229a865b5_Sptr>(_229a865b5_Sptr{._field_elem=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_428546_lit.get()._field_strct, 0)})}), 7)});
	_428531_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de02e3_AllocStructLitExprModel>(_228de02e3_AllocStructLitExprModel{._field_lit=_428546_lit}));
}



inline jule::Ptr<_229a0a4a1_Var> _229a7871c_build_error_var(jule::Ptr<_2299b6c10_Scope>& _429625_s, jule::Ptr<_228d31982_FnCallExpr>& _429641_fc) {
	return jule::new_ptr<_229a0a4a1_Var>(_229a0a4a1_Var{._field_scope=_429625_s, ._field_token=_429641_fc.get()._field_token, ._field_ident=jule::Str("error", 5), ._field_mutable=true, ._field_used=true, ._field_reference=false, ._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("any", 3)), 6)})}), ._field_value=jule::new_ptr<_229a5385c_Value>(_229a5385c_Value{._field_data=jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{})}), });
}



inline jule::Any _229a78a5d_find_builtins_sema(jule::Str _431523_ident, jule::Ptr<_2299dd792_Sema> _431539_s) {
	{
		auto &expr = _431539_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_22d26570d:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _431617_imp = *it;
			{
				if ((_431617_imp.get()._field_import_all || _2299d801c_exist_ident(_431617_imp.ptr(), _431523_ident))) {
					jule::Any _431821_def = _229a77dc0_find_builtins_import(_431523_ident,_431617_imp);;
					if ((_431821_def != nullptr)) {
						return jule::Any(_431821_def);
					};
				};
			}
			_iter_next_22d26570d:;
			++it;
			goto _iter_begin_22d26570d;
		}
		_iter_end_22d26570d:;
	};
	jule::Str _432613_ppath = _2276b779d_dir(_431539_s.get()._field_file.get()._field_file.ptr());;
	if (_2273415c0_has_prefix(_432613_ppath,_2273c7c61_PATH_STDLIB)) {
		(_432613_ppath).mut_slice(_2273c7c61_PATH_STDLIB.len());;
		_432613_ppath=(jule::Str("std", 3) + _227384b85_replace(_432613_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return jule::Any(_229b07a76_find_package_builtin_def(_432613_ppath,_431523_ident));
	};
	return nullptr;
}



inline jule::Bool _229a78d05_is_ok_for_shifting(jule::Ptr<_229a527d4_Data>& _434028_d) {
	if (_229a53197_is_const(_434028_d.ptr())) {
		{
			
			if (_228dd985e_is_i64(_434028_d.get()._field_constant.ptr())) {
				_case_begin_22d269569:;
				{
					return (_228dd74b6_read_i64(_434028_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_228dd9ac3_is_u64(_434028_d.get()._field_constant.ptr())) {
				_case_begin_22d268d2c:;
				{
					return true;
				}
			}
			else if (_228dda310_is_f64(_434028_d.get()._field_constant.ptr())) {
				_case_begin_22d268d93:;
				{
					return (_228dd7e67_read_f64(_434028_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_22d268cb6:;
				{
					return false;
				}
			}
			_match_end_22d268bd9:;
		};
	};
	jule::Ptr<_229a82d31_Prim> _43539_prim = _229a8046b_prim(_434028_d.get()._field_kind.ptr());;
	return ((_43539_prim != nullptr) && _2299b5e62_is_int(_229a83194_to_str(_43539_prim.ptr())));
}



inline jule::Bool _229a791ac_is_instanced_struct(jule::Ptr<_228d44c1a_StructIns> _435724_s) {
	return (_435724_s.get()._field_decl.get()._field_generics.len() == _435724_s.get()._field_generics.len());
}



inline jule::Bool _229a79487_is_ptr_arithmetic_compatible_int(jule::Ptr<_229a527d4_Data>& _436142_d) {
	if (_229a53197_is_const(_436142_d.ptr())) {
		return _229a3a437_int_assignable(jule::Str("int", 3),_436142_d);
	};
	_229a3b669_TypeCompatibilityChecker _436513_tcc = _229a3b669_TypeCompatibilityChecker{._field_dest=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)}), ._field_src=_436142_d.get()._field_kind, };;
	return _229a3cc53_check(&_436513_tcc);
}



inline void _229a796b8_apply_cast_kind_model(jule::Ptr<_229a527d4_Data>& _437431_d, jule::Ptr<_229a7d359_TypeKind>& _437446_t) {
	_437431_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de04d0_CastingExprModel>(_228de04d0_CastingExprModel{._field_expr=_437431_d.get()._field_model, ._field_kind=_437446_t, ._field_expr_kind=_437431_d.get()._field_kind}));
}



inline void _229a79971_apply_cast_kind(jule::Ptr<_229a527d4_Data>& _438225_d, jule::Ptr<_229a7d359_TypeKind>& _438240_t) {
	_229a796b8_apply_cast_kind_model(_438225_d,_438240_t);
	_438225_d.get()._field_kind=_438240_t;
}



inline jule::Ptr<_229a527d4_Data> _229a79b6e_build_void_data(void) {
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("void", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });
}



inline jule::Str _229a79e38_check_data_for_integer_indexing(jule::Ptr<_229a527d4_Data>& _439841_d) {
	jule::Str _439853_err_fmt = jule::Str();
	if ((_439841_d == nullptr)) {
		_439853_err_fmt = jule::Str();
		return _439853_err_fmt;
	};
	{
		
		if ((_229a8046b_prim(_439841_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_22d2703e9:;
			{
				_439853_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _439853_err_fmt;
			}
		}
		else if ((!(_2299b5e62_is_int(_229a83194_to_str(_229a8046b_prim(_439841_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_22d270460:;
			{
				_439853_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _439853_err_fmt;
			}
		}
		else if (_229a53197_is_const(_439841_d.ptr())) {
			_case_begin_22d2704c6:;
			{
				if ((_228dd86a4_as_f64(_439841_d.get()._field_constant.ptr()) < 0LL)) {
					_439853_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _439853_err_fmt;
				};
			}
		}
		else if ((_229a8046b_prim(_439841_d.get()._field_kind.ptr()) == nullptr) || _229a53197_is_const(_439841_d.ptr()) || (_2299a4417_real_kind_of(_229a83194_to_str(_229a8046b_prim(_439841_d.get()._field_kind.ptr()).ptr())) != _2299a4417_real_kind_of(jule::Str("int", 3)))) {
			_case_begin_22d27053c:;
			{
				jule::Ptr<_229a7d359_TypeKind> _441517_t = jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)});;
				_229a79971_apply_cast_kind(_439841_d,_441517_t);
			}
		}
		_match_end_22d27077e:;
	};
	_439853_err_fmt = jule::Str();
	return _439853_err_fmt;
}



inline void _229a7a224_apply_cast_model_by_enum(jule::Ptr<_229a527d4_Data>& _442434_d, jule::Ptr<_228e0dcc3_Enum> _442448_e) {
	if ((_442448_e == nullptr)) {
		return;;
	};
	jule::Ptr<_229a82d31_Prim> _44289_p = _229a8046b_prim(_442448_e.get()._field_kind.get()._field_kind.ptr());;
	if (_229a86065_is_str(_44289_p.ptr())) {
		return;;
	};
	_229a796b8_apply_cast_kind_model(_442434_d,_442448_e.get()._field_kind.get()._field_kind);
}



inline void _229a7a4dd_cast_const_by_type(jule::Str& _443524_t, jule::Ptr<_229a527d4_Data>& _443537_d) {
	{
		
		if (_2299b58ce_is_sig_int(_443524_t)) {
			_case_begin_22d2762ac:;
			{
				{
					auto _match_expr{ _2299a46ae_bitsize_of(_2299a4417_real_kind_of(_443524_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_22d276eb1:;
						{
							_228dd8929_set_i64(_443537_d.get()._field_constant.ptr(), static_cast<jule::I64>(_228dd81cb_as_i64(_443537_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_22d277027:;
						{
							_228dd8929_set_i64(_443537_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_228dd81cb_as_i64(_443537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_22d27708d:;
						{
							_228dd8929_set_i64(_443537_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_228dd81cb_as_i64(_443537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_22d277104:;
						{
							_228dd8929_set_i64(_443537_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_228dd81cb_as_i64(_443537_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_22d276e5b:;
				};
			}
		}
		else if (_2299b5bba_is_unsig_int(_443524_t)) {
			_case_begin_22d276334:;
			{
				{
					auto _match_expr{ _2299a46ae_bitsize_of(_2299a4417_real_kind_of(_443524_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_22d27a5d0:;
						{
							_228dd8b9e_set_u64(_443537_d.get()._field_constant.ptr(), static_cast<jule::U64>(_228dd8440_as_u64(_443537_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_22d27a646:;
						{
							_228dd8b9e_set_u64(_443537_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_228dd8440_as_u64(_443537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_22d27a6ac:;
						{
							_228dd8b9e_set_u64(_443537_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_228dd8440_as_u64(_443537_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_22d27a723:;
						{
							_228dd8b9e_set_u64(_443537_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_228dd8440_as_u64(_443537_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_22d279b51:;
				};
			}
		}
		else if (_2299b6281_is_float(_443524_t)) {
			_case_begin_22d2763ab:;
			{
				{
					auto _match_expr{ _2299a46ae_bitsize_of(_2299a4417_real_kind_of(_443524_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_22d27d9e0:;
						{
							_228dd941e_set_f64(_443537_d.get()._field_constant.ptr(), static_cast<jule::F64>(_228dd86a4_as_f64(_443537_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_22d27dc43:;
						{
							_228dd941e_set_f64(_443537_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_228dd86a4_as_f64(_443537_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_22d27d281:;
				};
			}
		}
		_match_end_22d27617a:;
	};
}



inline void _229a7a9e9_update_model_to_generic_ins(jule::Ptr<_228de06bc_FnCallExprModel>& _446937_m, jule::Ptr<_228de996d_FnIns>& _446963_f) {
	{
		auto &_match_expr{ _446937_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_228de996d_FnIns>>()) {
			_case_begin_22d27e1d8:;
			{
				_446937_m.get()._field_expr=static_cast<jule::Any>(_446963_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1954_StructSubIdentExprModel>>()) {
			_case_begin_22d27e24e:;
			{
				_446937_m.get()._field_expr.operator jule::Ptr<_228de1954_StructSubIdentExprModel>().get()._field_method=_446963_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228de1b41_StructStaticIdentExprModel>>()) {
			_case_begin_22d27e2b5:;
			{
				_446937_m.get()._field_expr.operator jule::Ptr<_228de1b41_StructStaticIdentExprModel>().get()._field_method=_446963_f;
			}
		}
		_match_end_22d27ec88:;
	};
}



inline jule::Bool _229a7ac5d_push_sub_ident_from_expr(jule::Any _448033_expr, jule::Ptr<_228d28da8_SubIdentTypeDecl>& _448054_t) {
	{
		auto &_match_expr{ _448033_expr };
		
		if (_match_expr.type_is<jule::Ptr<_228d2e72c_IdentExpr>>()) {
			_case_begin_22d282296:;
			{
				jule::Ptr<_228d2e72c_IdentExpr> _448317_e = _448033_expr.operator jule::Ptr<_228d2e72c_IdentExpr>();;
				_448054_t.get()._field_idents = jule::alloc_for_append(_448054_t.get()._field_idents,1);_448054_t.get()._field_idents.__push(jule::new_ptr<_228d28759_IdentTypeDecl>(_228d28759_IdentTypeDecl{._field_token=_448317_e.get()._field_token, ._field_ident=_448317_e.get()._field_ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228d30ec0_SubIdentExpr>>()) {
			_case_begin_22d28230c:;
			{
				jule::Ptr<_228d30ec0_SubIdentExpr> _448917_e = _448033_expr.operator jule::Ptr<_228d30ec0_SubIdentExpr>();;
				if ((!(_229a7ac5d_push_sub_ident_from_expr(_448917_e.get()._field_expr.get()._field_kind,_448054_t)))) {
					return false;
				};
				_448054_t.get()._field_idents = jule::alloc_for_append(_448054_t.get()._field_idents,1);_448054_t.get()._field_idents.__push(jule::new_ptr<_228d28759_IdentTypeDecl>(_228d28759_IdentTypeDecl{._field_token=_448917_e.get()._field_ident, ._field_ident=_448917_e.get()._field_ident.get()._field_kind, }));;
			}
		}
		else {
			_case_begin_22d280d44:;
			{
				return false;
			}
		}
		_match_end_22d280ccd:;
	};
	return true;
}



inline jule::Bool _229a94b56_kind_uses_generics(jule::Any& _157424_k, jule::Slice<jule::Ptr<_228d35777_GenericDecl>>& _157442_generics) {
	{
		auto &expr = _157442_generics;
		auto it = expr.begin();
		_iter_begin_22d50a92b:;
		if (it != expr.end()) {
			jule::Ptr<_228d35777_GenericDecl> &_157512_g = *it;
			{
				if (static__229a9475a_exist(_157512_g.get()._field_ident,_157424_k)) {
					return true;
				};
			}
			_iter_next_22d50a92b:;
			++it;
			goto _iter_begin_22d50a92b;
		}
		_iter_end_22d50a92b:;
	};
	return false;
}



inline jule::Bool _229a94edb_has_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>& _158423_directives, jule::Str _158454_tag) {
	{
		auto &expr = _158423_directives;
		auto it = expr.begin();
		_iter_begin_22d50ba70:;
		if (it != expr.end()) {
			jule::Ptr<_228ce499a_Directive> _158517_dr = *it;
			{
				if ((_158517_dr.get()._field_tag.get()._field_kind == _158454_tag)) {
					return true;
				};
			}
			_iter_next_22d50ba70:;
			++it;
			goto _iter_begin_22d50ba70;
		}
		_iter_end_22d50ba70:;
	};
	return false;
}



inline jule::Bool _229a95283_can_get_ptr(jule::Ptr<_229a527d4_Data>& _159321_d) {
	if (((!(_159321_d.get()._field_lvalue)) || _229a53197_is_const(_159321_d.ptr()))) {
		return false;
	};
	{
		
		if (((_229a81659_fnc(_159321_d.get()._field_kind.ptr()) != nullptr) || (_229a80ba8_enm(_159321_d.get()._field_kind.ptr()) != nullptr))) {
			_case_begin_22d50d6cb:;
			{
				return false;
			}
		}
		else {
			_case_begin_22d50ce8e:;
			{
				return true;
			}
		}
		_match_end_22d50cd7e:;
	};
}



inline jule::Bool _229a955a2_is_valid_for_sptr_type(jule::Ptr<_229a7d359_TypeKind>& _160732_t) {
	jule::Ptr<_228d44c1a_StructIns> _160813_s = _229a818bd_strct(_160732_t.ptr());;
	if ((((_160813_s != nullptr) && (_160813_s.get()._field_decl != nullptr)) && _160813_s.get()._field_decl.get()._field_cpp_linked)) {
		return false;
	};
	return true;
}



inline jule::Bool _229a95849_is_valid_for_ref(jule::Ptr<_229a7d359_TypeKind>& _161626_t) {
	return (_229a81659_fnc(_161626_t.ptr()) == nullptr);
}



inline jule::Bool _229a95b13_is_builtin_str_convertable(jule::Ptr<_229a7d359_TypeKind>& _161936_t) {
	return (((!(_229a7e4e2_void(_161936_t.ptr()))) && (_229a81659_fnc(_161936_t.ptr()) == nullptr)) && (_229a8210a_tup(_161936_t.ptr()) == nullptr));
}



inline jule::Str _229a95daa_build_link_path_by_tokens(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _162331_tokens) {
	jule::Str _162413_s = _162331_tokens[0LL].get()._field_kind;;
	{
		auto expr = _162331_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_22d512438:;
		if (it != expr.end()) {
			jule::Ptr<_2276b1a1c_Token> &_162512_token = *it;
			{
				_162413_s+=jule::Str("::", 2);
				_162413_s+=_162512_token.get()._field_kind;
			}
			_iter_next_22d512438:;
			++it;
			goto _iter_begin_22d512438;
		}
		_iter_end_22d512438:;
	};
	return _162413_s;
}



inline jule::Ptr<_229a82d31_Prim> _229a96273_build_prim_type(jule::Str _163220_kind) {
	return jule::new_ptr<_229a82d31_Prim>(_229a82d31_Prim{._field_kind=_163220_kind});
}



inline jule::Ptr<_228d188c0_Struct> _229a9651a_get_struct_from_kind(jule::Ptr<_229a7d359_TypeKind> _163829_k) {
	{
		
		if ((_163829_k == nullptr)) {
			_case_begin_22d513747:;
			{
				return nullptr;
			}
		}
		else if ((_229a818bd_strct(_163829_k.ptr()) != nullptr)) {
			_case_begin_22d5137ad:;
			{
				return _229a818bd_strct(_163829_k.ptr()).get()._field_decl;
			}
		}
		else if ((_229a806d0_sptr(_163829_k.ptr()) != nullptr)) {
			_case_begin_22d513824:;
			{
				return _229a9651a_get_struct_from_kind(_229a806d0_sptr(_163829_k.ptr()).get()._field_elem);
			}
		}
		else if ((_229a813e5_slc(_163829_k.ptr()) != nullptr)) {
			_case_begin_22d51388a:;
			{
				return _229a9651a_get_struct_from_kind(_229a813e5_slc(_163829_k.ptr()).get()._field_elem);
			}
		}
		else if ((_229a81181_arr(_163829_k.ptr()) != nullptr)) {
			_case_begin_22d513b43:;
			{
				return _229a9651a_get_struct_from_kind(_229a81181_arr(_163829_k.ptr()).get()._field_elem);
			}
		}
		else if ((_229a80944_ptr(_163829_k.ptr()) != nullptr)) {
			_case_begin_22d513ba9:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_22d5136d1:;
			{
				return nullptr;
			}
		}
		_match_end_22d51345b:;
	};
}



inline jule::Bool _229a967b2_is_prim(jule::Str _166112_kind) {
	return ((((((((((((((((_166112_kind == jule::Str("i8", 2)) || (_166112_kind == jule::Str("i16", 3))) || (_166112_kind == jule::Str("i32", 3))) || (_166112_kind == jule::Str("i64", 3))) || (_166112_kind == jule::Str("u8", 2))) || (_166112_kind == jule::Str("u16", 3))) || (_166112_kind == jule::Str("u32", 3))) || (_166112_kind == jule::Str("u64", 3))) || (_166112_kind == jule::Str("f32", 3))) || (_166112_kind == jule::Str("f64", 3))) || (_166112_kind == jule::Str("int", 3))) || (_166112_kind == jule::Str("uint", 4))) || (_166112_kind == jule::Str("uintptr", 7))) || (_166112_kind == jule::Str("bool", 4))) || (_166112_kind == jule::Str("str", 3))) || (_166112_kind == jule::Str("any", 3)));
}



inline void _229a96a6a_apply_implicit_cast(jule::Ptr<_229a7d359_TypeKind>& _168029_dest, jule::Ptr<_229a527d4_Data>& _168051_d) {
	if (_229a7e27d_is_nil(_168051_d.get()._field_kind.ptr())) {
		return;;
	};
	jule::Ptr<_229a82d31_Prim> _16859_dest_prim = _229a8046b_prim(_168029_dest.ptr());;
	jule::Ptr<_229a82d31_Prim> _16869_prim = _229a8046b_prim(_168051_d.get()._field_kind.ptr());;
	if ((_16859_dest_prim != nullptr)) {
		if (_229a862c9_is_any(_16859_dest_prim.ptr())) {
			_229a79971_apply_cast_kind(_168051_d,_168029_dest);
			return;;
		};
		if (((((((!(_229a7e019_cpp_linked(_168051_d.get()._field_kind.ptr()))) && (!(_168051_d.get()._field_kind.get()._field_variadic))) && (!(_168051_d.get()._field_lvalue))) && (!(_229a53197_is_const(_168051_d.ptr())))) && (_16869_prim != nullptr)) && _2299b6528_is_num(_16869_prim.get()._field_kind))) {
			_229a79971_apply_cast_kind(_168051_d,_168029_dest);
		};
		return;;
	};
	if (((_229a81b32_trt(_168029_dest.ptr()) != nullptr) && (_229a81b32_trt(_168051_d.get()._field_kind.ptr()) == nullptr))) {
		_229a796b8_apply_cast_kind_model(_168051_d,_168029_dest);
		return;;
	};
	if (((_229a80e1c_tenm(_168029_dest.ptr()) != nullptr) && (_229a80e1c_tenm(_168051_d.get()._field_kind.ptr()) == nullptr))) {
		_229a796b8_apply_cast_kind_model(_168051_d,_168029_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_229a4ca76_SymbolTable>,jule::Slice<_2409487a2_Log>> _229a9995d_build_symbols(jule::Ptr<_228ce3900_Ast>& _1523_ast, jule::Trait<_2299d2d4c_Importer>& _1539_importer, jule::Ptr<_228e02a97_SymbolBuilder> _1563_owner) {
	jule::Ptr<_228e02a97_SymbolBuilder> _1613_sb = jule::new_ptr<_228e02a97_SymbolBuilder>(_228e02a97_SymbolBuilder{._field_owner=_1563_owner, ._field_importer=_1539_importer, ._field_ast=_1523_ast, });;
	_228e07ae1_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_2299d85a0_Package>,jule::Slice<_2409487a2_Log>> _229a99d8c___analyze_package(jule::Slice<jule::Ptr<_228ce3900_Ast>>& _2927_files, jule::Trait<_2299d2d4c_Importer>& _2947_importer, jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_229a4ca76_SymbolTable>>::alloc(0LL,_2927_files.len());;
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_22b87aa28:;
		if (it != expr.end()) {
			jule::Ptr<_228ce3900_Ast> _3217_f = *it;
			{
				jule::Ptr<_229a4ca76_SymbolTable> _3318_table;;
				jule::Slice<_2409487a2_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _229a9995d_build_symbols(_3217_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_22b87aa28:;
			++it;
			goto _iter_begin_22b87aa28;
		}
		_iter_end_22b87aa28:;
	};
	jule::Ptr<_2299dd792_Sema> _4013_sema = jule::new_ptr<_2299dd792_Sema>(_2299dd792_Sema{._field_flags=_2968_flags});;
	_229a074c0_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_2299d85a0_Package> _4813_pkg = jule::new_ptr<_2299d85a0_Package>(_2299d85a0_Package{._field_files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_2299d85a0_Package>,jule::Slice<_2409487a2_Log>> _229a9a277_analyze_package(jule::Slice<jule::Ptr<_228ce3900_Ast>> _7228_files, jule::Trait<_2299d2d4c_Importer> _7247_importer, jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_2299d85a0_Package> _7714_package;;
	jule::Slice<_2409487a2_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _229a99d8c___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_228de996d_FnIns> _229aa4319_find_builtin_fn(jule::Str _2220_ident) {
	{
		auto &_match_expr{ _2220_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_22b88357a:;
			{
				static jule::Ptr<_228de996d_FnIns> _2520_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b32bc2_builtin_caller_out), });;
				return _2520_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_22b8835e1:;
			{
				static jule::Ptr<_228de996d_FnIns> _2820_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229aa513e_builtin_caller_outln), });;
				return _2820_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_22b883800:;
			{
				static jule::Ptr<_228de996d_FnIns> _3120_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229ae6867_builtin_caller_new), });;
				return _3120_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_22b883866:;
			{
				static jule::Ptr<_228de996d_FnIns> _3420_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b10881_builtin_caller_panic), });;
				return _3420_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_22b8838cc:;
			{
				static jule::Ptr<_228de996d_FnIns> _3720_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b08a44_builtin_caller_make), });;
				return _3720_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_22b883943:;
			{
				static jule::Ptr<_228de996d_FnIns> _4020_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b2e97c_builtin_caller_append), });;
				return _4020_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_22b8839a9:;
			{
				static jule::Ptr<_228de996d_FnIns> _4320_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b074d2_builtin_caller_copy), });;
				return _4320_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_22b883a20:;
			{
				static jule::Ptr<_228de996d_FnIns> _4620_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229abe08c_builtin_caller_clone), });;
				return _4620_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_22b883adb:;
			{
				static jule::Ptr<_228de996d_FnIns> _4920_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229ada251_builtin_caller_assert), });;
				return _4920_f;
			}
		}
		else {
			_case_begin_22b88336b:;
			{
				return nullptr;
			}
		}
		_match_end_22b882cc7:;
	};
}



inline jule::Ptr<_229a7c666_TypeAlias> _229aa621c_find_builtin_type_alias(jule::Str _5628_ident) {
	{
		auto &_match_expr{ _5628_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_22b8893d8:;
			{
				static jule::Ptr<_229a7c666_TypeAlias> _5920_t = jule::new_ptr<_229a7c666_TypeAlias>(_229a7c666_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("u8", 2)), 6)})}), });;
				return _5920_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_22b88944e:;
			{
				static jule::Ptr<_229a7c666_TypeAlias> _6920_t = jule::new_ptr<_229a7c666_TypeAlias>(_229a7c666_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_229a824b2_TypeSymbol>(_229a824b2_TypeSymbol{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("i32", 3)), 6)})}), });;
				return _6920_t;
			}
		}
		else {
			_case_begin_22b889372:;
			{
				return nullptr;
			}
		}
		_match_end_22b883e2c:;
	};
}



inline jule::Ptr<_22923d1bd_Trait> _229aa6d00_find_builtin_trait(jule::Str _8323_ident) {
	return nullptr;
}



inline jule::Any _229aa7817_find_builtin_def(jule::Str _8721_ident) {
	jule::Ptr<_228de996d_FnIns> _8813_f = _229aa4319_find_builtin_fn(_8721_ident);;
	if ((_8813_f != nullptr)) {
		return jule::Any(_8813_f);
	};
	jule::Ptr<_229a7c666_TypeAlias> _9313_ta = _229aa621c_find_builtin_type_alias(_8721_ident);;
	if ((_9313_ta != nullptr)) {
		return jule::Any(_9313_ta);
	};
	jule::Ptr<_22923d1bd_Trait> _9813_t = _229aa6d00_find_builtin_trait(_8721_ident);;
	if ((_9813_t != nullptr)) {
		return jule::Any(_9813_t);
	};
	return nullptr;
}



inline jule::Any _229ad1665_find_builtin_def_std_debug(jule::Str _10631_ident) {
	{
		auto &_match_expr{ _10631_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_22b88da6e:;
			{
				static jule::Ptr<_228de996d_FnIns> _10920_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b43de2_builtin_caller_std_debug_out), });;
				return jule::Any(_10920_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_22b88dad5:;
			{
				static jule::Ptr<_228de996d_FnIns> _11220_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b442cc_builtin_caller_std_debug_outln), });;
				return jule::Any(_11220_f);
			}
		}
		else {
			_case_begin_22b88d112:;
			{
				return nullptr;
			}
		}
		_match_end_22b88d51e:;
	};
}



inline jule::Any _229b33d38_find_builtin_def_std_mem(jule::Str _11929_ident) {
	{
		auto &_match_expr{ _11929_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_22b88ddb0:;
			{
				static jule::Ptr<_228de996d_FnIns> _12220_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b4294b_builtin_caller_std_mem_size_of), });;
				return jule::Any(_12220_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_22b88de26:;
			{
				static jule::Ptr<_228de996d_FnIns> _12520_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b42c37_builtin_caller_std_mem_align_of), });;
				return jule::Any(_12520_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_22b88de8c:;
			{
				static jule::Ptr<_228de996d_FnIns> _12820_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b43155_builtin_caller_std_mem_free), });;
				return jule::Any(_12820_f);
			}
		}
		else {
			_case_begin_22b88e960:;
			{
				return nullptr;
			}
		}
		_match_end_22b8904cc:;
	};
}



inline jule::Any _229b32dd1_find_builtin_def_std_jule_integrated(jule::Str _13541_ident) {
	{
		auto &_match_expr{ _13541_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_22b8908a6:;
			{
				static jule::Ptr<_228de996d_FnIns> _13820_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b43584_builtin_caller_std_jule_integrated_to_str), });;
				return jule::Any(_13820_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_22b89091c:;
			{
				static jule::Ptr<_228de996d_FnIns> _14120_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_decl=jule::new_ptr<_228de6cbc_Fn>(_228de6cbc_Fn{._field_generics=jule::Slice<jule::Ptr<_228d35777_GenericDecl>>::alloc(1LL), }), ._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b439a2_builtin_caller_std_jule_integrated_emit), });;
				return jule::Any(_14120_f);
			}
		}
		else {
			_case_begin_22b892a95:;
			{
				return nullptr;
			}
		}
		_match_end_22b892952:;
	};
}



inline jule::Any _229b07a76_find_package_builtin_def(jule::Str _15329_link_path, jule::Str _15345_ident) {
	{
		auto &_match_expr{ _15329_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_22b894adb:;
			{
				return jule::Any(_229ad1665_find_builtin_def_std_debug(_15345_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_22b894b52:;
			{
				return jule::Any(_229b33d38_find_builtin_def_std_mem(_15345_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_22b894bb8:;
			{
				return jule::Any(_229b32dd1_find_builtin_def_std_jule_integrated(_15345_ident));
			}
		}
		else {
			_case_begin_22b892c93:;
			{
				return nullptr;
			}
		}
		_match_end_22b893898:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229b17316_builtin_caller_common_plain(jule::Ptr<_229a54352_Eval>& _16637_e, jule::Ptr<_228d31982_FnCallExpr>& _16652_fc, jule::Ptr<_229a527d4_Data>& _16674_d) {
	jule::Ptr<_228de996d_FnIns> _16713_f = _229a81659_fnc(_16674_d.get()._field_kind.ptr());;
	_229a44551_FnCallArgChecker _16913_fcac = _229a44551_FnCallArgChecker{._field_e=_16637_e, ._field_args=_16652_fc.get()._field_args, ._field_error_token=_16652_fc.get()._field_token, ._field_f=_16713_f, ._field_dynamic_annotation=false, };;
	if ((!(_229a4691b_check(&_16913_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_228de06bc_FnCallExprModel> _18013_model = jule::new_ptr<_228de06bc_FnCallExprModel>(_228de06bc_FnCallExprModel{._field_token=_16652_fc.get()._field_token, ._field_func=_16713_f, ._field_expr=_16674_d.get()._field_model, ._field_args=_16913_fcac._field_arg_models, });;
	if ((_16713_f.get()._field_result == nullptr)) {
		_16674_d=_229a79b6e_build_void_data();
	} else {
		_16674_d=jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=_16713_f.get()._field_result, });
	};
	_16674_d.get()._field_model=static_cast<jule::Any>(_18013_model);
	return _16674_d;
}



inline jule::Ptr<_229a527d4_Data> _229b337e9_builtin_caller_common(jule::Ptr<_229a54352_Eval>& _19931_e, jule::Ptr<_228d31982_FnCallExpr>& _19946_fc, jule::Ptr<_229a527d4_Data>& _19968_d) {
	return _229b17316_builtin_caller_common_plain(_19931_e,_19946_fc,_19968_d);
}



inline jule::Ptr<_229a527d4_Data> _229b08725_builtin_caller_common_mut(jule::Ptr<_229a54352_Eval>& _20335_e, jule::Ptr<_228d31982_FnCallExpr>& _20350_fc, jule::Ptr<_229a527d4_Data>& _20372_d) {
	if ((!(_20372_d.get()._field_mutable))) {
		_229a5485d_push_err(_20335_e.ptr(), _20350_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _229b337e9_builtin_caller_common(_20335_e,_20350_fc,_20372_d);
}



inline jule::Ptr<_229a527d4_Data> _229b302c9_builtin_caller_error(jule::Ptr<_229a54352_Eval>& _21030_e, jule::Ptr<_228d31982_FnCallExpr>& _21045_fc) {
	if ((_21045_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_21030_e.ptr(), _21045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_21045_fc.get()._field_args.len() > 1LL)) {
		_229a5485d_push_err(_21030_e.ptr(), _21045_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _21813_expr = _229a6ea21_eval_expr(_21030_e, _21045_fc.get()._field_args[0LL]);;
	if ((_21813_expr == nullptr)) {
		return nullptr;
	};
	if (_229a52bbe_is_nil(_21813_expr.ptr())) {
		_229a5485d_push_err(_21030_e.ptr(), _21045_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _22713_d = _229a79b6e_build_void_data();;
	_22713_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de3824_BuiltinErrorCallExprModel>(_228de3824_BuiltinErrorCallExprModel{._field_err=_21813_expr.get()._field_model}));
	return _22713_d;
}



inline jule::Ptr<_229a527d4_Data> _229b32bc2_builtin_caller_out(jule::Ptr<_229a54352_Eval>& _23528_e, jule::Ptr<_228d31982_FnCallExpr>& _23543_fc, jule::Ptr<_229a527d4_Data>& ) {
	if ((_23543_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_23528_e.ptr(), _23543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23543_fc.get()._field_args.len() > 1LL)) {
		_229a5485d_push_err(_23528_e.ptr(), _23543_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _24413_expr = _229a6ea21_eval_expr(_23528_e, _23543_fc.get()._field_args[0LL]);;
	if ((_24413_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_229a95b13_is_builtin_str_convertable(_24413_expr.get()._field_kind)))) {
		_229a5485d_push_err(_23528_e.ptr(), _23543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_229a527d4_Data> _25413_d = _229a79b6e_build_void_data();;
	_25413_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de25d1_BuiltinOutCallExprModel>(_228de25d1_BuiltinOutCallExprModel{._field_expr=_24413_expr.get()._field_model, }));
	return _25413_d;
}



inline jule::Ptr<_229a527d4_Data> _229aa513e_builtin_caller_outln(jule::Ptr<_229a54352_Eval>& _25930_e, jule::Ptr<_228d31982_FnCallExpr>& _25945_fc, jule::Ptr<_229a527d4_Data>& _25967_d) {
	_25967_d=_229b32bc2_builtin_caller_out(_25930_e,_25945_fc,_25967_d);
	if ((_25967_d == nullptr)) {
		return nullptr;
	};
	_25967_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de27bd_BuiltinOutlnCallExprModel>(_228de27bd_BuiltinOutlnCallExprModel{._field_expr=_25967_d.get()._field_model.operator jule::Ptr<_228de25d1_BuiltinOutCallExprModel>().get()._field_expr, }));
	return _25967_d;
}



inline jule::Ptr<_229a527d4_Data> _229ae6867_builtin_caller_new(jule::Ptr<_229a54352_Eval>& _27128_e, jule::Ptr<_228d31982_FnCallExpr>& _27143_fc, jule::Ptr<_229a527d4_Data>& _27165_d) {
	if ((_27143_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_27128_e.ptr(), _27143_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27143_fc.get()._field_args.len() > 2LL)) {
		_229a5485d_push_err(_27128_e.ptr(), _27143_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _28013_t = _229a6e405_eval_expr_kind(_27128_e, _27143_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_28013_t == nullptr)) {
		return nullptr;
	};
	if ((!(_28013_t.get()._field_decl))) {
		_229a5485d_push_err(_27128_e.ptr(), _27143_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_229a955a2_is_valid_for_sptr_type(_28013_t.get()._field_kind)))) {
		jule::Ptr<_228d44c1a_StructIns> _29117_s = _229a818bd_strct(_28013_t.get()._field_kind.ptr());;
		if ((((_29117_s != nullptr) && (_29117_s.get()._field_decl != nullptr)) && _29117_s.get()._field_decl.get()._field_cpp_linked)) {
			_229a5485d_push_err(_27128_e.ptr(), _27143_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27165_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_229a865b5_Sptr>(_229a865b5_Sptr{._field_elem=_28013_t.get()._field_kind}), 7)});
	if ((_27143_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_229a7d359_TypeKind> _30517_old = _27128_e.get()._field_prefix;;
		_27128_e.get()._field_prefix=_28013_t.get()._field_kind;
		jule::Ptr<_229a527d4_Data> _30817_init = _229a6ea21_eval_expr(_27128_e, _27143_fc.get()._field_args[1LL]);;
		_27128_e.get()._field_prefix=_30517_old;
		if ((_30817_init != nullptr)) {
			jule::Ptr<_2276b1a1c_Token> _31321_token = _27143_fc.get()._field_args[1LL].get()._field_token;;
			;
			_2299e9d75_check_validity_for_init_expr(_27128_e.get()._field_s, (!(_27128_e.get()._field_immutable)),false,_28013_t.get()._field_kind,_30817_init,_31321_token);
			_2299e705e_check_assign_type(_27128_e.get()._field_s, false,_28013_t.get()._field_kind,_30817_init,_31321_token);
			_27165_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2b97_BuiltinNewCallExprModel>(_228de2b97_BuiltinNewCallExprModel{._field_kind=_28013_t.get()._field_kind, ._field_init=_30817_init.get()._field_model}));
		};
	} else {
		_27165_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2b97_BuiltinNewCallExprModel>(_228de2b97_BuiltinNewCallExprModel{._field_kind=_28013_t.get()._field_kind, }));
	};
	return _27165_d;
}



inline jule::Ptr<_229a527d4_Data> _229b10881_builtin_caller_panic(jule::Ptr<_229a54352_Eval>& _33330_e, jule::Ptr<_228d31982_FnCallExpr>& _33345_fc, jule::Ptr<_229a527d4_Data>& ) {
	if ((_33345_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_33330_e.ptr(), _33345_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_33345_fc.get()._field_args.len() > 1LL)) {
		_229a5485d_push_err(_33330_e.ptr(), _33345_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _34213_expr = _229a6ea21_eval_expr(_33330_e, _33345_fc.get()._field_args[0LL]);;
	if ((_34213_expr == nullptr)) {
		return nullptr;
	};
	if (((_229a8046b_prim(_34213_expr.get()._field_kind.ptr()) == nullptr) || (!(_229a86065_is_str(_229a8046b_prim(_34213_expr.get()._field_kind.ptr()).ptr()))))) {
		_229a5485d_push_err(_33330_e.ptr(), _33345_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _35113_d = _229a79b6e_build_void_data();;
	_35113_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de2d84_BuiltinPanicCallExprModel>(_228de2d84_BuiltinPanicCallExprModel{._field_token=_33345_fc.get()._field_token, ._field_expr=_34213_expr.get()._field_model}));
	return _35113_d;
}



inline jule::Ptr<_229a527d4_Data> _229b08a44_builtin_caller_make(jule::Ptr<_229a54352_Eval>& _35929_e, jule::Ptr<_228d31982_FnCallExpr>& _35944_fc, jule::Ptr<_229a527d4_Data>& _35966_d) {
	if ((_35944_fc.get()._field_args.len() < 2LL)) {
		if ((_35944_fc.get()._field_args.len() == 1LL)) {
			_229a5485d_push_err(_35929_e.ptr(), _35944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_229a5485d_push_err(_35929_e.ptr(), _35944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_229a527d4_Data> _36913_t = _229a6e405_eval_expr_kind(_35929_e, _35944_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_36913_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_36913_t.get()._field_decl))) {
			_case_begin_22d6634e0:;
			{
				goto _match_end_22d6637cb;
			}
		}
		else if ((_229a813e5_slc(_36913_t.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d663556:;
			{
				if ((_35944_fc.get()._field_args.len() > 3LL)) {
					_229a5485d_push_err(_35929_e.ptr(), _35944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_229a8046b_prim(_36913_t.get()._field_kind.ptr()) != nullptr) && _229a86065_is_str(_229a8046b_prim(_36913_t.get()._field_kind.ptr()).ptr()))) {
			_case_begin_22d6635bc:;
			{
				if ((_35944_fc.get()._field_args.len() > 2LL)) {
					_229a5485d_push_err(_35929_e.ptr(), _35944_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_22d6637cb:;
	};
	_229a5485d_push_err(_35929_e.ptr(), _35944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_35966_d.get()._field_kind=_36913_t.get()._field_kind;
	jule::Ptr<_229a527d4_Data> _39313_len = _229a6ea21_eval_expr(_2299e6756_evalp(_35929_e.get()._field_s, _35929_e.get()._field_lookup,_36913_t.get()._field_kind), _35944_fc.get()._field_args[1LL]);;
	if ((_39313_len == nullptr)) {
		return nullptr;
	};
	_229a5ce82_check_integer_indexing_by_data(_35929_e.ptr(), _39313_len,_35944_fc.get()._field_args[1LL].get()._field_token);
	jule::Ptr<_228de325d_BuiltinMakeCallExprModel> _40013_model = jule::new_ptr<_228de325d_BuiltinMakeCallExprModel>(_228de325d_BuiltinMakeCallExprModel{._field_kind=_36913_t.get()._field_kind, ._field_len=_39313_len.get()._field_model, });;
	_35966_d.get()._field_model=static_cast<jule::Any>(_40013_model);
	if ((_35944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_229a527d4_Data> _40617_cap = _229a6ea21_eval_expr(_2299e6756_evalp(_35929_e.get()._field_s, _35929_e.get()._field_lookup,_36913_t.get()._field_kind), _35944_fc.get()._field_args[2LL]);;
		if ((_40617_cap == nullptr)) {
			return _35966_d;
		};
		_229a5ce82_check_integer_indexing_by_data(_35929_e.ptr(), _40617_cap,_35944_fc.get()._field_args[2LL].get()._field_token);
		_40013_model.get()._field_cap=_40617_cap.get()._field_model;
	};
	return _35966_d;
}



inline jule::Ptr<_229a527d4_Data> _229b2e97c_builtin_caller_append(jule::Ptr<_229a54352_Eval>& _41631_e, jule::Ptr<_228d31982_FnCallExpr>& _41646_fc, jule::Ptr<_229a527d4_Data>& _41668_d) {
	if ((_41646_fc.get()._field_args.len() < 2LL)) {
		if ((_41646_fc.get()._field_args.len() == 1LL)) {
			_229a5485d_push_err(_41631_e.ptr(), _41646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_229a5485d_push_err(_41631_e.ptr(), _41646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_229a527d4_Data> _42613_t = _229a6ea21_eval_expr(_41631_e, _41646_fc.get()._field_args[0LL]);;
	if ((_42613_t == nullptr)) {
		return nullptr;
	};
	if ((_229a813e5_slc(_42613_t.get()._field_kind.ptr()) == nullptr)) {
		_229a5485d_push_err(_41631_e.ptr(), _41646_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_228de996d_FnIns> _43613_f = jule::new_ptr<_228de996d_FnIns>(_228de996d_FnIns{._field_params=jule::Slice<jule::Ptr<_228de8a9e_ParamIns>>::make({jule::new_ptr<_228de8a9e_ParamIns>(_228de8a9e_ParamIns{._field_decl=jule::new_ptr<_228de5480_Param>(_228de5480_Param{._field_mutable=true, }), ._field_kind=_42613_t.get()._field_kind}),jule::new_ptr<_228de8a9e_ParamIns>(_228de8a9e_ParamIns{._field_decl=jule::new_ptr<_228de5480_Param>(_228de5480_Param{._field_mutable=true, ._field_variadic=true, }), ._field_kind=_229a813e5_slc(_42613_t.get()._field_kind.ptr()).get()._field_elem})}), ._field_result=_42613_t.get()._field_kind, ._field_caller=jule::Fn<jule::Ptr<_229a527d4_Data>(jule::Ptr<_229a54352_Eval>&,jule::Ptr<_228d31982_FnCallExpr>&,jule::Ptr<_229a527d4_Data>&)>(_229b17316_builtin_caller_common_plain), });;
	_41668_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_43613_f, 1)});
	_41668_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de201a_CommonIdentExprModel>(_228de201a_CommonIdentExprModel{._field_ident=jule::Str("append", 6)}));
	_41668_d=_229b17316_builtin_caller_common_plain(_41631_e,_41646_fc,_41668_d);
	if ((_41668_d != nullptr)) {
		jule::Ptr<_228de06bc_FnCallExprModel> _46417_model = _41668_d.get()._field_model.operator jule::Ptr<_228de06bc_FnCallExprModel>();;
		_41668_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de344a_BuiltinAppendCallExprModel>(_228de344a_BuiltinAppendCallExprModel{._field_dest=_46417_model.get()._field_args[0LL], ._field_elements=_46417_model.get()._field_args[1LL]}));
	};
	return _41668_d;
}



inline jule::Ptr<_229a527d4_Data> _229aa2955_caller_copy_slice(jule::Ptr<_229a527d4_Data>& _47327_dest, jule::Ptr<_229a54352_Eval>& _47345_e, jule::Ptr<_228d31982_FnCallExpr>& _47360_fc, jule::Ptr<_229a527d4_Data>& _47382_d) {
	if ((!(_47327_dest.get()._field_mutable))) {
		_229a5485d_push_err(_47345_e.ptr(), _47360_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _47813_src = _229a6ea21_eval_expr(_47345_e, _47360_fc.get()._field_args[1LL]);;
	if ((_47813_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_229a87022_Slc> _48213_slc = _229a813e5_slc(_47813_src.get()._field_kind.ptr());;
	if ((_48213_slc != nullptr)) {
		if (((!(_47813_src.get()._field_mutable)) && _229a7e756_mutable(_48213_slc.get()._field_elem.ptr()))) {
			_229a5485d_push_err(_47345_e.ptr(), _47360_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_229a7da63_equals(_47327_dest.get()._field_kind, _47813_src.get()._field_kind)))) {
			_229a5485d_push_err(_47345_e.ptr(), _47360_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_47327_dest.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_47813_src.get()._field_kind.ptr()))}));
		};
	} else {
		jule::Ptr<_229a82d31_Prim> _49213_dest_prim = _229a8046b_prim(_229a813e5_slc(_47327_dest.get()._field_kind.ptr()).get()._field_elem.ptr());;
		jule::Ptr<_229a82d31_Prim> _49313_prim = _229a8046b_prim(_47813_src.get()._field_kind.ptr());;
		if (((((_49213_dest_prim == nullptr) || (_49313_prim == nullptr)) || (!(_229a86065_is_str(_49313_prim.ptr())))) || (!(_229a8463a_is_u8(_49213_dest_prim.ptr()))))) {
			_229a5485d_push_err(_47345_e.ptr(), _47360_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_47327_dest.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_47813_src.get()._field_kind.ptr()))}));
		};
	};
	_47382_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)});
	_47382_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de3637_BuiltinCopyCallExprModel>(_228de3637_BuiltinCopyCallExprModel{._field_dest=_47327_dest, ._field_src=_47813_src}));
	return _47382_d;
}



inline jule::Ptr<_229a527d4_Data> _229b228d7_caller_copy_str(jule::Ptr<_229a527d4_Data>& _50725_dest, jule::Ptr<_229a54352_Eval>& _50743_e, jule::Ptr<_228d31982_FnCallExpr>& _50758_fc, jule::Ptr<_229a527d4_Data>& _50780_d) {
	if ((!(_50725_dest.get()._field_mutable))) {
		_229a5485d_push_err(_50743_e.ptr(), _50758_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _51213_src = _229a6ea21_eval_expr(_50743_e, _50758_fc.get()._field_args[1LL]);;
	if ((_51213_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_229a8046b_prim(_51213_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d681c4a:;
			{
				if (_229a86065_is_str(_229a8046b_prim(_51213_src.get()._field_kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_229a813e5_slc(_51213_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d681cb1:;
			{
				jule::Ptr<_229a87022_Slc> _52217_slc = _229a813e5_slc(_51213_src.get()._field_kind.ptr());;
				if (((_229a8046b_prim(_52217_slc.get()._field_elem.ptr()) != nullptr) && _229a8463a_is_u8(_229a8046b_prim(_52217_slc.get()._field_elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_22d6821ce:;
	};
	_229a5485d_push_err(_50743_e.ptr(), _50758_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_50725_dest.get()._field_kind.ptr())),jule::Any(_229a7d755_to_str(_51213_src.get()._field_kind.ptr()))}));
	_julec_label_end:;
	_50780_d.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("int", 3)), 6)});
	_50780_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de3637_BuiltinCopyCallExprModel>(_228de3637_BuiltinCopyCallExprModel{._field_dest=_50725_dest, ._field_src=_51213_src}));
	return _50780_d;
}



inline jule::Ptr<_229a527d4_Data> _229b074d2_builtin_caller_copy(jule::Ptr<_229a54352_Eval>& _53729_e, jule::Ptr<_228d31982_FnCallExpr>& _53744_fc, jule::Ptr<_229a527d4_Data>& _53766_d) {
	if ((_53744_fc.get()._field_args.len() < 2LL)) {
		if ((_53744_fc.get()._field_args.len() == 1LL)) {
			_229a5485d_push_err(_53729_e.ptr(), _53744_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_229a5485d_push_err(_53729_e.ptr(), _53744_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_53744_fc.get()._field_args.len() > 2LL)) {
		_229a5485d_push_err(_53729_e.ptr(), _53744_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _55013_dest = _229a6ea21_eval_expr(_53729_e, _53744_fc.get()._field_args[0LL]);;
	{
		
		if ((_55013_dest == nullptr)) {
			_case_begin_22d68b5b2:;
			{
				return nullptr;
			}
		}
		else if ((_229a813e5_slc(_55013_dest.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_22d68b628:;
			{
				return _229aa2955_caller_copy_slice(_55013_dest,_53729_e,_53744_fc,_53766_d);
			}
		}
		else if (((_229a8046b_prim(_55013_dest.get()._field_kind.ptr()) != nullptr) && _229a86065_is_str(_229a8046b_prim(_55013_dest.get()._field_kind.ptr()).ptr()))) {
			_case_begin_22d68b68e:;
			{
				return _229b228d7_caller_copy_str(_55013_dest,_53729_e,_53744_fc,_53766_d);
			}
		}
		else {
			_case_begin_22d68b54b:;
			{
				_229a5485d_push_err(_53729_e.ptr(), _53744_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_22d68b4e6:;
	};
}



inline jule::Ptr<_229a527d4_Data> _229abe08c_builtin_caller_clone(jule::Ptr<_229a54352_Eval>& _56430_e, jule::Ptr<_228d31982_FnCallExpr>& _56445_fc, jule::Ptr<_229a527d4_Data>& ) {
	if ((_56445_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_56430_e.ptr(), _56445_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_56445_fc.get()._field_args.len() > 1LL)) {
		_229a5485d_push_err(_56430_e.ptr(), _56445_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _57313_d = _229a6e405_eval_expr_kind(_56430_e, _56445_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_57313_d == nullptr)) {
		return nullptr;
	};
	if ((!(_229a7ee93_supports_cloning(_57313_d.get()._field_kind.ptr())))) {
		{
			
			if ((_229a813e5_slc(_57313_d.get()._field_kind.ptr()) != nullptr) || (_229a81d96_map(_57313_d.get()._field_kind.ptr()) != nullptr) || (_229a81181_arr(_57313_d.get()._field_kind.ptr()) != nullptr) || (_229a806d0_sptr(_57313_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_22d692321:;
				{
					{
						_229a5485d_push_err(_56430_e.ptr(), _56445_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_57313_d.get()._field_kind.ptr()))}));
					};
				}
			}
			else if ((_229a818bd_strct(_57313_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_22d692387:;
				{
					{
						_229a5485d_push_err(_56430_e.ptr(), _56445_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_57313_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_22d6922aa:;
				{
					{
						_229a5485d_push_err(_56430_e.ptr(), _56445_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_229a7d755_to_str(_57313_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_22d691de2:;
		};
	};
	_57313_d.get()._field_mutable=true;
	_57313_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de29aa_BuiltinCloneCallExprModel>(_228de29aa_BuiltinCloneCallExprModel{._field_expr=_57313_d.get()._field_model}));
	return _57313_d;
}



inline jule::Ptr<_229a527d4_Data> _229ada251_builtin_caller_assert(jule::Ptr<_229a54352_Eval>& _60631_e, jule::Ptr<_228d31982_FnCallExpr>& _60646_fc, jule::Ptr<_229a527d4_Data>& ) {
	if ((_60646_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_60631_e.ptr(), _60646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_60646_fc.get()._field_args.len() > 2LL)) {
		_229a5485d_push_err(_60631_e.ptr(), _60646_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _61513_expr = _229a6ea21_eval_expr(_60631_e, _60646_fc.get()._field_args[0LL]);;
	if ((_61513_expr == nullptr)) {
		return nullptr;
	};
	if (((_229a8046b_prim(_61513_expr.get()._field_kind.ptr()) == nullptr) || (!(_229a85d01_is_bool(_229a8046b_prim(_61513_expr.get()._field_kind.ptr()).ptr()))))) {
		_229a5485d_push_err(_60631_e.ptr(), _60646_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_228de3071_BuiltinAssertCallExprModel> _62413_model = jule::new_ptr<_228de3071_BuiltinAssertCallExprModel>(_228de3071_BuiltinAssertCallExprModel{._field_token=_60646_fc.get()._field_token, ._field_expr=_61513_expr.get()._field_model, ._field_log=jule::Str("assertion failed", 16)});;
	if ((_60646_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_229a527d4_Data> _63217_log = _229a6ea21_eval_expr(_60631_e, _60646_fc.get()._field_args[1LL]);;
		if ((_63217_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_229a53197_is_const(_63217_log.ptr()))) || (_229a8046b_prim(_63217_log.get()._field_kind.ptr()) == nullptr)) || (!(_229a86065_is_str(_229a8046b_prim(_63217_log.get()._field_kind.ptr()).ptr()))))) {
			_229a5485d_push_err(_60631_e.ptr(), _60646_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_229a7d755_to_str(_63217_log.get()._field_kind.ptr()))}));
			return nullptr;
		};
		_62413_model.get()._field_log=_228dd7c03_read_str(_63217_log.get()._field_constant.ptr());
	};
	jule::Ptr<_229a527d4_Data> _64513_d = _229a79b6e_build_void_data();;
	_64513_d.get()._field_model=static_cast<jule::Any>(_62413_model);
	return _64513_d;
}



inline jule::Ptr<_229a527d4_Data> _229b4294b_builtin_caller_std_mem_size_of(jule::Ptr<_229a54352_Eval>& _65040_e, jule::Ptr<_228d31982_FnCallExpr>& _65055_fc, jule::Ptr<_229a527d4_Data>& ) {
	jule::Ptr<_229a527d4_Data> _65113_result = jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_65055_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_65040_e.ptr(), _65055_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _65113_result;
	};
	if ((_65055_fc.get()._field_args.len() > 1LL)) {
		_229a5485d_push_err(_65040_e.ptr(), _65055_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _66313_d = _229a6e405_eval_expr_kind(_65040_e, _65055_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_66313_d == nullptr)) {
		return _65113_result;
	};
	_65113_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de1723_SizeofExprModel>(_228de1723_SizeofExprModel{._field_expr=_66313_d.get()._field_model}));
	return _65113_result;
}



inline jule::Ptr<_229a527d4_Data> _229b42c37_builtin_caller_std_mem_align_of(jule::Ptr<_229a54352_Eval>& _67241_e, jule::Ptr<_228d31982_FnCallExpr>& _67256_fc, jule::Ptr<_229a527d4_Data>& ) {
	jule::Ptr<_229a527d4_Data> _67313_result = jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_67256_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_67241_e.ptr(), _67256_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _67313_result;
	};
	if ((_67256_fc.get()._field_args.len() > 1LL)) {
		_229a5485d_push_err(_67241_e.ptr(), _67256_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _68513_d = _229a6e405_eval_expr_kind(_67241_e, _67256_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_68513_d == nullptr)) {
		return _67313_result;
	};
	_67313_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de3e84_AlignofExprModel>(_228de3e84_AlignofExprModel{._field_expr=_68513_d.get()._field_model}));
	return _67313_result;
}



inline jule::Ptr<_229a527d4_Data> _229b43155_builtin_caller_std_mem_free(jule::Ptr<_229a54352_Eval>& _69437_e, jule::Ptr<_228d31982_FnCallExpr>& _69452_fc, jule::Ptr<_229a527d4_Data>& ) {
	if ((_69452_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_69437_e.ptr(), _69452_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_69452_fc.get()._field_args.len() > 1LL)) {
		_229a5485d_push_err(_69437_e.ptr(), _69452_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _70313_d = _229a6e405_eval_expr_kind(_69437_e, _69452_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_70313_d == nullptr)) {
		return nullptr;
	};
	if ((!(_229a7ec2e_performs_rc(_70313_d.get()._field_kind.ptr())))) {
		_229a5485d_push_err(_69437_e.ptr(), _69452_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _71213_result = _229a79b6e_build_void_data();;
	_71213_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_228de4737_FreeExprModel>(_228de4737_FreeExprModel{._field_expr=_70313_d.get()._field_model}));
	return _71213_result;
}



inline jule::Ptr<_229a527d4_Data> _229b43584_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_229a54352_Eval>& _71751_e, jule::Ptr<_228d31982_FnCallExpr>& _71766_fc, jule::Ptr<_229a527d4_Data>& ) {
	if ((_71766_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_71751_e.ptr(), _71766_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_71766_fc.get()._field_args.len() > 1LL)) {
		_229a5485d_push_err(_71751_e.ptr(), _71766_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_229a527d4_Data> _72613_d = _229a6e405_eval_expr_kind(_71751_e, _71766_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_72613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_229a95b13_is_builtin_str_convertable(_72613_d.get()._field_kind)))) {
		_229a5485d_push_err(_71751_e.ptr(), _71766_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_229a527d4_Data>(_229a527d4_Data{._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(_229a96273_build_prim_type(jule::Str("str", 3)), 6)}), ._field_model=static_cast<jule::Any>(jule::new_ptr<_228de435d_IntegratedToStrExprModel>(_228de435d_IntegratedToStrExprModel{._field_expr=_72613_d.get()._field_model})), });
}



inline jule::Ptr<_229a527d4_Data> _229b439a2_builtin_caller_std_jule_integrated_emit(jule::Ptr<_229a54352_Eval>& _74449_e, jule::Ptr<_228d31982_FnCallExpr>& _74464_fc, jule::Ptr<_229a527d4_Data>& _74486_d) {
	if ((!(_229a55298_is_unsafe(_74449_e.ptr())))) {
		_229a5485d_push_err(_74449_e.ptr(), _74464_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_74464_fc.get()._field_args.len() < 1LL)) {
		_229a5485d_push_err(_74449_e.ptr(), _74464_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_229a527d4_Data> _75413_argd = _229a6ea21_eval_expr(_74449_e, _74464_fc.get()._field_args[0LL]);;
	if ((_75413_argd == nullptr)) {
		return nullptr;
	};
	if (((_229a8046b_prim(_75413_argd.get()._field_kind.ptr()) == nullptr) || (!(_229a86065_is_str(_229a8046b_prim(_75413_argd.get()._field_kind.ptr()).ptr()))))) {
		_229a5485d_push_err(_74449_e.ptr(), _74464_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_229a7d755_to_str(_75413_argd.get()._field_kind.ptr()))}));
		return nullptr;
	};
	if (((!(_229a53197_is_const(_75413_argd.ptr()))) || (!(_228dda09b_is_str(_75413_argd.get()._field_constant.ptr()))))) {
		_229a5485d_push_err(_74449_e.ptr(), _74464_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_229a527d4_Data> _76913_r = _229a79b6e_build_void_data();;
	jule::Ptr<_228de996d_FnIns> _77113_f = _229a81659_fnc(_74486_d.get()._field_kind.ptr());;
	if ((_77113_f.get()._field_generics.len() > 0LL)) {
		_76913_r.get()._field_kind=_77113_f.get()._field_generics[0LL].get()._field_kind;
	};
	jule::Ptr<_228de454a_BackendEmitExprModel> _77613_model = jule::new_ptr<_228de454a_BackendEmitExprModel>(_228de454a_BackendEmitExprModel{._field_code=_228dd7c03_read_str(_75413_argd.get()._field_constant.ptr()), });;
	if ((_74464_fc.get()._field_args.len() > 1LL)) {
		_77613_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,(_74464_fc.get()._field_args.len() - 1LL));
		{
			auto expr = _74464_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_22d6bbdc8:;
			if (it != expr.end()) {
				jule::Ptr<_228d2c6b4_Expr> _78221_arg = *it;
				{
					_75413_argd=_229a6e405_eval_expr_kind(_74449_e, _78221_arg.get()._field_kind);
					if ((_75413_argd == nullptr)) {
						return nullptr;
					};
					_77613_model.get()._field_exprs = jule::alloc_for_append(_77613_model.get()._field_exprs,1);_77613_model.get()._field_exprs.__push(_75413_argd.get()._field_model);;
				}
				_iter_next_22d6bbdc8:;
				++it;
				goto _iter_begin_22d6bbdc8;
			}
			_iter_end_22d6bbdc8:;
		};
	};
	_76913_r.get()._field_model=static_cast<jule::Any>(_77613_model);
	return _76913_r;
}



inline jule::Ptr<_229a527d4_Data> _229b43de2_builtin_caller_std_debug_out(jule::Ptr<_229a54352_Eval>& _79538_e, jule::Ptr<_228d31982_FnCallExpr>& _79553_fc, jule::Ptr<_229a527d4_Data>& _79575_d) {
	_79575_d=_229b32bc2_builtin_caller_out(_79538_e,_79553_fc,_79575_d);
	if ((_79575_d == nullptr)) {
		return nullptr;
	};
	_79575_d.get()._field_model.operator jule::Ptr<_228de25d1_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _79575_d;
}



inline jule::Ptr<_229a527d4_Data> _229b442cc_builtin_caller_std_debug_outln(jule::Ptr<_229a54352_Eval>& _80540_e, jule::Ptr<_228d31982_FnCallExpr>& _80555_fc, jule::Ptr<_229a527d4_Data>& _80577_d) {
	_80577_d=_229aa513e_builtin_caller_outln(_80540_e,_80555_fc,_80577_d);
	if ((_80577_d == nullptr)) {
		return nullptr;
	};
	_80577_d.get()._field_model.operator jule::Ptr<_228de27bd_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _80577_d;
}



inline jule::Bool _229cee399_find_module_file(jule::Slice<jule::Ptr<_23e89737d_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_22d6c22c9:;
		if (it != expr.end()) {
			jule::Ptr<_23e89737d_DirEntry> &_1312_d = *it;
			{
				if (((!(_23e7eb755_is_dir(_1312_d.get()._field_stat.ptr()))) && (_1312_d.get()._field_name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_22d6c22c9:;
			++it;
			goto _iter_begin_22d6c22c9;
		}
		_iter_end_22d6c22c9:;
	};
	return false;
}



inline jule::Str _229cee4cb_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_23e89737d_DirEntry>> _2617_dirents = ({
				auto except = static__22738b8d4_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_22d6c2582;
				} jule::Slice<jule::Ptr<_23e89737d_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _229cee399_find_module_file(_2617_dirents);;
			if (_3013_exist) {
				return _2434_path;
			};
			jule::I64 _3513_n = _2434_path.len();;
			_2434_path=_2273895a2_dir(_2434_path);
			if ((_2434_path.len() == _3513_n)) {
				goto _iter_end_22d6c2582;
			};
		}
	_iter_next_22d6c2582:;
	}
	_iter_end_22d6c2582:;;
	return jule::Str();
}



inline jule::Slice<_2409487a2_Log> _229cee762_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__23e898406_read(_227388947_join(jule::Slice<jule::Str>::make({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_2409487a2_Log>::make({_2409487a2_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _549_s = _22738667b_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_2409487a2_Log>::make({_2409487a2_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_22a422945_FileInfo> _22a4295ea_parse_file(jule::Ptr<_2276b6da7_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_22a422945_FileInfo> _2813_finf = jule::new_ptr<_22a422945_FileInfo>(_22a422945_FileInfo{});;
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _22a475976_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	};
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_228ce3900_Ast>,jule::Slice<_2409487a2_Log>> _22a475976_parse_fileset(jule::Ptr<_2276b6da7_File> _6022_f) {
	jule::Ptr<_22a493a93_Parser> _6113_p = jule::new_ptr<_22a493a93_Parser>(_22a493a93_Parser{});;
	_22a4a3982_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_228d384b1_ScopeTree> _22a47637d_new_scope(void) {
	return jule::new_ptr<_228d384b1_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _22a47668b_is_st(jule::Ptr<_2276b1a1c_Token> _5010_current, jule::Ptr<_2276b1a1c_Token> _5027_prev) {
	jule::Bool _5043_ok = jule::Bool();
	jule::Bool _5053_terminated = jule::Bool();
	_5043_ok=((_5010_current.get()._field_id == static_cast<jule::U64>(5LLU)) || (_5027_prev.get()._field_row < _5010_current.get()._field_row));
	_5053_terminated=(_5010_current.get()._field_id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5043_ok,_5053_terminated);
}



inline jule::Bool _22a4769ee_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _5629_tokens, jule::I64& _5648_i) {
	if (((_5648_i > 1LL) && (_5629_tokens[(_5648_i - 2LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_2276b1a1c_Token> _6213_prev = _5629_tokens[(_5648_i - 1LL)];;
		return ((_6213_prev.get()._field_id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_id == static_cast<jule::U64>(7LLU)) && _2276b2512_is_bin_op(_6213_prev.get()._field_kind)) && (_6213_prev.get()._field_row < _5629_tokens[_5648_i].get()._field_row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _22a476d95_next_st_pos(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _7117_tokens, jule::I64 _7135_start) {
	jule::I64 _7213_brace_n = 0LL;;
	jule::I64 _7313_i = _7135_start;;
	for (; (_7313_i < _7117_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_2276b1a1c_Token> _7713_tok = _7117_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_22d758272:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_22d759e22:;
								{
									if (((_7213_brace_n == 0LL) && (_7313_i > _7135_start))) {
										if ((!(_22a4769ee_prev_is_incomplete_expr(_7117_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _22a47668b_is_st(_7713_tok,_7117_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_brace_n)++;
								}
							}
							else {
								_case_begin_22d758a9c:;
								{
									(_7213_brace_n)--;
									if (((_7213_brace_n == 0LL) && ((_7313_i + 1LL) < _7117_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _22a47668b_is_st(_7117_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_22d7588d2:;
						};
						goto _iter_next_22d7568ad;
					}
				}
				_match_end_22d75821c:;
			};
			if ((_7213_brace_n != 0LL)) {
				goto _iter_next_22d7568ad;
			};
			if ((_7313_i > _7135_start)) {
				if (_22a4769ee_prev_is_incomplete_expr(_7117_tokens,_7313_i)) {
					goto _iter_next_22d7568ad;
				};
				std::tie(_7517_ok,_7617_terminated) = _22a47668b_is_st(_7713_tok,_7117_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _22a47668b_is_st(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_22d7568ad;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_22d7568ad:;
	}
	_iter_end_22d7568ad:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_2276b1a1c_Token>>,jule::Bool> _22a4771d6_skip_st(jule::I64& _13317_i, jule::Slice<jule::Ptr<_2276b1a1c_Token>> _13329_tokens) {
	jule::I64 _1349_start = _13317_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13317_i,_13513_terminated) = _22a476d95_next_st_pos(_13329_tokens,_1349_start);
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _13713_st_tokens = _13329_tokens.slice(_1349_start,_13317_i);;
	if (_13513_terminated) {
		if ((_13713_st_tokens.len() == 1LL)) {
			std::tie(_13713_st_tokens,_13513_terminated) = _22a4771d6_skip_st(_13317_i,_13329_tokens);
			return std::make_tuple(_13713_st_tokens,_13513_terminated);
		};
		_13713_st_tokens=_13713_st_tokens.slice(0LL,(_13713_st_tokens.len() - 1LL));
	};
	return std::make_tuple(_13713_st_tokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_22a4774d3_stmt>> _22a477879_split_stmts(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _15521_tokens) {
	jule::Slice<jule::Ptr<_22a4774d3_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_22a4774d3_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15521_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_2276b1a1c_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _22a4771d6_skip_st(_15713_pos,_15521_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_22a4774d3_stmt>(_22a4774d3_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_22d7629b8:;
	}
	_iter_end_22d7629b8:;;
	return _15613_stmts;
}



inline jule::Slice<jule::Ptr<_2276b1a1c_Token>> _22a4842ae_get_block_expr(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _4024_tokens) {
	jule::I64 _4113_brace_n = 0LL;;
	jule::I64 _4213_skip_to_next_brace_close = 0LL;;
	{
		auto &expr = _4024_tokens;
		auto it = expr.begin();
		_iter_begin_22d82478e:;
		if (it != expr.end()) {
			jule::I64 _439_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _4312_tok = *it;
			{
				{
					auto &_match_expr{ _4312_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_22d82562a:;
						{
							(_4213_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_22d8256a2:;
						{
							{
								auto &_match_expr{ _4312_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_22d82640b:;
									{
										if (((_4113_brace_n > 0LL) || (_4213_skip_to_next_brace_close > 0LL))) {
											if ((_4213_skip_to_next_brace_close > 0LL)) {
												(_4213_skip_to_next_brace_close)--;
											};
											(_4113_brace_n)++;
											goto _match_end_22d82653d;
										};
										return _4024_tokens.slice(0LL,_439_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_22d826ab0:;
									{
										(_4113_brace_n)++;
									}
								}
								else {
									_case_begin_22d82664d:;
									{
										(_4113_brace_n)--;
									}
								}
								_match_end_22d82653d:;
							};
						}
					}
					_match_end_22d82544e:;
				};
			}
			_iter_next_22d82478e:;
			++it;
			_439_i++;
			goto _iter_begin_22d82478e;
		}
		_iter_end_22d82478e:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_2276b1a1c_Token>>,jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a484611_split_delim(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _7121_tokens, jule::U64 _7139_delim) {
	jule::I64 _7213_range_n = 0LL;;
	{
		auto &expr = _7121_tokens;
		auto it = expr.begin();
		_iter_begin_22d82830e:;
		if (it != expr.end()) {
			jule::I64 _739_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _7312_token = *it;
			{
				{
					auto &_match_expr{ _7312_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_22d828e03:;
						{
							{
								auto &_match_expr{ _7312_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_22d829552:;
									{
										(_7213_range_n)++;
										goto _iter_next_22d82830e;
									}
								}
								else {
									_case_begin_22d8297d8:;
									{
										(_7213_range_n)--;
									}
								}
								_match_end_22d82961d:;
							};
						}
					}
					else if (_match_expr == _7139_delim) {
						_case_begin_22d828e7a:;
						{
							if ((_7213_range_n == 0LL)) {
								jule::Slice<jule::Ptr<_2276b1a1c_Token>> _8725_l = _7121_tokens.slice(0LL,_739_i);;
								jule::Slice<jule::Ptr<_2276b1a1c_Token>> _8825_r = _7121_tokens.slice((_739_i + 1LL));;
								return std::make_tuple(_8725_l,_8825_r);
							};
						}
					}
					_match_end_22d828bc2:;
				};
			}
			_iter_next_22d82830e:;
			++it;
			_739_i++;
			goto _iter_begin_22d82830e;
		}
		_iter_end_22d82830e:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _22a4848a8_find_lowest_prec_op(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _9825_tokens) {
	jule::U8 _10313_prec = 255LLU;;
	jule::I64 _10413_prec_pos = -1LL;;
	jule::I64 _10613_brace_n = 0LL;;
	jule::Bool _10713_skip_to_next_brace_open = false;;
	{
		auto &expr = _9825_tokens;
		auto it = expr.begin();
		_iter_begin_22d82c6cb:;
		if (it != expr.end()) {
			jule::I64 _1089_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> &_10812_token = *it;
			{
				{
					
					if ((_10812_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
						_case_begin_22d82d534:;
						{
							{
								auto &_match_expr{ _10812_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_22d82e16c:;
									{
										_10713_skip_to_next_brace_open=false;
										goto _case_begin_22d82e8a9;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_22d82e8a9:;
									{
										(_10613_brace_n)++;
									}
								}
								else {
									_case_begin_22d82e403:;
									{
										(_10613_brace_n)--;
									}
								}
								_match_end_22d82e238:;
							};
							goto _iter_next_22d82c6cb;
						}
					}
					else if (_10713_skip_to_next_brace_open) {
						_case_begin_22d82d5ab:;
						{
							goto _iter_next_22d82c6cb;
						}
					}
					else if ((_10812_token.get()._field_id == static_cast<jule::U64>(16LLU))) {
						_case_begin_22d82d633:;
						{
							_10713_skip_to_next_brace_open=true;
							goto _iter_next_22d82c6cb;
						}
					}
					else if ((_1089_i == 0LL)) {
						_case_begin_22d82d6aa:;
						{
							goto _iter_next_22d82c6cb;
						}
					}
					else if ((_10812_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_22d82d732:;
						{
							goto _iter_next_22d82c6cb;
						}
					}
					else if ((_10613_brace_n > 0LL)) {
						_case_begin_22d82d7a9:;
						{
							goto _iter_next_22d82c6cb;
						}
					}
					_match_end_22d82d3be:;
				};
				jule::Ptr<_2276b1a1c_Token> _13513_left = _9825_tokens[(_1089_i - 1LL)];;
				if (((_13513_left.get()._field_id == static_cast<jule::U64>(7LLU)) || (_13513_left.get()._field_id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_22d82c6cb;
				};
				if ((((_1089_i > 1LL) && (_13513_left.get()._field_id == static_cast<jule::U64>(3LLU))) && (_13513_left.get()._field_kind == jule::Str("]", 1)))) {
					jule::Ptr<_2276b1a1c_Token> _14317_lleft = _9825_tokens[(_1089_i - 2LL)];;
					if (((_14317_lleft.get()._field_id == static_cast<jule::U64>(3LLU)) && (_14317_lleft.get()._field_kind == jule::Str("[", 1)))) {
						if (((_10812_token.get()._field_kind == jule::Str("&", 1)) || (_10812_token.get()._field_kind == jule::Str("*", 1)))) {
							goto _iter_next_22d82c6cb;
						};
					};
				};
				jule::U8 _15213_p = _2276b1dc4_prec(_10812_token.ptr());;
				if (((_15213_p != 0LLU) && (_15213_p <= _10313_prec))) {
					_10313_prec=_15213_p;
					_10413_prec_pos=_1089_i;
				};
			}
			_iter_next_22d82c6cb:;
			++it;
			_1089_i++;
			goto _iter_begin_22d82c6cb;
		}
		_iter_end_22d82c6cb:;
	};
	return _10413_prec_pos;
}



inline jule::Ptr<_228d2e72c_IdentExpr> _22a484bc7_build_ident_expr(jule::Ptr<_2276b1a1c_Token>& _16226_token) {
	return jule::new_ptr<_228d2e72c_IdentExpr>(_228d2e72c_IdentExpr{._field_token=_16226_token, ._field_ident=_16226_token.get()._field_kind, ._field_cpp_linked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_2276b1a1c_Token>>,jule::I64> _22a484e6e_get_range_expr_tokens(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _17031_tokens) {
	jule::I64 _17113_range_n = 0LL;;
	jule::I64 _17213_i = (_17031_tokens.len() - 1LL);;
	for (; (_17213_i >= 0LL); (_17213_i)--) {
		{
			jule::Ptr<_2276b1a1c_Token> _17413_tok = _17031_tokens[_17213_i];;
			if ((_17413_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _17413_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_22d837175:;
						{
							(_17113_range_n)++;
						}
					}
					else {
						_case_begin_22d837a38:;
						{
							(_17113_range_n)--;
						}
					}
					_match_end_22d837829:;
				};
			};
			if ((_17113_range_n == 0LL)) {
				return std::make_tuple(_17031_tokens.slice(0LL,_17213_i),_17113_range_n);
			};
		}
	_iter_next_22d83697c:;
	}
	_iter_end_22d83697c:;;
	return std::make_tuple(nullptr,_17113_range_n);
}



inline jule::Bool _22a4908b4_check_assign_tokens(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _1625_tokens) {
	if (((_1625_tokens.len() == 0LL) || (!(_2276b60b5_is_assign(_1625_tokens[0LL].get()._field_id))))) {
		return false;
	};
	jule::I64 _2013_brace_n = 0LL;;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_22d8cb0a4:;
		if (it != expr.end()) {
			jule::Ptr<_2276b1a1c_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_22d8cbbcb:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_22d8cbea6:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_22d8cbc97:;
					};
				};
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_22d8cb0a4;
				} else if (((_2112_t.get()._field_id == static_cast<jule::U64>(7LLU)) && _2276b6604_is_assign_op(_2112_t.get()._field_kind))) {
					return true;
				};
			}
			_iter_next_22d8cb0a4:;
			++it;
			goto _iter_begin_22d8cb0a4;
		}
		_iter_end_22d8cb0a4:;
	};
	return false;
}



inline _2409487a2_Log _22a4917a5_make_err(jule::I64 _5213_row, jule::I64 _5223_col, jule::Ptr<_2276b6da7_File>& _5234_f, jule::Str _5244_fmt, jule::Slice<jule::Any> _5257_args) {
	return _2409487a2_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_5213_row, ._field_column=_5223_col, ._field_path=_5234_f.get()._field_path, ._field_text=_240948be2_logf(_5244_fmt,jule::Any(_5257_args)), };
}



inline jule::Slice<jule::Ptr<_2276b1a1c_Token>> _22a491c4a_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_2276b1a1c_Token> _769_tok = _7163_tokens[_7115_i];;
	if (((_769_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_769_tok.get()._field_kind != _7123_open))) {
		return nullptr;
	};
	(_7115_i)++;
	jule::I64 _8213_range_n = 1LL;;
	jule::I64 _839_start = _7115_i;;
	for (; ((_8213_range_n != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_2276b1a1c_Token> _8513_token = _7163_tokens[_7115_i];;
			if ((_8513_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8513_token.get()._field_kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_22d8d2ece:;
						{
							(_8213_range_n)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_22d8d3056:;
						{
							(_8213_range_n)--;
						}
					}
					_match_end_22d8d2c9d:;
				};
			};
		}
	_iter_next_22d8d1791:;
	}
	_iter_end_22d8d1791:;;
	return _7163_tokens.slice(_839_start,(_7115_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_2276b1a1c_Token>>,jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _22a491ee2_range_last(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _10620_tokens) {
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _10640_cutted = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	jule::Slice<jule::Ptr<_2276b1a1c_Token>> _10658_cut = jule::Slice<jule::Ptr<_2276b1a1c_Token>>();
	if ((_10620_tokens.len() == 0LL)) {
		_10640_cutted = _10620_tokens;
		_10658_cut = nullptr;
		return std::make_tuple(_10640_cutted,_10658_cut);
	} else if ((_10620_tokens[(_10620_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U64>(3LLU))) {
		_10640_cutted = _10620_tokens;
		_10658_cut = nullptr;
		return std::make_tuple(_10640_cutted,_10658_cut);
	};
	jule::I64 _11313_brace_n = 0LL;;
	jule::I64 _11413_i = (_10620_tokens.len() - 1LL);;
	for (; (_11413_i >= 0LL); (_11413_i)--) {
		{
			jule::Ptr<_2276b1a1c_Token> _11613_token = _10620_tokens[_11413_i];;
			if ((_11613_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11613_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_22d8d6686:;
						{
							(_11313_brace_n)++;
							goto _iter_next_22d8d4035;
						}
					}
					else {
						_case_begin_22d8d708d:;
						{
							(_11313_brace_n)--;
						}
					}
					_match_end_22d8d6d7e:;
				};
			};
			if ((_11313_brace_n == 0LL)) {
				_10640_cutted = _10620_tokens.slice(0LL,_11413_i);
				_10658_cut = _10620_tokens.slice(_11413_i);
				return std::make_tuple(_10640_cutted,_10658_cut);
			};
		}
	_iter_next_22d8d4035:;
	}
	_iter_end_22d8d4035:;;
	_10640_cutted = _10620_tokens;
	_10658_cut = nullptr;
	return std::make_tuple(_10640_cutted,_10658_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>,jule::Slice<_2409487a2_Log>> _22a492454_parts_kind(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _13820_tokens, jule::Str _13838_kind, jule::Bool _13855_expr_must) {
	if ((_13820_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _14313_parts = nullptr;;
	jule::Slice<_2409487a2_Log> _14413_errors = nullptr;;
	jule::I64 _14613_range_n = 0LL;;
	jule::I64 _14713_last = 0LL;;
	{
		auto &expr = _13820_tokens;
		auto it = expr.begin();
		_iter_begin_22d8da778:;
		if (it != expr.end()) {
			jule::I64 _1489_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _14812_token = *it;
			{
				if ((_14812_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14812_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_22d8db7bd:;
							{
								(_14613_range_n)++;
								goto _iter_next_22d8da778;
							}
						}
						else {
							_case_begin_22d8dba98:;
							{
								(_14613_range_n)--;
							}
						}
						_match_end_22d8db889:;
					};
				};
				if ((_14613_range_n > 0LL)) {
					goto _iter_next_22d8da778;
				};
				if ((_14812_token.get()._field_kind == _13838_kind)) {
					if ((_13855_expr_must && ((_1489_i - _14713_last) <= 0LL))) {
						_2409487a2_Log _16721_err = _22a4917a5_make_err(_14812_token.get()._field_row,_14812_token.get()._field_column,_14812_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14413_errors = jule::alloc_for_append(_14413_errors,1);_14413_errors.__push(_16721_err);;
					};
					_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13820_tokens.slice(_14713_last,_1489_i));;
					_14713_last=static_cast<jule::I64>((_1489_i + 1LL));
				};
			}
			_iter_next_22d8da778:;
			++it;
			_1489_i++;
			goto _iter_begin_22d8da778;
		}
		_iter_end_22d8da778:;
	};
	if ((_14713_last < _13820_tokens.len())) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13820_tokens.slice(_14713_last));;
	} else if ((!(_13855_expr_must))) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(jule::Slice<jule::Ptr<_2276b1a1c_Token>>());;
	};
	return std::make_tuple(_14313_parts,_14413_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>>,jule::Slice<_2409487a2_Log>> _22a49283e_parts(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _19015_tokens, jule::U64 _19033_id, jule::Bool _19046_expr_must) {
	if ((_19015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_2276b1a1c_Token>>> _19513_parts = nullptr;;
	jule::Slice<_2409487a2_Log> _19613_errors = nullptr;;
	jule::I64 _19813_range_n = 0LL;;
	jule::I64 _19913_last = 0LL;;
	{
		auto &expr = _19015_tokens;
		auto it = expr.begin();
		_iter_begin_22d8e2296:;
		if (it != expr.end()) {
			jule::I64 _2009_i = it - expr.begin();
			jule::Ptr<_2276b1a1c_Token> _20012_token = *it;
			{
				if ((_20012_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _20012_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_22d8e32db:;
							{
								(_19813_range_n)++;
								goto _iter_next_22d8e2296;
							}
						}
						else {
							_case_begin_22d8e35b6:;
							{
								(_19813_range_n)--;
							}
						}
						_match_end_22d8e33a7:;
					};
				};
				if ((_19813_range_n > 0LL)) {
					goto _iter_next_22d8e2296;
				};
				if ((_20012_token.get()._field_id == _19033_id)) {
					if ((_19046_expr_must && ((_2009_i - _19913_last) <= 0LL))) {
						_2409487a2_Log _21921_err = _22a4917a5_make_err(_20012_token.get()._field_row,_20012_token.get()._field_column,_20012_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19613_errors = jule::alloc_for_append(_19613_errors,1);_19613_errors.__push(_21921_err);;
					};
					_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last,_2009_i));;
					_19913_last=static_cast<jule::I64>((_2009_i + 1LL));
				};
			}
			_iter_next_22d8e2296:;
			++it;
			_2009_i++;
			goto _iter_begin_22d8e2296;
		}
		_iter_end_22d8e2296:;
	};
	if ((_19913_last < _19015_tokens.len())) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last));;
	} else if ((!(_19046_expr_must))) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(jule::Slice<jule::Ptr<_2276b1a1c_Token>>());;
	};
	return std::make_tuple(_19513_parts,_19613_errors);
}



inline jule::Str _22a492b08_get_close_kind_of_brace(jule::Str _23628_left) {
	{
		auto &_match_expr{ _23628_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_22d8e6d06:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_22d8e6d6c:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_22d8e6dd3:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_22d8e67b7:;
			{
				return jule::Str();
			}
		}
		_match_end_22d8e670c:;
	};
}



inline _2409487a2_Log _22a492ec1_compiler_err(jule::Ptr<_2276b1a1c_Token>& _24918_token, jule::Str& _24934_fmt, jule::Slice<jule::Any> _24947_args) {
	return _2409487a2_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_24918_token.get()._field_row, ._field_column=_24918_token.get()._field_column, ._field_path=_24918_token.get()._field_file.get()._field_path, ._field_text=_240948be2_logf(_24934_fmt,jule::Any(_24947_args)), ._field_line=_2276b8084_get_row(_24918_token.get()._field_file.ptr(), _24918_token.get()._field_row), };
}



inline void _22a493433_push_suggestion(_2409487a2_Log* _26031_log, jule::Str _26042_fmt, jule::Slice<jule::Any> _26055_args) {
	_26031_log->_field_suggestion=_240948be2_logf(_26042_fmt,jule::Any(_26055_args));
}



inline jule::Str _22a4936ca_tokstoa(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _26413_tokens) {
	jule::I64 _26513_n = 0LL;;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_22d8ea07e:;
		if (it != expr.end()) {
			jule::Ptr<_2276b1a1c_Token> &_26612_token = *it;
			{
				_26513_n+=_26612_token.get()._field_kind.len();
			}
			_iter_next_22d8ea07e:;
			++it;
			goto _iter_begin_22d8ea07e;
		}
		_iter_end_22d8ea07e:;
	};
	jule::Str _26913_s = jule::Str::alloc(_26513_n);;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_22d8eac50:;
		if (it != expr.end()) {
			jule::Ptr<_2276b1a1c_Token> &_27012_token = *it;
			{
				_26913_s+=_27012_token.get()._field_kind;
			}
			_iter_next_22d8eac50:;
			++it;
			goto _iter_begin_22d8eac50;
		}
		_iter_end_22d8eac50:;
	};
	return _26913_s;
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a43ab_build_void_type(void) {
	return jule::new_ptr<_228d28193_TypeDecl>();
}



inline jule::Ptr<_228d28193_TypeDecl> _22a4a4620_build_prim_type(jule::Ptr<_2276b1a1c_Token> _2324_t) {
	return jule::new_ptr<_228d28193_TypeDecl>(_228d28193_TypeDecl{._field_token=_2324_t, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_228d28759_IdentTypeDecl>(_228d28759_IdentTypeDecl{._field_token=_2324_t, ._field_ident=_2324_t.get()._field_kind, }))});
}



inline jule::I64 _22a4a4961_map_colon(jule::Slice<jule::Ptr<_2276b1a1c_Token>>& _3619_tokens, jule::I64& _3642_i) {
	jule::I64 _3652_delim = jule::I64();
	_3652_delim=-1LL;
	jule::I64 _3813_range_n = 0LL;;
	for (; (_3642_i < _3619_tokens.len()); (_3642_i)++) {
		{
			jule::Ptr<_2276b1a1c_Token> _4013_token = _3619_tokens[_3642_i];;
			if ((_4013_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_22da5dec3:;
						{
							(_3813_range_n)++;
							goto _iter_next_22da5d7b9;
						}
					}
					else {
						_case_begin_22da5e886:;
						{
							(_3813_range_n)--;
						}
					}
					_match_end_22da5e677:;
				};
			};
			if ((_3813_range_n == 0LL)) {
				if (((_3619_tokens.len() - _3642_i) == 1LL)) {
					return _3652_delim;
				};
				if ((_3619_tokens[(_3642_i + 1LL)].get()._field_id == static_cast<jule::U64>(11LLU))) {
					_3652_delim = static_cast<jule::I64>((_3642_i + 1LL));
					return _3652_delim;
				};
				goto _iter_end_22da5d7b9;
			};
		}
	_iter_next_22da5d7b9:;
	}
	_iter_end_22da5d7b9:;;
	return _3652_delim;
}



inline std::tuple<jule::Bool,jule::Bool> _229cc3923_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_22dab79cc:;
			{
				_925_ok=_24094c29a_is_windows(_2273d8469_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_22dab75d1:;
			{
				_925_ok=_24094c586_is_darwin(_2273d8469_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_22dab73b1:;
			{
				_925_ok=_24094c82d_is_linux(_2273d8469_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_22dab7427:;
			{
				_925_ok=_24094d433_is_unix(_2273d8469_OS);
			}
		}
		else {
			_case_begin_22dab6b85:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_22dab7092:;
	};
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _229cc3b21_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_22dab9b55:;
			{
				_3027_ok=_24094cb4c_is_i386(_2273c78cb_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_22dab9935:;
			{
				_3027_ok=_24094cde4_is_amd64(_2273c78cb_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_22dab999b:;
			{
				_3027_ok=_24094d18b_is_arm64(_2273c78cb_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_22dab9a12:;
			{
				_3027_ok=_24094da4e_is_64bit(_2273c78cb_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_22dab9a78:;
			{
				_3027_ok=_24094d7a7_is_32bit(_2273c78cb_ARCH);
			}
		}
		else {
			_case_begin_22dab9209:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_22dab9616:;
	};
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _229cdc365_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_22738922d_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();;
	(_5432_p).mut_slice(0LL,(_569_n - _227388bde_ext(_5432_p).len()));;
	jule::Str _6213_a1 = jule::Str();;
	jule::Str _6513_a2 = jule::Str();;
	jule::I64 _6813_i = _227382952_find_last_byte(_5432_p,'_');;
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;;
		jule::Bool _7126_exist;;
		std::tie(_7118_ok,_7126_exist) = _229cc3923_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		};
		std::tie(_7118_ok,_7126_exist) = _229cc3b21_check_arch(_5432_p);
		return ((!(_7126_exist)) || _7118_ok);
	};
	if (((_6813_i + 1LL) >= _569_n)) {
		return true;
	};
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);;
	_6813_i=static_cast<jule::I64>(_227382952_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	};
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;;
		jule::Bool _9226_exist;;
		std::tie(_9218_ok,_9226_exist) = _229cc3923_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		};
		std::tie(_9218_ok,_9226_exist) = _229cc3b21_check_arch(_6213_a1);
		return ((!(_9226_exist)) || _9218_ok);
	};
	jule::Bool _10014_ok;;
	jule::Bool _10022_exist;;
	std::tie(_10014_ok,_10022_exist) = _229cc3b21_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		};
		std::tie(_10014_ok,_10022_exist) = _229cc3923_check_os(_6513_a2);
		return ((!(_10022_exist)) || _10014_ok);
	};
	std::tie(_10014_ok,_10022_exist) = _229cc3923_check_os(_6213_a1);
	return ((!(_10022_exist)) || _10014_ok);
}



inline void _229cdd564_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_2273d8469_OS);;
	if (_24094d433_is_unix(_2273d8469_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _229cdd7b7_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_2273c78cb_ARCH);;
	if (_24094da4e_is_64bit(_2273c78cb_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));;
	};
	if (_24094d7a7_is_32bit(_2273c78cb_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _229cdda70_init_vars(jule::Slice<jule::Str>& _5519_vars, _229cdd256_CompileInfo& _5533_info) {
	_229cdd564_set_os_vars(_5519_vars);
	_229cdd7b7_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));;
	};
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_22dac5aa6:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_22dac5ca4:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_22dac6667:;
	};
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_22dac75d0:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_22dac7327:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_22dac738d:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_22dac757a:;
	};
}



inline jule::Slice<jule::U8> _229daee93_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__23e898406_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_2273dd78d_exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _2409487a2_Log _229dd147b_flat_compiler_err(jule::Str _4122_text) {
	return _2409487a2_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_text=_4122_text, };
}



inline void _22a0cba0b_push_passes(jule::Ptr<_2299d85a0_Package>& _11221_p, jule::Slice<jule::Str>& _11245_passes) {
	{
		auto &expr = _11221_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22db09a63:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _11317_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11317_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_22db0a547:;
					if (it != expr.end()) {
						_228ded5ed_Pass _11516_pass = *it;
						{
							if (_11516_pass._field_text.empty()) {
								goto _iter_next_22db0a547;
							};
							{
								auto &expr = _11245_passes;
								auto it = expr.begin();
								_iter_begin_22db0b38e:;
								if (it != expr.end()) {
									jule::Str _11920_cpass = *it;
									{
										if ((_11920_cpass == _11516_pass._field_text)) {
											goto _iter_next_22db0a547;
										};
									}
									_iter_next_22db0b38e:;
									++it;
									goto _iter_begin_22db0b38e;
								}
								_iter_end_22db0b38e:;
							};
							_11245_passes = jule::alloc_for_append(_11245_passes,1);_11245_passes.__push(_11516_pass._field_text);;
						}
						_iter_next_22db0a547:;
						++it;
						goto _iter_begin_22db0a547;
					}
					_iter_end_22db0a547:;
				};
			}
			_iter_next_22db09a63:;
			++it;
			goto _iter_begin_22db09a63;
		}
		_iter_end_22db09a63:;
	};
}



inline jule::Slice<jule::Str> _22a2428db_get_all_unique_passes(jule::Ptr<_2299d85a0_Package>& _12931_pkg, jule::Slice<jule::Ptr<_2299d5646_ImportInfo>> _12956_uses) {
	jule::Slice<jule::Str> _13013_passes = nullptr;;
	_22a0cba0b_push_passes(_12931_pkg,_13013_passes);
	{
		auto &expr = _12956_uses;
		auto it = expr.begin();
		_iter_begin_22db0c7e1:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> _13317_u = *it;
			{
				if ((!(_13317_u.get()._field_cpp_linked))) {
					_22a0cba0b_push_passes(_13317_u.get()._field_package,_13013_passes);
				};
			}
			_iter_next_22db0c7e1:;
			++it;
			goto _iter_begin_22db0c7e1;
		}
		_iter_end_22db0c7e1:;
	};
	return _13013_passes;
}



inline _229cdd256_CompileInfo _22a24bb15_build_compile_info(void) {
	_229cdd256_CompileInfo _14313_info = _229cdd256_CompileInfo{._field_prod=_23e74dd17_PRODUCTION, ._field_test=_23e74d2cd_TEST, };;
	{
		auto &_match_expr{ _23e692123_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_22db0e0ea:;
			{
				_14313_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_22db0e172:;
			{
				_14313_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_22db0e073:;
	};
	{
		auto &_match_expr{ _23e74c981_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_22db0c9de:;
			{
				_14313_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_22db0e54b:;
			{
				_14313_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_22db0e5b2:;
			{
				_14313_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_22db0e419:;
	};
	return _14313_info;
}



inline void _22a59cb58_eliminate_defines(jule::Ptr<_22a0e7571_IR>& _28531_ir) {
	jule::Ptr<_22a56c771_ObjectDeadCode> _28613_ocd = static__22a56cbc2_new(_28531_ir);;
	_22a59c88e_elimanate(_28613_ocd);
}



inline jule::Ptr<_228ce499a_Directive> _22a59cedd_find_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>& _29124_directives, jule::Str _29155_tag) {
	{
		auto &expr = _29124_directives;
		auto it = expr.begin();
		_iter_begin_22db51a77:;
		if (it != expr.end()) {
			jule::Ptr<_228ce499a_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_tag.get()._field_kind == _29155_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_22db51a77:;
			++it;
			goto _iter_begin_22db51a77;
		}
		_iter_end_22db51a77:;
	};
	return nullptr;
}



inline jule::Bool _22a59d32e_has_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>& _30119_directives, jule::Str _30150_tag) {
	return (_22a59cedd_find_directive(_30119_directives,_30150_tag) != nullptr);
}



inline void _22a5a1e7b_eliminate_dead_code_of_scope(jule::Ptr<_2299b6c10_Scope> _24137_s) {
	jule::Slice<jule::Ptr<_2299b93c7_Label>> _2429_labels = jule::Slice<jule::Ptr<_2299b93c7_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_2299b96b3_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_2299b96b3_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_22a59e077_ScopeDeadCode> _24413_sdc = jule::new_ptr<_22a59e077_ScopeDeadCode>(_22a59e077_ScopeDeadCode{._field_s=_24137_s, ._field_stmts=(&(_24137_s.get()._field_stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_2299b93c7_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_2299b96b3_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_22a5a1b90_optimize_stmts(_24413_sdc);
	};
}



inline void _22a5a2212_eliminate_scope_functions(jule::Slice<jule::Ptr<_228de6cbc_Fn>>& _25435_funcs) {
	{
		auto &expr = _25435_funcs;
		auto it = expr.begin();
		_iter_begin_22db94d2e:;
		if (it != expr.end()) {
			jule::Ptr<_228de6cbc_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_22db95439:;
					if (it != expr.end()) {
						jule::Ptr<_228de996d_FnIns> _25621_ins = *it;
						{
							_22a5a1e7b_eliminate_dead_code_of_scope(_25621_ins.get()._field_scope);
						}
						_iter_next_22db95439:;
						++it;
						goto _iter_begin_22db95439;
					}
					_iter_end_22db95439:;
				};
			}
			_iter_next_22db94d2e:;
			++it;
			goto _iter_begin_22db94d2e;
		}
		_iter_end_22db94d2e:;
	};
}



inline void _22a5a2465_eliminate_functions_scope_package(jule::Ptr<_2299d85a0_Package>& _26243_pkg) {
	{
		auto &expr = _26243_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22db95901:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _26317_f = *it;
			{
				_22a5a2212_eliminate_scope_functions(_26317_f.get()._field_funcs);
			}
			_iter_next_22db95901:;
			++it;
			goto _iter_begin_22db95901;
		}
		_iter_end_22db95901:;
	};
}



inline void _22a5a271d_eliminate_scope_package(jule::Ptr<_2299d85a0_Package>& _26833_pkg) {
	_22a5a2465_eliminate_functions_scope_package(_26833_pkg);
}



inline void _22a5a290a_eliminate_scopes(jule::Ptr<_22a0e7571_IR>& _27330_ir) {
	jule::I64 _27413_i = (_27330_ir.get()._field_used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_2299d5646_ImportInfo> _27617_u = _27330_ir.get()._field_used[_27413_i];;
			if ((!(_27617_u.get()._field_cpp_linked))) {
				_22a5a271d_eliminate_scope_package(_27617_u.get()._field_package);
			};
		}
	_iter_next_22db974c4:;
	}
	_iter_end_22db974c4:;;
	_22a5a271d_eliminate_scope_package(_27330_ir.get()._field_main);
}



inline jule::Bool _227829943_is_std_package(jule::Str _39919_f, jule::Str _39927_p) {
	return _2273415c0_has_prefix(_39919_f,_227388947_join(jule::Slice<jule::Str>::make({_2273c7c61_PATH_STDLIB,_39927_p})));
}



inline jule::Bool _22782c4a1_is_constant_valid_conditional_case(jule::Ptr<_2299b700c_If>& _40340_i) {
	{
		auto &_match_expr{ _40340_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_228d7b4d2_Const>>()) {
			_case_begin_22dc1d1d7:;
			{
				jule::Ptr<_228d7b4d2_Const> _40613_c = _40340_i.get()._field_expr.operator jule::Ptr<_228d7b4d2_Const>();;
				return (_228dd9d37_is_bool(_40613_c.ptr()) && _228dd798e_read_bool(_40613_c.ptr()));
			}
		}
		_match_end_22dc1d02d:;
	};
	return false;
}



inline jule::Bool _22782daac_is_unreachable_expr(jule::Any& _41225_expr) {
	{
		auto &_match_expr{ _41225_expr };
		
		if (_match_expr.type_is<jule::Ptr<_228d7b4d2_Const>>()) {
			_case_begin_22dc1db22:;
			{
				jule::Ptr<_228d7b4d2_Const> _41513_c = _41225_expr.operator jule::Ptr<_228d7b4d2_Const>();;
				return (_228dd9d37_is_bool(_41513_c.ptr()) && (!(_228dd798e_read_bool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_228ddea40_BinopExprModel>>()) {
			_case_begin_22dc1db88:;
			{
				jule::Ptr<_228ddea40_BinopExprModel> _41813_m = _41225_expr.operator jule::Ptr<_228ddea40_BinopExprModel>();;
				if ((_41813_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return (_22782daac_is_unreachable_expr(_41813_m.get()._field_left.get()._field_model) || _22782daac_is_unreachable_expr(_41813_m.get()._field_right.get()._field_model));
				};
			}
		}
		_match_end_22dc1e11c:;
	};
	return false;
}



inline jule::Bool _22783161a_is_constant_valid_match_case(jule::Ptr<_2299bb42e_Case>& _42634_case) {
	{
		auto &expr = _42634_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_22dc21b69:;
		if (it != expr.end()) {
			jule::Ptr<_229a527d4_Data> &_42712_expr = *it;
			{
				if (((_229a53197_is_const(_42712_expr.ptr()) && _228dd9d37_is_bool(_42712_expr.get()._field_constant.ptr())) && _228dd798e_read_bool(_42712_expr.get()._field_constant.ptr()))) {
					return true;
				};
			}
			_iter_next_22dc21b69:;
			++it;
			goto _iter_begin_22dc21b69;
		}
		_iter_end_22dc21b69:;
	};
	return false;
}



inline jule::Bool _22783286e_is_unreachable_conditional_case(jule::Ptr<_2299b700c_If>& _43537_i) {
	return _22782daac_is_unreachable_expr(_43537_i.get()._field_expr);
}



inline jule::Bool _22783a657_is_unreachable_match_case(jule::Ptr<_2299bb42e_Case>& _43931_case) {
	{
		auto &expr = _43931_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_22dc2386e:;
		if (it != expr.end()) {
			jule::Ptr<_229a527d4_Data> &_44012_expr = *it;
			{
				if ((!(_22782daac_is_unreachable_expr(_44012_expr.get()._field_model)))) {
					return false;
				};
			}
			_iter_next_22dc2386e:;
			++it;
			goto _iter_begin_22dc2386e;
		}
		_iter_end_22dc2386e:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _227c2e782_check_for_bit_shift_opt(jule::Ptr<_228dde853_OperandExprModel>& _42729_l, jule::Ptr<_228dde853_OperandExprModel>& _42752_r) {
	jule::Bool _42776_ok = jule::Bool();
	jule::U64 _42786_x = jule::U64();
	if (((!(_2299b5e62_is_int(_229a7d755_to_str(_42729_l.get()._field_kind.ptr())))) || (!(_2299b5e62_is_int(_229a7d755_to_str(_42752_r.get()._field_kind.ptr())))))) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	{
		auto &_match_expr{ _42752_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228d7b4d2_Const>>()) {
			_case_begin_22dc5c512:;
			{
				goto _match_end_22dc5ced5;
			}
		}
		else {
			_case_begin_22dc5d128:;
			{
				_42776_ok = false;
				_42786_x = 0LLU;
				return std::make_tuple(_42776_ok,_42786_x);
			}
		}
		_match_end_22dc5ced5:;
	};
	_42786_x=static_cast<jule::U64>(_228dd8440_as_u64(_42752_r.get()._field_model.operator jule::Ptr<_228d7b4d2_Const>().ptr()));
	if (((_42786_x == 0LLU) || ((_42786_x & 1LL) != 0LLU))) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	jule::F64 _4419_j = _229905ea1_log2(static_cast<jule::F64>(static_cast<jule::F64>(_42786_x)));;
	jule::U64 _4429_z = static_cast<jule::U64>(_4419_j);;
	if ((static_cast<jule::F64>(_4429_z) != _4419_j)) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	_42776_ok = true;
	_42786_x = _4429_z;
	return std::make_tuple(_42776_ok,_42786_x);
}



inline void _227c36239_push_opt_level(jule::I64 _3223_level) {
	_2276e7547_COPY=(_3223_level >= static_cast<jule::I64>(1LL));
	_2276eba79_DEADCODE=(_3223_level >= static_cast<jule::I64>(1LL));
	_2276d77ce_APPEND=(_3223_level >= static_cast<jule::I64>(1LL));
	_227703465_MATH=(_3223_level >= static_cast<jule::I64>(1LL));
	_2277088bb_ACCESS=(_3223_level >= static_cast<jule::I64>(1LL));
	_2277218c3_INLINE=(_3223_level >= static_cast<jule::I64>(1LL));
	_2277290c3_PTR=(_3223_level >= static_cast<jule::I64>(1LL));
	_22772ae4e_COND=(_3223_level >= static_cast<jule::I64>(1LL));
}



inline void _22a5434d3_detect_enabled(void) {
	_22a4ae4c6_expr_enabled=(((_2277290c3_PTR || _227703465_MATH) || _2277088bb_ACCESS) || _22772ae4e_COND);
	_22a4b062b_scope_enabled=((_22772ae4e_COND || _2276d77ce_APPEND) || _2276e7547_COPY);
}



inline void _22a5c50d1_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_2273dd78d_exit(1LL);
}



inline jule::U64 _22ab9bc3a_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _22ab9c07b_unix_year_to_seconds(jule::U64 _26225_y, jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);;
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26225_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26243_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26225_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _22ab9c411_unix_month_to_seconds(jule::U64 _31926_m, jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_22dcd9c76:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_22dcd9dca:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_22dcd9e41:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_22dcd9ea7:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_22dcda01d:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_22dcda084:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_22dcda0ea:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_22dcda161:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_22dcda1c7:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_22dcda23d:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_22dcda2b5:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_22dcd9c21:;
	};
	if ((_31939_leap && (_31926_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _22ab214d9_is_copy_optimizable(jule::Ptr<_229a527d4_Data>& _74125_expr) {
	if ((!(_74125_expr.get()._field_lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _74125_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_228de1349_SlicingExprModel>>()) {
			_case_begin_22dd6e7de:;
			{
				return false;
			}
		}
		_match_end_22dd6ed0b:;
	};
	return true;
}



inline jule::Bool _22ab21891_is_iter_copy_optimizable(jule::Ptr<_229a527d4_Data>& _75230_expr, jule::Ptr<_229a0a4a1_Var>& _75244_v) {
	if (((!(_75230_expr.get()._field_lvalue)) && (!(_229a7e756_mutable(_75230_expr.get()._field_kind.ptr()))))) {
		return true;
	};
	return ((!(_75244_v.get()._field_mutable)) && (!(_75230_expr.get()._field_mutable)));
}



inline jule::Str _22ab2e99d_decompose_common_esq(jule::U8 _114125_b) {
	{
		auto &_match_expr{ _114125_b };
		
		if (_match_expr == '\\') {
			_case_begin_22de207d5:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_22de2084b:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_22de20a9e:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_22de20b15:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_22de20b7b:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_22de20be2:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_22de20c69:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_22de20ce1:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_22de20d68:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_22de20de0:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_22de20670:;
			{
				return jule::Str();
			}
		}
		_match_end_22de205b5:;
	};
}



inline jule::Str _22ab2ec89_sbtoa(jule::U8 _116810_b) {
	if ((_116810_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_116810_b < 128LLU)) {
		jule::Str _117313_seq = _22ab2e99d_decompose_common_esq(_116810_b);;
		if ((!(_117313_seq.empty()))) {
			return _117313_seq;
		};
		if (((32LL <= _116810_b) && (_116810_b <= 126LLU))) {
			return static_cast<jule::Str>(_116810_b);
		};
	};
	jule::Str _11819_seq = _229934672_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_116810_b)),8LL);;
	if ((_11819_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11819_seq);
	};
	return (jule::Str("\\", 1) + _11819_seq);
}



inline jule::Str _22ab30031_cstr_bytes(jule::Slice<jule::U8> _118815_bytes) {
	jule::Str _118913_lit = jule::Str::alloc(_118815_bytes.len());;
	{
		auto &expr = _118815_bytes;
		auto it = expr.begin();
		_iter_begin_22de26478:;
		if (it != expr.end()) {
			jule::U8 &_119012_b = *it;
			{
				_118913_lit+=_22ab2ec89_sbtoa(_119012_b);
			}
			_iter_next_22de26478:;
			++it;
			goto _iter_begin_22de26478;
		}
		_iter_end_22de26478:;
	};
	return _118913_lit;
}



inline jule::Str _22ab30350_cstr_lit(jule::Slice<jule::U8> _119613_bytes) {
	return ((jule::Str("\"", 1) + _22ab30031_cstr_bytes(_119613_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _22ab3065d_ftoa(jule::F64 _12009_f, jule::I64 _120017_bitsize) {
	if ((_120017_bitsize != 32LL)) {
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::I64>(_12009_f)))) {
			return _22ab30905_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12009_f)));
		};
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::U64>(_12009_f)))) {
			return _22ab30b9c_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12009_f)));
		};
	};
	jule::Str _120913_m = _22936259a_fmt_float(_12009_f,'f',-1LL,_120017_bitsize);;
	if ((!(_2273838dc_contains(_120913_m,jule::Str(".", 1))))) {
		_120913_m+=jule::Str(".0", 2);
	};
	return _120913_m;
}



inline jule::Str _22ab30905_itoa(jule::I64 _12169_x) {
	{
		
		if ((_12169_x == jule::MAX_I64)) {
			_case_begin_22de2a5e2:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12169_x == jule::MIN_I64)) {
			_case_begin_22de2a67a:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_22de2a4c1:;
	};
	jule::Str _12249_fmt = _2299347a4_fmt_int(_12169_x,10LL);;
	if (_24094da4e_is_64bit(jule::Str("arm64", 5))) {
		return (_12249_fmt + jule::Str("LL", 2));
	};
	return (_12249_fmt + jule::Str("L", 1));
}



inline jule::Str _22ab30b9c_utoa(jule::U64 _12319_x) {
	{
		
		if ((_12319_x == jule::MAX_U64)) {
			_case_begin_22de2c418:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_22de2c308:;
	};
	jule::Str _12379_fmt = _229934672_fmt_uint(_12319_x,10LL);;
	if (_24094da4e_is_64bit(jule::Str("arm64", 5))) {
		return (_12379_fmt + jule::Str("LLU", 3));
	};
	return (_12379_fmt + jule::Str("LU", 2));
}



inline jule::Bool _22ab31054_is_forwarded(jule::Ptr<_2299b6c10_Scope>& _124418_s) {
	jule::Any _12459_last = _124418_s.get()._field_stmts[(_124418_s.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12459_last };
		
		if (_match_expr.type_is<jule::Ptr<_229a527d4_Data>>()) {
			_case_begin_22de2e6e5:;
			{
				{
					auto &_match_expr{ _12459_last.operator jule::Ptr<_229a527d4_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_228de3824_BuiltinErrorCallExprModel>>()) {
						_case_begin_22de3030b:;
						{
							return true;
						}
					}
					else {
						_case_begin_22de30295:;
						{
							return false;
						}
					}
					_match_end_22de2eecb:;
				};
			}
		}
		else {
			_case_begin_22de2e63a:;
			{
				return true;
			}
		}
		_match_end_22de2e5d5:;
	};
}



inline jule::Bool _22ab3131d_is_builtin_call_has_debuginf(jule::Ptr<_228de06bc_FnCallExprModel>& _125934_m) {
	if ((!(_228dea6b6_is_builtin(_125934_m.get()._field_func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _125934_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_228de2207_CommonSubIdentExprModel>>()) {
			_case_begin_22de31098:;
			{
				jule::Ptr<_228de2207_CommonSubIdentExprModel> _126513_csie = _125934_m.get()._field_expr.operator jule::Ptr<_228de2207_CommonSubIdentExprModel>();;
				return (_126513_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_22de2ec78:;
			{
				return false;
			}
		}
		_match_end_22de2ec23:;
	};
}



inline void _22aba22b2_iter_files(jule::Ptr<_2299d85a0_Package>& _100120_pkg, jule::Fn<void(jule::Ptr<_229a4ca76_SymbolTable>&)> _100135_f) {
	{
		auto &expr = _100120_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_22e06b645:;
		if (it != expr.end()) {
			jule::Ptr<_229a4ca76_SymbolTable> _100217_file = *it;
			{
				_100135_f(_100217_file);
			}
			_iter_next_22e06b645:;
			++it;
			goto _iter_begin_22e06b645;
		}
		_iter_end_22e06b645:;
	};
}



inline void _22aba2515_prepare_structure(jule::Ptr<_228d188c0_Struct>& _100727_s) {
	{
		auto &expr = _100727_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_22e06c25b:;
		if (it != expr.end()) {
			jule::Ptr<_228d44c1a_StructIns> _100817_ins = *it;
			{
				{
					auto &expr = _100817_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_22e06c976:;
					if (it != expr.end()) {
						jule::Ptr<_228de6cbc_Fn> _100921_m = *it;
						{
							if (_100921_m.get()._field_statically) {
								goto _iter_next_22e06c976;
							};
							{
								auto &expr = _100921_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_22e06d757:;
								if (it != expr.end()) {
									jule::Ptr<_228de996d_FnIns> _101325_mins = *it;
									{
										jule::Ptr<_228de8a9e_ParamIns> _101425_p = _101325_mins.get()._field_params[0LL];;
										if ((!(_228de5d21_is_ref(_101425_p.get()._field_decl.ptr())))) {
											_101425_p.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_22aba34c2_CustomType>(_22aba34c2_CustomType{._field_kind=static__22aba4d75_as_ptr(static__22aba8373_kind(_101425_p.get()._field_kind))}), 13)});
										} else {
											_101425_p.get()._field_kind=jule::new_ptr<_229a7d359_TypeKind>(_229a7d359_TypeKind{._field_kind=jule::Trait<_229a7ce2a_Kind>(jule::new_ptr<_22aba34c2_CustomType>(_22aba34c2_CustomType{._field_kind=static__22aba8373_kind(_101425_p.get()._field_kind)}), 13)});
										};
									}
									_iter_next_22e06d757:;
									++it;
									goto _iter_begin_22e06d757;
								}
								_iter_end_22e06d757:;
							};
						}
						_iter_next_22e06c976:;
						++it;
						goto _iter_begin_22e06c976;
					}
					_iter_end_22e06c976:;
				};
			}
			_iter_next_22e06c25b:;
			++it;
			goto _iter_begin_22e06c25b;
		}
		_iter_end_22e06c25b:;
	};
}



inline jule::Str _22aba27ac_concat_all_parts(jule::Slice<jule::Ptr<_2276b1a1c_Token>> _103421_parts) {
	jule::I64 _103513_n = 0LL;;
	{
		auto &expr = _103421_parts;
		auto it = expr.begin();
		_iter_begin_22e06c778:;
		if (it != expr.end()) {
			jule::Ptr<_2276b1a1c_Token> &_103612_part = *it;
			{
				_103513_n+=_103612_part.get()._field_kind.len();
			}
			_iter_next_22e06c778:;
			++it;
			goto _iter_begin_22e06c778;
		}
		_iter_end_22e06c778:;
	};
	if ((_103513_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _104213_s = jule::Str::alloc(_103513_n);;
	{
		auto &expr = _103421_parts;
		auto it = expr.begin();
		_iter_begin_22e07221c:;
		if (it != expr.end()) {
			jule::Ptr<_2276b1a1c_Token> &_104312_p = *it;
			{
				_104213_s+=_104312_p.get()._field_kind;
			}
			_iter_next_22e07221c:;
			++it;
			goto _iter_begin_22e07221c;
		}
		_iter_end_22e07221c:;
	};
	return _104213_s;
}



inline jule::Ptr<_228ce499a_Directive> _22abaabd3_find_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>& _32924_directives, jule::Str _32955_tag) {
	{
		auto &expr = _32924_directives;
		auto it = expr.begin();
		_iter_begin_22d4724db:;
		if (it != expr.end()) {
			jule::Ptr<_228ce499a_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_tag.get()._field_kind == _32955_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_22d4724db:;
			++it;
			goto _iter_begin_22d4724db;
		}
		_iter_end_22d4724db:;
	};
	return nullptr;
}



inline jule::Bool _22abab068_has_directive(jule::Slice<jule::Ptr<_228ce499a_Directive>>& _33919_directives, jule::Str _33950_tag) {
	return (_22abaabd3_find_directive(_33919_directives,_33950_tag) != nullptr);
}



inline void _240914d34_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _24092a3cc_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_240914d34_print_error_message((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _2409347e3_HELP_MAP[0LL][0LL].len();;
	{
		auto &expr = _2409347e3_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_22e109a68:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_22e109a68:;
			++it;
			goto _iter_begin_22e109a68;
		}
		_iter_end_22e109a68:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _2409347e3_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_22e10b6d5:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_227315ab1_repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_22e10b6d5:;
			++it;
			_519_i++;
			goto _iter_begin_22e10b6d5;
		}
		_iter_end_22e10b6d5:;
	};
	jule::outln(_4913_s);
}



inline void _24092bc91_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_240914d34_print_error_message((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _24092c4de_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _24094bbb2_DISTOS;
		auto it = expr.begin();
		_iter_begin_22e10eb5b:;
		if (it != expr.end()) {
			jule::Str &_7412_os = *it;
			{
				jule::out(_7412_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_22e10eb5b:;
			++it;
			goto _iter_begin_22e10eb5b;
		}
		_iter_end_22e10eb5b:;
	};
	jule::outln(jule::Str());
}



inline void _24092cc3c_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _24094c047_DISTARCH;
		auto it = expr.begin();
		_iter_begin_22e110398:;
		if (it != expr.end()) {
			jule::Str &_8412_arch = *it;
			{
				jule::out(_8412_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_22e110398:;
			++it;
			goto _iter_begin_22e110398;
		}
		_iter_end_22e110398:;
	};
	jule::outln(jule::Str());
}



inline void _24092d48a_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9210_args.len() > 3LL)) {
		_240914d34_print_error_message((jule::Str("invalid command: ", 17) + _9210_args[3LL]));
		return;;
	};
	jule::Str _1039_cmd = _9210_args[2LL];;
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_22e113588:;
			{
				_24092c4de_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_22e11327a:;
			{
				_24092cc3c_tool_distarch();
			}
		}
		else {
			_case_begin_22e111a4d:;
			{
				_240914d34_print_error_message((jule::Str("undefined command: ", 19) + _1039_cmd));
			}
		}
		_match_end_22e1130b0:;
	};
}



inline void _24092dbd8_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_240914d34_print_error_message((jule::Str("invalid command: ", 17) + _11512_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln((jule::Str("default compiler: ", 18) + _23e692123_COMPILER));
	jule::outln((jule::Str("default C++ standard: ", 22) + _23e74c981_CPP_STD));
}



inline void _240915c36_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1289_args.len() > 3LL)) {
		_240914d34_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_22e117aed:;
			{
				({
					auto except = static__23e898eea_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_240914d34_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_22e116426:;
			{
				_240914d34_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[2LL]));
			}
		}
		_match_end_22e11768b:;
	};
}



inline jule::Bool _24093a6b7_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_22e118d52:;
			{
				_24092a3cc_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_22e118db8:;
			{
				_24092bc91_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_22e118e2e:;
			{
				_24092d48a_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_22e119616:;
			{
				_24092dbd8_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_22e11967c:;
			{
				_240915c36_mod(_15121_args);
			}
		}
		else {
			_case_begin_22e118c75:;
			{
				return false;
			}
		}
		_match_end_22e118ba9:;
	};
	return true;
}



inline void _240933da8_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _240641335_args();;
	if ((_18713_args.len() < 2LL)) {
		_240933da8_show_info();
		return;;
	};
	if (_24093a6b7_process_command(_18713_args)) {
		return;;
	};
	_22abdde47_compile_command(_18713_args);
}



inline void _22a64e677_init(void) {
	_23e692123_COMPILER=jule::Str("clang", 5);
}



inline jule::Ptr<_2405a4441_File> _22a9e7d0b_open_output(jule::Str& _4817_path) {
	jule::Str _499_dir = _2273895a2_dir(_4817_path);;
	({
		auto except = static__23e803729_of(_499_dir);
		if (!except.ok()) {
			({
				auto except = static__22738bae3_create(_499_dir);
				if (!except.ok()) {
					_22a5c50d1_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__23e89636b_create(_4817_path);
		(except.ok()) ? (except.result) : ({
			_22a5c50d1_throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _22abaeba4_clear_objects(void) {
	({
		auto except = static__23e7eea33_remove(_22a9e716d_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__22738bd02_remove(_22abac498_OUT_DIR);
}



inline void _22abb1755_compile_ir(jule::Str _7715_compiler, jule::Str _7730_compiler_cmd) {
	jule::Ptr<_2273d9833_Cmd> _7813_cmd = static__2273d9c62_new(_7715_compiler);;
	_7813_cmd.get()._field_args=jule::Slice<jule::Str>::make({_7715_compiler});
	_7813_cmd.get()._field_args=jule::append(_7813_cmd.get()._field_args,_22738359b_split(_7730_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _819_status = ({
		auto except = _2273d9ec6_spawn(_7813_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_22e122003:;
					{
						static__22a5c2881_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_22e1217c7:;
					{
						static__22a5c2881_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_22e121a3b:;
					{
						static__22a5c2881_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_22e121aa2:;
					{
						static__22a5c2881_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_22e12191a:;
					{
						static__22a5c2881_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_22e121860:;
			};
			_22a5c50d1_throw(jule::Str());
			0LL;
		});
	});;
	if ((_819_status != 0LL)) {
		jule::Str _9813_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _23e692123_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__22a5c2881_print(jule::Str("\033[31m", 5),_9813_error_message);
		_22a5c50d1_throw(jule::Str());
	};
	_22abaeba4_clear_objects();
}



inline jule::Bool _22abbc93c_is_cpp_source_file(jule::Str _10923_path) {
	jule::I64 _1109_offset = _227382952_find_last_byte(_10923_path,'.');;
	if ((_1109_offset == -1LL)) {
		return false;
	};
	return _24093c19c_is_valid_cpp_ext(_10923_path.slice(_1109_offset));
}



inline void _22abad015_push_comp_cmd_clang(jule::Str& _11729_cmd) {
	_11729_cmd+=jule::Str("-Wno-everything ", 16);
	_11729_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _23e74c981_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_22e12690e:;
			{
				_11729_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_22e126975:;
			{
				_11729_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_22e126ac9:;
			{
				_11729_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_22e1267bb:;
	};
	_11729_cmd+=jule::Str(" ", 1);
	if (_23e74dd17_PRODUCTION) {
		_11729_cmd+=jule::Str("-O3 ", 4);
		_11729_cmd+=jule::Str("-flto ", 6);
		_11729_cmd+=jule::Str("-DNDEBUG ", 9);
		_11729_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11729_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _22abab2aa_push_comp_cmd_gcc(jule::Str& _14327_cmd) {
	_14327_cmd+=jule::Str("-w ", 3);
	_14327_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _23e74c981_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_22e12914d:;
			{
				_14327_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_22e1291b4:;
			{
				_14327_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_22e129318:;
			{
				_14327_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_22e12900a:;
	};
	_14327_cmd+=jule::Str(" ", 1);
	if (_23e74dd17_PRODUCTION) {
		_14327_cmd+=jule::Str("-O3 ", 4);
		_14327_cmd+=jule::Str("-DNDEBUG ", 9);
		_14327_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14327_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _22a94cb73_gen_compile_cmd(jule::Str _16920_source_path, jule::Ptr<_22a0e7571_IR>& _16939_ir) {
	jule::Str &_17010_compiler = _23e74c71c_COMPILER_PATH;;
	jule::Str _17113_cmd = jule::Str::alloc(64LL);;
	{
		auto &_match_expr{ _23e692123_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_22e12ba57:;
			{
				_22abab2aa_push_comp_cmd_gcc(_17113_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_22e12c0a7:;
			{
				_22abad015_push_comp_cmd_clang(_17113_cmd);
			}
		}
		_match_end_22e12bd43:;
	};
	{
		auto &expr = _16939_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_22e12c3e8:;
		if (it != expr.end()) {
			jule::Str &_18112_pass = *it;
			{
				_17113_cmd+=_18112_pass;
				_17113_cmd+=jule::Str(" ", 1);
			}
			_iter_next_22e12c3e8:;
			++it;
			goto _iter_begin_22e12c3e8;
		}
		_iter_end_22e12c3e8:;
	};
	{
		auto &expr = _16939_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_22e12d7c3:;
		if (it != expr.end()) {
			jule::Ptr<_2299d5646_ImportInfo> &_18712_u = *it;
			{
				if ((_18712_u.get()._field_cpp_linked && _22abbc93c_is_cpp_source_file(_18712_u.get()._field_path))) {
					_17113_cmd+=_18712_u.get()._field_path;
					_17113_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_22e12d7c3:;
			++it;
			goto _iter_begin_22e12d7c3;
		}
		_iter_end_22e12d7c3:;
	};
	if ((!(_22abb3911_OUT.empty()))) {
		_17113_cmd+=jule::Str("-o ", 3);
		_17113_cmd+=_22abb3911_OUT;
		_17113_cmd+=jule::Str(" ", 1);
	};
	_17113_cmd+=_16920_source_path;
	return std::make_tuple(_17010_compiler,_17113_cmd);
}



inline jule::Str _22a9e716d_get_compile_path(void) {
	return _227388947_join(jule::Slice<jule::Str>::make({_22abac498_OUT_DIR,_22abb1e1a_OUT_NAME}));
}



inline void _22a7c1b4b_apply_target_independent_optimizations(jule::Ptr<_22a0e7571_IR>& _21048_ir) {
	jule::Ptr<_22a577836_Optimizer> _21213_opt = static__22a4dae81_new(_21048_ir);;
	_22a541ca6_optimize(_21213_opt.ptr());
}



inline void _22a9ea0a5_check_compiler_flag(void) {
	{
		auto &_match_expr{ _23e692123_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_22e130792:;
			{
				_22a5c50d1_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_22e130ece:;
			{
				if (_23e74c71c_COMPILER_PATH.empty()) {
					_23e74c71c_COMPILER_PATH=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_22e131045:;
			{
				if (_23e74c71c_COMPILER_PATH.empty()) {
					_23e74c71c_COMPILER_PATH=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_22e130e68:;
			{
				_22a5c50d1_throw((jule::Str("invalid option value for --compiler: ", 37) + _23e692123_COMPILER));
			}
		}
		_match_end_22e130b9e:;
	};
}



inline void _22abb86e6_check_target_arch(jule::Str _23322_arch) {
	{
		auto &expr = _24094c047_DISTARCH;
		auto it = expr.begin();
		_iter_begin_22e132c4a:;
		if (it != expr.end()) {
			jule::Str &_23412_distarch = *it;
			{
				if ((_23322_arch == _23412_distarch)) {
					return;;
				};
			}
			_iter_next_22e132c4a:;
			++it;
			goto _iter_begin_22e132c4a;
		}
		_iter_end_22e132c4a:;
	};
	_22a5c50d1_throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _23322_arch));
}



inline void _22abdd397_check_target_os(jule::Str _24220_os) {
	{
		auto &expr = _24094bbb2_DISTOS;
		auto it = expr.begin();
		_iter_begin_22e133e9e:;
		if (it != expr.end()) {
			jule::Str &_24312_distos = *it;
			{
				if ((_24220_os == _24312_distos)) {
					return;;
				};
			}
			_iter_next_22e133e9e:;
			++it;
			goto _iter_begin_22e133e9e;
		}
		_iter_end_22e133e9e:;
	};
	_22a5c50d1_throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _24220_os));
}



inline void _22abdd4c9_check_target_flag(jule::Str& _25123_target) {
	if (_25123_target.empty()) {
		_22a5c50d1_throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2569_parts = _22738359b_split(_25123_target,jule::Str("-", 1),-1LL);;
	if ((_2569_parts.len() != 2LL)) {
		_22a5c50d1_throw((jule::Str("--target: undefined platform target format: ", 44) + _25123_target));
	};
	jule::Str _26110_os = _2569_parts[0LL];;
	jule::Str _26114_arch = _2569_parts[1LL];;
	std::tie(_26110_os,_26114_arch) = std::make_tuple(_2569_parts[0LL],_2569_parts[1LL]);
	if ((_26110_os != jule::Str("native", 6))) {
		_22abdd397_check_target_os(_26110_os);
		_2273d8469_OS=_26110_os;
	};
	if ((_26114_arch != jule::Str("native", 6))) {
		_22abb86e6_check_target_arch(_26114_arch);
		_2273c78cb_ARCH=_26114_arch;
	};
	_2299ab375_update_target();
}



inline void _22abdd60b_check_opt_flag(jule::Str& _27420_opt) {
	if (_27420_opt.empty()) {
		_22a5c50d1_throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _27420_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_22e1386ac:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_22e138c0c:;
			{
				_227c36239_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_22e13848c:;
			{
				_22a5c50d1_throw((jule::Str("--opt: invalid optimization level: ", 35) + _27420_opt));
			}
		}
		_match_end_22e138437:;
	};
}



inline void _22abdd96e_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _23e74c981_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_22e138c73:;
			{
				goto _match_end_22e139a76;
			}
		}
		else {
			_case_begin_22e13968b:;
			{
				_22a5c50d1_throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _23e74c981_CPP_STD));
			}
		}
		_match_end_22e139a76:;
	};
}



inline jule::Slice<jule::Str> _22abddaa1_check_flags(jule::Slice<jule::Str>& _29917_args) {
	jule::Str _30013_opt = jule::Str("L0", 2);;
	jule::Str _30113_target = jule::Str("native-native", 13);;
	jule::Ptr<_22abd95b3_FlagSet> _30313_fs = static__22abd989e_new();;
	_22e13c150_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30013_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_22e13c150_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30113_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_22e13c150_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22abb3911_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23e74cbe5_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23e74cec0_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_22e13c150_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23e692123_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_22e13c150_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23e74c71c_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23e74dd17_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23e74d5db_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23e74da09_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_22e13c150_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23e74c981_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2276e7547_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2276eba79_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2276d77ce_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_227703465_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2277088bb_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2277218c3_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2277290c3_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_22e145c80_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22772ae4e_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _32513_content = ({
		auto except = _22abda6b3_parse(_30313_fs.ptr(), _29917_args);
		(except.ok()) ? (except.result) : ({
			_22a5c50d1_throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_22a9ea0a5_check_compiler_flag();
	_22abdd96e_check_cpp_std_flag();
	_22abdd4c9_check_target_flag(_30113_target);
	_22abdd60b_check_opt_flag(_30013_opt);
	return _32513_content;
}



inline void _22abddbd3_setup_sema_flags(jule::I64& _33826_flags) {
	if (_23e74cbe5_SHADOWING) {
		_33826_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_22a0e7571_IR> _22abddd15_build_ir(jule::Slice<jule::Str>& _34414_args) {
	jule::Slice<jule::Str> _3459_content = _22abddaa1_check_flags(_34414_args);;
	jule::I64 _34713_sema_flags = static_cast<jule::I64>(0LL);;
	_22abddbd3_setup_sema_flags(_34713_sema_flags);
	if ((_3459_content.len() == 0LL)) {
		_22a5c50d1_throw(_240948be2_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3459_content.len() > 1LL)) {
		_22a5c50d1_throw((jule::Str("undefined content: ", 19) + _3459_content[1LL]));
	};
	jule::Str _35514_path;;
	jule::Bool _35520_ok;;
	std::tie(_35514_path,_35520_ok) = _227388e86_abs(_3459_content[0LL]);
	if ((!(_35520_ok))) {
		_22a5c50d1_throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2405a4809_Status> _3619_inf = ({
		auto except = static__23e803729_of(_2273c7c61_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_22a5c50d1_throw(_240948be2_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_2405a4809_Status>();});
	});;
	if ((!(_23e7eb755_is_dir(_3619_inf.ptr())))) {
		_22a5c50d1_throw(_240948be2_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_22a0e7571_IR> _36914_ir;;
	jule::Slice<_2409487a2_Log> _36918_logs;;
	std::tie(_36914_ir,_36918_logs) = static__229c983ed_build(_35514_path,_34713_sema_flags);
	if (((_36914_ir == nullptr) && (_36918_logs == nullptr))) {
		_22a5c50d1_throw(_240948be2_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_35514_path)})));
	};
	if ((_36918_logs != nullptr)) {
		static__22a5c4663_print_logs(_36918_logs);
		_22a5c50d1_throw(jule::Str());
	};
	return _36914_ir;
}



inline void _22abdde47_compile_command(jule::Slice<jule::Str>& _38425_args) {
	_38425_args=_38425_args.slice(1LL);
	if ((_38425_args[0LL] == jule::Str("test", 4))) {
		_23e74d2cd_TEST=true;
		_38425_args=_38425_args.slice(1LL);
	};
	jule::Ptr<_22a0e7571_IR> _39013_ir = _22abddd15_build_ir(_38425_args);;
	;
	if ((!(_23e74d2cd_TEST))) {
		jule::Ptr<_228de6cbc_Fn> _39517_main = _2299d9d54_find_fn(_39013_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
		if ((_39517_main == nullptr)) {
			_22a5c50d1_throw(_240948be2_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_22a7c1b4b_apply_target_independent_optimizations(_39013_ir);
	_22a0bc06d_order(_39013_ir.ptr());
	jule::Str _40610_compiler;;
	jule::Str _40620_compiler_cmd;;
	std::tie(_40610_compiler,_40620_compiler_cmd) = _22a94cb73_gen_compile_cmd(_22a9e716d_get_compile_path(),_39013_ir);
	jule::Ptr<_22ab9c950_ObjectCoder> _40813_oc = static__22ab80977_new(_39013_ir,_22ab9c576_SerializationInfo{._field_compiler=_40610_compiler, ._field_compiler_command=_40620_compiler_cmd});;
	if (_23e74d2cd_TEST) {
		jule::Ptr<_22ab32d36_TestCoder> _41317_tc = static__22ab332a9_new(_40813_oc);;
		_22ab344db_serialize(_41317_tc);
	} else {
		_22aba1e4e_serialize(_40813_oc);
	};
	jule::Str _4199_path = _22a9e716d_get_compile_path();;
	jule::Ptr<_2405a4441_File> _42013_file = _22a9e7d0b_open_output(_4199_path);;
	({
		auto except = _23e8015b2_write(_42013_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40813_oc.get()._field_obj));
		if (!except.ok()) {
			_22a5c50d1_throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _23e89756a_close(_42013_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:424:5"));
	});
	if ((!(_23e74cec0_TRANSPILATION))) {
		_22abb1755_compile_ir(_40610_compiler,_40620_compiler_cmd);
	};
}



void __jule_call_initializers(void) {
	_24095ae13_init();
	_2299ab4da_init();
	_22a64e677_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}